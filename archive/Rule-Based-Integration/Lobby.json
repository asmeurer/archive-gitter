[
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "First, about the domain: Unfortunately, my provider doesn&#39;t let me register such a domain. I also checked a US-based provider who also says that such a domain cannot be registered. ",
  "id": "5b107d055410274b828316a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-05-31T22:53:57.311Z",
  "text": "First, about the domain: Unfortunately, my provider doesn't let me register such a domain. I also checked a US-based provider who also says that such a domain cannot be registered. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "No problem.  We can go with your name.",
  "id": "5b107d3599fa7f4c0635a4cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-05-31T22:54:45.274Z",
  "text": "No problem.  We can go with your name.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "We can do this later and it&#39;s not a pressing matter right now. Let me answer your other questions.",
  "id": "5b107d355410274b828316a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-05-31T22:54:45.357Z",
  "text": "We can do this later and it's not a pressing matter right now. Let me answer your other questions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<blockquote>\n Undoubtedly this will entail some expenses,<br>including domain name registration, hosting services, etc.  Perhaps<br>we could set up a bank account you could draw on to cover such<br>expenses.</blockquote>\n",
  "id": "5b107d5387270d64d8254ea4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-05-31T22:55:15.399Z",
  "text": ">  Undoubtedly this will entail some expenses,\n> including domain name registration, hosting services, etc.  Perhaps\n> we could set up a bank account you could draw on to cover such\n> expenses.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Nope, no expenses. We are doing open-source and we get everything for free.",
  "id": "5b107d6887270d64d8254ea6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-05-31T22:55:36.646Z",
  "text": "Nope, no expenses. We are doing open-source and we get everything for free.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Hosting of the repository, the wiki, issues, this chat, etc.. doesn&#39;t cost a dime.",
  "id": "5b107d893d04e976cade6ff4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-05-31T22:56:09.408Z",
  "text": "Hosting of the repository, the wiki, issues, this chat, etc.. doesn't cost a dime.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "So, at the moment the <a href=\"https://github.com/RuleBasedIntegration/Rubi\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Rubi repository</a> is still empty. I would start by adding your latest online version 4.15.2 to it. Not right now, but probably over the weekend.",
  "id": "5b107e0687270d64d8254ea8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-05-31T22:58:14.632Z",
  "text": "So, at the moment the [Rubi repository](https://github.com/RuleBasedIntegration/Rubi) is still empty. I would start by adding your latest online version 4.15.2 to it. Not right now, but probably over the weekend.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/RuleBasedIntegration/Rubi"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "That would be great.  The notebook source for Rubi needs to be updated before moving to the Rubi repository.",
  "id": "5b107e70b6eece791dcc60fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-05-31T23:00:00.803Z",
  "text": "That would be great.  The notebook source for Rubi needs to be updated before moving to the Rubi repository.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "So can the RuleBaseIntegration organization on GitHub serve as a Rubi website?",
  "id": "5b10822616f6496124f81d20",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-05-31T23:15:50.632Z",
  "text": "So can the RuleBaseIntegration organization on GitHub serve as a Rubi website?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Yes.",
  "id": "5b1082316a6a885d258bdd0c",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-05-31T23:16:01.467Z",
  "text": "@AlbertRich Yes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "So how do I make the Rubi source files available at RuleBasedIntegration?",
  "id": "5b1082caedd06f7d15fcf8ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-05-31T23:18:34.371Z",
  "text": "So how do I make the Rubi source files available at RuleBasedIntegration?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> For communicating documentation and explaining things, I would like to use <a href=\"https://github.com/RuleBasedIntegration/Rubi/wiki\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">our wiki</a>. It is currently empty, but it can have a nice nested navigation and it is increadibly easy to edit. ",
  "id": "5b1082fb87270d64d8254eb8",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-05-31T23:19:23.609Z",
  "text": "@AlbertRich For communicating documentation and explaining things, I would like to use [our wiki](https://github.com/RuleBasedIntegration/Rubi/wiki). It is currently empty, but it can have a nice nested navigation and it is increadibly easy to edit. ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/RuleBasedIntegration/Rubi/wiki"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Great!  Are you willing to do that when time permits?",
  "id": "5b10832b93dc78791c9fbcdb",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-05-31T23:20:11.687Z",
  "text": "@halirutan Great!  Are you willing to do that when time permits?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Yes, I will at least start to incorporate everything. Nevertheless, you should also make edits! This is where markdown comes into play. It is basically only text but the output allows for everything that we need. The Rubi wiki could then look like <a href=\"https://github.com/halirutan/Mathematica-IntelliJ-Plugin/wiki\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">this here</a> which is exactly the same, only for my Mathematica plugin for IntelliJ.",
  "id": "5b1083c35410274b828316b6",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-05-31T23:22:43.521Z",
  "text": "@AlbertRich Yes, I will at least start to incorporate everything. Nevertheless, you should also make edits! This is where markdown comes into play. It is basically only text but the output allows for everything that we need. The Rubi wiki could then look like [this here](https://github.com/halirutan/Mathematica-IntelliJ-Plugin/wiki) which is exactly the same, only for my Mathematica plugin for IntelliJ.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/halirutan/Mathematica-IntelliJ-Plugin/wiki"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> How did you update text and documentation on your current website?",
  "id": "5b1084da3d04e976cade700d",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-05-31T23:27:22.315Z",
  "text": "@AlbertRich How did you update text and documentation on your current website?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Ok.  Let&#39;s start with the Rubi 4.15.2 runtime system you talked about earlier.  Then we can think about how to present the Rubi notebook source files and Rubi test suite files. ",
  "id": "5b108500c712f561254b3b90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-05-31T23:28:00.595Z",
  "text": "Ok.  Let's start with the Rubi 4.15.2 runtime system you talked about earlier.  Then we can think about how to present the Rubi notebook source files and Rubi test suite files. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "The source and test suite files on the current website are out-of-date.  I will spend the day updating them to version 4.15.2.",
  "id": "5b10852293dc78791c9fc2dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-05-31T23:28:34.005Z",
  "text": "The source and test suite files on the current website are out-of-date.  I will spend the day updating them to version 4.15.2.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Yes, first things first.",
  "id": "5b10853a6a6a885d258bdd0f",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-05-31T23:28:58.730Z",
  "text": "@AlbertRich Yes, first things first.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Sounds good.  Let me know what you need from the current website.",
  "id": "5b108565a7abc8692efdd18b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-05-31T23:29:41.621Z",
  "text": "Sounds good.  Let me know what you need from the current website.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> There are two ways. Either, I use a tool to download your complete site or you simply pack all the updated stuff into a <code>zip</code> and make it available to me.",
  "id": "5b1085af7b8848507c40ed6b",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-05-31T23:30:55.215Z",
  "text": "@AlbertRich There are two ways. Either, I use a tool to download your complete site or you simply pack all the updated stuff into a `zip` and make it available to me.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "If it is large, you can send it by using <a href=\"https://wetransfer.com/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">wetransfer.com</a>. This let&#39;s you share up to 2GB which should be enough.",
  "id": "5b1085e5e9ffd808a27633b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-05-31T23:31:49.581Z",
  "text": "If it is large, you can send it by using [wetransfer.com](https://wetransfer.com/). This let's you share up to 2GB which should be enough.",
  "unread": false,
  "urls": [
   {
    "url": "https://wetransfer.com/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "I will send you zip files of the various components of the current website as soon as I update them. ",
  "id": "5b10861b4eaffb692d704a40",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-05-31T23:32:43.143Z",
  "text": "I will send you zip files of the various components of the current website as soon as I update them. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> OK. If I have looked over everything, I will think about a good file structure for everything. We pack the Rubi sources, the test files and probably example notebooks into the repository. I will think about what we do with all your PDFs that describe the rules.",
  "id": "5b10868fc453d663fb9e5ef7",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-05-31T23:34:39.448Z",
  "text": "@AlbertRich OK. If I have looked over everything, I will think about a good file structure for everything. We pack the Rubi sources, the test files and probably example notebooks into the repository. I will think about what we do with all your PDFs that describe the rules.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Again, I really appreciate your taking an interest in making Rubi widely accessible, and look forward to collaborating with you.   Thanks and aloha, Albert",
  "id": "5b1086f6b6eece791dcc799b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-05-31T23:36:22.097Z",
  "text": "Again, I really appreciate your taking an interest in making Rubi widely accessible, and look forward to collaborating with you.   Thanks and aloha, Albert",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> About your question. There is a major difference between <code>rule_:&quot;Rule1&quot;</code> and <code>rule:&quot;Rule1&quot;</code>.",
  "id": "5b13d4bf33934f30b5584ca6",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T11:45:03.313Z",
  "text": "@AlbertRich About your question. There is a major difference between `rule_:\"Rule1\"` and `rule:\"Rule1\"`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "The first one is <code>Optional[Pattern[rule,Blank[]],&quot;Rule1&quot;]</code> and the latter one <code>Pattern[rule,&quot;Rule1&quot;]</code>. So while the <code>rule</code> is optional in the first case, the second case means &quot;only match if <code>rule</code> is <code>&quot;Rule1&quot;</code>.",
  "id": "5b13d53d3478d921d8e7998e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T11:47:09.700Z",
  "text": "The first one is `Optional[Pattern[rule,Blank[]],\"Rule1\"]` and the latter one `Pattern[rule,\"Rule1\"]`. So while the `rule` is optional in the first case, the second case means \"only match if `rule` is `\"Rule1\"`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-03T11:49:32.945Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "(btw, that makes my argumentation from the first mail flawed, because a test <code>rule === &quot;Rule1&quot;</code> will always return true and we cannot decide if the user supplied the string or omitted it)",
  "id": "5b13d5c72aaf984b0bccc6f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T11:49:27.257Z",
  "text": "(btw, that makes my argumentation from the first mail flawed, because a test `rule === \"Rule1\"` will always return true and we cannot decide if the user supplied the string or omitted it)",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Still, there are two major advantages over your If/Else constructs. In your If/Else approach, your definitions look like <code>LinearInt[a,b,c,d,x]</code> but the question is how do you convert from a user&#39;s input <code>Int[x+b*x,x]</code> to the appropriate rule? This happens automatically with the <em>type</em>-approach because each <code>Int</code> rule matches even without the type information. It will only be faster, if you have the type. So you have speed and generality in one method.",
  "id": "5b13d8b293ebdb67efabeea7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T12:01:54.221Z",
  "text": "Still, there are two major advantages over your If/Else constructs. In your If/Else approach, your definitions look like `LinearInt[a,b,c,d,x]` but the question is how do you convert from a user's input `Int[x+b*x,x]` to the appropriate rule? This happens automatically with the *type*-approach because each `Int` rule matches even without the type information. It will only be faster, if you have the type. So you have speed and generality in one method.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> ",
  "id": "5b141ac522a05f5e71f96c1f",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T16:43:49.751Z",
  "text": "@halirutan ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "If I define Foo as  Foo[rule:&quot;fum&quot;, u_, x_Symbol] := {rule, u, x} then Foo[a,b] returns Foo[a,b] since it does not match &quot;even without the type information&quot; like you say above.  What gives?",
  "id": "5b141b80b6eece791dd6cac6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T16:46:56.014Z",
  "text": "If I define Foo as  Foo[rule:\"fum\", u_, x_Symbol] := {rule, u, x} then Foo[a,b] returns Foo[a,b] since it does not match \"even without the type information\" like you say above.  What gives?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Please look carefully. The difference is the underscore.",
  "id": "5b14233a93ebdb67efabeeed",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T17:19:54.421Z",
  "text": "@AlbertRich Please look carefully. The difference is the underscore.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\">Foo[rule_: <span class=\"string\">\"fum\"</span>, u_, x_Symbol] := <span class=\"list\">{rule, u, x}</span>;\nFoo[a, b]\n\n<span class=\"comment\">(* Out[9]= {\"fum\", a, b} *)</span></code></pre>",
  "id": "5b1423883478d921d8e799d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T17:21:12.140Z",
  "text": "```mma\nFoo[rule_: \"fum\", u_, x_Symbol] := {rule, u, x};\nFoo[a, b]\n\n(* Out[9]= {\"fum\", a, b} *)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Yes, I see the underscore.Please define a Foo such that Foo[a,b] returns {a,b} but Foo[&quot;bar&quot;,a,b] returns as is.",
  "id": "5b1426ff4eaffb692d7ab530",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T17:35:59.245Z",
  "text": "Yes, I see the underscore.Please define a Foo such that Foo[a,b] returns {a,b} but Foo[\"bar\",a,b] returns as is.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "and Foo[&quot;fum&quot;,a,b] returns {a,b}.",
  "id": "5b142731ba1a351a68e80df6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T17:36:49.497Z",
  "text": "and Foo[\"fum\",a,b] returns {a,b}.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Basically I want a function that matches if the type matches or if no type is given, but does NOT match if the wrong type is given.",
  "id": "5b14291e352b9e1a4b5625e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T17:45:02.962Z",
  "text": "Basically I want a function that matches if the type matches or if no type is given, but does NOT match if the wrong type is given.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Here:",
  "id": "5b14297ed6e73b405bae33d3",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T17:46:38.768Z",
  "text": "@AlbertRich Here:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\"><span class=\"keyword\">ClearAll</span>[Foo];\nFoo[rule_: <span class=\"string\">\"fum\"</span>, u_, x_Symbol] := <span class=\"list\">{u, x}</span> /; rule =!= <span class=\"string\">\"bar\"</span>;\nFoo[a, b]\nFoo[<span class=\"string\">\"bar\"</span>, a, b]\nFoo[<span class=\"string\">\"fum\"</span>, a, b]</code></pre>",
  "id": "5b14298433934f30b5584cf2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T17:46:44.153Z",
  "text": "```mma\nClearAll[Foo];\nFoo[rule_: \"fum\", u_, x_Symbol] := {u, x} /; rule =!= \"bar\";\nFoo[a, b]\nFoo[\"bar\", a, b]\nFoo[\"fum\", a, b]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Or more general",
  "id": "5b1429ac7f403e5bbed3c14b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T17:47:24.223Z",
  "text": "Or more general",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\"><span class=\"keyword\">ClearAll</span>[Foo];\nFoo[rule_: <span class=\"string\">\"fum\"</span>, u_, x_Symbol] := <span class=\"list\">{u, x}</span> /; rule === <span class=\"string\">\"fum\"</span>;\nFoo[a, b]\nFoo[<span class=\"string\">\"bar\"</span>, a, b]\nFoo[<span class=\"string\">\"fum\"</span>, a, b]</code></pre>",
  "id": "5b1429bc2aaf984b0bccc75b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T17:47:40.752Z",
  "text": "```mma\nClearAll[Foo];\nFoo[rule_: \"fum\", u_, x_Symbol] := {u, x} /; rule === \"fum\";\nFoo[a, b]\nFoo[\"bar\", a, b]\nFoo[\"fum\", a, b]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Ah.  So I need to augment all my rules with conditions of the form rule===&lt;type&gt;.  Ug...",
  "id": "5b142ad2352b9e1a4b562b62",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T17:52:18.064Z",
  "text": "Ah.  So I need to augment all my rules with conditions of the form rule===<type>.  Ug...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> I&#39;m not sure of that. One major hinderance is that there are so many rules and it&#39;s impossible for me to catch up and understand everything. What would help, is probably to take only the rules for one specific integral (let&#39;s say 10). Then, we could try things out and see if they are nice and fast.",
  "id": "5b142b4e7f403e5bbed3c14d",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T17:54:22.554Z",
  "text": "@AlbertRich I'm not sure of that. One major hinderance is that there are so many rules and it's impossible for me to catch up and understand everything. What would help, is probably to take only the rules for one specific integral (let's say 10). Then, we could try things out and see if they are nice and fast.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "I need to prepare dinner for the kids, but I&#39;m back in an hour.",
  "id": "5b142bcd93ebdb67efabeef4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T17:56:29.382Z",
  "text": "I need to prepare dinner for the kids, but I'm back in an hour.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p>This is getting messy. How about making the type argument mandatory instead of optional for Rubi&#39;s existing rules. Then for each integrand type, add a single new generic, un-typed rule that merely recurs with the integrand type included. For example,</p><p>Int[(a<em>.+b</em>.<em>x<em>)^m</em>.</em>(c<em>.+d</em>.<em>x<em>)^n</em>., x_Symbol] :=<br>  Int[&quot;(a+b</em>x)^m<em>(c+d</em>x)^n&quot;, (a+b<em>x)^m</em>(c+d*x)^n, x] /;<br>FreeQ[{a,b,c,d,m,n},x]</p><p>Int[&quot;(a+b<em>x)^m</em>(c+d<em>x)^n&quot;, 1/((a<em>+b</em>.</em>x<em>)*(c</em>+d<em>.*x</em>)), x_Symbol] :=<br>  Int[&quot;(a+b<em>x^n)^p&quot;, 1/(a</em>c+b<em>d</em>x^2), x] /;<br>FreeQ[{a,b,c,d},x] &amp;&amp; EqQ[b<em>c+a</em>d,0]</p><p>etc. </p>",
  "id": "5b14340f160c567d16fda326",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T18:31:43.839Z",
  "text": "This is getting messy. How about making the type argument mandatory instead of optional for Rubi's existing rules. Then for each integrand type, add a single new generic, un-typed rule that merely recurs with the integrand type included. For example,\n\nInt[(a_.+b_.*x_)^m_.*(c_.+d_.*x_)^n_., x_Symbol] :=\n  Int[\"(a+b*x)^m*(c+d*x)^n\", (a+b*x)^m*(c+d*x)^n, x] /;\nFreeQ[{a,b,c,d,m,n},x]\n\nInt[\"(a+b*x)^m*(c+d*x)^n\", 1/((a_+b_.*x_)*(c_+d_.*x_)), x_Symbol] :=\n  Int[\"(a+b*x^n)^p\", 1/(a*c+b*d*x^2), x] /;\nFreeQ[{a,b,c,d},x] && EqQ[b*c+a*d,0]\n\netc. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "This should be really fast since there will only be a few hundred two-argument Int rules, and the three-argument Int rules will be typed.  Nice?<br>BTW, how do I insert Mathematica code fragments into this chat like you did above?",
  "id": "5b1435c9160c567d16fda6ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T18:39:05.229Z",
  "text": "This should be really fast since there will only be a few hundred two-argument Int rules, and the three-argument Int rules will be typed.  Nice?\nBTW, how do I insert Mathematica code fragments into this chat like you did above?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<p>About this here:</p><blockquote>\n<p>This is getting messy.</p></blockquote>\n<p>My idea was to leave your current Rubi 4.15 code as it is and simply add additional types. I guess, I need to prepare a small example.</p>",
  "id": "5b143ad17cb6a231358bcc24",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T19:00:33.907Z",
  "text": "About this here:\n> This is getting messy.\n\nMy idea was to leave your current Rubi 4.15 code as it is and simply add additional types. I guess, I need to prepare a small example.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span><br>I just emailed you my small example.",
  "id": "5b14404fedd06f7d1507d638",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T19:23:59.875Z",
  "text": "@halirutan \nI just emailed you my small example.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> When I look at e.g.",
  "id": "5b1446117f403e5bbed3c173",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T19:48:33.648Z",
  "text": "@AlbertRich When I look at e.g.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\">Int[x^<span class=\"number\">24</span>/(a + b*x^<span class=\"number\">2</span>)^<span class=\"number\">10</span>, x, Steps]</code></pre>",
  "id": "5b1446152891d5399b1ae8e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T19:48:37.157Z",
  "text": "```mma\nInt[x^24/(a + b*x^2)^10, x, Steps]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Is there a reasonably fast way to find the e.g. &quot;Rule 334&quot; inside the <code>*.m</code> file of your original code?",
  "id": "5b1446467f403e5bbed3c176",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T19:49:26.189Z",
  "text": "Is there a reasonably fast way to find the e.g. \"Rule 334\" inside the `*.m` file of your original code?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Have you had a chance yet to look at my example?",
  "id": "5b1446a2e26c847ac8b40123",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T19:50:58.064Z",
  "text": "Have you had a chance yet to look at my example?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Yes, but I see a disadvantage of making the type mandatory.",
  "id": "5b1446d37cb6a231358bcc3a",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T19:51:47.382Z",
  "text": "@AlbertRich Yes, but I see a disadvantage of making the type mandatory.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "What are the disadvantages?",
  "id": "5b1446f3016ae21a4c086438",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T19:52:19.716Z",
  "text": "What are the disadvantages?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Example rule:",
  "id": "5b14470f2aaf984b0bccc77a",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T19:52:47.286Z",
  "text": "@AlbertRich Example rule:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\">Int[<span class=\"string\">\"(a+b*x)^m\"</span>,a_+b_.*x_,x_Symbol] :=\n  a*x + b*x^<span class=\"number\">2</span>/<span class=\"number\">2</span> /;\n<span class=\"keyword\">FreeQ</span>[<span class=\"list\">{a,b}</span>,x]</code></pre>",
  "id": "5b14472993ebdb67efabef13",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T19:53:13.837Z",
  "text": "```mma\nInt[\"(a+b*x)^m\",a_+b_.*x_,x_Symbol] :=\n  a*x + b*x^2/2 /;\nFreeQ[{a,b},x]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "What happens, when the user types <code>Int[a+b*x,x]</code>? This rule does not match anymore and we need a set of <em>general</em> rules that lead to the typed rules.",
  "id": "5b1447532aaf984b0bccc77d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T19:53:55.642Z",
  "text": "What happens, when the user types `Int[a+b*x,x]`? This rule does not match anymore and we need a set of *general* rules that lead to the typed rules.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Rubi already has a rule for u+v+... .",
  "id": "5b1447b9016ae21a4c0865d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T19:55:37.183Z",
  "text": "Rubi already has a rule for u+v+... .",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Hmm, OK. But isn&#39;t this rule then not a duplicate?",
  "id": "5b14486a7f403e5bbed3c178",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T19:58:34.993Z",
  "text": "@AlbertRich Hmm, OK. But isn't this rule then not a duplicate?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p>As is the case for BOTH your and my proposals for typing integration rules, a few additional rules are going to have to be added for degenerate cases when typed calls are made on Int.</p><p>For example, when m=1 integrands of the type &quot;(a+b<em>x)^m&quot; degenerate into a sum, so Int[&quot;(a+b</em>x)^m&quot;, 2+3<em>x, x] must be handled by the &quot;(a+b</em>x)^m&quot; rule you show above.  However, if the user types Int[2+3*x,x], Rubi&#39;s existing rule for u+v+... handles it.</p><p>Note that in the Rubi 5 rules I sent a while ago, these degenerate cases ALSO must be handled at the beginning of the if-then-else rules.  Actually, I find this increasing the isomorphism between the Rubi 4 and Rubi 5 code a good thing since it will eventually help in automating the compilation of Rubi 4&#39;s typed pattern matching rules into Rubi 5&#39;s if-then-else decision tree.</p>",
  "id": "5b1450b8c712f561255642d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-03T20:34:00.041Z",
  "text": "As is the case for BOTH your and my proposals for typing integration rules, a few additional rules are going to have to be added for degenerate cases when typed calls are made on Int.\n\nFor example, when m=1 integrands of the type \"(a+b*x)^m\" degenerate into a sum, so Int[\"(a+b*x)^m\", 2+3*x, x] must be handled by the \"(a+b*x)^m\" rule you show above.  However, if the user types Int[2+3*x,x], Rubi's existing rule for u+v+... handles it.\n\nNote that in the Rubi 5 rules I sent a while ago, these degenerate cases ALSO must be handled at the beginning of the if-then-else rules.  Actually, I find this increasing the isomorphism between the Rubi 4 and Rubi 5 code a good thing since it will eventually help in automating the compilation of Rubi 4's typed pattern matching rules into Rubi 5's if-then-else decision tree.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-04T01:09:05.230Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> There are too many rules for me to give a reasonably well educated comment about the best way to proceed. Anything useful I have to say is going to be a very overiew comment and unfortunately, you have to decide yourself which way looks more promising. My major points are</p><ul>\n<li>At the moment, you don&#39;t have a real decision tree. You have exactly one node (<code>Int</code>) and in each step, you need to pattern-match against many rules. This is expecially expensive because you almost always need optional patterns like <code>a_.</code>. So to test, if a form matches, the pattern-matcher needs to try out different things for one rule. Since your decision tree has only one node with 6600+ children, it is probably very time-consuming before you even found a rule that matches your form.</li>\n<li>For each matching form, you repeat condition-tests that you might have done already. One of these conditions is <code>FreeQ[{a,b,c,d},x]</code>. Even if the pattern-matcher knows this already, because it already tested a rule, it repeats this again and again. This is currently necessary, because each <code>Int</code> rule must be valid for itself. This is one crucial thing, you prevent with your If/Then approach. If you already tested e.g. <code>FreeQ</code>, you won&#39;t do this again in a nested <em>then</em> or <em>else</em> branch. Additionally, it is the reason that even small improvements in the condition tests, led to a noticable speed-up. And we have only touched some of them.</li>\n</ul>\n<p>My main question was if we can incorporate the if/then style into the general <code>Int</code>-rule-based-definitions. I simply saw that for instance in this rule</p><pre><code class=\"mma\">Int[(a_+b_.*x_)^m_*(c_+d_.*x_)^m_,x_Symbol] :=\n      (a+b*x)^FracPart[m]*(c+d*x)^FracPart[m]/(a*c+b*d*x^<span class=\"number\">2</span>)^FracPart[m]*Int[(a*c+b*d*x^<span class=\"number\">2</span>)^m,x] /;\n<span class=\"keyword\">FreeQ</span>[<span class=\"list\">{a,b,c,d,m}</span>,x] &amp;&amp; EqQ[b*c+a*d,<span class=\"number\">0</span>] &amp;&amp; <span class=\"keyword\">Not</span>[<span class=\"keyword\">IntegerQ</span>[<span class=\"number\">2</span>*m]]</code></pre><p>you carefully tested <code>a,b,c,d,m</code> and checked their values. However, as soon as you call the inner <code>Int[(a*c+b*d*x^2)^m,x]</code>, this knowledge is lost for the next step and the tests have to be repeated again. Now, we have two branches of the rule for <code>Int[(a*c+b*d*x^2)^m,x]</code>. The first branch is, that the user called it and we know absolutely nothing about <code>a,b,c,d,m</code>. Then we would need to check the tests and see if the rule does even apply. But when we came from the inner call of above code, we know more about the parameters. I don&#39;t think I have a good solution for this now except what your are already doing with if/then.</p><p>With the </p><pre><code class=\"mma\">Int[type_:<span class=\"string\">\"Type1\"</span>, expr_, x_] := body /; type===<span class=\"string\">\"Type1\"</span> &amp;&amp; cond1 &amp;&amp; cond2</code></pre><p>I tried to give the pattern-matcher some help to decide which rule to use. However, this is not going to help much if all your rules have such a definition. It&#39;s unfortunate that I see this just know and not 2 days ealier.</p>",
  "id": "5b1491257cb6a231358bcccf",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-04T01:08:53.391Z",
  "text": "@AlbertRich There are too many rules for me to give a reasonably well educated comment about the best way to proceed. Anything useful I have to say is going to be a very overiew comment and unfortunately, you have to decide yourself which way looks more promising. My major points are\n\n-  At the moment, you don't have a real decision tree. You have exactly one node (`Int`) and in each step, you need to pattern-match against many rules. This is expecially expensive because you almost always need optional patterns like `a_.`. So to test, if a form matches, the pattern-matcher needs to try out different things for one rule. Since your decision tree has only one node with 6600+ children, it is probably very time-consuming before you even found a rule that matches your form.\n- For each matching form, you repeat condition-tests that you might have done already. One of these conditions is `FreeQ[{a,b,c,d},x]`. Even if the pattern-matcher knows this already, because it already tested a rule, it repeats this again and again. This is currently necessary, because each `Int` rule must be valid for itself. This is one crucial thing, you prevent with your If/Then approach. If you already tested e.g. `FreeQ`, you won't do this again in a nested *then* or *else* branch. Additionally, it is the reason that even small improvements in the condition tests, led to a noticable speed-up. And we have only touched some of them.\n\nMy main question was if we can incorporate the if/then style into the general `Int`-rule-based-definitions. I simply saw that for instance in this rule\n\n```mma\nInt[(a_+b_.*x_)^m_*(c_+d_.*x_)^m_,x_Symbol] :=\n      (a+b*x)^FracPart[m]*(c+d*x)^FracPart[m]/(a*c+b*d*x^2)^FracPart[m]*Int[(a*c+b*d*x^2)^m,x] /;\nFreeQ[{a,b,c,d,m},x] && EqQ[b*c+a*d,0] && Not[IntegerQ[2*m]]\n```\n\nyou carefully tested `a,b,c,d,m` and checked their values. However, as soon as you call the inner `Int[(a*c+b*d*x^2)^m,x]`, this knowledge is lost for the next step and the tests have to be repeated again. Now, we have two branches of the rule for `Int[(a*c+b*d*x^2)^m,x]`. The first branch is, that the user called it and we know absolutely nothing about `a,b,c,d,m`. Then we would need to check the tests and see if the rule does even apply. But when we came from the inner call of above code, we know more about the parameters. I don't think I have a good solution for this now except what your are already doing with if/then.\n\nWith the \n\n```mma\nInt[type_:\"Type1\", expr_, x_] := body /; type===\"Type1\" && cond1 && cond2\n```\n\nI tried to give the pattern-matcher some help to decide which rule to use. However, this is not going to help much if all your rules have such a definition. It's unfortunate that I see this just know and not 2 days ealier.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "The rule files and test suite files on the Rubi website are arranged identically to the way they are in the Rubi directory my local machine.",
  "id": "5b149f2d352b9e1a4b57720b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-04T02:08:45.170Z",
  "text": "The rule files and test suite files on the Rubi website are arranged identically to the way they are in the Rubi directory my local machine.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "i.e. same directory structure",
  "id": "5b149f4be26c847ac8b4ec69",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-04T02:09:15.672Z",
  "text": "i.e. same directory structure",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Note the Dewey Decimal System like numbering of the file and the rules within the files.",
  "id": "5b149f89a45f930a65fb1907",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-04T02:10:17.240Z",
  "text": "Note the Dewey Decimal System like numbering of the file and the rules within the files.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Also (at least ideally) the problems in a test file tests the rules in the rule file having the same name.  That is the first rule applied to a problem is a rule in the corresponding rule file.  Is that clear as mud?  :)",
  "id": "5b14a217f9f2e56cf23aa7cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-04T02:21:11.602Z",
  "text": "Also (at least ideally) the problems in a test file tests the rules in the rule file having the same name.  That is the first rule applied to a problem is a rule in the corresponding rule file.  Is that clear as mud?  :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> It&#39;s really only to put the content on a GitHub page. I&#39;m simply uploading and linking all the files you have there.",
  "id": "5b14a27c33934f30b5584d9d",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-04T02:22:52.527Z",
  "text": "@AlbertRich It's really only to put the content on a GitHub page. I'm simply uploading and linking all the files you have there.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "I know.  I just thought you might want to know the method behind my madness...",
  "id": "5b14a2b4016ae21a4c094c46",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-04T02:23:48.366Z",
  "text": "I know.  I just thought you might want to know the method behind my madness...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Is there any chance we can recreate the 3 performance images you have on your home-page? Not that I don&#39;t like the amazing orange in the last image, but maybe we can make it more consistent. ",
  "id": "5b14a2ed3478d921d8e79b11",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-04T02:24:45.986Z",
  "text": "@AlbertRich Is there any chance we can recreate the 3 performance images you have on your home-page? Not that I don't like the amazing orange in the last image, but maybe we can make it more consistent. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "My current plan is as follows: We recreate all documentation you currently have on your web-page in the <a href=\"https://github.com/RuleBasedIntegration/Rubi/wiki\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">wiki</a>. There, we have a navigation on the right and the task is simply to convert everything.",
  "id": "5b14a3467cb6a231358bccec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-04T02:26:14.338Z",
  "text": "My current plan is as follows: We recreate all documentation you currently have on your web-page in the [wiki](https://github.com/RuleBasedIntegration/Rubi/wiki). There, we have a navigation on the right and the task is simply to convert everything.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/RuleBasedIntegration/Rubi/wiki"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Then, we migh create a single page website that looks great, gives an overview and links to the wiki, the code, the downloadable Rubi page, etc..",
  "id": "5b14a39fd6e73b405bae34bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-04T02:27:43.663Z",
  "text": "Then, we migh create a single page website that looks great, gives an overview and links to the wiki, the code, the downloadable Rubi page, etc..",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Those images created with Excel are all way out of date.  Before recreating them, the current 70,000+ test suite should be run on Rubi, Maple and Mathematica using the latest version of each system.  A real time sucker...",
  "id": "5b14a3bd016ae21a4c094e78",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-04T02:28:13.592Z",
  "text": "Those images created with Excel are all way out of date.  Before recreating them, the current 70,000+ test suite should be run on Rubi, Maple and Mathematica using the latest version of each system.  A real time sucker...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Oh.. OK. That we save this for later.",
  "id": "5b14a3e42891d5399b1ae983",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-04T02:28:52.327Z",
  "text": "Oh.. OK. That we save this for later.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> But I know that Nasser works with Maple and Mathematica. Maybe he could do this.",
  "id": "5b14a4107cb6a231358bccee",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-04T02:29:36.558Z",
  "text": "@AlbertRich But I know that Nasser works with Maple and Mathematica. Maybe he could do this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Your current plan sounds good.  Yes!!!  Getting Nasser involved would be great, especially since he is an independent tester.",
  "id": "5b14a447160c567d16fed293",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-04T02:30:31.254Z",
  "text": "Your current plan sounds good.  Yes!!!  Getting Nasser involved would be great, especially since he is an independent tester.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Independent, but he uses my test suite.  :)",
  "id": "5b14a47b4eaffb692d7c043a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-04T02:31:23.799Z",
  "text": "Independent, but he uses my test suite.  :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "I really want to get out of the comparative testing business and making charts, etc.   Also, I am obviously biased.",
  "id": "5b14a546352b9e1a4b577fce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-04T02:34:46.678Z",
  "text": "I really want to get out of the comparative testing business and making charts, etc.   Also, I am obviously biased.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Wow!  I see you have already starting building Rubi&#39;s Wiki page.",
  "id": "5b14a735160c567d16fed9d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-04T02:43:01.542Z",
  "text": "Wow!  I see you have already starting building Rubi's Wiki page.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Yes. Once we have a crude version with all content, you can correct, improve, change everything to your liking.",
  "id": "5b14ab23d6e73b405bae34cc",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-04T02:59:47.077Z",
  "text": "@AlbertRich Yes. Once we have a crude version with all content, you can correct, improve, change everything to your liking.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p>You say above:</p><p>&quot;I tried to give the pattern-matcher some help to decide which rule to use. However, this is not going to help much if all your rules have such a definition. It&#39;s unfortunate that I see this just know and not 2 days earlier.&quot;</p><p>To the contrary, I think your idea to type integration rules was brilliant!  I just tweaked your idea a bit to simplify my life.  Not only will typing improve the performance of Rubi 4, like I say above it will help in compiling Rubi 4 into Rubi 5 by making them more isomorphic and providing the compiler with useful type information.  I am already in the process of typing the rational/algebraic function integration rules, and look forward to seeing if there is a significant performance gain.</p><p>Good night.   zzzzzzzzzzzz</p>",
  "id": "5b14af5ba45f930a65fb3d21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-04T03:17:47.388Z",
  "text": "You say above:\n\n\"I tried to give the pattern-matcher some help to decide which rule to use. However, this is not going to help much if all your rules have such a definition. It's unfortunate that I see this just know and not 2 days earlier.\"\n\nTo the contrary, I think your idea to type integration rules was brilliant!  I just tweaked your idea a bit to simplify my life.  Not only will typing improve the performance of Rubi 4, like I say above it will help in compiling Rubi 4 into Rubi 5 by making them more isomorphic and providing the compiler with useful type information.  I am already in the process of typing the rational/algebraic function integration rules, and look forward to seeing if there is a significant performance gain.\n\nGood night.   zzzzzzzzzzzz",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "As far as I can tell, you already do this in a different way. When I tried to gave a type hint with a string, you do basically the same by giving the rules different names like <code>LinearInt</code>.",
  "id": "5b14afb493ebdb67efabefa8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-04T03:19:16.885Z",
  "text": "As far as I can tell, you already do this in a different way. When I tried to gave a type hint with a string, you do basically the same by giving the rules different names like `LinearInt`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "OK, really need to sleep.",
  "id": "5b14afc32aaf984b0bccc810",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-04T03:19:31.429Z",
  "text": "OK, really need to sleep.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Yes, but I effectively type rules in Rubi 5, but you do it in Rubi 4.  Awesome.",
  "id": "5b14b024a45f930a65fb3f05",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-04T03:21:08.471Z",
  "text": "Yes, but I effectively type rules in Rubi 5, but you do it in Rubi 4.  Awesome.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Also, unlike function names (i.e. symbols), strings can contain math operators so the type tags can be more mnemonic.  For example &quot;(a+b<em>x)^m</em>(c+d*x)^n&quot;.",
  "id": "5b14b13952e35117cd058827",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-04T03:25:45.336Z",
  "text": "Also, unlike function names (i.e. symbols), strings can contain math operators so the type tags can be more mnemonic.  For example \"(a+b*x)^m*(c+d*x)^n\".",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> One final example regarding the optional vs. fixed types in definitions:",
  "id": "5b15bbb92aaf984b0bcccd22",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-04T22:22:49.061Z",
  "text": "@AlbertRich One final example regarding the optional vs. fixed types in definitions:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Let&#39;s say you have a pattern that matches <code>(1 + b*x)^m*(c + x)^m</code> and you have many rules <strong>that all</strong> have an optional type like this <code>f1[type_: &quot;someType&quot;, (a_. + b_.*x_)^m_*(c_. + d_.*x_)^m_] := ...</code> that the access will not be faster! Here is a small example",
  "id": "5b15bc6193ebdb67efabf4c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-04T22:25:37.823Z",
  "text": "Let's say you have a pattern that matches `(1 + b*x)^m*(c + x)^m` and you have many rules **that all** have an optional type like this `f1[type_: \"someType\", (a_. + b_.*x_)^m_*(c_. + d_.*x_)^m_] := ...` that the access will not be faster! Here is a small example",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\">expr[m_] := (<span class=\"number\">1</span> + b*x)^m*(c + x)^m;\n\n<span class=\"keyword\">MapIndexed</span>[\n  (f1[type_: #<span class=\"number\">1</span>, (a_. + b_.*x_)^m_*(c_. + d_.*x_)^m_] := <span class=\"list\">{type, m}</span> /; \n      type === #<span class=\"number\">1</span> &amp;&amp; m == <span class=\"keyword\">First</span>[#<span class=\"number\">2</span>]) &amp;,\n  <span class=\"keyword\">DictionaryLookup</span>[<span class=\"string\">\"A*\"</span>]\n  ];</code></pre>",
  "id": "5b15bc782891d5399b1aee51",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-04T22:26:00.086Z",
  "text": "```mma\nexpr[m_] := (1 + b*x)^m*(c + x)^m;\n\nMapIndexed[\n  (f1[type_: #1, (a_. + b_.*x_)^m_*(c_. + d_.*x_)^m_] := {type, m} /; \n      type === #1 && m == First[#2]) &,\n  DictionaryLookup[\"A*\"]\n  ];\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "A rule for <code>f1</code> will only match, if the <code>m</code> in the expression is equal to the index of the dictionary-word (couldn&#39;t come up with a better example). So for instance the last rule in <code>f1</code> is for me",
  "id": "5b15bcc12aaf984b0bcccd2f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-04T22:27:13.774Z",
  "text": "A rule for `f1` will only match, if the `m` in the expression is equal to the index of the dictionary-word (couldn't come up with a better example). So for instance the last rule in `f1` is for me",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\"><span class=\"keyword\">In</span>[<span class=\"number\">29</span>]:= <span class=\"keyword\">Last</span>[<span class=\"keyword\">DownValues</span>[f1]]\n\n<span class=\"keyword\">Out</span>[<span class=\"number\">29</span>]= <span class=\"keyword\">HoldPattern</span>[\n  f1[type_ : <span class=\"string\">\"Aztlan\"</span>, (a_. + b_. x_)^m_ (c_. + d_. x_)^m_]] :&gt; <span class=\"list\">{type,\n    m}</span> /; type === <span class=\"string\">\"Aztlan\"</span> &amp;&amp; m == <span class=\"keyword\">First</span>[<span class=\"list\">{805}</span>]</code></pre>",
  "id": "5b15bcc53478d921d8e7a022",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-04T22:27:17.457Z",
  "text": "```mma\nIn[29]:= Last[DownValues[f1]]\n\nOut[29]= HoldPattern[\n  f1[type_ : \"Aztlan\", (a_. + b_. x_)^m_ (c_. + d_. x_)^m_]] :> {type,\n    m} /; type === \"Aztlan\" && m == First[{805}]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "So the word is &quot;Aztlan&quot; and the number is 805. Now, I can call both",
  "id": "5b15bceb2891d5399b1aee53",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-04T22:27:55.601Z",
  "text": "So the word is \"Aztlan\" and the number is 805. Now, I can call both",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\"><span class=\"keyword\">In</span>[<span class=\"number\">30</span>]:= f1[expr[<span class=\"number\">805</span>]]\n\n<span class=\"keyword\">Out</span>[<span class=\"number\">30</span>]= <span class=\"list\">{\"Aztlan\", 805}</span>\n\n<span class=\"keyword\">In</span>[<span class=\"number\">31</span>]:= f1[<span class=\"string\">\"Aztlan\"</span>, expr[<span class=\"number\">805</span>]]\n\n<span class=\"keyword\">Out</span>[<span class=\"number\">31</span>]= <span class=\"list\">{\"Aztlan\", 805}</span></code></pre>",
  "id": "5b15bd1c2891d5399b1aee55",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-04T22:28:44.413Z",
  "text": "```mma\nIn[30]:= f1[expr[805]]\n\nOut[30]= {\"Aztlan\", 805}\n\nIn[31]:= f1[\"Aztlan\", expr[805]]\n\nOut[31]= {\"Aztlan\", 805}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "But e.g. <code>f1[&quot;wrongType&quot;, expr[805]]</code> does not match.",
  "id": "5b15bd3a33934f30b55852ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-04T22:29:14.567Z",
  "text": "But e.g. `f1[\"wrongType\", expr[805]]` does not match.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Since <strong>each</strong> <code>f1</code> rule has this optional type, there is no time-improvement. Both calls need the same time",
  "id": "5b15bddd7cb6a231358bd1f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-04T22:31:57.438Z",
  "text": "Since **each** `f1` rule has this optional type, there is no time-improvement. Both calls need the same time",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\">RepeatedTiming[f1[expr[<span class=\"number\">805</span>]]]\nRepeatedTiming[f1[<span class=\"string\">\"Aztlan\"</span>, expr[<span class=\"number\">805</span>]]]</code></pre>",
  "id": "5b15bde12891d5399b1aee5b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-04T22:32:01.755Z",
  "text": "```mma\nRepeatedTiming[f1[expr[805]]]\nRepeatedTiming[f1[\"Aztlan\", expr[805]]]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "The only thing that is improved is that for all 804 rules that are tested, everything right to the condition <code>type === #1 &amp;&amp; ...</code> is not evaluated. ",
  "id": "5b15be1fd6e73b405bae3aaa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-04T22:33:03.250Z",
  "text": "The only thing that is improved is that for all 804 rules that are tested, everything right to the condition `type === #1 && ...` is not evaluated. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "In the second example, I&#39;m using a fixed type. So each rule for <code>f2</code> needs to have the correct type in order to match",
  "id": "5b15be502891d5399b1aee5d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-04T22:33:52.997Z",
  "text": "In the second example, I'm using a fixed type. So each rule for `f2` needs to have the correct type in order to match",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\"><span class=\"keyword\">MapIndexed</span>[\n (f2[type : #<span class=\"number\">1</span>, (a_. + b_.*x_)^m_*(c_. + d_.*x_)^m_] := <span class=\"list\">{type, m}</span> /; \n     m == <span class=\"keyword\">First</span>[#<span class=\"number\">2</span>]) &amp;,\n <span class=\"keyword\">DictionaryLookup</span>[<span class=\"string\">\"A*\"</span>]\n ]</code></pre>",
  "id": "5b15be5d33934f30b55852ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-04T22:34:05.341Z",
  "text": "```mma\nMapIndexed[\n (f2[type : #1, (a_. + b_.*x_)^m_*(c_. + d_.*x_)^m_] := {type, m} /; \n     m == First[#2]) &,\n DictionaryLookup[\"A*\"]\n ]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Now, the call to <code>f2[&quot;Aztlan&quot;, expr[805]]</code> is about 100x faster than that for <code>f1</code> but you need to provide the correct type. It is not possible to call <code>f2[expr[805]]</code>.",
  "id": "5b15bef6d6e73b405bae3ab0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-04T22:36:38.835Z",
  "text": "Now, the call to `f2[\"Aztlan\", expr[805]]` is about 100x faster than that for `f1` but you need to provide the correct type. It is not possible to call `f2[expr[805]]`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Good evening Patrick!  That &quot;100x faster&quot; sounds similar to my prediction that Rubi 5 will be &quot;almost two orders of magnitude faster&quot; than Rubi 4.",
  "id": "5b15c05393dc78791cafa250",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-04T22:42:27.089Z",
  "text": "@halirutan Good evening Patrick!  That \"100x faster\" sounds similar to my prediction that Rubi 5 will be \"almost two orders of magnitude faster\" than Rubi 4.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-04T22:43:11.466Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "The reason is that in the case of <code>f2</code>, the pattern-matcher <em>needs</em> a match in the type-string. If that doesn&#39;t match, it doesn&#39;t need to even try to match <code>expr</code> and it won&#39;t run any condition tests. So even for Rubi 5, try to use this style instead if possible.",
  "id": "5b15c0667cb6a231358bd1fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-04T22:42:46.274Z",
  "text": "The reason is that in the case of `f2`, the pattern-matcher *needs* a match in the type-string. If that doesn't match, it doesn't need to even try to match `expr` and it won't run any condition tests. So even for Rubi 5, try to use this style instead if possible.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Today, I talked to <span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> , <span data-link-type=\"mention\" data-screen-name=\"szhorvat\" class=\"mention\">@szhorvat</span>  and Cory. As you can see, I invited Nasser and Szabolcs to the chat. Nasser should have emailed you and he agreed to re-run the performance tests once the package and the test-files are up-dated.",
  "id": "5b15c2302aaf984b0bcccd50",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   },
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   },
   {
    "screenName": "szhorvat",
    "userId": "547e2ff5db8155e6700daa4d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-04T22:50:24.810Z",
  "text": "@AlbertRich Today, I talked to @nasser1 , @szhorvat  and Cory. As you can see, I invited Nasser and Szabolcs to the chat. Nasser should have emailed you and he agreed to re-run the performance tests once the package and the test-files are up-dated.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "We further discussed one particular problem about the Mathematica code for Rubi. You are writing in Notebooks and the package files that make the final Rubi package are only exported and thus created automatically. Therefore, it would be best to put the notebooks into the repository and not the exported package files.",
  "id": "5b15c31b2aaf984b0bcccd56",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-04T22:54:19.987Z",
  "text": "We further discussed one particular problem about the Mathematica code for Rubi. You are writing in Notebooks and the package files that make the final Rubi package are only exported and thus created automatically. Therefore, it would be best to put the notebooks into the repository and not the exported package files.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "hello everyone. This is my first time doing this on github. I never used it before. But yes, I can start the CAS integration tests any time you tell me. I did not know if test files on Albert&#39;s site are updated or not.  if so, I will download the zip files now. ",
  "id": "5b15cc18352b9e1a4b5bd320",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-04T23:32:40.583Z",
  "text": "hello everyone. This is my first time doing this on github. I never used it before. But yes, I can start the CAS integration tests any time you tell me. I did not know if test files on Albert's site are updated or not.  if so, I will download the zip files now. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "A few things to consider re typing integration rules:<ul>\n<li>There will probably be only a few hundred integrand types, not thousands.</li>\n<li>Typing will obviously <em>only</em> be useful when rules make recursive calls that include type information.</li>\n<li>Typed rules will be defined first so they will be at the beginning of the downvalue rule list.</li>\n<li>Thus the pattern matcher can zip through the typed rules before trying to match an integrand with the untyped rules.</li>\n<li>I am in the process of modifying the algebraic function integration rules to require a type match, and including type information in calls on Int that they make.</li>\n<li>Also I will add one generic, untyped rule for each algebraic function integrand type.</li>\n<li>When complete, we can make real-world, rather than contrived, tests to determine the effect of typing on performance.<br>Question: Does Mathematica maintain separate downvalue rule lists for 2-argument Int rules and for 3-argument Int rules, to help performance?</li>\n</ul>\n",
  "id": "5b15d6bf22a05f5e71ff52f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-05T00:18:07.877Z",
  "text": "A few things to consider re typing integration rules:\n* There will probably be only a few hundred integrand types, not thousands.\n* Typing will obviously *only* be useful when rules make recursive calls that include type information.\n* Typed rules will be defined first so they will be at the beginning of the downvalue rule list.\n* Thus the pattern matcher can zip through the typed rules before trying to match an integrand with the untyped rules.\n* I am in the process of modifying the algebraic function integration rules to require a type match, and including type information in calls on Int that they make.\n* Also I will add one generic, untyped rule for each algebraic function integrand type.\n* When complete, we can make real-world, rather than contrived, tests to determine the effect of typing on performance.\nQuestion: Does Mathematica maintain separate downvalue rule lists for 2-argument Int rules and for 3-argument Int rules, to help performance?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": " <span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> After only 2 days with just 2 authors, this chatroom has become a convoluted mess with several different, interspersed conversations going on at once.  I&#39;m getting lost.  I suggest it be split into two chatrooms:<ul>\n<li>a Rubi system chatroom to discuss issues such as typing integration rules and adding new packages (e.g. definite integration) to the system.</li>\n<li>a Rubi website chatroom to discuss issues such as creating content for the wiki and preparing charts that show the performance of Rubi and the various commercial and open-source integrators.<br>If multiple chatrooms are not possible, how about discussing Rubi system design using email, since chat does not lend itself to serious thinking and reflection.</li>\n</ul>\n",
  "id": "5b15d73452e35117cd09ea64",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-05T00:20:04.137Z",
  "text": " @halirutan After only 2 days with just 2 authors, this chatroom has become a convoluted mess with several different, interspersed conversations going on at once.  I'm getting lost.  I suggest it be split into two chatrooms:\n* a Rubi system chatroom to discuss issues such as typing integration rules and adding new packages (e.g. definite integration) to the system.\n* a Rubi website chatroom to discuss issues such as creating content for the wiki and preparing charts that show the performance of Rubi and the various commercial and open-source integrators.\nIf multiple chatrooms are not possible, how about discussing Rubi system design using email, since chat does not lend itself to serious thinking and reflection.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": " <span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> We can have several rooms. I created the <a href=\"https://gitter.im/Rule-Based-Integration/Website-Discussion\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Website room</a> that should be used from now on for discussions about online content, how we present Rubi, ect.",
  "id": "5b15d9373478d921d8e7a076",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-05T00:28:39.316Z",
  "text": " @AlbertRich We can have several rooms. I created the [Website room](https://gitter.im/Rule-Based-Integration/Website-Discussion) that should be used from now on for discussions about online content, how we present Rubi, ect.",
  "unread": false,
  "urls": [
   {
    "url": "https://gitter.im/Rule-Based-Integration/Website-Discussion"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "We will keep this room strictly for discussing implementation details of Rubi.",
  "id": "5b15d95893ebdb67efabf513",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-05T00:29:12.247Z",
  "text": "We will keep this room strictly for discussing implementation details of Rubi.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Several points to your bullet-list:</p><ol>\n<li>Defining rules in a certain order does not mean that they will appear in this order in the <code>DownValues</code>. Mathematica has black-box algorithm to decide over the <em>specitivity of a pattern</em>.  When you define new rules, Mathematica might reorder your rules. Simple example</li>\n</ol>\n<pre><code class=\"mma\">f[x_] := x^<span class=\"number\">2</span>;\nf[x_Integer] := x^<span class=\"number\">3</span>;\n<span class=\"keyword\">DownValues</span>[f]</code></pre><p>This can as far as I know only be prevented by manually setting <code>DownValues</code>. We have a Q&amp;A about how the automatic ordering is decided <a href=\"https://mathematica.stackexchange.com/q/8619/187\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here on StackExchange</a>. Unfortunately, last time I checked there was no completely satisfying anser.</p>",
  "id": "5b15db5b33934f30b558535a",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-05T00:37:47.135Z",
  "text": "@AlbertRich Several points to your bullet-list:\n\n1. Defining rules in a certain order does not mean that they will appear in this order in the `DownValues`. Mathematica has black-box algorithm to decide over the *specitivity of a pattern*.  When you define new rules, Mathematica might reorder your rules. Simple example\n\n```mma\nf[x_] := x^2;\nf[x_Integer] := x^3;\nDownValues[f]\n```\n\nThis can as far as I know only be prevented by manually setting `DownValues`. We have a Q&A about how the automatic ordering is decided [here on StackExchange](https://mathematica.stackexchange.com/q/8619/187). Unfortunately, last time I checked there was no completely satisfying anser.",
  "unread": false,
  "urls": [
   {
    "url": "https://mathematica.stackexchange.com/q/8619/187"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "If we are lucky, then the typed rules <em>are</em> indeed more specific for Mathematica and it will put them to the front. I already thought about this when I started with Rubi and my question was: Is defining the <code>Int</code> rules as normal functions really the best way to represent a decition-tree? I did not found a satisfying answer to this.",
  "id": "5b15dcd92aaf984b0bcccdbf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-05T00:44:09.846Z",
  "text": "If we are lucky, then the typed rules *are* indeed more specific for Mathematica and it will put them to the front. I already thought about this when I started with Rubi and my question was: Is defining the `Int` rules as normal functions really the best way to represent a decition-tree? I did not found a satisfying answer to this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<blockquote>\n<p>Also I will add one generic, untyped rule for each algebraic function integrand type.</p></blockquote>\n<p>Two days ago, I tested something that would do this automatically. Albert, can you present one example of such a rule? Put it in the wiki in the  <a href=\"https://github.com/RuleBasedIntegration/Rubi/wiki/Dev-Scrape-Sheet\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">development scrape sheet</a> that I added for ideas that should not get lost.</p>",
  "id": "5b15dea4d6e73b405bae3b0a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-05T00:51:48.370Z",
  "text": "> Also I will add one generic, untyped rule for each algebraic function integrand type.\n\nTwo days ago, I tested something that would do this automatically. Albert, can you present one example of such a rule? Put it in the wiki in the  [development scrape sheet](https://github.com/RuleBasedIntegration/Rubi/wiki/Dev-Scrape-Sheet) that I added for ideas that should not get lost.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/RuleBasedIntegration/Rubi/wiki/Dev-Scrape-Sheet"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<blockquote>\nQuestion: Does Mathematica maintain separate downvalue rule lists for 2-argument Int rules and for 3-argument Int rules, to help performance?</blockquote>\n",
  "id": "5b15df0f93ebdb67efabf518",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-05T00:53:35.628Z",
  "text": "> Question: Does Mathematica maintain separate downvalue rule lists for 2-argument Int rules and for 3-argument Int rules, to help performance?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "No.",
  "id": "5b15df133478d921d8e7a08b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-05T00:53:39.969Z",
  "text": "No.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "But Mathematica maintains several rule-lists for each symbol. <code>OwnValues</code>, <code>DownValues</code>, <code>UpValues</code>, and <code>SubValues</code> are the most important ones. Then there are separate lists for Messages, Options, SyntaxInformation, etc..",
  "id": "5b15e0003478d921d8e7a08d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-05T00:57:36.637Z",
  "text": "But Mathematica maintains several rule-lists for each symbol. `OwnValues`, `DownValues`, `UpValues`, and `SubValues` are the most important ones. Then there are separate lists for Messages, Options, SyntaxInformation, etc..",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Free from my memory, maybe you see a usage for them:",
  "id": "5b15e0237f403e5bbed3c793",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-05T00:58:11.330Z",
  "text": "Free from my memory, maybe you see a usage for them:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> About the different rules Mathematica maintains. This is highly simplified:<ol>\n<li><code>OwnValues</code> are used when the rhs is a symbol like you use in normal variables <code>a = 1</code> or <code>b := 1</code>.</li>\n<li><code>DownValues</code> are used when it is a function call and the head is a symbol like in your rules <code>Int[expr_] :=</code></li>\n<li><code>UpValues</code> are nice when it is a function call but you don&#39;t want to assign the rule to the head. Small example where the rule is attached to <code>func</code> and not to <code>Plot</code>: <code>func /: Plot[func[x_]] := x^2; Plot[func[x]]</code></li>\n<li><code>SubValues</code> are nice and might be handy for Rubi. If you have a definition like this <code>f[&quot;type&quot;][expr_]</code> it goes into the <code>SubValues</code> of <code>f</code> and not in its <code>DownValues</code>.</li>\n</ol>\n",
  "id": "5b15e5792891d5399b1aeec1",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-05T01:20:57.392Z",
  "text": "@AlbertRich About the different rules Mathematica maintains. This is highly simplified:\n\n1. `OwnValues` are used when the rhs is a symbol like you use in normal variables `a = 1` or `b := 1`.\n2. `DownValues` are used when it is a function call and the head is a symbol like in your rules `Int[expr_] := `\n3. `UpValues` are nice when it is a function call but you don't want to assign the rule to the head. Small example where the rule is attached to `func` and not to `Plot`: `func /: Plot[func[x_]] := x^2; Plot[func[x]]`\n4. `SubValues` are nice and might be handy for Rubi. If you have a definition like this `f[\"type\"][expr_]` it goes into the `SubValues` of `f` and not in its `DownValues`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Thanks for the overview on the different rule lists Mathematica maintains.  Currently Rubi only uses down and up values.",
  "id": "5b15e77952e35117cd0a159c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-05T01:29:29.135Z",
  "text": "Thanks for the overview on the different rule lists Mathematica maintains.  Currently Rubi only uses down and up values.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "BTW, the mysterious &quot;GenericRule&quot; string in the generic rule definition is so the routine that modifies rules to show integration steps can recognize generic rules and <em>not</em> modify them, since they are just bookkeeping functions not part of the integration.  The show step routines is a mess that needs to be redesigned.  But this is for another day...",
  "id": "5b15ea02016ae21a4c0df8fd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-05T01:40:18.434Z",
  "text": "BTW, the mysterious \"GenericRule\" string in the generic rule definition is so the routine that modifies rules to show integration steps can recognize generic rules and *not* modify them, since they are just bookkeeping functions not part of the integration.  The show step routines is a mess that needs to be redesigned.  But this is for another day...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> I was suspecting something like this and I already looked at the <code>ShowStep</code> routines yesterday.",
  "id": "5b15eaa07f403e5bbed3c7a9",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-05T01:42:56.363Z",
  "text": "@AlbertRich I was suspecting something like this and I already looked at the `ShowStep` routines yesterday.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Is there a way to include non-alphanumeric characters in Mathematica function names (i.e. symbols)?",
  "id": "5b15fbf599fa7f4c06462d3d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-05T02:56:53.089Z",
  "text": "Is there a way to include non-alphanumeric characters in Mathematica function names (i.e. symbols)?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> You can use <code>$</code> and all special characters like <code>\\[Gamma]</code> but the latter one is highly unreadable in package code.",
  "id": "5b15fc503478d921d8e7a0be",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-05T02:58:24.708Z",
  "text": "@AlbertRich You can use `$` and all special characters like `\\[Gamma]` but the latter one is highly unreadable in package code.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p>:fire: Once I have modified Rubi&#39;s rules to include type information, then each rule on the downvalue list having a type tag could be deleted  from the list and simultaneously a new 2-argument rule defined with a function name unique to that type tag.   Also all the typed Int calls in function bodies could be replaced with calls on the function name unique to type specified in the call.</p><ul>\n<li>This should make Rubi 4&#39;s performance approach that of Rubi 5&#39;s.</li>\n<li>It only requires typing Rubi&#39;s function names and calls,  which I plan to do anyway.</li>\n<li>Does not destroy the elegant expression of the rules in Rubi&#39;s source files.</li>\n</ul>\n<p>What do you think?</p>",
  "id": "5b1607ba160c567d16038e7e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-05T03:47:06.293Z",
  "text": ":fire: Once I have modified Rubi's rules to include type information, then each rule on the downvalue list having a type tag could be deleted  from the list and simultaneously a new 2-argument rule defined with a function name unique to that type tag.   Also all the typed Int calls in function bodies could be replaced with calls on the function name unique to type specified in the call.\n* This should make Rubi 4's performance approach that of Rubi 5's.\n* It only requires typing Rubi's function names and calls,  which I plan to do anyway.\n* Does not destroy the elegant expression of the rules in Rubi's source files.\n\nWhat do you think?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Thinking about it tomorrow and I will give feedback.",
  "id": "5b1607e82aaf984b0bccce30",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-05T03:47:52.427Z",
  "text": "Thinking about it tomorrow and I will give feedback.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Sleep good.  Albert",
  "id": "5b16080016f649612409148c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-05T03:48:16.049Z",
  "text": "Sleep good.  Albert",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p>What a minute!!!  We should be able to write code that determines which rule type an Int rule belongs to by going through a list of type patterns and seeing which one the rule matches,.  Similarly for Int calls in the body of a rule, we could write code that determines which rule type each call requires.  Knowing all this we could modify Rubi&#39;s rules as described above, without having to make <em>any</em> changes to Rubi&#39;s 6600+ rules.  Yea!</p><p>Pattern matching a rule&#39;s pattern at load time rather than run time is meta-programming at it&#39;s best.</p>",
  "id": "5b161e1aedd06f7d150de29a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-05T05:22:34.839Z",
  "text": "What a minute!!!  We should be able to write code that determines which rule type an Int rule belongs to by going through a list of type patterns and seeing which one the rule matches,.  Similarly for Int calls in the body of a rule, we could write code that determines which rule type each call requires.  Knowing all this we could modify Rubi's rules as described above, without having to make *any* changes to Rubi's 6600+ rules.  Yea!\n\nPattern matching a rule's pattern at load time rather than run time is meta-programming at it's best.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Upon reflection, although none of Rubi&#39;s existing rules will have to be changed with this scheme, some trivial new ones will have to be added to handle degenerate cases, necessary like I said before whenever rules are typed.",
  "id": "5b165236016ae21a4c0f42d0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-05T09:04:54.136Z",
  "text": "Upon reflection, although none of Rubi's existing rules will have to be changed with this scheme, some trivial new ones will have to be added to handle degenerate cases, necessary like I said before whenever rules are typed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-05T10:05:36.793Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p>As my tortured code in &quot;ShowStep routines.m&quot; shows, I have a hard time getting Mathematica <em>not</em> to evaluate code I want to manipulate as data.  So it would really help me out if you could write a program that transformed Int rules as described above.</p><p>For example, given the type list</p><pre><code class=\"mma\">$IntegrationRuleTypes =\n   <span class=\"list\">{(a_. + b_.*x_)^m_., (a_. + b_.*x_)^m_.*(c_. + d_.*x_)^n_., (a_. + b_.*x_^n_)^p_, (c_.*x_)^m_.*(a_. + b_.*x_^n_)^p_.}</span></code></pre><p>the program would transform the Int rule</p><pre><code class=\"mma\">Int[<span class=\"number\">1</span>/((a_.+b_.*x_)*(c_.+d_.*x_)),x_Symbol] :=\n  b/(b*c-a*d)*Int[<span class=\"number\">1</span>/(a+b*x),x] - d/(b*c-a*d)*Int[<span class=\"number\">1</span>/(c+d*x),x] /;\n<span class=\"keyword\">FreeQ</span>[<span class=\"list\">{a,b,c,d}</span>,x] &amp;&amp; NeQ[b*c-a*d,<span class=\"number\">0</span>]</code></pre><p>to the Int2 rule (2 since its type is the second element of $IntegrationRuleTypes) that calls Int1</p><pre><code class=\"mma\">Int2[<span class=\"number\">1</span>/((a_.+b_.*x_)*(c_.+d_.*x_)),x_Symbol] :=\n  b/(b*c-a*d)*Int1[<span class=\"number\">1</span>/(a+b*x),x] - d/(b*c-a*d)*Int1[<span class=\"number\">1</span>/(c+d*x),x] /;\n<span class=\"keyword\">FreeQ</span>[<span class=\"list\">{a,b,c,d}</span>,x] &amp;&amp; NeQ[b*c-a*d,<span class=\"number\">0</span>]</code></pre>",
  "id": "5b165ef7352b9e1a4b5d9c90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-05T09:59:19.788Z",
  "text": "As my tortured code in \"ShowStep routines.m\" shows, I have a hard time getting Mathematica *not* to evaluate code I want to manipulate as data.  So it would really help me out if you could write a program that transformed Int rules as described above.\n\nFor example, given the type list\n```mma\n$IntegrationRuleTypes =\n   {(a_. + b_.*x_)^m_., (a_. + b_.*x_)^m_.*(c_. + d_.*x_)^n_., (a_. + b_.*x_^n_)^p_, (c_.*x_)^m_.*(a_. + b_.*x_^n_)^p_.}\n```\nthe program would transform the Int rule\n```mma\nInt[1/((a_.+b_.*x_)*(c_.+d_.*x_)),x_Symbol] :=\n  b/(b*c-a*d)*Int[1/(a+b*x),x] - d/(b*c-a*d)*Int[1/(c+d*x),x] /;\nFreeQ[{a,b,c,d},x] && NeQ[b*c-a*d,0]\n```\nto the Int2 rule (2 since its type is the second element of $IntegrationRuleTypes) that calls Int1\n```mma\nInt2[1/((a_.+b_.*x_)*(c_.+d_.*x_)),x_Symbol] :=\n  b/(b*c-a*d)*Int1[1/(a+b*x),x] - d/(b*c-a*d)*Int1[1/(c+d*x),x] /;\nFreeQ[{a,b,c,d},x] && NeQ[b*c-a*d,0]\n```",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "If an Int rule does not match any of the types in $IntegrationRuleTypes, it is left unchanged on Int&#39;s downvalue list.",
  "id": "5b16617d016ae21a4c0f7f3c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-05T10:10:05.908Z",
  "text": "If an Int rule does not match any of the types in $IntegrationRuleTypes, it is left unchanged on Int's downvalue list.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> I will answer this, but not tonight. I had something to drink and I want to think about this with a clear head.",
  "id": "5b1749f287805007f3baeb45",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-06T02:41:54.349Z",
  "text": "@AlbertRich I will answer this, but not tonight. I had something to drink and I want to think about this with a clear head.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> No hurry.  Like I said this chatroom is for serious strategic thinking and reflection.",
  "id": "5b174abf99fa7f4c064af0fd",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-06T02:45:19.648Z",
  "text": "@halirutan No hurry.  Like I said this chatroom is for serious strategic thinking and reflection.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "Hi everyone. I downloaded 14.5.2. I need to change my build script since the API of rubi changed. But I am little confused on the new API.  ",
  "id": "5b18858a35e25f399755900c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:08:26.379Z",
  "text": "Hi everyone. I downloaded 14.5.2. I need to change my build script since the API of rubi changed. But I am little confused on the new API.  \n\n\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "When I do anti=Int[Sin[x] Cos[x]/x,x,Steps]; then Rubi will print to console the RULES uses. But it also somehow prints to the notebook itself the STEPS used.  I have no idea how it does that, since I put a &quot;;&quot; at the end of the call. So it seems to be bypassing the Print stream.  So I do not know how to capture the STEPS. I can capture the RULES though but not the STEPS.  THis is what I currently do to capture the RULES<br>rules={};<br>Unprotect[Print];<br>Print=AppendTo[rules,{##}]&amp;;<br>Protect[Print];<br>anti=Int[Sin[x] Cos[x]/x,x,Steps];",
  "id": "5b18866e160c567d160c7edc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:12:14.515Z",
  "text": "When I do anti=Int[Sin[x] Cos[x]/x,x,Steps]; then Rubi will print to console the RULES uses. But it also somehow prints to the notebook itself the STEPS used.  I have no idea how it does that, since I put a \";\" at the end of the call. So it seems to be bypassing the Print stream.  So I do not know how to capture the STEPS. I can capture the RULES though but not the STEPS.  THis is what I currently do to capture the RULES\nrules={};\nUnprotect[Print];\nPrint=AppendTo[rules,{##}]&;\nProtect[Print];\nanti=Int[Sin[x] Cos[x]/x,x,Steps];",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "The above will direct the RULES which goes to console via PRINT, to go to the variables rules, which I can then save. But I do not know how to capture the STEPS, since they go the input notebook, which I do not want them to go there. With over 70,000 integrals, then this will cause some problems. Since it wont even go to the console.",
  "id": "5b1886e816f6496124122254",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:14:16.677Z",
  "text": "The above will direct the RULES which goes to console via PRINT, to go to the variables rules, which I can then save. But I do not know how to capture the STEPS, since they go the input notebook, which I do not want them to go there. With over 70,000 integrals, then this will cause some problems. Since it wont even go to the console.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "ps. do not know how to do markdown/formatting here like on stackexchange, so hard to describe and put pictures. But I hope the above is clear of what the issue is. ",
  "id": "5b18873f35e25f39975594ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:15:43.445Z",
  "text": "ps. do not know how to do markdown/formatting here like on stackexchange, so hard to describe and put pictures. But I hope the above is clear of what the issue is. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Hi Nasser.  When you tested Rubi before, did your test results show the integration steps?",
  "id": "5b18879c4eaffb692d89cf6a",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:17:16.244Z",
  "text": "@nasser1 Hi Nasser.  When you tested Rubi before, did your test results show the integration steps?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "hi Albert. No, Before I only show the RULES, since that was what was available. It will be nice to also capture the STEPS, which you added now. But I do not know how to capture these. Also, they go to the notebook, even when I put a &quot;;&quot; at the end. I do not want the STEPS to go the notebook itself. So 2 issues: How to capture the STEPS, and if not possible, how to make them go to console instead?",
  "id": "5b18882652e35117cd139006",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:19:34.668Z",
  "text": "hi Albert. No, Before I only show the RULES, since that was what was available. It will be nice to also capture the STEPS, which you added now. But I do not know how to capture these. Also, they go to the notebook, even when I put a \";\" at the end. I do not want the STEPS to go the notebook itself. So 2 issues: How to capture the STEPS, and if not possible, how to make them go to console instead?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "Here is an example   <a href=\"https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_14_8/test_cases/0_Independent_test_suites/Apostol_Problems/resu1.htm#x5-40003.1\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_14_8/test_cases/0_Independent_test_suites/Apostol_Problems/resu1.htm#x5-40003.1</a>",
  "id": "5b18886edb98e07a9a786e57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:20:46.039Z",
  "text": "Here is an example   https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_14_8/test_cases/0_Independent_test_suites/Apostol_Problems/resu1.htm#x5-40003.1",
  "unread": false,
  "urls": [
   {
    "url": "https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_14_8/test_cases/0_Independent_test_suites/Apostol_Problems/resu1.htm#x5-40003.1"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "The above shows the RULES used. Showing the STEPS would be nice, since they are a little more clear, if someone does not care about the RULES used. ",
  "id": "5b18889f99fa7f4c064f5c80",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:21:35.782Z",
  "text": "The above shows the RULES used. Showing the STEPS would be nice, since they are a little more clear, if someone does not care about the RULES used. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "You are ambitious. :smile:   Here is the 3-argument definition of Int in &quot;ShowSteps routines.m&quot;.   You can modify the code for when flag equals Steps as you see fit.<pre><code class=\"mma\">Int[u_,x_Symbol,flag_] :=\n  <span class=\"keyword\">If</span>[flag===Step,\n    <span class=\"keyword\">Block</span>[<span class=\"list\">{$ShowSteps=True}</span>, Int[u,x]],\n  <span class=\"keyword\">If</span>[flag===Steps,\n    <span class=\"keyword\">Block</span>[<span class=\"list\">{$ShowSteps=True}</span>,\n    <span class=\"keyword\">FixedPoint</span>[\n      <span class=\"keyword\">Function</span>[<span class=\"keyword\">CellPrint</span>[<span class=\"keyword\">ExpressionCell</span>[#,<span class=\"string\">\"Input\"</span>]]; \n      <span class=\"keyword\">ReplaceAll</span>[#,<span class=\"list\">{Defer[Int]-&gt;Int,Defer[Dist]-&gt;Dist,Defer[Subst]-&gt;Subst}</span>]],Int[u,x]]],\n  <span class=\"keyword\">If</span>[flag===Stats,\n    <span class=\"keyword\">Block</span>[<span class=\"list\">{$ShowSteps=False,$StepCounter=0,$RuleList={}</span>},\n    <span class=\"keyword\">With</span>[<span class=\"list\">{result=Int[u,x]}</span>,\n    <span class=\"keyword\">Print</span>[<span class=\"list\">{$StepCounter,Length[$RuleList],LeafCount[u],LeafCount[result],N[Length[$RuleList]/LeafCount[u],4]}</span>];\n    result]],\n  Int[u,x]]]]</code></pre>",
  "id": "5b188b79fcefb41e8a92ed75",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:33:45.821Z",
  "text": "You are ambitious. :smile:   Here is the 3-argument definition of Int in \"ShowSteps routines.m\".   You can modify the code for when flag equals Steps as you see fit.\n```mma\nInt[u_,x_Symbol,flag_] :=\n  If[flag===Step,\n    Block[{$ShowSteps=True}, Int[u,x]],\n  If[flag===Steps,\n    Block[{$ShowSteps=True},\n    FixedPoint[\n      Function[CellPrint[ExpressionCell[#,\"Input\"]]; \n      ReplaceAll[#,{Defer[Int]->Int,Defer[Dist]->Dist,Defer[Subst]->Subst}]],Int[u,x]]],\n  If[flag===Stats,\n    Block[{$ShowSteps=False,$StepCounter=0,$RuleList={}},\n    With[{result=Int[u,x]},\n    Print[{$StepCounter,Length[$RuleList],LeafCount[u],LeafCount[result],N[Length[$RuleList]/LeafCount[u],4]}];\n    result]],\n  Int[u,x]]]]\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Maybe Patrick has some ideas that may help...",
  "id": "5b188bae35e25f3997559fca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:34:38.716Z",
  "text": "Maybe Patrick has some ideas that may help...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "The <code>ShowSteps</code> routine is for me broken as well. I&#39;m not sure why and I didn&#39;t debug it carefully, but there are two issues:",
  "id": "5b188befed65d52adeef45e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:35:43.675Z",
  "text": "The `ShowSteps` routine is for me broken as well. I'm not sure why and I didn't debug it carefully, but there are two issues:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<ol>\n<li>Somehow, not only rules are shown but expressions of the integral in between</li>\n<li>If you evaluate the same line again, the cells that show the rules are not refreshed but there are new ones added in between.</li>\n</ol>\n",
  "id": "5b188c3339e5e454a6798861",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:36:51.676Z",
  "text": "1. Somehow, not only rules are shown but expressions of the integral in between\n2. If you evaluate the same line again, the cells that show the rules are not refreshed but there are new ones added in between.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "Ok, thanks. Since we are the subject and it is easy to do, how about making call return both the STATS and the STEPS at same time? As I mentioned before, if I want to capture STATS and STEPS, it means I have to run the whole 70,000 integrals two times, one time to capture STATS and one time to capture STEPS. I would be more efficient to return both in same call. I mentioned that to you on the usenet. But I do not if it is hard to change or not. THanks,",
  "id": "5b188c45e26c847ac8c2d307",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:37:09.823Z",
  "text": "Ok, thanks. Since we are the subject and it is easy to do, how about making call return both the STATS and the STEPS at same time? As I mentioned before, if I want to capture STATS and STEPS, it means I have to run the whole 70,000 integrals two times, one time to capture STATS and one time to capture STEPS. I would be more efficient to return both in same call. I mentioned that to you on the usenet. But I do not if it is hard to change or not. THanks,",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "I&#39;ve got to eat something.  I&#39;ll let you guys hash this out.",
  "id": "5b188ca122a05f5e7108cff2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:38:41.839Z",
  "text": "I've got to eat something.  I'll let you guys hash this out.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "hi Patrick. The STEPS command prints 2 things. The RULES and the STEPS (what you call the expressions on the integral in between). Both are good to have. The issue is that the RULES I can capture to a variable, but not the STEPS. They go to the notebook even with &quot;;&quot;, and look like input cells not output cells as well, and so I can&#39;t capture to put in report.",
  "id": "5b188d314eaffb692d89da63",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:41:05.258Z",
  "text": "hi Patrick. The STEPS command prints 2 things. The RULES and the STEPS (what you call the expressions on the integral in between). Both are good to have. The issue is that the RULES I can capture to a variable, but not the STEPS. They go to the notebook even with \";\", and look like input cells not output cells as well, and so I can't capture to put in report.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "I could just make a build without showing the STEPS nor the RULES. So this whole issue  goes away until it is sorted out in a future release of RUBI.",
  "id": "5b188d914eaffb692d89db5e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:42:41.653Z",
  "text": "I could just make a build without showing the STEPS nor the RULES. So this whole issue  goes away until it is sorted out in a future release of RUBI.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Yes, that sounds good. From the top of my head, I would do this whole steps thing differently. I would not print anything, but I would return a list of <code>{{ruleNumber, currentExpr}, ...}</code>. Then when can have a simple function that turns this list into a nicely plotted table of steps.",
  "id": "5b188dfaa788af749c45f1b2",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:44:26.168Z",
  "text": "@nasser1 Yes, that sounds good. From the top of my head, I would do this whole steps thing differently. I would not print anything, but I would return a list of `{{ruleNumber, currentExpr}, ...}`. Then when can have a simple function that turns this list into a nicely plotted table of steps.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "Ok. I will work on a new build,  and set  $LoadShowSteps =False; for now. That will make it faster also :)",
  "id": "5b188e5a4eaffb692d89dd76",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:46:02.182Z",
  "text": "Ok. I will work on a new build,  and set  $LoadShowSteps =False; for now. That will make it faster also :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Your tests are only to see what integrals can be solved, right?",
  "id": "5b188e77a788af749c45f1c0",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:46:31.196Z",
  "text": "@nasser1 Your tests are only to see what integrals can be solved, right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "Yes. They shows what integrals passed/fails, CPU times, grade, and other stats. just like on this page <a href=\"https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_14_8/test_cases/0_Independent_test_suites/Apostol_Problems/rese1.htm#x2-10001\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_14_8/test_cases/0_Independent_test_suites/Apostol_Problems/rese1.htm#x2-10001</a>  only difference, this time, will now show the RULES used. That is all.",
  "id": "5b188edf52e35117cd13a5f4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:48:15.116Z",
  "text": "Yes. They shows what integrals passed/fails, CPU times, grade, and other stats. just like on this page https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_14_8/test_cases/0_Independent_test_suites/Apostol_Problems/rese1.htm#x2-10001  only difference, this time, will now show the RULES used. That is all.",
  "unread": false,
  "urls": [
   {
    "url": "https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_14_8/test_cases/0_Independent_test_suites/Apostol_Problems/rese1.htm#x2-10001"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "I mean this time will NOT show the rules uses, that is all. (can one edit a message here after hitting return? ",
  "id": "5b188f0ee26c847ac8c2d8be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:49:02.561Z",
  "text": "I mean this time will NOT show the rules uses, that is all. (can one edit a message here after hitting return? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> OK, and can you additionally store the numbers, so that we can recreate the plots from the main page here <a href=\"http://www.apmaths.uwo.ca/~arich/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://www.apmaths.uwo.ca/~arich/</a>",
  "id": "5b188f3239e5e454a6798872",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:49:38.627Z",
  "text": "@nasser1 OK, and can you additionally store the numbers, so that we can recreate the plots from the main page here http://www.apmaths.uwo.ca/~arich/",
  "unread": false,
  "urls": [
   {
    "url": "http://www.apmaths.uwo.ca/~arich/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> To edit your last message just go up with the arrow.",
  "id": "5b188f44ed65d52adeef45f0",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:49:56.066Z",
  "text": "@nasser1 To edit your last message just go up with the arrow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "And markdown works like on SE. Images can simply be dropped here or you use a link just like on SE chat.",
  "id": "5b188f66a788af749c45f1c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:50:30.781Z",
  "text": "And markdown works like on SE. Images can simply be dropped here or you use a link just like on SE chat.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "Yes, I  generate similar plots, as shown in the above link I posted.  (down the page a little).",
  "id": "5b188f9e82a4d36ea6d79a3f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:51:26.854Z",
  "text": "Yes, I  generate similar plots, as shown in the above link I posted.  (down the page a little).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "Ok, great, thanks for help. Will go now to work on starting a new build soon. It will take about 3 weeks or so to finish. Have to run Maple, Mathematica and Rubi since input is changed.  Talk soon",
  "id": "5b18902816f6496124123fc2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:53:44.312Z",
  "text": "Ok, great, thanks for help. Will go now to work on starting a new build soon. It will take about 3 weeks or so to finish. Have to run Maple, Mathematica and Rubi since input is changed.  Talk soon",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Thanks!",
  "id": "5b18903aed65d52adeef45f3",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T01:54:02.077Z",
  "text": "@nasser1 Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "fyi, I made an initial update for 4.15.2. This only includes the first 12 tests. There are total of 205 tests. Here is the link <a href=\"https://www.12000.org/my_notes/CAS_integration_tests/index.htm\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.12000.org/my_notes/CAS_integration_tests/index.htm</a>  and congratulation Albert, you finally solved that remaining problem in Timofeev so now rubi got 100% on this test.  Will update the above in the following days as more tests are completed.",
  "id": "5b18c4f299fa7f4c064ff67b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T05:38:58.185Z",
  "text": "fyi, I made an initial update for 4.15.2. This only includes the first 12 tests. There are total of 205 tests. Here is the link https://www.12000.org/my_notes/CAS_integration_tests/index.htm  and congratulation Albert, you finally solved that remaining problem in Timofeev so now rubi got 100% on this test.  Will update the above in the following days as more tests are completed.",
  "unread": false,
  "urls": [
   {
    "url": "https://www.12000.org/my_notes/CAS_integration_tests/index.htm"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "Opps, The upload did not work well. Will try again soon tonight.....",
  "id": "5b18c5f735e25f39975635d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T05:43:19.792Z",
  "text": "Opps, The upload did not work well. Will try again soon tonight.....",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "Ok. Now the  upload is OK. Thanks.",
  "id": "5b18d15193dc78791cba32dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T06:31:45.584Z",
  "text": "Ok. Now the  upload is OK. Thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> I checked out your initial test results for the current integration test problems that were created independently.   Looks good.  I especially liked the inclusion in the &quot;detailed summary table of results&quot;  of the number of steps and the number of distinct rules Rubi uses to integrate each problem.",
  "id": "5b199fc5ffd8896fe91000fd",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T21:12:37.967Z",
  "text": "@nasser1 I checked out your initial test results for the current integration test problems that were created independently.   Looks good.  I especially liked the inclusion in the \"detailed summary table of results\"  of the number of steps and the number of distinct rules Rubi uses to integrate each problem.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "It would be really useful to add antiderivative leaf count size information to your Table 1.  Specifically, in the problem # column include the size of the optimal antiderivative, and in the Rubi, Mathematica and Maple columns include the size of the antiderivative these systems produce.   Finally, I would eliminate the &quot;rules/integrand size&quot; column for Rubi, since it is not very interesting and just adds clutter.",
  "id": "5b199fe8ddd61d08e53aa35b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T21:13:12.962Z",
  "text": "It would be really useful to add antiderivative leaf count size information to your Table 1.  Specifically, in the problem # column include the size of the optimal antiderivative, and in the Rubi, Mathematica and Maple columns include the size of the antiderivative these systems produce.   Finally, I would eliminate the \"rules/integrand size\" column for Rubi, since it is not very interesting and just adds clutter.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Having your website show the steps Rubi uses to integrate each problem in the test suite is a good idea.  But it is irrelevant to showing the results of the comparative testing of Rubi, Mathematica, Maple, etc. you are conducting.  Therefore,  I recommend you have a separate section of your website showing the steps used to integrate problems in the test suite, and <em>not</em> try to include that information in the integration test results.",
  "id": "5b19a4cf106f3c24bde29411",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T21:34:07.229Z",
  "text": "@nasser1 Having your website show the steps Rubi uses to integrate each problem in the test suite is a good idea.  But it is irrelevant to showing the results of the comparative testing of Rubi, Mathematica, Maple, etc. you are conducting.  Therefore,  I recommend you have a separate section of your website showing the steps used to integrate problems in the test suite, and *not* try to include that information in the integration test results.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-07T22:15:20.490Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Re including antiderivative leaf count size information in your Table 1, I have an even better idea:  Instead of showing the raw size of Rubi, Mathematica and Maple&#39;s result in their respective columns,  show the quotient to 2 decimal places of  the raw size of their results divided by the size of the optimal antiderivative.  Notes:<ul>\n<li>This ratio more clearly shows the quality of the result. </li>\n<li>The raw leaf count size of the optimal antiderivative should still be included in the problem # column.</li>\n<li>If the grade of a result is C or F, the ratio should be shown as &quot;n/a&quot; since apples and oranges are being compared.</li>\n</ul>\n",
  "id": "5b19ae58dd54362753f51f41",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T22:14:48.044Z",
  "text": "@nasser1 Re including antiderivative leaf count size information in your Table 1, I have an even better idea:  Instead of showing the raw size of Rubi, Mathematica and Maple's result in their respective columns,  show the quotient to 2 decimal places of  the raw size of their results divided by the size of the optimal antiderivative.  Notes:\n* This ratio more clearly shows the quality of the result. \n* The raw leaf count size of the optimal antiderivative should still be included in the problem # column.\n* If the grade of a result is C or F, the ratio should be shown as \"n/a\" since apples and oranges are being compared.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "I hope you find these unsolicited suggestions useful.",
  "id": "5b19aee94b2d9417e1d0b02e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-07T22:17:13.232Z",
  "text": "I hope you find these unsolicited suggestions useful.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "hi everyone. I updated the CAS integration test report. Made the table 1 less busy and made new table 2 just to RUBI stats. Hope this makes it easier to read.<br>thanks.",
  "id": "5b1a354a14d4bc146e73abd3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-08T07:50:34.986Z",
  "text": "hi everyone. I updated the CAS integration test report. Made the table 1 less busy and made new table 2 just to RUBI stats. Hope this makes it easier to read.  \nthanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> I have set-up a function that extracts all Rubi rules from the notebook files and exports them automatically in <code>.m</code> files. However, I have about 260 rules less than your current <code>rubi.1.45.zip</code> when I extract them from the (updated) notebooks. I was having a look at this and I found that there are many code cells in the notebooks that are now commented out. For instance in 1.1.3.2 alone there seem to be about 5 rules you commented out.<br><strong>Question:</strong> Am I right, that the &quot;.m&quot; rule files in the rubi145.zip are not up to date with the notebooks?",
  "id": "5b1a3e1f43dc4e10144e9408",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-08T08:28:15.871Z",
  "text": "@AlbertRich I have set-up a function that extracts all Rubi rules from the notebook files and exports them automatically in `.m` files. However, I have about 260 rules less than your current `rubi.1.45.zip` when I extract them from the (updated) notebooks. I was having a look at this and I found that there are many code cells in the notebooks that are now commented out. For instance in 1.1.3.2 alone there seem to be about 5 rules you commented out. \n**Question:** Am I right, that the \".m\" rule files in the rubi145.zip are not up to date with the notebooks?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> That was fast!  Thanks Nasser.  I will take a look at your new test report tomorrow.",
  "id": "5b1a48b2dd54362753f6e1b4",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-08T09:13:22.236Z",
  "text": "@nasser1 That was fast!  Thanks Nasser.  I will take a look at your new test report tomorrow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> The updated notebook files are up-to-date.  They should have 6665 Int rules like Rubi 4.15 does.  How many did you get?",
  "id": "5b1a498d6023754a3178ba08",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-08T09:17:01.366Z",
  "text": "@halirutan The updated notebook files are up-to-date.  They should have 6665 Int rules like Rubi 4.15 does.  How many did you get?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> I need to inspect this with a clear head. Somehow there is a discrapancy. ",
  "id": "5b1a4ab8f4662f0f75acc162",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-08T09:22:00.242Z",
  "text": "@AlbertRich I need to inspect this with a clear head. Somehow there is a discrapancy. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "I&#39;ll look at this and report back.",
  "id": "5b1a4aedf4662f0f75acc165",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-08T09:22:53.722Z",
  "text": "I'll look at this and report back.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-08T09:39:27.886Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> I think I figured this mystery out.  In runtime file &quot;4.4 Miscellaneous trig functions.m&quot; and in source file &quot;4.4.3 Inert trig functions.nb&quot;, the load time control variable $LoadShowSteps controls which of two rules is loaded.<br>The code looks like If[$LoadShowSteps, rule1, rule2].  Perhaps you code for extracting such rule pairs from the notebook files does not handle this case.",
  "id": "5b1a4e9d4b2d9417e1d29a9e",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-08T09:38:37.364Z",
  "text": "@halirutan I think I figured this mystery out.  In runtime file \"4.4 Miscellaneous trig functions.m\" and in source file \"4.4.3 Inert trig functions.nb\", the load time control variable $LoadShowSteps controls which of two rules is loaded.\nThe code looks like If[$LoadShowSteps, rule1, rule2].  Perhaps you code for extracting such rule pairs from the notebook files does not handle this case.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "editedAt": "2018-06-08T10:12:59.567Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Couldn&#39;t resist looking at your revised report tonight.  Well done!  The results for Timofeev problem <span data-link-type=\"issue\" data-issue=\"327\" class=\"issue\">#327</span> particularly impressive:  Mathematica&#39;s result is 243 times the optimal size; Maple&#39;s is 3344 times the size...",
  "id": "5b1a54ea178709146f1e94e2",
  "issues": [
   {
    "number": "327"
   }
  ],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-08T10:05:30.352Z",
  "text": "@nasser1 Couldn't resist looking at your revised report tonight.  Well done!  The results for Timofeev problem #327 particularly impressive:  Mathematica's result is 243 times the optimal size; Maple's is 3344 times the size...",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<a href=\"https://files.gitter.im/Rule-Based-Integration/Lobby/PEaZ/image.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/Rule-Based-Integration/Lobby/PEaZ/thumb/image.png\" alt=\"image.png\" rel=\"nofollow\"></a>",
  "id": "5b1ab5fc3516592752f4058d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-08T16:59:40.558Z",
  "text": "[![image.png](https://files.gitter.im/Rule-Based-Integration/Lobby/PEaZ/thumb/image.png)](https://files.gitter.im/Rule-Based-Integration/Lobby/PEaZ/image.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/Rule-Based-Integration/Lobby/PEaZ/thumb/image.png"
   },
   {
    "url": "https://files.gitter.im/Rule-Based-Integration/Lobby/PEaZ/image.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "hi; I noticed in the input zip files, for the data files, one of the files has extra .... in the name. Here is screen shot . The file is 1_Algebraic_functions\\1.1_Binomial_products\\1.1.1 Linear\\1.1.1.5 P(x) (a+b x)^m (c+d x)^n....m  also this happens in the Maple zip file. Same file. So I fixed it on my end to remove the extra .... there as it caused problem for the build. May be this should fixed at the source. Thanks.",
  "id": "5b1ab65e6023754a317a6df1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-08T17:01:18.046Z",
  "text": "hi; I noticed in the input zip files, for the data files, one of the files has extra .... in the name. Here is screen shot . The file is 1_Algebraic_functions\\1.1_Binomial_products\\1.1.1 Linear\\1.1.1.5 P(x) (a+b x)^m (c+d x)^n....m  also this happens in the Maple zip file. Same file. So I fixed it on my end to remove the extra .... there as it caused problem for the build. May be this should fixed at the source. Thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-08T17:14:29.332Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> &quot;1.1.1.5 P(x) (a+b x)^m (c+d x)^n....m&quot; is a perfectly valid file name.   The  &quot;...&quot; is an ellipsis indicating the file has rules for more that 2 linear powers.",
  "id": "5b1ab9610b75bc7d5af41b00",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-08T17:14:09.070Z",
  "text": "@nasser1 \"1.1.1.5 P(x) (a+b x)^m (c+d x)^n....m\" is a perfectly valid file name.   The  \"...\" is an ellipsis indicating the file has rules for more that 2 linear powers.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-06-08T17:31:50.846Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "hi, Ok, but that caused problem on my end for some reason. No big deal. I changed the file name to have only one dot before the extension on my end, and now the build works ok and is happy. I also use Linux for building. It might be best not to have .... in file names just in case it causes problems.",
  "id": "5b1abd27106f3c24bde65bf0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-08T17:30:15.749Z",
  "text": "hi, Ok, but that caused problem on my end for some reason. No big deal. I changed the file name to have only one dot before the extension on my end, and now the build works ok and is happy. I also use Linux for building. It might be best not to have .... in file names just in case it causes problems.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Maybe you ought to tell the Linux people that it should not choke on file names having trailing dots...",
  "id": "5b1acc7a0b75bc7d5af46b40",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-08T18:35:38.976Z",
  "text": "@nasser1 Maybe you ought to tell the Linux people that it should not choke on file names having trailing dots...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Is there a why rules 1.2.3.5 and 1.2.3.6 have different filenames for the <code>.m</code> and the <code>.nb</code> file?",
  "id": "5b1b1b682af2f73497be8d0b",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T00:12:24.901Z",
  "text": "@AlbertRich Is there a why rules 1.2.3.5 and 1.2.3.6 have different filenames for the `.m` and the `.nb` file?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<a href=\"http://i.imgur.com/49djZcl.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://i.imgur.com/49djZcl.png</a>",
  "id": "5b1b1b6cf4662f0f75acc496",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T00:12:28.576Z",
  "text": "http://i.imgur.com/49djZcl.png",
  "unread": false,
  "urls": [
   {
    "url": "http://i.imgur.com/49djZcl.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "(The <code>P</code> and <code>Pq</code> is different)",
  "id": "5b1b1b7c2af2f73497be8d0e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T00:12:44.722Z",
  "text": "(The `P` and `Pq` is different)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Thanks for reporting this screw-up.  I recently shortened the name of these files for consistency with others.  Please change all Pq(x) to P(x) which indicates a polynomial in x.  I just updated the notebook and pdf rule files on Rubi&#39;s current website.",
  "id": "5b1b2a6fffd8896fe91509fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T01:16:31.365Z",
  "text": "Thanks for reporting this screw-up.  I recently shortened the name of these files for consistency with others.  Please change all Pq(x) to P(x) which indicates a polynomial in x.  I just updated the notebook and pdf rule files on Rubi's current website.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> OK. Just to give you an idea what I&#39;m doing: I&#39;m carefully comparing the expressions in your .m files with the expressions I extract from the nb files. If these match (which they do now), then I will load each .m file and check how many <code>Int</code> rules it creates. The same will be done for the nb files until everything matches. If this is working and I can be sure that I can successfully create an .m file from your notebooks, you don&#39;t have to bother this at all anymore. There will be a simple function inside the Rubi package that extracts all rules from your notebooks and creates the zipped .m files that contain several rule-sections like you have done manually.",
  "id": "5b1b2c71f4662f0f75acc4c0",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T01:25:05.363Z",
  "text": "@AlbertRich OK. Just to give you an idea what I'm doing: I'm carefully comparing the expressions in your .m files with the expressions I extract from the nb files. If these match (which they do now), then I will load each .m file and check how many `Int` rules it creates. The same will be done for the nb files until everything matches. If this is working and I can be sure that I can successfully create an .m file from your notebooks, you don't have to bother this at all anymore. There will be a simple function inside the Rubi package that extracts all rules from your notebooks and creates the zipped .m files that contain several rule-sections like you have done manually.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "If already have this working and now I&#39;m trying to verify that indeed all rules match and nothing get&#39;s lost.",
  "id": "5b1b2cabafb22070485371f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T01:26:03.760Z",
  "text": "If already have this working and now I'm trying to verify that indeed all rules match and nothing get's lost.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-09T01:28:14.290Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Great!  You can also delete cells which are commented out; thereby reducing the size of the runtime system.",
  "id": "5b1b2d1b6023754a317bec5d",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T01:27:55.929Z",
  "text": "@halirutan Great!  You can also delete cells which are commented out; thereby reducing the size of the runtime system.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Yes, this already happens. It will give a very compact form of the packages that looks like this",
  "id": "5b1b2d3ed1daf50305e1825d",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T01:28:30.332Z",
  "text": "@AlbertRich Yes, this already happens. It will give a very compact form of the packages that looks like this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<a href=\"http://i.imgur.com/spSSZ0v.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://i.imgur.com/spSSZ0v.png</a>",
  "id": "5b1b2d832af2f73497be8d35",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T01:29:39.723Z",
  "text": "http://i.imgur.com/spSSZ0v.png",
  "unread": false,
  "urls": [
   {
    "url": "http://i.imgur.com/spSSZ0v.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "(Sorry for the underlined warnings. You code is fine and I have already fixed this bug in my plugin)",
  "id": "5b1b2db486e65467cb853d3f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T01:30:28.801Z",
  "text": "(Sorry for the underlined warnings. You code is fine and I have already fixed this bug in my plugin)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> How come all the parentheses around the variable patterns in the rules?",
  "id": "5b1b2f000b75bc7d5af58fee",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T01:36:00.571Z",
  "text": "@halirutan How come all the parentheses around the variable patterns in the rules?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Mathematica does this. What I do is really simply and not hacky at all. Your notebooks are &quot;package notebooks&quot; which means all code that should go into the package is in a &quot;Code&quot; cell (the ugly gray ones you don&#39;t like).",
  "id": "5b1b2f5986e65467cb853d43",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T01:37:29.176Z",
  "text": "@AlbertRich Mathematica does this. What I do is really simply and not hacky at all. Your notebooks are \"package notebooks\" which means all code that should go into the package is in a \"Code\" cell (the ugly gray ones you don't like).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "I&#39;m importing the notebook and extract the expressions from these cells with<pre><code class=\"mma\">NotebookImport[file, <span class=\"string\">\"Code\"</span> -&gt; <span class=\"string\">\"HeldExpression\"</span>]</code></pre>",
  "id": "5b1b2f7cd1daf50305e18262",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T01:38:04.976Z",
  "text": "I'm importing the notebook and extract the expressions from these cells with\n\n```mma\nNotebookImport[file, \"Code\" -> \"HeldExpression\"]\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Yes! Almost there. All rules from your nb files match with the rules from your m files. Only one m/nb combination is off and let&#39;s hope it&#39; your fault :) Let me check",
  "id": "5b1b3064d1daf50305e18264",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T01:41:56.502Z",
  "text": "Yes! Almost there. All rules from your nb files match with the rules from your m files. Only one m/nb combination is off and let's hope it' your fault :) Let me check",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Before extracting the code from each .nb file, can you insert a Subsection style cell in the target .m file indicating the name of the .nb file like I do when I manually generate the runtime files?",
  "id": "5b1b314b6077c67d3edcb399",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T01:45:47.391Z",
  "text": "@halirutan Before extracting the code from each .nb file, can you insert a Subsection style cell in the target .m file indicating the name of the .nb file like I do when I manually generate the runtime files?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Look at the top of the image.",
  "id": "5b1b318d43dc4e10144e9757",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T01:46:53.127Z",
  "text": "@AlbertRich Look at the top of the image.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "I already thought about this.",
  "id": "5b1b31a1fe04d45a1e903ba9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T01:47:13.907Z",
  "text": "I already thought about this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "In the .m files that combine several nb files, I make a comment pointing to the file and section and make some whitespace for better visibility.",
  "id": "5b1b31d543dc4e10144e975a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T01:48:05.014Z",
  "text": "In the .m files that combine several nb files, I make a comment pointing to the file and section and make some whitespace for better visibility.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> That&#39;s a comment, not a Subsection cell.",
  "id": "5b1b31ef14d4bc146e77420b",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T01:48:31.795Z",
  "text": "@halirutan That's a comment, not a Subsection cell.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Packages don&#39;t contain cells. Do you mean something like this</p><pre><code class=\"mma\"><span class=\"comment\">(* ::Subsection:: *)</span>\n<span class=\"comment\">(* file... *)</span></code></pre><p>?</p>",
  "id": "5b1b322386e65467cb853d46",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T01:49:23.263Z",
  "text": "@AlbertRich Packages don't contain cells. Do you mean something like this\n\n```mma\n(* ::Subsection:: *)\n(* file... *)\n```\n?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Yes, so when I open up the .m file, it will not be monolithic.",
  "id": "5b1b32464b2d9417e1d5bf50",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T01:49:58.971Z",
  "text": "Yes, so when I open up the .m file, it will not be monolithic.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Yes, of course I can do that.",
  "id": "5b1b3279afb22070485371fa",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T01:50:49.806Z",
  "text": "@AlbertRich Yes, of course I can do that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> In which situation do you want to look at the .m file directly?",
  "id": "5b1b32b2fe04d45a1e903bac",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T01:51:46.985Z",
  "text": "@AlbertRich In which situation do you want to look at the .m file directly?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> When I or others are curious.",
  "id": "5b1b32dd106f3c24bde7ca47",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T01:52:29.635Z",
  "text": "@halirutan When I or others are curious.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "When you are happy with an .m file, please send me a copy.",
  "id": "5b1b33686077c67d3edcb8d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T01:54:48.132Z",
  "text": "When you are happy with an .m file, please send me a copy.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Ah, OK. Then we misunderstood each other. The package files I create are really only for the Mathematica package so that loading is as fast as possible. They are never meant to be looked at. You are of course free to SaveAs package and look at your package files. What I&#39;m trying to optimize is the &quot;creation of a Mathematica package for the user&quot;. This will work as follows:<ol>\n<li>You hack in the notebook files of your rules. Make adaptions, corrections, etc. You can test it locally as you are doing now.</li>\n<li>Once you are finished, you call a function I included which is currently named <code>CreatePackageFilesFromNotebooks[]</code>.</li>\n<li>This function will scan all your notebooks and created the combined .m files and place it in the correct folder inside the Rubi Mathematica package</li>\n<li>After this one step, you have a completely updated Rubi Mathematica package the users can use</li>\n</ol>\n",
  "id": "5b1b34aef4662f0f75acc4cc",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:00:14.483Z",
  "text": "@AlbertRich Ah, OK. Then we misunderstood each other. The package files I create are really only for the Mathematica package so that loading is as fast as possible. They are never meant to be looked at. You are of course free to SaveAs package and look at your package files. What I'm trying to optimize is the \"creation of a Mathematica package for the user\". This will work as follows:\n\n1. You hack in the notebook files of your rules. Make adaptions, corrections, etc. You can test it locally as you are doing now.\n2. Once you are finished, you call a function I included which is currently named `CreatePackageFilesFromNotebooks[]`.\n3. This function will scan all your notebooks and created the combined .m files and place it in the correct folder inside the Rubi Mathematica package\n4. After this one step, you have a completely updated Rubi Mathematica package the users can use",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Ok, it&#39;s a brave new world.",
  "id": "5b1b35873516592752f59207",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:03:51.487Z",
  "text": "@halirutan Ok, it's a brave new world.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> I try hard not to disturb your way of working and at the same time make maintaining Rubi easier.",
  "id": "5b1b35b9afb22070485371fd",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:04:41.677Z",
  "text": "@AlbertRich I try hard not to disturb your way of working and at the same time make maintaining Rubi easier.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Yup, I appreciate your efforts.  They are certainly necessary to make Rubi a communal effort.  My whole goal is to pass the torch.",
  "id": "5b1b368c14d4bc146e774d32",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:08:12.046Z",
  "text": "@halirutan Yup, I appreciate your efforts.  They are certainly necessary to make Rubi a communal effort.  My whole goal is to pass the torch.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Can you have a look at <code>1.2.3.4 (f x)...nb</code>?",
  "id": "5b1b3706fe04d45a1e903bb1",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:10:14.349Z",
  "text": "@AlbertRich Can you have a look at `1.2.3.4 (f x)...nb`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Do you see that the dot is highlighted red",
  "id": "5b1b372dd1daf50305e1826a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:10:53.835Z",
  "text": "Do you see that the dot is highlighted red",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<a href=\"http://i.imgur.com/uZjOLEx.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://i.imgur.com/uZjOLEx.png</a>",
  "id": "5b1b372ffe04d45a1e903bb4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:10:55.137Z",
  "text": "http://i.imgur.com/uZjOLEx.png",
  "unread": false,
  "urls": [
   {
    "url": "http://i.imgur.com/uZjOLEx.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> I opened 1.2.3.4.  Which rule are you looking at?",
  "id": "5b1b37b8e36e0e7d3f5f2a63",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:13:12.398Z",
  "text": "@halirutan I opened 1.2.3.4.  Which rule are you looking at?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "This is in rule <code>1.2.3.4.6.1.5.2.3</code> and it is the only file that goes wrong. Somehow the box-structure went wrong.",
  "id": "5b1b37bc86e65467cb853d4b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:13:16.967Z",
  "text": "This is in rule `1.2.3.4.6.1.5.2.3` and it is the only file that goes wrong. Somehow the box-structure went wrong.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "There should be exactly 16 of these errors. I can fix them myself, but I wanted to let you know that Mathematica screwed-up this notebook.",
  "id": "5b1b3804f4662f0f75acc4cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:14:28.462Z",
  "text": "There should be exactly 16 of these errors. I can fix them myself, but I wanted to let you know that Mathematica screwed-up this notebook.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Yup, it&#39;s red.  I noticed this happens when I search and replace &quot;<em>&quot; with &quot;</em>.&quot;.  Please tell me where the 16 errors are so I can fix them and keep are sources in sync.",
  "id": "5b1b38900b75bc7d5af5a56c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:16:48.376Z",
  "text": "Yup, it's red.  I noticed this happens when I search and replace \"_\" with \"_.\".  Please tell me where the 16 errors are so I can fix them and keep are sources in sync.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "That&#39;s an underscore with an underscore-dot.",
  "id": "5b1b38cf3516592752f59985",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:17:51.710Z",
  "text": "That's an underscore with an underscore-dot.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Pretty tough to find which rule contains such errors..",
  "id": "5b1b39e5afb2207048537201",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:22:29.772Z",
  "text": "@AlbertRich Pretty tough to find which rule contains such errors..",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Are they all in this file?",
  "id": "5b1b3a05106f3c24bde7dd0c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:23:01.854Z",
  "text": "Are they all in this file?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Yes.",
  "id": "5b1b3a0d2af2f73497be8d3d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:23:09.071Z",
  "text": "Yes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Ok, I&#39;ll put on my glasses and see if I can find them.",
  "id": "5b1b3a240b75bc7d5af5a9dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:23:32.745Z",
  "text": "Ok, I'll put on my glasses and see if I can find them.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "I found already 12",
  "id": "5b1b3a3395655c7c6104036c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:23:47.666Z",
  "text": "I found already 12",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Sometimes, the dot is not red, but black.",
  "id": "5b1b3a3ef4662f0f75acc4d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:23:58.539Z",
  "text": "Sometimes, the dot is not red, but black.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Yes, I noticed that too.  Really weird...",
  "id": "5b1b3a59d7b4f6288cb8db9d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:24:25.519Z",
  "text": "Yes, I noticed that too.  Really weird...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Wait, I might have a way..",
  "id": "5b1b3ab895655c7c6104036e",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:26:00.540Z",
  "text": "@AlbertRich Wait, I might have a way..",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Yep, that works. I&#39;ll give you the cell numbers in a minute.",
  "id": "5b1b3c40afb2207048537204",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:32:32.477Z",
  "text": "Yep, that works. I'll give you the cell numbers in a minute.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "I just did a global search and replace m underscore dot  with  m underscore dot which fixes the problem.",
  "id": "5b1b3ce6144c8c6fea812ccf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:35:18.295Z",
  "text": "I just did a global search and replace m underscore dot  with  m underscore dot which fixes the problem.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> If you count from above all gray code cells, the following 16 contain such error. ",
  "id": "5b1b3ce8fe04d45a1e903bb6",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:35:20.359Z",
  "text": "@AlbertRich If you count from above all gray code cells, the following 16 contain such error. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<a href=\"http://i.imgur.com/gUfjwSu.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://i.imgur.com/gUfjwSu.png</a>",
  "id": "5b1b3ceb2af2f73497be8d3f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:35:23.511Z",
  "text": "http://i.imgur.com/gUfjwSu.png",
  "unread": false,
  "urls": [
   {
    "url": "http://i.imgur.com/gUfjwSu.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> As a check, you can run this on the notebook file",
  "id": "5b1b3d7595655c7c61040371",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:37:41.420Z",
  "text": "@AlbertRich As a check, you can run this on the notebook file",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-09T02:37:53.418Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\">notebookFile = \n  <span class=\"string\">\"MathematicaNotebookFiles/1 Algebraic functions/1.2 Trinomial products/1.2.3 General/1.2.3.4 (f x)^m (d+e x^n)^q (a+b x^n+c x^(2 \\\nn))^p.nb\"</span>;\nr = <span class=\"keyword\">DeleteCases</span>[\n   NotebookImport[notebookFile, <span class=\"string\">\"Code\"</span> -&gt; <span class=\"string\">\"HeldExpression\"</span>], \n   <span class=\"keyword\">HoldComplete</span>[<span class=\"keyword\">Null</span>]];\n\n<span class=\"keyword\">Do</span>[\n <span class=\"keyword\">DownValues</span>[Int] = <span class=\"list\">{}</span>;\n <span class=\"keyword\">ReleaseHold</span>[r[[i]]];\n <span class=\"keyword\">If</span>[<span class=\"keyword\">Length</span>[<span class=\"keyword\">DownValues</span>[Int]] =!= <span class=\"number\">1</span>,\n  <span class=\"keyword\">Print</span>[i]\n  ];\n <span class=\"keyword\">DownValues</span>[Int] = <span class=\"list\">{}</span>,\n <span class=\"list\">{i, Length[r]}</span>\n ]</code></pre>",
  "id": "5b1b3d79d1daf50305e1826c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:37:45.382Z",
  "text": "```mma\nnotebookFile = \n  \"MathematicaNotebookFiles/1 Algebraic functions/1.2 Trinomial products/1.2.3 General/1.2.3.4 (f x)^m (d+e x^n)^q (a+b x^n+c x^(2 \\\nn))^p.nb\";\nr = DeleteCases[\n   NotebookImport[notebookFile, \"Code\" -> \"HeldExpression\"], \n   HoldComplete[Null]];\n\nDo[\n DownValues[Int] = {};\n ReleaseHold[r[[i]]];\n If[Length[DownValues[Int]] =!= 1,\n  Print[i]\n  ];\n DownValues[Int] = {},\n {i, Length[r]}\n ]\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "If there is no number output from the Do loop, than you fixed all.",
  "id": "5b1b3d93fe04d45a1e903bb9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:38:11.239Z",
  "text": "If there is no number output from the Do loop, than you fixed all.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "It basically checks if every code cell in this notebook indeed creates an <code>Int</code> rule",
  "id": "5b1b3da943dc4e10144e975d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:38:33.363Z",
  "text": "It basically checks if every code cell in this notebook indeed creates an `Int` rule",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> I&#39;ll let you do that.  I just uploaded a corrected 1.2.3.4 to Rubi&#39;s current website.",
  "id": "5b1b3e86144c8c6fea812f9c",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:42:14.195Z",
  "text": "@halirutan I'll let you do that.  I just uploaded a corrected 1.2.3.4 to Rubi's current website.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Another important remark. Something like this is really bad</p><pre><code class=\"mma\"><span class=\"keyword\">If</span>[ShowSteps, f[x_] := x, f[x_] := x^<span class=\"number\">2</span>]</code></pre><p>The reason is really simple. If <code>ShowSteps</code> is not a boolean, then nothing will be evaluated. Try it out</p><pre><code class=\"mma\"><span class=\"keyword\">ClearAll</span>[ShowSteps];\n<span class=\"keyword\">If</span>[ShowSteps, f[x_] := x, f[x_] := x^<span class=\"number\">2</span>]</code></pre>",
  "id": "5b1b3f2a43dc4e10144e975f",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:44:58.548Z",
  "text": "@AlbertRich Another important remark. Something like this is really bad\n\n```mma\nIf[ShowSteps, f[x_] := x, f[x_] := x^2]\n```\n\nThe reason is really simple. If `ShowSteps` is not a boolean, then nothing will be evaluated. Try it out\n\n```mma\nClearAll[ShowSteps];\nIf[ShowSteps, f[x_] := x, f[x_] := x^2]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Yes, currently I use ===True.",
  "id": "5b1b3f5914d4bc146e776086",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:45:45.881Z",
  "text": "Yes, currently I use ===True.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "The fix is really easy: <strong>Always</strong> use <code>TrueQ</code> around the condition. This has led to so many hard to track bugs.",
  "id": "5b1b3f5bafb2207048537206",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:45:47.218Z",
  "text": "The fix is really easy: **Always** use `TrueQ` around the condition. This has led to so many hard to track bugs.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> I just mention it because I saw it in your files when you define rules.",
  "id": "5b1b3f7b2af2f73497be8d41",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:46:19.815Z",
  "text": "@AlbertRich I just mention it because I saw it in your files when you define rules.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Yes, legacy code that needs updating.",
  "id": "5b1b3f9be36e0e7d3f5f3a83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:46:51.946Z",
  "text": "Yes, legacy code that needs updating.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Mathematica should also have a FalseQ...",
  "id": "5b1b3fefdd54362753fa4eb7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:48:15.249Z",
  "text": "Mathematica should also have a FalseQ...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> OK, now I have 6648 rules for both the nb and the m files. There might be some more because I did not define ShowSteps and those rules are missing but I get the same number.",
  "id": "5b1b40212af2f73497be8d44",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:49:05.713Z",
  "text": "@AlbertRich OK, now I have 6648 rules for both the nb and the m files. There might be some more because I did not define ShowSteps and those rules are missing but I get the same number.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "That&#39;s progress!",
  "id": "5b1b404b6023754a317c187b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:49:47.033Z",
  "text": "That's progress!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> One question about the order of rule loading. Right now, you load section 9.1 first and the other 9.x later. The whole 9. section contains only some rules. Is it important that these are loaded first?",
  "id": "5b1b408dd1daf50305e1826e",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:50:53.838Z",
  "text": "@AlbertRich One question about the order of rule loading. Right now, you load section 9.1 first and the other 9.x later. The whole 9. section contains only some rules. Is it important that these are loaded first?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "(For the other sections it doesn&#39;t matter, because we simply load them one after another)",
  "id": "5b1b40acfe04d45a1e903bbb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:51:24.355Z",
  "text": "(For the other sections it doesn't matter, because we simply load them one after another)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Yes, the packages must be loaded in the order given in Rubi.m.",
  "id": "5b1b40e40b75bc7d5af5b8c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:52:20.197Z",
  "text": "Yes, the packages must be loaded in the order given in Rubi.m.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "OK",
  "id": "5b1b4107f4662f0f75acc4dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:52:55.294Z",
  "text": "OK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> And just to be extra picky: Would it be OK to load the complete section 9 first or wouldn&#39;t this work?",
  "id": "5b1b414c43dc4e10144e9762",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:54:04.272Z",
  "text": "@AlbertRich And just to be extra picky: Would it be OK to load the complete section 9 first or wouldn't this work?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Nope.",
  "id": "5b1b4163ddd61d08e53fee83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:54:27.655Z",
  "text": "Nope.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Hehe :smile: ",
  "id": "5b1b417695655c7c61040374",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:54:46.134Z",
  "text": "Hehe :smile: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "For section 9 just use the  .m file produced by the .nb file.",
  "id": "5b1b419b4b2d9417e1d5df7f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:55:23.452Z",
  "text": "For section 9 just use the  .m file produced by the .nb file.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Since all the other packages <em>are</em> loaded in order, it would be OK to only divide section 9 and for the rest put all in one big m file that loads faster.",
  "id": "5b1b421695655c7c61040376",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:57:26.569Z",
  "text": "@AlbertRich Since all the other packages *are* loaded in order, it would be OK to only divide section 9 and for the rest put all in one big m file that loads faster.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "This is how the current Rubi Mathematica package looks like (9 is not separated yet)<pre><code>Rubi\n\u251c\u2500\u2500 IntegrationRules\n\u2502   \u251c\u2500\u2500 <span class=\"number\">1</span> Algebraic functions<span class=\"class\">.m</span>\n\u2502   \u251c\u2500\u2500 <span class=\"number\">2</span> Exponentials<span class=\"class\">.m</span>\n\u2502   \u251c\u2500\u2500 <span class=\"number\">3</span> Logarithms<span class=\"class\">.m</span>\n\u2502   \u251c\u2500\u2500 <span class=\"number\">4</span> Trig functions<span class=\"class\">.m</span>\n\u2502   \u251c\u2500\u2500 <span class=\"number\">5</span> Inverse trig functions<span class=\"class\">.m</span>\n\u2502   \u251c\u2500\u2500 <span class=\"number\">6</span> Hyperbolic functions<span class=\"class\">.m</span>\n\u2502   \u251c\u2500\u2500 <span class=\"number\">7</span> Inverse hyperbolic functions<span class=\"class\">.m</span>\n\u2502   \u251c\u2500\u2500 <span class=\"number\">8</span> Special functions<span class=\"class\">.m</span>\n\u2502   \u2514\u2500\u2500 <span class=\"number\">9</span> Miscellaneous<span class=\"class\">.m</span>\n\u251c\u2500\u2500 Integration utility functions<span class=\"class\">.m</span>\n\u251c\u2500\u2500 Kernel\n\u2502   \u2514\u2500\u2500 init<span class=\"class\">.m</span>\n\u251c\u2500\u2500 PacletInfo<span class=\"class\">.m</span>\n\u251c\u2500\u2500 Rubi<span class=\"class\">.m</span>\n\u251c\u2500\u2500 RubiPackageTools<span class=\"class\">.m</span>\n\u2514\u2500\u2500 ShowStep routines.m</code></pre>",
  "id": "5b1b426a43dc4e10144e9765",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T02:58:50.091Z",
  "text": "This is how the current Rubi Mathematica package looks like (9 is not separated yet)\n\n```\nRubi\n\u251c\u2500\u2500 IntegrationRules\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 1 Algebraic functions.m\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 2 Exponentials.m\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 3 Logarithms.m\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 4 Trig functions.m\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 5 Inverse trig functions.m\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 6 Hyperbolic functions.m\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 7 Inverse hyperbolic functions.m\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 8 Special functions.m\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 9 Miscellaneous.m\n\u251c\u2500\u2500 Integration utility functions.m\n\u251c\u2500\u2500 Kernel\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 init.m\n\u251c\u2500\u2500 PacletInfo.m\n\u251c\u2500\u2500 Rubi.m\n\u251c\u2500\u2500 RubiPackageTools.m\n\u2514\u2500\u2500 ShowStep routines.m\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-09T03:03:02.193Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "You will need to look at each of the rule files in Rubi4.15.zip and use the exact same order shown in each file.  Also these collective .m file must be loaded in the same order as in Rubi.m.",
  "id": "5b1b433514d4bc146e7769da",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T03:02:13.034Z",
  "text": "You will need to look at each of the rule files in Rubi4.15.zip and use the exact same order shown in each file.  Also these collective .m file must be loaded in the same order as in Rubi.m.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "I am not a big fan of monolithic files.",
  "id": "5b1b4393659aad4a3261018e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T03:03:47.123Z",
  "text": "I am not a big fan of monolithic files.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Ah, I see. They are not in order. That slipped my eye and I was wondering why you didn&#39;t zip all section 1 files together.",
  "id": "5b1b439f95655c7c6104037a",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T03:03:59.062Z",
  "text": "@AlbertRich Ah, I see. They are not in order. That slipped my eye and I was wondering why you didn't zip all section 1 files together.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "OK, I see.",
  "id": "5b1b43a586e65467cb853d4d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T03:04:05.581Z",
  "text": "OK, I see.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<blockquote>\n<p>I am not a big fan of monolithic files.</p></blockquote>\n<p>The parser of Mathematica is however :smile: </p>",
  "id": "5b1b43b995655c7c6104037d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T03:04:25.427Z",
  "text": "> I am not a big fan of monolithic files.\n\nThe parser of Mathematica is however :smile: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Ok, Mma&#39;s the boss.",
  "id": "5b1b43f6a09ae108e60eec55",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T03:05:26.393Z",
  "text": "Ok, Mma's the boss.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Anyway, I need to adjust this to pack only the correct subsections together like you did. I&#39;m going to work on this and then I&#39;m off to bed.",
  "id": "5b1b441fafb2207048537208",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T03:06:07.232Z",
  "text": "Anyway, I need to adjust this to pack only the correct subsections together like you did. I'm going to work on this and then I'm off to bed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "I guess it&#39;s almost time for swimming again on your side.",
  "id": "5b1b44332af2f73497be8d4e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T03:06:27.760Z",
  "text": "I guess it's almost time for swimming again on your side.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "No, actually I did some volunteer conservation work today trying to restore native Hawaiian habitat.  So that was my exercise.",
  "id": "5b1b4473106f3c24bde7f480",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T03:07:31.443Z",
  "text": "No, actually I did some volunteer conservation work today trying to restore native Hawaiian habitat.  So that was my exercise.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "But I need a desperately need a shower.  :smile: ",
  "id": "5b1b449a3516592752f5b1ad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T03:08:10.405Z",
  "text": "But I need a desperately need a shower.  :smile: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> That&#39;s nice too. I was looking some youtube videos of Hawaiian speakers to get a feel for the difference in language. That was fun",
  "id": "5b1b44c595655c7c6104037f",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T03:08:53.315Z",
  "text": "@AlbertRich That's nice too. I was looking some youtube videos of Hawaiian speakers to get a feel for the difference in language. That was fun",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "As you recommended, I replaced all occurrences of &quot;If[$LoadShowSteps,&quot; with &quot;If[TrueQ[$LoadShowSteps],&quot; in Rubi&#39;s source files, and updated the relevant files on Rubi&#39;s current website.",
  "id": "5b1b547e659aad4a3261278b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-09T04:15:58.987Z",
  "text": "As you recommended, I replaced all occurrences of \"If[$LoadShowSteps,\" with \"If[TrueQ[$LoadShowSteps],\" in Rubi's source files, and updated the relevant files on Rubi's current website.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Success. I have a first running version where everything is created automatically and Rubi has the same number of rules as your Rubi.zip that is online and integration works.",
  "id": "5b1f2670fcb8bb6f9ac7fbdc",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T01:48:32.112Z",
  "text": "@AlbertRich Success. I have a first running version where everything is created automatically and Rubi has the same number of rules as your Rubi.zip that is online and integration works.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Yea!",
  "id": "5b1f35a537a2df7bed34d43f",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T02:53:25.813Z",
  "text": "@halirutan Yea!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Does show step also work?",
  "id": "5b1f3653e87f0c7bee8389fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T02:56:19.406Z",
  "text": "Does show step also work?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Yes, and I&#39;m ripping it apart at the moment (only a little bit). Instead of printing anything directly, I&#39;m collecting rules and intermediate results with <code>Sow</code> and <code>Reap</code>. With this, we (1) separate the nice formatting and have much more control over it and more importantly (2) we can create correct cells that finally will be replaced when you run the command again. This is at the moment not working.",
  "id": "5b1f36fef361b3718af36672",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T02:59:10.821Z",
  "text": "@AlbertRich Yes, and I'm ripping it apart at the moment (only a little bit). Instead of printing anything directly, I'm collecting rules and intermediate results with `Sow` and `Reap`. With this, we (1) separate the nice formatting and have much more control over it and more importantly (2) we can create correct cells that finally will be replaced when you run the command again. This is at the moment not working.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> That will make Nasser happy.",
  "id": "5b1f3750202c8f71f5f9ecff",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:00:32.724Z",
  "text": "@halirutan That will make Nasser happy.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> One question that you might be able to answer from the top of your head: Near the end, the <code>Rubi.m</code> looks like this",
  "id": "5b1f37979a71c135a40d5994",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:01:43.208Z",
  "text": "@AlbertRich One question that you might be able to answer from the top of your head: Near the end, the `Rubi.m` looks like this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\"><span class=\"keyword\">If</span>[$LoadShowSteps === <span class=\"keyword\">True</span>,\n  StatusBarPrint[<span class=\"string\">\"Modifying \"</span> &lt;&gt; <span class=\"keyword\">ToString</span>[$RuleCount] &lt;&gt; <span class=\"string\">\" integration rules to display steps...\"</span>];\n  StepFunction[Int];\n];\n\n\nInt[u_, <span class=\"list\">{x_Symbol, a_, b_}</span>] :=\n    <span class=\"keyword\">With</span>[<span class=\"list\">{result = Int[u, x]}</span>,\n      <span class=\"keyword\">Limit</span>[result, x -&gt; b] - <span class=\"keyword\">Limit</span>[result, x -&gt; a]]\n\n\nInt[<span class=\"list\">{u__}</span>, x_Symbol] :=\n    <span class=\"keyword\">Map</span>[<span class=\"keyword\">Function</span>[Int[#, x]], <span class=\"list\">{u}</span>]</code></pre>",
  "id": "5b1f37a206cb3c5aa6e2b143",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:01:54.022Z",
  "text": "```mma\nIf[$LoadShowSteps === True,\n  StatusBarPrint[\"Modifying \" <> ToString[$RuleCount] <> \" integration rules to display steps...\"];\n  StepFunction[Int];\n];\n\n\nInt[u_, {x_Symbol, a_, b_}] :=\n    With[{result = Int[u, x]},\n      Limit[result, x -> b] - Limit[result, x -> a]]\n\n\nInt[{u__}, x_Symbol] :=\n    Map[Function[Int[#, x]], {u}]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Would it in principle be possible, to call the modification of the DownValues in <code>StepFunction[Int]</code> <em>after</em> the last two definitions?",
  "id": "5b1f37e1fcb8bb6f9ac7fbe8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:02:57.286Z",
  "text": "Would it in principle be possible, to call the modification of the DownValues in `StepFunction[Int]` *after* the last two definitions?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Not sure.  Best to filter out matches to these 2 rules in StepFunction.",
  "id": "5b1f38668864a936cc805b53",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:05:10.504Z",
  "text": "@halirutan Not sure.  Best to filter out matches to these 2 rules in StepFunction.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Actually in ModifyRule.",
  "id": "5b1f38af4fbf4449eb0e7c2d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:06:23.458Z",
  "text": "Actually in ModifyRule.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> OK, that was my thought exactly. My goal is to get rid of the definitions of the global variables for <em>loading elementary functions</em> and <em>loading step routines</em>. ",
  "id": "5b1f38b428965a566fe0858a",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:06:28.089Z",
  "text": "@AlbertRich OK, that was my thought exactly. My goal is to get rid of the definitions of the global variables for *loading elementary functions* and *loading step routines*. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "And replace them with what?",
  "id": "5b1f38cf202c8f71f5f9eecf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:06:55.951Z",
  "text": "And replace them with what?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-12T03:08:44.594Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "The <code>Global`$LoadShowSteps</code> with absolutely nothing. I will implement that the user can call <code>Int[...,x, Steps]</code> (or much more intuitive <code>Steps[Int[...,x]]</code>) and if the rules weren&#39;t already modified, it&#39;s done in the first call.",
  "id": "5b1f393206cb3c5aa6e2b145",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:08:34.350Z",
  "text": "The ``Global`$LoadShowSteps`` with absolutely nothing. I will implement that the user can call `Int[...,x, Steps]` (or much more intuitive `Steps[Int[...,x]]`) and if the rules weren't already modified, it's done in the first call.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Sounds good.  But there will be a long pause while the rules are modified.  Maybe you can speed up the ModifyRule routine...",
  "id": "5b1f39b3d128fa71f661c9ad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:10:43.009Z",
  "text": "Sounds good.  But there will be a long pause while the rules are modified.  Maybe you can speed up the ModifyRule routine...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "As for the extended set of elementary function rules, I haven&#39;t decided yet. The best thing would be (it&#39;s done in many packages with C-libraries) to build an <code>.mx</code> file automatically when Rubi is loaded the first time. The <code>.mx</code> package loads in under a second and we could always load the extended rule set.",
  "id": "5b1f39e906cb3c5aa6e2b147",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:11:37.984Z",
  "text": "As for the extended set of elementary function rules, I haven't decided yet. The best thing would be (it's done in many packages with C-libraries) to build an `.mx` file automatically when Rubi is loaded the first time. The `.mx` package loads in under a second and we could always load the extended rule set.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Did you separate the rule-sets because of the loading time of the package or because to minimize the number of rules?",
  "id": "5b1f3a0f9a71c135a40d59a8",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:12:15.288Z",
  "text": "@AlbertRich Did you separate the rule-sets because of the loading time of the package or because to minimize the number of rules?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "???  There is only one rule set, that is optionally modified.",
  "id": "5b1f3a5332618e705eb26187",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:13:23.439Z",
  "text": "???  There is only one rule set, that is optionally modified.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-12T03:14:29.429Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Hehe.. I mean, you load the basic rules always and the trig-functions etc only when you specify <code>Global`$LoadElementaryFunctionRules</code>. Why did you do that?",
  "id": "5b1f3a87f361b3718af3667b",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:14:15.986Z",
  "text": "@AlbertRich Hehe.. I mean, you load the basic rules always and the trig-functions etc only when you specify ``Global`$LoadElementaryFunctionRules``. Why did you do that?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Load time and memory.",
  "id": "5b1f3ac032618e705eb2629b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:15:12.263Z",
  "text": "Load time and memory.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Small is beautiful.",
  "id": "5b1f3aeb32618e705eb26333",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:15:55.563Z",
  "text": "Small is beautiful.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> OK. I have several ideas. E.g. on the very first call to <code>&lt;&lt;Rubi` </code> we could build two <code>.mx</code> files. One with the small standard rules and one that contains the elementary functions. Then, a simple function like <code>LoadElementaryFunctions[]</code> could load the additional rules also. ",
  "id": "5b1f3b54fcb8bb6f9ac7fbf3",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:17:40.325Z",
  "text": "@AlbertRich OK. I have several ideas. E.g. on the very first call to ``<<Rubi` `` we could build two `.mx` files. One with the small standard rules and one that contains the elementary functions. Then, a simple function like `LoadElementaryFunctions[]` could load the additional rules also. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "This had the advantage that Mathematica shows autocompletion for this function and the user doesn&#39;t need to remember the name of the global <code>$LoadElem..</code>.",
  "id": "5b1f3b82f361b3718af3667e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:18:26.945Z",
  "text": "This had the advantage that Mathematica shows autocompletion for this function and the user doesn't need to remember the name of the global `$LoadElem..`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "But first, I will fix the display of the steps.",
  "id": "5b1f3b9328965a566fe0858d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:18:43.579Z",
  "text": "But first, I will fix the display of the steps.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Once this is done, I&#39;m going to run some larger tests and if everything works, this will be pushed to GitHub so that we finally have it online.",
  "id": "5b1f3bd128965a566fe0858f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:19:45.533Z",
  "text": "Once this is done, I'm going to run some larger tests and if everything works, this will be pushed to GitHub so that we finally have it online.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "I guess, loading only the algebraic function rules is only necessary when I&#39;m debugging Rubi.  For end users, it doesn&#39;t matter.  So let&#39;s keep it simple and always load everything.",
  "id": "5b1f3c0170d89b3a318eb9c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:20:33.263Z",
  "text": "I guess, loading only the algebraic function rules is only necessary when I'm debugging Rubi.  For end users, it doesn't matter.  So let's keep it simple and always load everything.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> One last thing: Can you try what happens when you load Rubi without <code>Global`$LoadShowSteps</code> defined at all?",
  "id": "5b1f3c3c7cf3067ad2561349",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:21:32.973Z",
  "text": "@AlbertRich One last thing: Can you try what happens when you load Rubi without ``Global`$LoadShowSteps`` defined at all?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "I&#39;m not sure I have the very latest package from your site, but the one I have cannot integrate your basic example when I do this.",
  "id": "5b1f3c619a71c135a40d59ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:22:09.581Z",
  "text": "I'm not sure I have the very latest package from your site, but the one I have cannot integrate your basic example when I do this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Do you want my test routines so you can test GitRubi on the entire test suite,  or some percentage thereof.",
  "id": "5b1f3c77cf3b245b2cf68da1",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:22:31.712Z",
  "text": "@halirutan Do you want my test routines so you can test GitRubi on the entire test suite,  or some percentage thereof.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "This would be an indicator, that there is still a wrong <code>If[$ShowSteps, ... ]</code> anywhere.",
  "id": "5b1f3c7f7cf3067ad256134c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:22:39.233Z",
  "text": "This would be an indicator, that there is still a wrong `If[$ShowSteps, ... ]` anywhere.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<blockquote>\n<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Do you want my test routines so you can test GitRubi on the entire test suite,  or some percentage thereof.</p></blockquote>\n<p>Yes. Not now, but in a few days.</p>",
  "id": "5b1f3c997cf3067ad256134e",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:23:05.612Z",
  "text": "> @halirutan Do you want my test routines so you can test GitRubi on the entire test suite,  or some percentage thereof.\n\nYes. Not now, but in a few days.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "So please try with your current rubi the following",
  "id": "5b1f3cca7cf3067ad2561351",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:23:54.959Z",
  "text": "So please try with your current rubi the following",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\"><span class=\"keyword\">ClearAll</span>[$LoadShowSteps];\n$LoadElementaryFunctionRules = <span class=\"keyword\">True</span>;\n<span class=\"keyword\">Get</span>[<span class=\"keyword\">NotebookDirectory</span>[]&lt;&gt;<span class=\"string\">\"Rubi.m\"</span>];\n\nInt[(c + d*x)/(x*(a + b*x + c*x^<span class=\"number\">2</span>)), x]</code></pre>",
  "id": "5b1f3cf3d5599c49809d10e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:24:35.090Z",
  "text": "```mma\nClearAll[$LoadShowSteps];\n$LoadElementaryFunctionRules = True;\nGet[NotebookDirectory[]<>\"Rubi.m\"];\n\nInt[(c + d*x)/(x*(a + b*x + c*x^2)), x]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-12T03:25:02.752Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "In the package I downloaded, this does not stop to evaluate.",
  "id": "5b1f3d067cf3067ad2561353",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:24:54.361Z",
  "text": "In the package I downloaded, this does not stop to evaluate.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> I updated the source files on Rubi&#39;s current website but not the Rubi4.15.zip  file.",
  "id": "5b1f3f52e87f0c7bee8397f0",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:34:42.631Z",
  "text": "@halirutan I updated the source files on Rubi's current website but not the Rubi4.15.zip  file.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> I believe I have the very latest version of the rule notebooks but I might be wrong. Can you check these notebooks and see if you used <code>TrueQ[$LoadShowSteps]</code> or <code>===</code>?",
  "id": "5b1f416f7cf3067ad256135a",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:43:43.187Z",
  "text": "@AlbertRich I believe I have the very latest version of the rule notebooks but I might be wrong. Can you check these notebooks and see if you used `TrueQ[$LoadShowSteps]` or `===`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code>patrick<span class=\"annotation\">@lupus</span>:<span class=\"regexp\">~/workspace/</span>forks<span class=\"regexp\">/Rubi/</span>Rubi/IntegrationRuleNotebooks$ find . -name <span class=\"string\">\"*.m\"</span> -print0 | xargs -<span class=\"number\">0</span> fgrep <span class=\"string\">\"\\$LoadShowStep\"</span>\n.<span class=\"regexp\">/9 Miscellaneous/</span><span class=\"number\">9.4</span> Miscellaneous integration rules.<span class=\"string\">m:</span>If[$LoadShowSteps,\n.<span class=\"regexp\">/9 Miscellaneous/</span><span class=\"number\">9.4</span> Miscellaneous integration rules.<span class=\"string\">m:</span>If[$LoadShowSteps,\n.<span class=\"regexp\">/9 Miscellaneous/</span><span class=\"number\">9.4</span> Miscellaneous integration rules.<span class=\"string\">m:</span>If[$LoadShowSteps,\n.<span class=\"regexp\">/9 Miscellaneous/</span><span class=\"number\">9.4</span> Miscellaneous integration rules.<span class=\"string\">m:</span>If[$LoadShowSteps,\n.<span class=\"regexp\">/9 Miscellaneous/</span><span class=\"number\">9.4</span> Miscellaneous integration rules.<span class=\"string\">m:</span>If[$LoadShowSteps,\n.<span class=\"regexp\">/9 Miscellaneous/</span><span class=\"number\">9.4</span> Miscellaneous integration rules.<span class=\"string\">m:</span>If[$LoadShowSteps,\n.<span class=\"regexp\">/9 Miscellaneous/</span><span class=\"number\">9.4</span> Miscellaneous integration rules.<span class=\"string\">m:</span>If[$LoadShowSteps,\n.<span class=\"regexp\">/9 Miscellaneous/</span><span class=\"number\">9.4</span> Miscellaneous integration rules.<span class=\"string\">m:</span>If[$LoadShowSteps,\n.<span class=\"regexp\">/9 Miscellaneous/</span><span class=\"number\">9.4</span> Miscellaneous integration rules.<span class=\"string\">m:</span>If[$LoadShowSteps,\n.<span class=\"regexp\">/9 Miscellaneous/</span><span class=\"number\">9.1</span> Integrand simplification rules.<span class=\"string\">m:</span>If[$LoadShowSteps,\n.<span class=\"regexp\">/5 Inverse trig functions/</span><span class=\"number\">5.2</span> Inverse tangent/<span class=\"number\">5.2</span>.4 Miscellaneous inverse tangent.<span class=\"string\">m:</span>If[$LoadShowSteps,\n.<span class=\"regexp\">/5 Inverse trig functions/</span><span class=\"number\">5.2</span> Inverse tangent/<span class=\"number\">5.2</span>.4 Miscellaneous inverse tangent.<span class=\"string\">m:</span>If[$LoadShowSteps,\n.<span class=\"regexp\">/3 Logarithms/</span><span class=\"number\">3.5</span> Miscellaneous logarithms.<span class=\"string\">m:</span>(* If[$LoadShowSteps,\n.<span class=\"regexp\">/3 Logarithms/</span><span class=\"number\">3.5</span> Miscellaneous logarithms.<span class=\"string\">m:</span>If[$LoadShowSteps,\n.<span class=\"regexp\">/4 Trig functions/</span><span class=\"number\">4.4</span> Miscellaneous/<span class=\"number\">4.4</span>.3 Inert trig functions.<span class=\"string\">m:</span>If[$LoadShowSteps,\n.<span class=\"regexp\">/4 Trig functions/</span><span class=\"number\">4.4</span> Miscellaneous/<span class=\"number\">4.4</span>.3 Inert trig functions.<span class=\"string\">m:</span>If[$LoadShowSteps,\n.<span class=\"regexp\">/4 Trig functions/</span><span class=\"number\">4.4</span> Miscellaneous/<span class=\"number\">4.4</span>.3 Inert trig functions.<span class=\"string\">m:</span>If[$LoadShowSteps,\n.<span class=\"regexp\">/4 Trig functions/</span><span class=\"number\">4.4</span> Miscellaneous/<span class=\"number\">4.4</span>.3 Inert trig functions.<span class=\"string\">m:</span>If[$LoadShowSteps,\n.<span class=\"regexp\">/4 Trig functions/</span><span class=\"number\">4.4</span> Miscellaneous/<span class=\"number\">4.4</span>.3 Inert trig functions.<span class=\"string\">m:</span>If[$LoadShowSteps,\n.<span class=\"regexp\">/4 Trig functions/</span><span class=\"number\">4.4</span> Miscellaneous/<span class=\"number\">4.4</span>.3 Inert trig functions.<span class=\"string\">m:</span>If[$LoadShowSteps,\n.<span class=\"regexp\">/4 Trig functions/</span><span class=\"number\">4.4</span> Miscellaneous/<span class=\"number\">4.4</span>.3 Inert trig functions.<span class=\"string\">m:</span>(* If[$LoadShowSteps,\n.<span class=\"regexp\">/4 Trig functions/</span><span class=\"number\">4.1</span> Sine/<span class=\"number\">4.1</span>.0.1 (a sin)^m (b trg)^n.<span class=\"string\">m:</span>If[$LoadShowSteps,\n.<span class=\"regexp\">/7 Inverse hyperbolic functions/</span><span class=\"number\">7.2</span> Inverse hyperbolic tangent/<span class=\"number\">7.2</span>.4 Miscellaneous inverse hyperbolic tangent.<span class=\"string\">m:</span>If[$LoadShowSteps,\n.<span class=\"regexp\">/7 Inverse hyperbolic functions/</span><span class=\"number\">7.2</span> Inverse hyperbolic tangent/<span class=\"number\">7.2</span>.4 Miscellaneous inverse hyperbolic tangent.<span class=\"string\">m:</span>If[$LoadShowSteps,</code></pre>",
  "id": "5b1f41737cf3067ad256135d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:43:47.018Z",
  "text": "```\npatrick@lupus:~/workspace/forks/Rubi/Rubi/IntegrationRuleNotebooks$ find . -name \"*.m\" -print0 | xargs -0 fgrep \"\\$LoadShowStep\"\n./9 Miscellaneous/9.4 Miscellaneous integration rules.m:If[$LoadShowSteps,\n./9 Miscellaneous/9.4 Miscellaneous integration rules.m:If[$LoadShowSteps,\n./9 Miscellaneous/9.4 Miscellaneous integration rules.m:If[$LoadShowSteps,\n./9 Miscellaneous/9.4 Miscellaneous integration rules.m:If[$LoadShowSteps,\n./9 Miscellaneous/9.4 Miscellaneous integration rules.m:If[$LoadShowSteps,\n./9 Miscellaneous/9.4 Miscellaneous integration rules.m:If[$LoadShowSteps,\n./9 Miscellaneous/9.4 Miscellaneous integration rules.m:If[$LoadShowSteps,\n./9 Miscellaneous/9.4 Miscellaneous integration rules.m:If[$LoadShowSteps,\n./9 Miscellaneous/9.4 Miscellaneous integration rules.m:If[$LoadShowSteps,\n./9 Miscellaneous/9.1 Integrand simplification rules.m:If[$LoadShowSteps,\n./5 Inverse trig functions/5.2 Inverse tangent/5.2.4 Miscellaneous inverse tangent.m:If[$LoadShowSteps,\n./5 Inverse trig functions/5.2 Inverse tangent/5.2.4 Miscellaneous inverse tangent.m:If[$LoadShowSteps,\n./3 Logarithms/3.5 Miscellaneous logarithms.m:(* If[$LoadShowSteps,\n./3 Logarithms/3.5 Miscellaneous logarithms.m:If[$LoadShowSteps,\n./4 Trig functions/4.4 Miscellaneous/4.4.3 Inert trig functions.m:If[$LoadShowSteps,\n./4 Trig functions/4.4 Miscellaneous/4.4.3 Inert trig functions.m:If[$LoadShowSteps,\n./4 Trig functions/4.4 Miscellaneous/4.4.3 Inert trig functions.m:If[$LoadShowSteps,\n./4 Trig functions/4.4 Miscellaneous/4.4.3 Inert trig functions.m:If[$LoadShowSteps,\n./4 Trig functions/4.4 Miscellaneous/4.4.3 Inert trig functions.m:If[$LoadShowSteps,\n./4 Trig functions/4.4 Miscellaneous/4.4.3 Inert trig functions.m:If[$LoadShowSteps,\n./4 Trig functions/4.4 Miscellaneous/4.4.3 Inert trig functions.m:(* If[$LoadShowSteps,\n./4 Trig functions/4.1 Sine/4.1.0.1 (a sin)^m (b trg)^n.m:If[$LoadShowSteps,\n./7 Inverse hyperbolic functions/7.2 Inverse hyperbolic tangent/7.2.4 Miscellaneous inverse hyperbolic tangent.m:If[$LoadShowSteps,\n./7 Inverse hyperbolic functions/7.2 Inverse hyperbolic tangent/7.2.4 Miscellaneous inverse hyperbolic tangent.m:If[$LoadShowSteps,\n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> I just downloaded these files from Rubi&#39;s website and they all have TrueQ[$LoadShowSteps].",
  "id": "5b1f4398c277fb705dc637a6",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:52:56.684Z",
  "text": "@halirutan I just downloaded these files from Rubi's website and they all have TrueQ[$LoadShowSteps].",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> OK, then I missed your last update. Thanks.",
  "id": "5b1f43b6d5599c49809d10ee",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:53:26.812Z",
  "text": "@AlbertRich OK, then I missed your last update. Thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Obviously, at some point I will need to start updating the files directly on GitHub, but not until you get things settled out.",
  "id": "5b1f443ec277fb705dc638e0",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T03:55:42.074Z",
  "text": "@halirutan Obviously, at some point I will need to start updating the files directly on GitHub, but not until you get things settled out.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p>Here&#39;s an idea:</p><ul>\n<li>Split Rubi into two repositories:  Rubi/Engine and Rubi/Interface.</li>\n<li>Rubi/Engine will consist of the numbered source notebook files and &quot;Integration utility functions.m&quot;.</li>\n<li>Rubi/Interface will consist of the object code files you are now generating automatically and the remaining files in Rubi4.15.zip, including &quot;Rubi.m&quot; and &quot;ShowStep routines.m&quot;.</li>\n<li>Make Rubi/Engine read-write for me, and read-only for everybody else.</li>\n<li>Make Rubi/Interface read-write for you, and read-only for everybody else.</li>\n<li>Of course, anybody can copy the Rubi/Engine files and create their own integrator.</li>\n</ul>\n<p>This will give you the freedom to create a modern, friendly user interface for Rubi, using the full power of Mathematica and website development tools.  The interface is critically important to seeing rule-based math widely recognized and accepted.  But nothing would make me happier than being able to focus all my time on perfecting and extending Rubi&#39;s mathematical capabilities.</p>",
  "id": "5b1f992b37a2df7bed35a071",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T09:58:03.495Z",
  "text": "Here's an idea:\n* Split Rubi into two repositories:  Rubi/Engine and Rubi/Interface.\n* Rubi/Engine will consist of the numbered source notebook files and \"Integration utility functions.m\".\n* Rubi/Interface will consist of the object code files you are now generating automatically and the remaining files in Rubi4.15.zip, including \"Rubi.m\" and \"ShowStep routines.m\".\n* Make Rubi/Engine read-write for me, and read-only for everybody else.\n* Make Rubi/Interface read-write for you, and read-only for everybody else.\n* Of course, anybody can copy the Rubi/Engine files and create their own integrator.\n\nThis will give you the freedom to create a modern, friendly user interface for Rubi, using the full power of Mathematica and website development tools.  The interface is critically important to seeing rule-based math widely recognized and accepted.  But nothing would make me happier than being able to focus all my time on perfecting and extending Rubi's mathematical capabilities.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> As you can probably tell, I am very much a loner when it comes to software R&amp;D.  Just ask David Stoutemyer, my former partner of 18 years at Soft Warehouse, Inc.  Also I am terrible at the multitasking required to get serious work done when dealing with incessant interruptions.  </p><p>When we open GitRubi up to the public, hopefully there will be a lot of interest in the system and people getting involved in its development.   This will be lead to a continuous stream of questions, suggestions and requests as the system grows.  Are you willing to serve as the primary point-person for the site, and only pass on to me correspondence that is <em>relevant</em> and <em>useful</em> to Rubi/Engine development?</p>",
  "id": "5b1f9e31202c8f71f5fac7a7",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-12T10:19:29.769Z",
  "text": "@halirutan As you can probably tell, I am very much a loner when it comes to software R&D.  Just ask David Stoutemyer, my former partner of 18 years at Soft Warehouse, Inc.  Also I am terrible at the multitasking required to get serious work done when dealing with incessant interruptions.  \n\nWhen we open GitRubi up to the public, hopefully there will be a lot of interest in the system and people getting involved in its development.   This will be lead to a continuous stream of questions, suggestions and requests as the system grows.  Are you willing to serve as the primary point-person for the site, and only pass on to me correspondence that is *relevant* and *useful* to Rubi/Engine development?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "First version of steps",
  "id": "5b21c8f0fcb8bb6f9ac804d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-14T01:46:24.623Z",
  "text": "First version of steps",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<a href=\"http://i.imgur.com/4IlWGCh.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://i.imgur.com/4IlWGCh.png</a>",
  "id": "5b21c8f4d5599c49809d198f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-14T01:46:28.107Z",
  "text": "http://i.imgur.com/4IlWGCh.png",
  "unread": false,
  "urls": [
   {
    "url": "http://i.imgur.com/4IlWGCh.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Each intermediate result can be copied by clicking on it and of course all steps are recreated when you re-run the input.",
  "id": "5b21c9369a71c135a40d62c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-14T01:47:34.353Z",
  "text": "Each intermediate result can be copied by clicking on it and of course all steps are recreated when you re-run the input.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-14T02:26:16.397Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Hi Patrick.  My 94 year old neighbor is having a surprise birthday party soon.  I promised I would come, so I can&#39;t chat long. ",
  "id": "5b21d21b82b1b355c9563001",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-14T02:25:31.761Z",
  "text": "@halirutan Hi Patrick.  My 94 year old neighbor is having a surprise birthday party soon.  I promised I would come, so I can't chat long. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> At first glance, your improvements to showing integration steps seems right.  So does this mean you are agreeable to my proposal above that Rubi be split and you take control of  Rubi/Interface?",
  "id": "5b21d22f37a2df7bed3afb81",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-14T02:25:51.099Z",
  "text": "@halirutan At first glance, your improvements to showing integration steps seems right.  So does this mean you are agreeable to my proposal above that Rubi be split and you take control of  Rubi/Interface?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Just wanted to show you. Basically, you got almost everything correct in your &quot;proposal&quot;. I promise once we have any version up on GitHub I show you around and you&#39;ll see it&#39;s nothing more than folders and the structure follows what you suggested. I&#39;m writing a detailed answer these days to your proposal.",
  "id": "5b21d297d5599c49809d19a0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-14T02:27:35.092Z",
  "text": "Just wanted to show you. Basically, you got almost everything correct in your \"proposal\". I promise once we have any version up on GitHub I show you around and you'll see it's nothing more than folders and the structure follows what you suggested. I'm writing a detailed answer these days to your proposal.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Have a nice party and drink a Cuba Libre (no wait, that&#39;s the wrong drink for Hawaii) for me.",
  "id": "5b21d2ba7cf3067ad2561d06",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-14T02:28:10.129Z",
  "text": "Have a nice party and drink a Cuba Libre (no wait, that's the wrong drink for Hawaii) for me.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Great!  Look forward to it.",
  "id": "5b21d2ba82b1b355c9563064",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-14T02:28:10.693Z",
  "text": "@halirutan Great!  Look forward to it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Actually, I&#39;m a beer man.",
  "id": "5b21d2dfe87f0c7bee89d6b8",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-14T02:28:47.408Z",
  "text": "@halirutan Actually, I'm a beer man.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "You?",
  "id": "5b21d2e670d89b3a319505d2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-14T02:28:54.705Z",
  "text": "You?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Oh, too bad. I&#39;m not a beer man.",
  "id": "5b21d2f2fcb8bb6f9ac804d5",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-14T02:29:06.595Z",
  "text": "@AlbertRich Oh, too bad. I'm not a beer man.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "And I now, I&#39;m living in the Country with the best beer :)",
  "id": "5b21d2ff7cf3067ad2561d08",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-14T02:29:19.873Z",
  "text": "And I now, I'm living in the Country with the best beer :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> A true contrarian.",
  "id": "5b21d31dcf3b245b2cfcd22f",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-14T02:29:49.359Z",
  "text": "@halirutan A true contrarian.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Now go to your party and I go to bad. See you these days.",
  "id": "5b21d33b9a71c135a40d62db",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-14T02:30:19.514Z",
  "text": "@AlbertRich Now go to your party and I go to bad. See you these days.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Night.",
  "id": "5b21d355c277fb705dcc6908",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-14T02:30:45.681Z",
  "text": "@halirutan Night.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> There is another suggestion for the integration steps display made by a friend of mine. I like his idea as well, but I haven&#39;t tried how the very long rows will look and work in a notebook",
  "id": "5b223e65f361b3718af37051",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-14T10:07:33.125Z",
  "text": "@AlbertRich There is another suggestion for the integration steps display made by a friend of mine. I like his idea as well, but I haven't tried how the very long rows will look and work in a notebook",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<a href=\"https://i.stack.imgur.com/LhUIS.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://i.stack.imgur.com/LhUIS.png</a>",
  "id": "5b223e677cf3067ad2561dfb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-14T10:07:35.037Z",
  "text": "https://i.stack.imgur.com/LhUIS.png",
  "unread": false,
  "urls": [
   {
    "url": "https://i.stack.imgur.com/LhUIS.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Interesting idea.  Yes, long rows would be a real problem.  How about left justifying the intermediate results, and right justifying the rules on the line following intermediate results?   I actually like this scheme better since the rules applied are actually in some sense <em>between</em> the two intermediate results, rather than on the same line as intermediate results.",
  "id": "5b22bc0fc277fb705dceaaa5",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-14T19:03:43.206Z",
  "text": "@halirutan Interesting idea.  Yes, long rows would be a real problem.  How about left justifying the intermediate results, and right justifying the rules on the line following intermediate results?   I actually like this scheme better since the rules applied are actually in some sense *between* the two intermediate results, rather than on the same line as intermediate results.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-14T19:04:45.645Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "One relatively easy, clear improvement would be in the display of both intermediate results and rules to replace expressions of the form Dist[u,v,x] with u v.  Rubi just uses Dist to distribute u over the terms of v, and so is equal to u v.",
  "id": "5b22bc2f1ee2d149ecc2b5e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-14T19:04:15.156Z",
  "text": "One relatively easy, clear improvement would be in the display of both intermediate results and rules to replace expressions of the form Dist[u,v,x] with u v.  Rubi just uses Dist to distribute u over the terms of v, and so is equal to u v.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Also Subst[u,x,v] could be replaced by  u | x-&gt;v.",
  "id": "5b22bcc637a2df7bed3d348e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-14T19:06:46.819Z",
  "text": "Also Subst[u,x,v] could be replaced by  u | x->v.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Also in the intermediate results, replace Int[u,x] with the integral sign and dx.",
  "id": "5b22bfe0d128fa71f66a3e44",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-14T19:20:00.689Z",
  "text": "Also in the intermediate results, replace Int[u,x] with the integral sign and dx.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Also get rid of the verbose, space wasting &quot;Intermediate result: &quot;.",
  "id": "5b22c13386343c3a320548f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-14T19:25:39.752Z",
  "text": "Also get rid of the verbose, space wasting \"Intermediate result: \".",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-14T19:45:05.872Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "A rule&#39;s conditions are every bit as important as the transformation formula itself.  In fact, the formula may not be mathematically true, if the conditions are not met.  So, the formula should <em>not</em> be displayed without also showing the conditions.  I recommend showing the rules like Rubi currently does as just two cells, and without the strings &quot;Condition: &quot; and &quot;Transformation: &quot;.",
  "id": "5b22c5641ee2d149ecc2cf72",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-14T19:43:32.964Z",
  "text": "A rule's conditions are every bit as important as the transformation formula itself.  In fact, the formula may not be mathematically true, if the conditions are not met.  So, the formula should *not* be displayed without also showing the conditions.  I recommend showing the rules like Rubi currently does as just two cells, and without the strings \"Condition: \" and \"Transformation: \".\n",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "editedAt": "2018-06-14T19:48:38.106Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Also in the display of conditions, EqQ[u,v] should be replaced by u=v, GtQ[u,v] with u&gt;v, etc.",
  "id": "5b22c679e87f0c7bee8c145d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-14T19:48:09.831Z",
  "text": "Also in the display of conditions, EqQ[u,v] should be replaced by u=v, GtQ[u,v] with u>v, etc.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-06-14T21:31:14.587Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> My overall recommendation would be to make the display of steps look like math, not like program.",
  "id": "5b22de5a70d89b3a3197acd3",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-14T21:30:02.331Z",
  "text": "@halirutan My overall recommendation would be to make the display of steps look like math, not like program.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "When displaying an inverse trig or inverse hyperbolic function in Traditional Form, please replace sin^-1 with arcsin, etc.  The ^-1 notation is an ambiguous abomination that such be purged from mathematics.",
  "id": "5b22e433fd5b835b2d5c8846",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-14T21:54:59.670Z",
  "text": "When displaying an inverse trig or inverse hyperbolic function in Traditional Form, please replace sin^-1 with arcsin, etc.  The ^-1 notation is an ambiguous abomination that such be purged from mathematics.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-14T22:32:49.946Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> In the display of rules involving polynomials, I recommend using the convention that</p><ul>\n<li>P[x] indicates a polynomial in x,</li>\n<li>Pq[x] indicates a polynomial in x of degree q,</li>\n<li>P[x,n] indicates the coefficient of x^n in P[x],</li>\n<li>P[x^m,x] indicates a polynomial in x^m, and</li>\n<li>P[x^m,x,n] indicates the coefficient of x^(m n) in P.</li>\n</ul>\n<p>Thus expressions of the form Coeff[P,x,n]  or Coefficient[P,x,n] in the display of rules can be replaced with P[x,n].  Also since PolyQ[Pp,x] occurs in the conditions of the 4th rule in your png file, the PolyQ[Pp,x] can be eliminated from the display of the conditions in the rule <em>and</em> Pp replaced with Pp[x]  on the right side of the transformation formula.</p>",
  "id": "5b22ecd38864a936cc891ba7",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-14T22:31:47.352Z",
  "text": "@halirutan In the display of rules involving polynomials, I recommend using the convention that\n* P[x] indicates a polynomial in x,\n* Pq[x] indicates a polynomial in x of degree q,\n* P[x,n] indicates the coefficient of x^n in P[x],\n* P[x^m,x] indicates a polynomial in x^m, and\n* P[x^m,x,n] indicates the coefficient of x^(m n) in P.\n\nThus expressions of the form Coeff[P,x,n]  or Coefficient[P,x,n] in the display of rules can be replaced with P[x,n].  Also since PolyQ[Pp,x] occurs in the conditions of the 4th rule in your png file, the PolyQ[Pp,x] can be eliminated from the display of the conditions in the rule *and* Pp replaced with Pp[x]  on the right side of the transformation formula.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-06-14T22:37:12.238Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "I think these proposed changes (that I have been too lazy to make :smile:) will greatly improve the readability of the rules, and reduce clutter and their screen size.  Small is beautiful.",
  "id": "5b22ece5a0161836cb1c47a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-14T22:32:05.740Z",
  "text": "I think these proposed changes (that I have been too lazy to make :smile:) will greatly improve the readability of the rules, and reduce clutter and their screen size.  Small is beautiful.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> I hope you are not regretting sending me for comment the png file of your friend&#39;s suggestion for showing integration steps. :smile:  So here&#39;s another recommendation: ",
  "id": "5b238715cf3b245b2c009c0d",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-15T09:29:57.407Z",
  "text": "@halirutan I hope you are not regretting sending me for comment the png file of your friend's suggestion for showing integration steps. :smile:  So here's another recommendation: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Like I said before, always display the rule&#39;s name, conditions and transformation formula in two cells.  In the rule name/condition cell, include an opener icon that opens additional cells showing the rule&#39;s references, derivation method, basis and notes.  This documentation will have to be extracted from Rubi&#39;s source notebooks from Subsubsection style cells before a rule&#39;s code that begin with &quot;Reference:&quot;, &quot;Derivation:&quot;, &quot;Basis:&quot; or &quot;Notes:&quot; respectively.  Of course, rules may not have some or any of these documentation cells.",
  "id": "5b23874eebf21755ca33ccb8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-15T09:30:54.855Z",
  "text": "Like I said before, always display the rule's name, conditions and transformation formula in two cells.  In the rule name/condition cell, include an opener icon that opens additional cells showing the rule's references, derivation method, basis and notes.  This documentation will have to be extracted from Rubi's source notebooks from Subsubsection style cells before a rule's code that begin with \"Reference:\", \"Derivation:\", \"Basis:\" or \"Notes:\" respectively.  Of course, rules may not have some or any of these documentation cells.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "A good project for newbies working on GitRubi would be to work on finding references and/or derivation methods for rules that don&#39;t yet have them.",
  "id": "5b238820cf3b245b2c009e6e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-15T09:34:24.462Z",
  "text": "A good project for newbies working on GitRubi would be to work on finding references and/or derivation methods for rules that don't yet have them.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "This repository could and should turn into the gold-standard for integration...",
  "id": "5b238882e87f0c7bee8d9fd6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-15T09:36:02.283Z",
  "text": "This repository could and should turn into the gold-standard for integration...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<p>Before I leave to bed some notes:</p><ul>\n<li>The TraditionalForm for <code>ArcTan</code> and friends is built-in and will always be displayed as tan^-1 unless you really mess with the core system. I would not like to do that.</li>\n<li>The conditions are returned as a string when you modify the rules. I also don&#39;t like to mess with that because this code of yours is highly nested. Rewriting and making all this work would require too much time that I cannot afford right now and as long as I&#39;m working alone on this. If some enthusiast jumps on board who actually has a deep knowledge in integration, the the whole layout of the conditions can be changed.</li>\n<li>In the expressions (e.g. the interm. results and the rules) I can make some of the functions look nicer. Although I have to say the &quot;nice&quot; is very subjective. I, for instance, would much rather prefer to see <code>Int[...]</code> in the rules than the integration signs.</li>\n<li>I also thought about making reference from rules to the notebooks, but this is much work. I had the idea of encoding the position inside the notebook into the particular <code>DownValue</code> so that for each rule, you instantly know the notebook and the cell inside the notebook where this rule came from. But again, it&#39;s not trivial how to do this without breaking anything else.</li>\n</ul>\n<p>As for the design: I understand your argument about always showing the condition and rule, but you have to assume that the general user of Rubi is not a mathematician. In fact, I claim that most users will have problems with integration and turn then to Rubi. I, as a user, want to see first the steps and when I see a step that is interesting, <em>then</em> I want to know why this rule can be applied. The opener-view that was proposed is extremely nice for this since it keeps the steps narrow. The rule-number itself is also not that useful for the general user as it is only the index of the DownValue and he cannot find this number directly in your notebooks. Since there is no way to use this number except of inspecting the (for 80% of Mathematica users highly non-trivial) down-value rule, I don&#39;t believe it is necessary to show it always.</p><p>That being said, I implemented formatting for <code>Dist</code> and <code>Int</code> and changed the layout to be left/right aligned. I kept the opener-view, but if in doubt, we should ask the community what they users would prefer.</p>",
  "id": "5b249969e513c40d7741936c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-16T05:00:25.345Z",
  "text": "Before I leave to bed some notes:\n\n- The TraditionalForm for `ArcTan` and friends is built-in and will always be displayed as tan^-1 unless you really mess with the core system. I would not like to do that.\n- The conditions are returned as a string when you modify the rules. I also don't like to mess with that because this code of yours is highly nested. Rewriting and making all this work would require too much time that I cannot afford right now and as long as I'm working alone on this. If some enthusiast jumps on board who actually has a deep knowledge in integration, the the whole layout of the conditions can be changed.\n- In the expressions (e.g. the interm. results and the rules) I can make some of the functions look nicer. Although I have to say the \"nice\" is very subjective. I, for instance, would much rather prefer to see `Int[...]` in the rules than the integration signs.\n- I also thought about making reference from rules to the notebooks, but this is much work. I had the idea of encoding the position inside the notebook into the particular `DownValue` so that for each rule, you instantly know the notebook and the cell inside the notebook where this rule came from. But again, it's not trivial how to do this without breaking anything else.\n\nAs for the design: I understand your argument about always showing the condition and rule, but you have to assume that the general user of Rubi is not a mathematician. In fact, I claim that most users will have problems with integration and turn then to Rubi. I, as a user, want to see first the steps and when I see a step that is interesting, *then* I want to know why this rule can be applied. The opener-view that was proposed is extremely nice for this since it keeps the steps narrow. The rule-number itself is also not that useful for the general user as it is only the index of the DownValue and he cannot find this number directly in your notebooks. Since there is no way to use this number except of inspecting the (for 80% of Mathematica users highly non-trivial) down-value rule, I don't believe it is necessary to show it always.\n\nThat being said, I implemented formatting for `Dist` and `Int` and changed the layout to be left/right aligned. I kept the opener-view, but if in doubt, we should ask the community what they users would prefer.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<a href=\"http://i.stack.imgur.com/Kgw39.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://i.stack.imgur.com/Kgw39.png</a>",
  "id": "5b249988e513c40d7741936e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-16T05:00:56.901Z",
  "text": "http://i.stack.imgur.com/Kgw39.png",
  "unread": false,
  "urls": [
   {
    "url": "http://i.stack.imgur.com/Kgw39.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "My goal is to finalize an initial version this weekend that I can push to GitHub.",
  "id": "5b2499e3585e3962ce01e794",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-16T05:02:27.717Z",
  "text": "My goal is to finalize an initial version this weekend that I can push to GitHub.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-16T18:55:08.771Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p>This was my mistake.  Sorry.  Int should be used in intermediate results, like you had before.</p><blockquote>\n<p>Also in the intermediate results, replace Int[u,x] with the integral sign and dx.</p></blockquote>\n",
  "id": "5b255cded128fa71f66f5c65",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-16T18:54:22.942Z",
  "text": "This was my mistake.  Sorry.  Int should be used in intermediate results, like you had before.\n> Also in the intermediate results, replace Int[u,x] with the integral sign and dx.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-06-20T06:34:08.296Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p>Hello. I just tried Rubi from github. Something is broke. The Stats no long work when the expression is in a list. This means I can&#39;t use 4.16. Here is an example. </p><pre><code>    lst={((<span class=\"number\">125</span>-x^<span class=\"number\">3</span>)^(<span class=\"number\">1</span>/<span class=\"number\">3</span>))^<span class=\"number\">2</span>,x};\n    res =Stats[Int[lst<span class=\"string\">[[1]]</span>,lst<span class=\"string\">[[2]]</span>]]</code></pre><p>Gives error. So had to do </p><pre><code>   <span class=\"name\">Stats</span>[<span class=\"name\">Int</span>[((<span class=\"number\">125</span> - <span class=\"atom\">x</span>^<span class=\"number\">3</span>)^(<span class=\"number\">1</span>/<span class=\"number\">3</span>))^<span class=\"number\">2</span>, <span class=\"atom\">x</span>]]</code></pre><p>But this would not work for me. As the integrals are all in a list. In 4.15.2 the first example above worked ok, when using <code>Int[lst[[1]],lst[[2]], Stats]</code><br>thanks.</p>",
  "id": "5b29f3e16ceffe4eba1b7268",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-20T06:27:45.598Z",
  "text": "Hello. I just tried Rubi from github. Something is broke. The Stats no long work when the expression is in a list. This means I can't use 4.16. Here is an example. \n\n        lst={((125-x^3)^(1/3))^2,x};\n        res =Stats[Int[lst[[1]],lst[[2]]]]\n\nGives error. So had to do \n\n       Stats[Int[((125 - x^3)^(1/3))^2, x]]\n\nBut this would not work for me. As the integrals are all in a list. In 4.15.2 the first example above worked ok, when using `Int[lst[[1]],lst[[2]], Stats]`\nthanks.",
  "unread": false,
  "urls": [],
  "v": 5
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> It is my mistake. I did not anticipate that this call pattern is possible and I fixed the pattern so that it gives an error message when someone uses the old-style fashion.",
  "id": "5b29fe088a53ca283129f717",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-20T07:11:04.774Z",
  "text": "@nasser1 It is my mistake. I did not anticipate that this call pattern is possible and I fixed the pattern so that it gives an error message when someone uses the old-style fashion.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "I will fix this hopefully the coming nights and give you a notice.",
  "id": "5b29fe5d8a53ca283129f71a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-20T07:12:29.862Z",
  "text": "I will fix this hopefully the coming nights and give you a notice.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  <span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Why not continue to support Int[u,x,Step], Int[u,x,Steps] and Int[u,x,Stats] commands?",
  "id": "5b2a074c59799e70172ca20e",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   },
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-20T07:50:36.741Z",
  "text": "@halirutan  @nasser1 Why not continue to support Int[u,x,Step], Int[u,x,Steps] and Int[u,x,Stats] commands?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-20T08:01:38.930Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Several reasons: <code>Steps</code>, <code>Step</code> and <code>Stats</code> are functions that change the behaviour of <code>Int</code> and this should happen in their definition rather than adding another 6 Downvalues to <code>Int</code>. The new form allows to write <code>Stats@Int[..]</code> or <code>Int[..]//Stats</code> which is nice. But my biggest argument is that we got lost of the <code>If</code> definitions for the usage message of <code>Int</code>. Now, <code>Int::usage</code> only says how you integrate and we could move the usages for <code>Stats</code>, <code>Steps</code>, etc where they belong.",
  "id": "5b2a09bfcbb5941bbf13829a",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-20T08:01:03.099Z",
  "text": "@AlbertRich Several reasons: `Steps`, `Step` and `Stats` are functions that change the behaviour of `Int` and this should happen in their definition rather than adding another 6 Downvalues to `Int`. The new form allows to write `Stats@Int[..]` or `Int[..]//Stats` which is nice. But my biggest argument is that we got lost of the `If` definitions for the usage message of `Int`. Now, `Int::usage` only says how you integrate and we could move the usages for `Stats`, `Steps`, etc where they belong.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Btw, I notify users when they use it in the old way:",
  "id": "5b2a0a2414ee5a10f974f0e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-20T08:02:44.031Z",
  "text": "Btw, I notify users when they use it in the old way:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<a href=\"http://i.stack.imgur.com/ZZnQm.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://i.stack.imgur.com/ZZnQm.png</a>",
  "id": "5b2a0a24a645d134ab0bf3a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-20T08:02:44.642Z",
  "text": "http://i.stack.imgur.com/ZZnQm.png",
  "unread": false,
  "urls": [
   {
    "url": "http://i.stack.imgur.com/ZZnQm.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Ok.  Thanks for the explanation.",
  "id": "5b2a3697467bd7268c1f7f27",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-20T11:12:23.931Z",
  "text": "@halirutan Ok.  Thanks for the explanation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> <span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> I have fixed the issue Nasser mentioned. I have a question: Currently, we only &quot;print&quot; the stats which makes them useless when you want to work with them (e.g. selecting the hardest integral from a long list of integrals).",
  "id": "5b2b057d8456767856ed0948",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   },
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-21T01:55:09.013Z",
  "text": "@AlbertRich @nasser1 I have fixed the issue Nasser mentioned. I have a question: Currently, we only \"print\" the stats which makes them useless when you want to work with them (e.g. selecting the hardest integral from a long list of integrals).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "I would like to change that by returning a list from <code>Stats[Int[..]]</code> in the form <code>{stats, antiderivative}</code> just like <code>AbsoluteTiming</code> does.",
  "id": "5b2b05dd8a53ca283129fa7f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-21T01:56:45.956Z",
  "text": "I would like to change that by returning a list from `Stats[Int[..]]` in the form `{stats, antiderivative}` just like `AbsoluteTiming` does.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "With this, one could implement really nice things like the following:",
  "id": "5b2b060414ee5a10f974f465",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T01:57:24.961Z",
  "text": "With this, one could implement really nice things like the following:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\"><span class=\"list\">{stats, result}</span> =  Stats[Int[((<span class=\"number\">125</span> - x^<span class=\"number\">3</span>)^(<span class=\"number\">1</span>/<span class=\"number\">3</span>))^<span class=\"number\">2</span>, x]];\n\nstats[<span class=\"string\">\"Ratio\"</span>] <span class=\"comment\">(* returns only the ratio and we can directly compare integral-complexity *)</span>\nstats[<span class=\"string\">\"ShowRules\"</span>] <span class=\"comment\">(* since we have the list of rules inside stats, we can easily show them just like `Steps` does *)</span></code></pre>",
  "id": "5b2b06bf7e41a20914a1a8c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T02:00:31.241Z",
  "text": "```mma\n{stats, result} =  Stats[Int[((125 - x^3)^(1/3))^2, x]];\n\nstats[\"Ratio\"] (* returns only the ratio and we can directly compare integral-complexity *)\nstats[\"ShowRules\"] (* since we have the list of rules inside stats, we can easily show them just like `Steps` does *)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> I&#39;m not sure you last version of Rubi did even return the antiderivative when you called <code>Int[expr, x, Stats]</code>, but I wanted to make the <code>Stats</code> function similar to <code>Steps</code> and <code>Step</code>.",
  "id": "5b2b0737cbb5941bbf138682",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T02:02:31.580Z",
  "text": "@AlbertRich I'm not sure you last version of Rubi did even return the antiderivative when you called `Int[expr, x, Stats]`, but I wanted to make the `Stats` function similar to `Steps` and `Step`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Making Stats analogous to AbsoluteTiming sounds ok to me.  Make sure the rule-to-size ratio contest rules are revised accordingly.",
  "id": "5b2b1b97fc606203806df744",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:29:27.309Z",
  "text": "@halirutan Making Stats analogous to AbsoluteTiming sounds ok to me.  Make sure the rule-to-size ratio contest rules are revised accordingly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> For the contest, I advise that we really point to your old package to prevent confusion. How many solutions did you get until now? More like 10 or more like 100?",
  "id": "5b2b1bd6a645d134ab0bf84b",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:30:30.043Z",
  "text": "@AlbertRich For the contest, I advise that we really point to your old package to prevent confusion. How many solutions did you get until now? More like 10 or more like 100?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-21T03:35:23.505Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Step, Steps, and Stats sound like general purpose functions, but they only make sense when their argument is a call on Int.  Should they be renamed IntStep, IntSteps, and IntStats?",
  "id": "5b2b1ce5fc606203806df96c",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:35:01.758Z",
  "text": "@halirutan Step, Steps, and Stats sound like general purpose functions, but they only make sense when their argument is a call on Int.  Should they be renamed IntStep, IntSteps, and IntStats?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Several improving entries from one contestant.",
  "id": "5b2b1d45960fcd4eb914ff71",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:36:37.742Z",
  "text": "Several improving entries from one contestant.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> I agree completely, but the short names are really intuitive and from Mathematica&#39;s standpoint it makes no difference. In the old Rubi there is a global symbol <code>Stats</code> and in the new Rubi as well.",
  "id": "5b2b1d8b8a53ca283129fab4",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:37:47.158Z",
  "text": "@AlbertRich I agree completely, but the short names are really intuitive and from Mathematica's standpoint it makes no difference. In the old Rubi there is a global symbol `Stats` and in the new Rubi as well.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "But in the old Rubi the names occurred within the scope of the Int.",
  "id": "5b2b1dc2aeb8fa0c07326939",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:38:42.571Z",
  "text": "But in the old Rubi the names occurred within the scope of the Int.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-21T03:41:58.096Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "IntSteps[u,x] could return the antiderivative and show the steps???",
  "id": "5b2b1e52960fcd4eb9150169",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:41:06.665Z",
  "text": "IntSteps[u,x] could return the antiderivative and show the steps???",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "IntStep[u,x] could return the intermediate result and show the step???",
  "id": "5b2b1ed6ad21887018d03f78",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:43:18.010Z",
  "text": "IntStep[u,x] could return the intermediate result and show the step???",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Yes, but the <code>Stats</code> symbol is global nevertheless and the user doesn&#39;t know that. He only sees a <code>Stats</code> symbol which could be a function. <code>IntSteps</code> would work, but I assume we loose some nice things like mapping <code>Stats</code> or <code>Steps</code> over several <code>Int</code> expressions.",
  "id": "5b2b1f32cbb5941bbf1386bd",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:44:50.845Z",
  "text": "@AlbertRich Yes, but the `Stats` symbol is global nevertheless and the user doesn't know that. He only sees a `Stats` symbol which could be a function. `IntSteps` would work, but I assume we loose some nice things like mapping `Stats` or `Steps` over several `Int` expressions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "IntSteps[{u,v,...},x]",
  "id": "5b2b1f77fc606203806dfdd1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:45:59.313Z",
  "text": "IntSteps[{u,v,...},x]",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "I&#39;m not entirely sure at the moment. I would like to have some time to extend the interface and think about possible call-patterns and their advantages and drawbacks.",
  "id": "5b2b1fa8a645d134ab0bf856",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:46:48.133Z",
  "text": "I'm not entirely sure at the moment. I would like to have some time to extend the interface and think about possible call-patterns and their advantages and drawbacks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "I agree.  This is a messy interface issue.",
  "id": "5b2b1fe16ceffe4eba23af51",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:47:45.448Z",
  "text": "I agree.  This is a messy interface issue.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "I propose three options:<ol>\n<li>We leave it like <code>Stats[Int[..]]</code></li>\n<li>We rename it to <code>RubiStats[Int[..]]</code></li>\n<li>We change the call-pattern to <code>IntStats[expr,x]</code></li>\n</ol>\n",
  "id": "5b2b1ff9a645d134ab0bf858",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:48:09.101Z",
  "text": "I propose three options:\n\n1. We leave it like `Stats[Int[..]]`\n2. We rename it to `RubiStats[Int[..]]`\n3. We change the call-pattern to `IntStats[expr,x]`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "and I first would like to see how it works out. For instance, I have added in my dev-version a pattern <code>Steps[Int[..], n]</code> which show only the first <code>n</code> steps and returns the intermediate result after that.",
  "id": "5b2b203aa645d134ab0bf85a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:49:14.806Z",
  "text": "and I first would like to see how it works out. For instance, I have added in my dev-version a pattern `Steps[Int[..], n]` which show only the first `n` steps and returns the intermediate result after that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "or<ol>\n<li>Use global control variables to decide what Int will do.</li>\n</ol>\n",
  "id": "5b2b204c59799e701733c2ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:49:32.139Z",
  "text": "or\n4. Use global control variables to decide what Int will do.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "No, that is not an option :smile:",
  "id": "5b2b205a8a53ca283129fab9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:49:46.648Z",
  "text": "No, that is not an option :smile:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Ok.",
  "id": "5b2b2069fc606203806dfecd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:50:01.689Z",
  "text": "Ok.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "For new users the global control variables are a real pain. You have no idea that the exist and you have to look them up all the time.",
  "id": "5b2b20858a53ca283129fabb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:50:29.000Z",
  "text": "For new users the global control variables are a real pain. You have no idea that the exist and you have to look them up all the time.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Perhaps we can solicit suggestions from users and developers.",
  "id": "5b2b20d1479ca266897124ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:51:45.780Z",
  "text": "Perhaps we can solicit suggestions from users and developers.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Yes, that&#39;s why I suggested to wait until we announce it. If we indeed get feedback, we could discuss it with real users and their opinion is important.",
  "id": "5b2b2106a645d134ab0bf860",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:52:38.879Z",
  "text": "@AlbertRich Yes, that's why I suggested to wait until we announce it. If we indeed get feedback, we could discuss it with real users and their opinion is important.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "I like Steps[Int[u,x],n].",
  "id": "5b2b2109d2abe466887b5758",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:52:41.998Z",
  "text": "I like Steps[Int[u,x],n].",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Good.  Sounds like a plan.",
  "id": "5b2b2120ce3b0f268d339054",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:53:04.526Z",
  "text": "Good.  Sounds like a plan.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Did you ever resolve the rule-size-ratio mystery between Rubi 4.15 and 4.16?",
  "id": "5b2b219a5862c35f47b92690",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:55:06.193Z",
  "text": "Did you ever resolve the rule-size-ratio mystery between Rubi 4.15 and 4.16?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> In conclusion, I agree with you that <code>Stats</code>, <code>Steps</code>, and <code>Step</code> sound very general and might be mistaken for something else. <code>IntStats[Int[..]]</code> is ugly because it repeats the <code>Int</code> word and I would like <code>RubiStats</code> better which also expresses that it is a function of <code>Rubi</code>. <code>IntStats[expr, x]</code> is neat too but I want to see if there are good use-cases with might loose (or which are ugly then).",
  "id": "5b2b21b6a645d134ab0bf865",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:55:34.752Z",
  "text": "@AlbertRich In conclusion, I agree with you that `Stats`, `Steps`, and `Step` sound very general and might be mistaken for something else. `IntStats[Int[..]]` is ugly because it repeats the `Int` word and I would like `RubiStats` better which also expresses that it is a function of `Rubi`. `IntStats[expr, x]` is neat too but I want to see if there are good use-cases with might loose (or which are ugly then).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<blockquote>\n<p>Did you ever resolve the rule-size-ratio mystery between Rubi 4.15 and 4.16?</p></blockquote>\n<p>Not yet. I need to check which distinct rules were used by both versions and how they differ.</p>",
  "id": "5b2b222e8456767856ed0987",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:57:34.226Z",
  "text": "> Did you ever resolve the rule-size-ratio mystery between Rubi 4.15 and 4.16?\n\nNot yet. I need to check which distinct rules were used by both versions and how they differ.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "I first wanted to check Nassers issue.",
  "id": "5b2b223c8456767856ed0989",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:57:48.522Z",
  "text": "I first wanted to check Nassers issue.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "No hurry.",
  "id": "5b2b2253960fcd4eb91506fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T03:58:11.782Z",
  "text": "No hurry.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Gute Nacht.  I gotta go.",
  "id": "5b2b25287d3bca737afc8192",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T04:10:16.111Z",
  "text": "Gute Nacht.  I gotta go.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> As it turns out I already slept from 20:30 - 2:00 and I&#39;m wide awake but I have to work.",
  "id": "5b2b256b6c7cdb4945aded54",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T04:11:23.012Z",
  "text": "@AlbertRich As it turns out I already slept from 20:30 - 2:00 and I'm wide awake but I have to work.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Have a nice day.",
  "id": "5b2b25708456767856ed098b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T04:11:28.142Z",
  "text": "Have a nice day.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "You too.",
  "id": "5b2b2580d2abe466887b5d05",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T04:11:44.003Z",
  "text": "You too.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "I&#39;m headed to my nearest pub. :smile: ",
  "id": "5b2b25a859799e701733c976",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T04:12:24.592Z",
  "text": "I'm headed to my nearest pub. :smile: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Ohh.. I guess 6 in the morning is too early for a drink here",
  "id": "5b2b25c2a645d134ab0bf86b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T04:12:50.192Z",
  "text": "Ohh.. I guess 6 in the morning is too early for a drink here",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Don&#39;t even think about it...",
  "id": "5b2b25deaeb8fa0c073274bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T04:13:18.978Z",
  "text": "Don't even think about it...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "But tomorry night is &quot;Lange Nacht der Wissenschaft&quot; at our university from 18:00 to 0:00 and everyone is invited to see what we are doing.",
  "id": "5b2b25f7cbb5941bbf1386c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T04:13:43.522Z",
  "text": "But tomorry night is \"Lange Nacht der Wissenschaft\" at our university from 18:00 to 0:00 and everyone is invited to see what we are doing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Not exactly like a pub, but I expect that it will be fun.",
  "id": "5b2b2609cbb5941bbf1386c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T04:14:01.011Z",
  "text": "Not exactly like a pub, but I expect that it will be fun.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Great!  BTW, the t-shirt I am wearing to the pub says<br>&quot;Alcohol and calculus don&#39;t mix: Never Drink and Derive&quot;.",
  "id": "5b2b26870168e70c08df4a9e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T04:16:07.954Z",
  "text": "Great!  BTW, the t-shirt I am wearing to the pub says \n\"Alcohol and calculus don't mix: Never Drink and Derive\".",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Oh god.. let&#39;s see if they let you in with this :smile: ",
  "id": "5b2b26b0a645d134ab0bf86d",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-06-21T04:16:48.327Z",
  "text": "@AlbertRich Oh god.. let's see if they let you in with this :smile: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "It&#39;s ok, I&#39;m walking to the pub.",
  "id": "5b2b26c8479ca2668971308b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-21T04:17:12.921Z",
  "text": "It's ok, I'm walking to the pub.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> <span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> I have fixed both issue that Nasser reported and the <code>GtQ</code> issue Albert sent and Rubi 4.17 is now online. I have updated the webpage accordingly.",
  "id": "5b3052c46c7cdb4945adf806",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   },
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-25T02:26:12.975Z",
  "text": "@AlbertRich @nasser1 I have fixed both issue that Nasser reported and the `GtQ` issue Albert sent and Rubi 4.17 is now online. I have updated the webpage accordingly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-25T02:28:14.351Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Are you able to send me a result table similar to what Albert presents <a href=\"http://www.apmaths.uwo.ca/~arich/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">on the webpage (red table)</a> for the current version of Rubi (I wouldn&#39;t mind if it is only 4.15, since the rules are almost the same)?",
  "id": "5b305334cbb5941bbf139199",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-25T02:28:04.892Z",
  "text": "@nasser1 Are you able to send me a result table similar to what Albert presents [on the webpage (red table)](http://www.apmaths.uwo.ca/~arich/) for the current version of Rubi (I wouldn't mind if it is only 4.15, since the rules are almost the same)?",
  "unread": false,
  "urls": [
   {
    "url": "http://www.apmaths.uwo.ca/~arich/"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "I would like to create updated plots and put them on the webpage.",
  "id": "5b30534d8456767856ed1403",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-25T02:28:29.033Z",
  "text": "I would like to create updated plots and put them on the webpage.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-25T03:58:01.515Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "hi Patrick,  The test build for 4.15.2 is still running. It will take more time to complete, may be 3-4 weeks or so. But the current update is always at my site, so you are free to copy the images  you want that are currently there any time you want. They are SVG so high resolution. It is slow, since it takes long time to run the tests on all the CAS systems and there are many integrals in the files. The link is <a href=\"https://www.12000.org/my_notes/CAS_integration_tests/index.htm\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.12000.org/my_notes/CAS_integration_tests/index.htm</a><br>thanks.",
  "id": "5b306817d2abe466888741f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-25T03:57:11.604Z",
  "text": "hi Patrick,  The test build for 4.15.2 is still running. It will take more time to complete, may be 3-4 weeks or so. But the current update is always at my site, so you are free to copy the images  you want that are currently there any time you want. They are SVG so high resolution. It is slow, since it takes long time to run the tests on all the CAS systems and there are many integrals in the files. The link is https://www.12000.org/my_notes/CAS_integration_tests/index.htm \nthanks.",
  "unread": false,
  "urls": [
   {
    "url": "https://www.12000.org/my_notes/CAS_integration_tests/index.htm"
   }
  ],
  "v": 2
 },
 {
  "editedAt": "2018-06-25T04:13:41.867Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "in about 4-5 days, I should have another update to bring the number up to 20,000 integrals or so. Now it is still at 1,867. Which should be better representation.  Overall, there are over 70,000 integrals.  So that is why it is slow. sympy takes for ever to finish which is the bottle neck. I am also getting faster PC very soon. So this will help.",
  "id": "5b306bcad2abe4668887460b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-25T04:12:58.064Z",
  "text": "in about 4-5 days, I should have another update to bring the number up to 20,000 integrals or so. Now it is still at 1,867. Which should be better representation.  Overall, there are over 70,000 integrals.  So that is why it is slow. sympy takes for ever to finish which is the bottle neck. I am also getting faster PC very soon. So this will help.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  Is the image you made at your site (3D image of results) <a href=\"http://www.apmaths.uwo.ca/~arich/TestResultsBarChart.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://www.apmaths.uwo.ca/~arich/TestResultsBarChart.png</a>   was this done in Mathematica? If so, if you could please email me the code for it, I could use for my current build. I was not sure you used Mathematica for it or not.  Thanks.",
  "id": "5b306e3d960fcd4eb9205d20",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-25T04:23:25.699Z",
  "text": "@AlbertRich  Is the image you made at your site (3D image of results) http://www.apmaths.uwo.ca/~arich/TestResultsBarChart.png   was this done in Mathematica? If so, if you could please email me the code for it, I could use for my current build. I was not sure you used Mathematica for it or not.  Thanks.",
  "unread": false,
  "urls": [
   {
    "url": "http://www.apmaths.uwo.ca/~arich/TestResultsBarChart.png"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2018-06-25T04:30:40.904Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "I might be able to code one like it myself in mathematica using BarChart3D. But if you already did, then I could use your code. It is nice image since it is 3D.",
  "id": "5b306e8db9c2fb2557087707",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-25T04:24:45.456Z",
  "text": "I might be able to code one like it myself in mathematica using BarChart3D. But if you already did, then I could use your code. It is nice image since it is 3D.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-06-25T04:26:53.696Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "Difference would be is that image I will make will have 4 colors there (A,B,C,F) since grades are now 4. and not 3 colors as you have. That is all.",
  "id": "5b306ec0479ca266897c8540",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-25T04:25:36.405Z",
  "text": "Difference would be is that image I will make will have 4 colors there (A,B,C,F) since grades are now 4. and not 3 colors as you have. That is all.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  I do not make a table like the red table on Albert&#39;s site you mentioned. And I would not know how at this moment. But will see if I can try to come up with something like it.",
  "id": "5b30732bbe98b1422405e1f5",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-25T04:44:27.772Z",
  "text": "@halirutan  I do not make a table like the red table on Albert's site you mentioned. And I would not know how at this moment. But will see if I can try to come up with something like it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span>  <span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Hi Nasser.  I really appreciate your helping us create nice looking, up-to-date charts for  <a href=\"https://rulebasedintegration.org/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Rubi&#39;s webpage</a> on GitHub.  The charts on Rubi&#39;s current webpage were made using Microsoft&#39;s Excel program after I manually copied over the data from the table of test results.   Patrick made a similar chart to the above on the GitHub Rubi home page , perhaps using Mathematica.  Being an expert on Mathematica (which I am definitely not), he should be able to help you out.   ",
  "id": "5b307376aeb8fa0c073f4fbd",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   },
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-25T04:45:42.466Z",
  "text": "@nasser1  @halirutan Hi Nasser.  I really appreciate your helping us create nice looking, up-to-date charts for  [Rubi's webpage](https://rulebasedintegration.org/) on GitHub.  The charts on Rubi's current webpage were made using Microsoft's Excel program after I manually copied over the data from the table of test results.   Patrick made a similar chart to the above on the GitHub Rubi home page , perhaps using Mathematica.  Being an expert on Mathematica (which I am definitely not), he should be able to help you out.   \n",
  "unread": false,
  "urls": [
   {
    "url": "https://rulebasedintegration.org/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> I have made this image for the current site",
  "id": "5b307efe8a53ca28312a05a4",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-25T05:34:54.394Z",
  "text": "@nasser1 I have made this image for the current site",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<a href=\"https://rulebasedintegration.org/percentages.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://rulebasedintegration.org/percentages.png</a>",
  "id": "5b307f0f21895a386577b3a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-25T05:35:11.441Z",
  "text": "https://rulebasedintegration.org/percentages.png",
  "unread": false,
  "urls": [
   {
    "url": "https://rulebasedintegration.org/percentages.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "and it bases on the entries of the table on Alberts website. Basically, what I&#39;m after is the numbers for optimal, nonoptimal, and failed antiderivatives in the systems you test. If possible, I&#39;d like to have the numbers split into the integral categories like shown in the table.",
  "id": "5b307faa6c7cdb4945adf814",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-25T05:37:46.728Z",
  "text": "and it bases on the entries of the table on Alberts website. Basically, what I'm after is the numbers for optimal, nonoptimal, and failed antiderivatives in the systems you test. If possible, I'd like to have the numbers split into the integral categories like shown in the table.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-25T05:40:33.199Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  <span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> I agree with Nasser that</p><blockquote>\n<p>Difference would be is that image I will make will have 4 colors there (A,B,C,F) since grades are now 4. and not 3 colors as you have.</p></blockquote>\n",
  "id": "5b3080317d3bca737a07297a",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   },
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-25T05:40:01.384Z",
  "text": "@halirutan  @nasser1 I agree with Nasser that\n>Difference would be is that image I will make will have 4 colors there (A,B,C,F) since grades are now 4. and not 3 colors as you have.\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "since that is much more interesting information to provide.",
  "id": "5b3080547d3bca737a0729e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-25T05:40:36.437Z",
  "text": "since that is much more interesting information to provide.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> That would of course be no problem. It&#39;s a simple <code>BarChart3D</code> in Mathematica and it can be adapted easily.",
  "id": "5b308074a645d134ab0c0364",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-25T05:41:08.944Z",
  "text": "@AlbertRich That would of course be no problem. It's a simple `BarChart3D` in Mathematica and it can be adapted easily.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "I thought the integration tests might be already finished and I didn&#39;t know that they take so long to calculate. ",
  "id": "5b308109a645d134ab0c0367",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-25T05:43:37.977Z",
  "text": "I thought the integration tests might be already finished and I didn't know that they take so long to calculate. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "70,000+ problems on multiple CASs.",
  "id": "5b308137ad21887018db81cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-25T05:44:23.477Z",
  "text": "70,000+ problems on multiple CASs.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "It only takes Rubi a few hours, but the others much longer.",
  "id": "5b30815a59799e70173efa74",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-25T05:44:58.588Z",
  "text": "It only takes Rubi a few hours, but the others much longer.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-25T06:30:26.130Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  hi. If you could please send me your code to make the barchart3D you used, I could easily modify it for the 4 grades used now and add it to the build script so that a new 3D chart is created each time I run the tests.  Mine will have more bars, since there are 7 CAS systems I am using, but the idea is the same.  I will use same colors I have now for the grades, but they will be on a 3D barchart.",
  "id": "5b308bc3d2abe46688877ed0",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-25T06:29:23.826Z",
  "text": "@halirutan  hi. If you could please send me your code to make the barchart3D you used, I could easily modify it for the 4 grades used now and add it to the build script so that a new 3D chart is created each time I run the tests.  Mine will have more bars, since there are 7 CAS systems I am using, but the idea is the same.  I will use same colors I have now for the grades, but they will be on a 3D barchart.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-06-25T20:43:59.864Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  hi Albert, fyi, for problem 145, in Hearn file, which does not have a known optimal antiderivative, Maxima seems to find one with elementary functions. Thought you might want to check it out. </p><pre><code>         <span class=\"name\">Int</span>[<span class=\"atom\">x</span>*<span class=\"name\">Cos</span>[<span class=\"atom\">k</span>*<span class=\"name\">Csc</span>[<span class=\"atom\">x</span>]]*<span class=\"name\">Cot</span>[<span class=\"atom\">x</span>]*<span class=\"name\">Csc</span>[<span class=\"atom\">x</span>],<span class=\"atom\">x</span>]</code></pre><p>it gives</p><pre><code>   -1/2<span class=\"keyword\">*</span>(x<span class=\"keyword\">*</span>e^(4<span class=\"keyword\">*</span>k<span class=\"keyword\">*</span>cos(2<span class=\"keyword\">*</span>x)<span class=\"keyword\">*</span>cos(x)/(cos(2<span class=\"keyword\">*</span>x)^2 + sin(2<span class=\"keyword\">*</span>x)^2 - \n   2<span class=\"keyword\">*</span>cos(2<span class=\"keyword\">*</span>x) + 1) + 4<span class=\"keyword\">*</span>k<span class=\"keyword\">*</span>sin(2<span class=\"keyword\">*</span>x)<span class=\"keyword\">*</span>sin(x)/(cos(2<span class=\"keyword\">*</span>x)^2 +\n   sin(2<span class=\"keyword\">*</span>x)^2 - 2<span class=\"keyword\">*</span>cos(2<span class=\"keyword\">*</span>x) + 1)) + x<span class=\"keyword\">*</span>e^(4<span class=\"keyword\">*</span>k<span class=\"keyword\">*</span>cos(x)/(cos(2<span class=\"keyword\">*</span>x)^2 + \n   sin(2<span class=\"keyword\">*</span>x)^2 - 2<span class=\"keyword\">*</span>cos(2<span class=\"keyword\">*</span>x) + 1)))<span class=\"keyword\">*</span>e^(-2<span class=\"keyword\">*</span>k<span class=\"keyword\">*</span>cos(2<span class=\"keyword\">*</span>x)<span class=\"keyword\">*</span>\n  cos(x)/(cos(2<span class=\"keyword\">*</span>x)^2 + sin(2<span class=\"keyword\">*</span>x)^2 - 2<span class=\"keyword\">*</span>cos(2<span class=\"keyword\">*</span>x) + 1) - \n  2<span class=\"keyword\">*</span>k<span class=\"keyword\">*</span>sin(2<span class=\"keyword\">*</span>x)<span class=\"keyword\">*</span>sin(x)/(cos(2<span class=\"keyword\">*</span>x)^2 + sin(2<span class=\"keyword\">*</span>x)^2 - 2<span class=\"keyword\">*</span>cos(2<span class=\"keyword\">*</span>x)\n  + 1) - 2<span class=\"keyword\">*</span>k<span class=\"keyword\">*</span>cos(x)/(cos(2<span class=\"keyword\">*</span>x)^2 + sin(2<span class=\"keyword\">*</span>x)^2 - 2<span class=\"keyword\">*</span>cos(2<span class=\"keyword\">*</span>x) + 1))<span class=\"keyword\">*</span>sin(2<span class=\"keyword\">*</span> \n  (k<span class=\"keyword\">*</span>cos(x)<span class=\"keyword\">*</span>sin(2<span class=\"keyword\">*</span>x) - k<span class=\"keyword\">*</span>cos(2<span class=\"keyword\">*</span>x)<span class=\"keyword\">*</span>sin(x) + k\n  <span class=\"keyword\">*</span>sin(x))/(cos(2<span class=\"keyword\">*</span>x)^2 + sin(2<span class=\"keyword\">*</span>x)^2 - 2<span class=\"keyword\">*</span>cos(2<span class=\"keyword\">*</span>x) + 1))/k</code></pre>",
  "id": "5b3153dece3b0f268d42b134",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-25T20:43:10.941Z",
  "text": "@AlbertRich  hi Albert, fyi, for problem 145, in Hearn file, which does not have a known optimal antiderivative, Maxima seems to find one with elementary functions. Thought you might want to check it out. \n\n             Int[x*Cos[k*Csc[x]]*Cot[x]*Csc[x],x]\nit gives\n\n       -1/2*(x*e^(4*k*cos(2*x)*cos(x)/(cos(2*x)^2 + sin(2*x)^2 - \n       2*cos(2*x) + 1) + 4*k*sin(2*x)*sin(x)/(cos(2*x)^2 +\n       sin(2*x)^2 - 2*cos(2*x) + 1)) + x*e^(4*k*cos(x)/(cos(2*x)^2 + \n       sin(2*x)^2 - 2*cos(2*x) + 1)))*e^(-2*k*cos(2*x)*\n      cos(x)/(cos(2*x)^2 + sin(2*x)^2 - 2*cos(2*x) + 1) - \n      2*k*sin(2*x)*sin(x)/(cos(2*x)^2 + sin(2*x)^2 - 2*cos(2*x)\n      + 1) - 2*k*cos(x)/(cos(2*x)^2 + sin(2*x)^2 - 2*cos(2*x) + 1))*sin(2* \n      (k*cos(x)*sin(2*x) - k*cos(2*x)*sin(x) + k\n      *sin(x))/(cos(2*x)^2 + sin(2*x)^2 - 2*cos(2*x) + 1))/k\n",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> In Mathematica, if you FullSimplify Maxima&#39;s result, you get</p><pre><code class=\"mma\"> -x*<span class=\"keyword\">Sin</span>[k*<span class=\"keyword\">Csc</span>[x]]/k</code></pre><p>Differentiating that you get</p><pre><code class=\"mma\">x*<span class=\"keyword\">Cos</span>[k*<span class=\"keyword\">Csc</span>[x]]*<span class=\"keyword\">Cot</span>[x]*<span class=\"keyword\">Csc</span>[x] - <span class=\"keyword\">Sin</span>[k*<span class=\"keyword\">Csc</span>[x]]/k</code></pre><p>which is not equal to the original integrand.</p>",
  "id": "5b3169557d3bca737a09ae62",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-25T22:14:45.594Z",
  "text": "@nasser1 In Mathematica, if you FullSimplify Maxima's result, you get\n```mma\n -x*Sin[k*Csc[x]]/k\n```\nDifferentiating that you get\n```mma\nx*Cos[k*Csc[x]]*Cot[x]*Csc[x] - Sin[k*Csc[x]]/k\n```\nwhich is not equal to the original integrand.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  I do not know how you managed to simplify Maxima&#39;s antiderivative. As I get &quot;Indeterminate&quot; when I try in Mathematica 11.3 .  Can one attach a notebook here? I made sure I converted Maxima result to Mathematica syntax correctly. Here is the notebook  <a href=\"https://www.12000.org/tmp/062518/maxima_145.nb\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.12000.org/tmp/062518/maxima_145.nb</a>   so maybe then Maxima result is not correct here. May be a bug in Maxima? do not know.",
  "id": "5b31858172b31d3691f37472",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-26T00:14:57.076Z",
  "text": "@AlbertRich  I do not know how you managed to simplify Maxima's antiderivative. As I get \"Indeterminate\" when I try in Mathematica 11.3 .  Can one attach a notebook here? I made sure I converted Maxima result to Mathematica syntax correctly. Here is the notebook  https://www.12000.org/tmp/062518/maxima_145.nb   so maybe then Maxima result is not correct here. May be a bug in Maxima? do not know.",
  "unread": false,
  "urls": [
   {
    "url": "https://www.12000.org/tmp/062518/maxima_145.nb"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> You <code>maximaAntiResult</code> is correct and when you run <code>D[maximaAntiResult, x] // FullSimplify</code>, you get the expression Albert mentions.",
  "id": "5b3191756c7cdb4945adfc51",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-26T01:05:57.195Z",
  "text": "@nasser1 You `maximaAntiResult` is correct and when you run `D[maximaAntiResult, x] // FullSimplify`, you get the expression Albert mentions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  Thanks. Now it works yes. So now I see that </p><pre><code>   <span class=\"keyword\">In</span>[<span class=\"number\">7</span>]:= <span class=\"keyword\">FullSimplify</span>[<span class=\"keyword\">D</span>[maximaAntiResult,x]-originalIntegrand ]\n  <span class=\"keyword\">Out</span>[<span class=\"number\">7</span>]= -(<span class=\"keyword\">Sin</span>[k <span class=\"keyword\">Csc</span>[x]]/k)</code></pre><p>So the difference is not constant (it depends on x). So indeed Maxima result is wrong. This is something that when adding verification will be cought. Now it counts as passed, since no verification is done. I&#39;ll see if I can report this to Maxima folks. I tried once to add myself to Maxima mailing list, but unable to figure how to do it, and they do not seem to have a bug tracking system on the web, but will search more.</p>",
  "id": "5b3195ef0168e70c08ee8873",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-26T01:25:03.838Z",
  "text": "@halirutan  Thanks. Now it works yes. So now I see that \n\n       In[7]:= FullSimplify[D[maximaAntiResult,x]-originalIntegrand ]\n      Out[7]= -(Sin[k Csc[x]]/k)\n\nSo the difference is not constant (it depends on x). So indeed Maxima result is wrong. This is something that when adding verification will be cought. Now it counts as passed, since no verification is done. I'll see if I can report this to Maxima folks. I tried once to add myself to Maxima mailing list, but unable to figure how to do it, and they do not seem to have a bug tracking system on the web, but will search more.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-26T01:40:12.740Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "fyi, I reported this to <a href=\"mailto:maxima-bugs@lists.sourceforge.net\" rel=\"nofollow\">maxima-bugs@lists.sourceforge.net</a>  an email I found on the net. Just in case.  I think adding verification is going to produce lots of bugs in the different CAS systems. So better take cover :)",
  "id": "5b3199620168e70c08ee8f4e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-26T01:39:46.046Z",
  "text": "fyi, I reported this to maxima-bugs@lists.sourceforge.net  an email I found on the net. Just in case.  I think adding verification is going to produce lots of bugs in the different CAS systems. So better take cover :)",
  "unread": false,
  "urls": [
   {
    "url": "mailto:maxima-bugs@lists.sourceforge.net"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "fyi, added 3D Barchart for grading breakdown.<br><a href=\"https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/images/3D_chart.svg\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/images/3D_chart.svg</a><br>it is hard to figure best colors. Since A is Green,  for B selected one as shown. I could not use light green, since it makes it look like A. For C it is Yellow and for F is Red. If you think of better coloring for B pls let me know.",
  "id": "5b3209506ceffe4eba33f39b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-26T09:37:20.592Z",
  "text": "fyi, added 3D Barchart for grading breakdown.\nhttps://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/images/3D_chart.svg\nit is hard to figure best colors. Since A is Green,  for B selected one as shown. I could not use light green, since it makes it look like A. For C it is Yellow and for F is Red. If you think of better coloring for B pls let me know.",
  "unread": false,
  "urls": [
   {
    "url": "https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/images/3D_chart.svg"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p>The RGB coloring I use are</p><pre><code>  ChartStyle -&gt; { \n     RGBColor[<span class=\"number\">50</span><span class=\"regexp\">/255, 205/</span><span class=\"number\">255</span>, <span class=\"number\">50</span>/<span class=\"number\">255</span>], \n     RGBColor[<span class=\"number\">255</span><span class=\"regexp\">/255, 153/</span><span class=\"number\">255</span>, <span class=\"number\">51</span>/<span class=\"number\">255</span>], \n    RGBColor[<span class=\"number\">255</span><span class=\"regexp\">/255, 255/</span><span class=\"number\">255</span>, <span class=\"number\">0</span>/<span class=\"number\">255</span>], \n    Red}</code></pre><p>so &quot;A&quot; is first one in the list above, followed by &quot;B&quot;, &quot;C&quot; and &quot;F&quot;</p>",
  "id": "5b3209ba72b31d3691f47999",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-26T09:39:06.553Z",
  "text": "The RGB coloring I use are\n\n      ChartStyle -> { \n         RGBColor[50/255, 205/255, 50/255], \n         RGBColor[255/255, 153/255, 51/255], \n        RGBColor[255/255, 255/255, 0/255], \n        Red}\n\nso \"A\" is first one in the list above, followed by \"B\", \"C\" and \"F\"\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-26T09:45:24.948Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "The above chart is based on current number of integrals finished, which is 3,784.  There is still about 68,000 more integrals to go, so result will change. Also pls note that only Maple, Rubi and MMA have grading function now. All others get either A or F, since I do not have grading function for them. I need to learn sympy and sagemath better to figure how to translate the ones Albert wrote and is used now.",
  "id": "5b320aae0168e70c08ef651c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-26T09:43:10.224Z",
  "text": "The above chart is based on current number of integrals finished, which is 3,784.  There is still about 68,000 more integrals to go, so result will change. Also pls note that only Maple, Rubi and MMA have grading function now. All others get either A or F, since I do not have grading function for them. I need to learn sympy and sagemath better to figure how to translate the ones Albert wrote and is used now.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Can you share the numbers for that plot and the plot-command?",
  "id": "5b32445d14ee5a10f97506bf",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-26T13:49:17.027Z",
  "text": "@nasser1 Can you share the numbers for that plot and the plot-command?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "What I&#39;d like to do is recreate exactly these plots for website, but I need to play with the colors myself to see what fits. If it is OK, I probably would recreate the other bar-chart as well and include it and I would of course link for the full report to your home-page.",
  "id": "5b3247138456767856ed1a25",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-26T14:00:51.387Z",
  "text": "What I'd like to do is recreate exactly these plots for website, but I need to play with the colors myself to see what fits. If it is OK, I probably would recreate the other bar-chart as well and include it and I would of course link for the full report to your home-page.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  The numbers for A,B,C,F for each CAS are those currently in the report in the table at page 3 of the PDF which list the grade for each CASE. <a href=\"https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/index.pdf\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/index.pdf</a>  these are the &quot;%&quot; numbers of the grades. The code to generate it is here <a href=\"https://www.12000.org/tmp/062618/barc_chart_3d.nb\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.12000.org/tmp/062618/barc_chart_3d.nb</a>  ",
  "id": "5b326b896ceffe4eba350b22",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-26T16:36:25.492Z",
  "text": "@halirutan  The numbers for A,B,C,F for each CAS are those currently in the report in the table at page 3 of the PDF which list the grade for each CASE. https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/index.pdf  these are the \"%\" numbers of the grades. The code to generate it is here https://www.12000.org/tmp/062618/barc_chart_3d.nb  ",
  "unread": false,
  "urls": [
   {
    "url": "https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/index.pdf"
   },
   {
    "url": "https://www.12000.org/tmp/062618/barc_chart_3d.nb"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<a href=\"https://files.gitter.im/Rule-Based-Integration/Lobby/uw6i/image.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/Rule-Based-Integration/Lobby/uw6i/thumb/image.png\" alt=\"image.png\" rel=\"nofollow\"></a>",
  "id": "5b32df980168e70c08f19a4d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-27T00:51:36.287Z",
  "text": "[![image.png](https://files.gitter.im/Rule-Based-Integration/Lobby/uw6i/thumb/image.png)](https://files.gitter.im/Rule-Based-Integration/Lobby/uw6i/image.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/Rule-Based-Integration/Lobby/uw6i/thumb/image.png"
   },
   {
    "url": "https://files.gitter.im/Rule-Based-Integration/Lobby/uw6i/image.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  fyi, I changed the order of the 3Dbard chart, so that red at bottom and green at top. I think it looks better this way.  It is up to you ofcourse how you want to make your 3D chart looks. But if you want the slight modified code for the above, it is still at same link to the notebook above.  I also arranged them by order of increasing failed grade.",
  "id": "5b32dff5ce3b0f268d4627f8",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-27T00:53:09.075Z",
  "text": "@halirutan  fyi, I changed the order of the 3Dbard chart, so that red at bottom and green at top. I think it looks better this way.  It is up to you ofcourse how you want to make your 3D chart looks. But if you want the slight modified code for the above, it is still at same link to the notebook above.  I also arranged them by order of increasing failed grade.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Can you post the numerical values for <code>dataForChart</code> here so that I don&#39;t have to retype them?",
  "id": "5b32e0c88456767856ed1bf4",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-27T00:56:40.921Z",
  "text": "@nasser1 Can you post the numerical values for `dataForChart` here so that I don't have to retype them?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-27T01:15:52.206Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  hi, Here it is</p><pre><code><span class=\"xml\">   </span><span class=\"expression\">{{0<span class=\"variable\">.</span>581395,0<span class=\"variable\">.</span>237844,0<span class=\"variable\">.</span>422833,98<span class=\"variable\">.</span>7579},\n     {0<span class=\"variable\">.</span>819239,10<span class=\"variable\">.</span>5973,5<span class=\"variable\">.</span>62896,82<span class=\"variable\">.</span>9545},\n      {12<span class=\"variable\">.</span>9228,4<span class=\"variable\">.</span>09619,10<span class=\"variable\">.</span>0159,72<span class=\"variable\">.</span>9651},\n      {13<span class=\"variable\">.</span>6892,0<span class=\"variable\">.</span>,0<span class=\"variable\">.</span>,86<span class=\"variable\">.</span>3108},\n      {23<span class=\"variable\">.</span>3351,0<span class=\"variable\">.</span>,0<span class=\"variable\">.</span>,76<span class=\"variable\">.</span>6649},\n       {33<span class=\"variable\">.</span>9852,0<span class=\"variable\">.</span>,0<span class=\"variable\">.</span>,66<span class=\"variable\">.</span>0148},\n       {34<span class=\"variable\">.</span>3023,0<span class=\"variable\">.</span>,0<span class=\"variable\">.</span>,65<span class=\"variable\">.</span>6977}}</span><span class=\"xml\"></span></code></pre><p>These are arranged like this:</p><pre><code>       dataForChart=<span class=\"list\">{\n        {rubiFPer,rubiCPer,rubiBPer,rubiAPer}</span>,\n       <span class=\"list\">{mFPer,mCPer,mBPer,mAPer}</span>,\n       <span class=\"list\">{mapleFPer,mapleCPer,mapleBPer,mapleAPer}</span>,\n       <span class=\"list\">{fricasFPer,fricasCPer,fricasBPer,fricasAPer}</span>,\n       <span class=\"list\">{giacFPer,giacCPer,giacBPer,giacAPer}</span>,\n       <span class=\"list\">{maximaFPer,maximaCPer,maximaBPer,maximaAPer}</span>,\n       <span class=\"list\">{sympyFPer,sympyCPer,sympyBPer,sympyAPer}</span>\n        };</code></pre><p>This is only for current number of tests done. These numbers will ofcourse change as more tests are done. Thanks</p>",
  "id": "5b32e4b6ce3b0f268d462e88",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-27T01:13:26.925Z",
  "text": "@halirutan  hi, Here it is\n\n       {{0.581395,0.237844,0.422833,98.7579},\n         {0.819239,10.5973,5.62896,82.9545},\n          {12.9228,4.09619,10.0159,72.9651},\n          {13.6892,0.,0.,86.3108},\n          {23.3351,0.,0.,76.6649},\n           {33.9852,0.,0.,66.0148},\n           {34.3023,0.,0.,65.6977}}\n\nThese are arranged like this:\n\n           dataForChart={\n            {rubiFPer,rubiCPer,rubiBPer,rubiAPer},\n           {mFPer,mCPer,mBPer,mAPer},\n           {mapleFPer,mapleCPer,mapleBPer,mapleAPer},\n           {fricasFPer,fricasCPer,fricasBPer,fricasAPer},\n           {giacFPer,giacCPer,giacBPer,giacAPer},\n           {maximaFPer,maximaCPer,maximaBPer,maximaAPer},\n           {sympyFPer,sympyCPer,sympyBPer,sympyAPer}\n            };\n\nThis is only for current number of tests done. These numbers will ofcourse change as more tests are done. Thanks",
  "unread": false,
  "urls": [],
  "v": 5
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Thanks!",
  "id": "5b32e4d66c7cdb4945ae00bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-27T01:13:58.111Z",
  "text": "Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-29T00:27:50.797Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  Hello; I am adding verification of the anti-derivatives, but confused on your file format for optimal. Some of your input files, for the integrals which has no known anti, the 4th field has &quot;Int[....]&quot;. This is what I currently check for to decide if this has know anti or not. But some of Mathematica input files use &quot;Int[....]&quot; such as Hearn, problem 281. But other Mathematica files use &quot;Unintegrable[...]&quot; to indicate there is no known anti (for example, file 3_logarithms\\3.2_u-a+b_log-c_x^n-^p.m&quot;.  In addition, Maple input files for same integrals use &quot;Unintegrable(...)&quot; for the above, and use &quot;integrate(....)&quot; for the Hearn file. There is no command &quot;integrate()&quot; in Maple.<br>My point, this is confusing how to check if an integral has a known or no known optimal antiderivative among all CAS system I am using. It will be so much easier, just to add a special field in your input files (a 5th field), where it is 1 if there is known anti (the 4th field) and 0 if there is no known anti. This way I do not have to parse the 4th field each time to try to figure if it contains unevaluated integral in it or not in order to decide and how to do this in each CAS.   I need to know this, since part of verification, I need to use the optimal anti-derivative (method 2). For (method 1), I am all set, and it now works well.  (These are methods 1 and method 2 you mentioned before on verification of found anti-derivative).<br>thanks",
  "id": "5b357b686ceffe4eba3c447b",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-29T00:20:56.526Z",
  "text": "@AlbertRich  Hello; I am adding verification of the anti-derivatives, but confused on your file format for optimal. Some of your input files, for the integrals which has no known anti, the 4th field has \"Int[....]\". This is what I currently check for to decide if this has know anti or not. But some of Mathematica input files use \"Int[....]\" such as Hearn, problem 281. But other Mathematica files use \"Unintegrable[...]\" to indicate there is no known anti (for example, file 3_logarithms\\3.2_u-a+b_log-c_x^n-^p.m\".  In addition, Maple input files for same integrals use \"Unintegrable(...)\" for the above, and use \"integrate(....)\" for the Hearn file. There is no command \"integrate()\" in Maple.\nMy point, this is confusing how to check if an integral has a known or no known optimal antiderivative among all CAS system I am using. It will be so much easier, just to add a special field in your input files (a 5th field), where it is 1 if there is known anti (the 4th field) and 0 if there is no known anti. This way I do not have to parse the 4th field each time to try to figure if it contains unevaluated integral in it or not in order to decide and how to do this in each CAS.   I need to know this, since part of verification, I need to use the optimal anti-derivative (method 2). For (method 1), I am all set, and it now works well.  (These are methods 1 and method 2 you mentioned before on verification of found anti-derivative).\nthanks",
  "unread": false,
  "urls": [],
  "v": 6
 },
 {
  "editedAt": "2018-06-29T00:36:45.500Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "If the new 5th field is &quot;1&quot; then I just read the 4th field knowing it contains a valid optimal anti derivative expression and use that. Else, I know this integral does not have known optimal anti-derivative.  Much simpler. This I hope should not be hard for you to add and generate a new set of input files, or cause any problem for you but it will make it much easier to process your input files.",
  "id": "5b357d9faeb8fa0c074b7bfd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-29T00:30:23.972Z",
  "text": "If the new 5th field is \"1\" then I just read the 4th field knowing it contains a valid optimal anti derivative expression and use that. Else, I know this integral does not have known optimal anti-derivative.  Much simpler. This I hope should not be hard for you to add and generate a new set of input files, or cause any problem for you but it will make it much easier to process your input files.",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> From Rubi&#39;s current website, please update your copy of the following 7 Mathematica test files:<br>&quot;Hearn Problems.m&quot;<br>&quot;1.3.2 Algebraic functions.m&quot;<br>&quot;3.5 Logarithm functions.m&quot;<br>&quot;4.1.3.1 (a+b cos)^m (c+d cos)^n (A+B cos).m&quot;<br>&quot;4.3.4.2 (a+b sec)^m (d sec)^n (A+B sec+C sec^2).m&quot;<br>&quot;7.1.4a (f x)^m (d-c^2 d x^2)^p (a+b arccosh(c x))^n.m&quot;<br>&quot;8.10 Formal derivatives.m&quot;</p><p>You can download them  individually, or extract them from the <a href=\"http://www.apmaths.uwo.ca/~arich/IntegrationProblems/MathematicaSyntaxFiles/MathematicaSyntaxTestSuite.zip\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Mathematica test suite zip file</a>.  When you have done that, <em>none</em> of the optimal antiderivatives in <em>any</em> of your Mathematica test files will include calls of the form Int[u,v].  Instead they will have calls of the form Unintegrable[u,x] or CannotIntegrate[u,x], as appropriate.</p>",
  "id": "5b35bedf7da8cd7c8c7746cf",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-29T05:08:47.018Z",
  "text": "@nasser1 From Rubi's current website, please update your copy of the following 7 Mathematica test files:\n\"Hearn Problems.m\"\n\"1.3.2 Algebraic functions.m\"\n\"3.5 Logarithm functions.m\"\n\"4.1.3.1 (a+b cos)^m (c+d cos)^n (A+B cos).m\"\n\"4.3.4.2 (a+b sec)^m (d sec)^n (A+B sec+C sec^2).m\"\n\"7.1.4a (f x)^m (d-c^2 d x^2)^p (a+b arccosh(c x))^n.m\"\n\"8.10 Formal derivatives.m\"\n\nYou can download them  individually, or extract them from the [Mathematica test suite zip file](http://www.apmaths.uwo.ca/~arich/IntegrationProblems/MathematicaSyntaxFiles/MathematicaSyntaxTestSuite.zip).  When you have done that, *none* of the optimal antiderivatives in *any* of your Mathematica test files will include calls of the form Int[u,v].  Instead they will have calls of the form Unintegrable[u,x] or CannotIntegrate[u,x], as appropriate.",
  "unread": false,
  "urls": [
   {
    "url": "http://www.apmaths.uwo.ca/~arich/IntegrationProblems/MathematicaSyntaxFiles/MathematicaSyntaxTestSuite.zip"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Next, similarly update your copy of the following 7 Maple test files:<br>&quot;Hearn Problems.txt&quot;<br>&quot;1.3.2 Algebraic functions.txt&quot;<br>&quot;3.5 Logarithm functions.txt&quot;<br>&quot;4.1.3.1 (a+b cos)^m (c+d cos)^n (A+B cos).txt&quot;<br>&quot;4.3.4.2 (a+b sec)^m (d sec)^n (A+B sec+C sec^2).txt&quot;<br>&quot;7.1.4a (f x)^m (d-c^2 d x^2)^p (a+b arccosh(c x))^n.txt&quot;<br>&quot;8.10 Formal derivatives.txt&quot;</p><p> When you have done that, <em>none</em> of the optimal antiderivatives in <em>any</em> of your Maple test files will include calls of the form integrate(u,v).  Instead they will have calls of the form Unintegrable(u,x) or CannotIntegrate(u,x), as appropriate.</p>",
  "id": "5b35bf26ad21887018e7ee9a",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-29T05:09:58.372Z",
  "text": "@nasser1 Next, similarly update your copy of the following 7 Maple test files:\n\"Hearn Problems.txt\"\n\"1.3.2 Algebraic functions.txt\"\n\"3.5 Logarithm functions.txt\"\n\"4.1.3.1 (a+b cos)^m (c+d cos)^n (A+B cos).txt\"\n\"4.3.4.2 (a+b sec)^m (d sec)^n (A+B sec+C sec^2).txt\"\n\"7.1.4a (f x)^m (d-c^2 d x^2)^p (a+b arccosh(c x))^n.txt\"\n\"8.10 Formal derivatives.txt\"\n\n When you have done that, *none* of the optimal antiderivatives in *any* of your Maple test files will include calls of the form integrate(u,v).  Instead they will have calls of the form Unintegrable(u,x) or CannotIntegrate(u,x), as appropriate.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-29T05:14:18.183Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Now, to determine if a problem is integrable or not, just see if the optimal antiderivative involves calls on &quot;Unintegrable&quot; or calls on &quot;CannotIntegrate&quot;.  It may &quot;be so much easier&quot; for you, but certainly not for me, to include a 5th field in each of the 70,000+ problems in the test suite. :smile:",
  "id": "5b35bf51aeb8fa0c074be055",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-29T05:10:41.492Z",
  "text": "@nasser1 Now, to determine if a problem is integrable or not, just see if the optimal antiderivative involves calls on \"Unintegrable\" or calls on \"CannotIntegrate\".  It may \"be so much easier\" for you, but certainly not for me, to include a 5th field in each of the 70,000+ problems in the test suite. :smile:",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "editedAt": "2018-06-29T05:26:21.199Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  Hi Albert. I did not know how you generate the input files. I assumed you have some script which runs and writes these out each time, so I thought you just need to add an extra IF statement to add this field and run your scripts again. But if it involves any manual activity for you, then I understand it will be too much work to do.  No problem. I will check for <strong>Unintegrable</strong> or <strong>CannotIntegrate</strong>. Actually the way I do this in sympy is convert the expression to a string, and just use str(antiDerivative).find(&quot;string_to_find&quot;). I found this works much better and easy to implement in sagemath as well and Maple as well. This for example what I do know in Sage to check if the integration evaluated or not.",
  "id": "5b35c1027da8cd7c8c774a79",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-29T05:17:54.095Z",
  "text": "@AlbertRich  Hi Albert. I did not know how you generate the input files. I assumed you have some script which runs and writes these out each time, so I thought you just need to add an extra IF statement to add this field and run your scripts again. But if it involves any manual activity for you, then I understand it will be too much work to do.  No problem. I will check for **Unintegrable** or **CannotIntegrate**. Actually the way I do this in sympy is convert the expression to a string, and just use str(antiDerivative).find(\"string_to_find\"). I found this works much better and easy to implement in sagemath as well and Maple as well. This for example what I do know in Sage to check if the integration evaluated or not.",
  "unread": false,
  "urls": [],
  "v": 7
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  Do I understand you right, that you updated your Maple and Mathematica zip files with the above updated files? If so., it is much easier for me to download the zip files than downloading each file by hand. I also do not know which is each of these files by looking at your web.  So a zip file is easier. Thanks.",
  "id": "5b35c9b7b9c2fb25571513c1",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-29T05:55:03.572Z",
  "text": "@AlbertRich  Do I understand you right, that you updated your Maple and Mathematica zip files with the above updated files? If so., it is much easier for me to download the zip files than downloading each file by hand. I also do not know which is each of these files by looking at your web.  So a zip file is easier. Thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Yes, the zip files are up-to-date.",
  "id": "5b35ca4c59799e70174b877a",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-29T05:57:32.403Z",
  "text": "@nasser1 Yes, the zip files are up-to-date.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-29T06:10:54.750Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> In Mathematica, can&#39;t you just use FreeQ[optimal,Unintegrable] and FreeQ[optimal,CannotIntegrate] to see if the problem is integrable?",
  "id": "5b35cd265862c35f47d1d3af",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-29T06:09:42.937Z",
  "text": "@nasser1 In Mathematica, can't you just use FreeQ[optimal,Unintegrable] and FreeQ[optimal,CannotIntegrate] to see if the problem is integrable?",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  Yes, ofcourse, that is what I do now in Mathematica and Rubi scripts. (I add  -1 also). But the other CAS systems do not have similar construct, at least I could not find one. So it is easier to just convert the result to string and do string search. It works just as well.  In Maple I use hastype(....,specfunc(anything,int)) to check.  ",
  "id": "5b35d3295862c35f47d1e0a7",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-29T06:35:21.066Z",
  "text": "@AlbertRich  Yes, ofcourse, that is what I do now in Mathematica and Rubi scripts. (I add  -1 also). But the other CAS systems do not have similar construct, at least I could not find one. So it is easier to just convert the result to string and do string search. It works just as well.  In Maple I use hastype(....,specfunc(anything,int)) to check.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "But for <strong>Unintegrable</strong> and <strong>CannotIntegrate</strong> since Maple does not know about these, I might have to use the string trick to check. I need to check. I think specfunc() only works on known names to Maple.",
  "id": "5b35d38f479ca2668989268c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-29T06:37:03.140Z",
  "text": "But for **Unintegrable** and **CannotIntegrate** since Maple does not know about these, I might have to use the string trick to check. I need to check. I think specfunc() only works on known names to Maple.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Here is how I define freep in Maple:</p><p>freep := proc(u,x) option inline; type(u,freeof(x)) end proc:</p>",
  "id": "5b35f1315862c35f47d22e33",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-06-29T08:43:29.331Z",
  "text": "@nasser1 Here is how I define freep in Maple:\n\nfreep := proc(u,x) option inline; type(u,freeof(x)) end proc:\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-04T23:58:41.362Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "folks, heads up on next update to CAS integration tests which might be ready in few days. I am making small change on the score accounting. Currently, a CAS which fails to integrate an integral with no known anti derivative, is automatically assigned an A grade, even though it failed. I am changing this to give it an F grade. This will not affect the relative score among CAS systems, but they will all drop the passing % by about 5% each, since there are about 5% of integrals with no known optimal anti and almost all of these can not be solved now except for few exceptions.",
  "id": "5b3d5df870efc60660ade08b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-04T23:53:28.172Z",
  "text": "folks, heads up on next update to CAS integration tests which might be ready in few days. I am making small change on the score accounting. Currently, a CAS which fails to integrate an integral with no known anti derivative, is automatically assigned an A grade, even though it failed. I am changing this to give it an F grade. This will not affect the relative score among CAS systems, but they will all drop the passing % by about 5% each, since there are about 5% of integrals with no known optimal anti and almost all of these can not be solved now except for few exceptions.",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "editedAt": "2018-07-05T00:04:27.536Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "The reasons are: It is not fair as it stands, to those CAS systems which manage to solve few of these integrals with no known anti. Even though the result they generate has low quality grade, but they still can solve the integral. For example, now, a CAS can solve one such integral and get say a &quot;C&quot;, yet other CAS will get a &quot;A&quot; even though the other CAS was not able to solve the same integral. This is not fair scoring.  So that is why I am changing it back to the way it was long time ago.  Again, this will not materially change the relative score among CAS systems, but each will drop its current passing grade by about 5% and its current fail score will increase by the same amount. So a little more RED color will show up on the charts, That is all.  The notebook which generate the 3D barchart plot will automatically be updated and it is now added to the web page so any one can download it if needed and reproduce the plot.<br> thank you.",
  "id": "5b3d5ec089db5e701ca28d66",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-04T23:56:48.148Z",
  "text": "The reasons are: It is not fair as it stands, to those CAS systems which manage to solve few of these integrals with no known anti. Even though the result they generate has low quality grade, but they still can solve the integral. For example, now, a CAS can solve one such integral and get say a \"C\", yet other CAS will get a \"A\" even though the other CAS was not able to solve the same integral. This is not fair scoring.  So that is why I am changing it back to the way it was long time ago.  Again, this will not materially change the relative score among CAS systems, but each will drop its current passing grade by about 5% and its current fail score will increase by the same amount. So a little more RED color will show up on the charts, That is all.  The notebook which generate the 3D barchart plot will automatically be updated and it is now added to the web page so any one can download it if needed and reproduce the plot.\n thank you.",
  "unread": false,
  "urls": [],
  "v": 5
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> OK.",
  "id": "5b3d5f39bd92d8078294602c",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-04T23:58:49.036Z",
  "text": "@nasser1 OK.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> On your webpage and here you keep using the phrase &quot;no known antiderivative.&quot;  In fact for the vast majority of problems in the test suite for which no antiderivative is given, <em>no</em> antiderivative exists in closed-form.   For these problems it&#39;s not just the case the the antiderivative is not known; rather the antiderivative can&#39;t even be expressed in terms of the standard elementary, special and hypergeometric functions.  So for such problems I recommend using the phrase &quot;is not integrable in closed-form <em>or</em> has no known antiderivative.&quot;",
  "id": "5b3d95dca99e1e52b7172d31",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T03:51:56.085Z",
  "text": "@nasser1 On your webpage and here you keep using the phrase \"no known antiderivative.\"  In fact for the vast majority of problems in the test suite for which no antiderivative is given, *no* antiderivative exists in closed-form.   For these problems it's not just the case the the antiderivative is not known; rather the antiderivative can't even be expressed in terms of the standard elementary, special and hypergeometric functions.  So for such problems I recommend using the phrase \"is not integrable in closed-form *or* has no known antiderivative.\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-05T03:55:26.447Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> The reason I included such unintegrable problems in the test suite is to ensure a system does not exhaust memory, stack overflow or timeout when trying to integrate them.  Therefore so long as a system returns <em>any</em> result, it should be given an &quot;A&quot; on such problems, even if the grading program gives the result a &quot;B&quot; or &quot;C&quot;.  However, if the system does exhaust memory or hang, it should be given an &quot;F&quot;.<br>So in short I am saying:  For such unintegrable problems, raise the &quot;B&quot; and &quot;C&quot; grades to &quot;A&quot;, rather than lowering the &quot;A&quot; grades to &quot;F&quot;.  That is extremely unfair to systems that have correctly determined that the problem is unintegrable.  This will avoid your getting loud complaints from implementors of the various systems tested.",
  "id": "5b3d962163042f2df3575fc1",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T03:53:05.539Z",
  "text": "@nasser1 The reason I included such unintegrable problems in the test suite is to ensure a system does not exhaust memory, stack overflow or timeout when trying to integrate them.  Therefore so long as a system returns *any* result, it should be given an \"A\" on such problems, even if the grading program gives the result a \"B\" or \"C\".  However, if the system does exhaust memory or hang, it should be given an \"F\".\nSo in short I am saying:  For such unintegrable problems, raise the \"B\" and \"C\" grades to \"A\", rather than lowering the \"A\" grades to \"F\".  That is extremely unfair to systems that have correctly determined that the problem is unintegrable.  This will avoid your getting loud complaints from implementors of the various systems tested.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "If you need help modifying the grading program to give &quot;A&quot;s for such problems, let me know.",
  "id": "5b3d995fbd92d8078294c3b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T04:06:55.307Z",
  "text": "If you need help modifying the grading program to give \"A\"s for such problems, let me know.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-05T04:10:09.632Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  hi Albert, so If I understand you right, if CAS times-out on an integral after 3 minutes, it will get an F all the time. But if CAS return unevaluated before 3 minutes, it will get an A always, if the integral is &quot;unintgrable&quot;. Also CAS which returns an actual anti-derivative before 3 minutes on same integral will also get &quot;A&quot; regardless of the grade (ie. automatice A).  Right?  But if the integral are really unintegrable, then this means any CAS which returns anything but unevaluated must mean that result must be wrong, since the integral is supposed to be un-integrable.  Correct?",
  "id": "5b3d99783572e970c17719a5",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T04:07:20.820Z",
  "text": "@AlbertRich  hi Albert, so If I understand you right, if CAS times-out on an integral after 3 minutes, it will get an F all the time. But if CAS return unevaluated before 3 minutes, it will get an A always, if the integral is \"unintgrable\". Also CAS which returns an actual anti-derivative before 3 minutes on same integral will also get \"A\" regardless of the grade (ie. automatice A).  Right?  But if the integral are really unintegrable, then this means any CAS which returns anything but unevaluated must mean that result must be wrong, since the integral is supposed to be un-integrable.  Correct?",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "editedAt": "2018-07-05T04:11:00.914Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "There are number of CAS systems which return results on such un-integrable integrals now (saw 1 or 2 so far). Some even are verified. So this is strange result. But if this is what you prefer, it is easy for me to change it.",
  "id": "5b3d9a0170efc60660ae4879",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T04:09:37.655Z",
  "text": "There are number of CAS systems which return results on such un-integrable integrals now (saw 1 or 2 so far). Some even are verified. So this is strange result. But if this is what you prefer, it is easy for me to change it.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> For such problems if a system returns an antiderivative and it can be verified correct, then the test suite is in error and needs to be updated with the valid antiderivative.",
  "id": "5b3d9a1f7b811a6d63d0bce3",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T04:10:07.948Z",
  "text": "@nasser1 For such problems if a system returns an antiderivative and it can be verified correct, then the test suite is in error and needs to be updated with the valid antiderivative.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "However, the antiderivative must be in closed-form and not involve RootSum, RootOf, etc.",
  "id": "5b3d9aa87e23133ecb32c1f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T04:12:24.623Z",
  "text": "However, the antiderivative must be in closed-form and not involve RootSum, RootOf, etc.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-05T04:19:56.147Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Only elementary, special and hypergeometric 2F1 is allowed.  Not PFQ.",
  "id": "5b3d9ad263042f2df3576779",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T04:13:06.445Z",
  "text": "Only elementary, special and hypergeometric 2F1 is allowed.  Not PFQ.",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "editedAt": "2018-07-05T04:22:28.213Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  So when you say &quot;unintegrable&quot; you mean unintegrable in terms of elementary functions, special, etc...  For example, Mathematica can integrate <span data-link-type=\"issue\" data-issue=\"281\" class=\"issue\">#281</span> in Hearn file and is verified. But the anti-derivative is not in terms of elementary functions,. it has EllipticF. and Root. Now it is graded as &quot;B&quot;. So this should get an &quot;A&quot; grade? Ok. I&#39;ll adjust the grading this way. ",
  "id": "5b3d9cbd60c38707835ec9ee",
  "issues": [
   {
    "number": "281"
   }
  ],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T04:21:17.429Z",
  "text": "@AlbertRich  So when you say \"unintegrable\" you mean unintegrable in terms of elementary functions, special, etc...  For example, Mathematica can integrate #281 in Hearn file and is verified. But the anti-derivative is not in terms of elementary functions,. it has EllipticF. and Root. Now it is graded as \"B\". So this should get an \"A\" grade? Ok. I'll adjust the grading this way. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> No, I said above in terms of elementary, special and hypergeometric 2F1 functions.",
  "id": "5b3d9d18e534eb69a5c945e5",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T04:22:48.795Z",
  "text": "@nasser1 No, I said above in terms of elementary, special and hypergeometric 2F1 functions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "EllipticF is a special function, so that&#39;s ok.",
  "id": "5b3d9d443572e970c1771fdd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T04:23:32.087Z",
  "text": "EllipticF is a special function, so that's ok.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Root is no ok.",
  "id": "5b3d9d503572e970c1771fee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T04:23:44.641Z",
  "text": "Root is no ok.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Let me take a look at Hearn <span data-link-type=\"issue\" data-issue=\"281\" class=\"issue\">#281</span> and see if mma can be coerced to give a closed-form antiderivative.",
  "id": "5b3d9da033b0282df4014961",
  "issues": [
   {
    "number": "281"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T04:25:04.314Z",
  "text": "Let me take a look at Hearn #281 and see if mma can be coerced to give a closed-form antiderivative.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-05T04:25:29.916Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p>So., could you please then look at M result for </p><pre><code>  Integrate[Sqrt[9 - 4<span class=\"keyword\">*</span>Sqrt[2]]<span class=\"keyword\">*</span>x - Sqrt[2]<span class=\"keyword\">*</span>Sqrt[1 + 4<span class=\"keyword\">*</span>x + 2<span class=\"keyword\">*</span>x^2 + x^4],  x]</code></pre><p>on 11.3? It solves it and verified it. It has Root and EllipticF, yet this one is supposed to be unintegrable. </p>",
  "id": "5b3d9daae534eb69a5c94654",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T04:25:14.654Z",
  "text": "So., could you please then look at M result for \n\n      Integrate[Sqrt[9 - 4*Sqrt[2]]*x - Sqrt[2]*Sqrt[1 + 4*x + 2*x^2 + x^4],  x]\n\non 11.3? It solves it and verified it. It has Root and EllipticF, yet this one is supposed to be unintegrable. \n     ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "If we can get rid of the Root call, then it will be in closed-form.  Try the Mathematica function ToRadicals to see if that works.",
  "id": "5b3d9e3233b0282df4014a8a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T04:27:30.978Z",
  "text": "If we can get rid of the Root call, then it will be in closed-form.  Try the Mathematica function ToRadicals to see if that works.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Sorry, I&#39;ve got to leave now.  I will check back in later.  Aloha, Albert",
  "id": "5b3d9e829b82c6701ba394bd",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T04:28:50.583Z",
  "text": "@nasser1 Sorry, I've got to leave now.  I will check back in later.  Aloha, Albert",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "I did. it works. So this should in Integrable.",
  "id": "5b3d9eaa81816669a4319ef7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T04:29:30.774Z",
  "text": "I did. it works. So this should in Integrable.\n\n ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Ok, please simplify it as much as possible, send it to me and I will include it in the test suite.",
  "id": "5b3d9f5dbd92d8078294cba9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T04:32:29.024Z",
  "text": "Ok, please simplify it as much as possible, send it to me and I will include it in the test suite.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-05T07:57:51.661Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Nasser\" class=\"mention\">@Nasser</span> Regarding your email. I tried somethings to no avail. It&#39;s mysterious because this sub-problem crashes my 11.3 kernel",
  "id": "5b3dcf76bd92d80782953a5a",
  "issues": [],
  "mentions": [
   {
    "screenName": "Nasser",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T07:57:42.782Z",
  "text": "@Nasser Regarding your email. I tried somethings to no avail. It's mysterious because this sub-problem crashes my 11.3 kernel",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\">integrand = <span class=\"keyword\">Sqrt</span>[<span class=\"number\">1</span> + <span class=\"number\">4</span>*x + <span class=\"number\">2</span>*x^<span class=\"number\">2</span> + x^<span class=\"number\">4</span>];\nsol = <span class=\"keyword\">Integrate</span>[integrand, x];\n\n<span class=\"keyword\">D</span>[sol[[<span class=\"number\">2</span>]], x] // <span class=\"keyword\">Simplify</span></code></pre>",
  "id": "5b3dcf917b811a6d63d132c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T07:58:09.507Z",
  "text": "```mma\nintegrand = Sqrt[1 + 4*x + 2*x^2 + x^4];\nsol = Integrate[integrand, x];\n\nD[sol[[2]], x] // Simplify\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-05T08:15:17.135Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>   Yes, it seems to crash my kernel also, 11.3 on Linux. But I get no message or beep or anything on console or anywhere. Kernel just goes away. I tried it on 11.2, it did not crash, but I had to stop it after 5 or so minutes, got tired waiting. May be if I wait more it will finish. Do not know.  Verification phase has 3 minutes time out btw.",
  "id": "5b3dd3609b82c6701ba40e0f",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T08:14:24.515Z",
  "text": "@halirutan   Yes, it seems to crash my kernel also, 11.3 on Linux. But I get no message or beep or anything on console or anywhere. Kernel just goes away. I tried it on 11.2, it did not crash, but I had to stop it after 5 or so minutes, got tired waiting. May be if I wait more it will finish. Do not know.  Verification phase has 3 minutes time out btw.\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-07-05T08:21:08.331Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span>  <span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Recapping, we&#39;ve managed to produce a candidate antiderivative for Hearn <span data-link-type=\"issue\" data-issue=\"281\" class=\"issue\">#281</span> but we have not been able to verify it after eliminating the Root function using ToRadicals.  In my opinion, I think this is a ridiculous problem that should be eliminated from the test suite...  Ok?",
  "id": "5b3dd40889db5e701ca35b44",
  "issues": [
   {
    "number": "281"
   }
  ],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   },
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T08:17:12.259Z",
  "text": "@nasser1  @halirutan Recapping, we've managed to produce a candidate antiderivative for Hearn #281 but we have not been able to verify it after eliminating the Root function using ToRadicals.  In my opinion, I think this is a ridiculous problem that should be eliminated from the test suite...  Ok?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  But Maple also solves <span data-link-type=\"issue\" data-issue=\"281\" class=\"issue\">#281</span>? So if we remove it, will lose Maple output, which can be good one. Maple output I did not verify, since I have not yet coded the verification for Maple, but Maple result contains no RootOf or RootSum?  As you can see on the CAS integration page. Here it is",
  "id": "5b3dd5ac3572e970c177a5d3",
  "issues": [
   {
    "number": "281"
   }
  ],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T08:24:12.030Z",
  "text": "@AlbertRich  But Maple also solves #281? So if we remove it, will lose Maple output, which can be good one. Maple output I did not verify, since I have not yet coded the verification for Maple, but Maple result contains no RootOf or RootSum?  As you can see on the CAS integration page. Here it is",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<a href=\"https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/test_cases/0_Independent_test_suites/Hearn_Problems/resu281.htm#281\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/test_cases/0_Independent_test_suites/Hearn_Problems/resu281.htm#281</a> ",
  "id": "5b3dd5e1a99e1e52b717c222",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T08:25:05.056Z",
  "text": "https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/test_cases/0_Independent_test_suites/Hearn_Problems/resu281.htm#281 ",
  "unread": false,
  "urls": [
   {
    "url": "https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/test_cases/0_Independent_test_suites/Hearn_Problems/resu281.htm#281"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "If you are having problem copying it from the web page, I will email you the antiderivative (or if you have Maple, you can see for yourself) this is using Maple 2018.1",
  "id": "5b3dd66ae534eb69a5c9cbd4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T08:27:22.148Z",
  "text": "If you are having problem copying it from the web page, I will email you the antiderivative (or if you have Maple, you can see for yourself) this is using Maple 2018.1",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Good luck on verifying it...",
  "id": "5b3dd6877b811a6d63d1424b",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T08:27:51.660Z",
  "text": "@nasser1 Good luck on verifying it...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-05T08:30:15.669Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "I have not tried, ofcourse it might not verify and the result can also be wrong, I do not know. It is up to your ofcourse if you want to delete <span data-link-type=\"issue\" data-issue=\"281\" class=\"issue\">#281</span> from Hearn file as you are the one who manages the input files. ",
  "id": "5b3dd6f93572e970c177a9e1",
  "issues": [
   {
    "number": "281"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T08:29:45.319Z",
  "text": "I have not tried, ofcourse it might not verify and the result can also be wrong, I do not know. It is up to your ofcourse if you want to delete #281 from Hearn file as you are the one who manages the input files. ",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> The integrand we have here is the square root of a quartic polynomial.  Using the quartic equation, the polynomial can be factored into the form (a+b x)(c+d x)(e+f x)(g+h x).  Then using piecewise constant extraction the integrand can be transformed into</p><pre><code class=\"mma\"><span class=\"keyword\">Sqrt</span>[a+b x] <span class=\"keyword\">Sqrt</span>[c+d x] <span class=\"keyword\">Sqrt</span>[e+f x] <span class=\"keyword\">Sqrt</span>[g+h x]</code></pre><p>Rubi can integrate this product of 4 square-roots of linears into a reasonable size antiderivative involving elliptic E, F and Pi functions that can be easily verified.  So in general there does indeed exist a closed-form antiderivative for the square-root of any quartic polynomial, including Hearn <span data-link-type=\"issue\" data-issue=\"281\" class=\"issue\">#281</span>.<br>However, until we come up with one that can be verified I am reluctant to include it in the test suite.</p>",
  "id": "5b3ddb3b60c38707835f5778",
  "issues": [
   {
    "number": "281"
   }
  ],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T08:47:55.722Z",
  "text": "@nasser1 The integrand we have here is the square root of a quartic polynomial.  Using the quartic equation, the polynomial can be factored into the form (a+b x)(c+d x)(e+f x)(g+h x).  Then using piecewise constant extraction the integrand can be transformed into\n```mma\nSqrt[a+b x] Sqrt[c+d x] Sqrt[e+f x] Sqrt[g+h x]\n```\nRubi can integrate this product of 4 square-roots of linears into a reasonable size antiderivative involving elliptic E, F and Pi functions that can be easily verified.  So in general there does indeed exist a closed-form antiderivative for the square-root of any quartic polynomial, including Hearn #281.\nHowever, until we come up with one that can be verified I am reluctant to include it in the test suite.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-05T11:15:16.472Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p>I found a big problem. I found out when I load RUBI, things no longer works for the check I was using, which is </p><pre><code> If[ (FreeQ[ lst<span class=\"string\">[[counter, 4]]</span> , CannotIntegrate, -<span class=\"number\">1</span>]  \n        &amp;&amp; \n     FreeQ[ lst<span class=\"string\">[[counter, 4]]</span> , Unintegrable, -<span class=\"number\">1</span>]) ,\n         ..... found a <span class=\"keyword\">not</span> integrable integral....</code></pre><p>And I did not know why. If I do NOT load RUBI, and just run Mathematica test, (on clean kernel) then the above check works. </p><p>I load RUBI, then the check fails again. I turns out that RUBI redefines CannotIntegrate back to Defer[Int], so the check in the code above fails to detect unintegrable integral.</p><pre><code>  ?? <span class=\"name\">CannotIntegrate</span>\n  <span class=\"name\">CannotIntegrate</span>[<span class=\"name\">Rubi</span><span class=\"string\">`Private`</span><span class=\"atom\">u_</span>,<span class=\"name\">Rubi</span><span class=\"string\">`Private`</span><span class=\"atom\">x_</span>]:=\n    <span class=\"name\">Defer</span>[<span class=\"name\">Int</span>] [<span class=\"name\">Rubi</span><span class=\"string\">`Private`</span><span class=\"atom\">u</span>,<span class=\"name\">Rubi</span><span class=\"string\">`Private`</span><span class=\"atom\">x</span>]</code></pre><p>The above is all what I can find now to explain this problem. So the code I have above does not work to check for unintegrable integrals, since it gets changed to Defer[Int] before I use it!</p><p>This is a problem. Any suggestions what to do and fix it?</p>",
  "id": "5b3dfcb781816669a4327bcb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T11:10:47.623Z",
  "text": "I found a big problem. I found out when I load RUBI, things no longer works for the check I was using, which is \n\n     If[ (FreeQ[ lst[[counter, 4]] , CannotIntegrate, -1]  \n            && \n         FreeQ[ lst[[counter, 4]] , Unintegrable, -1]) ,\n             ..... found a not integrable integral....\n\nAnd I did not know why. If I do NOT load RUBI, and just run Mathematica test, (on clean kernel) then the above check works. \n\nI load RUBI, then the check fails again. I turns out that RUBI redefines CannotIntegrate back to Defer[Int], so the check in the code above fails to detect unintegrable integral.\n\n      ?? CannotIntegrate\n      CannotIntegrate[Rubi`Private`u_,Rubi`Private`x_]:=\n        Defer[Int] [Rubi`Private`u,Rubi`Private`x]\n\nThe above is all what I can find now to explain this problem. So the code I have above does not work to check for unintegrable integrals, since it gets changed to Defer[Int] before I use it!\n\nThis is a problem. Any suggestions what to do and fix it?",
  "unread": false,
  "urls": [],
  "v": 9
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "I am using Rubi 4.15.2",
  "id": "5b3dfe1c60c38707835faed6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T11:16:44.107Z",
  "text": "I am using Rubi 4.15.2",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-05T11:24:37.708Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p>It seems same issue with  Unintegrable. it seems to be replaced/redefined  by Defer[int]? </p><p>Before I used to check if the 4th field (the optimal anti-derivative) has Int[] in it, but Albert said to check for Unintegrable and CannotIntegrate.  So now I am not sure what to use to do the checking.</p>",
  "id": "5b3dff9733b0282df4022fc3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T11:23:03.181Z",
  "text": "It seems same issue with  Unintegrable. it seems to be replaced/redefined  by Defer[int]? \n\nBefore I used to check if the 4th field (the optimal anti-derivative) has Int[] in it, but Albert said to check for Unintegrable and CannotIntegrate.  So now I am not sure what to use to do the checking.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-07-05T11:32:03.036Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p>Please note that the Rubi input file does indeed has CannotIntegrate in it, in the 4th filed, here it is</p><pre><code>(1/2)<span class=\"keyword\">*</span>Sqrt[9 - 4<span class=\"keyword\">*</span>Sqrt[2]]<span class=\"keyword\">*</span>x^2 - Sqrt[2]<span class=\"keyword\">*</span>CannotIntegrate[Sqrt[1 + 4<span class=\"keyword\">*</span>x + 2<span class=\"keyword\">*</span>x^2 + x^4]</code></pre><p>It is just that when it is read at run time, and RUBI package is also loaded before that, is when  this problem shows up.</p>",
  "id": "5b3e017d7e23133ecb33b403",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T11:31:08.988Z",
  "text": "Please note that the Rubi input file does indeed has CannotIntegrate in it, in the 4th filed, here it is\n\n    (1/2)*Sqrt[9 - 4*Sqrt[2]]*x^2 - Sqrt[2]*CannotIntegrate[Sqrt[1 + 4*x + 2*x^2 + x^4]\n\nIt is just that when it is read at run time, and RUBI package is also loaded before that, is when  this problem shows up.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "opps, sorry, typo, in the above I meant to write &quot;..... found integrable integral....&quot;  (when it is free of both CannotIntegrate and Unintegrable.",
  "id": "5b3e061389db5e701ca3cdc7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T11:50:43.290Z",
  "text": "opps, sorry, typo, in the above I meant to write \"..... found integrable integral....\"  (when it is free of both CannotIntegrate and Unintegrable.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-05T18:57:26.784Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Sorry about the confusion.  To check for all possible problems having no closed-form antiderivative replace</p><pre><code class=\"mma\"><span class=\"keyword\">FreeQ</span>[lst[[counter, <span class=\"number\">4</span>]] , CannotIntegrate, -<span class=\"number\">1</span>] &amp;&amp; \n<span class=\"keyword\">FreeQ</span>[lst[[counter, <span class=\"number\">4</span>]] , Unintegrable, -<span class=\"number\">1</span>]</code></pre><p>with</p><pre><code class=\"mma\"><span class=\"keyword\">FreeQ</span>[lst[[counter, <span class=\"number\">4</span>]] , CannotIntegrate, -<span class=\"number\">1</span>] &amp;&amp; \n<span class=\"keyword\">FreeQ</span>[lst[[counter, <span class=\"number\">4</span>]] , Unintegrable, -<span class=\"number\">1</span>] &amp;&amp; \n<span class=\"keyword\">FreeQ</span>[lst[[counter, <span class=\"number\">4</span>]] , <span class=\"keyword\">Defer</span>[Int], -<span class=\"number\">1</span>]</code></pre><p>Please let me know if that resolves the problem, or not.</p>",
  "id": "5b3e696a63042f2df359722e",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T18:54:34.136Z",
  "text": "@nasser1 Sorry about the confusion.  To check for all possible problems having no closed-form antiderivative replace\n```mma\nFreeQ[lst[[counter, 4]] , CannotIntegrate, -1] && \nFreeQ[lst[[counter, 4]] , Unintegrable, -1]\n```\nwith\n```mma\nFreeQ[lst[[counter, 4]] , CannotIntegrate, -1] && \nFreeQ[lst[[counter, 4]] , Unintegrable, -1] && \nFreeQ[lst[[counter, 4]] , Defer[Int], -1]\n```\nPlease let me know if that resolves the problem, or not.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-07-05T19:29:35.852Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p>finally I saw a segfault now in 11.3 on Linux on the terminal. 11.3 keeps crashing on Linux as I said, but now I saw an actually message on the terminal: (switching again to 11.2 on Linux, since 11.3 just not working)</p><blockquote>\n<p>Mathematica has received the signal: SIGSEGV and has exited.<br>   If possible, please report this problem to <a href=\"mailto:support@wolfram.com\" rel=\"nofollow\">support@wolfram.com</a><br>   describing in as much detail as possible what you were doing<br>   when the problem occurred.<br>   /usr/local/Wolfram/Mathematica/11.3/Executables/Mathematica:<br>   line 130:  8925 Segmentation fault      (core dumped)<br>   &quot;${MathematicaFE}&quot; -topDirectory &quot;${TopDirectory}&quot; &quot;$@</p></blockquote>\n",
  "id": "5b3e70e4f1664406611cd63a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T19:26:28.378Z",
  "text": "finally I saw a segfault now in 11.3 on Linux on the terminal. 11.3 keeps crashing on Linux as I said, but now I saw an actually message on the terminal: (switching again to 11.2 on Linux, since 11.3 just not working)\n\n >Mathematica has received the signal: SIGSEGV and has exited.\n   If possible, please report this problem to support@wolfram.com\n   describing in as much detail as possible what you were doing\n   when the problem occurred.\n   /usr/local/Wolfram/Mathematica/11.3/Executables/Mathematica: \n   line 130:  8925 Segmentation fault      (core dumped) \n   \"${MathematicaFE}\" -topDirectory \"${TopDirectory}\" \"$@\n\n\n",
  "unread": false,
  "urls": [
   {
    "url": "mailto:support@wolfram.com"
   }
  ],
  "v": 6
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> I assume this is unrelated to my suggestion above???",
  "id": "5b3e74277e23133ecb34f89e",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T19:40:23.422Z",
  "text": "@nasser1 I assume this is unrelated to my suggestion above???",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  thanks. The new check seems to work now.  I tested it on one file. What was driving me crazy is that when I print the input line I see it says</p><pre><code> <span class=\"number\">1</span>/<span class=\"number\">2</span> <span class=\"built_in\">Sqrt</span>[<span class=\"number\">9</span>-<span class=\"number\">4</span> <span class=\"built_in\">Sqrt</span>[<span class=\"number\">2</span>]] x^<span class=\"number\">2</span>-<span class=\"built_in\">Sqrt</span>[<span class=\"number\">2</span>] <span class=\"built_in\">Int</span>[<span class=\"built_in\">Sqrt</span>[<span class=\"number\">1</span>+<span class=\"number\">4</span> x+<span class=\"number\">2</span> x^<span class=\"number\">2</span>+x^<span class=\"number\">4</span>]</code></pre><p>but in the file it says </p><pre><code>(1/2)<span class=\"keyword\">*</span>Sqrt[9 - 4<span class=\"keyword\">*</span>Sqrt[2]]<span class=\"keyword\">*</span>x^2 - Sqrt[2]<span class=\"keyword\">*</span>CannotIntegrate[Sqrt[1 + 4<span class=\"keyword\">*</span>x + 2<span class=\"keyword\">*</span>x^2 + x^4]</code></pre><p>At first I thought I was reading the wrong file. But this only happend when Rubi is loaded and I know I am reading the correct input file.  So was CannotIntegrate being changed to Defer[Int] on the fly??</p>",
  "id": "5b3e742cf1664406611cdd4a",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T19:40:28.602Z",
  "text": "@AlbertRich  thanks. The new check seems to work now.  I tested it on one file. What was driving me crazy is that when I print the input line I see it says\n\n     1/2 Sqrt[9-4 Sqrt[2]] x^2-Sqrt[2] Int[Sqrt[1+4 x+2 x^2+x^4]\n\nbut in the file it says \n\n    (1/2)*Sqrt[9 - 4*Sqrt[2]]*x^2 - Sqrt[2]*CannotIntegrate[Sqrt[1 + 4*x + 2*x^2 + x^4]\n\nAt first I thought I was reading the wrong file. But this only happend when Rubi is loaded and I know I am reading the correct input file.  So was CannotIntegrate being changed to Defer[Int] on the fly??",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span>  Yes, user do not want to see CannotIntegrate.  ",
  "id": "5b3e7473f1664406611cde22",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T19:41:39.716Z",
  "text": "@nasser1  Yes, user do not want to see CannotIntegrate.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "The check for Defer[Int] works, even though it prints as Int. I assume the Defer is not showing when printed?",
  "id": "5b3e748de534eb69a5cb8486",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T19:42:05.801Z",
  "text": "The check for Defer[Int] works, even though it prints as Int. I assume the Defer is not showing when printed?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Yes, that is the purpose of Defer.  See the online help for Defer.",
  "id": "5b3e74a989db5e701ca4fd6e",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T19:42:33.847Z",
  "text": "@nasser1 Yes, that is the purpose of Defer.  See the online help for Defer.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "If when Rubi is unable to integrate an expression, it returned Int[expn,x] instead of Defer[Int][expn,x] it would result in infinite recursion and a stack overflow.",
  "id": "5b3e783970efc60660b0780e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T19:57:45.459Z",
  "text": "If when Rubi is unable to integrate an expression, it returned Int[expn,x] instead of Defer[Int][expn,x] it would result in infinite recursion and a stack overflow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-05T21:35:26.534Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  Ok, thanks for explanation. For the future, if you able to, that is why I suggested before to add a special extra field, which is either 0 or 1, to indicate if this integral is integrable or not. This way, you can always change/add the format for the 4th field and one does not have to change the code accordingly to adjust the checking logic. Another idea if I can suggest, instead of the above, for the future, if you could instead put all those non-integrable integrals in their own one test input file? Instead of having them spread among the other integrals as it is now? Again, I do not know if this will work for how you classify the integrals,  but it is just a suggestion.",
  "id": "5b3e8e7ff1664406611d201d",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-05T21:32:47.962Z",
  "text": "@AlbertRich  Ok, thanks for explanation. For the future, if you able to, that is why I suggested before to add a special extra field, which is either 0 or 1, to indicate if this integral is integrable or not. This way, you can always change/add the format for the 4th field and one does not have to change the code accordingly to adjust the checking logic. Another idea if I can suggest, instead of the above, for the future, if you could instead put all those non-integrable integrals in their own one test input file? Instead of having them spread among the other integrals as it is now? Again, I do not know if this will work for how you classify the integrals,  but it is just a suggestion.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span>  <span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> I have derived and verified a closed-form antiderivative for Hearn <span data-link-type=\"issue\" data-issue=\"281\" class=\"issue\">#281</span>.  Instead of verifying it directly by differentiation, it was verified <em>in</em>directly as follows:<br>Since the derivative of</p><pre><code class=\"mma\"><span class=\"keyword\">Sqrt</span>[(a + b*x)*(c + d*x)*(e + f*x)*(g + h*x)] / \n    (<span class=\"keyword\">Sqrt</span>[a + b*x]* <span class=\"keyword\">Sqrt</span>[c + d*x]*<span class=\"keyword\">Sqrt</span>[e + f*x]*<span class=\"keyword\">Sqrt</span>[g + h*x])</code></pre><p>equals 0, by piecewise constant extraction</p><pre><code class=\"mma\"><span class=\"keyword\">Integrate</span>[<span class=\"keyword\">Sqrt</span>[(a + b*x)*(c + d*x)*(e + f*x)*(g + h*x)], x]</code></pre><p>equals</p><pre><code class=\"mma\">(<span class=\"keyword\">Sqrt</span>[(a + b*x)*(c + d*x)*(e + f*x)*(g + h*x)] / \n    (<span class=\"keyword\">Sqrt</span>[a + b*x]*<span class=\"keyword\">Sqrt</span>[c + d*x]*<span class=\"keyword\">Sqrt</span>[e + f*x]*<span class=\"keyword\">Sqrt</span>[g + h*x]))*\n  <span class=\"keyword\">Integrate</span>[<span class=\"keyword\">Sqrt</span>[a + b*x]*<span class=\"keyword\">Sqrt</span>[c + d*x]*<span class=\"keyword\">Sqrt</span>[e + f*x]*<span class=\"keyword\">Sqrt</span>[g + h*x], x]</code></pre><p>The antiderivative Rubi returns for this can be verified by differentiation.<br>Then I used Mathematica to solve for the zeros of the quartic polynomial to determine the a, b, c, d, e, f, g and h such that</p><pre><code class=\"mma\"><span class=\"number\">1</span> + <span class=\"number\">4</span>*x + <span class=\"number\">2</span>*x^<span class=\"number\">2</span> + x^<span class=\"number\">4</span> == (a + b*x)*(c + d*x)*(e + f*x)*(g + h*x)</code></pre><p>Plugging these values into the verified antiderivative of</p><pre><code class=\"mma\"><span class=\"keyword\">Sqrt</span>[(a + b*x)*(c + d*x)*(e + f*x)*(g + h*x)]</code></pre><p>gives an indirectly verified closed-form antiderivative for Hearn <span data-link-type=\"issue\" data-issue=\"281\" class=\"issue\">#281</span>.  QED</p>",
  "id": "5b3fc8e03572e970c17c535a",
  "issues": [
   {
    "number": "281"
   },
   {
    "number": "281"
   }
  ],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   },
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-06T19:54:08.144Z",
  "text": "@nasser1  @halirutan I have derived and verified a closed-form antiderivative for Hearn #281.  Instead of verifying it directly by differentiation, it was verified *in*directly as follows:\nSince the derivative of\n```mma\nSqrt[(a + b*x)*(c + d*x)*(e + f*x)*(g + h*x)] / \n    (Sqrt[a + b*x]* Sqrt[c + d*x]*Sqrt[e + f*x]*Sqrt[g + h*x])\n```\nequals 0, by piecewise constant extraction\n```mma\nIntegrate[Sqrt[(a + b*x)*(c + d*x)*(e + f*x)*(g + h*x)], x]\n```\nequals\n```mma\n(Sqrt[(a + b*x)*(c + d*x)*(e + f*x)*(g + h*x)] / \n    (Sqrt[a + b*x]*Sqrt[c + d*x]*Sqrt[e + f*x]*Sqrt[g + h*x]))*\n  Integrate[Sqrt[a + b*x]*Sqrt[c + d*x]*Sqrt[e + f*x]*Sqrt[g + h*x], x]\n```\nThe antiderivative Rubi returns for this can be verified by differentiation.\nThen I used Mathematica to solve for the zeros of the quartic polynomial to determine the a, b, c, d, e, f, g and h such that\n```mma\n1 + 4*x + 2*x^2 + x^4 == (a + b*x)*(c + d*x)*(e + f*x)*(g + h*x)\n```\nPlugging these values into the verified antiderivative of\n```mma\nSqrt[(a + b*x)*(c + d*x)*(e + f*x)*(g + h*x)]\n```\ngives an indirectly verified closed-form antiderivative for Hearn #281.  QED\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-06T19:57:26.392Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Unfortunately, my access to Rubi&#39;s UWO website has been temporarily (hopefully) disabled.  So I will email you the Hearn Problems.m test suite files containing the closed-form antiderivative for Hearn <span data-link-type=\"issue\" data-issue=\"281\" class=\"issue\">#281</span> in Mathematica and Maple syntax.",
  "id": "5b3fc96263042f2df35c91d9",
  "issues": [
   {
    "number": "281"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-06T19:56:18.750Z",
  "text": "Unfortunately, my access to Rubi's UWO website has been temporarily (hopefully) disabled.  So I will email you the Hearn Problems.m test suite files containing the closed-form antiderivative for Hearn #281 in Mathematica and Maple syntax.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> <span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Presumably Maple will now get an &quot;A&quot; on this problem, Rubi will get an &quot;F&quot;, and Mathematica will also get an &quot;F&quot; since its result is not in closed-form.  Since Wolfram may well complain about this, I suggest we introduce a new grade of &quot;D&quot; for non-closed-form antiderivatives involving Root, RootOf, RootSum, etc.   It should be relatively easy to modify the grading routine to do this.",
  "id": "5b3fd0073c5abf52b6424271",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   },
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-06T20:24:39.689Z",
  "text": "@nasser1 @halirutan Presumably Maple will now get an \"A\" on this problem, Rubi will get an \"F\", and Mathematica will also get an \"F\" since its result is not in closed-form.  Since Wolfram may well complain about this, I suggest we introduce a new grade of \"D\" for non-closed-form antiderivatives involving Root, RootOf, RootSum, etc.   It should be relatively easy to modify the grading routine to do this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-06T20:42:05.563Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  thanks for the new file. Mathematica gets a C on this and Rubi F.<br>using your new optimal anti-derivative. I will update the input file for Hearn and re-run the tests for this.",
  "id": "5b3fd3b03572e970c17c6c20",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-06T20:40:16.922Z",
  "text": "@AlbertRich  thanks for the new file. Mathematica gets a C on this and Rubi F. \nusing your new optimal anti-derivative. I will update the input file for Hearn and re-run the tests for this.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "editedAt": "2018-07-06T21:08:37.063Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<pre><code><span class=\"name\">In</span>[<span class=\"number\">3</span>]:= <span class=\"name\">Get</span>[<span class=\"string\">\"code/GradeAntiderivative.m\"</span>];\n<span class=\"atom\">integrand</span>=<span class=\"name\">Sqrt</span>[-<span class=\"number\">4</span>*<span class=\"name\">Sqrt</span>[<span class=\"number\">2</span>]+<span class=\"number\">9</span>]*<span class=\"atom\">x</span>-<span class=\"name\">Sqrt</span>[<span class=\"atom\">x</span>^<span class=\"number\">4</span>+<span class=\"number\">2</span>*<span class=\"atom\">x</span>^<span class=\"number\">2</span>+<span class=\"number\">4</span>*<span class=\"atom\">x</span>+<span class=\"number\">1</span>]*<span class=\"name\">Sqrt</span>[<span class=\"number\">2</span>];\n<span class=\"atom\">anti</span>=<span class=\"name\">Integrate</span>[<span class=\"atom\">integrand</span>,<span class=\"atom\">x</span>];\n<span class=\"name\">GradeAntiderivative</span>[<span class=\"atom\">anti</span>,<span class=\"atom\">newOptimal</span>]\n<span class=\"name\">Out</span>[<span class=\"number\">6</span>]= <span class=\"name\">C</span>\n\n <span class=\"name\">In</span>[<span class=\"number\">32</span>]:= <span class=\"atom\">antiRubi</span>=<span class=\"name\">Int</span>[<span class=\"atom\">integrand</span>,<span class=\"atom\">x</span>]\n <span class=\"name\">GradeAntiderivative</span>[<span class=\"atom\">antiRubi</span>,<span class=\"atom\">newOptimal</span>]\n <span class=\"name\">Out</span>[<span class=\"number\">32</span>]= <span class=\"number\">1</span>/<span class=\"number\">2</span> <span class=\"name\">Sqrt</span>[<span class=\"number\">9</span>-<span class=\"number\">4</span> <span class=\"name\">Sqrt</span>[<span class=\"number\">2</span>]] <span class=\"atom\">x</span>^<span class=\"number\">2</span>-<span class=\"name\">Sqrt</span>[<span class=\"number\">2</span>] <span class=\"name\">Int</span>[<span class=\"name\">Sqrt</span>[<span class=\"number\">1</span>+<span class=\"number\">4</span> <span class=\"atom\">x</span>+<span class=\"number\">2</span> <span class=\"atom\">x</span>^<span class=\"number\">2</span>+<span class=\"atom\">x</span>^<span class=\"number\">4</span>],<span class=\"atom\">x</span>]\n <span class=\"name\">Out</span>[<span class=\"number\">33</span>]= <span class=\"name\">F</span></code></pre>",
  "id": "5b3fd8ea81816669a436e410",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-06T21:02:34.906Z",
  "text": "    In[3]:= Get[\"code/GradeAntiderivative.m\"];\n    integrand=Sqrt[-4*Sqrt[2]+9]*x-Sqrt[x^4+2*x^2+4*x+1]*Sqrt[2];\n    anti=Integrate[integrand,x];\n    GradeAntiderivative[anti,newOptimal]\n    Out[6]= C\n\n     In[32]:= antiRubi=Int[integrand,x]\n     GradeAntiderivative[antiRubi,newOptimal]\n     Out[32]= 1/2 Sqrt[9-4 Sqrt[2]] x^2-Sqrt[2] Int[Sqrt[1+4 x+2 x^2+x^4],x]\n     Out[33]= F",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "editedAt": "2018-07-06T21:26:04.545Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p>Mathematica did best on Hearn file. 100% passing !  </p><p>The following is a list of integrals that has no closed form antiderivative<br>{75, 145, 170, 273}</p><p>The following is a list of integrals not solved by each system</p><p>Not solved by Rubi {169, 274, 278, 279, 281, 284}</p><p>Not solved by Mathematica {}</p><p>Not solved by Maple {86, 251}</p><p>Not solved by Maxima {8, 21, 35, 39, 40, 42, 43, 44, 45, 49, 51, 56, 64, 86, 122, 123, 147, 157, 160, 161, 163, 175, 176, 180, 181, 185, 186,<br>187, 196, 203, 205, 206, 207, 208, 211, 212, 213, 214, 224, 239, 251, 257, 278, 279, 281, 284}</p><p>Not solved by Fricas {22, 60, 61, 63, 73, 86, 102, 103, 104, 105, 127, 174, 205, 207, 229, 257, 265, 281}</p><p>Not solved by Sympy {12, 50, 60, 61, 63, 86, 123, 128, 129, 145, 146, 147, 162, 163, 169, 172, 176, 196, 197, 198, 204, 207, 208, 211, 212,<br>213, 214, 235, 236, 237, 238, 242, 249, 251, 265, 275, 278, 279, 280, 281, 282, 283}</p><p>Not solved by Giac {1, 2, 3, 33, 34, 44, 45, 47, 48, 63, 86, 128, 129, 163, 164, 168, 169, 198, 200, 201, 203, 235, 236, 237, 238, 257, 259, 274,<br>278, 279, 281, 284}</p>",
  "id": "5b3fde4c33b0282df406a791",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-06T21:25:32.431Z",
  "text": "Mathematica did best on Hearn file. 100% passing !  \n\nThe following is a list of integrals that has no closed form antiderivative\n{75, 145, 170, 273}\n\nThe following is a list of integrals not solved by each system\n\nNot solved by Rubi {169, 274, 278, 279, 281, 284}\n\nNot solved by Mathematica {}\n\nNot solved by Maple {86, 251}\n\nNot solved by Maxima {8, 21, 35, 39, 40, 42, 43, 44, 45, 49, 51, 56, 64, 86, 122, 123, 147, 157, 160, 161, 163, 175, 176, 180, 181, 185, 186,\n187, 196, 203, 205, 206, 207, 208, 211, 212, 213, 214, 224, 239, 251, 257, 278, 279, 281, 284}\n\nNot solved by Fricas {22, 60, 61, 63, 73, 86, 102, 103, 104, 105, 127, 174, 205, 207, 229, 257, 265, 281}\n\nNot solved by Sympy {12, 50, 60, 61, 63, 86, 123, 128, 129, 145, 146, 147, 162, 163, 169, 172, 176, 196, 197, 198, 204, 207, 208, 211, 212,\n213, 214, 235, 236, 237, 238, 242, 249, 251, 265, 275, 278, 279, 280, 281, 282, 283}\n\nNot solved by Giac {1, 2, 3, 33, 34, 44, 45, 47, 48, 63, 86, 128, 129, 163, 164, 168, 169, 198, 200, 201, 203, 235, 236, 237, 238, 257, 259, 274,\n278, 279, 281, 284}\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<a href=\"https://files.gitter.im/Rule-Based-Integration/Lobby/I6pl/image.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/Rule-Based-Integration/Lobby/I6pl/thumb/image.png\" alt=\"image.png\" rel=\"nofollow\"></a>",
  "id": "5b3fdf06bd92d807829a4bf5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-06T21:28:38.436Z",
  "text": "[![image.png](https://files.gitter.im/Rule-Based-Integration/Lobby/I6pl/thumb/image.png)](https://files.gitter.im/Rule-Based-Integration/Lobby/I6pl/image.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/Rule-Based-Integration/Lobby/I6pl/thumb/image.png"
   },
   {
    "url": "https://files.gitter.im/Rule-Based-Integration/Lobby/I6pl/image.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p>fyi, I&#39;ve just updated Hearn report with the new input file and uploaded it<br><a href=\"https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/test_cases/0_Independent_test_suites/Hearn_Problems/report.htm\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/test_cases/0_Independent_test_suites/Hearn_Problems/report.htm</a></p><p>this has the new <span data-link-type=\"issue\" data-issue=\"281\" class=\"issue\">#281</span> in it.</p>",
  "id": "5b3ff4d03d8f71623d631e4b",
  "issues": [
   {
    "number": "281"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-06T23:01:36.055Z",
  "text": "fyi, I've just updated Hearn report with the new input file and uploaded it\nhttps://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/test_cases/0_Independent_test_suites/Hearn_Problems/report.htm\n\nthis has the new #281 in it.",
  "unread": false,
  "urls": [
   {
    "url": "https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/test_cases/0_Independent_test_suites/Hearn_Problems/report.htm"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Congratulations!  I will work on getting Rubi to integrate more of the problems.",
  "id": "5b3ff9a23c5abf52b6428da6",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-06T23:22:10.383Z",
  "text": "@nasser1 Congratulations!  I will work on getting Rubi to integrate more of the problems.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-08T23:10:23.234Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> It took a while, but the next version of Rubi will be able to integrate Hearn <span data-link-type=\"issue\" data-issue=\"274\" class=\"issue\">#274</span>:</p><pre><code class=\"mma\">Int[<span class=\"number\">2</span>*x*<span class=\"keyword\">E</span>^(x^<span class=\"number\">2</span>)*<span class=\"keyword\">Log</span>[x] +\n  <span class=\"keyword\">E</span>^(x^<span class=\"number\">2</span>)/x + \n  (<span class=\"keyword\">Log</span>[x]-<span class=\"number\">2</span>)/(<span class=\"keyword\">Log</span>[x]^<span class=\"number\">2</span>+x)^<span class=\"number\">2</span> + \n  (<span class=\"number\">2</span>/x*<span class=\"keyword\">Log</span>[x]+<span class=\"number\">1</span>/x+<span class=\"number\">1</span>)/(<span class=\"keyword\">Log</span>[x]^<span class=\"number\">2</span>+x), x]</code></pre><p>to get the optimal antiderivative</p><pre><code class=\"mma\"><span class=\"keyword\">E</span>^x^<span class=\"number\">2</span>*<span class=\"keyword\">Log</span>[x] - <span class=\"keyword\">Log</span>[x]/(x + <span class=\"keyword\">Log</span>[x]^<span class=\"number\">2</span>) + <span class=\"keyword\">Log</span>[x + <span class=\"keyword\">Log</span>[x]^<span class=\"number\">2</span>]</code></pre>",
  "id": "5b42989589db5e701cac75a5",
  "issues": [
   {
    "number": "274"
   }
  ],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-08T23:04:53.097Z",
  "text": "@nasser1 It took a while, but the next version of Rubi will be able to integrate Hearn #274:\n```mma\nInt[2*x*E^(x^2)*Log[x] +\n  E^(x^2)/x + \n  (Log[x]-2)/(Log[x]^2+x)^2 + \n  (2/x*Log[x]+1/x+1)/(Log[x]^2+x), x]\n```\nto get the optimal antiderivative\n```mma\nE^x^2*Log[x] - Log[x]/(x + Log[x]^2) + Log[x + Log[x]^2]\n```",
  "unread": false,
  "urls": [],
  "v": 6
 },
 {
  "editedAt": "2018-07-08T23:12:48.396Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "I am especially happy Rubi will be able to get this problem since according to Tony Hearn&#39;s comment, it &quot;appeared in Risch&#39;s 1968 &lt;seminal&gt; paper.&quot;  Although looking relatively easy, it required deriving 10 new log integration rules.  In addition to this problem,  these rules can integrate a whole new class of integrands of the form:<pre><code class=\"mma\">(d*x^m + e*<span class=\"keyword\">Log</span>[c*x^n]^(q - <span class=\"number\">1</span>)) * (a*x^m + b*<span class=\"keyword\">Log</span>[c*x^n]^q)^p / x</code></pre>",
  "id": "5b4298a29b82c6701bad0f5e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-08T23:05:06.034Z",
  "text": "I am especially happy Rubi will be able to get this problem since according to Tony Hearn's comment, it \"appeared in Risch's 1968 <seminal> paper.\"  Although looking relatively easy, it required deriving 10 new log integration rules.  In addition to this problem,  these rules can integrate a whole new class of integrands of the form:\n```mma\n(d*x^m + e*Log[c*x^n]^(q - 1)) * (a*x^m + b*Log[c*x^n]^q)^p / x\n```",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Is the above post the sort of thing that should be posted on the Rubi Wiki?",
  "id": "5b4298afbd92d807829e97a6",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-08T23:05:19.531Z",
  "text": "@halirutan Is the above post the sort of thing that should be posted on the Rubi Wiki?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Great job!  I verify</p><pre><code><span class=\"keyword\">In</span>[<span class=\"number\">13</span>]:= integrand=<span class=\"number\">2</span>*x*<span class=\"keyword\">E</span>^(x^<span class=\"number\">2</span>)*<span class=\"keyword\">Log</span>[x]+<span class=\"keyword\">E</span>^(x^<span class=\"number\">2</span>)/x+(<span class=\"keyword\">Log</span>[x]-<span class=\"number\">2</span>)/(<span class=\"keyword\">Log</span>[x]^<span class=\"number\">2</span>+x)^<span class=\"number\">2</span>+ \n(<span class=\"number\">2</span>/x*<span class=\"keyword\">Log</span>[x]+<span class=\"number\">1</span>/x+<span class=\"number\">1</span>)/(<span class=\"keyword\">Log</span>[x]^<span class=\"number\">2</span>+x);\n<span class=\"keyword\">In</span>[<span class=\"number\">14</span>]:= anti=<span class=\"keyword\">E</span>^x^<span class=\"number\">2</span>*<span class=\"keyword\">Log</span>[x]-<span class=\"keyword\">Log</span>[x]/(x+<span class=\"keyword\">Log</span>[x]^<span class=\"number\">2</span>)+<span class=\"keyword\">Log</span>[x+<span class=\"keyword\">Log</span>[x]^<span class=\"number\">2</span>];\n<span class=\"keyword\">In</span>[<span class=\"number\">15</span>]:= <span class=\"keyword\">Assuming</span>[x&gt;<span class=\"number\">0</span>,<span class=\"keyword\">Simplify</span>[(<span class=\"keyword\">D</span>[anti,x]-integrand)]]\n<span class=\"keyword\">Out</span>[<span class=\"number\">15</span>]= <span class=\"number\">0</span></code></pre><p>My verification failed on it at first, since x&gt;0 was needed. I do not use assumptions in verification, so this might give a warning that it failed to verify. I am not sure how to handle this now. May be I should try  to add another logic, so if something failed to verify, to try with x&gt;0 as well. But this might not be a good idea. Not sure.</p>",
  "id": "5b42a9ed63042f2df3612274",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-09T00:18:53.144Z",
  "text": "@AlbertRich Great job!  I verify\n\n    In[13]:= integrand=2*x*E^(x^2)*Log[x]+E^(x^2)/x+(Log[x]-2)/(Log[x]^2+x)^2+ \n    (2/x*Log[x]+1/x+1)/(Log[x]^2+x);\n    In[14]:= anti=E^x^2*Log[x]-Log[x]/(x+Log[x]^2)+Log[x+Log[x]^2];\n    In[15]:= Assuming[x>0,Simplify[(D[anti,x]-integrand)]]\n    Out[15]= 0\n\nMy verification failed on it at first, since x>0 was needed. I do not use assumptions in verification, so this might give a warning that it failed to verify. I am not sure how to handle this now. May be I should try  to add another logic, so if something failed to verify, to try with x>0 as well. But this might not be a good idea. Not sure.\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-09T00:41:57.987Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "Never mind the above.  Since verification also compare the anti produced with the optimal, when the above check fails, it will still verify OK in the next phase. I only checked first phase before. So no need to use assumptions. So all OK. It will verify OK with no warning. I used the optimal as it exist now in the Hearn file I have.<pre><code><span class=\"keyword\">In</span>[<span class=\"number\">21</span>]:= optimnal=<span class=\"keyword\">E</span>^x^<span class=\"number\">2</span>*<span class=\"keyword\">Log</span>[x]-<span class=\"keyword\">Log</span>[x]/(x+<span class=\"keyword\">Log</span>[x]^<span class=\"number\">2</span>)+<span class=\"keyword\">Log</span>[x+<span class=\"keyword\">Log</span>[x]^<span class=\"number\">2</span>];\nanti=<span class=\"keyword\">E</span>^x^<span class=\"number\">2</span>*<span class=\"keyword\">Log</span>[x]-<span class=\"keyword\">Log</span>[x]/(x+<span class=\"keyword\">Log</span>[x]^<span class=\"number\">2</span>)+<span class=\"keyword\">Log</span>[x+<span class=\"keyword\">Log</span>[x]^<span class=\"number\">2</span>];\nanti-optimnal\n<span class=\"keyword\">Out</span>[<span class=\"number\">23</span>]= <span class=\"number\">0</span></code></pre>",
  "id": "5b42aeda7b811a6d63da8b71",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-09T00:39:54.193Z",
  "text": "Never mind the above.  Since verification also compare the anti produced with the optimal, when the above check fails, it will still verify OK in the next phase. I only checked first phase before. So no need to use assumptions. So all OK. It will verify OK with no warning. I used the optimal as it exist now in the Hearn file I have.\n\n    In[21]:= optimnal=E^x^2*Log[x]-Log[x]/(x+Log[x]^2)+Log[x+Log[x]^2];\n    anti=E^x^2*Log[x]-Log[x]/(x+Log[x]^2)+Log[x+Log[x]^2];\n    anti-optimnal\n    Out[23]= 0",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> For me, when integrand and anti are assigned as above, Mathematica 11.3 easily evaluates</p><pre><code class=\"mma\"><span class=\"keyword\">Simplify</span>[(<span class=\"keyword\">D</span>[anti,x]-integrand)]</code></pre><p>to 0.  I don&#39;t understand why you were unable to get 0???</p>",
  "id": "5b42c0d87e23133ecb3c8447",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-09T01:56:40.058Z",
  "text": "@nasser1 For me, when integrand and anti are assigned as above, Mathematica 11.3 easily evaluates\n```mma\nSimplify[(D[anti,x]-integrand)]\n```\nto 0.  I don't understand why you were unable to get 0???\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "No, do <em>not</em> start having the verification routine make assumptions.  All the antiderivatives in the test suite are valid for all real <em>and</em> complex values of their integration variables.",
  "id": "5b42c15760c3870783689b3f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-09T01:58:47.926Z",
  "text": "No, do *not* start having the verification routine make assumptions.  All the antiderivatives in the test suite are valid for all real *and* complex values of their integration variables.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-09T02:07:32.842Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  I checked again with clean kernel and now it worked. I must have made some silly error. No, I do not use assumptions anywhere. Verification compare first with the optimal anti (if given), and if that fails, then it tries D[anti,x]-integrand approach, with simplifications as needed if this fails. I avoid using FullSimplify, since that will almost always take too long time. I will post the verification function, if you like. It just goes through different tries until it gets a match or it times out. (3 minute time out)",
  "id": "5b42c2fa7b811a6d63daa3d5",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-09T02:05:46.574Z",
  "text": "@AlbertRich  I checked again with clean kernel and now it worked. I must have made some silly error. No, I do not use assumptions anywhere. Verification compare first with the optimal anti (if given), and if that fails, then it tries D[anti,x]-integrand approach, with simplifications as needed if this fails. I avoid using FullSimplify, since that will almost always take too long time. I will post the verification function, if you like. It just goes through different tries until it gets a match or it times out. (3 minute time out)",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Your verification process sounds good.  If after trying</p><pre><code class=\"mma\"><span class=\"keyword\">Simplify</span>[<span class=\"keyword\">D</span>[anti,x] - integrand]</code></pre><p>and it fails to equal 0 or takes too long, you might try</p><pre><code class=\"mma\"><span class=\"keyword\">Simplify</span>[<span class=\"keyword\">Simplify</span>[<span class=\"keyword\">D</span>[anti,x]] - integrand]</code></pre><p>And if all else fails, you might have to replace the Simplify above with FullSimplify.</p>",
  "id": "5b42e5e233b0282df40b2b78",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-09T04:34:42.748Z",
  "text": "@nasser1 Your verification process sounds good.  If after trying\n```mma\nSimplify[D[anti,x] - integrand]\n```\nand it fails to equal 0 or takes too long, you might try\n```mma\nSimplify[Simplify[D[anti,x]] - integrand]\n```\nAnd if all else fails, you might have to replace the Simplify above with FullSimplify.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-09T04:42:02.541Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  Here is the function. I do not know to post code here using markecode. I always  have to shift each line manually to put spaces. </p><p>`(<em>this function to verify anti derivative. This is when an optimal is<br>known</em>)<br>verifyAntiDerivative[anti<em>, integrand</em>, optimal<em>, x</em>] :=<br>  Module[{tmp},</p><p>   tmp = anti - optimal;<br>   If[tmp === 0, Return[1, Module]];<br>   If[Simplify[tmp] === 0, Return[1, Module]];</p><p>   tmp = Simplify[anti] - optimal;<br>   If[tmp === 0, Return[1, Module]];<br>   If[Simplify[tmp] === 0, Return[1, Module]];</p><p>   tmp = D[anti, x] - integrand;<br>   If[tmp === 0, Return[1, Module]];<br>   If[Simplify[tmp] === 0, Return[1, Module]];</p><p>   tmp = D[Simplify[anti], x] - integrand;<br>   If[tmp === 0, Return[1, Module]];<br>   If[Simplify[tmp] === 0, Return[1, Module]];</p><p>   tmp = Simplify[D[anti, x]] - integrand;<br>   If[tmp === 0, Return[1, Module]];<br>   If[Simplify[tmp] === 0, Return[1, Module]];</p><p>   0<br>   ];`</p><p>well, I put a ` there,  but it is still not formatted as code! I gave up. Mathematica forum is much easier to do this in.</p>",
  "id": "5b42e6e49b82c6701bad6c4e",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-09T04:39:00.495Z",
  "text": "@AlbertRich  Here is the function. I do not know to post code here using markecode. I always  have to shift each line manually to put spaces. \n\n`(*this function to verify anti derivative. This is when an optimal is \nknown*)\nverifyAntiDerivative[anti_, integrand_, optimal_, x_] := \n  Module[{tmp},\n   \n   tmp = anti - optimal;\n   If[tmp === 0, Return[1, Module]];\n   If[Simplify[tmp] === 0, Return[1, Module]];\n   \n   tmp = Simplify[anti] - optimal;\n   If[tmp === 0, Return[1, Module]];\n   If[Simplify[tmp] === 0, Return[1, Module]];\n   \n   tmp = D[anti, x] - integrand;\n   If[tmp === 0, Return[1, Module]];\n   If[Simplify[tmp] === 0, Return[1, Module]];\n   \n   tmp = D[Simplify[anti], x] - integrand;\n   If[tmp === 0, Return[1, Module]];\n   If[Simplify[tmp] === 0, Return[1, Module]];\n   \n   tmp = Simplify[D[anti, x]] - integrand;\n   If[tmp === 0, Return[1, Module]];\n   If[Simplify[tmp] === 0, Return[1, Module]];\n   \n   0\n   ];`\n\nwell, I put a ` there,  but it is still not formatted as code! I gave up. Mathematica forum is much easier to do this in.\n",
  "unread": false,
  "urls": [],
  "v": 6
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Clearly you are trying all possible combinations.  That&#39;s good.<br>My only suggestions would be that you could save a little code by replacing the 5 occurrences of</p><pre><code class=\"mma\"><span class=\"keyword\">If</span>[tmp === <span class=\"number\">0</span>, <span class=\"keyword\">Return</span>[<span class=\"number\">1</span>, <span class=\"keyword\">Module</span>]];\n<span class=\"keyword\">If</span>[<span class=\"keyword\">Simplify</span>[tmp] === <span class=\"number\">0</span>, <span class=\"keyword\">Return</span>[<span class=\"number\">1</span>, <span class=\"keyword\">Module</span>]];</code></pre><p>above with</p><pre><code class=\"mma\"><span class=\"keyword\">If</span>[<span class=\"keyword\">Simplify</span>[tmp] === <span class=\"number\">0</span>, <span class=\"keyword\">Return</span>[<span class=\"number\">1</span>, <span class=\"keyword\">Module</span>]];</code></pre><p>since if it is the case that tmp===0, then Simplify[tmp] is essentially instantaneous.</p>",
  "id": "5b42e9129b82c6701bad6e3b",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-09T04:48:18.112Z",
  "text": "@nasser1 Clearly you are trying all possible combinations.  That's good.\nMy only suggestions would be that you could save a little code by replacing the 5 occurrences of\n```mma\nIf[tmp === 0, Return[1, Module]];\nIf[Simplify[tmp] === 0, Return[1, Module]];\n```\nabove with\n```mma\nIf[Simplify[tmp] === 0, Return[1, Module]];\n```\nsince if it is the case that tmp===0, then Simplify[tmp] is essentially instantaneous.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-09T04:56:54.379Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Also instead of checking that the anti - optimal equals 0, just check that it is a number using NumberQ, since antiderivatives can differ by a constant.  This may avoid the need to go onto the differentiation tests.  Note that NumberQ[0] equals True.",
  "id": "5b42eace7b811a6d63dada4d",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-09T04:55:42.873Z",
  "text": "@nasser1 Also instead of checking that the anti - optimal equals 0, just check that it is a number using NumberQ, since antiderivatives can differ by a constant.  This may avoid the need to go onto the differentiation tests.  Note that NumberQ[0] equals True.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-07-09T05:10:16.329Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Or even better, just see if FreeQ[Simplify[tmp], x] where x is the integration variable.",
  "id": "5b42edb789db5e701caceb04",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-09T05:08:07.733Z",
  "text": "Or even better, just see if FreeQ[Simplify[tmp], x] where x is the integration variable.",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "editedAt": "2018-07-09T05:21:58.755Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  Added your suggestion, now it looks like this</p><pre><code>verifyAntiDerivative[anti_, integrand_, optimal_, x_] := <span class=\"keyword\">Module</span>[<span class=\"list\">{tmp}</span>,\n\n    tmp = anti - optimal;\n    <span class=\"keyword\">If</span>[ <span class=\"keyword\">NumberQ</span>[<span class=\"keyword\">Simplify</span>[tmp]], <span class=\"keyword\">Return</span>[<span class=\"number\">1</span>, <span class=\"keyword\">Module</span>]];\n\n    tmp = <span class=\"keyword\">Simplify</span>[anti] - optimal;\n    <span class=\"keyword\">If</span>[<span class=\"keyword\">NumberQ</span>[<span class=\"keyword\">Simplify</span>[tmp]], <span class=\"keyword\">Return</span>[<span class=\"number\">1</span>, <span class=\"keyword\">Module</span>]];\n\n    tmp = <span class=\"keyword\">D</span>[anti, x] - integrand;\n    <span class=\"keyword\">If</span>[<span class=\"keyword\">NumberQ</span>[<span class=\"keyword\">Simplify</span>[tmp]], <span class=\"keyword\">Return</span>[<span class=\"number\">1</span>, <span class=\"keyword\">Module</span>]];\n\n    tmp = <span class=\"keyword\">D</span>[<span class=\"keyword\">Simplify</span>[anti], x] - integrand;\n    <span class=\"keyword\">If</span>[<span class=\"keyword\">NumberQ</span>[<span class=\"keyword\">Simplify</span>[tmp]], <span class=\"keyword\">Return</span>[<span class=\"number\">1</span>, <span class=\"keyword\">Module</span>]];\n\n   tmp = <span class=\"keyword\">Simplify</span>[<span class=\"keyword\">D</span>[anti, x]] - integrand;\n   <span class=\"keyword\">If</span>[<span class=\"keyword\">NumberQ</span>[<span class=\"keyword\">Simplify</span>[tmp]], <span class=\"keyword\">Return</span>[<span class=\"number\">1</span>, <span class=\"keyword\">Module</span>]];\n\n    <span class=\"number\">0</span>\n  ];</code></pre><p>Are you saying <code>FreeQ[Simplify[tmp], x]</code> would be better than <code>If[NumberQ[Simplify[tmp]]</code> check? Can change it. For the case where there is no optimal anti, same function exist, but without the first two checks ofcourse.</p>",
  "id": "5b42f0819b82c6701bad7aeb",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-09T05:20:00.983Z",
  "text": "@AlbertRich  Added your suggestion, now it looks like this\n\n    verifyAntiDerivative[anti_, integrand_, optimal_, x_] := Module[{tmp},\n   \n        tmp = anti - optimal;\n        If[ NumberQ[Simplify[tmp]], Return[1, Module]];\n   \n        tmp = Simplify[anti] - optimal;\n        If[NumberQ[Simplify[tmp]], Return[1, Module]];\n   \n        tmp = D[anti, x] - integrand;\n        If[NumberQ[Simplify[tmp]], Return[1, Module]];\n    \n        tmp = D[Simplify[anti], x] - integrand;\n        If[NumberQ[Simplify[tmp]], Return[1, Module]];\n   \n       tmp = Simplify[D[anti, x]] - integrand;\n       If[NumberQ[Simplify[tmp]], Return[1, Module]];\n   \n        0\n      ];\n\nAre you saying `FreeQ[Simplify[tmp], x]` would be better than `If[NumberQ[Simplify[tmp]]` check? Can change it. For the case where there is no optimal anti, same function exist, but without the first two checks ofcourse.",
  "unread": false,
  "urls": [],
  "v": 5
 },
 {
  "editedAt": "2018-07-09T06:39:21.179Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Glad you found my suggestions of use.  Yes, FreeQ[Simplify[tmp], x] is better than NumberQ[Simplify[tmp]] because a valid anti can differ from the optimal by a number <em>or</em> an expression independent of x. ",
  "id": "5b4302c9bd92d807829f336e",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-09T06:38:01.516Z",
  "text": "@nasser1 Glad you found my suggestions of use.  Yes, FreeQ[Simplify[tmp], x] is better than NumberQ[Simplify[tmp]] because a valid anti can differ from the optimal by a number *or* an expression independent of x. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "There is a small problem with input file <code>1_Algebraic_functions/1.3_Miscellaneous/1.3.2 Algebraic functions.txt</code> , problems <span data-link-type=\"issue\" data-issue=\"750\" class=\"issue\">#750</span> up to <span data-link-type=\"issue\" data-issue=\"769\" class=\"issue\">#769</span> use function <code>f</code> but also in the same file, it uses <code>f</code> as parameter in other integrals.  This does not work for other CAS systems. Because one has to defined symbol <code>f</code> and then can&#39;t define a function <code>f</code> as well using same symbol.  So I had to make the functions upper case <code>F</code> on my end to process this this. So it will be better, if an input file is to include a function name, to make it not conflict with any other variable name in the same file. i.e. can&#39;t have <code>f</code> as parameter or variable, and also <code>f(x)</code> for a function name in same input file. sagemath and sympy do not like this.",
  "id": "5b4462183d8f71623d6b0baf",
  "issues": [
   {
    "number": "750"
   },
   {
    "number": "769"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-10T07:36:56.014Z",
  "text": "There is a small problem with input file `1_Algebraic_functions/1.3_Miscellaneous/1.3.2 Algebraic functions.txt` , problems #750 up to #769 use function `f` but also in the same file, it uses `f` as parameter in other integrals.  This does not work for other CAS systems. Because one has to defined symbol `f` and then can't define a function `f` as well using same symbol.  So I had to make the functions upper case `F` on my end to process this this. So it will be better, if an input file is to include a function name, to make it not conflict with any other variable name in the same file. i.e. can't have `f` as parameter or variable, and also `f(x)` for a function name in same input file. sagemath and sympy do not like this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-10T07:39:57.007Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p>i.e. currently I do</p><pre><code><span class=\"tag\">a</span>,<span class=\"tag\">b</span>,c,d,e,f,g,m,n,<span class=\"tag\">p</span>,<span class=\"tag\">q</span>,r,s,t,x= <span class=\"function\"><span class=\"title\">symbols</span><span class=\"params\">(<span class=\"string\">'a b c d e f g m n p q r s t x'</span>)</span></span>\nF = <span class=\"function\"><span class=\"title\">Function</span><span class=\"params\">(<span class=\"string\">'F'</span>)</span></span></code></pre><p>and changed those integrals to use <code>F</code> instead of <code>f</code> to work around this for now. One can&#39;t write</p><pre><code> <span class=\"tag\">a</span>,<span class=\"tag\">b</span>,c,d,e,f,g,m,n,<span class=\"tag\">p</span>,<span class=\"tag\">q</span>,r,s,t,x= <span class=\"function\"><span class=\"title\">symbols</span><span class=\"params\">(<span class=\"string\">'a b c d e f g m n p q r s t x'</span>)</span></span>\n f = <span class=\"function\"><span class=\"title\">Function</span><span class=\"params\">(<span class=\"string\">'f'</span>)</span></span></code></pre><p>since <code>f</code> was already declared a symbol above it.</p>",
  "id": "5b4462ab7b811a6d63de68cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-10T07:39:23.457Z",
  "text": "i.e. currently I do\n\n    a,b,c,d,e,f,g,m,n,p,q,r,s,t,x= symbols('a b c d e f g m n p q r s t x')\n    F = Function('F')\n\nand changed those integrals to use `F` instead of `f` to work around this for now. One can't write\n\n     a,b,c,d,e,f,g,m,n,p,q,r,s,t,x= symbols('a b c d e f g m n p q r s t x')\n     f = Function('f')\n\nsince `f` was already declared a symbol above it.\n\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> I found and changed just 6 occurrences of f(expn) to F(expn) in the file.  Not 20 as you indicate above???",
  "id": "5b44655860c38707836c7422",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-10T07:50:48.200Z",
  "text": "@nasser1 I found and changed just 6 occurrences of f(expn) to F(expn) in the file.  Not 20 as you indicate above???",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "I will email you the updated Mathematica and Maple files.",
  "id": "5b4465eca99e1e52b724df21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-10T07:53:16.227Z",
  "text": "I will email you the updated Mathematica and Maple files.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-10T08:05:19.829Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  that was typo sorry, from around  <span data-link-type=\"issue\" data-issue=\"760\" class=\"issue\">#760</span> to <span data-link-type=\"issue\" data-issue=\"769\" class=\"issue\">#769</span>. I think may be 9 or 10 of them. Was easy to change and fix. you are right, some of them were allready <code>F</code> and some were <code>f</code>. So may be 6 in total that needed change from <code>f</code> to <code>F</code>.",
  "id": "5b44683d33b0282df40edcf6",
  "issues": [
   {
    "number": "760"
   },
   {
    "number": "769"
   }
  ],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-10T08:03:09.259Z",
  "text": "@AlbertRich  that was typo sorry, from around  #760 to #769. I think may be 9 or 10 of them. Was easy to change and fix. you are right, some of them were allready `F` and some were `f`. So may be 6 in total that needed change from `f` to `F`.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> The updated 1.3.2 test files are traveling through the ether.",
  "id": "5b446b3370efc60660bb8d78",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-10T08:15:47.657Z",
  "text": "@nasser1 The updated 1.3.2 test files are traveling through the ether.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  thanks. I got your updated file.",
  "id": "5b446b557b811a6d63de7d65",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-10T08:16:21.256Z",
  "text": "@AlbertRich  thanks. I got your updated file.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-10T08:19:20.731Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Nasser1\" class=\"mention\">@Nasser1</span> Ahhh... The miracles of the Internet.",
  "id": "5b446b713c5abf52b64a7d5b",
  "issues": [],
  "mentions": [
   {
    "screenName": "Nasser1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-10T08:16:49.215Z",
  "text": "@Nasser1 Ahhh... The miracles of the Internet.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-07-10T08:22:20.373Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "There may be other files with f(x).  Let me know.  Nice to make the test suite as generic as possible.",
  "id": "5b446c88bd92d80782a2aec8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-10T08:21:28.191Z",
  "text": "There may be other files with f(x).  Let me know.  Nice to make the test suite as generic as possible.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  I found few more such issues in file <span data-link-type=\"issue\" data-issue=\"54\" class=\"issue\">#54</span>  <code>3_Logarithms/3.1_u-a+b_log-c_x^n-^p</code> integrals <span data-link-type=\"issue\" data-issue=\"745\" class=\"issue\">#745</span> to <span data-link-type=\"issue\" data-issue=\"748\" class=\"issue\">#748</span> all use <code>f(x)</code> but there is already variable symbol <code>f</code>, and there is already symbol <code>F</code>. So to make the other CAS&#39;s happy, I changed <code>f(x)</code> to <code>F0(x)</code> since <code>F0</code> is not used. I did not know what other name to use for now so picked <code>F0</code>. ",
  "id": "5b469849641ecc065f99c9d0",
  "issues": [
   {
    "number": "54"
   },
   {
    "number": "745"
   },
   {
    "number": "748"
   }
  ],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-11T23:52:41.797Z",
  "text": "@AlbertRich  I found few more such issues in file #54  `3_Logarithms/3.1_u-a+b_log-c_x^n-^p` integrals #745 to #748 all use `f(x)` but there is already variable symbol `f`, and there is already symbol `F`. So to make the other CAS's happy, I changed `f(x)` to `F0(x)` since `F0` is not used. I did not know what other name to use for now so picked `F0`. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> I can&#39;t figure out which problems your are referring to.  Please send me the integrand for <span data-link-type=\"issue\" data-issue=\"745\" class=\"issue\">#745</span>.",
  "id": "5b46aed5641ecc065f99f73b",
  "issues": [
   {
    "number": "745"
   }
  ],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-12T01:28:53.837Z",
  "text": "@nasser1 I can't figure out which problems your are referring to.  Please send me the integrand for #745.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  sorry, too many files, I was looking at different problem. Ok. Here is the correct file. It is file <span data-link-type=\"issue\" data-issue=\"52\" class=\"issue\">#52</span>, which is <code>2 Exponentials/2.3 Exponential functions</code> the problems are </p><pre><code>   <span class=\"function\"><span class=\"title\">f</span><span class=\"params\">(x)</span></span>/(x+<span class=\"function\"><span class=\"title\">f</span><span class=\"params\">(x)</span></span>)\n  <span class=\"function\"><span class=\"title\">f</span><span class=\"params\">(x)</span></span>/(x^<span class=\"number\">2</span>+<span class=\"function\"><span class=\"title\">f</span><span class=\"params\">(x)</span></span>)\n  <span class=\"function\"><span class=\"title\">f</span><span class=\"params\">(x)</span></span>/(x+<span class=\"function\"><span class=\"title\">f</span><span class=\"params\">(x)</span></span>)^<span class=\"number\">2</span>\n  <span class=\"function\"><span class=\"title\">f</span><span class=\"params\">(x)</span></span>/(x^<span class=\"number\">2</span>+<span class=\"function\"><span class=\"title\">f</span><span class=\"params\">(x)</span></span>)^<span class=\"number\">2</span></code></pre><p>starting at around <span data-link-type=\"issue\" data-issue=\"754\" class=\"issue\">#754</span>.  Sorry about giving you wrong file. </p>",
  "id": "5b46b07fba5f154b3b960047",
  "issues": [
   {
    "number": "52"
   },
   {
    "number": "754"
   }
  ],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-12T01:35:59.263Z",
  "text": "@AlbertRich  sorry, too many files, I was looking at different problem. Ok. Here is the correct file. It is file #52, which is `2 Exponentials/2.3 Exponential functions` the problems are \n\n       f(x)/(x+f(x))\n      f(x)/(x^2+f(x))\n      f(x)/(x+f(x))^2\n      f(x)/(x^2+f(x))^2\n\nstarting at around #754.  Sorry about giving you wrong file. \n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "I changed these to <pre><code> <span class=\"function\"><span class=\"title\">F0</span><span class=\"params\">(x)</span></span>/(x+<span class=\"function\"><span class=\"title\">F0</span><span class=\"params\">(x)</span></span>)\n <span class=\"function\"><span class=\"title\">F0</span><span class=\"params\">(x)</span></span>/(x^<span class=\"number\">2</span>+<span class=\"function\"><span class=\"title\">F0</span><span class=\"params\">(x)</span></span>)\n <span class=\"function\"><span class=\"title\">F0</span><span class=\"params\">(x)</span></span>/(x+<span class=\"function\"><span class=\"title\">F0</span><span class=\"params\">(x)</span></span>)^<span class=\"number\">2</span>\n <span class=\"function\"><span class=\"title\">F0</span><span class=\"params\">(x)</span></span>/(x^<span class=\"number\">2</span>+<span class=\"function\"><span class=\"title\">F0</span><span class=\"params\">(x)</span></span>)^<span class=\"number\">2</span></code></pre>",
  "id": "5b46b0c11c0f906b1449e2f6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-12T01:37:05.142Z",
  "text": "I changed these to \n\n     F0(x)/(x+F0(x))\n     F0(x)/(x^2+F0(x))\n     F0(x)/(x+F0(x))^2\n     F0(x)/(x^2+F0(x))^2",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Ok, I also changed f(x) to F0(x) in my files.",
  "id": "5b46b21a66c1e833a9df7c53",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-12T01:42:50.098Z",
  "text": "@nasser1 Ok, I also changed f(x) to F0(x) in my files.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Do you know how to work with a git repository? I get the feeling that it is tedious and errorprone how you do the changes. At some point we need to set-up a repo for the test-suite anyway.",
  "id": "5b477b53b6b6632c7f1b2882",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-12T16:01:23.623Z",
  "text": "@nasser1 Do you know how to work with a git repository? I get the feeling that it is tedious and errorprone how you do the changes. At some point we need to set-up a repo for the test-suite anyway.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Can you say something about this integral? It&#39;s part of a question on stackexchange and there seems to be no antiderivate",
  "id": "5b479ffcdc8219113de88a59",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-07-12T18:37:48.170Z",
  "text": "@AlbertRich Can you say something about this integral? It's part of a question on stackexchange and there seems to be no antiderivate",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\">Int[<span class=\"keyword\">Sqrt</span>[-<span class=\"number\">1</span> + <span class=\"keyword\">Sqrt</span>[<span class=\"number\">1</span> + x^<span class=\"number\">2</span>]]*<span class=\"keyword\">Sin</span>[x], x]</code></pre>",
  "id": "5b47a0026008b5196d58e603",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-12T18:37:54.986Z",
  "text": "```mma\nInt[Sqrt[-1 + Sqrt[1 + x^2]]*Sin[x], x]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "The full question is about computing",
  "id": "5b47a04deb9a487f3853b722",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-12T18:39:09.204Z",
  "text": "The full question is about computing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\"><span class=\"keyword\">Integrate</span>[(<span class=\"keyword\">Sqrt</span>[x] - <span class=\"keyword\">Sqrt</span>[<span class=\"keyword\">Sqrt</span>[<span class=\"number\">1</span> + x^<span class=\"number\">2</span>] - <span class=\"number\">1</span>]) <span class=\"keyword\">Sin</span>[x], <span class=\"list\">{x, 0, Infinity}</span>]</code></pre>",
  "id": "5b47a0506008b5196d58e610",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-12T18:39:12.715Z",
  "text": "```mma\nIntegrate[(Sqrt[x] - Sqrt[Sqrt[1 + x^2] - 1]) Sin[x], {x, 0, Infinity}]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "which has an analytic solution as shown <a href=\"https://mathematica.stackexchange.com/questions/177205/symbolic-integral-not-computed\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a>.",
  "id": "5b47a06d5f3a92062a0de63a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-12T18:39:41.371Z",
  "text": "which has an analytic solution as shown [here](https://mathematica.stackexchange.com/questions/177205/symbolic-integral-not-computed).",
  "unread": false,
  "urls": [
   {
    "url": "https://mathematica.stackexchange.com/questions/177205/symbolic-integral-not-computed"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  <span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> </p><blockquote>\n<p>At some point we need to set-up a repo for the test-suite anyway.</p></blockquote>\n<p>I am all in favor of having the integration test suite available on Rubi&#39;s GitHub site.  Also excerpted test results for the various systems could be made available.</p>",
  "id": "5b47aea373026160f59ad345",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   },
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-12T19:40:19.471Z",
  "text": "@halirutan  @nasser1 \n> At some point we need to set-up a repo for the test-suite anyway.\n\nI am all in favor of having the integration test suite available on Rubi's GitHub site.  Also excerpted test results for the various systems could be made available.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> </p><pre><code class=\"mma\"><span class=\"keyword\">Sqrt</span>[-<span class=\"number\">1</span> + <span class=\"keyword\">Sqrt</span>[<span class=\"number\">1</span> + x^<span class=\"number\">2</span>]]*<span class=\"keyword\">Sin</span>[x]</code></pre><p>is a good example of an expression that does not have a closed-form antiderivative, but its integral from 0 to infinity is expressible in closed-form.  This common occurrence is why I would very much like to see Rubi extended with definite integration rules... </p>",
  "id": "5b47bb9bba5f154b3b991c2e",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-12T20:35:39.631Z",
  "text": "@halirutan \n```mma\nSqrt[-1 + Sqrt[1 + x^2]]*Sin[x]\n```\nis a good example of an expression that does not have a closed-form antiderivative, but its integral from 0 to infinity is expressible in closed-form.  This common occurrence is why I would very much like to see Rubi extended with definite integration rules... ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  I do not know anything about git and I really do not want any one to see my ugly code in the scripts I wrote and no one will know how to use them any way as they are not fully automated and need baby sitting to use them and fix any problems that come up.",
  "id": "5b47eee7641ecc065f9db4d3",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-13T00:14:31.720Z",
  "text": "@halirutan  I do not know anything about git and I really do not want any one to see my ugly code in the scripts I wrote and no one will know how to use them any way as they are not fully automated and need baby sitting to use them and fix any problems that come up.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> My main concern is that we should put the test problems online and they are of not much use if we don&#39;t provide the algorithms that show how we evaluate the quality of the integrators.",
  "id": "5b4a02b05f3a92062a0deabf",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-14T14:03:28.317Z",
  "text": "@nasser1 My main concern is that we should put the test problems online and they are of not much use if we don't provide the algorithms that show how we evaluate the quality of the integrators.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> In the meantime, what happened to the idea of just having the GitHub Rubi website link to<ul>\n<li><a href=\"http://www.apmaths.uwo.ca/~arich/IntegrationProblems/AxiomSyntaxFiles/AxiomSyntaxFiles.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Axiom integration test suite</a></li>\n<li><a href=\"http://www.apmaths.uwo.ca/~arich/IntegrationProblems/MapleSyntaxFiles/MapleSyntaxFiles.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Maple integration test suite</a></li>\n<li><a href=\"http://www.apmaths.uwo.ca/~arich/IntegrationProblems/MathematicaSyntaxFiles/MathematicaSyntaxFiles.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Mathematica integration test suite</a></li>\n<li><a href=\"http://www.apmaths.uwo.ca/~arich/IntegrationProblems/MaximaSyntaxFiles/MaximaSyntaxFiles.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Maxima integation test suite</a></li>\n</ul>\n",
  "id": "5b4a5419d1428e5aefe879ff",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-14T19:50:49.372Z",
  "text": "@halirutan In the meantime, what happened to the idea of just having the GitHub Rubi website link to\n* [Axiom integration test suite](http://www.apmaths.uwo.ca/~arich/IntegrationProblems/AxiomSyntaxFiles/AxiomSyntaxFiles.html)\n* [Maple integration test suite](http://www.apmaths.uwo.ca/~arich/IntegrationProblems/MapleSyntaxFiles/MapleSyntaxFiles.html)\n* [Mathematica integration test suite](http://www.apmaths.uwo.ca/~arich/IntegrationProblems/MathematicaSyntaxFiles/MathematicaSyntaxFiles.html)\n* [Maxima integation test suite](http://www.apmaths.uwo.ca/~arich/IntegrationProblems/MaximaSyntaxFiles/MaximaSyntaxFiles.html)",
  "unread": false,
  "urls": [
   {
    "url": "http://www.apmaths.uwo.ca/~arich/IntegrationProblems/AxiomSyntaxFiles/AxiomSyntaxFiles.html"
   },
   {
    "url": "http://www.apmaths.uwo.ca/~arich/IntegrationProblems/MapleSyntaxFiles/MapleSyntaxFiles.html"
   },
   {
    "url": "http://www.apmaths.uwo.ca/~arich/IntegrationProblems/MathematicaSyntaxFiles/MathematicaSyntaxFiles.html"
   },
   {
    "url": "http://www.apmaths.uwo.ca/~arich/IntegrationProblems/MaximaSyntaxFiles/MaximaSyntaxFiles.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> The code used for the grading, written by Albert have been posted on my page all the time, please feel free to copy it if you want. The listing are there, the grading functions for Mathematica/Rubi and Maple are there, with links to the files. <a href=\"https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/index.htm\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/index.htm</a>  (last link on the page).",
  "id": "5b4a59f5866e0c6b15a801b9",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-14T20:15:49.517Z",
  "text": "@halirutan The code used for the grading, written by Albert have been posted on my page all the time, please feel free to copy it if you want. The listing are there, the grading functions for Mathematica/Rubi and Maple are there, with links to the files. https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/index.htm  (last link on the page).",
  "unread": false,
  "urls": [
   {
    "url": "https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/index.htm"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> <span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Somehow, I didn&#39;t get a notification that both of you sent a message. ",
  "id": "5b4c4de9b6b6632c7f1b343a",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   },
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-16T07:48:57.699Z",
  "text": "@AlbertRich @nasser1 Somehow, I didn't get a notification that both of you sent a message. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-16T07:54:22.038Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> I just didn&#39;t had time recently. I worked on a new version of the <a href=\"https://plugins.jetbrains.com/plugin/9792-key-promoter-x\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Key Promoter for IDEA</a> during my holidays and last week I finally published the article about my new version of the <a href=\"http://halirutan.de/programming/MathematicaPlugin3/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Mathematica Plugin</a> that I had planned for weeks. ",
  "id": "5b4c4ef4b6b6632c7f1b3445",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-07-16T07:53:24.348Z",
  "text": "@AlbertRich I just didn't had time recently. I worked on a new version of the [Key Promoter for IDEA](https://plugins.jetbrains.com/plugin/9792-key-promoter-x) during my holidays and last week I finally published the article about my new version of the [Mathematica Plugin](http://halirutan.de/programming/MathematicaPlugin3/) that I had planned for weeks. ",
  "unread": false,
  "urls": [
   {
    "url": "https://plugins.jetbrains.com/plugin/9792-key-promoter-x"
   },
   {
    "url": "http://halirutan.de/programming/MathematicaPlugin3/"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Going public with Rubi is next on my list.",
  "id": "5b4c4f445f3a92062a0df38b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-07-16T07:54:44.972Z",
  "text": "Going public with Rubi is next on my list.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> I have added a page for the test-suite. Can you look over it and add some more text (if necessary)? The file is <a href=\"https://github.com/RuleBasedIntegration/RuleBasedIntegration.github.io/blob/master/testsuite.md\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a>.",
  "id": "5b4c564e5f3a92062a0df3c7",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-07-16T08:24:46.551Z",
  "text": "@AlbertRich I have added a page for the test-suite. Can you look over it and add some more text (if necessary)? The file is [here](https://github.com/RuleBasedIntegration/RuleBasedIntegration.github.io/blob/master/testsuite.md).",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/RuleBasedIntegration/RuleBasedIntegration.github.io/blob/master/testsuite.md"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2018-07-16T08:36:12.958Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Finally, we have a first bug report (<span data-link-type=\"issue\" data-issue=\"1\" data-issue-repo=\"RuleBasedIntegration/Rubi\" class=\"issue\">RuleBasedIntegration/Rubi#1</span>) that asks why <code>CubeRoot</code> is not recognized.",
  "id": "5b4c5700b6b6632c7f1b34a1",
  "issues": [
   {
    "number": "1",
    "repo": "RuleBasedIntegration/Rubi"
   }
  ],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-16T08:27:43.994Z",
  "text": "@AlbertRich Finally, we have a first bug report (https://github.com/RuleBasedIntegration/Rubi/issues/1) that asks why `CubeRoot` is not recognized.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> I added a little more text to the test-suite page.  Also I put the list of systems for which the test-suite is available in alphabetical order, since there is no need to overtly favor Mathematica over the others.",
  "id": "5b4c6970c02eb83d7c7c7e2f",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-16T09:46:24.247Z",
  "text": "@halirutan I added a little more text to the test-suite page.  Also I put the list of systems for which the test-suite is available in alphabetical order, since there is no need to overtly favor Mathematica over the others.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Hehe, no problem. I was biased :)",
  "id": "5b4c6a445f3a92062a0df4c3",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-16T09:49:56.373Z",
  "text": "@AlbertRich Hehe, no problem. I was biased :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Rubi and I know nothing about the CubeRoot function.  I don&#39;t have access to Mathematica right now, but guessing that CubeRoot[-8] equals -2, then CubeRoot is an ugly, non-analytic function, outside the scope of Rubi.  Of course, <em>numbermaniac</em> is free to contribute a CubeRoot integration package of rules for the system...",
  "id": "5b4c6d20c02eb83d7c7c9cb4",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-16T10:02:08.324Z",
  "text": "@halirutan Rubi and I know nothing about the CubeRoot function.  I don't have access to Mathematica right now, but guessing that CubeRoot[-8] equals -2, then CubeRoot is an ugly, non-analytic function, outside the scope of Rubi.  Of course, *numbermaniac* is free to contribute a CubeRoot integration package of rules for the system...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-17T18:10:29.590Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  fyi,  you might want not to use <code>e</code> as symbol in some of your integrals, since other cases see this as exp(1)</p><pre><code>  sage: <span class=\"function\"><span class=\"title\">numerical_approx</span><span class=\"params\">(e)</span></span>\n         <span class=\"number\">2.71828182845905</span>\n   sage: <span class=\"function\"><span class=\"title\">integrate</span><span class=\"params\">(sin((d*x + c)</span></span>^(<span class=\"number\">2</span>/<span class=\"number\">3</span>)*<span class=\"tag\">b</span> + a)/(f*x + e),x)</code></pre><p>luckily, I do <code>var(&#39;e&#39;)</code> before running the integrals, and this eliminates the problem. So this is not a big deal for me.  But to be on the safe side, to make these integrals more generic, may be <code>e</code> should not be used as symbol on its own.</p>",
  "id": "5b4e2fd6623cc3040b29bdd8",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-17T18:05:10.591Z",
  "text": "@AlbertRich  fyi,  you might want not to use `e` as symbol in some of your integrals, since other cases see this as exp(1)\n\n      sage: numerical_approx(e)\n             2.71828182845905\n       sage: integrate(sin((d*x + c)^(2/3)*b + a)/(f*x + e),x)\n\nluckily, I do `var('e')` before running the integrals, and this eliminates the problem. So this is not a big deal for me.  But to be on the safe side, to make these integrals more generic, may be `e` should not be used as symbol on its own.",
  "unread": false,
  "urls": [],
  "v": 6
 },
 {
  "editedAt": "2018-07-17T19:19:39.746Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Good grief!  You&#39;re saying I should change the parameter e in 10 of thousands of integration problems because some goofy computer algebra system stupidly expropriates its use as a variable by assigning it a constant value.  You&#39;re workaround sounds perfectly reasonable.",
  "id": "5b4e411003a5fa639e6176dd",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-17T19:18:40.683Z",
  "text": "@nasser1 Good grief!  You're saying I should change the parameter e in 10 of thousands of integration problems because some goofy computer algebra system stupidly expropriates its use as a variable by assigning it a constant value.  You're workaround sounds perfectly reasonable.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "I also think Mathematica should not expropriate the use of E by assigning it a value.",
  "id": "5b4e41c0a94c5255523b8204",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-17T19:21:36.598Z",
  "text": "I also think Mathematica should not expropriate the use of E by assigning it a value.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-17T19:28:35.331Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  hi Albert, no, I am not saying that. Just pointing out a possible issue, FYI. That is all. If someone copies one of those integrals with <code>e</code> in it from your file, and run it as is in say sagemath, then <code>e</code> will be used as constant there.  Unless they know that <code>e</code> in your integral is meant to be a symbol and not the real <code>e</code> and that they need to type <code>symbols(&#39;e&#39;)</code> before hand. You said once you like your input files to be generic and I am just pointing this out. I did not know  how hard it is to replace all those <code>e</code> by say <code>z</code> or such in your code. Again, for me, it is no problem at all. But may be at end of day, it does not really matter? thinking out loud. Any way. This was just a FYI. ",
  "id": "5b4e424555a7e23c014b53d7",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-17T19:23:49.419Z",
  "text": "@AlbertRich  hi Albert, no, I am not saying that. Just pointing out a possible issue, FYI. That is all. If someone copies one of those integrals with `e` in it from your file, and run it as is in say sagemath, then `e` will be used as constant there.  Unless they know that `e` in your integral is meant to be a symbol and not the real `e` and that they need to type `symbols('e')` before hand. You said once you like your input files to be generic and I am just pointing this out. I did not know  how hard it is to replace all those `e` by say `z` or such in your code. Again, for me, it is no problem at all. But may be at end of day, it does not really matter? thinking out loud. Any way. This was just a FYI. ",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Obviously the peculiarities of each CAS will have to be accounted for when the test-suite is used to test that CAS&#39;s symbolic integrator.  I am not going to make massive changes to the test-suite each time a new CAS comes along.",
  "id": "5b4e44f2ecc1f82e2fbff28d",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-17T19:35:14.139Z",
  "text": "@nasser1 Obviously the peculiarities of each CAS will have to be accounted for when the test-suite is used to test that CAS's symbolic integrator.  I am not going to make massive changes to the test-suite each time a new CAS comes along.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> <span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> I suggest Albert changes every integration variable on all problems manually to <code>uniqueVariableA</code>,  <code>uniqueVariableB</code>, ... :smile:",
  "id": "5b4e65972edf19780ac82733",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   },
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-17T21:54:31.884Z",
  "text": "@AlbertRich @nasser1 I suggest Albert changes every integration variable on all problems manually to `uniqueVariableA`,  `uniqueVariableB`, ... :smile:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p>Answering myself, actually it does make a difference if <code>e</code> was the exponential or not for sagemath:</p><pre><code>  sage: <span class=\"function\"><span class=\"title\">integrate</span><span class=\"params\">(e^x,x)</span></span>\n  e^x</code></pre><p>Now typing <code>var(&#39;e&#39;)</code> so that <code>e</code> is now a generic symbolic and not the exponenetial</p><pre><code>  sage: <span class=\"function\"><span class=\"title\">var</span><span class=\"params\">(<span class=\"string\">'e'</span>)</span></span>\n  sage: <span class=\"function\"><span class=\"title\">integrate</span><span class=\"params\">(e^x,x)</span></span>\n  e^x/<span class=\"function\"><span class=\"title\">log</span><span class=\"params\">(e)</span></span></code></pre><p>But again, this does not affect my tests, since at the top of each file, there is a <code>var()</code> command, which sets all the symbols found in the file (including <code>e</code>).</p>",
  "id": "5b4e6b9f4b583a74a723f135",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-17T22:20:15.011Z",
  "text": "Answering myself, actually it does make a difference if `e` was the exponential or not for sagemath:\n\n      sage: integrate(e^x,x)\n      e^x\n\nNow typing `var('e')` so that `e` is now a generic symbolic and not the exponenetial\n\n      sage: var('e')\n      sage: integrate(e^x,x)\n      e^x/log(e)\n\nBut again, this does not affect my tests, since at the top of each file, there is a `var()` command, which sets all the symbols found in the file (including `e`).\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "I think now that Mathematica did this right. It uses UpperCase for all system symbols. So there is no confusion. One can use lower case letter and not worry about it clashing  with something else in the system. Some people complain that Mathematica uses UpperCase for these things, but I think it is the better way.",
  "id": "5b4e6c3decc1f82e2fc05afa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-17T22:22:53.860Z",
  "text": "I think now that Mathematica did this right. It uses UpperCase for all system symbols. So there is no confusion. One can use lower case letter and not worry about it clashing  with something else in the system. Some people complain that Mathematica uses UpperCase for these things, but I think it is the better way.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-17T22:26:44.106Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span>  <span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Yes, consistency is good.  Even those square brackets, instead of parentheses, Mathematica uses to indicate function calls.",
  "id": "5b4e6c798fe2780689be845e",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   },
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-17T22:23:53.346Z",
  "text": "@nasser1  @halirutan Yes, consistency is good.  Even those square brackets, instead of parentheses, Mathematica uses to indicate function calls.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "editedAt": "2018-07-17T22:30:19.482Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<blockquote>\n<p>I suggest Albert changes every integration variable on all problems manually to <code>uniqueVariableA</code>,  <code>uniqueVariableB</code>, ... :smile:</p></blockquote>\n<p>I&#39;ll get right on it.</p>",
  "id": "5b4e6de68fe2780689be8735",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-17T22:29:58.504Z",
  "text": "> I suggest Albert changes every integration variable on all problems manually to `uniqueVariableA`,  `uniqueVariableB`, ... :smile:\n\nI'll get right on it.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Don&#39;t let our jesting discourage you from making suggestions how to improve the integration test-suite.  I think the suite, along with your published test results, has prodded CAS developers to improve their systems and their paying users to demand that they do so.",
  "id": "5b4e721f79f7236acb3267b7",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-17T22:47:59.520Z",
  "text": "@nasser1 Don't let our jesting discourage you from making suggestions how to improve the integration test-suite.  I think the suite, along with your published test results, has prodded CAS developers to improve their systems and their paying users to demand that they do so.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-18T01:52:44.590Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "fyi, Maxima claims to found  anti-derivatives to another 3 non-integrable integrals.  I could not verify 2 of them so far, but did not spend too much time on it.  they are in test files 59, and 66. They contain just elementary functions.  Here is the link <a href=\"https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/index.htm#x1-20002\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/index.htm#x1-20002</a>",
  "id": "5b4e9d5fad8d085553aadd92",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T01:52:31.416Z",
  "text": "fyi, Maxima claims to found  anti-derivatives to another 3 non-integrable integrals.  I could not verify 2 of them so far, but did not spend too much time on it.  they are in test files 59, and 66. They contain just elementary functions.  Here is the link https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/index.htm#x1-20002",
  "unread": false,
  "urls": [
   {
    "url": "https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/index.htm#x1-20002"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> In order to qualify as a valid antiderivative, it must be valid throughout the complex plane.  By default, Maxima assumes variables are real.  Therefore when testing Maxima, your test program should start by making the global assignment  <strong>domain: complex$</strong>  so that variables are assumed complex.<br>After doing this, does Maxima still find closed-form antiderivatives for the 3 problems in question?",
  "id": "5b4ead39a94c5255523c786f",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T03:00:09.171Z",
  "text": "@nasser1 In order to qualify as a valid antiderivative, it must be valid throughout the complex plane.  By default, Maxima assumes variables are real.  Therefore when testing Maxima, your test program should start by making the global assignment  **domain: complex$**  so that variables are assumed complex.\nAfter doing this, does Maxima still find closed-form antiderivatives for the 3 problems in question?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-18T04:58:07.405Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  I do the verification inside Mathematica, using the same verify[] function I use to verify Rubi and Mathematica result. So complex domain is already assumed.  </p><p>I copy Maxima result and translate it to Mathematica syntax. 3 of the integrals did not verify (return 0), and 4th one, I did not even try, since the result contains an exponential integral, which I assumed is not allowed since not elementary.</p><p> here is a link to the notebook I use for Maxima result verification FYI <a href=\"https://www.12000.org/tmp/071718/verify_maxima_results.nb\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.12000.org/tmp/071718/verify_maxima_results.nb</a> </p>",
  "id": "5b4ec8d43187ca3ee8bceb95",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T04:57:56.371Z",
  "text": "@AlbertRich  I do the verification inside Mathematica, using the same verify[] function I use to verify Rubi and Mathematica result. So complex domain is already assumed.  \n\nI copy Maxima result and translate it to Mathematica syntax. 3 of the integrals did not verify (return 0), and 4th one, I did not even try, since the result contains an exponential integral, which I assumed is not allowed since not elementary.\n\n here is a link to the notebook I use for Maxima result verification FYI https://www.12000.org/tmp/071718/verify_maxima_results.nb ",
  "unread": false,
  "urls": [
   {
    "url": "https://www.12000.org/tmp/071718/verify_maxima_results.nb"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> A CAS getting an invalid or incorrect antiderivative is much <em>worse</em> than not being able to integrate an expression.  For example, a reasonable looking, but incorrect, antiderivative could result in the rocket you are designing to blow up at launch.",
  "id": "5b4efd178578203ee73c3dd9",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T08:40:55.487Z",
  "text": "@nasser1 A CAS getting an invalid or incorrect antiderivative is much *worse* than not being able to integrate an expression.  For example, a reasonable looking, but incorrect, antiderivative could result in the rocket you are designing to blow up at launch.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Therefore, it is unfair to Maxima if your test results indicate that it returned an incorrect result, when in fact it would not have returned any result at all if its variables had been assumed complex during the test instead of real.",
  "id": "5b4efd21cad358639d61e971",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T08:41:05.865Z",
  "text": "Therefore, it is unfair to Maxima if your test results indicate that it returned an incorrect result, when in fact it would not have returned any result at all if its variables had been assumed complex during the test instead of real.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-18T08:43:09.699Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Now that your test program is verifying antiderivatives, does it give a grade <em>below</em> F if the result is invalid?  Say X?",
  "id": "5b4efd25fd1b3474a69aac8c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T08:41:09.357Z",
  "text": "Now that your test program is verifying antiderivatives, does it give a grade *below* F if the result is invalid?  Say X?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "After declaring variables complex, does Maxima still find closed-form antiderivatives for the 3 problems in question?",
  "id": "5b4efe30ecc1f82e2fc19d8d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T08:45:36.864Z",
  "text": "After declaring variables complex, does Maxima still find closed-form antiderivatives for the 3 problems in question?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  I am sorry, I am not following what you write here</p><p>&quot;Therefore, it is unfair to Maxima if your test results indicate that it returned an incorrect result, when in fact it would not have returned any result at all if its variables had been assumed complex during the test instead of real.&quot;</p><p>First Maxima got an A, since this is not integrable, and it obtained a result before time out.  I do not verify the result. For the second part, what do you mean by &quot; if its variables had been assumed complex&quot; ? There is no assumption used when I call sagemath integrate at all. I just run the integrate command you have in the file as in. Same with all the other CAS systems.</p>",
  "id": "5b4efe35ad8d085553abb528",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T08:45:41.077Z",
  "text": "@AlbertRich  I am sorry, I am not following what you write here\n\n\"Therefore, it is unfair to Maxima if your test results indicate that it returned an incorrect result, when in fact it would not have returned any result at all if its variables had been assumed complex during the test instead of real.\"\n\nFirst Maxima got an A, since this is not integrable, and it obtained a result before time out.  I do not verify the result. For the second part, what do you mean by \" if its variables had been assumed complex\" ? There is no assumption used when I call sagemath integrate at all. I just run the integrate command you have in the file as in. Same with all the other CAS systems.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Above you say Maxima, not Sage, is returning candidate antiderivatives for 3 problems thought non-integrable.",
  "id": "5b4efeab3187ca3ee8bd7d3b",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T08:47:39.236Z",
  "text": "@nasser1 Above you say Maxima, not Sage, is returning candidate antiderivatives for 3 problems thought non-integrable.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "I use sagemath to call maxima. I do not do any assumptions. Am I supposed to add assumptions?",
  "id": "5b4efeb61539a7040ce76f36",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T08:47:50.442Z",
  "text": "I use sagemath to call maxima. I do not do any assumptions. Am I supposed to add assumptions?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Yes.",
  "id": "5b4efec0ad8d085553abb6ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T08:48:00.208Z",
  "text": "Yes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "sagemath uses Maxima for integrate.",
  "id": "5b4efec1fd1b3474a69ab0a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T08:48:01.503Z",
  "text": "sagemath uses Maxima for integrate.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-18T08:48:42.020Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Tell sagemath to tell Maxima to assume complex.",
  "id": "5b4efed1ecc1f82e2fc19f0a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T08:48:17.536Z",
  "text": "Tell sagemath to tell Maxima to assume complex.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "Are you saying I need to add assumptions that x is complex? Just for maxima? why? what about all the other CAS systems? fricas, giaxc, sympy?",
  "id": "5b4eff164b583a74a7252b34",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T08:49:26.199Z",
  "text": "Are you saying I need to add assumptions that x is complex? Just for maxima? why? what about all the other CAS systems? fricas, giaxc, sympy?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Because Maxima assumes variables are real by default.",
  "id": "5b4eff2d79f7236acb3398c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T08:49:49.592Z",
  "text": "Because Maxima assumes variables are real by default.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "After declaring variables complex, does Maxima still find closed-form antiderivatives for the 3 problems in question?",
  "id": "5b4eff9cf046ba6aca60d15c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T08:51:40.375Z",
  "text": "After declaring variables complex, does Maxima still find closed-form antiderivatives for the 3 problems in question?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "OMG.  you are saying I need to run all these tests again for maxima? all 34,000 integrals which completed. add assumptions for complex Just for the independent variable x, or all symbols in the integrand?  ",
  "id": "5b4efff0ecc1f82e2fc1a1ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T08:53:04.071Z",
  "text": "OMG.  you are saying I need to run all these tests again for maxima? all 34,000 integrals which completed. add assumptions for complex Just for the independent variable x, or all symbols in the integrand?  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> The Maxima command <em>domain: complex$</em> makes all symbols complex.",
  "id": "5b4f0062623cc3040b2b990e",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T08:54:58.896Z",
  "text": "@nasser1 The Maxima command *domain: complex$* makes all symbols complex.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-18T08:57:14.484Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "Ok, I will try that. I have to find how to do it in sagemath. I will for now just try these 3 integrals in domain complex.  I wish I knew that before. Pls note that your maxima input test files, do not have the domain complex command in it. ",
  "id": "5b4f008fecc1f82e2fc1a4e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T08:55:43.844Z",
  "text": "Ok, I will try that. I have to find how to do it in sagemath. I will for now just try these 3 integrals in domain complex.  I wish I knew that before. Pls note that your maxima input test files, do not have the domain complex command in it. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-07-18T09:00:41.728Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Great!  No, don&#39;t worry about changing the results for your current test run.  But let me know what Maxima returns for these 3 problems.",
  "id": "5b4f00e364990f3c000dbe71",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T08:57:07.378Z",
  "text": "Great!  No, don't worry about changing the results for your current test run.  But let me know what Maxima returns for these 3 problems.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "The complex domain declaration does not go in the integration test files.  Those are just a list of integration problems.  The domain declaration goes in your test program for Maxima.",
  "id": "5b4f01858fe2780689bfc9fd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T08:59:49.198Z",
  "text": "The complex domain declaration does not go in the integration test files.  Those are just a list of integration problems.  The domain declaration goes in your test program for Maxima.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-18T09:01:30.165Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  sure, I understand that. But may be a comment at the top of the maxima input files will be good to add, since this is important thing and can affect the result.",
  "id": "5b4f01ba55a7e23c014d0cf4",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T09:00:42.964Z",
  "text": "@AlbertRich  sure, I understand that. But may be a comment at the top of the maxima input files will be good to add, since this is important thing and can affect the result.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "editedAt": "2018-07-18T09:19:08.348Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Ask and ye shall receive. :smiley:   I just added a paragraph to the <a href=\"https://rulebasedintegration.org/testsuite.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Integration test-suite</a> webpage on GitHub.  Does that read ok?",
  "id": "5b4f05f08578203ee73c584a",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T09:18:40.187Z",
  "text": "@nasser1 Ask and ye shall receive. :smiley:   I just added a paragraph to the [Integration test-suite](https://rulebasedintegration.org/testsuite.html) webpage on GitHub.  Does that read ok?",
  "unread": false,
  "urls": [
   {
    "url": "https://rulebasedintegration.org/testsuite.html"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  great, thanks. I am running the first integral, with complex domain now. But it seems to have hanged now, since it is complex domain. without complex domain it did not hang.  Will try the rest now.",
  "id": "5b4f0644ecc1f82e2fc1b50c",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T09:20:04.194Z",
  "text": "@AlbertRich  great, thanks. I am running the first integral, with complex domain now. But it seems to have hanged now, since it is complex domain. without complex domain it did not hang.  Will try the rest now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> You wrote:</p><blockquote>\n<p>fyi, Maxima claims to found anti-derivatives to another 3 non-integrable integrals. I could not verify 2 of them so far, but did not spend too much time on it. they are in test files 59, and 66.</p></blockquote>\n<p>How do I figure what are the 3 problems in question?</p>",
  "id": "5b4f08e964990f3c000dd838",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T09:31:21.086Z",
  "text": "@nasser1 You wrote:\n> fyi, Maxima claims to found anti-derivatives to another 3 non-integrable integrals. I could not verify 2 of them so far, but did not spend too much time on it. they are in test files 59, and 66.\n\nHow do I figure what are the 3 problems in question?\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-18T09:32:55.620Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  I put them all in the notebook. Link above, with the file name and the problem number. I am running them now in complex domain. Did you have trouble downloading the notebook? ",
  "id": "5b4f0932a94c5255523d5569",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T09:32:34.453Z",
  "text": "@AlbertRich  I put them all in the notebook. Link above, with the file name and the problem number. I am running them now in complex domain. Did you have trouble downloading the notebook? ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "They are also in my web page, in the report. Under the special heading for these problems in the link I posted. <a href=\"https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/index.htm#x1-20002\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/index.htm#x1-20002</a>",
  "id": "5b4f0996cad358639d6213a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T09:34:14.447Z",
  "text": "They are also in my web page, in the report. Under the special heading for these problems in the link I posted. https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/index.htm#x1-20002",
  "unread": false,
  "urls": [
   {
    "url": "https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/index.htm#x1-20002"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Is it 59:144, 66:809 and 66:810?",
  "id": "5b4f09b61539a7040ce7931c",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T09:34:46.788Z",
  "text": "@nasser1 Is it 59:144, 66:809 and 66:810?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "yes. ",
  "id": "5b4f09bfad8d085553abd6f6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T09:34:55.553Z",
  "text": "yes. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Thanks, I&#39;ll take a look.",
  "id": "5b4f09cea94c5255523d5675",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T09:35:10.336Z",
  "text": "Thanks, I'll take a look.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-18T09:54:57.604Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Obviously 66:810 is incorrect since the integrand involves the parameters a, b, c and d, but Maxima&#39;s candidate antiderivative only involves c.  So it is invalid in both the real world <em>and</em> the complex world.",
  "id": "5b4f0e08fd1b3474a69ae2b0",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T09:53:12.568Z",
  "text": "@nasser1 Obviously 66:810 is incorrect since the integrand involves the parameters a, b, c and d, but Maxima's candidate antiderivative only involves c.  So it is invalid in both the real world *and* the complex world.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  Maxima anti is missing <code>d</code> only, you are right.  I did not notice this. but it has the other parameters?</p><pre><code>  integrate(sqrt(d<span class=\"keyword\">*</span>sin(f<span class=\"keyword\">*</span>x + e) + c)<span class=\"keyword\">*</span>(b<span class=\"keyword\">*</span>sin(f<span class=\"keyword\">*</span>x + e) + a)^m,x, algorithm=<span class=\"string\">\"maxima\"</span>)\n\n  1/3<span class=\"keyword\">*</span>(c<span class=\"keyword\">*</span>sin(3/2<span class=\"keyword\">*</span>f<span class=\"keyword\">*</span>x + 3/2<span class=\"keyword\">*</span>e) - 3<span class=\"keyword\">*</span>c<span class=\"keyword\">*</span>sin(1/2<span class=\"keyword\">*</span>f<span class=\"keyword\">*</span>x + 1/2<span class=\"keyword\">*</span>e))<span class=\"keyword\">*</span>2^(-m - 3/2)/f</code></pre><p>It looks like I have to rerun all maxima tests again. Since different result can be generated when setting complex domain :(  this will take may be another 3 weeks time.</p>",
  "id": "5b4f0f694b583a74a725602c",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T09:59:05.167Z",
  "text": "@AlbertRich  Maxima anti is missing `d` only, you are right.  I did not notice this. but it has the other parameters?\n\n      integrate(sqrt(d*sin(f*x + e) + c)*(b*sin(f*x + e) + a)^m,x, algorithm=\"maxima\")\n\n      1/3*(c*sin(3/2*f*x + 3/2*e) - 3*c*sin(1/2*f*x + 1/2*e))*2^(-m - 3/2)/f\n\nIt looks like I have to rerun all maxima tests again. Since different result can be generated when setting complex domain :(  this will take may be another 3 weeks time.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "The above is done in the REAL domain. I have to run it again in complex domain. Have not had chance to do that.",
  "id": "5b4f0f8f4b583a74a725608b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T09:59:43.699Z",
  "text": "The above is done in the REAL domain. I have to run it again in complex domain. Have not had chance to do that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-18T10:08:56.557Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> No, in Maxima&#39;s candidate antiderivative I only see the parameters c, e, f, and m.  I do <em>not</em> see a, b and d which are in the integrand.",
  "id": "5b4f118e623cc3040b2bcad5",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T10:08:14.110Z",
  "text": "@nasser1 No, in Maxima's candidate antiderivative I only see the parameters c, e, f, and m.  I do *not* see a, b and d which are in the integrand.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "You are right. too many letters. but clearly this result is wrong. ",
  "id": "5b4f11f63187ca3ee8bdb018",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T10:09:58.492Z",
  "text": "You are right. too many letters. but clearly this result is wrong. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "Too many bugs in all these CAS systems :( ",
  "id": "5b4f12204b583a74a725674e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T10:10:40.882Z",
  "text": "Too many bugs in all these CAS systems :( ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> I wouldn&#39;t worry about running your whole test suite again for this.  Just wait till next time.",
  "id": "5b4f124303a5fa639e636714",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T10:11:15.944Z",
  "text": "@nasser1 I wouldn't worry about running your whole test suite again for this.  Just wait till next time.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Good night.  I&#39;m off to bed.  Yea!",
  "id": "5b4f128a55a7e23c014d4154",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T10:12:26.761Z",
  "text": "Good night.  I'm off to bed.  Yea!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  Ok. But for the rest, will set domain to complex for Maxima.",
  "id": "5b4f12cdf046ba6aca6103ca",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T10:13:33.259Z",
  "text": "@AlbertRich  Ok. But for the rest, will set domain to complex for Maxima.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "That sounds good.",
  "id": "5b4f12ed64990f3c000df2f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T10:14:05.275Z",
  "text": "That sounds good.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-18T10:16:59.797Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "But I would certainly no longer indicate that Maxima integrated these 3 non-integrable problems in your test results.",
  "id": "5b4f137955a7e23c014d443c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T10:16:25.726Z",
  "text": "But I would certainly no longer indicate that Maxima integrated these 3 non-integrable problems in your test results.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  some good news. I asked about this in sage forum. I was told that sagemath sets the domain to complex by default when using maxima !   so all the tests I did are valid. It was already using complex domain. Here the link to the question and answer FYI.  <a href=\"https://ask.sagemath.org/question/43064/how-to-use-domaincomplex-command-in-sagemath-for-maxima/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ask.sagemath.org/question/43064/how-to-use-domaincomplex-command-in-sagemath-for-maxima/</a>   so I do not have to redo anything based on this answer.",
  "id": "5b4f2f26fd1b3474a69b4768",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T12:14:30.841Z",
  "text": "@AlbertRich  some good news. I asked about this in sage forum. I was told that sagemath sets the domain to complex by default when using maxima !   so all the tests I did are valid. It was already using complex domain. Here the link to the question and answer FYI.  https://ask.sagemath.org/question/43064/how-to-use-domaincomplex-command-in-sagemath-for-maxima/   so I do not have to redo anything based on this answer.",
  "unread": false,
  "urls": [
   {
    "url": "https://ask.sagemath.org/question/43064/how-to-use-domaincomplex-command-in-sagemath-for-maxima/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Awesome.  Well done.",
  "id": "5b4f72e479f7236acb350ae1",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T17:03:32.681Z",
  "text": "@nasser1 Awesome.  Well done.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-18T17:14:45.234Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Just to make sure, try evaluating sqrt(x^2) in Sagemath/Maxima and see what you get.",
  "id": "5b4f73e979f7236acb350f66",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-18T17:07:53.995Z",
  "text": "Just to make sure, try evaluating sqrt(x^2) in Sagemath/Maxima and see what you get.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> I try to prepare a blob-post about Rubi that I&#39;ll use to announce the GitHub page on several other places. Question: Can you give a short (in number of rules used) but interesting integration problem that I should use for demonstration?",
  "id": "5b50662c30bcda3657f079fd",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-19T10:21:32.067Z",
  "text": "@AlbertRich I try to prepare a blob-post about Rubi that I'll use to announce the GitHub page on several other places. Question: Can you give a short (in number of rules used) but interesting integration problem that I should use for demonstration?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Ok, here&#39;s a fun one Rubi can do in 3 easy steps:</p><pre><code class=\"mma\">Int[(<span class=\"keyword\">Sec</span>[x]^<span class=\"number\">2</span> + <span class=\"keyword\">Sec</span>[x]^<span class=\"number\">2</span>*<span class=\"keyword\">Tan</span>[x])/((<span class=\"number\">2</span> - <span class=\"keyword\">Tan</span>[x])*<span class=\"keyword\">Sqrt</span>[<span class=\"number\">1</span> + <span class=\"keyword\">Tan</span>[x]^<span class=\"number\">3</span>]), x]</code></pre><p>giving the elementary antiderivative</p><pre><code class=\"mma\">(<span class=\"number\">2</span>/<span class=\"number\">3</span>)*<span class=\"keyword\">ArcTanh</span>[(<span class=\"number\">1</span> + <span class=\"keyword\">Tan</span>[x])^<span class=\"number\">2</span>/(<span class=\"number\">3</span>*<span class=\"keyword\">Sqrt</span>[<span class=\"number\">1</span> + <span class=\"keyword\">Tan</span>[x]^<span class=\"number\">3</span>])]</code></pre><p>I recommend showing the steps.  Then you can contrast this with Mathematica&#39;s non-elementary result that has a leafcount of 2197, takes a while to compute, and involves the imaginary unit and numerous elliptic integral functions.</p>",
  "id": "5b51161a63cf1636bddc90f8",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-19T22:52:10.450Z",
  "text": "@halirutan Ok, here's a fun one Rubi can do in 3 easy steps:\n```mma\nInt[(Sec[x]^2 + Sec[x]^2*Tan[x])/((2 - Tan[x])*Sqrt[1 + Tan[x]^3]), x]\n```\ngiving the elementary antiderivative\n```mma\n(2/3)*ArcTanh[(1 + Tan[x])^2/(3*Sqrt[1 + Tan[x]^3])]\n```\nI recommend showing the steps.  Then you can contrast this with Mathematica's non-elementary result that has a leafcount of 2197, takes a while to compute, and involves the imaginary unit and numerous elliptic integral functions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-20T00:32:47.374Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> The Mathematica results above were done using version 8.0.  Version 11.3 does better with an antiderivative size of 209 leaves, but still involving the imaginary unit and two elliptic integrals.",
  "id": "5b512d8ab2411177a25b7eba",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-20T00:32:10.219Z",
  "text": "@halirutan The Mathematica results above were done using version 8.0.  Version 11.3 does better with an antiderivative size of 209 leaves, but still involving the imaginary unit and two elliptic integrals.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-07-20T00:38:51.962Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Also I have been unable to verify the 11.3 antiderivative by differentiation back to the original integrand even using FullSimplify; whereas verifying Rubi&#39;s antiderivative is trivial.",
  "id": "5b512f01f477e4664aad50d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-20T00:38:25.822Z",
  "text": "Also I have been unable to verify the 11.3 antiderivative by differentiation back to the original integrand even using FullSimplify; whereas verifying Rubi's antiderivative is trivial.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  <span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Maybe on the GitHub Rubi Wiki, there should be a page of kool examples like the above...",
  "id": "5b518de4f02a0977a3ea6514",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   },
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-20T07:23:16.794Z",
  "text": "@halirutan  @nasser1 Maybe on the GitHub Rubi Wiki, there should be a page of kool examples like the above...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Thanks a bunch. That&#39;s indeed a nice example to show.",
  "id": "5b51cd075e41a66b1aabfa58",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-20T11:52:39.719Z",
  "text": "@AlbertRich Thanks a bunch. That's indeed a nice example to show.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-20T12:31:55.856Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p>Hello;<br>If such examples are needed., I have a new special table done just for these types of things. </p><p>In this below, notation A:B means test file number A and problem number B in that file. (as shown on main test page), followed by Rubi leaf size and the other CAS leaf size for same problem</p><p>Here are some problems to consider</p><pre><code>67:1237 \nInt[(Cos[c + d<span class=\"keyword\">*</span>x]^5<span class=\"keyword\">*</span>Sin[c + d<span class=\"keyword\">*</span>x]^n)/(a + b<span class=\"keyword\">*</span>Sin[c + d<span class=\"keyword\">*</span>x]),x]\nRubi : 167, Mathematica : 2,481,613\n\n68:37\nInt[(Csc[e + f<span class=\"keyword\">*</span>x]<span class=\"keyword\">*</span>Sqrt[c + d<span class=\"keyword\">*</span>Sin[e + f<span class=\"keyword\">*</span>x]])/Sqrt[a + a<span class=\"keyword\">*</span>Sin[e + f<span class=\"keyword\">*</span>x]],x]\nRubi: 140, Mathematica: 472,502\n\n35:12\nInt[(a - c + b<span class=\"keyword\">*</span>x)/((1 + x^2)<span class=\"keyword\">*</span>Sqrt[a + b<span class=\"keyword\">*</span>x + c<span class=\"keyword\">*</span>x^2]),x]\nRubi: 484, Maple: 6,871,419\n\n66:795\nInt[(c + d<span class=\"keyword\">*</span>Sin[e + f<span class=\"keyword\">*</span>x])^(5/2)/(a + b<span class=\"keyword\">*</span>Sin[e + f<span class=\"keyword\">*</span>x])^(5/2),x]\nRubi: 736, Maple: 5,976,296</code></pre><p>and many more. Finding leaf count for other CAS systems is approximate, since they do not have a LeafCount function yet. Someone in sagemath is making such a function for next major release of sagemath. But for Maple and Mathematica, it is the same LeafCount function.</p><p>The report  is still compiling, and will take may be few more hrs before I can update the full table to my web page.</p>",
  "id": "5b51d59d26bfd636be39022b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-20T12:29:17.030Z",
  "text": "Hello;\nIf such examples are needed., I have a new special table done just for these types of things. \n\nIn this below, notation A:B means test file number A and problem number B in that file. (as shown on main test page), followed by Rubi leaf size and the other CAS leaf size for same problem\n\nHere are some problems to consider\n\n    67:1237 \n    Int[(Cos[c + d*x]^5*Sin[c + d*x]^n)/(a + b*Sin[c + d*x]),x]\n    Rubi : 167, Mathematica : 2,481,613\n\n    68:37\n    Int[(Csc[e + f*x]*Sqrt[c + d*Sin[e + f*x]])/Sqrt[a + a*Sin[e + f*x]],x]\n    Rubi: 140, Mathematica: 472,502\n\n    35:12\n    Int[(a - c + b*x)/((1 + x^2)*Sqrt[a + b*x + c*x^2]),x]\n    Rubi: 484, Maple: 6,871,419\n\n    66:795\n    Int[(c + d*Sin[e + f*x])^(5/2)/(a + b*Sin[e + f*x])^(5/2),x]\n    Rubi: 736, Maple: 5,976,296\n\nand many more. Finding leaf count for other CAS systems is approximate, since they do not have a LeafCount function yet. Someone in sagemath is making such a function for next major release of sagemath. But for Maple and Mathematica, it is the same LeafCount function.\n\nThe report  is still compiling, and will take may be few more hrs before I can update the full table to my web page.\n     \n    ",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Nice. When all tests are finished, I would like to update the main graphics on the website and it would be nice, if I can get the ranking values again.",
  "id": "5b51d60d5e41a66b1aabfa62",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-20T12:31:09.988Z",
  "text": "@nasser1 Nice. When all tests are finished, I would like to update the main graphics on the website and it would be nice, if I can get the ranking values again.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> On a different matter: Please be aware that there is absolutely no need, that <em>you</em> send me money for the plugin. I really appreciate your gesture, but the whole &quot;earn money with open-source&quot; is completely broken and specifically, I don&#39;t want my friends to send me money. Just to give you some insight: I have about 200 unique, new downloads for Mathematica plugin each week. For the Key Promoter (another project) it is even as high as 1200 downloads per week. If all these users who simply take it and have no other interaction with me would donate/pay even a small amount, I would easily be able to take a leave from my official work to work say a month completely on the plugin.",
  "id": "5b51d7e98ae22502d1ef260c",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-20T12:39:05.274Z",
  "text": "@nasser1 On a different matter: Please be aware that there is absolutely no need, that *you* send me money for the plugin. I really appreciate your gesture, but the whole \"earn money with open-source\" is completely broken and specifically, I don't want my friends to send me money. Just to give you some insight: I have about 200 unique, new downloads for Mathematica plugin each week. For the Key Promoter (another project) it is even as high as 1200 downloads per week. If all these users who simply take it and have no other interaction with me would donate/pay even a small amount, I would easily be able to take a leave from my official work to work say a month completely on the plugin.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "I have given this a lot of thought lately and there is no solution to it as long as IntelliJ doesn&#39;t implement an App-Store like thing. Everyone is paying (directly or indirectly through ads) for each shitty app on their phone, but for open-source there is simply no solution. ",
  "id": "5b51d98657f4f664b794c919",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-20T12:45:58.365Z",
  "text": "I have given this a lot of thought lately and there is no solution to it as long as IntelliJ doesn't implement an App-Store like thing. Everyone is paying (directly or indirectly through ads) for each shitty app on their phone, but for open-source there is simply no solution. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>, it is no problem,  your plugin is very nice and useful. thanks for making it.</p><p>btw, I am still waiting for sympy to finish one file :(  all CAS systems finish and I have to wait days for sympy to be done. I do not think sympy will be successful CAS system like this. It is just too slow.  So have to leave for now, and come check on it later in the day.  Talk soon.</p>",
  "id": "5b51d9d8f477e4664aaef988",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-20T12:47:20.945Z",
  "text": "@halirutan, it is no problem,  your plugin is very nice and useful. thanks for making it.\n\nbtw, I am still waiting for sympy to finish one file :(  all CAS systems finish and I have to wait days for sympy to be done. I do not think sympy will be successful CAS system like this. It is just too slow.  So have to leave for now, and come check on it later in the day.  Talk soon.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Yep, see you later.",
  "id": "5b51d9f257f4f664b794c91d",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-20T12:47:46.330Z",
  "text": "@nasser1 Yep, see you later.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-20T17:57:31.882Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Hi Nasser.  You wrote:</p><blockquote>\n<p>If such examples are needed., I have a new special table done just for these types of things.</p></blockquote>\n<p>Please send the link to this table.</p>",
  "id": "5b52227326bfd636be39f725",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-20T17:57:07.170Z",
  "text": "@nasser1 Hi Nasser.  You wrote:\n> If such examples are needed., I have a new special table done just for these types of things.\n\nPlease send the link to this table.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  <span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  hi., The link to the new leaf size ratio table is in the introduction link of the report.  <a href=\"https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/index.htm\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/index.htm</a></p><p>The code for the new 3D chart notebook is also there under the figure itself. </p>",
  "id": "5b52cdc9f10ffa0b48a0ead9",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   },
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-21T06:08:09.814Z",
  "text": "@AlbertRich  @halirutan  hi., The link to the new leaf size ratio table is in the introduction link of the report.  https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/index.htm\n\nThe code for the new 3D chart notebook is also there under the figure itself. ",
  "unread": false,
  "urls": [
   {
    "url": "https://www.12000.org/my_notes/CAS_integration_tests/reports/rubi_4_15_2/index.htm"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "fyi, there are also number of integrals, which sagemath claims Maxima found result for, but these integrals are supposed to be non-integrables. I also could not verify any of them. So I asked about this in sagemath forum. Here is the link to the question, fyi<br><a href=\"https://ask.sagemath.org/question/43088/integrate-results-that-are-different-from-using-maxima/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ask.sagemath.org/question/43088/integrate-results-that-are-different-from-using-maxima/</a><br>All these integrals are listed in the report in separate section also.",
  "id": "5b52cebef477e4664ab157d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-21T06:12:14.903Z",
  "text": "fyi, there are also number of integrals, which sagemath claims Maxima found result for, but these integrals are supposed to be non-integrables. I also could not verify any of them. So I asked about this in sagemath forum. Here is the link to the question, fyi\nhttps://ask.sagemath.org/question/43088/integrate-results-that-are-different-from-using-maxima/\nAll these integrals are listed in the report in separate section also.",
  "unread": false,
  "urls": [
   {
    "url": "https://ask.sagemath.org/question/43088/integrate-results-that-are-different-from-using-maxima/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Macsyma, on which Maxima, is based is an old (1968) and venerable (Joel Moses) CAS, but I would be highly skeptical of the candidate antiderivatives it produces on the problems which all the other systems think are unintegrable.",
  "id": "5b52e41eb2411177a25fbd3c",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-21T07:43:26.974Z",
  "text": "@nasser1 Macsyma, on which Maxima, is based is an old (1968) and venerable (Joel Moses) CAS, but I would be highly skeptical of the candidate antiderivatives it produces on the problems which all the other systems think are unintegrable.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Thanks, I found the &quot;Largest leaf size ratios table&quot; in the Introduction.  The table&#39;s label line says:</p><ul>\n<li>Maximum leaf size ratio for each CAS against Rubi result</li>\n</ul>\n<p>and the first line of the section notes says</p><ul>\n<li>The following table gives the largest ratio found in each test file, between each CAS antiderivative and Rubi\u2019s antiderivative.</li>\n</ul>\n<p>These are not exactly correct statements, and could be inferred as a bias for Rubi&#39;s results.  There is distinction between &quot;Rubi&#39;s antiderivative&quot; and the problem&#39;s <em>optimal</em> antiderivative as stored in the test suite.  As you know, Rubi only returns an optimal antiderivative 99.71% of the time.  So 0.29% of the time it doesn&#39;t.  Therefore, I recommend rewording the above two lines as follows:</p><ul>\n<li>Maximum leaf size ratio for each CAS against the optimal result</li>\n<li>The following table gives the largest ratio found in each test file, between each CAS antiderivative and the optimal antiderivative.</li>\n</ul>\n<p>Also since no distinction should be made between Rubi and the other integrators being tested, I recommend adding another column showing Rubi&#39;s ratios.</p>",
  "id": "5b52ec9fc579673e6b856ebf",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-21T08:19:43.211Z",
  "text": "@nasser1 Thanks, I found the \"Largest leaf size ratios table\" in the Introduction.  The table's label line says:\n* Maximum leaf size ratio for each CAS against Rubi result\n\nand the first line of the section notes says\n* The following table gives the largest ratio found in each test file, between each CAS antiderivative and Rubi\u2019s antiderivative.\n\nThese are not exactly correct statements, and could be inferred as a bias for Rubi's results.  There is distinction between \"Rubi's antiderivative\" and the problem's *optimal* antiderivative as stored in the test suite.  As you know, Rubi only returns an optimal antiderivative 99.71% of the time.  So 0.29% of the time it doesn't.  Therefore, I recommend rewording the above two lines as follows:\n* Maximum leaf size ratio for each CAS against the optimal result\n* The following table gives the largest ratio found in each test file, between each CAS antiderivative and the optimal antiderivative.\n\nAlso since no distinction should be made between Rubi and the other integrators being tested, I recommend adding another column showing Rubi's ratios.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  good idea. Changed it to ratio against optimal and updated page.",
  "id": "5b52f6fe9ddf5f4aadfbf147",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-21T09:03:58.463Z",
  "text": "@AlbertRich  good idea. Changed it to ratio against optimal and updated page.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Thanks!",
  "id": "5b53098bf02a0977a3ee1b8c",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-21T10:23:07.783Z",
  "text": "@nasser1 Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "Hello; Fyi, about Maxima solving some of the non-integrable integrals. It turned out due to SageMath loading some buggy maxima library internally during the call.  After removing the effect of this, now Maxima does return these few integrals back as unevaluated, which is supposed to be the correct answer. So I updated the main page. This is why these results did not verify before.<br>I do not know why sagemath loads this specific library that causes this problem. But now when I run Maxima tests on the integration tests, I make sure this specific library is not loaded.",
  "id": "5b552bd7f02a0977a3f28d90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-23T01:13:59.659Z",
  "text": "Hello; Fyi, about Maxima solving some of the non-integrable integrals. It turned out due to SageMath loading some buggy maxima library internally during the call.  After removing the effect of this, now Maxima does return these few integrals back as unevaluated, which is supposed to be the correct answer. So I updated the main page. This is why these results did not verify before. \nI do not know why sagemath loads this specific library that causes this problem. But now when I run Maxima tests on the integration tests, I make sure this specific library is not loaded.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Congratulations!  Great detective work.  Who would have thought independent testing symbolic integrators required so much gumshoe work...",
  "id": "5b5572fff9ffc4664bf6f0b5",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-23T06:17:35.251Z",
  "text": "@nasser1 Congratulations!  Great detective work.  Who would have thought independent testing symbolic integrators required so much gumshoe work...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Ok, Nasser, you need a more interesting GitHub avatar... :smile: ",
  "id": "5b5583bec86c4f0b4729f0dc",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-23T07:29:02.854Z",
  "text": "@nasser1 Ok, Nasser, you need a more interesting GitHub avatar... :smile: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  I do not know anything about these avatars. I think the system made one for me. Same on Mathematica forum.",
  "id": "5b558996ee530e4aac8f9230",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-23T07:53:58.357Z",
  "text": "@AlbertRich  I do not know anything about these avatars. I think the system made one for me. Same on Mathematica forum.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-23T07:56:46.875Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "Will next version of Rubi allows one to capture the steps/rules used into a variable like it was before? This way one can record it to a file. Last time I tried this, I could not capture the rules. Now I only capture the Stats.<br>It will be nice to be able to capture the rules used to solve each integral also. ",
  "id": "5b5589e726bfd636be4122c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-23T07:55:19.743Z",
  "text": "Will next version of Rubi allows one to capture the steps/rules used into a variable like it was before? This way one can record it to a file. Last time I tried this, I could not capture the rules. Now I only capture the Stats.\nIt will be nice to be able to capture the rules used to solve each integral also. ",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> On your  profile page <a href=\"https://github.com/nasser1\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/nasser1</a> if you just hover over your current avatar you can change it.  Patrick may know more.",
  "id": "5b558a58e06d7e7409977efa",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-23T07:57:12.166Z",
  "text": "@nasser1 On your  profile page https://github.com/nasser1 if you just hover over your current avatar you can change it.  Patrick may know more.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/nasser1"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span>  <span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> As far as capturing the rules, you will need to discuss that with Patrick since he has taken over development of Rubi&#39;s user-interface.  I want to stay focused on defining new integration rules to expand the domain of expressions Rubi can integrate.",
  "id": "5b558b40ee530e4aac8f9758",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   },
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-23T08:01:04.483Z",
  "text": "@nasser1  @halirutan As far as capturing the rules, you will need to discuss that with Patrick since he has taken over development of Rubi's user-interface.  I want to stay focused on defining new integration rules to expand the domain of expressions Rubi can integrate.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> <span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> About the steps/rules: We can unify the interface by using an option like <code>RubiReport -&gt; Print</code> per default for both the Stats and the Steps. Then the user can set it to e.g. <code>RubiReport -&gt; List</code> and Steps/Stats are not printed but returned as list. This would make Steps and Stats behave similar again. How does that sound?",
  "id": "5b55ecef93e1b061a0a43aa2",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   },
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-23T14:57:51.844Z",
  "text": "@nasser1 @AlbertRich About the steps/rules: We can unify the interface by using an option like `RubiReport -> Print` per default for both the Stats and the Steps. Then the user can set it to e.g. `RubiReport -> List` and Steps/Stats are not printed but returned as list. This would make Steps and Stats behave similar again. How does that sound?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> If you like to change your picture, just go to <a href=\"https://github.com/nasser1\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/nasser1</a> and click on your current image.",
  "id": "5b55ed4d8ae22502d1ef2d09",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-23T14:59:25.698Z",
  "text": "@nasser1 If you like to change your picture, just go to https://github.com/nasser1 and click on your current image.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/nasser1"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2018-07-23T23:34:27.386Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p>Hi.  </p><p>But how will the API looks like? the API  should not change in both cases, right?  </p><p>I myself, do not like all these settings to tell you the truth. They become confusing.</p><p>It will be easier for a user like me to have Rubi just return everything in the same call. Like some Mathematica functions do, for example</p><pre><code>              <span class=\"list\">{vals, vecs}</span> = <span class=\"keyword\">Eigensystem</span>[m]</code></pre><p>I do not know how much more inefficient this will be, to return the stats and rules each time along with the antiderivative. </p><p>But if the cost is minimal, why not just make the API as simple as</p><pre><code>      {anti, stats, rules } = <span class=\"built_in\">Int</span>[....,x];</code></pre><p>If the user wants to look at the rules, in nice formated way, auxillary function from Rubi (which I think already there?) can now be used, as in   <code>formatRubiRules[ rules ];</code>  same for stats if needed. If they do not care, then they just look at the antiderivative.</p><p>If Rubi can&#39;t integate it then stats and rules will simply be empty lists.</p><p>Just my 2cents ofcourse as I do not know the internals of Rubi and if the above might not be possible to do.</p>",
  "id": "5b566546c86c4f0b472cc977",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-23T23:31:18.588Z",
  "text": "Hi.  \n\nBut how will the API looks like? the API  should not change in both cases, right?  \n\nI myself, do not like all these settings to tell you the truth. They become confusing.\n\nIt will be easier for a user like me to have Rubi just return everything in the same call. Like some Mathematica functions do, for example\n\n                  {vals, vecs} = Eigensystem[m]\n\nI do not know how much more inefficient this will be, to return the stats and rules each time along with the antiderivative. \n\nBut if the cost is minimal, why not just make the API as simple as\n\n          {anti, stats, rules } = Int[....,x];\n\nIf the user wants to look at the rules, in nice formated way, auxillary function from Rubi (which I think already there?) can now be used, as in   `formatRubiRules[ rules ];`  same for stats if needed. If they do not care, then they just look at the antiderivative.\n\nIf Rubi can't integate it then stats and rules will simply be empty lists.\n\nJust my 2cents ofcourse as I do not know the internals of Rubi and if the above might not be possible to do.",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> The reason I don&#39;t want to put additional DownValues to <code>Int</code> is that it should be only concert with integrating. We already have 6500 rules on <code>Int</code> and <code>Int[...]</code> giving stats doesn&#39;t work because for stats/steps we need to adjust the DownValues for all 6500 rules before which we do on loading right now. I believe <code>Stats[..]</code> and <code>Steps[..]</code> is a good way to separate this plus we can make it behave similarly.",
  "id": "5b5699e127111c75a2baa6cc",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-24T03:15:45.307Z",
  "text": "@nasser1 The reason I don't want to put additional DownValues to `Int` is that it should be only concert with integrating. We already have 6500 rules on `Int` and `Int[...]` giving stats doesn't work because for stats/steps we need to adjust the DownValues for all 6500 rules before which we do on loading right now. I believe `Stats[..]` and `Steps[..]` is a good way to separate this plus we can make it behave similarly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-24T04:15:55.866Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  <span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Patrick wrote</p><blockquote>\n<p>[Int] should be only concer[ned] with integrating.</p></blockquote>\n<p>I agree completely.</p>",
  "id": "5b56a754f10ffa0b48a9d8a6",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   },
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-24T04:13:08.772Z",
  "text": "@halirutan  @nasser1 Patrick wrote\n> [Int] should be only concer[ned] with integrating.\n\nI agree completely.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p>FYI, I found another one of those naming symbol/function naming issues that we talked about before.</p><p>File <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"134\" class=\"issue\">#134</a>  : <code>4_Trig_functions/4.4_Miscellaneous/4.4.7 Trig functions.txt</code> problems <code>646,647,648,649</code> </p><p>These 4 problems use <code>f(....)</code> as function, but <code>f</code> is used as symbol before. So I changed all these 4 problems and replaced <code>f(</code> by <code>F0(</code>  to make the other CAS systems happy. (Could not use <code>F</code> since <code>F</code> is already a symbol also and used in same file before). </p>",
  "id": "5b5c318cf52b276ced4abaac",
  "issues": [
   {
    "number": "134"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-28T09:04:12.161Z",
  "text": "FYI, I found another one of those naming symbol/function naming issues that we talked about before.\n\nFile #134  : `4_Trig_functions/4.4_Miscellaneous/4.4.7 Trig functions.txt` problems `646,647,648,649` \n\nThese 4 problems use `f(....)` as function, but `f` is used as symbol before. So I changed all these 4 problems and replaced `f(` by `F0(`  to make the other CAS systems happy. (Could not use `F` since `F` is already a symbol also and used in same file before). \n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Thanks.  I just emailed you revised &quot;4.4.7 Trig functions&quot; test files that should resolve the problem.  If at all possible, I prefer <em>not</em> to use F0 for an arbitrary function name.  So I changed the 2 problems using F as a symbol to use f instead; and changed the 4 problems using f as a function to use F instead.  Let me know if there are still problems.",
  "id": "5b5f74d83cc395660733526d",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-30T20:28:08.930Z",
  "text": "@nasser1 Thanks.  I just emailed you revised \"4.4.7 Trig functions\" test files that should resolve the problem.  If at all possible, I prefer *not* to use F0 for an arbitrary function name.  So I changed the 2 problems using F as a symbol to use f instead; and changed the 4 problems using f as a function to use F instead.  Let me know if there are still problems.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<a href=\"https://files.gitter.im/Rule-Based-Integration/Lobby/1FnH/image.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/Rule-Based-Integration/Lobby/1FnH/thumb/image.png\" alt=\"image.png\" rel=\"nofollow\"></a>",
  "id": "5b61739120d248394f6e6170",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-01T08:47:13.645Z",
  "text": "[![image.png](https://files.gitter.im/Rule-Based-Integration/Lobby/1FnH/thumb/image.png)](https://files.gitter.im/Rule-Based-Integration/Lobby/1FnH/image.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/Rule-Based-Integration/Lobby/1FnH/thumb/image.png"
   },
   {
    "url": "https://files.gitter.im/Rule-Based-Integration/Lobby/1FnH/image.png"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2018-08-01T08:56:32.424Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p>Hello; I&#39;d like to see if I can add statistics for the integration tests, which breaks how each CAS performs per class of problems. Using what is on Albert site, I see the above chart. I think this will be useful. It will show which type of problems each CAS is more strong at or not strong at more clearly than having one chart for all the problems as is the case now.</p><p>I need to make a 3D chart for the above, per each integrand type. To do this, I just need to know which file numbers in the tests go with which integrand type.  I can figure all of them starting from the exponential functions, since the folder name is clear which is which. </p><p>But having hard time with the first box. Starting with the Algebraic Linear up to Misc. Algebraic since they seem to be in different files.  This one group is spread from file <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"13\" class=\"issue\">#13</a> to file <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"49\" class=\"issue\">#49</a>.</p><p>I can guess some, but thought to ask. </p><p>So I&#39;d like just a list of which test files numbers go with which integrand type to allow me to make the 3D charts.<br>thanks</p>",
  "id": "5b61745095988830b091adf9",
  "issues": [
   {
    "number": "13"
   },
   {
    "number": "49"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-01T08:50:24.627Z",
  "text": "Hello; I'd like to see if I can add statistics for the integration tests, which breaks how each CAS performs per class of problems. Using what is on Albert site, I see the above chart. I think this will be useful. It will show which type of problems each CAS is more strong at or not strong at more clearly than having one chart for all the problems as is the case now.\n\nI need to make a 3D chart for the above, per each integrand type. To do this, I just need to know which file numbers in the tests go with which integrand type.  I can figure all of them starting from the exponential functions, since the folder name is clear which is which. \n\nBut having hard time with the first box. Starting with the Algebraic Linear up to Misc. Algebraic since they seem to be in different files.  This one group is spread from file #13 to file #49.\n\nI can guess some, but thought to ask. \n\nSo I'd like just a list of which test files numbers go with which integrand type to allow me to make the 3D charts. \nthanks\n",
  "unread": false,
  "urls": [],
  "v": 5
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> <span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> I think showing how each integrator performs on the various classes of integrands is an excellent idea!<br>Since the above chart was made, I have reorganized the problems involving algebraic integrands more logically into the 3 categories: <ul>\n<li>Binomial problems (products involving powers of binomials and monomials)</li>\n<li>Trinomial problems  (products involving powers of trinomials, binomials and monomials)</li>\n<li>Miscellaneous problems</li>\n</ul>\n",
  "id": "5b618416f52b276ced59cc5a",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   },
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-01T09:57:42.434Z",
  "text": "@nasser1 @halirutan I think showing how each integrator performs on the various classes of integrands is an excellent idea!\nSince the above chart was made, I have reorganized the problems involving algebraic integrands more logically into the 3 categories: \n* Binomial problems (products involving powers of binomials and monomials)\n* Trinomial problems  (products involving powers of trinomials, binomials and monomials)\n* Miscellaneous problems",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "The Binomial problems are further subdivided into linear (a+b x), quadratic (a+b x^2), general (a+b x^n) and improper (a x^m+b x^n).<br>The Trinomial problems are further subdivided into quadratic (a+b x+c x^2), quartic (a+b x^2+c x^4), general (a+b x^n+c x^(2 n)) and improper (a x^m+b x^n+c x^(2 n-m)).<br>The Miscellaneous problems are further subdivided into rational and algebraic.<br>However for your purposes, I strongly recommend <em>only</em> breaking the algebraic problems into the 3 basic categories: Binomial problems, Trinomial problems and Miscellaneous problems.<br>In the test-suite zip files you downloaded from Rubi&#39;s old website, there is a folder for each of these 3 categories containing the files for that category.<br>I look forward to seeing the table and/or bar chart you generate.",
  "id": "5b618425c83d1230b13ed046",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-01T09:57:57.011Z",
  "text": "The Binomial problems are further subdivided into linear (a+b x), quadratic (a+b x^2), general (a+b x^n) and improper (a x^m+b x^n). \nThe Trinomial problems are further subdivided into quadratic (a+b x+c x^2), quartic (a+b x^2+c x^4), general (a+b x^n+c x^(2 n)) and improper (a x^m+b x^n+c x^(2 n-m)).\nThe Miscellaneous problems are further subdivided into rational and algebraic.\nHowever for your purposes, I strongly recommend *only* breaking the algebraic problems into the 3 basic categories: Binomial problems, Trinomial problems and Miscellaneous problems.\nIn the test-suite zip files you downloaded from Rubi's old website, there is a folder for each of these 3 categories containing the files for that category.\nI look forward to seeing the table and/or bar chart you generate.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p>&quot;However for your purposes, I strongly recommend only breaking the algebraic problems into the 3 basic categories: Binomial problems, Trinomial problems and Miscellaneous problems.&quot;</p><p>Ok, thanks. So this means  </p><p>Algebraic Binomial problems: files 13..29<br>Algebraic Trinomial problems: Files 30..47<br>Algebraic Miscellaneous problems: Files 48..49</p><p>For the other integrand types. it is clear which files go with which, so I am all set for now.</p><p>I do not know when I can add these, but will try to add them as soon as I can.</p>",
  "id": "5b6185343e264c713856ee42",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-01T10:02:28.645Z",
  "text": "\"However for your purposes, I strongly recommend only breaking the algebraic problems into the 3 basic categories: Binomial problems, Trinomial problems and Miscellaneous problems.\"\n\nOk, thanks. So this means  \n\nAlgebraic Binomial problems: files 13..29\nAlgebraic Trinomial problems: Files 30..47\nAlgebraic Miscellaneous problems: Files 48..49\n\nFor the other integrand types. it is clear which files go with which, so I am all set for now.\n\nI do not know when I can add these, but will try to add them as soon as I can.\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "Hot off the press:",
  "id": "5b61cd2cdefc9823f5304da8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-01T15:09:32.867Z",
  "text": "Hot off the press:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<a href=\"https://files.gitter.im/Rule-Based-Integration/Lobby/S4wq/image.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/Rule-Based-Integration/Lobby/S4wq/thumb/image.png\" alt=\"image.png\" rel=\"nofollow\"></a>",
  "id": "5b61cd31defc9823f5304db3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-01T15:09:37.690Z",
  "text": "[![image.png](https://files.gitter.im/Rule-Based-Integration/Lobby/S4wq/thumb/image.png)](https://files.gitter.im/Rule-Based-Integration/Lobby/S4wq/image.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/Rule-Based-Integration/Lobby/S4wq/thumb/image.png"
   },
   {
    "url": "https://files.gitter.im/Rule-Based-Integration/Lobby/S4wq/image.png"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2018-08-01T15:12:20.946Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "I am still working on other things, but this is the initial table. When done 3D barcharts will be there. But waiting for final special functions tests to finish, which might take a say or so. This is the last tests. getting close ! Been running these 24 hrs/7 days per week for last 2 months. My PC is getting too hot. ",
  "id": "5b61cd86ac380e3f3a145b95",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-01T15:11:02.856Z",
  "text": "I am still working on other things, but this is the initial table. When done 3D barcharts will be there. But waiting for final special functions tests to finish, which might take a say or so. This is the last tests. getting close ! Been running these 24 hrs/7 days per week for last 2 months. My PC is getting too hot. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-08-01T23:07:07.237Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p>Hello;<br>About translating the test file 8_special_functions/8.10_formal_derivatives to sagemath and sympy.<br>I am having hard time translating formal derivatives, such as <code>Derivative[n][f][x]</code> and <code>Derivative[1][f][Sin[x]]</code>. From what little research I found, I do not think the other CAS systems support these. If I write <code>diff(f(x),n)</code> then it gives zero in sagemath.  There was a question on this at sagemath here <a href=\"https://ask.sagemath.org/question/30330/derivative-of-order-varm-returns-0/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ask.sagemath.org/question/30330/derivative-of-order-varm-returns-0/</a>  and it seems there is no way to enter these. Never mind trying to figure <code>Derivative[1][f][Sin[x]]</code>. I do not know now how to translate this to sagemath or sympy. If I leave these problems in the test file, they will return all zero, and will count as passed, as no verification is done. </p><p>Is it possible, just for now, to remove these few problems from this one file for all CAS systems, that have these formal derivatives so I can run the this test? Any suggestions? I can do this on my end only. There are few such problems in this file. I will have to remove same problems from all the CAS inputs and run the test for this one file since all CAS have to have same number of problems.</p>",
  "id": "5b623be2c917d40dc22f3ec8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-01T23:01:54.526Z",
  "text": "Hello;\nAbout translating the test file 8_special_functions/8.10_formal_derivatives to sagemath and sympy.\nI am having hard time translating formal derivatives, such as `Derivative[n][f][x]` and `Derivative[1][f][Sin[x]]`. From what little research I found, I do not think the other CAS systems support these. If I write `diff(f(x),n)` then it gives zero in sagemath.  There was a question on this at sagemath here https://ask.sagemath.org/question/30330/derivative-of-order-varm-returns-0/  and it seems there is no way to enter these. Never mind trying to figure `Derivative[1][f][Sin[x]]`. I do not know now how to translate this to sagemath or sympy. If I leave these problems in the test file, they will return all zero, and will count as passed, as no verification is done. \n\nIs it possible, just for now, to remove these few problems from this one file for all CAS systems, that have these formal derivatives so I can run the this test? Any suggestions? I can do this on my end only. There are few such problems in this file. I will have to remove same problems from all the CAS inputs and run the test for this one file since all CAS have to have same number of problems.\n",
  "unread": false,
  "urls": [
   {
    "url": "https://ask.sagemath.org/question/30330/derivative-of-order-varm-returns-0/"
   }
  ],
  "v": 5
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> First of all, exactly such situations is the reason I proposed to move everything into a <em>repository</em> on GitHub. Every repository can have different <em>branches</em> and each of these branches can have changes that are not on the other branches. One use-case for this is for instance if you need to support different versions of Mathematica where the package needs to be adapted for e.g. older versions. What we currently have for the test-cases is basically the worst set-up. Albert is having the <em>master copy</em> and when you fix a test-case, you send it to Albert and he includes it. If we had the test-cases on GitHub, the situation would be vastly different. Each of us can <em>pull changes</em> from the online repository and each of us has all branches and you can switch easily between them. If you (Nasser) want to make something like you proposed, you would simply create a new branch locally and you can do everything you like. If you think this branch is not only important for you, but for everyone, then you simply <em>push</em> the changes to GitHub and after synchronizing my local copy, I would have your branch available too. This is the main reason I proposed GitHub, because you can imaging if we had 10 developers doing different stuff, Albert would go crazy if everyone sends him his changes.",
  "id": "5b624444f7af1e2c4249e3e5",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-01T23:37:40.671Z",
  "text": "@nasser1 First of all, exactly such situations is the reason I proposed to move everything into a *repository* on GitHub. Every repository can have different *branches* and each of these branches can have changes that are not on the other branches. One use-case for this is for instance if you need to support different versions of Mathematica where the package needs to be adapted for e.g. older versions. What we currently have for the test-cases is basically the worst set-up. Albert is having the *master copy* and when you fix a test-case, you send it to Albert and he includes it. If we had the test-cases on GitHub, the situation would be vastly different. Each of us can *pull changes* from the online repository and each of us has all branches and you can switch easily between them. If you (Nasser) want to make something like you proposed, you would simply create a new branch locally and you can do everything you like. If you think this branch is not only important for you, but for everyone, then you simply *push* the changes to GitHub and after synchronizing my local copy, I would have your branch available too. This is the main reason I proposed GitHub, because you can imaging if we had 10 developers doing different stuff, Albert would go crazy if everyone sends him his changes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Secondly, so what you are saying is that other CAS don&#39;t have the notion of an derivative of an unknown function that cannot be evaluated? What happens if you do <code>D[f[x],x]</code> in sagemath?",
  "id": "5b6244d0077e1c2db7081307",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-01T23:40:00.381Z",
  "text": "@nasser1 Secondly, so what you are saying is that other CAS don't have the notion of an derivative of an unknown function that cannot be evaluated? What happens if you do `D[f[x],x]` in sagemath?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span>  <span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Nasser, just remove the formal derivatives test file for your test suite.",
  "id": "5b62450e74470f5c983a7dfa",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   },
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-01T23:41:02.264Z",
  "text": "@nasser1  @halirutan Nasser, just remove the formal derivatives test file for your test suite.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-01T23:43:01.173Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  You can do <code>D[f[x],x]</code> in sagemath, no problem. It just returns back the input as expected.</p><pre><code> sage: <span class=\"function\"><span class=\"title\">var</span><span class=\"params\">(<span class=\"string\">'x'</span>)</span></span>\n sage: <span class=\"function\"><span class=\"title\">function</span><span class=\"params\">(<span class=\"string\">'f'</span>)</span></span>\n sage: <span class=\"function\"><span class=\"title\">diff</span><span class=\"params\">(f(x)</span></span>,x)\n       <span class=\"function\"><span class=\"title\">diff</span><span class=\"params\">(f(x)</span></span>, x)</code></pre><p>It is the formal derivatives which do not work. say nth derivative, where n is symbol.</p>",
  "id": "5b62456985278d705e72a875",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-01T23:42:33.268Z",
  "text": "@halirutan  You can do `D[f[x],x]` in sagemath, no problem. It just returns back the input as expected.\n\n     sage: var('x')\n     sage: function('f')\n     sage: diff(f(x),x)\n           diff(f(x), x)\n\nIt is the formal derivatives which do not work. say nth derivative, where n is symbol.\n\n\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  Ok. thanks. Will remove the few problems with formal derivatives for now, so I can finish the tests.",
  "id": "5b6245a03bca002dcbaeff07",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-01T23:43:28.803Z",
  "text": "@AlbertRich  Ok. thanks. Will remove the few problems with formal derivatives for now, so I can finish the tests.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Before you remove them, can you make a copy of the whole test-suite directory so that we can use this as a base for the repository?",
  "id": "5b6245ca1b7c6059e2f73d1c",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-01T23:44:10.319Z",
  "text": "@nasser1 Before you remove them, can you make a copy of the whole test-suite directory so that we can use this as a base for the repository?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Use the test suite you got from Rubi&#39;s old website.",
  "id": "5b624603cf8ab4758a90455c",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-01T23:45:07.709Z",
  "text": "@halirutan Use the test suite you got from Rubi's old website.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>   I am just removing these few problems from my copy of the file <code>_special_functions/8.10_formal_derivatives.txt</code> I downloaded from Albert site. The Master copy is always at Albert site.  This is just so I can run the tests and finish this one test for now. ",
  "id": "5b624649e8698a2dcaf79216",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-01T23:46:17.310Z",
  "text": "@halirutan   I am just removing these few problems from my copy of the file `_special_functions/8.10_formal_derivatives.txt` I downloaded from Albert site. The Master copy is always at Albert site.  This is just so I can run the tests and finish this one test for now. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> I have to clone the whole website only to get those files. If nasser has already a clean directory with all the files, he can just zip them together and send them to me. Or do you have a link where I can download everything at once?",
  "id": "5b62465b077e1c2db708130a",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-01T23:46:35.388Z",
  "text": "@AlbertRich I have to clone the whole website only to get those files. If nasser has already a clean directory with all the files, he can just zip them together and send them to me. Or do you have a link where I can download everything at once?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-01T23:48:20.833Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  I will send you copy of the the <code>8_special_functions/8.10_formal_derivatives.txt</code> file after I remove these few problems. I am working on it now.",
  "id": "5b62468cc79ebc1ae797ccec",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-01T23:47:24.594Z",
  "text": "@halirutan  I will send you copy of the the `8_special_functions/8.10_formal_derivatives.txt` file after I remove these few problems. I am working on it now.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "One reason, why I haven&#39;t created a repo for the test-suite yet is that I think we should also provide (at least for Mathematica) the functions we use to <em>run the tests</em>. My goal is that a user can say, e.g. <code>RunTestFile[file]</code> and sees how this works.",
  "id": "5b6246b11b7c6059e2f73d21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-01T23:48:01.194Z",
  "text": "One reason, why I haven't created a repo for the test-suite yet is that I think we should also provide (at least for Mathematica) the functions we use to *run the tests*. My goal is that a user can say, e.g. `RunTestFile[file]` and sees how this works.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> The master copy of the Mathematica test suite is available as a zip file at<br><a href=\"http://www.apmaths.uwo.ca/~arich/IntegrationProblems/MathematicaSyntaxFiles/MathematicaSyntaxFiles.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://www.apmaths.uwo.ca/~arich/IntegrationProblems/MathematicaSyntaxFiles/MathematicaSyntaxFiles.html</a><br>and go to the bottom of the page and click on &quot;Rubi integration test-suite&quot; link.  Similarly for Axiom, Maple and Maxima versions of the test suite.",
  "id": "5b6247bea9426c705d16708c",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-01T23:52:30.344Z",
  "text": "@halirutan The master copy of the Mathematica test suite is available as a zip file at \nhttp://www.apmaths.uwo.ca/~arich/IntegrationProblems/MathematicaSyntaxFiles/MathematicaSyntaxFiles.html\nand go to the bottom of the page and click on \"Rubi integration test-suite\" link.  Similarly for Axiom, Maple and Maxima versions of the test suite.",
  "unread": false,
  "urls": [
   {
    "url": "http://www.apmaths.uwo.ca/~arich/IntegrationProblems/MathematicaSyntaxFiles/MathematicaSyntaxFiles.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> And do we want to make different repositories for each CAS?",
  "id": "5b6247ef2a180a3035c09777",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-01T23:53:19.133Z",
  "text": "@AlbertRich And do we want to make different repositories for each CAS?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Yes.",
  "id": "5b6248033a5a2d2f99e0a3cd",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-01T23:53:39.269Z",
  "text": "@halirutan Yes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "OK, sounds like a good plan to me too.",
  "id": "5b624818d1a7fd4cdb0e64ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-01T23:54:00.813Z",
  "text": "OK, sounds like a good plan to me too.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Since you proof-read my post, I have a question if you can spare some more minutes. In my opinion, it is absolutely unnecessary to change all Rubi rules upfront for showing steps. When I see this correctly, then the following approach would work too without injecting any code:",
  "id": "5b639b88f7af1e2c4249e7ef",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:02:16.221Z",
  "text": "@AlbertRich Since you proof-read my post, I have a question if you can spare some more minutes. In my opinion, it is absolutely unnecessary to change all Rubi rules upfront for showing steps. When I see this correctly, then the following approach would work too without injecting any code:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<ol>\n<li>When using Steps/Stats we don&#39;t <em>call</em> <code>Int[..,x]</code> but we use <code>MatchQ</code> with the DownValues of <code>Int</code> and find the matching rules.</li>\n<li>We extract the pretty-printed information from the rule that matches and <em>remeber</em> all other things we need</li>\n<li>We make exactly one step by using <code>Replace[ currentExpr, foundRule]</code> and go to 1. again</li>\n</ol>\n",
  "id": "5b639c26e1309370a4a12b93",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:04:54.765Z",
  "text": "1. When using Steps/Stats we don't *call* `Int[..,x]` but we use `MatchQ` with the DownValues of `Int` and find the matching rules.\n2. We extract the pretty-printed information from the rule that matches and *remeber* all other things we need\n3. We make exactly one step by using `Replace[ currentExpr, foundRule]` and go to 1. again",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "This has so many advantages. First, we never need to adjust the rules. Secondly, we never gather information about all 6600+ rules but only the ones used for the current integration. Thirdly, no global variable that defines upfront if we want to show steps. It simply works.",
  "id": "5b639c9221fbb2747af6ed5c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:06:42.544Z",
  "text": "This has so many advantages. First, we never need to adjust the rules. Secondly, we never gather information about all 6600+ rules but only the ones used for the current integration. Thirdly, no global variable that defines upfront if we want to show steps. It simply works.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Sounds intriguing.  Basically you are creating your own expression evaluation mechanism which gives you complete control over the process.",
  "id": "5b639ce3e8698a2dcafd4045",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:08:03.590Z",
  "text": "@halirutan Sounds intriguing.  Basically you are creating your own expression evaluation mechanism which gives you complete control over the process.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Yes, exactly. This is not unknown territory either. It has been used many times when users wanted to look at evaluations step by step.",
  "id": "5b639d0c21fbb2747af6ed5e",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:08:44.937Z",
  "text": "@AlbertRich Yes, exactly. This is not unknown territory either. It has been used many times when users wanted to look at evaluations step by step.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> In addition, this solves two more problems: 1. We can create one blazingly fast <code>.mx</code> file for all rules on the first loading of the package.",
  "id": "5b639d32e1309370a4a12b95",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:09:22.796Z",
  "text": "@AlbertRich In addition, this solves two more problems: 1. We can create one blazingly fast `.mx` file for all rules on the first loading of the package.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Secondly, since rules never change (we don&#39;t inject code in them), we can use our own loading mechanism (replacing <code>Get</code> on the rule packages). We load each expression one after another BUT instead if simply evaluating it, we use a hash the uniquely identifies each rule. Now, assume I change the style of the <code>.m</code> files that are extracted from the notebooks to something like the following:",
  "id": "5b639de521fbb2747af6ed61",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:12:21.296Z",
  "text": "Secondly, since rules never change (we don't inject code in them), we can use our own loading mechanism (replacing `Get` on the rule packages). We load each expression one after another BUT instead if simply evaluating it, we use a hash the uniquely identifies each rule. Now, assume I change the style of the `.m` files that are extracted from the notebooks to something like the following:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\">NotebookPosition[file1, cell1]\nInt[<span class=\"number\">1</span>/(((a_) + (b_.)*(x_))*((c_) + (d_.)*(x_))), x_Symbol] := Int[<span class=\"number\">1</span>/(a*c + b*d*x^<span class=\"number\">2</span>), x] /; <span class=\"keyword\">FreeQ</span>[<span class=\"list\">{a, b, c, d}</span>, x] &amp;&amp; EqQ[b*c + a*d, <span class=\"number\">0</span>]\nNotebookPosition[file1, cell2]\nInt[<span class=\"number\">1</span>/(((a_.) + (b_.)*(x_))*((c_.) + (d_.)*(x_))), x_Symbol] := (b/(b*c - a*d))*Int[<span class=\"number\">1</span>/(a + b*x), x] - (d/(b*c - a*d))*Int[<span class=\"number\">1</span>/(c + d*x), x] /; <span class=\"keyword\">FreeQ</span>[<span class=\"list\">{a, b, c, d}</span>, x] &amp;&amp; NeQ[b*c - a*d, <span class=\"number\">0</span>]\n...</code></pre>",
  "id": "5b639e4ae1309370a4a12b98",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:14:02.433Z",
  "text": "```mma\nNotebookPosition[file1, cell1]\nInt[1/(((a_) + (b_.)*(x_))*((c_) + (d_.)*(x_))), x_Symbol] := Int[1/(a*c + b*d*x^2), x] /; FreeQ[{a, b, c, d}, x] && EqQ[b*c + a*d, 0]\nNotebookPosition[file1, cell2]\nInt[1/(((a_.) + (b_.)*(x_))*((c_.) + (d_.)*(x_))), x_Symbol] := (b/(b*c - a*d))*Int[1/(a + b*x), x] - (d/(b*c - a*d))*Int[1/(c + d*x), x] /; FreeQ[{a, b, c, d}, x] && NeQ[b*c - a*d, 0]\n...\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-03T00:15:29.186Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Then our loading mechanism can use the hashcode (a short number compared to the whole expression) of the rule to connect it to the position in the rule-notebook with a simple map that contains  many<code>hash -&gt; NotebookPosition[..]</code>.",
  "id": "5b639e93077e1c2db7081799",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:15:15.470Z",
  "text": "Then our loading mechanism can use the hashcode (a short number compared to the whole expression) of the rule to connect it to the position in the rule-notebook with a simple map that contains  many`hash -> NotebookPosition[..]`.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "And again, such manual loading has been used often in packages of Wolfram and I can look-up how they do it. So no unknown territory and it should work.",
  "id": "5b639f00077e1c2db708179b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:17:04.629Z",
  "text": "And again, such manual loading has been used often in packages of Wolfram and I can look-up how they do it. So no unknown territory and it should work.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Ok, go for it!<br>I assume when users open the source for a rule, they will be able to back out of the rule and see the other rules around it in order to show the context.",
  "id": "5b63a018cf8ab4758a95e509",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:21:44.573Z",
  "text": "@halirutan Ok, go for it!\nI assume when users open the source for a rule, they will be able to back out of the rule and see the other rules around it in order to show the context.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "The pedagogical implications of this project are immense.",
  "id": "5b63a09f0cfcf02fdf01ede2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:23:59.153Z",
  "text": "The pedagogical implications of this project are immense.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> This is a detail I have to think about. The best option in my opinion would be to make a <em>resource paclet</em> from the source code that is automatically downloaded. Then, the user has all notebooks on his machine and my plan is:<ol>\n<li>The Steps have an additional button to navigate to the rule</li>\n<li>On clicking it, the notebook opens and we navigate to the specific cell</li>\n<li>The user has the complete notebook open and can look around etc..</li>\n</ol>\n",
  "id": "5b63a0ed077e1c2db708179f",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:25:17.167Z",
  "text": "@AlbertRich This is a detail I have to think about. The best option in my opinion would be to make a *resource paclet* from the source code that is automatically downloaded. Then, the user has all notebooks on his machine and my plan is:\n\n1. The Steps have an additional button to navigate to the rule\n2. On clicking it, the notebook opens and we navigate to the specific cell\n3. The user has the complete notebook open and can look around etc..",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Sounds good.  But I hope you are not planning to delay the release of your blog-post until this project is done...",
  "id": "5b63a17674470f5c984040be",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:27:34.807Z",
  "text": "@halirutan Sounds good.  But I hope you are not planning to delay the release of your blog-post until this project is done...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Nope, the post is going out tonight and then we publish the Wolfram Community post before everything else.",
  "id": "5b63a198c6f86b0b4130a8cc",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:28:08.634Z",
  "text": "@AlbertRich Nope, the post is going out tonight and then we publish the Wolfram Community post before everything else.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Also we need to get the test-suite repository setup.",
  "id": "5b63a1a5c917d40dc2351ae1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:28:21.948Z",
  "text": "Also we need to get the test-suite repository setup.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Yep, I&#39;m cloning your site once again tonight. Did you think about the naming of the repositories?",
  "id": "5b63a1d32a180a3035c09bfc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:29:07.058Z",
  "text": "Yep, I'm cloning your site once again tonight. Did you think about the naming of the repositories?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Should we stick to <code>MathematicaSyntaxTestSuite</code> and similar for the others?",
  "id": "5b63a1ff077e1c2db70817a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:29:51.845Z",
  "text": "Should we stick to `MathematicaSyntaxTestSuite` and similar for the others?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Or simply <code>MathematicaTestSuite</code>?",
  "id": "5b63a21521fbb2747af6ed67",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:30:13.565Z",
  "text": "Or simply `MathematicaTestSuite`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-03T00:33:20.099Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> I definitely prefer MathematicaSyntaxTestSuite, etc. since the test-suites can and are being using for multiple systems.  For example, the MathematicaSyntaxTestSuite is used to test both Mathematica&#39;s built-in integrator and Rubi.  The MapleSyntaxTestSuite is used to test Maple and Sympy, etc.",
  "id": "5b63a2bcc917d40dc2352132",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:33:00.919Z",
  "text": "@halirutan I definitely prefer MathematicaSyntaxTestSuite, etc. since the test-suites can and are being using for multiple systems.  For example, the MathematicaSyntaxTestSuite is used to test both Mathematica's built-in integrator and Rubi.  The MapleSyntaxTestSuite is used to test Maple and Sympy, etc.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Good argument. Let&#39;s use this then.",
  "id": "5b63a2ec1b7c6059e2f74154",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:33:48.153Z",
  "text": "@AlbertRich Good argument. Let's use this then.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> </p><blockquote>\n<p>Yep, I&#39;m cloning your site once again tonight.</p></blockquote>\n<p>Instead of cloning the site, all you need to do is download the 4 zip files, or I can email them to you.</p>",
  "id": "5b63a368cf8ab4758a95f713",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:35:52.759Z",
  "text": "@halirutan \n> Yep, I'm cloning your site once again tonight.\n\nInstead of cloning the site, all you need to do is download the 4 zip files, or I can email them to you.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> If they shut you down, it&#39;s better when I have a copy. Especially since the test-suites have a large, manually created html site where all files are explained.",
  "id": "5b63a38be1309370a4a12b9e",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:36:27.329Z",
  "text": "@AlbertRich If they shut you down, it's better when I have a copy. Especially since the test-suites have a large, manually created html site where all files are explained.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Ok, go for it.",
  "id": "5b63a3a66d45752f987fd03f",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:36:54.186Z",
  "text": "@halirutan Ok, go for it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "It&#39;s already running.",
  "id": "5b63a3af077e1c2db70817a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:37:03.736Z",
  "text": "It's already running.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> BTW, I also have a mirror of the site on my own computer.",
  "id": "5b63a3e4e8698a2dcafd67e5",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:37:56.259Z",
  "text": "@halirutan BTW, I also have a mirror of the site on my own computer.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Please send me your blog-post when you have made all the changes you want.",
  "id": "5b63a4610cfcf02fdf02020a",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T00:40:01.229Z",
  "text": "@halirutan Please send me your blog-post when you have made all the changes you want.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> <a href=\"http://halirutan.de/programming/Rubi/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Here is the blog-post</a>",
  "id": "5b63b6801b7c6059e2f74159",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T01:57:20.413Z",
  "text": "@AlbertRich [Here is the blog-post](http://halirutan.de/programming/Rubi/)",
  "unread": false,
  "urls": [
   {
    "url": "http://halirutan.de/programming/Rubi/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "And btw, congratulations to you:",
  "id": "5b63b6b1d1a7fd4cdb0e6909",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T01:58:09.669Z",
  "text": "And btw, congratulations to you:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<a href=\"http://i.imgur.com/ogSsQw1.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://i.imgur.com/ogSsQw1.png</a>",
  "id": "5b63b6b2077e1c2db70817b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T01:58:10.994Z",
  "text": "http://i.imgur.com/ogSsQw1.png",
  "unread": false,
  "urls": [
   {
    "url": "http://i.imgur.com/ogSsQw1.png"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2018-08-03T02:23:21.632Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Thanks!  I must have inherited my editing abilities from my sister, who is an English teacher.<br>So who is C.E. ???",
  "id": "5b63bc7e5d1362758b257524",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T02:22:54.011Z",
  "text": "@halirutan Thanks!  I must have inherited my editing abilities from my sister, who is an English teacher.\nSo who is C.E. ???",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> It is always nice to have a native speaker looking over text. However, you are correct. Not everyone has a feel for the flow of text and how to improve it to make it sound nice.",
  "id": "5b63bd1cd1a7fd4cdb0e690d",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T02:25:32.956Z",
  "text": "@AlbertRich It is always nice to have a native speaker looking over text. However, you are correct. Not everyone has a feel for the flow of text and how to improve it to make it sound nice.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "So you clearly have inherited something from your sister.",
  "id": "5b63bd36d1a7fd4cdb0e6910",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T02:25:58.255Z",
  "text": "So you clearly have inherited something from your sister.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Your command of English is almost perfect.",
  "id": "5b63c376c917d40dc235bf4c",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T02:52:38.002Z",
  "text": "@halirutan Your command of English is almost perfect.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> I&#39;m really working hard on it, believe me. Each day I have about 1 hour of an English audiobook when I drive to work and back. I watch every movie in English. I read myself aloud to get used to the pronunciation.  And I talk as often as I can to English people. ",
  "id": "5b63c3edc6f86b0b4130a8f3",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T02:54:37.051Z",
  "text": "@AlbertRich I'm really working hard on it, believe me. Each day I have about 1 hour of an English audiobook when I drive to work and back. I watch every movie in English. I read myself aloud to get used to the pronunciation.  And I talk as often as I can to English people. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-03T02:59:58.847Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> You know what they say:<br>You&#39;re bilingual if you speak two languages, trilingual if you speak three, and American if you speak just one. :smile:<br>Unfortunately, that&#39;s applicable to me.  I nearly flunked out of German in college (UT Austin).",
  "id": "5b63c5105d1362758b25a390",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T02:59:28.234Z",
  "text": "@halirutan You know what they say:\nYou're bilingual if you speak two languages, trilingual if you speak three, and American if you speak just one. :smile:\nUnfortunately, that's applicable to me.  I nearly flunked out of German in college (UT Austin).",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> I hated languages in school. It was only when I met friends from Scotland and France that I somehow started to like languages.  ",
  "id": "5b63c55dd1a7fd4cdb0e6916",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T03:00:45.539Z",
  "text": "@AlbertRich I hated languages in school. It was only when I met friends from Scotland and France that I somehow started to like languages.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> I&#39;m afraid I&#39;m too old (69) and lazy to start.",
  "id": "5b63c5ac79bfdf5c998f7d1b",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T03:02:04.974Z",
  "text": "@halirutan I'm afraid I'm too old (69) and lazy to start.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> You said that about the fancy internet stuff (and the chat we using right now) as well!?",
  "id": "5b63c5edf7af1e2c4249e806",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T03:03:09.398Z",
  "text": "@AlbertRich You said that about the fancy internet stuff (and the chat we using right now) as well!?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "And here we are.. so maybe not. For me it is <em>exposure</em>. I want to talk to someone. ",
  "id": "5b63c633f7af1e2c4249e809",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T03:04:19.767Z",
  "text": "And here we are.. so maybe not. For me it is *exposure*. I want to talk to someone. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Believe me, German&#39;s a lot harder than that.",
  "id": "5b63c640945df30dc14799f3",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T03:04:32.960Z",
  "text": "@halirutan Believe me, German's a lot harder than that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> I know! I taught enough people over the years. ",
  "id": "5b63c654f7af1e2c4249e80b",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-03T03:04:52.856Z",
  "text": "@AlbertRich I know! I taught enough people over the years. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> in terms of tagging the rules and opening the position in the source, how were you planning on tackling that? I think the <code>NotebookPosition</code> idea is interesting, but if possible it&#39;d be best to use something like the <code>CellTags</code>. If you have a <code>NotebookObject</code> (or a .nb file) this allows the FE to automatically load and scroll to that position.",
  "id": "5b63def404436a1ae60c7b1a",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-03T04:49:56.664Z",
  "text": "@halirutan in terms of tagging the rules and opening the position in the source, how were you planning on tackling that? I think the `NotebookPosition` idea is interesting, but if possible it'd be best to use something like the `CellTags`. If you have a `NotebookObject` (or a .nb file) this allows the FE to automatically load and scroll to that position.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "That&#39;s how the in-notebook hyperlinks work:",
  "id": "5b63dfe35d1362758b26295e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-03T04:53:55.748Z",
  "text": "That's how the in-notebook hyperlinks work:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "<pre><code class=\"mathematica\"><span class=\"keyword\">AbsoluteCurrentValue</span>[\n  <span class=\"keyword\">EvaluationNotebook</span>[], <span class=\"list\">{StyleDefinitions, \"Hyperlink\", \n   ButtonBoxOptions}</span>\n  ]~Lookup~ButtonBoxOptionsButtonFunction\n\n<span class=\"keyword\">FrontEndExecute</span>[<span class=\"list\">{NotebookLocate[#2, \n    \"OpenInNewWindow\" -&gt; CurrentValue[\"HyperlinkModifierKey\"]]}</span>] &amp;</code></pre>",
  "id": "5b63dfee6d45752f9880fb36",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-03T04:54:06.954Z",
  "text": "```mathematica\nAbsoluteCurrentValue[\n  EvaluationNotebook[], {StyleDefinitions, \"Hyperlink\", \n   ButtonBoxOptions}\n  ]~Lookup~ButtonBoxOptionsButtonFunction\n\nFrontEndExecute[{NotebookLocate[#2, \n    \"OpenInNewWindow\" -> CurrentValue[\"HyperlinkModifierKey\"]]}] &\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "If you build the .m from .nb this works fine, but if not life is not as good",
  "id": "5b63e0395d1362758b262a21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-03T04:55:21.597Z",
  "text": "If you build the .m from .nb this works fine, but if not life is not as good",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "One final thing is that I think the resource paclet idea for loading rule updates is the right one. You can apply versioning that allows the .mx to be loaded <em>just</em> for the version at hand, which is important as I&#39;ve heard whisperings about cross-version incompatibilities in .mx that I&#39;ve never tested.",
  "id": "5b63e149c79ebc1ae79eb77e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-03T04:59:53.838Z",
  "text": "One final thing is that I think the resource paclet idea for loading rule updates is the right one. You can apply versioning that allows the .mx to be loaded *just* for the version at hand, which is important as I've heard whisperings about cross-version incompatibilities in .mx that I've never tested.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "On the other hand I know nothing about the state of the paclet manager pre 11.0 so if you want to make it possible for Rubi to work as a paclet all the way back to version 7.0 you may need to play some games / talk to Todd Gayley about force-loading a newer PacletManager paclet.",
  "id": "5b63e1523a5a2d2f99e7aac2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-03T05:00:02.646Z",
  "text": "On the other hand I know nothing about the state of the paclet manager pre 11.0 so if you want to make it possible for Rubi to work as a paclet all the way back to version 7.0 you may need to play some games / talk to Todd Gayley about force-loading a newer PacletManager paclet.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"b3m2a1\" class=\"mention\">@b3m2a1</span> Hey! <code>NotebookPosition</code> was indeed only some arbitrary head with no meaning. It was just to point out how the workflow of knowing the position could work out. There are still other gaps to close, but the manual loading of a .m file was the important idea.",
  "id": "5b643294c6f86b0b4130a9d9",
  "issues": [],
  "mentions": [
   {
    "screenName": "b3m2a1",
    "userId": "5b63dd4fd73408ce4fa353d6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-03T10:46:44.256Z",
  "text": "@b3m2a1 Hey! `NotebookPosition` was indeed only some arbitrary head with no meaning. It was just to point out how the workflow of knowing the position could work out. There are still other gaps to close, but the manual loading of a .m file was the important idea.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "What I know at the moment of turning a <code>.nb</code> file into an <code>.m</code> file is the file-name and the index of each &quot;code cell&quot;. If everything works out as I planned it, the workflow is as follows:",
  "id": "5b643661077e1c2db70818d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-03T11:02:57.232Z",
  "text": "What I know at the moment of turning a `.nb` file into an `.m` file is the file-name and the index of each \"code cell\". If everything works out as I planned it, the workflow is as follows:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-03T11:08:17.402Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<ol>\n<li>When Rubi uses a particular integration rule, I have a function that returns the file-name and code cell index for this rule</li>\n<li>I read the notebook-expression from the resource folder using the file-name</li>\n<li>I iterate through all cells and count how many code-cells I have seen. When I reach the index I need , ...</li>\n<li>... I add <code>CellTags</code> to this cell</li>\n<li>Then I open the notebook expression and use <code>NotebookLocate</code> to find and display the code-cell I have tagged.</li>\n</ol>\nDoes this sound reasonable?",
  "id": "5b643762c6f86b0b4130a9e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-03T11:07:14.607Z",
  "text": "1. When Rubi uses a particular integration rule, I have a function that returns the file-name and code cell index for this rule\n2. I read the notebook-expression from the resource folder using the file-name\n3. I iterate through all cells and count how many code-cells I have seen. When I reach the index I need , ...\n4. ... I add `CellTags` to this cell\n5. Then I open the notebook expression and use `NotebookLocate` to find and display the code-cell I have tagged.\n\nDoes this sound reasonable?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"b3m2a1\" class=\"mention\">@b3m2a1</span> To prove my point. This here works:",
  "id": "5b644002f7af1e2c4249e94d",
  "issues": [],
  "mentions": [
   {
    "screenName": "b3m2a1",
    "userId": "5b63dd4fd73408ce4fa353d6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-03T11:44:02.551Z",
  "text": "@b3m2a1 To prove my point. This here works:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-03T11:44:51.813Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\">OpenCodeCellAt[file_String /; <span class=\"keyword\">FileExistsQ</span>[file], index_Integer /; index &gt; <span class=\"number\">0</span>] := \n  <span class=\"keyword\">Module</span>[\n    <span class=\"list\">{nb = Import[file], pos, cell, doc}</span>,\n    pos = <span class=\"keyword\">Position</span>[nb, <span class=\"keyword\">Cell</span>[_, <span class=\"string\">\"Code\"</span>, __]];\n    cell = <span class=\"keyword\">Extract</span>[nb, pos[[index]]]  /.  <span class=\"keyword\">Cell</span>[args__] :&gt; <span class=\"keyword\">Cell</span>[args, <span class=\"keyword\">CellTags</span> -&gt; <span class=\"list\">{\"CurrentRule\"}</span>];\n    doc = <span class=\"keyword\">CreateDocument</span>[<span class=\"keyword\">ReplacePart</span>[nb, pos[[index]] -&gt; cell]];\n    <span class=\"keyword\">NotebookLocate</span>[<span class=\"string\">\"CurrentRule\"</span>]\n  ]</code></pre>",
  "id": "5b64400d2a180a3035c09cef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-03T11:44:13.022Z",
  "text": "```mma\nOpenCodeCellAt[file_String /; FileExistsQ[file], index_Integer /; index > 0] := \n  Module[\n    {nb = Import[file], pos, cell, doc},\n    pos = Position[nb, Cell[_, \"Code\", __]];\n    cell = Extract[nb, pos[[index]]]  /.  Cell[args__] :> Cell[args, CellTags -> {\"CurrentRule\"}];\n    doc = CreateDocument[ReplacePart[nb, pos[[index]] -> cell]];\n    NotebookLocate[\"CurrentRule\"]\n  ]\n```",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> you can do one better if you open the <code>NotebookObject</code> silently (via <code>Visible-&gt;False</code>). There you can just use <code>Cells[nb, CellStyle-&gt;&quot;Code&quot;][[4]]</code> and then add the <code>CellTags</code> via <code>SetOptions</code>. Finally, you do a <code>FrontEnd`NotebookSuspendScreenUpdates</code>, set the notebook to <code>Visible</code> and it&#39;s relatively seamless",
  "id": "5b64b6e2e9ab53770c866f44",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-03T20:11:14.256Z",
  "text": "@halirutan you can do one better if you open the `NotebookObject` silently (via `Visible->False`). There you can just use `Cells[nb, CellStyle->\"Code\"][[4]]` and then add the `CellTags` via `SetOptions`. Finally, you do a ``FrontEnd`NotebookSuspendScreenUpdates``, set the notebook to `Visible` and it's relatively seamless",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "Here&#39;s an implementation of that:",
  "id": "5b64b6e8c79ebc1ae7a3bc6b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-03T20:11:20.082Z",
  "text": "Here's an implementation of that:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "<pre><code class=\"mathematica\">OpenCodeCellAt1[file_String /; <span class=\"keyword\">FileExistsQ</span>[file], \n  index_Integer /; index &gt; <span class=\"number\">0</span>] := \n <span class=\"keyword\">Module</span>[<span class=\"list\">{nb = NotebookOpen[file, Visible -&gt; False], pos, cell, doc}</span>,\n  cell = <span class=\"keyword\">Cells</span>[nb, <span class=\"keyword\">CellStyle</span> -&gt; <span class=\"string\">\"Code\"</span>][[index]];\n  Internal`WithLocalSettings[\n   <span class=\"keyword\">Null</span>,\n   <span class=\"keyword\">FrontEndExecute</span>@\n    <span class=\"list\">{\n     FrontEnd`SetOptions[cell, CellTags -&gt; \"CurrentRule\"],\n     FrontEnd`NotebookSuspendScreenUpdates[nb],\n     FrontEnd`SetOptions[nb, Visible -&gt; True],\n     FrontEnd`SetSelectedNotebook[nb],\n     FrontEnd`NotebookLocate[\"CurrentRule\"],\n     FrontEnd`NotebookResumeScreenUpdates[nb]\n     }</span>,\n   <span class=\"keyword\">Quiet</span>@<span class=\"keyword\">FrontEndExecute</span>@FrontEnd`NotebookResumeScreenUpdates[nb]\n   ]\n  ]</code></pre>",
  "id": "5b64b6f685278d705e7ebdce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-03T20:11:34.742Z",
  "text": "```mathematica\nOpenCodeCellAt1[file_String /; FileExistsQ[file], \n  index_Integer /; index > 0] := \n Module[{nb = NotebookOpen[file, Visible -> False], pos, cell, doc},\n  cell = Cells[nb, CellStyle -> \"Code\"][[index]];\n  Internal`WithLocalSettings[\n   Null,\n   FrontEndExecute@\n    {\n     FrontEnd`SetOptions[cell, CellTags -> \"CurrentRule\"],\n     FrontEnd`NotebookSuspendScreenUpdates[nb],\n     FrontEnd`SetOptions[nb, Visible -> True],\n     FrontEnd`SetSelectedNotebook[nb],\n     FrontEnd`NotebookLocate[\"CurrentRule\"],\n     FrontEnd`NotebookResumeScreenUpdates[nb]\n     },\n   Quiet@FrontEndExecute@FrontEnd`NotebookResumeScreenUpdates[nb]\n   ]\n  ]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "This can be a bit faster. The one issue is that you might want a more specific tag than <code>&quot;CurrentRule&quot;</code> as <code>NotebookOpen</code> won&#39;t open the same file twice. That&#39;s nice on the one hand, but means you need different tags for different rules.",
  "id": "5b64b75ae9ab53770c867082",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-03T20:13:14.081Z",
  "text": "This can be a bit faster. The one issue is that you might want a more specific tag than `\"CurrentRule\"` as `NotebookOpen` won't open the same file twice. That's nice on the one hand, but means you need different tags for different rules.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "You should probably put an &quot;is open&quot; check in there via <code>Notebooks[file]</code>... if it&#39;s open don&#39;t set <code>Visible-&gt;False</code> or <code>True</code> and don&#39;t use the <code>FrontEnd`NotebookSuspendScreenUpdates</code>",
  "id": "5b64b7c6cf8ab4758a9c3b0e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-03T20:15:02.291Z",
  "text": "You should probably put an \"is open\" check in there via `Notebooks[file]`... if it's open don't set `Visible->False` or `True` and don't use the ``FrontEnd`NotebookSuspendScreenUpdates``",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "If I remember correctly I used a scheme kinda like this for <a href=\"https://github.com/b3m2a1/mathematica-tools#oldhelpbrowser\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">this thing</a> I wrote with Nasser&#39;s input.",
  "id": "5b64b824cf8ab4758a9c3cf4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-03T20:16:36.500Z",
  "text": "If I remember correctly I used a scheme kinda like this for [this thing](https://github.com/b3m2a1/mathematica-tools#oldhelpbrowser) I wrote with Nasser's input.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/b3m2a1/mathematica-tools#oldhelpbrowser"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"b3m2a1\" class=\"mention\">@b3m2a1</span> That appears to be superior however, there is one thing: When the user makes edits in the notebook, the he changes the original source notebook. So it might be better to still use <code>Import</code> but open this expression as new document and proceed as you suggest. As this will always create a new copy that the user can edit as he likes, I don&#39;t see much of a problem when using a generic tag. There will always be one such tag in the notebook.",
  "id": "5b64ddced1a7fd4cdb0e6b5d",
  "issues": [],
  "mentions": [
   {
    "screenName": "b3m2a1",
    "userId": "5b63dd4fd73408ce4fa353d6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-03T22:57:18.128Z",
  "text": "@b3m2a1 That appears to be superior however, there is one thing: When the user makes edits in the notebook, the he changes the original source notebook. So it might be better to still use `Import` but open this expression as new document and proceed as you suggest. As this will always create a new copy that the user can edit as he likes, I don't see much of a problem when using a generic tag. There will always be one such tag in the notebook.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> You do hit the issue that any time a user asks for the source of something they get a new notebook. If you&#39;d like to not open the source, I&#39;d create a variable where you store the currently open notebook and have future lookups put the new expression into that notebook via <code>NotebookPut</code>. If the notebook has been closed (<code>NotebookInformation[nb]===$Failed</code>) then you <code>NotebookPut</code> without the object argument.",
  "id": "5b64f1da85278d705e800ac0",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:22:50.646Z",
  "text": "@halirutan You do hit the issue that any time a user asks for the source of something they get a new notebook. If you'd like to not open the source, I'd create a variable where you store the currently open notebook and have future lookups put the new expression into that notebook via `NotebookPut`. If the notebook has been closed (`NotebookInformation[nb]===$Failed`) then you `NotebookPut` without the object argument.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "That route is like what the docs do. You could also add <code>Saveable-&gt;False</code> to make it entirely like the docs. Also, if you go this route with a new <code>Notebook</code> separate from the built-in one I&#39;d use <code>Get</code> to load it. In my experience that was much faster than <code>Import</code> (and works since a .nb file just stores a <code>Notebook</code> expression).",
  "id": "5b64f1f45d1362758b2c7984",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:23:16.122Z",
  "text": "That route is like what the docs do. You could also add `Saveable->False` to make it entirely like the docs. Also, if you go this route with a new `Notebook` separate from the built-in one I'd use `Get` to load it. In my experience that was much faster than `Import` (and works since a .nb file just stores a `Notebook` expression).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"b3m2a1\" class=\"mention\">@b3m2a1</span> If it is OK, I would like to come back to you about this and maybe you like to help with this. It is a perfectly separated function that does nothing more than <code>open[file, cellIndex]</code> and I would be happy to use your contribution.",
  "id": "5b64f313f7af1e2c4249eb50",
  "issues": [],
  "mentions": [
   {
    "screenName": "b3m2a1",
    "userId": "5b63dd4fd73408ce4fa353d6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:28:03.396Z",
  "text": "@b3m2a1 If it is OK, I would like to come back to you about this and maybe you like to help with this. It is a perfectly separated function that does nothing more than `open[file, cellIndex]` and I would be happy to use your contribution.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Yeah of course. I am around.",
  "id": "5b64f34d945df30dc14e59af",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:29:01.979Z",
  "text": "@halirutan Yeah of course. I am around.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"b3m2a1\" class=\"mention\">@b3m2a1</span> In any case we both are positive about that it can be done with a relatively small amount of code.",
  "id": "5b64f3682a180a3035c09e84",
  "issues": [],
  "mentions": [
   {
    "screenName": "b3m2a1",
    "userId": "5b63dd4fd73408ce4fa353d6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:29:28.788Z",
  "text": "@b3m2a1 In any case we both are positive about that it can be done with a relatively small amount of code.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "Yeah it&#39;ll be quick and pretty easy I think.",
  "id": "5b64f418c917d40dc23cb6ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:32:24.801Z",
  "text": "Yeah it'll be quick and pretty easy I think.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"b3m2a1\" class=\"mention\">@b3m2a1</span> Would you like to think about another problem?",
  "id": "5b64f43af7af1e2c4249eb55",
  "issues": [],
  "mentions": [
   {
    "screenName": "b3m2a1",
    "userId": "5b63dd4fd73408ce4fa353d6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:32:58.837Z",
  "text": "@b3m2a1 Would you like to think about another problem?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "Sure",
  "id": "5b64f445a9426c705d23b86d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:33:09.942Z",
  "text": "Sure",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<p>When you make a definition like</p><pre><code class=\"mma\">f[x_] := x^<span class=\"number\">2</span></code></pre><p>it is turned into a <code>RuleDelayed</code> and stored in the DownValues of  <code>f</code>. </p>",
  "id": "5b64f4b5d1a7fd4cdb0e6b85",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:35:01.301Z",
  "text": "When you make a definition like\n\n```mma\nf[x_] := x^2\n```\n\nit is turned into a `RuleDelayed` and stored in the DownValues of  `f`. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "For the integrator in Rubi, we have 6600 of such definitions for the symbol <code>Int</code>. The question is, how can we create a hash from the definition so that we know, which definition is what DownValues rule?",
  "id": "5b64f516c6f86b0b4130abfa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:36:38.721Z",
  "text": "For the integrator in Rubi, we have 6600 of such definitions for the symbol `Int`. The question is, how can we create a hash from the definition so that we know, which definition is what DownValues rule?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "I have the following idea:",
  "id": "5b64f533f7af1e2c4249eb58",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:37:07.449Z",
  "text": "I have the following idea:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\"><span class=\"keyword\">SetAttributes</span>[makeHash, <span class=\"list\">{HoldAllComplete}</span>];\nmakeHash[def_, sym_Symbol] := <span class=\"keyword\">Block</span>[<span class=\"list\">{sym}</span>,\n  def;\n  <span class=\"keyword\">With</span>[<span class=\"list\">{dv = First[DownValues[sym]]}</span>,\n   <span class=\"keyword\">Hash</span>[dv]\n   ]\n]\n\nmakeHash[f[x_] := x^<span class=\"number\">2</span>, f]\n\nf[x_] := x^<span class=\"number\">2</span>;\n<span class=\"keyword\">First</span>@<span class=\"keyword\">DownValues</span>[f] // <span class=\"keyword\">Hash</span></code></pre>",
  "id": "5b64f635e1309370a4a12eeb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:41:25.420Z",
  "text": "```mma\nSetAttributes[makeHash, {HoldAllComplete}];\nmakeHash[def_, sym_Symbol] := Block[{sym},\n  def;\n  With[{dv = First[DownValues[sym]]},\n   Hash[dv]\n   ]\n]\n\nmakeHash[f[x_] := x^2, f]\n\nf[x_] := x^2;\nFirst@DownValues[f] // Hash\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"b3m2a1\" class=\"mention\">@b3m2a1</span> The reason for this is the following: When reading the Rubi rule definitions, I need a way to connect the each definition with the file and position in the notebook. So during reading the file of the following form (I posted this earlier)",
  "id": "5b64f6a3077e1c2db7081ae3",
  "issues": [],
  "mentions": [
   {
    "screenName": "b3m2a1",
    "userId": "5b63dd4fd73408ce4fa353d6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:43:15.648Z",
  "text": "@b3m2a1 The reason for this is the following: When reading the Rubi rule definitions, I need a way to connect the each definition with the file and position in the notebook. So during reading the file of the following form (I posted this earlier)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\">NotebookPosition[file1, cell1]\nInt[<span class=\"number\">1</span>/(((a_) + (b_.)*(x_))*((c_) + (d_.)*(x_))), x_Symbol] := Int[<span class=\"number\">1</span>/(a*c + b*d*x^<span class=\"number\">2</span>), x] /; <span class=\"keyword\">FreeQ</span>[<span class=\"list\">{a, b, c, d}</span>, x] &amp;&amp; EqQ[b*c + a*d, <span class=\"number\">0</span>]\nNotebookPosition[file1, cell2]\nInt[<span class=\"number\">1</span>/(((a_.) + (b_.)*(x_))*((c_.) + (d_.)*(x_))), x_Symbol] := (b/(b*c - a*d))*Int[<span class=\"number\">1</span>/(a + b*x), x] - (d/(b*c - a*d))*Int[<span class=\"number\">1</span>/(c + d*x), x] /; <span class=\"keyword\">FreeQ</span>[<span class=\"list\">{a, b, c, d}</span>, x] &amp;&amp; NeQ[b*c - a*d, <span class=\"number\">0</span>]\n...</code></pre>",
  "id": "5b64f6b8e1309370a4a12eed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:43:36.419Z",
  "text": "```mma\nNotebookPosition[file1, cell1]\nInt[1/(((a_) + (b_.)*(x_))*((c_) + (d_.)*(x_))), x_Symbol] := Int[1/(a*c + b*d*x^2), x] /; FreeQ[{a, b, c, d}, x] && EqQ[b*c + a*d, 0]\nNotebookPosition[file1, cell2]\nInt[1/(((a_.) + (b_.)*(x_))*((c_.) + (d_.)*(x_))), x_Symbol] := (b/(b*c - a*d))*Int[1/(a + b*x), x] - (d/(b*c - a*d))*Int[1/(c + d*x), x] /; FreeQ[{a, b, c, d}, x] && NeQ[b*c - a*d, 0]\n...\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "I think the idea is entirely reasonable, but I&#39;d use a decorator type syntax, like:",
  "id": "5b64f72485278d705e8023e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:45:24.433Z",
  "text": "I think the idea is entirely reasonable, but I'd use a decorator type syntax, like:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "I know the current source notebook position and I create the hash from the next <code>Int</code> definition. Later, when Rubi integrates and applies a specific rule (where I only have the DownValue), I can recalculate the exact hash and therefore extract what <code>NotebookPosition</code> I had.",
  "id": "5b64f72cc6f86b0b4130abfc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:45:32.282Z",
  "text": "I know the current source notebook position and I create the hash from the next `Int` definition. Later, when Rubi integrates and applies a specific rule (where I only have the DownValue), I can recalculate the exact hash and therefore extract what `NotebookPosition` I had.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "<pre><code class=\"mathematica\">registerDef /:\n (h : <span class=\"keyword\">Set</span> | <span class=\"keyword\">SetDelayed</span>)[registerDef[sym_[a___]], \n  d_] :=\n (\n  h[sym[a], d];\n  <span class=\"keyword\">Hash</span>[<span class=\"keyword\">HoldComplete</span>[d]]\n  )</code></pre>",
  "id": "5b64f7d2e9ab53770c87e890",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:48:18.342Z",
  "text": "```mathematica\nregisterDef /:\n (h : Set | SetDelayed)[registerDef[sym_[a___]], \n  d_] :=\n (\n  h[sym[a], d];\n  Hash[HoldComplete[d]]\n  )\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "Although I don&#39;t entirely know where that <code>Hash</code> will go",
  "id": "5b64f7e8e8698a2dca0518f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:48:40.752Z",
  "text": "Although I don't entirely know where that `Hash` will go",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "The nice thing about this is it minimizes the code footprint of the registration function",
  "id": "5b64f7fb85278d705e802b15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:48:59.200Z",
  "text": "The nice thing about this is it minimizes the code footprint of the registration function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "I&#39;ve used it often when I do metaprogramming tasks",
  "id": "5b64f8083a5a2d2f99ee0bc7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:49:12.126Z",
  "text": "I've used it often when I do metaprogramming tasks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "Where are you storing the <code>Hash</code>?",
  "id": "5b64f84d8eb2d52fde414596",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:50:21.255Z",
  "text": "Where are you storing the `Hash`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"b3m2a1\" class=\"mention\">@b3m2a1</span> That hash needs to go into a separate map <code>{hash1 -&gt; NotebookPosition2, hash2 -&gt; NotebookPosition2, ...}</code>. So during integration, we hit a rule that is showed when the user wants and in the display of this rule, we&#39;d have a button that calls the <code>OpenNotebookPosition[file, cell]</code> where the arguments are extracted by smth like <code>currentHash /. hashTable</code>.",
  "id": "5b64f882d1a7fd4cdb0e6b90",
  "issues": [],
  "mentions": [
   {
    "screenName": "b3m2a1",
    "userId": "5b63dd4fd73408ce4fa353d6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:51:14.967Z",
  "text": "@b3m2a1 That hash needs to go into a separate map `{hash1 -> NotebookPosition2, hash2 -> NotebookPosition2, ...}`. So during integration, we hit a rule that is showed when the user wants and in the display of this rule, we'd have a button that calls the `OpenNotebookPosition[file, cell]` where the arguments are extracted by smth like `currentHash /. hashTable`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"b3m2a1\" class=\"mention\">@b3m2a1</span> In your code above, the <code>Block</code> is missing which seems to be vitally important.  We evaluate many <code>Int</code> rules and Mathematica might reorder them. So I need the expression of this particular downvalue because later I wouldn&#39;t know where it is in the 6600 rules.",
  "id": "5b64f93021fbb2747af6f03a",
  "issues": [],
  "mentions": [
   {
    "screenName": "b3m2a1",
    "userId": "5b63dd4fd73408ce4fa353d6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:54:08.978Z",
  "text": "@b3m2a1 In your code above, the `Block` is missing which seems to be vitally important.  We evaluate many `Int` rules and Mathematica might reorder them. So I need the expression of this particular downvalue because later I wouldn't know where it is in the 6600 rules.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> the benefit of this syntax is I&#39;ve captured the definition without assigning the definition. <code>d</code> is the definition as fed into <code>SetDelayed</code>.",
  "id": "5b64f979e8698a2dca05201f",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:55:21.819Z",
  "text": "@halirutan the benefit of this syntax is I've captured the definition without assigning the definition. `d` is the definition as fed into `SetDelayed`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"b3m2a1\" class=\"mention\">@b3m2a1</span> And more importantly, it is not enough to hash <code>d</code>. We need to hash the complete final DownValue.",
  "id": "5b64f97cf7af1e2c4249eb5a",
  "issues": [],
  "mentions": [
   {
    "screenName": "b3m2a1",
    "userId": "5b63dd4fd73408ce4fa353d6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:55:24.117Z",
  "text": "@b3m2a1 And more importantly, it is not enough to hash `d`. We need to hash the complete final DownValue.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "You mean including <code>Condition</code> and friends?",
  "id": "5b64f99374470f5c9847ed77",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:55:47.814Z",
  "text": "You mean including `Condition` and friends?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Yes, this is important. ",
  "id": "5b64f99cd1a7fd4cdb0e6b93",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:55:56.774Z",
  "text": "Yes, this is important. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "In Rubi, the conditions are the things that matter. LHS and RHS might look the same. Only the complete rule from the DownValues gives a unique hash.",
  "id": "5b64f9de1b7c6059e2f74498",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:57:02.757Z",
  "text": "In Rubi, the conditions are the things that matter. LHS and RHS might look the same. Only the complete rule from the DownValues gives a unique hash.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "Okay I think that&#39;s still workable with only a single <code>SetDelayed</code> call, but it is undoubtedly a bit more irksome",
  "id": "5b64fa2374470f5c9847ef94",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:58:11.884Z",
  "text": "Okay I think that's still workable with only a single `SetDelayed` call, but it is undoubtedly a bit more irksome",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Think of such obscure examples like this<pre><code class=\"mma\">f[x_] := x^<span class=\"number\">2</span> /; x &gt; <span class=\"number\">2</span>;\nf[x_ + y_] := x^<span class=\"number\">2</span>;\nf[x_] := x^<span class=\"number\">3</span>;</code></pre>",
  "id": "5b64fa25e1309370a4a12eef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:58:13.868Z",
  "text": "Think of such obscure examples like this\n```mma\nf[x_] := x^2 /; x > 2;\nf[x_ + y_] := x^2;\nf[x_] := x^3;\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"b3m2a1\" class=\"mention\">@b3m2a1</span> That is the reason why I convert the definition to a DownValue within Block and rather hash the complete DV rule.",
  "id": "5b64fa6ee1309370a4a12ef1",
  "issues": [],
  "mentions": [
   {
    "screenName": "b3m2a1",
    "userId": "5b63dd4fd73408ce4fa353d6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T00:59:26.622Z",
  "text": "@b3m2a1 That is the reason why I convert the definition to a DownValue within Block and rather hash the complete DV rule.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  yeah I see the difficulty",
  "id": "5b64fb16a9426c705d23d4ef",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:02:14.707Z",
  "text": "@halirutan  yeah I see the difficulty",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "I think this will work:",
  "id": "5b64fb1bc79ebc1ae7a51d47",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:02:19.471Z",
  "text": "I think this will work:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "<pre><code class=\"mathematica\">registerDef~<span class=\"keyword\">SetAttributes</span>~<span class=\"keyword\">HoldAllComplete</span>;\nregisterDef[(h : <span class=\"keyword\">Set</span> | <span class=\"keyword\">SetDelayed</span>)[lhs_, rhs_]] :=\n  (\n   $definitionHashes[\n     <span class=\"keyword\">Hash</span>[<span class=\"keyword\">HoldComplete</span>[lhs :&gt; rhs]]] = $currentPosition;\n   h[lhs, rhs]\n   );\nregisterDef[<span class=\"keyword\">CompoundExpression</span>[a_, ___]] :=\n registerDef[a]</code></pre>",
  "id": "5b64fb26c917d40dc23cd773",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:02:30.195Z",
  "text": "```mathematica\nregisterDef~SetAttributes~HoldAllComplete;\nregisterDef[(h : Set | SetDelayed)[lhs_, rhs_]] :=\n  (\n   $definitionHashes[\n     Hash[HoldComplete[lhs :> rhs]]] = $currentPosition;\n   h[lhs, rhs]\n   );\nregisterDef[CompoundExpression[a_, ___]] :=\n registerDef[a]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "to be used like:",
  "id": "5b64fb2985278d705e803782",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:02:33.129Z",
  "text": "to be used like:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-04T01:03:10.972Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "<pre><code class=\"mathematica\">testF[x_] := x^<span class=\"number\">2</span> /; x &gt; <span class=\"number\">2</span>; // registerDef\ntestF[x_ + y_] /;x&gt;<span class=\"number\">2</span>:= x^<span class=\"number\">2</span>; // registerDef\ntestF[x_] := x^<span class=\"number\">3</span>; // registerDef</code></pre>",
  "id": "5b64fb3ee8698a2dca0529f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:02:54.085Z",
  "text": "```mathematica\ntestF[x_] := x^2 /; x > 2; // registerDef\ntestF[x_ + y_] /;x>2:= x^2; // registerDef\ntestF[x_] := x^3; // registerDef\n```",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "Or if you can turn your idea into a macro like:",
  "id": "5b64fbcac917d40dc23cdb3d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:05:14.673Z",
  "text": "Or if you can turn your idea into a macro like:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"b3m2a1\" class=\"mention\">@b3m2a1</span> If it is always the case that the kernel does nothing more the putting a <code>HoldPattern</code> around lhs and use a <code>:&gt;</code> then this might work.",
  "id": "5b64fbd2d1a7fd4cdb0e6b95",
  "issues": [],
  "mentions": [
   {
    "screenName": "b3m2a1",
    "userId": "5b63dd4fd73408ce4fa353d6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:05:22.208Z",
  "text": "@b3m2a1 If it is always the case that the kernel does nothing more the putting a `HoldPattern` around lhs and use a `:>` then this might work.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "<pre><code class=\"mathematica\">registerDef[sym_] :=\n <span class=\"keyword\">Function</span>[def, \n  <span class=\"keyword\">Block</span>[<span class=\"list\">{sym}</span>,\n   def;\n   $definitionHashes[<span class=\"keyword\">Hash</span>[<span class=\"keyword\">DownValues</span>[sym][[<span class=\"number\">1</span>]]]] = $currentPosition;\n   ];\n  def, \n  <span class=\"keyword\">HoldAllComplete</span>\n  ]</code></pre>",
  "id": "5b64fbe7945df30dc14e8b3d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:05:43.652Z",
  "text": "```mathematica\nregisterDef[sym_] :=\n Function[def, \n  Block[{sym},\n   def;\n   $definitionHashes[Hash[DownValues[sym][[1]]]] = $currentPosition;\n   ];\n  def, \n  HoldAllComplete\n  ]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "And then use:",
  "id": "5b64fbfc3bca002dcbbc8545",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:06:04.699Z",
  "text": "And then use:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "<pre><code class=\"mathematica\">testF[x_] := x^<span class=\"number\">2</span> /; x &gt; <span class=\"number\">2</span>; // registerDef[testF]\ntestF[x_ + y_] /; x &gt; <span class=\"number\">2</span> := x^<span class=\"number\">2</span>; // registerDef[testF]\ntestF[x_] := x^<span class=\"number\">3</span>; // registerDef[testF]</code></pre>",
  "id": "5b64fc04cf8ab4758a9d9b17",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:06:12.645Z",
  "text": "```mathematica\ntestF[x_] := x^2 /; x > 2; // registerDef[testF]\ntestF[x_ + y_] /; x > 2 := x^2; // registerDef[testF]\ntestF[x_] := x^3; // registerDef[testF]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "I thought the kernel might do exotic things with <code>Condition</code> but it appears it doesn&#39;t.",
  "id": "5b64fc206d45752f9887817b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:06:40.042Z",
  "text": "I thought the kernel might do exotic things with `Condition` but it appears it doesn't.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "It seems that instead it&#39;s the interpreter that does exotic things with <code>Condition</code> if it&#39;s on the RHS (i.e. pretending the rule was never applied)",
  "id": "5b64fc4bc79ebc1ae7a5220d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:07:23.011Z",
  "text": "It seems that instead it's the interpreter that does exotic things with `Condition` if it's on the RHS (i.e. pretending the rule was never applied)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"b3m2a1\" class=\"mention\">@b3m2a1</span> In any case, the creation of the <code>{hashkey -&gt; docPos, ..}</code> map needs to be done only once and we store this information in a file. So I don&#39;t see much problems when evaluating the definition under Block and use exactly what the kernel produces. Better safe than sorry.",
  "id": "5b64fc97d1a7fd4cdb0e6b9a",
  "issues": [],
  "mentions": [
   {
    "screenName": "b3m2a1",
    "userId": "5b63dd4fd73408ce4fa353d6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:08:39.445Z",
  "text": "@b3m2a1 In any case, the creation of the `{hashkey -> docPos, ..}` map needs to be done only once and we store this information in a file. So I don't see much problems when evaluating the definition under Block and use exactly what the kernel produces. Better safe than sorry.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "The thing I like about the no <code>Block</code> form is how direct it is. But at some level that doesn&#39;t really matter. Both versions will be very fast and once you get the MX it&#39;s all super fast.",
  "id": "5b64fca7c917d40dc23cde6a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:08:55.346Z",
  "text": "The thing I like about the no `Block` form is how direct it is. But at some level that doesn't really matter. Both versions will be very fast and once you get the MX it's all super fast.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "Yeah exactly",
  "id": "5b64fca9cf8ab4758a9d9ea0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:08:57.891Z",
  "text": "Yeah exactly",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "I&#39;d go with the macro probably. It obscures the definition the least, I think, and has the least code duplication.",
  "id": "5b64fcd274470f5c9847fe41",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:09:38.551Z",
  "text": "I'd go with the macro probably. It obscures the definition the least, I think, and has the least code duplication.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "When dealing with a large number of rules that can be important.",
  "id": "5b64fce3e9ab53770c88004f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:09:55.527Z",
  "text": "When dealing with a large number of rules that can be important.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"b3m2a1\" class=\"mention\">@b3m2a1</span> The problem is that at the moment this is not possible at all. When the user requests <code>Steps[Int[x^2,x]]</code>, we have already injected additional code in each rule. So the first problem to tackle is to not do this and always keep the original DownValues. After that, a first version of the &quot;Link to source notebook feature&quot; is probably only a few hours of work and testing.",
  "id": "5b64fd222a180a3035c09e90",
  "issues": [],
  "mentions": [
   {
    "screenName": "b3m2a1",
    "userId": "5b63dd4fd73408ce4fa353d6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:10:58.737Z",
  "text": "@b3m2a1 The problem is that at the moment this is not possible at all. When the user requests `Steps[Int[x^2,x]]`, we have already injected additional code in each rule. So the first problem to tackle is to not do this and always keep the original DownValues. After that, a first version of the \"Link to source notebook feature\" is probably only a few hours of work and testing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "(For obvious reasons a DV with injected code won&#39;t give the correct hash :smile: )",
  "id": "5b64fd48077e1c2db7081aee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:11:36.746Z",
  "text": "(For obvious reasons a DV with injected code won't give the correct hash :smile: )",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "If you and Albert decide on a large scale revamp of Rubi, rather than assigning to <code>Int</code> directly I&#39;d assign to a registration function that can do work in the middle before assigning to <code>Int</code>.",
  "id": "5b64fd530cfcf02fdf09c484",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:11:47.111Z",
  "text": "If you and Albert decide on a large scale revamp of Rubi, rather than assigning to `Int` directly I'd assign to a registration function that can do work in the middle before assigning to `Int`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "Dunno how fragile it might be with <code>Condition</code>, though",
  "id": "5b64fd5fcf8ab4758a9da012",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:11:59.277Z",
  "text": "Dunno how fragile it might be with `Condition`, though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "What kind of stuff do you inject?",
  "id": "5b64fd660cfcf02fdf09c531",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:12:06.721Z",
  "text": "What kind of stuff do you inject?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "Can you do some metaprogramming to chop it out before computing the <code>Hash</code>?",
  "id": "5b64fd800cfcf02fdf09c548",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:12:32.870Z",
  "text": "Can you do some metaprogramming to chop it out before computing the `Hash`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"b3m2a1\" class=\"mention\">@b3m2a1</span> The information about each rule as it is displayed here",
  "id": "5b64fda21b7c6059e2f7449d",
  "issues": [],
  "mentions": [
   {
    "screenName": "b3m2a1",
    "userId": "5b63dd4fd73408ce4fa353d6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:13:06.220Z",
  "text": "@b3m2a1 The information about each rule as it is displayed here",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<a href=\"http://i.stack.imgur.com/gV89e.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://i.stack.imgur.com/gV89e.png</a>",
  "id": "5b64fda4f7af1e2c4249eb67",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:13:08.728Z",
  "text": "http://i.stack.imgur.com/gV89e.png",
  "unread": false,
  "urls": [
   {
    "url": "http://i.stack.imgur.com/gV89e.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "is precomputed and injected into each of the 6600 rules during loading. ",
  "id": "5b64fdc6f7af1e2c4249eb69",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:13:42.323Z",
  "text": "is precomputed and injected into each of the 6600 rules during loading. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "Ah I see. Is there a set location in each <code>DownValue</code> where it is stored?",
  "id": "5b64fdea945df30dc14e92c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:14:18.168Z",
  "text": "Ah I see. Is there a set location in each `DownValue` where it is stored?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "I assume the original definition has to be the last thing supplied",
  "id": "5b64fdf985278d705e8044b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:14:32.999Z",
  "text": "I assume the original definition has to be the last thing supplied",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Nope, at the moment we only have these information about the each rule.",
  "id": "5b64fe1ee1309370a4a12efa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:15:09.996Z",
  "text": "Nope, at the moment we only have these information about the each rule.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "The thing is that injecting 6600 rules during loading of the complete package takes about 20s. ",
  "id": "5b64fe312a180a3035c09e93",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:15:29.261Z",
  "text": "The thing is that injecting 6600 rules during loading of the complete package takes about 20s. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "Yeah that&#39;s not really workable longterm I think",
  "id": "5b64fe403bca002dcbbc8f5c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:15:44.042Z",
  "text": "Yeah that's not really workable longterm I think",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "It would be better to do this for each rule that is acutally displayed when using <code>Steps</code> on the fly.",
  "id": "5b64fe562a180a3035c09e95",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:16:06.569Z",
  "text": "It would be better to do this for each rule that is acutally displayed when using `Steps` on the fly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "Especially if increased exposure leads to increased usage/contribution.",
  "id": "5b64fe58945df30dc14e9470",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:16:08.070Z",
  "text": "Especially if increased exposure leads to increased usage/contribution.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "What might be involved in that?",
  "id": "5b64fe65e9ab53770c880694",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:16:21.600Z",
  "text": "What might be involved in that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "You mean in &quot;doing it on the fly&quot;?",
  "id": "5b64fe75077e1c2db7081af2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:16:37.861Z",
  "text": "You mean in \"doing it on the fly\"?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "Yeah",
  "id": "5b64fe7d6d45752f98878939",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:16:45.845Z",
  "text": "Yeah",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "Also if you have these hashes could that information also be cached?",
  "id": "5b64fe93e8698a2dca053a01",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:17:07.070Z",
  "text": "Also if you have these hashes could that information also be cached?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/b3m2a1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18367787?v=4&s=60",
   "displayName": "b3m2a1",
   "gv": "4",
   "id": "5b63dd4fd73408ce4fa353d6",
   "url": "/b3m2a1",
   "username": "b3m2a1",
   "v": 3
  },
  "html": "That would be even faster",
  "id": "5b64fe9b5d1362758b2cafe1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:17:15.731Z",
  "text": "That would be even faster",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "I mean, you see what is displayed. So Albert looks at the rule and extracts the condition, a nice view of the rule, etc.. Most of the code is a lot of tweaking to create a nice printout for the conditions of the integration rule.",
  "id": "5b64fecce1309370a4a12efc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:18:04.167Z",
  "text": "I mean, you see what is displayed. So Albert looks at the rule and extracts the condition, a nice view of the rule, etc.. Most of the code is a lot of tweaking to create a nice printout for the conditions of the integration rule.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"b3m2a1\" class=\"mention\">@b3m2a1</span> We could cache the rule information as well, but I honestly don&#39;t think it is necessary. It should be fast enough to do it directly on the downvalue.",
  "id": "5b64ff41077e1c2db7081af4",
  "issues": [],
  "mentions": [
   {
    "screenName": "b3m2a1",
    "userId": "5b63dd4fd73408ce4fa353d6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:20:01.356Z",
  "text": "@b3m2a1 We could cache the rule information as well, but I honestly don't think it is necessary. It should be fast enough to do it directly on the downvalue.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "My plan is to re-use Alberts code for the moment to extract the information from a rule and just don&#39;t do it on loading, but on when <code>Steps</code> are produced. But I need to look over this again to be sure this works out.",
  "id": "5b64ffaa21fbb2747af6f03f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:21:46.694Z",
  "text": "My plan is to re-use Alberts code for the moment to extract the information from a rule and just don't do it on loading, but on when `Steps` are produced. But I need to look over this again to be sure this works out.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> I have a question. In <code>IntegrationUtilityFunctions.m</code>you use <code>FixIntRule</code> to change many of the rules. I looked over it but I want to be sure: Do you ever change the lhs or the condition to a rule?",
  "id": "5b6506802a180a3035c09e9e",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-04T01:50:56.910Z",
  "text": "@AlbertRich I have a question. In `IntegrationUtilityFunctions.m`you use `FixIntRule` to change many of the rules. I looked over it but I want to be sure: Do you ever change the lhs or the condition to a rule?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-05T08:35:19.361Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  <span data-link-type=\"mention\" data-screen-name=\"b3m2a1\" class=\"mention\">@b3m2a1</span> First I want to thank you both for taking a serious look at the optimal design of a meta-program that shows the steps <em>any</em> rule-based system, like Rubi, uses to solve mathematical problems.  For example, your meta-program should also be able to show the steps a rule-based differentiator uses to differentiate an expression.  (BTW, such a differentiator is an excellent first project that provides rapid feedback for anyone wanting to learn how to write <em>and</em> debug a rule-based system.)",
  "id": "5b66b6a95d1362758b353cdb",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   },
   {
    "screenName": "b3m2a1",
    "userId": "5b63dd4fd73408ce4fa353d6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-05T08:34:49.521Z",
  "text": "@halirutan  @b3m2a1 First I want to thank you both for taking a serious look at the optimal design of a meta-program that shows the steps *any* rule-based system, like Rubi, uses to solve mathematical problems.  For example, your meta-program should also be able to show the steps a rule-based differentiator uses to differentiate an expression.  (BTW, such a differentiator is an excellent first project that provides rapid feedback for anyone wanting to learn how to write *and* debug a rule-based system.)\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Yes, FixIntRule only changes the rhs of rules by replacing expressions of the form a*u with Dist[a,u,x].  It does not affect the lhs or application conditions of rules.<br>Note that this modification of the integration rules has to be done, even if steps are not going to be displayed.  So it should probably be done just once by us as part of the build of Rubi&#39;s monolithic .m package file.  Then your step program doesn&#39;t have to worry about it screwing up your hash.",
  "id": "5b66b6d685278d705e88d987",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-05T08:35:34.372Z",
  "text": "Yes, FixIntRule only changes the rhs of rules by replacing expressions of the form a*u with Dist[a,u,x].  It does not affect the lhs or application conditions of rules.\nNote that this modification of the integration rules has to be done, even if steps are not going to be displayed.  So it should probably be done just once by us as part of the build of Rubi's monolithic .m package file.  Then your step program doesn't have to worry about it screwing up your hash.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  <span data-link-type=\"mention\" data-screen-name=\"b3m2a1\" class=\"mention\">@b3m2a1</span> Note that when a user wants to see the integration steps, there is no need to bend over backwards worrying about execution efficiency.",
  "id": "5b679d6a945df30dc15bb65c",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   },
   {
    "screenName": "b3m2a1",
    "userId": "5b63dd4fd73408ce4fa353d6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T00:59:22.778Z",
  "text": "@halirutan  @b3m2a1 Note that when a user wants to see the integration steps, there is no need to bend over backwards worrying about execution efficiency.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> I tried to follow everything you do to the rules yesterday night. I don&#39;t dare to touch this at the moment, because there are still some unknown things for me, but I believe my general procedure might still work.",
  "id": "5b67a4651b7c6059e2f7478a",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T01:29:09.524Z",
  "text": "@AlbertRich I tried to follow everything you do to the rules yesterday night. I don't dare to touch this at the moment, because there are still some unknown things for me, but I believe my general procedure might still work.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Right now, you load all rules and when they are converted to <code>DownValues</code> you process them once more with <code>FixIntRule</code>. If you call <code>FixIntRule</code> with one rule, the output is always exactly <em>one</em> fixed rule, right? Additionally, we <em>could</em> do it differently by</p><ol>\n<li>For all rule files we go step by step through each <code>Int</code> definition</li>\n<li>Convert it to a downvalue rule</li>\n<li>Apply <code>FixIntRule</code> and store the reference to the source notebook position</li>\n<li>Collect all fixed rules and finally assign <code>DownValues[Int]</code> once at the end</li>\n</ol>\n<p>Right?</p>",
  "id": "5b67a566e1309370a4a131b5",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T01:33:26.108Z",
  "text": "@AlbertRich Right now, you load all rules and when they are converted to `DownValues` you process them once more with `FixIntRule`. If you call `FixIntRule` with one rule, the output is always exactly *one* fixed rule, right? Additionally, we *could* do it differently by\n\n1. For all rule files we go step by step through each `Int` definition\n2. Convert it to a downvalue rule\n3. Apply `FixIntRule` and store the reference to the source notebook position\n4. Collect all fixed rules and finally assign `DownValues[Int]` once at the end\n\nRight?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "I must ensure that I understood your intention here correctly<pre><code class=\"mma\">FixIntRules[rulelist_] :=\n  <span class=\"keyword\">Module</span>[<span class=\"list\">{IntDownValues=DownValues[Int],SubstDownValues=DownValues[Subst],\n    SimpDownValues=DownValues[Simp],DistDownValues=DownValues[Dist],lst}</span>,\n  <span class=\"keyword\">Clear</span>[Int,Subst,Simp,Dist];\n  <span class=\"keyword\">SetAttributes</span>[<span class=\"list\">{Simp,Dist,Int,Subst}</span>,<span class=\"keyword\">HoldAll</span>];\n  lst=<span class=\"keyword\">Map</span>[<span class=\"keyword\">Function</span>[FixIntRule[#,#[[<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>]]]],rulelist];\n  <span class=\"keyword\">DownValues</span>[Int]=IntDownValues;\n  <span class=\"keyword\">DownValues</span>[Subst]=SubstDownValues;\n  <span class=\"keyword\">DownValues</span>[Simp]=SimpDownValues;\n  <span class=\"keyword\">DownValues</span>[Dist]=DistDownValues;\n  <span class=\"keyword\">ClearAttributes</span>[<span class=\"list\">{Simp,Dist,Int,Subst}</span>,<span class=\"keyword\">HoldAll</span>];\n  lst]</code></pre>",
  "id": "5b67a63a21fbb2747af6f34a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T01:36:58.794Z",
  "text": "I must ensure that I understood your intention here correctly\n\n```mma\nFixIntRules[rulelist_] :=\n  Module[{IntDownValues=DownValues[Int],SubstDownValues=DownValues[Subst],\n\tSimpDownValues=DownValues[Simp],DistDownValues=DownValues[Dist],lst},\n  Clear[Int,Subst,Simp,Dist];\n  SetAttributes[{Simp,Dist,Int,Subst},HoldAll];\n  lst=Map[Function[FixIntRule[#,#[[1,1,2,1]]]],rulelist];\n  DownValues[Int]=IntDownValues;\n  DownValues[Subst]=SubstDownValues;\n  DownValues[Simp]=SimpDownValues;\n  DownValues[Dist]=DistDownValues;\n  ClearAttributes[{Simp,Dist,Int,Subst},HoldAll];\n  lst]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<p>I have several questions about this code</p><ol>\n<li>Why do you extract, clear and re-assign the <code>DownValues</code> in this function? Is it only to prevent evaluation?</li>\n<li>You have <code>rulelist</code> as an argument which contains the <code>DownValues</code> of <code>Int</code> anyway. I don&#39;t know why you extract them once more inside the function.</li>\n<li>Why do you assign <code>HoldAll</code> to all the heads?</li>\n</ol>\n<p>When I&#39;m not completely mistaken, then everything you do above can be simplified by using <code>Block</code> which clears all definitions inside the <code>Block</code> and re-assigns them later. Like this</p><pre><code class=\"mma\">FixIntRules[rulelist_] := <span class=\"keyword\">Block</span>[<span class=\"list\">{Int, Subst, Simp, Dist}</span>,\n    <span class=\"keyword\">Map</span>[<span class=\"keyword\">Function</span>[FixIntRule[#,#[[<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>]]]], rulelist]\n]</code></pre>",
  "id": "5b67a7d41b7c6059e2f7478d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T01:43:48.095Z",
  "text": "I have several questions about this code\n\n1. Why do you extract, clear and re-assign the `DownValues` in this function? Is it only to prevent evaluation?\n2. You have `rulelist` as an argument which contains the `DownValues` of `Int` anyway. I don't know why you extract them once more inside the function.\n3. Why do you assign `HoldAll` to all the heads?\n\nWhen I'm not completely mistaken, then everything you do above can be simplified by using `Block` which clears all definitions inside the `Block` and re-assigns them later. Like this\n\n```mma\nFixIntRules[rulelist_] := Block[{Int, Subst, Simp, Dist},\n    Map[Function[FixIntRule[#,#[[1,1,2,1]]]], rulelist]\n]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Give me a few minutes and I will test your proposed definition for FixIntRules.",
  "id": "5b67c3be6d45752f989550c1",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T03:42:54.712Z",
  "text": "@halirutan Give me a few minutes and I will test your proposed definition for FixIntRules.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Sure. It&#39;s not that I don&#39;t have a paper to work on or thousand other things. Take your time. :smile:",
  "id": "5b67c42bd1a7fd4cdb0e6ee2",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T03:44:43.880Z",
  "text": "@AlbertRich Sure. It's not that I don't have a paper to work on or thousand other things. Take your time. :smile:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Thanks!  As you can probably tell I am not all that proud of my hacked together FixIntRules and ShowStep code.",
  "id": "5b67c481945df30dc15c7235",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T03:46:09.622Z",
  "text": "@halirutan Thanks!  As you can probably tell I am not all that proud of my hacked together FixIntRules and ShowStep code.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-06T03:51:13.592Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> It is absolutely unimportant if it is a hack or not. It worked and that&#39;s all that matters. But when I rip it apart to improve it, I must be sure I haven&#39;t missed something.",
  "id": "5b67c4e3d1a7fd4cdb0e6ee5",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T03:47:47.018Z",
  "text": "@AlbertRich It is absolutely unimportant if it is a hack or not. It worked and that's all that matters. But when I rip it apart to improve it, I must be sure I haven't missed something.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Not sure I agree that </p><blockquote>\n<p>It worked and that&#39;s all that matters.</p></blockquote>\n<p>Inevitably I find that lousy code comes back to bite you.</p>",
  "id": "5b67d177c917d40dc24ab606",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T04:41:27.168Z",
  "text": "@halirutan Not sure I agree that \n> It worked and that's all that matters.\n\nInevitably I find that lousy code comes back to bite you.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> This definition of FixIntRules works good</p><pre><code class=\"mma\">FixIntRules[rulelist_] := <span class=\"keyword\">Block</span>[<span class=\"list\">{Int, Subst, Simp, Dist, lst}</span>,\n  <span class=\"keyword\">SetAttributes</span>[<span class=\"list\">{Simp,Dist,Int,Subst}</span>,<span class=\"keyword\">HoldAll</span>];\n  lst=<span class=\"keyword\">Map</span>[<span class=\"keyword\">Function</span>[FixIntRule[#,#[[<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>]]]], rulelist];\n  <span class=\"keyword\">ClearAttributes</span>[<span class=\"list\">{Simp,Dist,Int,Subst}</span>,<span class=\"keyword\">HoldAll</span>];\n  lst]</code></pre><p>It&#39;s important to keep the arguments unevaluated.</p>",
  "id": "5b67d2df0cfcf02fdf17d495",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T04:47:27.890Z",
  "text": "@halirutan This definition of FixIntRules works good\n```Mma\nFixIntRules[rulelist_] := Block[{Int, Subst, Simp, Dist, lst},\n  SetAttributes[{Simp,Dist,Int,Subst},HoldAll];\n  lst=Map[Function[FixIntRule[#,#[[1,1,2,1]]]], rulelist];\n  ClearAttributes[{Simp,Dist,Int,Subst},HoldAll];\n  lst]\n```\nIt's important to keep the arguments unevaluated.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> No need to clear Attributes at the end. The moment you leave the Block, these temporary definitions are lost.",
  "id": "5b67d31321fbb2747af6f381",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T04:48:19.061Z",
  "text": "@AlbertRich No need to clear Attributes at the end. The moment you leave the Block, these temporary definitions are lost.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Ok, am currently running the test suite reality check using</p><pre><code class=\"mma\">FixIntRules[rulelist_] := <span class=\"keyword\">Block</span>[<span class=\"list\">{Int, Subst, Simp, Dist}</span>,\n  <span class=\"keyword\">SetAttributes</span>[<span class=\"list\">{Simp,Dist,Int,Subst}</span>,<span class=\"keyword\">HoldAll</span>];\n  <span class=\"keyword\">Map</span>[<span class=\"keyword\">Function</span>[FixIntRule[#,#[[<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>]]]], rulelist]]</code></pre><p>I will let you know if there are any problems.</p>",
  "id": "5b67d5df5d1362758b3ab181",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T05:00:15.638Z",
  "text": "@halirutan Ok, am currently running the test suite reality check using\n```Mma\nFixIntRules[rulelist_] := Block[{Int, Subst, Simp, Dist},\n  SetAttributes[{Simp,Dist,Int,Subst},HoldAll];\n  Map[Function[FixIntRule[#,#[[1,1,2,1]]]], rulelist]]\n```\nI will let you know if there are any problems.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Thanks.",
  "id": "5b67d5fcc6f86b0b4130aefe",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T05:00:44.531Z",
  "text": "@AlbertRich Thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-06T05:42:19.887Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> You asked earlier</p><blockquote>\n<p>Right?</p></blockquote>\n<p>Yes!  Like I said earlier</p><blockquote>\n<p>Yes, FixIntRule only changes the rhs of rules by replacing expressions of the form  a u  with Dist[a,u,x].  It does not affect the lhs or application conditions of rules.<br>Note that this modification of the integration rules has to be done, even if steps are not going to be displayed.  <em>So it should probably be done just once by us as part of the build of Rubi&#39;s monolithic .m package file.</em>  Then your step program doesn&#39;t have to worry about it screwing up your hash. (emphasis added)</p></blockquote>\n",
  "id": "5b67df723bca002dcbcade91",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T05:41:06.943Z",
  "text": "@halirutan You asked earlier\n> Right?\n\nYes!  Like I said earlier\n> Yes, FixIntRule only changes the rhs of rules by replacing expressions of the form  a u  with Dist[a,u,x].  It does not affect the lhs or application conditions of rules.\nNote that this modification of the integration rules has to be done, even if steps are not going to be displayed.  *So it should probably be done just once by us as part of the build of Rubi's monolithic .m package file.*  Then your step program doesn't have to worry about it screwing up your hash. (emphasis added)",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Seems like Rubi should have two monolithic .m package files:</p><ul>\n<li>Integrator only - just like your current monolithic package file but with the rules already fixed by FixIntRules.</li>\n<li>Integrator with showstep option - a monolithic package file with the fixed rules plus modified as necessary to show steps.</li>\n</ul>\n<p>Is this your plan?</p>",
  "id": "5b67e42f85278d705e8ea69f",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T06:01:19.602Z",
  "text": "@halirutan Seems like Rubi should have two monolithic .m package files:\n* Integrator only - just like your current monolithic package file but with the rules already fixed by FixIntRules.\n* Integrator with showstep option - a monolithic package file with the fixed rules plus modified as necessary to show steps.\n\nIs this your plan?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Nope, I would go a step further. ShowSteps calculates for each rule the visualization but it&#39;s not necessary to do this upfront for all rules. Rather, I would try the following approach:<ol>\n<li>The users inputs <code>Steps[Int[expr, x]]</code> which will leave <code>Int</code> unevaluated and immediately start a Block like the one you used above with no definitions for <code>Int</code></li>\n<li>We use the list of <code>DownValues</code> and <code>MatchQ</code> to find the integration rule that matches</li>\n<li>We remember this rule and the current expr. Then, we apply the rule to the current expr using <code>Replace</code>. This is basically what happens in the evaluator as well</li>\n<li>We repeat this until the antiderivative is found</li>\n<li>At the end, we have collected intermediate results and rules that were used. Since we really have the DownValue rule, we can use your functions to compute the information that you currently inject into the rules. Additionally, we can use the hash of the rule to extract the exact notebook position where it was defined. This is then built into the nice steps visualization we have now with an additional button to open the source notebook position of a rule.</li>\n</ol>\n",
  "id": "5b67e797077e1c2db7081dee",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T06:15:51.790Z",
  "text": "@AlbertRich Nope, I would go a step further. ShowSteps calculates for each rule the visualization but it's not necessary to do this upfront for all rules. Rather, I would try the following approach:\n\n1. The users inputs `Steps[Int[expr, x]]` which will leave `Int` unevaluated and immediately start a Block like the one you used above with no definitions for `Int`\n2. We use the list of `DownValues` and `MatchQ` to find the integration rule that matches\n3. We remember this rule and the current expr. Then, we apply the rule to the current expr using `Replace`. This is basically what happens in the evaluator as well\n4. We repeat this until the antiderivative is found\n5. At the end, we have collected intermediate results and rules that were used. Since we really have the DownValue rule, we can use your functions to compute the information that you currently inject into the rules. Additionally, we can use the hash of the rule to extract the exact notebook position where it was defined. This is then built into the nice steps visualization we have now with an additional button to open the source notebook position of a rule.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> So how about the poor people that just want the antiderivative and don&#39;t care about the steps (which will be the vast majority of users)?",
  "id": "5b67e86c74470f5c9856b35f",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T06:19:24.680Z",
  "text": "@halirutan So how about the poor people that just want the antiderivative and don't care about the steps (which will be the vast majority of users)?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> In the normal run, we don&#39;t use <code>Block</code> to extract and apply the rules ourselves! We simply let <code>Int</code> do it&#39;s job.",
  "id": "5b67e8eec6f86b0b4130af11",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T06:21:34.072Z",
  "text": "@AlbertRich In the normal run, we don't use `Block` to extract and apply the rules ourselves! We simply let `Int` do it's job.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> So the rules will already be fixed?",
  "id": "5b67e9233bca002dcbcb0fea",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T06:22:27.295Z",
  "text": "@halirutan So the rules will already be fixed?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Yes, in memory you will always have the <code>FixIntRules</code>-fixed rules without injected <code>ShowSteps</code> information.",
  "id": "5b67e9492a180a3035c0a1f2",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T06:23:05.002Z",
  "text": "@AlbertRich Yes, in memory you will always have the `FixIntRules`-fixed rules without injected `ShowSteps` information.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Great!  So you can get that working before you start on the much more ambitious show step project?",
  "id": "5b67e9745d1362758b3b1aee",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T06:23:48.354Z",
  "text": "@halirutan Great!  So you can get that working before you start on the much more ambitious show step project?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> There is one more thing: I have tested the <code>mx</code> speed and it is just incredible. So my plan is that on the first loading of the Rubi package, all rules are loaded and fixed. For each rule the hash and notebook-position is extracted and stored on disk. Then we export the <code>mx</code> file for all <code>Int</code> rules and on every following <code>&lt;&lt;Rubi` </code>, we simply use the <code>mx</code> file which takes maybe not even a second to completely load Rubi.",
  "id": "5b67ea1a2a180a3035c0a1f5",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T06:26:34.015Z",
  "text": "@AlbertRich There is one more thing: I have tested the `mx` speed and it is just incredible. So my plan is that on the first loading of the Rubi package, all rules are loaded and fixed. For each rule the hash and notebook-position is extracted and stored on disk. Then we export the `mx` file for all `Int` rules and on every following ``<<Rubi` ``, we simply use the `mx` file which takes maybe not even a second to completely load Rubi.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Before I start working on this for Rubi, I will definitely hack a small example and discuss this with you. ",
  "id": "5b67eb3421fbb2747af6f385",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T06:31:16.141Z",
  "text": "@AlbertRich Before I start working on this for Rubi, I will definitely hack a small example and discuss this with you. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Yes, that&#39;s all great.  But can&#39;t we start small by just building a monolithic package for the Rubi currently available on the website that contains rules already fixed by FixIntRules.  Since you&#39;ve automated the process, this should relatively to do and we can make sure it all works before starting the show steps project.",
  "id": "5b67eec03a5a2d2f99fcb46e",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T06:46:24.124Z",
  "text": "@halirutan Yes, that's all great.  But can't we start small by just building a monolithic package for the Rubi currently available on the website that contains rules already fixed by FixIntRules.  Since you've automated the process, this should relatively to do and we can make sure it all works before starting the show steps project.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> It won&#39;t interfere with the current code for Rubi. I will work on a separate branch of the code that we can test carefully before releasing to the public. It&#39;s a bit hard to explain without going into details of <code>git</code>.",
  "id": "5b67f5fd1b7c6059e2f747f5",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T07:17:17.779Z",
  "text": "@AlbertRich It won't interfere with the current code for Rubi. I will work on a separate branch of the code that we can test carefully before releasing to the public. It's a bit hard to explain without going into details of `git`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Yes, I realize the show steps project will be done on a separate branch and will not interfere the current code for Rubi.  Good.<br>What I&#39;m proposing is a simple modification to the <em>current</em> code that should be relatively easy to do.",
  "id": "5b67f8bf6d45752f98967251",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T07:29:03.187Z",
  "text": "@halirutan Yes, I realize the show steps project will be done on a separate branch and will not interfere the current code for Rubi.  Good.\nWhat I'm proposing is a simple modification to the *current* code that should be relatively easy to do.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> I understand. I&#39;m a bit hesitant because although the changes would improve the code quality, they won&#39;t improve loading speed significantly and it&#39;s more work to put this into a release, update installation doc, etc.",
  "id": "5b68006a1b7c6059e2f74814",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-06T08:01:46.093Z",
  "text": "@AlbertRich I understand. I'm a bit hesitant because although the changes would improve the code quality, they won't improve loading speed significantly and it's more work to put this into a release, update installation doc, etc.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Would you happen to know what goes wrong here: <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4\" href=\"https://github.com/RuleBasedIntegration/Rubi/issues/4\" data-provider=\"github\" data-issue-repo=\"RuleBasedIntegration/Rubi\" class=\"issue\">RuleBasedIntegration/Rubi#4</a>",
  "id": "5b6921571b7c6059e2f74cee",
  "issues": [
   {
    "number": "4",
    "repo": "RuleBasedIntegration/Rubi"
   }
  ],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-07T04:34:31.560Z",
  "text": "@AlbertRich Would you happen to know what goes wrong here: https://github.com/RuleBasedIntegration/Rubi/issues/4",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> I left a comment. ",
  "id": "5b6942810cfcf02fdf1ed7ce",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-07T06:56:01.398Z",
  "text": "@halirutan I left a comment. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> I need to leave for work, but I quickly investigated and comment on the issue. Btw, on GitHub on top-right corner the blue dot indicates when you&#39;ve got any notifications. Click on it an you should see the issue,... ",
  "id": "5b69801de1309370a4a136cf",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-07T11:18:53.916Z",
  "text": "@AlbertRich I need to leave for work, but I quickly investigated and comment on the issue. Btw, on GitHub on top-right corner the blue dot indicates when you've got any notifications. Click on it an you should see the issue,... ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<a href=\"http://i.imgur.com/a8OkM8N.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://i.imgur.com/a8OkM8N.png</a>",
  "id": "5b69801f077e1c2db708231c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-07T11:18:55.564Z",
  "text": "http://i.imgur.com/a8OkM8N.png",
  "unread": false,
  "urls": [
   {
    "url": "http://i.imgur.com/a8OkM8N.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> I changed my <code>nb -&gt; m</code> extraction back to the way you do it without packing some of the files together. This is just too error-prone and takes a lot of time on my side if the rules don&#39;t match exactly. That being said, I still can create all the m-files automatically, but I export them in a nested directory like you do. The order in which rules need to be loaded is completely opaque too me.",
  "id": "5b6cff74ebb2c76063918cd5",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T02:59:00.946Z",
  "text": "@AlbertRich I changed my `nb -> m` extraction back to the way you do it without packing some of the files together. This is just too error-prone and takes a lot of time on my side if the rules don't match exactly. That being said, I still can create all the m-files automatically, but I export them in a nested directory like you do. The order in which rules need to be loaded is completely opaque too me.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "I used the following small <code>steps</code> function to verify that the GitHub version cannot only solve the integral, but uses the exact same downvalues that the version in your zip file uses:",
  "id": "5b6d012dbd63c770b7aba846",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T03:06:21.318Z",
  "text": "I used the following small `steps` function to verify that the GitHub version cannot only solve the integral, but uses the exact same downvalues that the version in your zip file uses:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Yes, I also wish the order the integration rules are loaded did not matter.  The reason is that generic rules have to be loaded after specific ones.  And no, Mathematica&#39;s attempt to do this automatically is not sufficient for our purposes.",
  "id": "5b6d0133a3a93d242243d9c3",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T03:06:27.899Z",
  "text": "@halirutan Yes, I also wish the order the integration rules are loaded did not matter.  The reason is that generic rules have to be loaded after specific ones.  And no, Mathematica's attempt to do this automatically is not sufficient for our purposes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-10T03:07:22.003Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mathematica\">$dv = DownValues[Int] /. Int :&gt; HoldForm[Int];\npos[expr_] := \n  FirstPosition[$dv, \n   rule_RuleDelayed /; (expr =!= (expr /. rule)), {1}];\nstep[expr_] := Module[{rule = pos[expr]},\n  If[rule =!= {},\n   {expr /. $dv[[First[rule]]] /. Defer[f_] :&gt; f, rule},\n   $Failed\n   ]\n  ]\nsteps[expr_] := \n NestWhileList[step[#[[1]]] &amp;, {expr, \"Start\"}, \n  Not@FreeQ[#[[1]], HoldForm[Int]] &amp;, 1, 50]\n\nsteps[HoldForm[Int][Sqrt[x^3 + x], x]]</code></pre>",
  "id": "5b6d015247294d6166df9a59",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T03:06:58.138Z",
  "text": "```mathematica\n$dv = DownValues[Int] /. Int :> HoldForm[Int];\npos[expr_] := \n  FirstPosition[$dv, \n   rule_RuleDelayed /; (expr =!= (expr /. rule)), {1}];\nstep[expr_] := Module[{rule = pos[expr]},\n  If[rule =!= {},\n   {expr /. $dv[[First[rule]]] /. Defer[f_] :> f, rule},\n   $Failed\n   ]\n  ]\nsteps[expr_] := \n NestWhileList[step[#[[1]]] &, {expr, \"Start\"}, \n  Not@FreeQ[#[[1]], HoldForm[Int]] &, 1, 50]\n\nsteps[HoldForm[Int][Sqrt[x^3 + x], x]]\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Great!  That looks like a good debugging tool.",
  "id": "5b6d0186988005174ebab9dc",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T03:07:50.470Z",
  "text": "@halirutan Great!  That looks like a good debugging tool.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> The above code shows that the rule number provided by your <code>Steps</code> function is off by 1. ",
  "id": "5b6d02b59aef23712411be22",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T03:12:53.495Z",
  "text": "@AlbertRich The above code shows that the rule number provided by your `Steps` function is off by 1. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Or mine is off by one. Either way, I&#39;m not sure where this comes from, but both the <code>Steps</code> and the above code seem to do the same transformations",
  "id": "5b6d03fc5cd1d528ceadfac7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T03:18:20.699Z",
  "text": "Or mine is off by one. Either way, I'm not sure where this comes from, but both the `Steps` and the above code seem to do the same transformations",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> That&#39;s because I want the number of the first rule to be 1 and not 0.  Note that in the 5 argument definition of <code>ShowStep</code> in <code>ShowStep routines.m</code>, the rule number displayed is <code>num+1</code>.",
  "id": "5b6d04e4b3cbd23ffc1f7ae5",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T03:22:12.877Z",
  "text": "@halirutan That's because I want the number of the first rule to be 1 and not 0.  Note that in the 5 argument definition of `ShowStep` in `ShowStep routines.m`, the rule number displayed is `num+1`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Not quite. What I mean is the following: When I see in <code>Steps</code> a rule number, I can do <code>DownValues[Int][[ruleNumber]]</code> and I get the correct rule. My <code>steps</code> is in itself also consistent because my rule number is really the <code>DownValue</code> that was selected for the transformation. However, when I load the package with <code>$LoadShowSteps = True</code>, I get 2 additional rules when I look at <code>Rubi`Private`$RuleCount</code>",
  "id": "5b6d05d8ebb2c76063918cd8",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T03:26:16.051Z",
  "text": "@AlbertRich Not quite. What I mean is the following: When I see in `Steps` a rule number, I can do `DownValues[Int][[ruleNumber]]` and I get the correct rule. My `steps` is in itself also consistent because my rule number is really the `DownValue` that was selected for the transformation. However, when I load the package with `$LoadShowSteps = True`, I get 2 additional rules when I look at ``Rubi`Private`$RuleCount``",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Since <code>Rubi`Private`$RuleCount</code> is measured directly after loading the files and before any other rules to <code>Int</code> are added, this is a bit suspicious but it might have a good reason I&#39;m not aware of.",
  "id": "5b6d06dd5054ab1410e4a038",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T03:30:37.798Z",
  "text": "@AlbertRich Since ``Rubi`Private`$RuleCount`` is measured directly after loading the files and before any other rules to `Int` are added, this is a bit suspicious but it might have a good reason I'm not aware of.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Note that in <code>Load Rubi.m</code> two additional Int rules are defined after <code>StepFunction[Int]</code> is called.  ",
  "id": "5b6d07385b07ae730a99bc5a",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T03:32:08.276Z",
  "text": "@halirutan Note that in `Load Rubi.m` two additional Int rules are defined after `StepFunction[Int]` is called.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Yes, but these don&#39;t count because <code>$RuleCount = Length[DownValues[Int]];</code> is several lines above this",
  "id": "5b6d07a39aef23712411be25",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T03:33:55.918Z",
  "text": "@AlbertRich Yes, but these don't count because `$RuleCount = Length[DownValues[Int]];` is several lines above this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Can you write a program that runs through both lists of DownValues and see where they start to differ?",
  "id": "5b6d0875b3cbd23ffc1f8c7f",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T03:37:25.193Z",
  "text": "@halirutan Can you write a program that runs through both lists of DownValues and see where they start to differ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> That&#39;s what I was trying when comparing your downvalues with the one the GitHub package loads. The plain answer is, I don&#39;t know how to do this reliable. The problem is the <em>when you</em> export nb to m, there are things like <code>Int[a_. + ...]</code> however, when I do it automatically, Mathematica puts additional parentheses like <code>Int[(a_.) + ...]</code> and I don&#39;t know how to compare them. <code>===</code> will fail, <code>Hash</code> will fail, ...",
  "id": "5b6d0917ebb2c76063918cdd",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T03:40:07.844Z",
  "text": "@AlbertRich That's what I was trying when comparing your downvalues with the one the GitHub package loads. The plain answer is, I don't know how to do this reliable. The problem is the *when you* export nb to m, there are things like `Int[a_. + ...]` however, when I do it automatically, Mathematica puts additional parentheses like `Int[(a_.) + ...]` and I don't know how to compare them. `===` will fail, `Hash` will fail, ...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-10T03:42:45.176Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Divide and conquer.  Do they agree after 3300 rules by manual inspection?  And keep subdividing.",
  "id": "5b6d09a5b3cbd23ffc1f92a1",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T03:42:29.330Z",
  "text": "@halirutan Divide and conquer.  Do they agree after 3300 rules by manual inspection?  And keep subdividing.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> The problem is if I load the package with <code>LoadShowSteps = False</code>, your version and mine seem to match exactly. Wait, I have an idea",
  "id": "5b6d09f8bd63c770b7aba851",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T03:43:52.230Z",
  "text": "@AlbertRich The problem is if I load the package with `LoadShowSteps = False`, your version and mine seem to match exactly. Wait, I have an idea",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> <code>ShowStep routines.m</code> defines an Int rule.",
  "id": "5b6d0a41a6af14730b1538d7",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T03:45:05.471Z",
  "text": "@halirutan `ShowStep routines.m` defines an Int rule.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> This is also loaded after counting the rules.",
  "id": "5b6d0a5e5cd1d528ceadfad6",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T03:45:34.629Z",
  "text": "@AlbertRich This is also loaded after counting the rules.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> True.",
  "id": "5b6d0a6b2a8e6c6083a22fde",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T03:45:47.400Z",
  "text": "@halirutan True.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<code>Log[2,6746]</code> is about 12.7.",
  "id": "5b6d0b0e179f842c97194023",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T03:48:30.574Z",
  "text": "`Log[2,6746]` is about 12.7.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> The mismatch happens very late. These are the two additional rules that appear when showSteps is True but don&#39;t appear at all without loading ShowSteps:",
  "id": "5b6d0d43cdc5fe3dfa45c385",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T03:57:55.800Z",
  "text": "@AlbertRich The mismatch happens very late. These are the two additional rules that appear when showSteps is True but don't appear at all without loading ShowSteps:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<img src=\"http://i.imgur.com/znuynSo.png\" alt=\"img\" rel=\"nofollow\">",
  "id": "5b6d0d929aef23712411be2b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T03:59:14.805Z",
  "text": "![img](http://i.imgur.com/znuynSo.png)",
  "unread": false,
  "urls": [
   {
    "url": "http://i.imgur.com/znuynSo.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "They are defined in 9.4",
  "id": "5b6d0e57cdc5fe3dfa45c388",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T04:02:31.458Z",
  "text": "They are defined in 9.4",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Yes, they are 2 of the 3 Euler transformations.  I&#39;m sure he would be proud. :)",
  "id": "5b6d0e7f5762ee4fe5565758",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T04:03:11.828Z",
  "text": "@halirutan Yes, they are 2 of the 3 Euler transformations.  I'm sure he would be proud. :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> There must be a bug in my code.  All 3 have the same form and application conditions, so Mathematica throws away the first two.",
  "id": "5b6d0f215b07ae730a99e4de",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T04:05:53.200Z",
  "text": "@halirutan There must be a bug in my code.  All 3 have the same form and application conditions, so Mathematica throws away the first two.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Yes, I see the inner application conditions do NOT match when loading steps! ",
  "id": "5b6d0f87b3cbd23ffc1fb2a0",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T04:07:35.745Z",
  "text": "@halirutan Yes, I see the inner application conditions do NOT match when loading steps! ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Easily fixed.  Thanks!",
  "id": "5b6d0f99e9b96f2c98e9c1cf",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T04:07:53.404Z",
  "text": "@halirutan Easily fixed.  Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> That would explain, why exactly 2 rules are missing.",
  "id": "5b6d101bbd63c770b7aba85a",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T04:10:03.839Z",
  "text": "@AlbertRich That would explain, why exactly 2 rules are missing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  Yup.  I&#39;m sending you an updated <code>9.4 ....m</code>.",
  "id": "5b6d10495b07ae730a99ea42",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T04:10:49.321Z",
  "text": "@halirutan  Yup.  I'm sending you an updated `9.4 ....m`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> The <code>nb</code> please!",
  "id": "5b6d10579aef23712411be2d",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T04:11:03.743Z",
  "text": "@AlbertRich The `nb` please!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Of course.",
  "id": "5b6d10665762ee4fe5565f02",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T04:11:18.871Z",
  "text": "@halirutan Of course.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> It&#39;s on its way.  The reason this bug was never noticed is because Rubi only rarely uses the Euler Substitutions since more specific rules produce much better optimal antiderivatives.",
  "id": "5b6d121c67eb9f60febd29b5",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T04:18:36.521Z",
  "text": "@halirutan It's on its way.  The reason this bug was never noticed is because Rubi only rarely uses the Euler Substitutions since more specific rules produce much better optimal antiderivatives.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> That fixed it.",
  "id": "5b6d15a39aef23712411be30",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T04:33:39.356Z",
  "text": "@AlbertRich That fixed it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Yea!  Time for a beer.",
  "id": "5b6d15b25b07ae730a9a0533",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T04:33:54.365Z",
  "text": "@halirutan Yea!  Time for a beer.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Have fun.",
  "id": "5b6d15b85e6029213384748b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T04:34:00.144Z",
  "text": "Have fun.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "I&#39;m off to bed.",
  "id": "5b6d15becdc5fe3dfa45c38a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2018-08-10T04:34:06.025Z",
  "text": "I'm off to bed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "<p>which Rubi rules are used for      </p><pre><code>    <span class=\"built_in\">Int</span>[<span class=\"built_in\">Sin</span>[x*y],y]</code></pre><p>I think my converter doesn&#39;t find it correctly?</p>",
  "id": "5b71c455a3a93d24225cffda",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T17:48:05.566Z",
  "text": "which Rubi rules are used for  \t\n```\n    Int[Sin[x*y],y]\n```\nI think my converter doesn't find it correctly?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"axkr\" class=\"mention\">@axkr</span> Only one rule:",
  "id": "5b71c5725cd1d528ceae025a",
  "issues": [],
  "mentions": [
   {
    "screenName": "axkr",
    "userId": "57a20b3c40f3a6eec05dc2ad",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T17:52:50.639Z",
  "text": "@axkr Only one rule:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<a href=\"https://files.gitter.im/Rule-Based-Integration/Lobby/3kBu/Screen-Shot-2018-08-13-at-19.52.26.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/Rule-Based-Integration/Lobby/3kBu/thumb/Screen-Shot-2018-08-13-at-19.52.26.png\" alt=\"Screen Shot 2018-08-13 at 19.52.26.png\" rel=\"nofollow\"></a>",
  "id": "5b71c57e5e60292133847c6d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T17:53:02.850Z",
  "text": "[![Screen Shot 2018-08-13 at 19.52.26.png](https://files.gitter.im/Rule-Based-Integration/Lobby/3kBu/thumb/Screen-Shot-2018-08-13-at-19.52.26.png)](https://files.gitter.im/Rule-Based-Integration/Lobby/3kBu/Screen-Shot-2018-08-13-at-19.52.26.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/Rule-Based-Integration/Lobby/3kBu/thumb/Screen-Shot-2018-08-13-at-19.52.26.png"
   },
   {
    "url": "https://files.gitter.im/Rule-Based-Integration/Lobby/3kBu/Screen-Shot-2018-08-13-at-19.52.26.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"axkr\" class=\"mention\">@axkr</span> The down-value for that rule is",
  "id": "5b71c6295e60292133847c73",
  "issues": [],
  "mentions": [
   {
    "screenName": "axkr",
    "userId": "57a20b3c40f3a6eec05dc2ad",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T17:55:53.638Z",
  "text": "@axkr The down-value for that rule is",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\"><span class=\"keyword\">HoldPattern</span>[Int[sin[c_.+d_. x_],x_Symbol]]:&gt;-Simp[<span class=\"keyword\">Cos</span>[c+d x]/d,x]/;<span class=\"keyword\">FreeQ</span>[<span class=\"list\">{c,d}</span>,x]</code></pre>",
  "id": "5b71c64447294d6166dfa23c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T17:56:20.007Z",
  "text": "```mma\nHoldPattern[Int[sin[c_.+d_. x_],x_Symbol]]:>-Simp[Cos[c+d x]/d,x]/;FreeQ[{c,d},x]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> thanx",
  "id": "5b71c66d196bc60b6bc48151",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T17:57:01.625Z",
  "text": "@halirutan thanx",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"axkr\" class=\"mention\">@axkr</span> Btw, we spent the last few days to battle test the new release and as soon as Albert gives his Go, then I&#39;ll merge it into master and make the release. I strongly advise to use the new rules and I will happily help you with all questions you have.",
  "id": "5b71c75447294d6166dfa240",
  "issues": [],
  "mentions": [
   {
    "screenName": "axkr",
    "userId": "57a20b3c40f3a6eec05dc2ad",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T18:00:52.808Z",
  "text": "@axkr Btw, we spent the last few days to battle test the new release and as soon as Albert gives his Go, then I'll merge it into master and make the release. I strongly advise to use the new rules and I will happily help you with all questions you have.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> I assume the internal mechanisms are the same and I&#39;m currently having trouble with simple expressions. So I will go on with testing.",
  "id": "5b71c7c88206fd2a46a1ee20",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T18:02:48.794Z",
  "text": "@halirutan I assume the internal mechanisms are the same and I'm currently having trouble with simple expressions. So I will go on with testing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"axkr\" class=\"mention\">@axkr</span> A common cause for that can be the order in which rules are tested. Do you use the exact same loading order that we have in Mathematica? (better, look at the final downvalues of <code>Int</code> which gives the definitive guide).",
  "id": "5b71c8555054ab1410e4a89e",
  "issues": [],
  "mentions": [
   {
    "screenName": "axkr",
    "userId": "57a20b3c40f3a6eec05dc2ad",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T18:05:09.577Z",
  "text": "@axkr A common cause for that can be the order in which rules are tested. Do you use the exact same loading order that we have in Mathematica? (better, look at the final downvalues of `Int` which gives the definitive guide).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "you have probably seen that I#ve forked your rules: <a href=\"https://github.com/axkr/Rubi-1\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/axkr/Rubi-1</a>",
  "id": "5b71c877988005174ed42c89",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T18:05:43.272Z",
  "text": "you have probably seen that I#ve forked your rules: https://github.com/axkr/Rubi-1",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/axkr/Rubi-1"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "in commit 420efb3  I reordered the files in the same order as in Rubi.m",
  "id": "5b71c8d32a8e6c6083bb5540",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T18:07:15.095Z",
  "text": "in commit 420efb3  I reordered the files in the same order as in Rubi.m",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "but in my matcher it will be reordered sometimes",
  "id": "5b71c930e9b96f2c9802df02",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T18:08:48.004Z",
  "text": "but in my matcher it will be reordered sometimes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"axkr\" class=\"mention\">@axkr</span> If you wait some hours, we might have a positive feedback from Albert. In the current release, I needed to change things drastically because Mathematica sucks at keeping the semantics of expressions. In the <a href=\"https://github.com/RuleBasedIntegration/Rubi/tree/notebooks4.16/Rubi\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">4.16.0.2 branch</a> I convert all of Alberts notebooks into tightly packed <code>.m</code> files that only contain the rules. So far it looks like we pass all tests.",
  "id": "5b71c9b147294d6166dfa24c",
  "issues": [],
  "mentions": [
   {
    "screenName": "axkr",
    "userId": "57a20b3c40f3a6eec05dc2ad",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T18:10:57.081Z",
  "text": "@axkr If you wait some hours, we might have a positive feedback from Albert. In the current release, I needed to change things drastically because Mathematica sucks at keeping the semantics of expressions. In the [4.16.0.2 branch](https://github.com/RuleBasedIntegration/Rubi/tree/notebooks4.16/Rubi) I convert all of Alberts notebooks into tightly packed `.m` files that only contain the rules. So far it looks like we pass all tests.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/RuleBasedIntegration/Rubi/tree/notebooks4.16/Rubi"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"axkr\" class=\"mention\">@axkr</span> Do you <em>load</em> the Mathematica code or do you need to translate it into your symja syntax?",
  "id": "5b71c9eb5054ab1410e4a8b0",
  "issues": [],
  "mentions": [
   {
    "screenName": "axkr",
    "userId": "57a20b3c40f3a6eec05dc2ad",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T18:11:55.854Z",
  "text": "@axkr Do you *load* the Mathematica code or do you need to translate it into your symja syntax?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> ok I wait. For Rubi 4.5 I&#39;ve converted the Mathematica rules in my won Java format: <a href=\"https://github.com/axkr/symja_android_library/tree/master/symja_android_library/matheclipse-core/src/main/java/org/matheclipse/core/integrate/rubi45\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/axkr/symja_android_library/tree/master/symja_android_library/matheclipse-core/src/main/java/org/matheclipse/core/integrate/rubi45</a>",
  "id": "5b71cc08637ee66082e64589",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T18:20:56.048Z",
  "text": "@halirutan ok I wait. For Rubi 4.5 I've converted the Mathematica rules in my won Java format: https://github.com/axkr/symja_android_library/tree/master/symja_android_library/matheclipse-core/src/main/java/org/matheclipse/core/integrate/rubi45",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/axkr/symja_android_library/tree/master/symja_android_library/matheclipse-core/src/main/java/org/matheclipse/core/integrate/rubi45"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "you can test (the old) rules in the online interface: <a href=\"http://matheclipse.org/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://matheclipse.org/</a>",
  "id": "5b71cc7fe9b96f2c9802f524",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T18:22:55.533Z",
  "text": "you can test (the old) rules in the online interface: http://matheclipse.org/",
  "unread": false,
  "urls": [
   {
    "url": "http://matheclipse.org/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "with the Integrate() function <a href=\"https://github.com/axkr/symja_android_library/blob/master/symja_android_library/doc/functions/Integrate.md\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/axkr/symja_android_library/blob/master/symja_android_library/doc/functions/Integrate.md</a>",
  "id": "5b71cc925b07ae730ab2e2f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T18:23:14.911Z",
  "text": "with the Integrate() function https://github.com/axkr/symja_android_library/blob/master/symja_android_library/doc/functions/Integrate.md",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/axkr/symja_android_library/blob/master/symja_android_library/doc/functions/Integrate.md"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"axkr\" class=\"mention\">@axkr</span> Where is the code you used to convert the rules?",
  "id": "5b71cc975e60292133847c84",
  "issues": [],
  "mentions": [
   {
    "screenName": "axkr",
    "userId": "57a20b3c40f3a6eec05dc2ad",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T18:23:19.037Z",
  "text": "@axkr Where is the code you used to convert the rules?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> my latest attempt are committed to the fork.",
  "id": "5b71ccc3a3a93d24225d3828",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T18:24:03.424Z",
  "text": "@halirutan my latest attempt are committed to the fork.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "<a href=\"https://github.com/axkr/Rubi-1/tree/master/src/org/matheclipse/core/rubi\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/axkr/Rubi-1/tree/master/src/org/matheclipse/core/rubi</a>",
  "id": "5b71cce52a8e6c6083bb6f8f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T18:24:37.705Z",
  "text": "https://github.com/axkr/Rubi-1/tree/master/src/org/matheclipse/core/rubi",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/axkr/Rubi-1/tree/master/src/org/matheclipse/core/rubi"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"axkr\" class=\"mention\">@axkr</span> Another thing, after the rules are loaded in Mathematica, Rubi applies a <code>FixIntRules</code> step where it changes some of the rules. How did you include these changes?",
  "id": "5b71cf1acdc5fe3dfa45cb9c",
  "issues": [],
  "mentions": [
   {
    "screenName": "axkr",
    "userId": "57a20b3c40f3a6eec05dc2ad",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T18:34:02.774Z",
  "text": "@axkr Another thing, after the rules are loaded in Mathematica, Rubi applies a `FixIntRules` step where it changes some of the rules. How did you include these changes?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "Didn\u2018 do that at the Moment",
  "id": "5b71cf682a8e6c6083bb8099",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T18:35:20.488Z",
  "text": "Didn\u2018 do that at the Moment",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"axkr\" class=\"mention\">@axkr</span> How about the following. When I&#39;m home tonight, I load the Rubi rules and convert the downvalues (<code>FixIntRules</code> is already applied) back into a SetDelayed expression and export all 6700+ rules in one file. You had the correct order of rules and they resemble exactly what Rubi uses. Would that help?",
  "id": "5b71d069cdc5fe3dfa45cba3",
  "issues": [],
  "mentions": [
   {
    "screenName": "axkr",
    "userId": "57a20b3c40f3a6eec05dc2ad",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T18:39:37.818Z",
  "text": "@axkr How about the following. When I'm home tonight, I load the Rubi rules and convert the downvalues (`FixIntRules` is already applied) back into a SetDelayed expression and export all 6700+ rules in one file. You had the correct order of rules and they resemble exactly what Rubi uses. Would that help?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "I&#39;m not sure, but I will of course try that.",
  "id": "5b71d1355ec2bc174ff3b0b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T18:43:01.462Z",
  "text": "I'm not sure, but I will of course try that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"axkr\" class=\"mention\">@axkr</span> If you like to give it a look, take this one <a href=\"https://gist.github.com/halirutan/e385d237ad679efe37c8590a135b9623\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gist.github.com/halirutan/e385d237ad679efe37c8590a135b9623</a>",
  "id": "5b71d75e9aef23712411c6b8",
  "issues": [],
  "mentions": [
   {
    "screenName": "axkr",
    "userId": "57a20b3c40f3a6eec05dc2ad",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T19:09:18.253Z",
  "text": "@axkr If you like to give it a look, take this one https://gist.github.com/halirutan/e385d237ad679efe37c8590a135b9623",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/halirutan/e385d237ad679efe37c8590a135b9623"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> ok, this is much better as before. In comparison to my old 4.5 test-suite I now have often results with Hypergeometric2F1() which isn&#39;t completly implemented in my project",
  "id": "5b71e26c5b07ae730ab36baa",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T19:56:28.140Z",
  "text": "@halirutan ok, this is much better as before. In comparison to my old 4.5 test-suite I now have often results with Hypergeometric2F1() which isn't completly implemented in my project",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "In former version there are rules Integrate(Sin(x) / x,x) -&gt; SinIntegral(x) and Integrate(Cos(x) / x,x) -&gt; CosIntegral(x)",
  "id": "5b71e2c3637ee66082e6cdd7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T19:57:55.504Z",
  "text": "In former version there are rules Integrate(Sin(x) / x,x) -> SinIntegral(x) and Integrate(Cos(x) / x,x) -> CosIntegral(x)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "Are they deleted now?",
  "id": "5b71e2cb5b07ae730ab36de7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T19:58:03.310Z",
  "text": "Are they deleted now?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-13T20:37:00.275Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"axkr\" class=\"mention\">@axkr</span> Hi Axel!  As you can see, Patrick has finally dragged me into the world of GitHub. :smirk:<br>No, the rules for integrating sin(x)/x and cos(x)/x were certainly not deleted in Rubi 4.16.  Do you wish them to be?",
  "id": "5b71ebc9179f842c97337ae7",
  "issues": [],
  "mentions": [
   {
    "screenName": "axkr",
    "userId": "57a20b3c40f3a6eec05dc2ad",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T20:36:25.131Z",
  "text": "@axkr Hi Axel!  As you can see, Patrick has finally dragged me into the world of GitHub. :smirk: \nNo, the rules for integrating sin(x)/x and cos(x)/x were certainly not deleted in Rubi 4.16.  Do you wish them to be?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  ok, then m matcher seems to work different than for Rubi4.5",
  "id": "5b71ed8da6af14730b2f258f",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T20:43:57.870Z",
  "text": "@AlbertRich  ok, then m matcher seems to work different than for Rubi4.5",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"axkr\" class=\"mention\">@axkr</span> You will have to talk to Patrick about that.",
  "id": "5b71eddd5762ee4fe5705503",
  "issues": [],
  "mentions": [
   {
    "screenName": "axkr",
    "userId": "57a20b3c40f3a6eec05dc2ad",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T20:45:17.939Z",
  "text": "@axkr You will have to talk to Patrick about that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> opend an issue: <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"70\" href=\"https://github.com/axkr/symja_android_library/issues/70\" data-provider=\"github\" data-issue-repo=\"axkr/symja_android_library\" class=\"issue\">axkr/symja_android_library#70</a>",
  "id": "5b71f22ba6af14730b2f4273",
  "issues": [
   {
    "number": "70",
    "repo": "axkr/symja_android_library"
   }
  ],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-13T21:03:39.626Z",
  "text": "@halirutan opend an issue: https://github.com/axkr/symja_android_library/issues/70",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"axkr\" class=\"mention\">@axkr</span> Basically we can debug everything and see how it compares to Mathematica. If you use my file, then we have the advantage, that my Rule XXX is exactly your Rule XXX and we can see in detail what doesn&#39;t work.",
  "id": "5b71f8f35cd1d528ceae033d",
  "issues": [],
  "mentions": [
   {
    "screenName": "axkr",
    "userId": "57a20b3c40f3a6eec05dc2ad",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-13T21:32:35.761Z",
  "text": "@axkr Basically we can debug everything and see how it compares to Mathematica. If you use my file, then we have the advantage, that my Rule XXX is exactly your Rule XXX and we can see in detail what doesn't work.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> see issue <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"70\" class=\"issue\">#70</a> - all JUnit tests work now, but the results are not confirmed against a &quot;reference&quot;. Removed &quot;Unintegrable&quot; from rules and set a &quot;hard&quot; rule &quot;priority/order&quot; to follow exactly the Rubi rules order. The test suite is now slower than for Rubi 4.5, but I assume this is due to a greater rule base.",
  "id": "5b72b7885ec2bc174ff8a8b5",
  "issues": [
   {
    "number": "70"
   }
  ],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-14T11:05:44.468Z",
  "text": "@halirutan see issue #70 - all JUnit tests work now, but the results are not confirmed against a \"reference\". Removed \"Unintegrable\" from rules and set a \"hard\" rule \"priority/order\" to follow exactly the Rubi rules order. The test suite is now slower than for Rubi 4.5, but I assume this is due to a greater rule base.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"axkr\" class=\"mention\">@axkr</span> I pulled your latest rub416 branch and imported it. When I run <code>Integrate</code>, the Rubi rules are used for everything, right?",
  "id": "5b72e0c45cd1d528ceae05a1",
  "issues": [],
  "mentions": [
   {
    "screenName": "axkr",
    "userId": "57a20b3c40f3a6eec05dc2ad",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-14T14:01:40.680Z",
  "text": "@axkr I pulled your latest rub416 branch and imported it. When I run `Integrate`, the Rubi rules are used for everything, right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "The reason I ask is because I saw that you have implemented some integration rules yourself in <code>org.matheclipse.core.reflection.system.Integrate#evaluate</code> and only at the end Rubi is called.",
  "id": "5b72e1a8ebb2c760639197eb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-14T14:05:28.274Z",
  "text": "The reason I ask is because I saw that you have implemented some integration rules yourself in `org.matheclipse.core.reflection.system.Integrate#evaluate` and only at the end Rubi is called.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "How can I use only Rubi&#39;s rules in the <code>MMAConsole</code>?",
  "id": "5b72e1cf9aef23712411c8bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-14T14:06:06.999Z",
  "text": "How can I use only Rubi's rules in the `MMAConsole`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-14T14:15:28.205Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "In Integrate#evaluate() you can call only:<pre><code>                    <span class=\"constant\">result</span> = integrateByRubiRules(ast, F.NIL);\n                    <span class=\"keyword\">if</span> (<span class=\"constant\">result</span>.isPresent()) {\n<span class=\"command\">                        return</span> <span class=\"constant\">result</span>;\n                    }</code></pre>",
  "id": "5b72e3f2637ee66082ec66a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-14T14:15:14.725Z",
  "text": "In Integrate#evaluate() you can call only:\n```\n\t\t\t\t\tresult = integrateByRubiRules(ast, F.NIL);\n\t\t\t\t\tif (result.isPresent()) {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n \t```\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "but I doubt that this will work out of the box.",
  "id": "5b72e41a49932d4fe4de9aef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-14T14:15:54.662Z",
  "text": "but I doubt that this will work out of the box.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "Note that I&#39;ve deleted the last 4 lines of your Gist rules",
  "id": "5b72e45e196bc60b6bcae8aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-14T14:17:02.654Z",
  "text": "Note that I've deleted the last 4 lines of your Gist rules",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"axkr\" class=\"mention\">@axkr</span> Yes, and you should have! I simply forgot to mention this but it turned out you saw it yourself.",
  "id": "5b72e47947294d6166dfa4c1",
  "issues": [],
  "mentions": [
   {
    "screenName": "axkr",
    "userId": "57a20b3c40f3a6eec05dc2ad",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-14T14:17:29.715Z",
  "text": "@axkr Yes, and you should have! I simply forgot to mention this but it turned out you saw it yourself.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "the JUnit tests don&#39;t come to an end if I only call integrateByRubiRules",
  "id": "5b72e6fea6af14730b349a1a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-14T14:28:14.395Z",
  "text": "the JUnit tests don't come to an end if I only call integrateByRubiRules",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"axkr\" class=\"mention\">@axkr</span> My point is that we need a way to compare the sequence of rules with the ones from Mathematica to find where it goes wrong.",
  "id": "5b72e74bbd63c770b7abb2b1",
  "issues": [],
  "mentions": [
   {
    "screenName": "axkr",
    "userId": "57a20b3c40f3a6eec05dc2ad",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-14T14:29:31.243Z",
  "text": "@axkr My point is that we need a way to compare the sequence of rules with the ones from Mathematica to find where it goes wrong.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> I don&#39;t think that&#39;s sufficient, because the used system functions like Simplify, Together,... aren&#39;t of cours so sophisticated",
  "id": "5b72e7b0637ee66082ec7cf7",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-14T14:31:12.508Z",
  "text": "@halirutan I don't think that's sufficient, because the used system functions like Simplify, Together,... aren't of cours so sophisticated",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  What&#39;s more interesting for me, if it&#39;s possible to create a JUnit test suite from your tests (one method per test) and then in the first step, we can see if the system don&#39;t answer or we get StackoverflowErrors for some input.",
  "id": "5b72e86b196bc60b6bcb022f",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-14T14:34:19.766Z",
  "text": "@halirutan  What's more interesting for me, if it's possible to create a JUnit test suite from your tests (one method per test) and then in the first step, we can see if the system don't answer or we get StackoverflowErrors for some input.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-14T14:38:02.421Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"axkr\" class=\"mention\">@axkr</span> The question is, what do we check against if we don&#39;t know the result?",
  "id": "5b72e9465054ab1410e4ab3e",
  "issues": [],
  "mentions": [
   {
    "screenName": "axkr",
    "userId": "57a20b3c40f3a6eec05dc2ad",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-14T14:37:58.007Z",
  "text": "@axkr The question is, what do we check against if we don't know the result?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Or should we only use <code>org.matheclipse.core.system.AbstractTestCase#evalString</code>where the result is not checked? Just to see if it blows up.",
  "id": "5b72e997ebb2c76063919803",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-14T14:39:19.208Z",
  "text": "Or should we only use `org.matheclipse.core.system.AbstractTestCase#evalString`where the result is not checked? Just to see if it blows up.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> yes thats the basic approach. Convert the result to FullForm and check against another &quot;FullForm&quot; string?",
  "id": "5b72e9e249932d4fe4dec052",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-14T14:40:34.683Z",
  "text": "@halirutan yes thats the basic approach. Convert the result to FullForm and check against another \"FullForm\" string?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"axkr\" class=\"mention\">@axkr</span> But the results will be completely different because as you said yourself, your <code>Together</code> and <code>Simplify</code> is vastly different.",
  "id": "5b72ea2a5cd1d528ceae05d1",
  "issues": [],
  "mentions": [
   {
    "screenName": "axkr",
    "userId": "57a20b3c40f3a6eec05dc2ad",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-14T14:41:46.139Z",
  "text": "@axkr But the results will be completely different because as you said yourself, your `Together` and `Simplify` is vastly different.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> at least the basic tests should be equal. More complex test cases have to be adopted (for example by maintaining the library for missing functions)",
  "id": "5b72ea7e26e68560fdf5167e",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-14T14:43:10.385Z",
  "text": "@halirutan at least the basic tests should be equal. More complex test cases have to be adopted (for example by maintaining the library for missing functions)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"axkr\" class=\"mention\">@axkr</span> Btw, we have the same problem when comparing Rubi results against Mathematica&#39;s <code>Integrate</code> results. It is inherently difficult to prove antiderivatives are equivalent when they are more complicated. ",
  "id": "5b72edac5cd1d528ceae05db",
  "issues": [],
  "mentions": [
   {
    "screenName": "axkr",
    "userId": "57a20b3c40f3a6eec05dc2ad",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-14T14:56:44.973Z",
  "text": "@axkr Btw, we have the same problem when comparing Rubi results against Mathematica's `Integrate` results. It is inherently difficult to prove antiderivatives are equivalent when they are more complicated. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> yes of course a simple derivation wouldn&#39;t help :-)",
  "id": "5b72ee0d5b07ae730ab9327a",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-14T14:58:21.873Z",
  "text": "@halirutan yes of course a simple derivation wouldn't help :-)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Yes, exactly. Even for this short example, we need the whole blast of<code>FullSimplify</code> to show the antiderivative is correct",
  "id": "5b72ee3fcdc5fe3dfa45ce92",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-14T14:59:11.702Z",
  "text": "Yes, exactly. Even for this short example, we need the whole blast of`FullSimplify` to show the antiderivative is correct",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\"><span class=\"keyword\">D</span>[<span class=\"keyword\">Integrate</span>[<span class=\"keyword\">Sqrt</span>[x^<span class=\"number\">3</span> + x], x], x] // <span class=\"keyword\">FullSimplify</span></code></pre>",
  "id": "5b72ee43cdc5fe3dfa45ce94",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-14T14:59:15.214Z",
  "text": "```mma\nD[Integrate[Sqrt[x^3 + x], x], x] // FullSimplify\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Recently, you were mentioning your 12% core test. Is this a fixed set of problems and if yes, where can I find them?",
  "id": "5b72fe08cdc5fe3dfa45ced3",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-14T16:06:32.168Z",
  "text": "@AlbertRich Recently, you were mentioning your 12% core test. Is this a fixed set of problems and if yes, where can I find them?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-14T21:07:31.329Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> No, I don&#39;t like maintaining multiple copies of databases that soon get out of sync.<br>Rather the program I use to test Rubi and Mathematica&#39;s built-in integrator has a variable that controls the percentage of problems in the test-suite that are tested.  This control variable can be set anywhere between 0 and 100.<br>Here is the relevant code where problemlist starts off as a list of all the problems in a test file:<pre><code class=\"mma\"><span class=\"keyword\">If</span>[<span class=\"number\">0</span>&lt;$PercentToTest&lt;<span class=\"number\">100</span>,\n  <span class=\"keyword\">With</span>[<span class=\"list\">{num = Length[problemlist]}</span>,\n  <span class=\"keyword\">SeedRandom</span>[<span class=\"number\">314159265</span>]; <span class=\"keyword\">RandomInteger</span>[<span class=\"number\">100000</span>]; <span class=\"keyword\">RandomInteger</span>[<span class=\"number\">100000</span>];\n  problemlist = <span class=\"keyword\">Part</span>[problemlist,<span class=\"keyword\">Sort</span>[<span class=\"keyword\">RandomSample</span>[<span class=\"keyword\">Range</span>[num],<span class=\"keyword\">Max</span>[<span class=\"number\">5</span>,<span class=\"keyword\">Ceiling</span>[num*$PercentToTest/<span class=\"number\">100</span>]]]]]]]</code></pre>",
  "id": "5b7343efe9b96f2c980b7dd8",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-14T21:04:47.415Z",
  "text": "@halirutan No, I don't like maintaining multiple copies of databases that soon get out of sync.\nRather the program I use to test Rubi and Mathematica's built-in integrator has a variable that controls the percentage of problems in the test-suite that are tested.  This control variable can be set anywhere between 0 and 100.\nHere is the relevant code where problemlist starts off as a list of all the problems in a test file:\n```Mma\nIf[0<$PercentToTest<100,\n  With[{num = Length[problemlist]},\n  SeedRandom[314159265]; RandomInteger[100000]; RandomInteger[100000];\n  problemlist = Part[problemlist,Sort[RandomSample[Range[num],Max[5,Ceiling[num*$PercentToTest/100]]]]]]]\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-08-14T21:07:03.163Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Note that the random selection is reproducible.  BTW, I am currently rewriting the test program to be suitable for distribution, so please hold off on writing one yourself.",
  "id": "5b7343f5637ee66082eeba15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-14T21:04:53.452Z",
  "text": "Note that the random selection is reproducible.  BTW, I am currently rewriting the test program to be suitable for distribution, so please hold off on writing one yourself.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Alright. Nice that you are working on the test-runner.",
  "id": "5b73748c5054ab1410e4acab",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T00:32:12.194Z",
  "text": "@AlbertRich Alright. Nice that you are working on the test-runner.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Should running the test program load Rubi if it is not already loaded?  If so, what is the standard way to see if Rubi is loaded?",
  "id": "5b7378555ec2bc174ffd3895",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T00:48:21.391Z",
  "text": "@halirutan Should running the test program load Rubi if it is not already loaded?  If so, what is the standard way to see if Rubi is loaded?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> It&#39;s hard to say something general, but I would tend to say No.",
  "id": "5b737a245e602921338480ea",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T00:56:04.708Z",
  "text": "@AlbertRich It's hard to say something general, but I would tend to say No.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "The reason is that the most obvious reason to use the test-suite is to check adjusted rules.",
  "id": "5b737a6f9aef23712411ca35",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T00:57:19.490Z",
  "text": "The reason is that the most obvious reason to use the test-suite is to check adjusted rules.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Ok, the test program will just abort with a message, if the DownValues of Int is the empty list.",
  "id": "5b737ac967eb9f60fee000f3",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T00:58:49.942Z",
  "text": "@halirutan Ok, the test program will just abort with a message, if the DownValues of Int is the empty list.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "So the user should set-up everything before calling functions from the test-suite. I would go even a bit further and claim that it is good if the test-function of this package should do something meaningful per default (like using <code>Int</code> as integrator) but it should be possible to give a custom <em>integration function</em>. I can think of many applications for this. E.g. with SymJa or SymPy, one can easily built a Mathematica function that calls the Java/Python integrator and returns the result.",
  "id": "5b737b675054ab1410e4acb0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T01:01:27.152Z",
  "text": "So the user should set-up everything before calling functions from the test-suite. I would go even a bit further and claim that it is good if the test-function of this package should do something meaningful per default (like using `Int` as integrator) but it should be possible to give a custom *integration function*. I can think of many applications for this. E.g. with SymJa or SymPy, one can easily built a Mathematica function that calls the Java/Python integrator and returns the result.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "But let us push this back until you have some first version.",
  "id": "5b737b7f47294d6166dfa670",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T01:01:51.906Z",
  "text": "But let us push this back until you have some first version.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "For SymJa we need to be able to test the Rubi rules as well but this is going to be much harder because (a) SymJa has not the capabilities that Mathematica has when you ask  it to work on expressions (Simplify, Apart, Together, etc) which means (b) that intermediate results and the end-result might look completely different.",
  "id": "5b737bb85e602921338480f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T01:02:48.959Z",
  "text": "For SymJa we need to be able to test the Rubi rules as well but this is going to be much harder because (a) SymJa has not the capabilities that Mathematica has when you ask  it to work on expressions (Simplify, Apart, Together, etc) which means (b) that intermediate results and the end-result might look completely different.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> I think the SymJa people should have their own test program.",
  "id": "5b737bdda3a93d242266db67",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T01:03:25.779Z",
  "text": "@halirutan I think the SymJa people should have their own test program.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "They have but it is so much harder to show that the result is actually correct.",
  "id": "5b737bf45054ab1410e4acb2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T01:03:48.032Z",
  "text": "They have but it is so much harder to show that the result is actually correct.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-15T01:04:22.475Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> That&#39;s their problem.",
  "id": "5b737c0ba3a93d242266dc3b",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T01:04:11.738Z",
  "text": "@halirutan That's their problem.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Ok, the test program will just abort with a message, if the DownValues of Int is the empty list.",
  "id": "5b737c8a5ec2bc174ffd4b74",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T01:06:18.047Z",
  "text": "@halirutan Ok, the test program will just abort with a message, if the DownValues of Int is the empty list.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "OK",
  "id": "5b737c915054ab1410e4acb4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T01:06:25.142Z",
  "text": "OK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> I will merge version 4.16.0.2 now and create the final release. ",
  "id": "5b737cbf5e602921338480fa",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T01:07:11.704Z",
  "text": "@AlbertRich I will merge version 4.16.0.2 now and create the final release. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Ok.  Will the rules have already been fixed by <code>FixIntRules</code>?",
  "id": "5b737cece9b96f2c980ca769",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T01:07:56.791Z",
  "text": "@halirutan Ok.  Will the rules have already been fixed by `FixIntRules`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Just wondering.",
  "id": "5b737d4d937eee24231b723d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T01:09:33.716Z",
  "text": "Just wondering.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<blockquote>\n<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> That&#39;s their problem.</p></blockquote>\n<p>I see it a bit differently. It is mostly easy for me to give them a hand with all the knowledge that I earned from you and <em>everyone</em> can use a Java/Python implementation, while you need to buy Mathematica for our package.</p>",
  "id": "5b737d825cd1d528ceae0744",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T01:10:26.500Z",
  "text": "> @halirutan That's their problem.\n\nI see it a bit differently. It is mostly easy for me to give them a hand with all the knowledge that I earned from you and *everyone* can use a Java/Python implementation, while you need to buy Mathematica for our package.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-15T01:13:07.052Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> For our package, the approach of precalculating fixed rules doesn&#39;t make sense as it makes for SymJa. For the Mathematica package, I definitely target to include an automatic mechanism that saves the <code>mx</code> files. The loading of the complete Rubi package is then a matter of about one second.",
  "id": "5b737e0febb2c760639199c9",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T01:12:47.058Z",
  "text": "@AlbertRich For our package, the approach of precalculating fixed rules doesn't make sense as it makes for SymJa. For the Mathematica package, I definitely target to include an automatic mechanism that saves the `mx` files. The loading of the complete Rubi package is then a matter of about one second.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Not to worry, I was just wondering.",
  "id": "5b737e6a67eb9f60fee01702",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T01:14:18.406Z",
  "text": "@halirutan Not to worry, I was just wondering.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "It wouldn&#39;t gain us much loading speed. Btw, I&#39;m again and again impressed that Mathematica&#39;s rule matching mechanism is so fast compared to other systems. Both SymJa and SymPy have drastic speed problems that come from the pattern matching.",
  "id": "5b737ecabd63c770b7abb4ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T01:15:54.400Z",
  "text": "It wouldn't gain us much loading speed. Btw, I'm again and again impressed that Mathematica's rule matching mechanism is so fast compared to other systems. Both SymJa and SymPy have drastic speed problems that come from the pattern matching.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Yes, fast pattern matching is a black art.",
  "id": "5b737f1b196bc60b6bce7c13",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T01:17:15.011Z",
  "text": "@halirutan Yes, fast pattern matching is a black art.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "Gibt es noch \u00c4nderungen in RubiRules4.16.0.m?",
  "id": "5b741a7da37112689c228acf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T12:20:13.389Z",
  "text": "Gibt es noch \u00c4nderungen in RubiRules4.16.0.m?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"axkr\" class=\"mention\">@axkr</span> Nope, the version that you had yesterday is the final one. But you need to look if you have all changes from the integration utility functions. Not sure how much has changed there.",
  "id": "5b741afe5054ab1410e4addb",
  "issues": [],
  "mentions": [
   {
    "screenName": "axkr",
    "userId": "57a20b3c40f3a6eec05dc2ad",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T12:22:22.713Z",
  "text": "@axkr Nope, the version that you had yesterday is the final one. But you need to look if you have all changes from the integration utility functions. Not sure how much has changed there.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  are there  integration utility functions where the order of rules is important?",
  "id": "5b741ba1a3a93d24226a43b1",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T12:25:05.515Z",
  "text": "@halirutan  are there  integration utility functions where the order of rules is important?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"axkr\" class=\"mention\">@axkr</span> No, I wouldn&#39;t say so.",
  "id": "5b74212eebb2c76063919ae4",
  "issues": [],
  "mentions": [
   {
    "screenName": "axkr",
    "userId": "57a20b3c40f3a6eec05dc2ad",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-15T12:48:46.987Z",
  "text": "@axkr No, I wouldn't say so.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"axkr\" class=\"mention\">@axkr</span>  <span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> The order rules are defined is of concern only when the same function name is defined by multiple rules having the same number of arguments, as is the case when Rubi uses over 6700 rules to define <code>Int[expn,var]</code>.<br>For the most part, the functions in <code>Integration utility functions.m</code> are defined by just a few rules that are in close proximity, so it is easy to define them in the right order. The major exception to this are the functions</p><ul>\n<li><code>ExpandIntegrand</code> (44 rules),</li>\n<li><code>FixSimplify</code> (24 rules), </li>\n<li><code>TrigSimplifyAux</code> (31 rules),</li>\n<li><code>SimplifyAntiderivative</code>(33 rules),</li>\n<li><code>FixInertTrigFunction</code>(60 rules), and</li>\n<li><code>UnifyInertTrigFunction</code>(75 rules).</li>\n</ul>\n<p>For the most part the patterns for the rules defining these functions are mutually exclusive making the load order unimportant .  But care should be taken if you should decide to change the order.</p>",
  "id": "5b74f01aa6af14730b402135",
  "issues": [],
  "mentions": [
   {
    "screenName": "axkr",
    "userId": "57a20b3c40f3a6eec05dc2ad",
    "userIds": []
   },
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-16T03:31:38.743Z",
  "text": "@axkr  @halirutan The order rules are defined is of concern only when the same function name is defined by multiple rules having the same number of arguments, as is the case when Rubi uses over 6700 rules to define `Int[expn,var]`. \nFor the most part, the functions in `Integration utility functions.m` are defined by just a few rules that are in close proximity, so it is easy to define them in the right order. The major exception to this are the functions\n* `ExpandIntegrand` (44 rules),\n* `FixSimplify` (24 rules), \n* `TrigSimplifyAux` (31 rules),\n* `SimplifyAntiderivative`(33 rules),\n* `FixInertTrigFunction`(60 rules), and\n* `UnifyInertTrigFunction`(75 rules).\n\nFor the most part the patterns for the rules defining these functions are mutually exclusive making the load order unimportant .  But care should be taken if you should decide to change the order.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Thanks, that is very informative. It wouldn&#39;t be a problem for me to turn these into definitions in the right order as I did with the <code>Int</code> rules by using their <code>DownValues</code>.",
  "id": "5b74f47aa2ef515e5708798f",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-16T03:50:18.332Z",
  "text": "@AlbertRich Thanks, that is very informative. It wouldn't be a problem for me to turn these into definitions in the right order as I did with the `Int` rules by using their `DownValues`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> I would be very surprised if they were not already in the &quot;right order&quot;.  Tell me if they are not.",
  "id": "5b75290c67eb9f60fee95784",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-16T07:34:36.687Z",
  "text": "@halirutan I would be very surprised if they were not already in the \"right order\".  Tell me if they are not.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Albert, I made a quick test this morning regarding the back-references from DownValues to notebook-positions. For this, I didn&#39;t use <code>Get</code> to load the files, but I read them as list of held expressions. Then, I used <code>Block</code> to create an <code>Int</code> rule for each line in the <code>m</code> file separately, used <code>FixIntRules</code> on it to get the final form, and then applied <code>Hash</code> to get a unique id for each rule. This works, however, it is so unbelievably slow, that it is no option for us.",
  "id": "5b76725f8d59fb7567e16bcc",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-17T06:59:43.560Z",
  "text": "@AlbertRich Albert, I made a quick test this morning regarding the back-references from DownValues to notebook-positions. For this, I didn't use `Get` to load the files, but I read them as list of held expressions. Then, I used `Block` to create an `Int` rule for each line in the `m` file separately, used `FixIntRules` on it to get the final form, and then applied `Hash` to get a unique id for each rule. This works, however, it is so unbelievably slow, that it is no option for us.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "But what I also saw is (because I could label <code>DownValues[Int]</code> with files and cell-positions) that the final down-values for <code>Int</code> <em>seem</em> to appear in the exact order you load them. Would you agree (at least assume) that, when we create the down-values ourselves in the exact loading order, Rubi is still functional?",
  "id": "5b76732138159125056638ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-17T07:02:57.684Z",
  "text": "But what I also saw is (because I could label `DownValues[Int]` with files and cell-positions) that the final down-values for `Int` *seem* to appear in the exact order you load them. Would you agree (at least assume) that, when we create the down-values ourselves in the exact loading order, Rubi is still functional?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> As best as I understand what you are saying, I don&#39;t think there should be a problem.  Of course, the ultimate decider is passing the 71,000+ integration test suite...",
  "id": "5b767705e026575f0f8591eb",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-17T07:19:33.974Z",
  "text": "@halirutan As best as I understand what you are saying, I don't think there should be a problem.  Of course, the ultimate decider is passing the 71,000+ integration test suite...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> hab die Anzahl  derJUnit Fehler auf 11 reduziert f\u00fcr Issue <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"72\" class=\"issue\">#72</a>",
  "id": "5b783bb9d7901b2c6057095d",
  "issues": [
   {
    "number": "72"
   }
  ],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-18T15:31:05.066Z",
  "text": "@halirutan hab die Anzahl  derJUnit Fehler auf 11 reduziert f\u00fcr Issue #72",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/axkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3109793?v=4&s=60",
   "displayName": "Ax Kr",
   "gv": "4",
   "id": "57a20b3c40f3a6eec05dc2ad",
   "url": "/axkr",
   "username": "axkr",
   "v": 9
  },
  "html": "Kannst du auch enmal die Testcases f\u00fcr <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"74\" href=\"https://github.com/axkr/symja_android_library/issues/74\" data-provider=\"github\" data-issue-repo=\"axkr/symja_android_library\" class=\"issue\">axkr/symja_android_library#74</a> erstellen?",
  "id": "5b783bdcdd0b74601e25fe9e",
  "issues": [
   {
    "number": "74",
    "repo": "axkr/symja_android_library"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-18T15:31:40.941Z",
  "text": "Kannst du auch enmal die Testcases f\u00fcr https://github.com/axkr/symja_android_library/issues/74 erstellen?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Just a note about your recent W|C post: <code>PacletInstall</code> does not support <code>https</code> in M11.1 and earlier. I don&#39;t know if you were aware of this. I see that the paclet compatibility is set to M10.3.1.  People with those early versions can still download the paclet manually and install it from their file system (instead of from online).",
  "id": "5b7fdd0726bac95353c9e8b9",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:25:11.729Z",
  "text": "@halirutan Just a note about your recent W|C post: `PacletInstall` does not support `https` in M11.1 and earlier. I don't know if you were aware of this. I see that the paclet compatibility is set to M10.3.1.  People with those early versions can still download the paclet manually and install it from their file system (instead of from online).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"szhorvat\" class=\"mention\">@szhorvat</span> No, I was not aware of this. I simply tested on different systems and it is quite likely that I did not test the download from GitHub.",
  "id": "5b7fde6a26bac95353c9e8bc",
  "issues": [],
  "mentions": [
   {
    "screenName": "szhorvat",
    "userId": "547e2ff5db8155e6700daa4d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:31:06.864Z",
  "text": "@szhorvat No, I was not aware of this. I simply tested on different systems and it is quite likely that I did not test the download from GitHub.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "Also, is caching the rules into a fast-to-load MX still being considered?",
  "id": "5b7fde8b8d59fb7567e18367",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:31:39.846Z",
  "text": "Also, is caching the rules into a fast-to-load MX still being considered?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "Loading is really slow.",
  "id": "5b7fde90844de2337cdc8407",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:31:44.562Z",
  "text": "Loading is really slow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "v10.0+ MX files are pretty compatible.",
  "id": "5b7fde9a3815912505665021",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:31:54.666Z",
  "text": "v10.0+ MX files are pretty compatible.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"szhorvat\" class=\"mention\">@szhorvat</span> Yes, it simply needs refactoring. My plan is to initialize the mx files on the first loading and not distribute them.",
  "id": "5b7fdeb926bac95353c9e8c0",
  "issues": [],
  "mentions": [
   {
    "screenName": "szhorvat",
    "userId": "547e2ff5db8155e6700daa4d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:32:24.058Z",
  "text": "@szhorvat Yes, it simply needs refactoring. My plan is to initialize the mx files on the first loading and not distribute them.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "(We support down to Mathematica version 7)",
  "id": "5b7fdeca9fc431606e922bd2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-24T10:32:42.473Z",
  "text": "(We support down to Mathematica version 7)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "for x86 machines, I believe only one set of 32-bit and one set of 64-bit MX files would over everything (any OS)",
  "id": "5b7fdecf26bac95353c9e8c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:32:47.415Z",
  "text": "for x86 machines, I believe only one set of 32-bit and one set of 64-bit MX files would over everything (any OS)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "But I don&#39;t know if it would also cover ARM (e.g. Raspberry Pi or whatever they&#39;re planning on the iPad)",
  "id": "5b7fdedf844de2337cdc840a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:33:03.726Z",
  "text": "But I don't know if it would also cover ARM (e.g. Raspberry Pi or whatever they're planning on the iPad)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "It may be more robust to auto-generate the MX files on first load.",
  "id": "5b7fdef2844de2337cdc840c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:33:22.086Z",
  "text": "It may be more robust to auto-generate the MX files on first load.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Yep, that was my thought too.",
  "id": "5b7fdefe146618721cac9366",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-24T10:33:34.407Z",
  "text": "Yep, that was my thought too.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "Finally, if you and Albert like that kind of thing (I do), you can prepend a <code>ProgressIndicator[Appearance -&gt; &quot;Necklace&quot;]</code> to the message that is displayed during loading. (Of course, do it only when running with a notebook, not in the command line.)",
  "id": "5b7fdf3b146618721cac9368",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:34:35.862Z",
  "text": "Finally, if you and Albert like that kind of thing (I do), you can prepend a `ProgressIndicator[Appearance -> \"Necklace\"]` to the message that is displayed during loading. (Of course, do it only when running with a notebook, not in the command line.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"szhorvat\" class=\"mention\">@szhorvat</span> Too incompatible with 7/8 (Albert actually uses 8 most of the time).",
  "id": "5b7fdf6c844de2337cdc8411",
  "issues": [],
  "mentions": [
   {
    "screenName": "szhorvat",
    "userId": "547e2ff5db8155e6700daa4d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:35:24.405Z",
  "text": "@szhorvat Too incompatible with 7/8 (Albert actually uses 8 most of the time).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "That&#39;s why I went for the status bar.",
  "id": "5b7fdf7c844de2337cdc8414",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-24T10:35:40.402Z",
  "text": "That's why I went for the status bar.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "Why does the paclet require 10.3?  Can I help with making it work down to 10.0 or even 9.0?",
  "id": "5b7fdfc09fc431606e922bd4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-24T10:36:48.919Z",
  "text": "Why does the paclet require 10.3?  Can I help with making it work down to 10.0 or even 9.0?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "The pretty formatting should work in 10.0, mostly",
  "id": "5b7fdfd98d59fb7567e1836f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-24T10:37:13.835Z",
  "text": "The pretty formatting should work in 10.0, mostly",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "(Acutally, I don&#39;t even know if the ProgressIndicator isn&#39;t supported on 7, but in the latest release I had to make a lot of changes in the visual appearance and I I don&#39;t like to put version conditions everywhere)",
  "id": "5b7fdff1146618721cac936c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-08-24T10:37:37.930Z",
  "text": "(Acutally, I don't even know if the ProgressIndicator isn't supported on 7, but in the latest release I had to make a lot of changes in the visual appearance and I I don't like to put version conditions everywhere)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"szhorvat\" class=\"mention\">@szhorvat</span> The paclet versioning is really only a guess of mine. ",
  "id": "5b7fe0088d59fb7567e18371",
  "issues": [],
  "mentions": [
   {
    "screenName": "szhorvat",
    "userId": "547e2ff5db8155e6700daa4d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-24T10:38:00.342Z",
  "text": "@szhorvat The paclet versioning is really only a guess of mine. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "Is there already a test suite?",
  "id": "5b7fe030146618721cac936e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-24T10:38:40.375Z",
  "text": "Is there already a test suite?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "(Not for the integrals, which I&#39;m sure are compatible, but for the more fragile stuff such as formatting.)",
  "id": "5b7fe04026bac95353c9e8c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:38:56.365Z",
  "text": "(Not for the integrals, which I'm sure are compatible, but for the more fragile stuff such as formatting.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"szhorvat\" class=\"mention\">@szhorvat</span> No. Surprisingly the things I implemented worked with small corrections even for version 7.",
  "id": "5b7fe070e580cd3c2aa2d647",
  "issues": [],
  "mentions": [
   {
    "screenName": "szhorvat",
    "userId": "547e2ff5db8155e6700daa4d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:39:44.281Z",
  "text": "@szhorvat No. Surprisingly the things I implemented worked with small corrections even for version 7.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"szhorvat\" class=\"mention\">@szhorvat</span> The only thing that needs to be done is write a detailed  installation instruction if paclet installation is different in version 9, 10, 11, 11.3",
  "id": "5b7fe0a43815912505665028",
  "issues": [],
  "mentions": [
   {
    "screenName": "szhorvat",
    "userId": "547e2ff5db8155e6700daa4d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:40:36.875Z",
  "text": "@szhorvat The only thing that needs to be done is write a detailed  installation instruction if paclet installation is different in version 9, 10, 11, 11.3",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Then, the version number can be reduced to 9 (or whenever paclets where functional)",
  "id": "5b7fe0c4381591250566502b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-24T10:41:08.048Z",
  "text": "Then, the version number can be reduced to 9 (or whenever paclets where functional)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "There might have been paclets as early as 6 in some form, but I think there was a big rewrite for 9.0",
  "id": "5b7fe108e580cd3c2aa2d64a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:42:16.036Z",
  "text": "There might have been paclets as early as 6 in some form, but I think there was a big rewrite for 9.0",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "I never tried to use them with 8, but that&#39;s where I&#39;d expect the problems to start",
  "id": "5b7fe115381591250566502e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:42:29.087Z",
  "text": "I never tried to use them with 8, but that's where I'd expect the problems to start",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "As for paclet installation:",
  "id": "5b7fe1223815912505665030",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:42:42.624Z",
  "text": "As for paclet installation:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "For MaTeX and IGraph/M I provide an install/update script on GitHub. It&#39;s ugly, unfortunately.  I think the only beautiful solution is to set up a paclet server, but I don&#39;t like this idea either.",
  "id": "5b7fe14726bac95353c9e8cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:43:19.146Z",
  "text": "For MaTeX and IGraph/M I provide an install/update script on GitHub. It's ugly, unfortunately.  I think the only beautiful solution is to set up a paclet server, but I don't like this idea either.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "<a href=\"https://github.com/szhorvat/IGraphM#installation\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/szhorvat/IGraphM#installation</a>",
  "id": "5b7fe1599fc431606e922bda",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:43:37.320Z",
  "text": "https://github.com/szhorvat/IGraphM#installation",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/szhorvat/IGraphM#installation"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "If you set up a paclet server, then you have to maintain it, or rely on someone else to maintain it. There <em>will</em> be glitches.",
  "id": "5b7fe176146618721cac9370",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:44:06.256Z",
  "text": "If you set up a paclet server, then you have to maintain it, or rely on someone else to maintain it. There *will* be glitches.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "Finally, it may be a good idea to only allow download from a location where you can collect statistics.",
  "id": "5b7fe18a9fc431606e922bdc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:44:26.223Z",
  "text": "Finally, it may be a good idea to only allow download from a location where you can collect statistics.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "You never know where this will go in the future.",
  "id": "5b7fe191844de2337cdc8424",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:44:33.395Z",
  "text": "You never know where this will go in the future.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"szhorvat\" class=\"mention\">@szhorvat</span> Ha, I had the same idea recently about using the GitHub API to import JSON and find the latest paclet release..",
  "id": "5b7fe1973815912505665032",
  "issues": [],
  "mentions": [
   {
    "screenName": "szhorvat",
    "userId": "547e2ff5db8155e6700daa4d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:44:39.418Z",
  "text": "@szhorvat Ha, I had the same idea recently about using the GitHub API to import JSON and find the latest paclet release..",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "It may be useful to be able to say that &quot;this package gets 2000 downloads per month, on average&quot;",
  "id": "5b7fe1a23815912505665035",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:44:50.106Z",
  "text": "It may be useful to be able to say that \"this package gets 2000 downloads per month, on average\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"szhorvat\" class=\"mention\">@szhorvat</span> GitHub provides this information",
  "id": "5b7fe1ba146618721cac9372",
  "issues": [],
  "mentions": [
   {
    "screenName": "szhorvat",
    "userId": "547e2ff5db8155e6700daa4d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:45:14.295Z",
  "text": "@szhorvat GitHub provides this information",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "That means that GitHub releases is useful (it collects stats).  b3m2a1&#39;s paclet server can&#39;t collect stats because it uses GitHub repos (not releases)",
  "id": "5b7fe1bc9fc431606e922bde",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:45:16.665Z",
  "text": "That means that GitHub releases is useful (it collects stats).  b3m2a1's paclet server can't collect stats because it uses GitHub repos (not releases)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<a href=\"https://www.somsubhra.com/github-release-stats/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.somsubhra.com/github-release-stats/</a>",
  "id": "5b7fe1ce26bac95353c9e8d0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-24T10:45:34.738Z",
  "text": "https://www.somsubhra.com/github-release-stats/",
  "unread": false,
  "urls": [
   {
    "url": "https://www.somsubhra.com/github-release-stats/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> </p><blockquote>\n<p><span data-link-type=\"mention\" data-screen-name=\"szhorvat\" class=\"mention\">@szhorvat</span> GitHub provides this information</p></blockquote>\n<p>Yes, exactly. That is why I suggest to keep using it instead of setting up a paclet server.</p>",
  "id": "5b7fe1ed88520a0c6ee5f2cb",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   },
   {
    "screenName": "szhorvat",
    "userId": "547e2ff5db8155e6700daa4d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:46:05.133Z",
  "text": "@halirutan \n> @szhorvat GitHub provides this information\n\nYes, exactly. That is why I suggest to keep using it instead of setting up a paclet server.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"szhorvat\" class=\"mention\">@szhorvat</span> OK, so the suggestion is: 11.3,11.2 -&gt; direct Paclet install from https, 9-11.2 Paclet install with manual downloading, 7-8 -&gt; manuall install of the zip, right?",
  "id": "5b7fe235146618721cac9375",
  "issues": [],
  "mentions": [
   {
    "screenName": "szhorvat",
    "userId": "547e2ff5db8155e6700daa4d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:47:17.938Z",
  "text": "@szhorvat OK, so the suggestion is: 11.3,11.2 -> direct Paclet install from https, 9-11.2 Paclet install with manual downloading, 7-8 -> manuall install of the zip, right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "<blockquote>\n<p><span data-link-type=\"mention\" data-screen-name=\"szhorvat\" class=\"mention\">@szhorvat</span> The only thing that needs to be done is write a detailed  installation instruction if paclet installation is different in version 9, 10, 11, 11.3</p></blockquote>\n<p>I believe it is not different, but I have not worked much with 9.</p><p>What to pay attention to: <code>PacletInstall</code> refuses to work with <code>https</code> in 11.1 and earlier. But if the paclet is local or it it&#39;s http-accessible, then all is fine.  GitHub releases enforces https.</p><p>For 9, use MathematicaVersion (and not WolframVersion) in <code>PacletInfo.m</code>.</p><p>That&#39;s about it.  For installing a paclet that&#39;s already on the local file system, the procedure is exactly the same.</p>",
  "id": "5b7fe27888520a0c6ee5f2d2",
  "issues": [],
  "mentions": [
   {
    "screenName": "szhorvat",
    "userId": "547e2ff5db8155e6700daa4d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T10:48:24.984Z",
  "text": "> @szhorvat The only thing that needs to be done is write a detailed  installation instruction if paclet installation is different in version 9, 10, 11, 11.3\n\nI believe it is not different, but I have not worked much with 9.\n\nWhat to pay attention to: `PacletInstall` refuses to work with `https` in 11.1 and earlier. But if the paclet is local or it it's http-accessible, then all is fine.  GitHub releases enforces https.\n\nFor 9, use MathematicaVersion (and not WolframVersion) in `PacletInfo.m`.\n\nThat's about it.  For installing a paclet that's already on the local file system, the procedure is exactly the same.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-24T10:49:13.729Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "<blockquote>\n<p><span data-link-type=\"mention\" data-screen-name=\"szhorvat\" class=\"mention\">@szhorvat</span> OK, so the suggestion is: 11.3,11.2 -&gt; direct Paclet install from https, 9-11.2 Paclet install with manual downloading, 7-8 -&gt; manuall install of the zip, right?</p></blockquote>\n<p>Yes, though there <em>is</em> a chance that the paclet will work in 8, possibly with modifications. But I do not think it&#39;s worth bothering with this. Very few people use 8. They can handle the zip.</p>",
  "id": "5b7fe2a38d59fb7567e18380",
  "issues": [],
  "mentions": [
   {
    "screenName": "szhorvat",
    "userId": "547e2ff5db8155e6700daa4d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-24T10:49:07.855Z",
  "text": "> @szhorvat OK, so the suggestion is: 11.3,11.2 -> direct Paclet install from https, 9-11.2 Paclet install with manual downloading, 7-8 -> manuall install of the zip, right?\n\nYes, though there *is* a chance that the paclet will work in 8, possibly with modifications. But I do not think it's worth bothering with this. Very few people use 8. They can handle the zip.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "Ah, yes, one more thing: the <code>/latest</code> GitHub release excludes pre-releases.  Good to be aware, if you ever publish pre-releases.",
  "id": "5b7fe30688520a0c6ee5f2d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-24T10:50:46.840Z",
  "text": "Ah, yes, one more thing: the `/latest` GitHub release excludes pre-releases.  Good to be aware, if you ever publish pre-releases.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"szhorvat\" class=\"mention\">@szhorvat</span> I guess I keep it with manual downloading as this is what Albert is used to.",
  "id": "5b7fe34388520a0c6ee5f2da",
  "issues": [],
  "mentions": [
   {
    "screenName": "szhorvat",
    "userId": "547e2ff5db8155e6700daa4d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-24T10:51:47.347Z",
  "text": "@szhorvat I guess I keep it with manual downloading as this is what Albert is used to.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "MaTeX install script is simple because it doesn&#39;t bother with pre-releases: <a href=\"https://github.com/szhorvat/MaTeX#upgrading-or-uninstalling\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/szhorvat/MaTeX#upgrading-or-uninstalling</a> (if you want to use it as a reference)",
  "id": "5b7fe37188520a0c6ee5f2dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-24T10:52:33.947Z",
  "text": "MaTeX install script is simple because it doesn't bother with pre-releases: https://github.com/szhorvat/MaTeX#upgrading-or-uninstalling (if you want to use it as a reference)",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/szhorvat/MaTeX#upgrading-or-uninstalling"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  Just a reminder to also test in command line mode (that warning is very likely harmless, but it can be disturbing to users)",
  "id": "5b7fe5a88d59fb7567e18387",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-24T11:02:00.298Z",
  "text": "@halirutan  Just a reminder to also test in command line mode (that warning is very likely harmless, but it can be disturbing to users)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "<a href=\"https://files.gitter.im/Rule-Based-Integration/Lobby/c33l/image.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/Rule-Based-Integration/Lobby/c33l/thumb/image.png\" alt=\"image.png\" rel=\"nofollow\"></a>",
  "id": "5b7fe5b03815912505665041",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-24T11:02:08.272Z",
  "text": "[![image.png](https://files.gitter.im/Rule-Based-Integration/Lobby/c33l/thumb/image.png)](https://files.gitter.im/Rule-Based-Integration/Lobby/c33l/image.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/Rule-Based-Integration/Lobby/c33l/thumb/image.png"
   },
   {
    "url": "https://files.gitter.im/Rule-Based-Integration/Lobby/c33l/image.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "Finally, about generating the MX files on first load: it may be a good idea to leave the door open for bundling pre-generated MX files into a paclet, if that turns out to be useful in the future.",
  "id": "5b7fe5db844de2337cdc842f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-24T11:02:51.056Z",
  "text": "Finally, about generating the MX files on first load: it may be a good idea to leave the door open for bundling pre-generated MX files into a paclet, if that turns out to be useful in the future.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "It must take ages to load Rubi on a raspberry pi.",
  "id": "5b7fe5f23815912505665043",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-24T11:03:14.937Z",
  "text": "It must take ages to load Rubi on a raspberry pi.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"szhorvat\" class=\"mention\">@szhorvat</span> I will take care of the warning in the next release. It comes from displaying something in the status-bar.",
  "id": "5b7fe61288520a0c6ee5f2e5",
  "issues": [],
  "mentions": [
   {
    "screenName": "szhorvat",
    "userId": "547e2ff5db8155e6700daa4d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-24T11:03:46.223Z",
  "text": "@szhorvat I will take care of the warning in the next release. It comes from displaying something in the status-bar.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-24T11:04:14.293Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> I usually do it with <code>If[$Notebooks, ...]</code>",
  "id": "5b7fe62a26bac95353c9e8d4",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-24T11:04:10.825Z",
  "text": "@halirutan I usually do it with `If[$Notebooks, ...]`",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "Which is the usual test for the presence of a standard FE",
  "id": "5b7fe63de580cd3c2aa2d66d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-24T11:04:29.701Z",
  "text": "Which is the usual test for the presence of a standard FE",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"szhorvat\" class=\"mention\">@szhorvat</span> About distributing the mx files: ",
  "id": "5b7fe64b146618721cac9385",
  "issues": [],
  "mentions": [
   {
    "screenName": "szhorvat",
    "userId": "547e2ff5db8155e6700daa4d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-24T11:04:43.797Z",
  "text": "@szhorvat About distributing the mx files: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "The first downside is that Rubi will be very large, because we need mx for 7/8/9/10-11 and different operating systems.",
  "id": "5b7fe6743815912505665045",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T11:05:24.487Z",
  "text": "The first downside is that Rubi will be very large, because we need mx for 7/8/9/10-11 and different operating systems.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "I have no clue when I can use the same for different systems.",
  "id": "5b7fe695e580cd3c2aa2d66f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T11:05:57.003Z",
  "text": "I have no clue when I can use the same for different systems.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "That&#39;s why I would prefer building them on the first startup.",
  "id": "5b7fe6bde580cd3c2aa2d671",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T11:06:37.000Z",
  "text": "That's why I would prefer building them on the first startup.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "By &quot;leave the door open&quot; I meant: do not choose a design which would make it very tedious or difficult, should it prove useful in the future. I did not mean doing it right away. E.g., there could be a convenience distribution just for the Raspberry Pi, so people don&#39;t have to wait for an hour to load the package (that&#39;s my rough estimate of how long it might take\u2014I&#39;ll test it on the weekend)",
  "id": "5b7fe6de26bac95353c9e8d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-24T11:07:10.789Z",
  "text": "By \"leave the door open\" I meant: do not choose a design which would make it very tedious or difficult, should it prove useful in the future. I did not mean doing it right away. E.g., there could be a convenience distribution just for the Raspberry Pi, so people don't have to wait for an hour to load the package (that's my rough estimate of how long it might take\u2014I'll test it on the weekend)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "I agree that for desktop computers (i.e. nearly everything) it&#39;s best to build them on first load.",
  "id": "5b7fe726844de2337cdc8432",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-24T11:08:22.063Z",
  "text": "I agree that for desktop computers (i.e. nearly everything) it's best to build them on first load.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "Maybe the best approach would be bundling such MX files into an entirely separate package: don&#39;t want to wait for Rubi loading on an RPi?  Install this second package then.  It might put the files in a temporary location (ApplicationData)",
  "id": "5b7ff2879fc431606e922bf0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T11:56:55.455Z",
  "text": "Maybe the best approach would be bundling such MX files into an entirely separate package: don't want to wait for Rubi loading on an RPi?  Install this second package then.  It might put the files in a temporary location (ApplicationData)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"szhorvat\" class=\"mention\">@szhorvat</span> I just implemented the mx saving/loading.",
  "id": "5b7ff2b3e580cd3c2aa2d68c",
  "issues": [],
  "mentions": [
   {
    "screenName": "szhorvat",
    "userId": "547e2ff5db8155e6700daa4d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T11:57:39.483Z",
  "text": "@szhorvat I just implemented the mx saving/loading.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\"><span class=\"comment\">(* Mathematica Init file    *)</span>\n<span class=\"comment\">(* Created by Mathematica Plugin for IntelliJ IDEA *)</span>\n\nRubi`Private`$RubiVersionNumber = <span class=\"keyword\">Version</span> /. <span class=\"keyword\">List</span> @@ <span class=\"keyword\">Get</span>[<span class=\"keyword\">FileNameJoin</span>[<span class=\"list\">{DirectoryName[System`Private`$InputFileName], \"..\", \"PacletInfo.m\"}</span>]];\n\n<span class=\"keyword\">If</span>[<span class=\"keyword\">Not</span>@<span class=\"keyword\">ValueQ</span>[Global`$LoadShowSteps],\n  Rubi`Private`$LoadShowSteps = <span class=\"keyword\">True</span>,\n  Rubi`Private`$LoadShowSteps = <span class=\"keyword\">TrueQ</span>[Global`$LoadShowSteps]\n];\n\nRubi`Private`$MXFile = <span class=\"keyword\">FileNameJoin</span>[<span class=\"list\">{\n  DirectoryName[System`Private`$InputFileName],\n  $SystemID &lt;&gt; \"-Rubi-\" &lt;&gt; Rubi`Private`$RubiVersionNumber &lt;&gt; If[Rubi`Private`$LoadShowSteps, \"-Steps.mx\", \".mx\"]\n}</span>];\n\n<span class=\"keyword\">Unprotect</span>[Rubi`Private`Int];\n<span class=\"keyword\">ClearAll</span>[<span class=\"string\">\"Rubi`*\"</span>];\n<span class=\"keyword\">If</span>[<span class=\"keyword\">FileExistsQ</span>[Rubi`Private`$MXFile] &amp;&amp; <span class=\"keyword\">Not</span>[<span class=\"keyword\">TrueQ</span>[Rubi`$Debug]],\n  <span class=\"keyword\">Get</span>[Rubi`Private`$MXFile],\n  <span class=\"keyword\">Get</span>[<span class=\"string\">\"Rubi`Rubi`\"</span>];\n  <span class=\"keyword\">DumpSave</span>[Rubi`Private`$MXFile, <span class=\"string\">\"Rubi`\"</span>];\n]</code></pre>",
  "id": "5b7ff2c2844de2337cdc843c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-24T11:57:54.905Z",
  "text": "```mma\n(* Mathematica Init file    *)\n(* Created by Mathematica Plugin for IntelliJ IDEA *)\n\nRubi`Private`$RubiVersionNumber = Version /. List @@ Get[FileNameJoin[{DirectoryName[System`Private`$InputFileName], \"..\", \"PacletInfo.m\"}]];\n\nIf[Not@ValueQ[Global`$LoadShowSteps],\n  Rubi`Private`$LoadShowSteps = True,\n  Rubi`Private`$LoadShowSteps = TrueQ[Global`$LoadShowSteps]\n];\n\nRubi`Private`$MXFile = FileNameJoin[{\n  DirectoryName[System`Private`$InputFileName],\n  $SystemID <> \"-Rubi-\" <> Rubi`Private`$RubiVersionNumber <> If[Rubi`Private`$LoadShowSteps, \"-Steps.mx\", \".mx\"]\n}];\n\nUnprotect[Rubi`Private`Int];\nClearAll[\"Rubi`*\"];\nIf[FileExistsQ[Rubi`Private`$MXFile] && Not[TrueQ[Rubi`$Debug]],\n  Get[Rubi`Private`$MXFile],\n  Get[\"Rubi`Rubi`\"];\n  DumpSave[Rubi`Private`$MXFile, \"Rubi`\"];\n]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "It&#39;s unbelievable that from an mx the package is loaded in 0.2 seconds.",
  "id": "5b7ff2fd88520a0c6ee5f30f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-24T11:58:53.355Z",
  "text": "It's unbelievable that from an mx the package is loaded in 0.2 seconds.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> <span data-link-type=\"mention\" data-screen-name=\"szhorvat\" class=\"mention\">@szhorvat</span> If you like, you can try the prerelease version of 4.16.0.3",
  "id": "5b7ffb678d59fb7567e183b1",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   },
   {
    "screenName": "szhorvat",
    "userId": "547e2ff5db8155e6700daa4d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T12:34:47.134Z",
  "text": "@AlbertRich @szhorvat If you like, you can try the prerelease version of 4.16.0.3",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<a href=\"https://drive.google.com/drive/folders/19MQUEA5Uxns0ChbvyS-gDKrp9efpKjkI\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://drive.google.com/drive/folders/19MQUEA5Uxns0ChbvyS-gDKrp9efpKjkI</a>",
  "id": "5b7ffb6926bac95353c9e901",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T12:34:49.091Z",
  "text": "https://drive.google.com/drive/folders/19MQUEA5Uxns0ChbvyS-gDKrp9efpKjkI",
  "unread": false,
  "urls": [
   {
    "url": "https://drive.google.com/drive/folders/19MQUEA5Uxns0ChbvyS-gDKrp9efpKjkI"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "The <code>$LoadElementaryFunctionRules</code> is gone, but <code>$LoadShowSteps</code> still exists. However, after loading Rubi the first time, it saves the mx file and the second time you load it, it uses this mx file and loads Rubi in under a second on my machine.",
  "id": "5b7ffbcd146618721cac93ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T12:36:29.814Z",
  "text": "The `$LoadElementaryFunctionRules` is gone, but `$LoadShowSteps` still exists. However, after loading Rubi the first time, it saves the mx file and the second time you load it, it uses this mx file and loads Rubi in under a second on my machine.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "The mx file depends on <ol>\n<li>the operating system</li>\n<li>Mathematica version</li>\n<li>Rubi version</li>\n<li>With or without steps</li>\n</ol>\n",
  "id": "5b7ffc0388520a0c6ee5f31e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T12:37:23.864Z",
  "text": "The mx file depends on \n\n1. the operating system\n2. Mathematica version\n3. Rubi version\n4. With or without steps",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "As soon as one of these changes, the mx file is recreated for the new <em>configuration</em>.",
  "id": "5b7ffc2b844de2337cdc844e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T12:38:03.148Z",
  "text": "As soon as one of these changes, the mx file is recreated for the new *configuration*.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "So in theory, you can use one Rubi installation with several Mathematica versions and after the first loading, each Mathematica version loads the appropriate mx file.",
  "id": "5b7ffcd58d59fb7567e183b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-24T12:40:53.504Z",
  "text": "So in theory, you can use one Rubi installation with several Mathematica versions and after the first loading, each Mathematica version loads the appropriate mx file.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "For v10.0+, the <code>$SystemID</code> should be sufficient, but there may be some subtleties.  It&#39;s good to leave the version in there for the moment.",
  "id": "5b7ffd4b3815912505665066",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-24T12:42:51.079Z",
  "text": "For v10.0+, the `$SystemID` should be sufficient, but there may be some subtleties.  It's good to leave the version in there for the moment.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "I&#39;m feeling slightly uneasy about writing into the paclet directory",
  "id": "5b7ffd6ee580cd3c2aa2d6b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-24T12:43:26.956Z",
  "text": "I'm feeling slightly uneasy about writing into the paclet directory",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"szhorvat\" class=\"mention\">@szhorvat</span> I don&#39;t :)",
  "id": "5b7ffd7c8d59fb7567e183b8",
  "issues": [],
  "mentions": [
   {
    "screenName": "szhorvat",
    "userId": "547e2ff5db8155e6700daa4d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-24T12:43:40.667Z",
  "text": "@szhorvat I don't :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "Well, it has advantages: it&#39;s less likely that the wrong MX (e.g. wrong version) gets loaded",
  "id": "5b7ffd8f9fc431606e922bfc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-08-24T12:43:59.863Z",
  "text": "Well, it has advantages: it's less likely that the wrong MX (e.g. wrong version) gets loaded",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "We can discuss this, but for now I simply want to know if it works on Albers version 8 and what your RPi says.",
  "id": "5b7ffd9e3815912505665068",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-24T12:44:14.353Z",
  "text": "We can discuss this, but for now I simply want to know if it works on Albers version 8 and what your RPi says.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "If something can be messed up, there will be at least one user who messes it up (i.e. somehow load an incompatible MX)",
  "id": "5b7ffda78d59fb7567e183bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-08-24T12:44:23.653Z",
  "text": "If something can be messed up, there will be at least one user who messes it up (i.e. somehow load an incompatible MX)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/szhorvat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1212871?v=4&s=60",
   "displayName": "Szabolcs Horv\u00e1t",
   "gv": "4",
   "id": "547e2ff5db8155e6700daa4d",
   "url": "/szhorvat",
   "username": "szhorvat",
   "v": 5
  },
  "html": "Will try the RPi on the weekend",
  "id": "5b7ffdb4381591250566506a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-08-24T12:44:36.352Z",
  "text": "Will try the RPi on the weekend",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  <span data-link-type=\"mention\" data-screen-name=\"szhorvat\" class=\"mention\">@szhorvat</span> Amazing!  Everything works as advertised.<br>Following the now more clearly written download and installation instructions for the various versions of Mathematica on the Rubi website, </p><ul>\n<li>for Mathematica 7 and 8, I downloaded the Rubi-4.16.0.4.zip and extracted <code>Rubi</code> to <code>FileNameJoin[{$UserBaseDirectory, &quot;Applications&quot;}]</code>, and</li>\n<li>for Mathematica 11.3, I  downloaded Rubi-4.16.04.paclet and installed it using <code>PacletInstall</code>.</li>\n</ul>\n<p>Then on all 3 versions of Mathematica using  the <code>Get</code> Rubi command, 3 <code>mx</code> files were created in <code>Mathematica\\Applications\\Rubi\\Kernel</code>.  Now for Mathematica 7, 8 and 11.3, the <code>Get</code> Rubi command loads it almost instantly.</p>",
  "id": "5b805583ac25fd11b58caf1a",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   },
   {
    "screenName": "szhorvat",
    "userId": "547e2ff5db8155e6700daa4d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-08-24T18:59:15.544Z",
  "text": "@halirutan  @szhorvat Amazing!  Everything works as advertised.\nFollowing the now more clearly written download and installation instructions for the various versions of Mathematica on the Rubi website, \n* for Mathematica 7 and 8, I downloaded the Rubi-4.16.0.4.zip and extracted `Rubi` to `FileNameJoin[{$UserBaseDirectory, \"Applications\"}]`, and\n* for Mathematica 11.3, I  downloaded Rubi-4.16.04.paclet and installed it using `PacletInstall`.\n\nThen on all 3 versions of Mathematica using  the `Get` Rubi command, 3 `mx` files were created in `Mathematica\\Applications\\Rubi\\Kernel`.  Now for Mathematica 7, 8 and 11.3, the `Get` Rubi command loads it almost instantly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Interestingly, the <code>mx</code> file sizes for Mathematica 7, 8 and 11.3 are 112Mb, 44Mb and 5Mb respectively.  That&#39;s quite a difference...",
  "id": "5b8055f6f5402f32aa88149e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-24T19:01:10.193Z",
  "text": "Interestingly, the `mx` file sizes for Mathematica 7, 8 and 11.3 are 112Mb, 44Mb and 5Mb respectively.  That's quite a difference...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-24T22:23:01.603Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> A small problem remains: If I mistakenly type <code>Int</code> before loading Rubi, the warning message<br><code>Int::shdw: Symbol Int appears in multiple contexts {Rubi,Global}; definitions in context Rubi may shadow or be shadowed by other definitions.</code><br>is displayed, and <code>Int</code> subsequently appears in red.",
  "id": "5b808381f86b741b05bb5dbf",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-24T22:15:29.379Z",
  "text": "@halirutan A small problem remains: If I mistakenly type `Int` before loading Rubi, the warning message\n`Int::shdw: Symbol Int appears in multiple contexts {Rubi,Global}; definitions in context Rubi may shadow or be shadowed by other definitions.`\nis displayed, and `Int` subsequently appears in red.",
  "unread": false,
  "urls": [],
  "v": 5
 },
 {
  "editedAt": "2018-08-26T04:32:27.199Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Nasser1\" class=\"mention\">@Nasser1</span>  <span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> FYI, Nasser posted some SymPy Rubi results on <a href=\"https://groups.google.com/forum/#!topic/sci.math.symbolic/hzNcwk6l9ZE\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">sci.math.symbolic</a>.",
  "id": "5b822d1a38a12915e4f8ee18",
  "issues": [],
  "mentions": [
   {
    "screenName": "Nasser1",
    "userIds": []
   },
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-26T04:31:22.293Z",
  "text": "@Nasser1  @halirutan FYI, Nasser posted some SymPy Rubi results on [sci.math.symbolic](https://groups.google.com/forum/#!topic/sci.math.symbolic/hzNcwk6l9ZE).",
  "unread": false,
  "urls": [
   {
    "url": "https://groups.google.com/forum/#!topic/sci.math.symbolic/hzNcwk6l9ZE"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> I fixed the shadow message, when loading the Rubi package with <code>&lt;&lt;Rubi` </code>. So the end-user will never see the this warning. I included <code>$LoadElementaryFunctions</code> back in and we should simply fix the documentation that setting the variables is no longer necessary. However, if push comes to shove and someone really really likes to load only a sub-set of Rubi or without Steps, then this will still work.",
  "id": "5b83bc8b3815912505665616",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-27T08:55:39.610Z",
  "text": "@AlbertRich I fixed the shadow message, when loading the Rubi package with ``<<Rubi` ``. So the end-user will never see the this warning. I included `$LoadElementaryFunctions` back in and we should simply fix the documentation that setting the variables is no longer necessary. However, if push comes to shove and someone really really likes to load only a sub-set of Rubi or without Steps, then this will still work.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<a href=\"https://drive.google.com/drive/folders/19MQUEA5Uxns0ChbvyS-gDKrp9efpKjkI\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://drive.google.com/drive/folders/19MQUEA5Uxns0ChbvyS-gDKrp9efpKjkI</a>",
  "id": "5b83bc91146618721cac99bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-27T08:55:45.234Z",
  "text": "https://drive.google.com/drive/folders/19MQUEA5Uxns0ChbvyS-gDKrp9efpKjkI",
  "unread": false,
  "urls": [
   {
    "url": "https://drive.google.com/drive/folders/19MQUEA5Uxns0ChbvyS-gDKrp9efpKjkI"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> So there is only going to be one <code>mx</code> file?",
  "id": "5b83bdfdc53ee54c18abc45d",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-27T09:01:49.364Z",
  "text": "@halirutan So there is only going to be one `mx` file?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Still one for each configuration if the user indeed uses the variables. ",
  "id": "5b83be353815912505665619",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-27T09:02:45.064Z",
  "text": "@AlbertRich Still one for each configuration if the user indeed uses the variables. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Otherwise there will only be one MX file that contains steps and all functions.",
  "id": "5b83be4d381591250566561c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-27T09:03:09.652Z",
  "text": "Otherwise there will only be one MX file that contains steps and all functions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Ok.  Sounds good.",
  "id": "5b83be6158a3797aa3c174d0",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-27T09:03:29.186Z",
  "text": "@halirutan Ok.  Sounds good.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Ah yes, and the function to clear the MX files is called <code>RubiClearMemoryImages[]</code>",
  "id": "5b83be818d59fb7567e189c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-27T09:04:01.238Z",
  "text": "Ah yes, and the function to clear the MX files is called `RubiClearMemoryImages[]`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Is there a way to uninstall Rubi entirely?",
  "id": "5b83beb194f8164c17a704a7",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-27T09:04:49.538Z",
  "text": "@halirutan Is there a way to uninstall Rubi entirely?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "But basically this is never necessary, except when the user crashes his system in between writing the MX file and it gets corrupted.",
  "id": "5b83beb888520a0c6ee5f935",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-27T09:04:56.339Z",
  "text": "But basically this is never necessary, except when the user crashes his system in between writing the MX file and it gets corrupted.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<code>PacletUninstall[&quot;Rubi&quot;]</code>",
  "id": "5b83bec4381591250566561e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-27T09:05:08.279Z",
  "text": "`PacletUninstall[\"Rubi\"]`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "For systems with the old directory structure, simply removing the whole directory. Rubi does not store any information at any other place",
  "id": "5b83bef288520a0c6ee5f937",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-27T09:05:54.450Z",
  "text": "For systems with the old directory structure, simply removing the whole directory. Rubi does not store any information at any other place",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Yup, we&#39;re low profile. :smile:",
  "id": "5b83bf1eff4451561643ec58",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-27T09:06:38.336Z",
  "text": "@halirutan Yup, we're low profile. :smile:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "I guess <code>PacletUninstall[&quot;Rubi&quot;]</code> should be in the installation instructions.",
  "id": "5b83bf7df86b741b05cbe9a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-27T09:08:13.069Z",
  "text": "I guess `PacletUninstall[\"Rubi\"]` should be in the installation instructions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Yes, I wanted to talk to you about that anyway. We need a small section about updating/removing Rubi, but I&#39;m a bit hesitant to make the installation instructions so long before we finally present how you can use Rubi.",
  "id": "5b83bfbf3815912505665623",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-27T09:09:19.374Z",
  "text": "@AlbertRich Yes, I wanted to talk to you about that anyway. We need a small section about updating/removing Rubi, but I'm a bit hesitant to make the installation instructions so long before we finally present how you can use Rubi.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Maybe put it at the end, after the usage?",
  "id": "5b83bfe2146618721cac99ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-27T09:09:54.073Z",
  "text": "Maybe put it at the end, after the usage?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-27T09:18:35.988Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Perhaps Rubi installation/deinstallation and usage should be on two different pages.",
  "id": "5b83bff34be56c5918a0589a",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-27T09:10:11.277Z",
  "text": "@halirutan Perhaps Rubi installation/deinstallation and usage should be on two different pages.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Remember, we have a flat structure. A separate page means an additional button in the top-menu or links inside the page which is highly ugly as the user doesn&#39;t know where he is.",
  "id": "5b83c02ee580cd3c2aa2dd3e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-27T09:11:10.002Z",
  "text": "Remember, we have a flat structure. A separate page means an additional button in the top-menu or links inside the page which is highly ugly as the user doesn't know where he is.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-27T09:15:29.336Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> I think top-level &quot;Installation&quot; and &quot;Usage&quot; buttons makes sense.  Users probably use the &quot;Installation&quot; button only once, but the &quot;Usage&quot; button often.",
  "id": "5b83c110fd3c641b0616366c",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-27T09:14:56.996Z",
  "text": "@halirutan I think top-level \"Installation\" and \"Usage\" buttons makes sense.  Users probably use the \"Installation\" button only once, but the \"Usage\" button often.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "Installation and usage are totally different things.",
  "id": "5b83c1bff86b741b05cbf668",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-27T09:17:51.406Z",
  "text": "Installation and usage are totally different things.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p>Hello Rubi experts: WHat is the last field in the new RubiStats list? When it says</p><pre><code>  <span class=\"collection\">{<span class=\"collection\">{RubiStats<span class=\"collection\">[<span class=\"collection\">{<span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">31</span>, <span class=\"number\">25</span>, <span class=\"number\">0.0645161290322580645</span>`<span class=\"number\">4</span>., <span class=\"collection\">{<span class=\"number\">2138</span>, <span class=\"number\">206</span>}</span>}</span>]</span>}</span>}</span></code></pre><p>What are the <code>{2138, 206}</code>? I am trying to modify my build script to work with the new Rubi 4.16.0.3.<br>thanks.</p>",
  "id": "5b8527d31d3a5711b6acb2c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T10:45:39.025Z",
  "text": "Hello Rubi experts: WHat is the last field in the new RubiStats list? When it says\n\n      {{RubiStats[{3, 2, 31, 25, 0.0645161290322580645`4., {2138, 206}}]}}\n\nWhat are the `{2138, 206}`? I am trying to modify my build script to work with the new Rubi 4.16.0.3.\nthanks.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> The rules used to solve this problem. It is documented at the end <a href=\"https://rulebasedintegration.org/mathematicaPackage.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">of this page</a>.",
  "id": "5b8529a8844de2337cdc8e03",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T10:53:28.572Z",
  "text": "@nasser1 The rules used to solve this problem. It is documented at the end [of this page](https://rulebasedintegration.org/mathematicaPackage.html).",
  "unread": false,
  "urls": [
   {
    "url": "https://rulebasedintegration.org/mathematicaPackage.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "And you can assess it directly with<pre><code class=\"mma\"><span class=\"keyword\">In</span>[<span class=\"number\">3</span>]:= RubiStats[<span class=\"list\">{3, 2, 31, 25,   0.0645161290322580645`4., {2138, 206}</span>}][<span class=\"string\">\"Rules\"</span>]\n\n<span class=\"keyword\">Out</span>[<span class=\"number\">3</span>]= <span class=\"list\">{2138, 206}</span></code></pre>",
  "id": "5b8529d0146618721cac9db5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T10:54:08.683Z",
  "text": "And you can assess it directly with\n\n```mma\nIn[3]:= RubiStats[{3, 2, 31, 25,   0.0645161290322580645`4., {2138, 206}}][\"Rules\"]\n\nOut[3]= {2138, 206}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  thanks. So in this example rule 2138 is used, then followed by rule 206? Is there a way to print/obtain these rules from Rubi now, knowing the Rule number? say Rubi`getRule[2138] or something like this?",
  "id": "5b852aaee5b40332ab0cc5a1",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T10:57:50.366Z",
  "text": "@halirutan  thanks. So in this example rule 2138 is used, then followed by rule 206? Is there a way to print/obtain these rules from Rubi now, knowing the Rule number? say Rubi`getRule[2138] or something like this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> That might not necessarily be the case. When I understood it correctly, then Albert is only collecting &quot;distinct rules&quot;. So you can tell, that both rules are indeed used, but there might be some general rules (without number) in between.",
  "id": "5b852b07844de2337cdc8e06",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T10:59:19.760Z",
  "text": "@nasser1 That might not necessarily be the case. When I understood it correctly, then Albert is only collecting \"distinct rules\". So you can tell, that both rules are indeed used, but there might be some general rules (without number) in between.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p>So in current Rubi, stats still go to the output/print stream?  so only way to capture stats, is to redirect output as I was doing in 4.15.2? This is what I do to read the fields of stats</p><pre><code>   stats = <span class=\"list\">{}</span>;\n   <span class=\"keyword\">Unprotect</span>[<span class=\"keyword\">Print</span>];\n   <span class=\"keyword\">Print</span> = <span class=\"keyword\">AppendTo</span>[stats, <span class=\"list\">{##}</span>] &amp;;\n   res = Stats[Int[(<span class=\"keyword\">Sec</span>[x]^<span class=\"number\">2</span> + <span class=\"keyword\">Sec</span>[x]^<span class=\"number\">2</span>*<span class=\"keyword\">Tan</span>[x])/((<span class=\"number\">2</span> - <span class=\"keyword\">Tan</span>[x])*<span class=\"keyword\">Sqrt</span>[<span class=\"number\">1</span> + <span class=\"keyword\">Tan</span>[x]^<span class=\"number\">3</span>]), x]]\n   <span class=\"keyword\">Print</span> =.;\n   <span class=\"keyword\">Protect</span>[<span class=\"keyword\">Print</span>];\n   <span class=\"comment\">(*now stats are in the stats variable*)</span>\n   stats[[<span class=\"number\">1</span>, <span class=\"number\">1</span>]][<span class=\"string\">\"Rules\"</span>]\n   <span class=\"comment\">(*etc.. for other fields*)</span></code></pre><p>I was hoping the need to redirect print would not be needed any more? Or is there better way to do this in order to capture the stats into a variable now?</p>",
  "id": "5b852d75ac25fd11b5a6bb91",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T11:09:41.644Z",
  "text": "So in current Rubi, stats still go to the output/print stream?  so only way to capture stats, is to redirect output as I was doing in 4.15.2? This is what I do to read the fields of stats\n\n       stats = {};\n       Unprotect[Print];\n       Print = AppendTo[stats, {##}] &;\n       res = Stats[Int[(Sec[x]^2 + Sec[x]^2*Tan[x])/((2 - Tan[x])*Sqrt[1 + Tan[x]^3]), x]]\n       Print =.;\n       Protect[Print];\n       (*now stats are in the stats variable*)\n       stats[[1, 1]][\"Rules\"]\n       (*etc.. for other fields*)\n\nI was hoping the need to redirect print would not be needed any more? Or is there better way to do this in order to capture the stats into a variable now?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Ah, Nasser. I explicitly implemented an option for you :smile: ",
  "id": "5b852dc288520a0c6ee5fd43",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T11:10:58.599Z",
  "text": "@nasser1 Ah, Nasser. I explicitly implemented an option for you :smile: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Try<pre><code class=\"mma\">Stats[Int[(<span class=\"keyword\">Sec</span>[x]^<span class=\"number\">2</span> + <span class=\"keyword\">Sec</span>[x]^<span class=\"number\">2</span>*<span class=\"keyword\">Tan</span>[x])/((<span class=\"number\">2</span> - <span class=\"keyword\">Tan</span>[x])*<span class=\"keyword\">Sqrt</span>[<span class=\"number\">1</span> + <span class=\"keyword\">Tan</span>[x]^<span class=\"number\">3</span>]), x], RubiPrintInformation -&gt; <span class=\"keyword\">False</span>]</code></pre>",
  "id": "5b852def26bac95353c9f251",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T11:11:43.242Z",
  "text": "Try\n```mma\nStats[Int[(Sec[x]^2 + Sec[x]^2*Tan[x])/((2 - Tan[x])*Sqrt[1 + Tan[x]^3]), x], RubiPrintInformation -> False]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  that is a great option! thanks. I will use this in the build, so now do not have to redirect print any more.",
  "id": "5b852e687649b9063e16461d",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T11:13:44.176Z",
  "text": "@halirutan  that is a great option! thanks. I will use this in the build, so now do not have to redirect print any more.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Same option works for <code>Steps</code> btw.",
  "id": "5b852ee6146618721cac9db8",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T11:15:50.052Z",
  "text": "@nasser1 Same option works for `Steps` btw.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> So basically, you can now do something like this:",
  "id": "5b852f1b3815912505665a29",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T11:16:43.621Z",
  "text": "@nasser1 So basically, you can now do something like this:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\"><span class=\"keyword\">Cases</span>[\n   Steps[Int[(<span class=\"keyword\">Sec</span>[x]^<span class=\"number\">2</span> + <span class=\"keyword\">Sec</span>[x]^<span class=\"number\">2</span>*<span class=\"keyword\">Tan</span>[x])/((<span class=\"number\">2</span> - <span class=\"keyword\">Tan</span>[x])*<span class=\"keyword\">Sqrt</span>[<span class=\"number\">1</span> + <span class=\"keyword\">Tan</span>[x]^<span class=\"number\">3</span>]), x], RubiPrintInformation -&gt; <span class=\"keyword\">False</span>],\n   _RubiRule, <span class=\"keyword\">Infinity</span>\n]</code></pre>",
  "id": "5b852f2d844de2337cdc8e09",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T11:17:01.874Z",
  "text": "```mma\nCases[\n   Steps[Int[(Sec[x]^2 + Sec[x]^2*Tan[x])/((2 - Tan[x])*Sqrt[1 + Tan[x]^3]), x], RubiPrintInformation -> False],\n   _RubiRule, Infinity\n]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "and you see that there is an unnamed first rule that is used in solving the problem.",
  "id": "5b852f5d8d59fb7567e18d5a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T11:17:49.401Z",
  "text": "and you see that there is an unnamed first rule that is used in solving the problem.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-28T11:20:09.050Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>    yes.  I see this. Only small issue is that, if one wants to capture the stats AND the steps, then they need to call Int twice, right?  Is there a way to obtain both Stats and Steps in same call to Int to eliminate having to  run Int twice? sorry if this is also documented somewhere.",
  "id": "5b852fc24be56c5918a8ce32",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T11:19:30.651Z",
  "text": "@halirutan    yes.  I see this. Only small issue is that, if one wants to capture the stats AND the steps, then they need to call Int twice, right?  Is there a way to obtain both Stats and Steps in same call to Int to eliminate having to  run Int twice? sorry if this is also documented somewhere.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> No, this is not possible as they are unrelated.",
  "id": "5b85300a88520a0c6ee5fd4e",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T11:20:42.891Z",
  "text": "@nasser1 No, this is not possible as they are unrelated.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  Ok. About the input test files themselves (i.e. the collection of the integrals). <a href=\"https://rulebasedintegration.org/testsuite.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://rulebasedintegration.org/testsuite.html</a>  Will there be a version number on these files as well? So if someone downloads say the Mathematica syntax input tests, and I assume these will change with time. Will there be a version number on these also? Thanks.",
  "id": "5b8531449c71d363c13e8b0a",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T11:25:56.438Z",
  "text": "@halirutan  Ok. About the input test files themselves (i.e. the collection of the integrals). https://rulebasedintegration.org/testsuite.html  Will there be a version number on these files as well? So if someone downloads say the Mathematica syntax input tests, and I assume these will change with time. Will there be a version number on these also? Thanks.",
  "unread": false,
  "urls": [
   {
    "url": "https://rulebasedintegration.org/testsuite.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<blockquote>\n<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>    yes.  I see this. Only small issue is that, if one wants to capture the stats AND the steps, then they need to call Int twice, right?  Is there a way to obtain both Stats and Steps in same call to Int to eliminate having to  run Int twice? sorry if this is also documented somewhere.</p></blockquote>\n<p><span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> However, look at this:</p>",
  "id": "5b85322b8d59fb7567e18d60",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   },
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T11:29:47.359Z",
  "text": "> @halirutan    yes.  I see this. Only small issue is that, if one wants to capture the stats AND the steps, then they need to call Int twice, right?  Is there a way to obtain both Stats and Steps in same call to Int to eliminate having to  run Int twice? sorry if this is also documented somewhere.\n\n@nasser1 However, look at this:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\"><span class=\"keyword\">SetAttributes</span>[mySteps, <span class=\"list\">{HoldFirst}</span>];\nmySteps[Int[expr_, x_]] := \n <span class=\"keyword\">Block</span>[<span class=\"list\">{Rubi`Private`$StepCounter = 0, Rubi`Private`$RuleList = {}</span>},\n  <span class=\"keyword\">With</span>[<span class=\"list\">{result = Steps[Int[expr, x], RubiPrintInformation -&gt; False]}</span>,\n   <span class=\"list\">{\n        \"Result\" -&gt; result[[2]],\n        \"Steps\" -&gt; result[[1]], \n        \"Stats\" -&gt;  RubiStats@{$StepCounter, Length[Rubi`Private`$RuleList],  LeafCount[expr], LeafCount[result],   N[Length[Rubi`Private`$RuleList]/LeafCount[expr], 4],  Rubi`Private`$RuleList}</span>\n    }\n   ]\n  ]</code></pre>",
  "id": "5b85326d8d59fb7567e18d64",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T11:30:53.047Z",
  "text": "```mma\nSetAttributes[mySteps, {HoldFirst}];\nmySteps[Int[expr_, x_]] := \n Block[{Rubi`Private`$StepCounter = 0, Rubi`Private`$RuleList = {}},\n  With[{result = Steps[Int[expr, x], RubiPrintInformation -> False]},\n   {\n        \"Result\" -> result[[2]],\n        \"Steps\" -> result[[1]], \n        \"Stats\" ->  RubiStats@{$StepCounter, Length[Rubi`Private`$RuleList],  LeafCount[expr], LeafCount[result],   N[Length[Rubi`Private`$RuleList]/LeafCount[expr], 4],  Rubi`Private`$RuleList}\n    }\n   ]\n  ]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<blockquote>\n<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  Ok. About the input test files themselves (i.e. the collection of the integrals). <a href=\"https://rulebasedintegration.org/testsuite.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://rulebasedintegration.org/testsuite.html</a>  Will there be a version number on these files as well? So if someone downloads say the Mathematica syntax input tests, and I assume these will change with time. Will there be a version number on these also? Thanks.</p></blockquote>\n<p>At the moment this makes no sense, as we only have this one version. However, when there are changes in the test-suite, we can make versioned release as we do with Rubi.</p>",
  "id": "5b85332a9fc431606e92360b",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T11:34:02.687Z",
  "text": "> @halirutan  Ok. About the input test files themselves (i.e. the collection of the integrals). https://rulebasedintegration.org/testsuite.html  Will there be a version number on these files as well? So if someone downloads say the Mathematica syntax input tests, and I assume these will change with time. Will there be a version number on these also? Thanks.\n\nAt the moment this makes no sense, as we only have this one version. However, when there are changes in the test-suite, we can make versioned release as we do with Rubi.",
  "unread": false,
  "urls": [
   {
    "url": "https://rulebasedintegration.org/testsuite.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  That is a great function. I will use mySteps. I tried it and it returned both stats and rules in same call. Thank you, this will speed things, so do not have to call Int twice.",
  "id": "5b85341f94f8164c17af8f79",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T11:38:07.404Z",
  "text": "@halirutan  That is a great function. I will use mySteps. I tried it and it returned both stats and rules in same call. Thank you, this will speed things, so do not have to call Int twice.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> There is still a glitch in removing <code>Int</code>definitions before loading Rubi. It seems I have found the issue and I&#39;m testing it right now.",
  "id": "5b854211146618721cac9df1",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T12:37:37.459Z",
  "text": "@AlbertRich There is still a glitch in removing `Int`definitions before loading Rubi. It seems I have found the issue and I'm testing it right now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> You wrote</p><blockquote>\n<p>However, when there are changes in the test-suite, we can make versioned release as we do with Rubi.</p></blockquote>\n<p>No, the test-suite should remain versionless.  The test-suite is cumulative (it only gets harder) and only the most recent one should be available.  There is no reason to want an older version.</p>",
  "id": "5b8599f8e5b40332ab0f8757",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T18:52:40.467Z",
  "text": "@halirutan You wrote\n> However, when there are changes in the test-suite, we can make versioned release as we do with Rubi.\n\nNo, the test-suite should remain versionless.  The test-suite is cumulative (it only gets harder) and only the most recent one should be available.  There is no reason to want an older version.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-28T19:43:01.447Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> There is a reason: Reproducability of test results against different versions of Mathematica or Rubi. And it is indeed no problem to simply tag time point of the test-suite as a version. A graph like the one of our website can then be labeled &quot;performance of different CAS with test-suite 2018.03.11&quot; or something like that.",
  "id": "5b85a5c19fc431606e9237b4",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T19:42:57.191Z",
  "text": "@AlbertRich There is a reason: Reproducability of test results against different versions of Mathematica or Rubi. And it is indeed no problem to simply tag time point of the test-suite as a version. A graph like the one of our website can then be labeled \"performance of different CAS with test-suite 2018.03.11\" or something like that.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Ok, I will reluctantly go along with assigning version numbers to test-suite releases, so long as it is <em>not</em> associated with Rubi&#39;s version number.  The test-suite consists of generic integration problems and their solutions, and should not be tied to Rubi by a version number.",
  "id": "5b85a9eed8d36815e5a255c3",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T20:00:46.967Z",
  "text": "@halirutan Ok, I will reluctantly go along with assigning version numbers to test-suite releases, so long as it is *not* associated with Rubi's version number.  The test-suite consists of generic integration problems and their solutions, and should not be tied to Rubi by a version number.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Basically, the users can get any version simply by downloading a specific commit. I&#39;m not so keen to have this either, because maintaining this is more work for me. I would leave it like that for now. We have more pressing matters anyway.",
  "id": "5b85aab826bac95353c9f458",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-28T20:04:08.012Z",
  "text": "@AlbertRich Basically, the users can get any version simply by downloading a specific commit. I'm not so keen to have this either, because maintaining this is more work for me. I would leave it like that for now. We have more pressing matters anyway.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mcawte",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6054848?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6054848?v=4&s=60",
   "displayName": "Michael Cawte",
   "gv": "4",
   "id": "58adf825d73408ce4f4c3b0d",
   "url": "/mcawte",
   "username": "mcawte",
   "v": 11
  },
  "html": "Hi there, thank you for the awesome software. When using Rubi to show the steps in Mathematica, it returns the rubi rule number. How does one use this number to reverse lookup the source of where the rule came from? It is my understanding that many of the rules are taken from places like Gradshteyn. Is there a table with Rubi Rule numbers to sources? I appreciate that Rubi shows the rule it is using within Mathematica, but I am having trouble understanding what some of the rules are doing and would like to be able to look up the source.",
  "id": "5b972fea1e2b442a25f38ed5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-09-11T03:00:58.598Z",
  "text": "Hi there, thank you for the awesome software. When using Rubi to show the steps in Mathematica, it returns the rubi rule number. How does one use this number to reverse lookup the source of where the rule came from? It is my understanding that many of the rules are taken from places like Gradshteyn. Is there a table with Rubi Rule numbers to sources? I appreciate that Rubi shows the rule it is using within Mathematica, but I am having trouble understanding what some of the rules are doing and would like to be able to look up the source.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-09-11T10:56:13.468Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"mcawte\" class=\"mention\">@mcawte</span> I spent a good amount of time thinking about this problem because it is less trivial than it appears to be. Let me give you a rough outline why it is hard. When we deploy the Mathematica package for Rubi, then we cannot use the notebooks because they are too large. What we need to do is to extract only the code cells from the integration rule notebooks. Each notebook is then turned into a <code>.m</code> file that <a href=\"https://bit.ly/2OdkkvW\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">looks like this</a>. At this point, I can still reverse lookup which line of code comes from which section in the notebook, because the n-th code line in the <code>.m</code> file is the n-th <em>code cell</em> in the notebook. </p><p>When you load Rubi, then the files are currently processed with <code>Get</code>in a very <a href=\"https://github.com/RuleBasedIntegration/Rubi/blob/master/Rubi/Rubi.m#L99-L297\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">specific and non-trivial order</a>. The reason is that we need to make sure that very specific rules precede more general rules because otherwise integration would go wrong. When I load the rule <code>.m</code> files with <code>Get</code>,  several things happen: 1. Mathematica ignores rules that are commented out and 2. Mathematica might to some degree change the order of the rules (it appears that this does not happen in the versions I have tested), and 3. we loose the file-name since all rules are turned into <code>DownValues</code> rules for <code>Int</code>.</p><p>What you see as &quot;Rule Number&quot; is the index of the down-value that is used. Therefore, the question is how can we calculate the file-name and line-number inside the <code>.m</code> file from a specific down-value when we cannot simply count?</p>",
  "id": "5b979ef57fe920566fb453f9",
  "issues": [],
  "mentions": [
   {
    "screenName": "mcawte",
    "userId": "58adf825d73408ce4f4c3b0d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-09-11T10:54:45.894Z",
  "text": "@mcawte I spent a good amount of time thinking about this problem because it is less trivial than it appears to be. Let me give you a rough outline why it is hard. When we deploy the Mathematica package for Rubi, then we cannot use the notebooks because they are too large. What we need to do is to extract only the code cells from the integration rule notebooks. Each notebook is then turned into a `.m` file that [looks like this](https://bit.ly/2OdkkvW). At this point, I can still reverse lookup which line of code comes from which section in the notebook, because the n-th code line in the `.m` file is the n-th *code cell* in the notebook. \n\nWhen you load Rubi, then the files are currently processed with `Get`in a very [specific and non-trivial order](https://github.com/RuleBasedIntegration/Rubi/blob/master/Rubi/Rubi.m#L99-L297). The reason is that we need to make sure that very specific rules precede more general rules because otherwise integration would go wrong. When I load the rule `.m` files with `Get`,  several things happen: 1. Mathematica ignores rules that are commented out and 2. Mathematica might to some degree change the order of the rules (it appears that this does not happen in the versions I have tested), and 3. we loose the file-name since all rules are turned into `DownValues` rules for `Int`.\n\nWhat you see as \"Rule Number\" is the index of the down-value that is used. Therefore, the question is how can we calculate the file-name and line-number inside the `.m` file from a specific down-value when we cannot simply count?",
  "unread": false,
  "urls": [
   {
    "url": "https://bit.ly/2OdkkvW"
   },
   {
    "url": "https://github.com/RuleBasedIntegration/Rubi/blob/master/Rubi/Rubi.m#L99-L297"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "The solution I had in mind was simple: We create a unique hash for each rule. So we take a rule (or some portion of it) like this",
  "id": "5b97a1100cdb3b52327e8cd9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-09-11T11:03:44.114Z",
  "text": "The solution I had in mind was simple: We create a unique hash for each rule. So we take a rule (or some portion of it) like this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\">Int[(d_ + e_.*x_^<span class=\"number\">2</span>)/(b_.*x_^<span class=\"number\">2</span> + c_.*x_^<span class=\"number\">4</span>)^(<span class=\"number\">3</span>/<span class=\"number\">4</span>), x_Symbol] := -<span class=\"number\">2</span>*(c*d - b*e)*(b*x^<span class=\"number\">2</span> + c*x^<span class=\"number\">4</span>)^(<span class=\"number\">1</span>/<span class=\"number\">4</span>)/(b*c*x) + e/c*Int[(b*x^<span class=\"number\">2</span> + c*x^<span class=\"number\">4</span>)^(<span class=\"number\">1</span>/<span class=\"number\">4</span>)/x^<span class=\"number\">2</span>, x] /; <span class=\"keyword\">FreeQ</span>[<span class=\"list\">{b, c, d, e}</span>, x]</code></pre>",
  "id": "5b97a1147fe920566fb4540e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-09-11T11:03:48.066Z",
  "text": "```mma\nInt[(d_ + e_.*x_^2)/(b_.*x_^2 + c_.*x_^4)^(3/4), x_Symbol] := -2*(c*d - b*e)*(b*x^2 + c*x^4)^(1/4)/(b*c*x) + e/c*Int[(b*x^2 + c*x^4)^(1/4)/x^2, x] /; FreeQ[{b, c, d, e}, x]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "and turn it into a unique hash number and create for all the <code>.m</code> rule files a big index of the form",
  "id": "5b97a1475e8ff15077e63695",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-09-11T11:04:39.274Z",
  "text": "and turn it into a unique hash number and create for all the `.m` rule files a big index of the form",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\"><span class=\"list\">{\n   hash1 -&gt; RubiRuleInformation[filename1, lineNumber1],\n   hash2 -&gt; RubiRuleInformation[filename2, lineNumber2],\n   ...\n}</span></code></pre>",
  "id": "5b97a184ebc9c82b6f4e2a87",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-09-11T11:05:40.405Z",
  "text": "```mma\n{\n   hash1 -> RubiRuleInformation[filename1, lineNumber1],\n   hash2 -> RubiRuleInformation[filename2, lineNumber2],\n   ...\n}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "then, when you use <code>Steps</code> and we know which down values were used, we can hash the down-value similarly and we can reverse look-up were it came from and finally, create a button that opens the correct integration rule notebook at the correct position. So in the display of steps, you&#39;ll have a button at each rule that let&#39;s you instantly look up all the information in the notebook.",
  "id": "5b97a205797eea2c6fe88ac7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-09-11T11:07:49.753Z",
  "text": "then, when you use `Steps` and we know which down values were used, we can hash the down-value similarly and we can reverse look-up were it came from and finally, create a button that opens the correct integration rule notebook at the correct position. So in the display of steps, you'll have a button at each rule that let's you instantly look up all the information in the notebook.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "However, there are a lot of troubling details:<ol>\n<li>Mathematica has so many small differences, that I cannot pre-compute the above hash-position index. The only reliable (and still not proven to work everywhere!) way is calculate the index on the users&#39; machines. In fact, it is not even possible to hash the <code>.m</code> expressions directly, I need to fake-create a real down value because Mathematica sometimes makes slight changes in expression. So for each of the 6700+ rules I need to<ol>\n<li>Turn it into a downvalue by making a fake definition of this one <code>Int</code> rule</li>\n<li>Extract the left-hand side and the conditions of the rule, because these are the things that matter and need to be hashed</li>\n<li>Save the hash, the file-name and the line-number</li>\n</ol>\n</li>\n<li>The above process is so slow, that it takes probably an hour or more. Loading Rubi without the caching we introduced in 4.16.0.4 was already slow. Now we need to go through each of the <code>.m</code> files once more and we don&#39;t load it in one chunk, we go through each line and basically load each line separately. </li>\n</ol>\n",
  "id": "5b97a5705e8ff15077e636b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-09-11T11:22:24.626Z",
  "text": "However, there are a lot of troubling details:\n\n1. Mathematica has so many small differences, that I cannot pre-compute the above hash-position index. The only reliable (and still not proven to work everywhere!) way is calculate the index on the users' machines. In fact, it is not even possible to hash the `.m` expressions directly, I need to fake-create a real down value because Mathematica sometimes makes slight changes in expression. So for each of the 6700+ rules I need to\n    1. Turn it into a downvalue by making a fake definition of this one `Int` rule\n    2. Extract the left-hand side and the conditions of the rule, because these are the things that matter and need to be hashed\n    3. Save the hash, the file-name and the line-number\n2. The above process is so slow, that it takes probably an hour or more. Loading Rubi without the caching we introduced in 4.16.0.4 was already slow. Now we need to go through each of the `.m` files once more and we don't load it in one chunk, we go through each line and basically load each line separately. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mcawte\" class=\"mention\">@mcawte</span> There is one straw of hope: If the order of the <code>Int</code> down values is indeed the same on each Mathematica version and operating system, then it might be worth a shot to create a simple lookup table ruleNumber -&gt; notebookPosition that I can calculate up-front and distribute with Rubi. Then, there is <em>only</em> the task to create a working <em>resource package</em> with all the integration rule notebooks that works in Mathematica 7-11.3 so that notebooks can be opened automatically. <em>Sigh...</em>",
  "id": "5b97a8310cdb3b52327e8cfb",
  "issues": [],
  "mentions": [
   {
    "screenName": "mcawte",
    "userId": "58adf825d73408ce4f4c3b0d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-09-11T11:34:09.046Z",
  "text": "@mcawte There is one straw of hope: If the order of the `Int` down values is indeed the same on each Mathematica version and operating system, then it might be worth a shot to create a simple lookup table ruleNumber -> notebookPosition that I can calculate up-front and distribute with Rubi. Then, there is *only* the task to create a working *resource package* with all the integration rule notebooks that works in Mathematica 7-11.3 so that notebooks can be opened automatically. *Sigh...*",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-09-15T01:54:52.244Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p>Hello;<br>I wanted to update the LITE test for the current Rubi version to compare with earlier versions on the same LITE tests.  <a href=\"https://www.12000.org/my_notes/CAS_integration_tests/reports/separate/Rubi/report.htm\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.12000.org/my_notes/CAS_integration_tests/reports/separate/Rubi/report.htm</a><br>One thing I find little confusing now, is how to know what version number of Rubi I am using? There does not seem to be a command for this? </p><p>If one install latest Rubi using the PacletInstall command, will this automatically remove the earlier version?</p><p>Before, with the notebook as package method, I would save each version in separate folder and just open the version I want.<br>How does one now save say Rubi version 4.16.04 in  a place so it is there all the time on my PC? and how  can one start different versions? So when a new version of Rubi is released, I can always switch if I want to earlier version to run the test against (if I want to reproduce the old results).<br>Thanks</p>",
  "id": "5b9c65f81ee2ca65021abb5e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-09-15T01:52:56.054Z",
  "text": "Hello;\nI wanted to update the LITE test for the current Rubi version to compare with earlier versions on the same LITE tests.  https://www.12000.org/my_notes/CAS_integration_tests/reports/separate/Rubi/report.htm    \nOne thing I find little confusing now, is how to know what version number of Rubi I am using? There does not seem to be a command for this? \n\nIf one install latest Rubi using the PacletInstall command, will this automatically remove the earlier version?\n\nBefore, with the notebook as package method, I would save each version in separate folder and just open the version I want.  \nHow does one now save say Rubi version 4.16.04 in  a place so it is there all the time on my PC? and how  can one start different versions? So when a new version of Rubi is released, I can always switch if I want to earlier version to run the test against (if I want to reproduce the old results).   \nThanks\n",
  "unread": false,
  "urls": [
   {
    "url": "https://www.12000.org/my_notes/CAS_integration_tests/reports/separate/Rubi/report.htm"
   }
  ],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<a href=\"https://files.gitter.im/Rule-Based-Integration/Lobby/bPvU/image.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/Rule-Based-Integration/Lobby/bPvU/thumb/image.png\" alt=\"image.png\" rel=\"nofollow\"></a>",
  "id": "5b9c6828fcba1254fab99c19",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-09-15T02:02:16.507Z",
  "text": "[![image.png](https://files.gitter.im/Rule-Based-Integration/Lobby/bPvU/thumb/image.png)](https://files.gitter.im/Rule-Based-Integration/Lobby/bPvU/image.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/Rule-Based-Integration/Lobby/bPvU/thumb/image.png"
   },
   {
    "url": "https://files.gitter.im/Rule-Based-Integration/Lobby/bPvU/image.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> We have",
  "id": "5b9cdc0a797eea2c6fe8989f",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-09-15T10:16:42.369Z",
  "text": "@nasser1 We have",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\"><span class=\"keyword\">In</span>[<span class=\"number\">79</span>]:= &lt;&lt; Rubi`\n\n<span class=\"keyword\">In</span>[<span class=\"number\">80</span>]:= $RubiVersion\n\n<span class=\"keyword\">Out</span>[<span class=\"number\">80</span>]= <span class=\"string\">\"Rubi 4.16.0.4\"</span></code></pre>",
  "id": "5b9cdc10797eea2c6fe898a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-09-15T10:16:48.100Z",
  "text": "```mma\nIn[79]:= << Rubi`\n\nIn[80]:= $RubiVersion\n\nOut[80]= \"Rubi 4.16.0.4\"\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "Another possibility is to directly look at the version of the paclet:",
  "id": "5b9cdc97ebc9c82b6f4e37f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-09-15T10:19:03.717Z",
  "text": "Another possibility is to directly look at the version of the paclet:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code class=\"mma\"><span class=\"keyword\">In</span>[<span class=\"number\">82</span>]:= paclet = <span class=\"keyword\">First</span>@PacletFind[<span class=\"string\">\"Rubi\"</span>]\n\n<span class=\"keyword\">In</span>[<span class=\"number\">83</span>]:= paclet[<span class=\"string\">\"Version\"</span>]\n\n<span class=\"keyword\">Out</span>[<span class=\"number\">83</span>]= <span class=\"string\">\"4.16.0.4\"</span></code></pre>",
  "id": "5b9cdca80cdb3b52327e9a87",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-09-15T10:19:20.554Z",
  "text": "```mma\nIn[82]:= paclet = First@PacletFind[\"Rubi\"]\n\nIn[83]:= paclet[\"Version\"]\n\nOut[83]= \"4.16.0.4\"\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<blockquote>\nIf one install latest Rubi using the PacletInstall command, will this automatically remove the earlier version?</blockquote>\n",
  "id": "5b9cdcd37fe920566fb46239",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-09-15T10:20:03.829Z",
  "text": "> If one install latest Rubi using the PacletInstall command, will this automatically remove the earlier version?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "You can see all installed versions using <code>PacletFind[&quot;Rubi&quot;]</code>. To my knowledge, the old version are not automatically deleted.",
  "id": "5b9cdd1f488f837cbcd2b5c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-09-15T10:21:19.087Z",
  "text": "You can see all installed versions using `PacletFind[\"Rubi\"]`. To my knowledge, the old version are not automatically deleted.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "You can either use <code>PacletUninstall[&quot;Rubi&quot;, &quot;4.16.0.3&quot;]</code> to remove a specific version or you feed <code>PacletUninstall</code> with one of the paclets that <code>PacletFind</code> returns. Both of these should work.",
  "id": "5b9cddd10cdb3b52327e9a89",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-09-15T10:24:17.867Z",
  "text": "You can either use `PacletUninstall[\"Rubi\", \"4.16.0.3\"]` to remove a specific version or you feed `PacletUninstall` with one of the paclets that `PacletFind` returns. Both of these should work.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<a href=\"https://files.gitter.im/Rule-Based-Integration/Lobby/MpN9/image.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/Rule-Based-Integration/Lobby/MpN9/thumb/image.png\" alt=\"image.png\" rel=\"nofollow\"></a>",
  "id": "5b9d67b5b4990c30eebe67af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-09-15T20:12:37.200Z",
  "text": "[![image.png](https://files.gitter.im/Rule-Based-Integration/Lobby/MpN9/thumb/image.png)](https://files.gitter.im/Rule-Based-Integration/Lobby/MpN9/image.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/Rule-Based-Integration/Lobby/MpN9/thumb/image.png"
   },
   {
    "url": "https://files.gitter.im/Rule-Based-Integration/Lobby/MpN9/image.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "Thanks Patrick. I need to learn more about Pacelts.<br>I&#39;ve update the LITE tests to include 4.15.2 and 4.16.0.4.<br><a href=\"https://www.12000.org/my_notes/CAS_integration_tests/reports/separate/Rubi/report.htm\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.12000.org/my_notes/CAS_integration_tests/reports/separate/Rubi/report.htm</a>",
  "id": "5b9d67c23b7e6c2edd21170c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-09-15T20:12:50.141Z",
  "text": "Thanks Patrick. I need to learn more about Pacelts.\nI've update the LITE tests to include 4.15.2 and 4.16.0.4.\nhttps://www.12000.org/my_notes/CAS_integration_tests/reports/separate/Rubi/report.htm\n\n\n\n",
  "unread": false,
  "urls": [
   {
    "url": "https://www.12000.org/my_notes/CAS_integration_tests/reports/separate/Rubi/report.htm"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<a href=\"https://files.gitter.im/Rule-Based-Integration/Lobby/FIsd/image.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/Rule-Based-Integration/Lobby/FIsd/thumb/image.png\" alt=\"image.png\" rel=\"nofollow\"></a>",
  "id": "5b9d67ebf08bc22dfb6119d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-09-15T20:13:31.023Z",
  "text": "[![image.png](https://files.gitter.im/Rule-Based-Integration/Lobby/FIsd/thumb/image.png)](https://files.gitter.im/Rule-Based-Integration/Lobby/FIsd/image.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/Rule-Based-Integration/Lobby/FIsd/thumb/image.png"
   },
   {
    "url": "https://files.gitter.im/Rule-Based-Integration/Lobby/FIsd/image.png"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2018-09-15T20:16:42.353Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "Note: LITE test count the not solving those non-integrable tests as not passed. That is why the percentages are all off by about 4.5% or so from the FULL tests. But since it all relative, it does not matter. In the future when I have time, I can change this method of counting for LITE to make it the same as for the FULL tests. ",
  "id": "5b9d686e0cfe7f30f19cd021",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-09-15T20:15:42.325Z",
  "text": "Note: LITE test count the not solving those non-integrable tests as not passed. That is why the percentages are all off by about 4.5% or so from the FULL tests. But since it all relative, it does not matter. In the future when I have time, I can change this method of counting for LITE to make it the same as for the FULL tests. ",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "editedAt": "2018-12-17T01:58:51.671Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> <span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Hey guys. As you have seen, I have followed the review closely and discussed and resolved the comments from the reviewer. To get a DOI, we needed a new release (it&#39;s a quirk of the DOI provider) and therefore, I have fixed a very small issue in the interface (<a target=\"_blank\" data-link-type=\"issue\" data-issue=\"8\" href=\"https://github.com/RuleBasedIntegration/JOSS-Publication/issues/8\" data-provider=\"github\" data-issue-repo=\"RuleBasedIntegration/JOSS-Publication\" class=\"issue\">RuleBasedIntegration/JOSS-Publication#8</a>) and pushed the version to 4.16.0.5.",
  "id": "5c1702cfa968ec79514aa396",
  "issues": [
   {
    "number": "8",
    "repo": "RuleBasedIntegration/JOSS-Publication"
   }
  ],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   },
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-12-17T01:58:39.267Z",
  "text": "@AlbertRich @nasser1 Hey guys. As you have seen, I have followed the review closely and discussed and resolved the comments from the reviewer. To get a DOI, we needed a new release (it's a quirk of the DOI provider) and therefore, I have fixed a very small issue in the interface (https://github.com/RuleBasedIntegration/JOSS-Publication/issues/8) and pushed the version to 4.16.0.5.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "The rest of the comments could be solved by improving the documentation.",
  "id": "5c1702f283118056dd0df9c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-12-17T01:59:14.053Z",
  "text": "The rest of the comments could be solved by improving the documentation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> My suggestion is to put the information on how to cite Rubi somewhere on the website. ",
  "id": "5c17061faa741e1a65ee1569",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-12-17T02:12:47.041Z",
  "text": "@AlbertRich My suggestion is to put the information on how to cite Rubi somewhere on the website. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-12-17T02:13:30.799Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<img src=\"http://i.imgur.com/Z6hdFLU.png\" alt=\"img\" rel=\"nofollow\">",
  "id": "5c170643a51cf54e7fead0b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-12-17T02:13:23.008Z",
  "text": "![img](http://i.imgur.com/Z6hdFLU.png)",
  "unread": false,
  "urls": [
   {
    "url": "http://i.imgur.com/Z6hdFLU.png"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "And the BibTeX source code for the citation",
  "id": "5c170659a968ec79514aa39a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-12-17T02:13:45.197Z",
  "text": "And the BibTeX source code for the citation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<pre><code>@article{Rich2018,\n  doi = {<span class=\"number\">10.21105</span>/joss<span class=\"number\">.01073</span>},\n  date  = {<span class=\"number\">2018</span>-<span class=\"number\">12</span>},\n  publisher = {The Open Journal},\n  volume = {<span class=\"number\">3</span>},\n  number = {<span class=\"number\">32</span>},\n  pages = {<span class=\"number\">1073</span>},\n  author = {Albert Rich and Patrick Scheibe and Nasser Abbasi},\n  title = {Rule-based integration: An extensive system of symbolic integration rules},\n  journal = {Journal of Open Source Software}\n}</code></pre>",
  "id": "5c170663aa741e1a65ee156c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-12-17T02:13:55.057Z",
  "text": "```\n@article{Rich2018,\n  doi = {10.21105/joss.01073},\n  date  = {2018-12},\n  publisher = {The Open Journal},\n  volume = {3},\n  number = {32},\n  pages = {1073},\n  author = {Albert Rich and Patrick Scheibe and Nasser Abbasi},\n  title = {Rule-based integration: An extensive system of symbolic integration rules},\n  journal = {Journal of Open Source Software}\n}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "(The converter missed Nassers middle initial somehow)",
  "id": "5c17068883118056dd0df9c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-12-17T02:14:32.933Z",
  "text": "(The converter missed Nassers middle initial somehow)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> About Rubi on sympy, you should visit their Gitter channel. They were really responsive the last time I talked to the the people there, but it seems currently a bug in MatchPy prevents further development",
  "id": "5c1706fca51cf54e7fead0b2",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-12-17T02:16:28.052Z",
  "text": "@nasser1 About Rubi on sympy, you should visit their Gitter channel. They were really responsive the last time I talked to the the people there, but it seems currently a bug in MatchPy prevents further development",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 42
  },
  "html": "<a href=\"https://gitter.im/sympy/Rubi-GSoC17\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gitter.im/sympy/Rubi-GSoC17</a>",
  "id": "5c1706fe83118056dd0df9c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-12-17T02:16:30.155Z",
  "text": "https://gitter.im/sympy/Rubi-GSoC17",
  "unread": false,
  "urls": [
   {
    "url": "https://gitter.im/sympy/Rubi-GSoC17"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> How about adding a paragraph at the beginning of the &quot;Articles referencing rule-based integration&quot; section of Rubi&#39;s home page explaining how to cite the article.",
  "id": "5c1736f9e86b0460b3ad8a7d",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-12-17T05:41:13.165Z",
  "text": "@halirutan How about adding a paragraph at the beginning of the \"Articles referencing rule-based integration\" section of Rubi's home page explaining how to cite the article.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-12-17T06:24:57.786Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span>  Thanks for the link to rubi-GSoC17 there. I&#39;ll try to put a note there about this. I just found a major crash in Python also using rubi_integrate on one of the test problems. Python itself cored dumped when calling rubi_integrate !</p><pre><code>   from sympy import <span class=\"keyword\">*</span>\n   from sympy.integrals.rubi.rubi import rubi_integrate \n   d,a,x,r,a,b,c,n,e=symbols('d a x r a b c n e')\n    rubi_integrate((d+e<span class=\"keyword\">*</span>x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>r)<span class=\"keyword\">*</span><span class=\"keyword\">*</span>3<span class=\"keyword\">*</span>(a+b<span class=\"keyword\">*</span>ln(c<span class=\"keyword\">*</span>x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>n))/x,x)</code></pre><p>gives</p><pre><code>    Fatal Python <span class=\"keyword\">error</span>: Cannot recover <span class=\"keyword\">from</span> stack overflow.\n    File <span class=\"string\">\"/opt/anaconda/lib/python3.7/site- \n     packages/sympy/integrals/rubi/utility_function.py\"</span>, line <span class=\"number\">1842</span> <span class=\"keyword\">in</span> \n     CollectReciprocals\n        ...\n       Aborted (core dumped)`</code></pre><p>I&#39;ll need to enter this also now as a bug.</p>",
  "id": "5c174096b4c74555ccddaed7",
  "issues": [],
  "mentions": [
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-12-17T06:22:14.505Z",
  "text": "@halirutan  Thanks for the link to rubi-GSoC17 there. I'll try to put a note there about this. I just found a major crash in Python also using rubi_integrate on one of the test problems. Python itself cored dumped when calling rubi_integrate !\n\n       from sympy import *\n       from sympy.integrals.rubi.rubi import rubi_integrate \n       d,a,x,r,a,b,c,n,e=symbols('d a x r a b c n e')\n        rubi_integrate((d+e*x**r)**3*(a+b*ln(c*x**n))/x,x)\n\ngives\n\n        Fatal Python error: Cannot recover from stack overflow.\n        File \"/opt/anaconda/lib/python3.7/site- \n         packages/sympy/integrals/rubi/utility_function.py\", line 1842 in \n         CollectReciprocals\n            ...\n           Aborted (core dumped)`\n\nI'll need to enter this also now as a bug.\n\n\n",
  "unread": false,
  "urls": [],
  "v": 6
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "fyi, entered a new bug about the above rubi_integrate in sympy   <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"15657\" href=\"https://github.com/sympy/sympy/issues/15657\" data-provider=\"github\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#15657</a>",
  "id": "5c17426b72f31355cd69bda5",
  "issues": [
   {
    "number": "15657",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-12-17T06:30:03.173Z",
  "text": "fyi, entered a new bug about the above rubi_integrate in sympy   https://github.com/sympy/sympy/issues/15657",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-12-17T10:42:45.502Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Apparently Rubi&#39;s integration test-suite is a pretty brutal stress test for any CAS...  :smirk: ",
  "id": "5c177d4aae1ab5539efc8541",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-12-17T10:41:14.685Z",
  "text": "@nasser1 Apparently Rubi's integration test-suite is a pretty brutal stress test for any CAS...  :smirk: ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 65
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  The core dumps started at integral number 343 in file <code>3_Logarithms/3.1_u-a+b_log-c_x^n-^p</code> with <code>integrate((d+e*x**r)**3*(a+b*ln(c*x**n))/x,x)</code> and afterwords. Only difference between the above integral and one before it, is that this is rational expression with <code>x</code> in denominator.  </p><p>number 342 was <code>integrate(x*(d+e*x**r)**3*(a+b*ln(c*x**n)),x)</code> and this caused no problem.  Any way. I had to stop the tests for now as the test script can&#39;t handle core dumps, it only handles timeouts, so can&#39;t continue. </p><p>Will wait for sympy 1.4 to see if it is any better and if bugs are fixed in rubi_integrate.</p><p>But it did well on the test it did so far. rubi_integrate is number 4, with 81% pass compared to sympy int, with 50%.  So the idea of porting rubi to sympy is very promising if someone can fix these glaring bugs in the port and speed the initial loading time of the rules, many will start using rubi_integrate in sympy.</p>",
  "id": "5c17d394b4c74555cce17c03",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-12-17T16:49:24.532Z",
  "text": "@AlbertRich  The core dumps started at integral number 343 in file `3_Logarithms/3.1_u-a+b_log-c_x^n-^p` with `integrate((d+e*x**r)**3*(a+b*ln(c*x**n))/x,x)` and afterwords. Only difference between the above integral and one before it, is that this is rational expression with `x` in denominator.  \n\nnumber 342 was `integrate(x*(d+e*x**r)**3*(a+b*ln(c*x**n)),x)` and this caused no problem.  Any way. I had to stop the tests for now as the test script can't handle core dumps, it only handles timeouts, so can't continue. \n\nWill wait for sympy 1.4 to see if it is any better and if bugs are fixed in rubi_integrate.\n\nBut it did well on the test it did so far. rubi_integrate is number 4, with 81% pass compared to sympy int, with 50%.  So the idea of porting rubi to sympy is very promising if someone can fix these glaring bugs in the port and speed the initial loading time of the rules, many will start using rubi_integrate in sympy.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Hopefully the SymPy folks will get the message...",
  "id": "5c181d5d4e0d6621ba0c4539",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-12-17T22:04:13.391Z",
  "text": "@nasser1 Hopefully the SymPy folks will get the message...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 35
  },
  "html": "There haven&#39;t been any changes to the rubi module since 1.3. There may have been changes to other parts that affect it",
  "id": "5c181df7cb81c34d53983644",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-12-17T22:06:47.046Z",
  "text": "There haven't been any changes to the rubi module since 1.3. There may have been changes to other parts that affect it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 35
  },
  "html": "Right now Francesco is working on MatchPy to improve its performance. ",
  "id": "5c181e0596db62282ab2ff89",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-12-17T22:07:01.336Z",
  "text": "Right now Francesco is working on MatchPy to improve its performance. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 35
  },
  "html": "Hopefully we will have another student interested in working on it for GSoC next year. If you know of any students who might be interested, send them our way. ",
  "id": "5c181ef8c20dd65207abe189",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-12-17T22:11:04.312Z",
  "text": "Hopefully we will have another student interested in working on it for GSoC next year. If you know of any students who might be interested, send them our way. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/EmmanuelCharpentier",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/7955276?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/7955276?v=4&s=60",
   "displayName": "EmmanuelCharpentier",
   "gv": "4",
   "id": "549c6a38db8155e6700e2ecd",
   "url": "/EmmanuelCharpentier",
   "username": "EmmanuelCharpentier",
   "v": 4
  },
  "html": "I do not know if this one is known (probably, because it is extremely simple) :",
  "id": "5c898fa3d3b35423cbb49b9e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-03-13T23:17:55.548Z",
  "text": "I do not know if this one is known (probably, because it is extremely simple) :",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/EmmanuelCharpentier",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/7955276?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/7955276?v=4&s=60",
   "displayName": "EmmanuelCharpentier",
   "gv": "4",
   "id": "549c6a38db8155e6700e2ecd",
   "url": "/EmmanuelCharpentier",
   "username": "EmmanuelCharpentier",
   "v": 4
  },
  "html": "Int[Int[Sqrt[1-x^2-y^2, {y,-e,e}],{x,-e,e}} (with O&lt;=e&lt;=1/Sqrt[2], of course...) seems insolvable with Rubi, either under this form or avter transformation to polar coordinates. see <a href=\"https://groups.google.com/forum/#!topic/sage-devel/b4pSggwd24M\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">this sage-devel post</a> for details.",
  "id": "5c89906c2f2fb54c37e6fbc7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-03-13T23:21:16.839Z",
  "text": "Int[Int[Sqrt[1-x^2-y^2, {y,-e,e}],{x,-e,e}} (with O<=e<=1/Sqrt[2], of course...) seems insolvable with Rubi, either under this form or avter transformation to polar coordinates. see [this sage-devel post](https://groups.google.com/forum/#!topic/sage-devel/b4pSggwd24M) for details.",
  "unread": false,
  "urls": [
   {
    "url": "https://groups.google.com/forum/#!topic/sage-devel/b4pSggwd24M"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"EmmanuelCharpentier\" class=\"mention\">@EmmanuelCharpentier</span> Let&#39;s look at the function",
  "id": "5c8a2cad84c0313aab4169c1",
  "issues": [],
  "mentions": [
   {
    "screenName": "EmmanuelCharpentier",
    "userId": "549c6a38db8155e6700e2ecd",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2019-03-14T10:27:57.664Z",
  "text": "@EmmanuelCharpentier Let's look at the function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "<img src=\"http://i.stack.imgur.com/1WlR7.png\" alt=\"img\" rel=\"nofollow\">",
  "id": "5c8a2cc07d754e09e39a8b65",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-03-14T10:28:16.619Z",
  "text": "![img](http://i.stack.imgur.com/1WlR7.png)",
  "unread": false,
  "urls": [
   {
    "url": "http://i.stack.imgur.com/1WlR7.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "From this and from the form of the function, it&#39;s clear that this is only real within the unit circle. Let us make a numeric test with <code>NIntegrate</code>",
  "id": "5c8a2cfa09d116389301fc1d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-03-14T10:29:14.064Z",
  "text": "From this and from the form of the function, it's clear that this is only real within the unit circle. Let us make a numeric test with `NIntegrate`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "<pre><code class=\"mma\"><span class=\"keyword\">In</span>[<span class=\"number\">28</span>]:= e = <span class=\"number\">.5</span>;\n<span class=\"keyword\">In</span>[<span class=\"number\">29</span>]:= <span class=\"keyword\">NIntegrate</span>[<span class=\"keyword\">Sqrt</span>[<span class=\"number\">1</span> - x^<span class=\"number\">2</span> - y^<span class=\"number\">2</span>], <span class=\"list\">{x, -e, e}</span>, <span class=\"list\">{y, -e, e}</span>]\n\n<span class=\"keyword\">Out</span>[<span class=\"number\">29</span>]= <span class=\"number\">0.910966</span></code></pre>",
  "id": "5c8a2d0aaa0efc2382df1adc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-03-14T10:29:30.121Z",
  "text": "```mma\nIn[28]:= e = .5;\nIn[29]:= NIntegrate[Sqrt[1 - x^2 - y^2], {x, -e, e}, {y, -e, e}]\n\nOut[29]= 0.910966\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "Now, use Rubi to find the antiderivative and calculate the same. Note, that we will only calculate the numeric value for one quadrant and then multiply it by 4",
  "id": "5c8a2d4809d116389301fc1f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-03-14T10:30:32.000Z",
  "text": "Now, use Rubi to find the antiderivative and calculate the same. Note, that we will only calculate the numeric value for one quadrant and then multiply it by 4",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "<pre><code class=\"mma\">int = Int[Int[<span class=\"keyword\">Sqrt</span>[<span class=\"number\">1</span> - x^<span class=\"number\">2</span> - y^<span class=\"number\">2</span>], y], x];\n<span class=\"keyword\">Limit</span>[<span class=\"keyword\">Limit</span>[int, x -&gt; e], y -&gt; e]\n\n%*<span class=\"number\">4</span></code></pre>",
  "id": "5c8a2d6faa0efc2382df1ade",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-03-14T10:31:11.894Z",
  "text": "```mma\nint = Int[Int[Sqrt[1 - x^2 - y^2], y], x];\nLimit[Limit[int, x -> e], y -> e]\n\n%*4\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "This gives the same value as <code>NIntegrate</code>. You can show the correctness of the antiderivative found by Rubi ",
  "id": "5c8a2dc784c0313aab4169c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-03-14T10:32:39.357Z",
  "text": "This gives the same value as `NIntegrate`. You can show the correctness of the antiderivative found by Rubi ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "<pre><code class=\"mma\"><span class=\"keyword\">In</span>[<span class=\"number\">36</span>]:= <span class=\"keyword\">D</span>[int, x] // <span class=\"keyword\">Simplify</span> // <span class=\"keyword\">D</span>[#, y] &amp; // <span class=\"keyword\">Simplify</span>\n\n<span class=\"keyword\">Out</span>[<span class=\"number\">36</span>]= <span class=\"keyword\">Sqrt</span>[<span class=\"number\">1</span> - x^<span class=\"number\">2</span> - y^<span class=\"number\">2</span>]</code></pre>",
  "id": "5c8a2dcbd0963e2ee3a50edd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-03-14T10:32:43.751Z",
  "text": "```mma\nIn[36]:= D[int, x] // Simplify // D[#, y] & // Simplify\n\nOut[36]= Sqrt[1 - x^2 - y^2]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"EmmanuelCharpentier\" class=\"mention\">@EmmanuelCharpentier</span> After reading the sage-dev post, here is what the OP there is after. I&#39;m using <code>int</code> as defined previously:",
  "id": "5c8a3174fd980c02069ede49",
  "issues": [],
  "mentions": [
   {
    "screenName": "EmmanuelCharpentier",
    "userId": "549c6a38db8155e6700e2ecd",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2019-03-14T10:48:20.400Z",
  "text": "@EmmanuelCharpentier After reading the sage-dev post, here is what the OP there is after. I'm using `int` as defined previously:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "<pre><code class=\"mma\">res = <span class=\"number\">4</span>*<span class=\"keyword\">Limit</span>[<span class=\"keyword\">Limit</span>[int, x -&gt; eps], y -&gt; eps] // <span class=\"keyword\">Simplify</span>;</code></pre>",
  "id": "5c8a319409d116389301fc28",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-03-14T10:48:52.978Z",
  "text": "```mma\nres = 4*Limit[Limit[int, x -> eps], y -> eps] // Simplify;\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "Now substituting his value for <code>eps</code> gives exactly what he claimed",
  "id": "5c8a31b109d116389301fc2a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-03-14T10:49:21.272Z",
  "text": "Now substituting his value for `eps` gives exactly what he claimed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-03-14T10:49:45.471Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "<pre><code class=\"mma\"><span class=\"keyword\">In</span>[<span class=\"number\">50</span>]:= res /. eps -&gt; <span class=\"number\">1</span>*^-<span class=\"number\">4</span> // <span class=\"keyword\">N</span>\n\n<span class=\"keyword\">Out</span>[<span class=\"number\">50</span>]= <span class=\"number\">4.</span>*<span class=\"number\">10</span>^-<span class=\"number\">8</span></code></pre>",
  "id": "5c8a31bc77cb04314eec70e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-03-14T10:49:32.576Z",
  "text": "```mma\nIn[50]:= res /. eps -> 1*^-4 // N\n\nOut[50]= 4.*10^-8\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ntessore",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3993688?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3993688?v=4&s=60",
   "displayName": "Nicolas Tessore",
   "gv": "4",
   "id": "5c9a8ac7d73408ce4fbbe816",
   "url": "/ntessore",
   "username": "ntessore",
   "v": 1
  },
  "html": "Hi, I hope it&#39;s ok to barge in with a question. Are the complete elliptic integrals of the first and second kind (<code>EllipticE</code>, <code>EllipticK</code>) available in Rubi? It does not seem like it, so perhaps the better question is whether there is something I could do to include them.",
  "id": "5c9a8b30e7341060cae87619",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-03-26T20:27:28.695Z",
  "text": "Hi, I hope it's ok to barge in with a question. Are the complete elliptic integrals of the first and second kind (`EllipticE`, `EllipticK`) available in Rubi? It does not seem like it, so perhaps the better question is whether there is something I could do to include them.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ntessore",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3993688?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3993688?v=4&s=60",
   "displayName": "Nicolas Tessore",
   "gv": "4",
   "id": "5c9a8ac7d73408ce4fbbe816",
   "url": "/ntessore",
   "username": "ntessore",
   "v": 1
  },
  "html": "The Wolfram functions site has a number of indefinite integration rules for the functions, they mostly relate to themselves and hypergeometric functions if that matters.",
  "id": "5c9a8b7acf786a56c781f41a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-03-26T20:28:42.416Z",
  "text": "The Wolfram functions site has a number of indefinite integration rules for the functions, they mostly relate to themselves and hypergeometric functions if that matters.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ntessore\" class=\"mention\">@ntessore</span> No, Rubi does not currently have rules for integrating expressions involving the elliptic integral functions.  However, it does have rules that result in antiderivatives involving the elliptic integral functions.<br>As always, I invite Rubi users to define additional integration rules in order to integrate expressions they are interested in.",
  "id": "5c9bfce1b7e27d2f059347ff",
  "issues": [],
  "mentions": [
   {
    "screenName": "ntessore",
    "userId": "5c9a8ac7d73408ce4fbbe816",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2019-03-27T22:44:49.204Z",
  "text": "@ntessore No, Rubi does not currently have rules for integrating expressions involving the elliptic integral functions.  However, it does have rules that result in antiderivatives involving the elliptic integral functions.\nAs always, I invite Rubi users to define additional integration rules in order to integrate expressions they are interested in.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ntessore",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3993688?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3993688?v=4&s=60",
   "displayName": "Nicolas Tessore",
   "gv": "4",
   "id": "5c9a8ac7d73408ce4fbbe816",
   "url": "/ntessore",
   "username": "ntessore",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Hi, thanks, I am indeed interested in the first case. I wasn&#39;t too sure I understand how to define rules properly. Is there some documentation available?",
  "id": "5c9bfd6ab6711251983b4aa6",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2019-03-27T22:47:06.335Z",
  "text": "@AlbertRich Hi, thanks, I am indeed interested in the first case. I wasn't too sure I understand how to define rules properly. Is there some documentation available?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-03-27T23:23:54.386Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ntessore\" class=\"mention\">@ntessore</span> The easiest way to add additional integration rules to Rubi is to include them at the end of one of Rubi&#39;s existing notebook source file.  Then use the resulting package file automatically generated by Mathematica to replace the package file in the Rubi directory on your computer.  For example, you can add your elliptic integral integration rules to <a href=\"https://rulebasedintegration.org/NotebookRuleFiles/8%20Special%20functions/8.7%20Zeta%20function.nb\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://rulebasedintegration.org/NotebookRuleFiles/8%20Special%20functions/8.7%20Zeta%20function.nb</a>.",
  "id": "5c9c057ba100047111cdc4c9",
  "issues": [],
  "mentions": [
   {
    "screenName": "ntessore",
    "userId": "5c9a8ac7d73408ce4fbbe816",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2019-03-27T23:21:31.738Z",
  "text": "@ntessore The easiest way to add additional integration rules to Rubi is to include them at the end of one of Rubi's existing notebook source file.  Then use the resulting package file automatically generated by Mathematica to replace the package file in the Rubi directory on your computer.  For example, you can add your elliptic integral integration rules to https://rulebasedintegration.org/NotebookRuleFiles/8%20Special%20functions/8.7%20Zeta%20function.nb.",
  "unread": false,
  "urls": [
   {
    "url": "https://rulebasedintegration.org/NotebookRuleFiles/8%20Special%20functions/8.7%20Zeta%20function.nb"
   }
  ],
  "v": 3
 },
 {
  "editedAt": "2019-03-27T23:25:27.344Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 5
  },
  "html": "After you have perfected the package, generated a comprehensive test-suite for it, and want it formally included in Rubi you can post it for consideration on Rubi&#39;s GitHub page <a href=\"https://github.com/RuleBasedIntegration\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/RuleBasedIntegration</a>.",
  "id": "5c9c05865349305a4c7db21a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-03-27T23:21:42.558Z",
  "text": "After you have perfected the package, generated a comprehensive test-suite for it, and want it formally included in Rubi you can post it for consideration on Rubi's GitHub page https://github.com/RuleBasedIntegration.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/RuleBasedIntegration"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ntessore",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3993688?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3993688?v=4&s=60",
   "displayName": "Nicolas Tessore",
   "gv": "4",
   "id": "5c9a8ac7d73408ce4fbbe816",
   "url": "/ntessore",
   "username": "ntessore",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Great, thanks! I did not even realise there were notebook files as well. I will try and add some of the complete elliptic integral rules.",
  "id": "5c9c0788a100047111cdd072",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2019-03-27T23:30:16.700Z",
  "text": "@AlbertRich Great, thanks! I did not even realise there were notebook files as well. I will try and add some of the complete elliptic integral rules.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ntessore\" class=\"mention\">@ntessore</span> All Rubi&#39;s source files are available as pdf and notebook files at <a href=\"https://rulebasedintegration.org/integrationRules.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://rulebasedintegration.org/integrationRules.html</a>.",
  "id": "5c9c083108f8e7361a5b1ab8",
  "issues": [],
  "mentions": [
   {
    "screenName": "ntessore",
    "userId": "5c9a8ac7d73408ce4fbbe816",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2019-03-27T23:33:05.721Z",
  "text": "@ntessore All Rubi's source files are available as pdf and notebook files at https://rulebasedintegration.org/integrationRules.html.",
  "unread": false,
  "urls": [
   {
    "url": "https://rulebasedintegration.org/integrationRules.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/CeaVi",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/49487501?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/49487501?v=4&s=60",
   "displayName": "CeaVi",
   "gv": "4",
   "id": "5cadfc37d73408ce4fbd5ca3",
   "url": "/CeaVi",
   "username": "CeaVi",
   "v": 3
  },
  "html": "Hello Albert, on <a href=\"https://rulebasedintegration.org/vision.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://rulebasedintegration.org/vision.html</a> you mention that rubi-5 will not be based on decision trees/pattern matching anymore, but on &quot;if-then-else control constructs&quot;. How exactly would this look like? Is there some public code repository or branch accessible where it is possible to look at this approach? ",
  "id": "5cadfcb9016a930a45974212",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-04-10T14:24:57.858Z",
  "text": "Hello Albert, on https://rulebasedintegration.org/vision.html you mention that rubi-5 will not be based on decision trees/pattern matching anymore, but on \"if-then-else control constructs\". How exactly would this look like? Is there some public code repository or branch accessible where it is possible to look at this approach? ",
  "unread": false,
  "urls": [
   {
    "url": "https://rulebasedintegration.org/vision.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"CeaVi\" class=\"mention\">@CeaVi</span> The basic principle is not that hard to understand. What we have now, is basically also a decision tree but all its children are directly under the root and the decision, which child is the correct one is done by the pattern matcher and the conditions. ",
  "id": "5cae46fbef19d564e9cbd523",
  "issues": [],
  "mentions": [
   {
    "screenName": "CeaVi",
    "userId": "5cadfc37d73408ce4fbd5ca3",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2019-04-10T19:41:47.222Z",
  "text": "@CeaVi The basic principle is not that hard to understand. What we have now, is basically also a decision tree but all its children are directly under the root and the decision, which child is the correct one is done by the pattern matcher and the conditions. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "Now, you can transform this into nested if statements that collect several classes of functions together. So you can write something like <code>If[ isOfCertainType[expr], If[ condition1[expr], ..., ...], ...]</code>. You get a real tree from the nested if statements. ",
  "id": "5cae48af7915365fc557ca4c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-04-10T19:49:03.594Z",
  "text": "Now, you can transform this into nested if statements that collect several classes of functions together. So you can write something like `If[ isOfCertainType[expr], If[ condition1[expr], ..., ...], ...]`. You get a real tree from the nested if statements. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "That has several advantages and also some disadvantages. One advantage is that you can rewrite the pattern-matching code to if statements that work better with other languages because Mathematica is strong in pattern-matching and it is hard to replicate the behavior in e.g. python. The different behavior of MatchPy in python is actually the reason why Rubi cannot work successfully under sympy right now.",
  "id": "5cae4944b22d2c592cdfda9a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-04-10T19:51:32.533Z",
  "text": "That has several advantages and also some disadvantages. One advantage is that you can rewrite the pattern-matching code to if statements that work better with other languages because Mathematica is strong in pattern-matching and it is hard to replicate the behavior in e.g. python. The different behavior of MatchPy in python is actually the reason why Rubi cannot work successfully under sympy right now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "Another advantage is that walking the if tree is faster. Right now, Mathematica tests all Rubi rules and applies the first one that matches. So in the worst case, you need to sequentially check all 6600+ rules. This is similar for finding a match in a long list. In the decision tree this is faster, because you start by e.g. finding the general class of the integrand which is probably only &lt;50 tests. Then you test the conditions on the parameters.. That should reduce the run-time.",
  "id": "5cae4a5fef19d564e9cbd52e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-04-10T19:56:15.829Z",
  "text": "Another advantage is that walking the if tree is faster. Right now, Mathematica tests all Rubi rules and applies the first one that matches. So in the worst case, you need to sequentially check all 6600+ rules. This is similar for finding a match in a long list. In the decision tree this is faster, because you start by e.g. finding the general class of the integrand which is probably only <50 tests. Then you test the conditions on the parameters.. That should reduce the run-time.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "One disadvantage is that it is a lot of work to transform Rubi&#39;s rules into this decision-tree and code of the many nested if statements is harder to read.",
  "id": "5cae4aa8b22d2c592cdfda9f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-04-10T19:57:28.758Z",
  "text": "One disadvantage is that it is a lot of work to transform Rubi's rules into this decision-tree and code of the many nested if statements is harder to read.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"CeaVi\" class=\"mention\">@CeaVi</span>  <span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Everything Patrick said about Rubi 5 vs. Rubi 4 is right on.  Preliminary testing indicates Rubi 5 will run more than an order of magnitude faster than either Rubi 4 or Mathematica&#39;s built-in integrator.",
  "id": "5cae58bb8148e555b2829c02",
  "issues": [],
  "mentions": [
   {
    "screenName": "CeaVi",
    "userId": "5cadfc37d73408ce4fbd5ca3",
    "userIds": []
   },
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2019-04-10T20:57:31.495Z",
  "text": "@CeaVi  @halirutan Everything Patrick said about Rubi 5 vs. Rubi 4 is right on.  Preliminary testing indicates Rubi 5 will run more than an order of magnitude faster than either Rubi 4 or Mathematica's built-in integrator.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 5
  },
  "html": "I am currently manually compiling Rubi 4&#39;s pattern matching rules into an if-then-else based decision tree for Rubi 5.  I recently compiled the rules for integrands of the form (a+b<em>x+c</em>x^2)^p in the notebook file &quot;1.2.1.1 (a+b x+c x^2)^p.nb&quot;.",
  "id": "5cae58e31f6e900d5e10a382",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-04-10T20:58:11.631Z",
  "text": "I am currently manually compiling Rubi 4's pattern matching rules into an if-then-else based decision tree for Rubi 5.  I recently compiled the rules for integrands of the form (a+b*x+c*x^2)^p in the notebook file \"1.2.1.1 (a+b x+c x^2)^p.nb\".",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/CeaVi",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/49487501?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/49487501?v=4&s=60",
   "displayName": "CeaVi",
   "gv": "4",
   "id": "5cadfc37d73408ce4fbd5ca3",
   "url": "/CeaVi",
   "username": "CeaVi",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span>  <span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> this looks like a Trie datastructure (in Knuth&#39;s naming), am I reading this correct? (&quot;Discrimination net&quot; as Krebber called it in his thesis on MatchPy .. other flavours with slightly different naming have been published, too)",
  "id": "5cae5a29f851ee043d96cf6e",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   },
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2019-04-10T21:03:37.959Z",
  "text": "@AlbertRich  @halirutan this looks like a Trie datastructure (in Knuth's naming), am I reading this correct? (\"Discrimination net\" as Krebber called it in his thesis on MatchPy .. other flavours with slightly different naming have been published, too)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/CeaVi",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/49487501?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/49487501?v=4&s=60",
   "displayName": "CeaVi",
   "gv": "4",
   "id": "5cadfc37d73408ce4fbd5ca3",
   "url": "/CeaVi",
   "username": "CeaVi",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> Do you compile those if-then-else trees manually from the patterns? ",
  "id": "5cae5a5fa84e0c501a0d7e6f",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2019-04-10T21:04:31.615Z",
  "text": "@AlbertRich Do you compile those if-then-else trees manually from the patterns? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/CeaVi",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/49487501?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/49487501?v=4&s=60",
   "displayName": "CeaVi",
   "gv": "4",
   "id": "5cadfc37d73408ce4fbd5ca3",
   "url": "/CeaVi",
   "username": "CeaVi",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> thank you, I can access the files",
  "id": "5cae5b97a0790b29c9961824",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2019-04-10T21:09:43.816Z",
  "text": "@AlbertRich thank you, I can access the files",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 5
  },
  "html": " <span data-link-type=\"mention\" data-screen-name=\"CeaVi\" class=\"mention\">@CeaVi</span> The Rubi 4 and the equivalent Rubi 5 version of this file is available for viewing as a pdf file at<br><a href=\"https://rulebasedintegration.org/Rubi%204%20vs%205/Rubi%204%20-%201.2.1.1%20(a+b%20x+c%20x%5E2)%5Ep.pdf\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://rulebasedintegration.org/Rubi%204%20vs%205/Rubi%204%20-%201.2.1.1%20(a+b%20x+c%20x%5E2)%5Ep.pdf</a><br><a href=\"https://rulebasedintegration.org/Rubi%204%20vs%205/Rubi%205%20-%201.2.1.1%20(a+b%20x+c%20x%5E2)%5Ep.pdf\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://rulebasedintegration.org/Rubi%204%20vs%205/Rubi%205%20-%201.2.1.1%20(a+b%20x+c%20x%5E2)%5Ep.pdf</a><br>and for downloading at<br><a href=\"https://rulebasedintegration.org/Rubi%204%20vs%205/Rubi%204%20-%201.2.1.1%20(a+b%20x+c%20x%5E2)%5Ep.nb\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://rulebasedintegration.org/Rubi%204%20vs%205/Rubi%204%20-%201.2.1.1%20(a+b%20x+c%20x%5E2)%5Ep.nb</a><br><a href=\"https://rulebasedintegration.org/Rubi%204%20vs%205/Rubi%205%20-%201.2.1.1%20(a+b%20x+c%20x%5E2)%5Ep.nb\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://rulebasedintegration.org/Rubi%204%20vs%205/Rubi%205%20-%201.2.1.1%20(a+b%20x+c%20x%5E2)%5Ep.nb</a>",
  "id": "5cae5e3c3ebbdc55b39717f7",
  "issues": [],
  "mentions": [
   {
    "screenName": "CeaVi",
    "userId": "5cadfc37d73408ce4fbd5ca3",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2019-04-10T21:21:00.596Z",
  "text": " @CeaVi The Rubi 4 and the equivalent Rubi 5 version of this file is available for viewing as a pdf file at\nhttps://rulebasedintegration.org/Rubi%204%20vs%205/Rubi%204%20-%201.2.1.1%20(a+b%20x+c%20x%5E2)%5Ep.pdf\nhttps://rulebasedintegration.org/Rubi%204%20vs%205/Rubi%205%20-%201.2.1.1%20(a+b%20x+c%20x%5E2)%5Ep.pdf\nand for downloading at\nhttps://rulebasedintegration.org/Rubi%204%20vs%205/Rubi%204%20-%201.2.1.1%20(a+b%20x+c%20x%5E2)%5Ep.nb\nhttps://rulebasedintegration.org/Rubi%204%20vs%205/Rubi%205%20-%201.2.1.1%20(a+b%20x+c%20x%5E2)%5Ep.nb\n",
  "unread": false,
  "urls": [
   {
    "url": "https://rulebasedintegration.org/Rubi%204%20vs%205/Rubi%204%20-%201.2.1.1%20(a+b%20x+c%20x%5E2)%5Ep.pdf"
   },
   {
    "url": "https://rulebasedintegration.org/Rubi%204%20vs%205/Rubi%205%20-%201.2.1.1%20(a+b%20x+c%20x%5E2)%5Ep.pdf"
   },
   {
    "url": "https://rulebasedintegration.org/Rubi%204%20vs%205/Rubi%204%20-%201.2.1.1%20(a+b%20x+c%20x%5E2)%5Ep.nb"
   },
   {
    "url": "https://rulebasedintegration.org/Rubi%204%20vs%205/Rubi%205%20-%201.2.1.1%20(a+b%20x+c%20x%5E2)%5Ep.nb"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2019-04-10T21:21:36.566Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/CeaVi",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/49487501?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/49487501?v=4&s=60",
   "displayName": "CeaVi",
   "gv": "4",
   "id": "5cadfc37d73408ce4fbd5ca3",
   "url": "/CeaVi",
   "username": "CeaVi",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AlbertRich\" class=\"mention\">@AlbertRich</span> <span data-link-type=\"mention\" data-screen-name=\"halirutan\" class=\"mention\">@halirutan</span> Do you want to keep this manual compilation process long-term, or is this just an intermediate step before some automatic compilation (&quot;Trie-builder&quot;, &quot;DFA Compiler&quot;, ...) is established?",
  "id": "5cae5e55bd70a40d5f2be2bc",
  "issues": [],
  "mentions": [
   {
    "screenName": "AlbertRich",
    "userId": "5b107c24d73408ce4f9b7489",
    "userIds": []
   },
   {
    "screenName": "halirutan",
    "userId": "5904ae3bd73408ce4f5bd822",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-10T21:21:25.927Z",
  "text": "@AlbertRich @halirutan Do you want to keep this manual compilation process long-term, or is this just an intermediate step before some automatic compilation (\"Trie-builder\", \"DFA Compiler\", ...) is established?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"CeaVi\" class=\"mention\">@CeaVi</span> I would dearly love for someone to automate the tedious, error-prone compilation of pattern matching rules into if-then-else code.",
  "id": "5cae5eda3ebbdc55b3971b7e",
  "issues": [],
  "mentions": [
   {
    "screenName": "CeaVi",
    "userId": "5cadfc37d73408ce4fbd5ca3",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-10T21:23:38.449Z",
  "text": "@CeaVi I would dearly love for someone to automate the tedious, error-prone compilation of pattern matching rules into if-then-else code.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-04-10T21:30:52.042Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 5
  },
  "html": "As you can see by comparing the Rubi 4 and 5 files, they are nearly isomorphic.  Also Rubi 4&#39;s pattern matching rules use only a small subset of Mathematica&#39;s control constructs making the compilation much easier, but certainly not trivial.",
  "id": "5cae604f93fb4a7dc20a349a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-10T21:29:51.041Z",
  "text": "As you can see by comparing the Rubi 4 and 5 files, they are nearly isomorphic.  Also Rubi 4's pattern matching rules use only a small subset of Mathematica's control constructs making the compilation much easier, but certainly not trivial.",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "editedAt": "2019-04-11T05:42:41.890Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AlbertRich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30192718?v=4&s=60",
   "displayName": "Albert D. Rich",
   "gv": "4",
   "id": "5b107c24d73408ce4f9b7489",
   "url": "/AlbertRich",
   "username": "AlbertRich",
   "v": 5
  },
  "html": "A compiler capable of transforming Rubi 4&#39;s pattern matching rules into an if-then-else decision tree (aka a discrimination net) would<ul>\n<li>allow the Rubi source to remain in elegant, human-readable form, rather than a monolithic if-then-else tree virtually impossible to comprehend and debug,</li>\n<li>make it relatively easy for others to port Rubi to any commercial or free CAS, since all serious systems support an if-then-else control construct, and</li>\n<li>(most important to me) allow me to devote full time to extending Rubi&#39;s mathematical capabilities. :wink:</li>\n</ul>\n",
  "id": "5caed39cf851ee043d99cd13",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-11T05:41:48.939Z",
  "text": "A compiler capable of transforming Rubi 4's pattern matching rules into an if-then-else decision tree (aka a discrimination net) would\n* allow the Rubi source to remain in elegant, human-readable form, rather than a monolithic if-then-else tree virtually impossible to comprehend and debug,\n* make it relatively easy for others to port Rubi to any commercial or free CAS, since all serious systems support an if-then-else control construct, and\n* (most important to me) allow me to devote full time to extending Rubi's mathematical capabilities. :wink:\n\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/betatron_gitlab",
   "avatarUrlMedium": "https://secure.gravatar.com/avatar/dea7a407b22c5c79fbfd2c3d532dc32d?s=128&d=identicon",
   "avatarUrlSmall": "https://secure.gravatar.com/avatar/dea7a407b22c5c79fbfd2c3d532dc32d?s=60&d=identicon",
   "displayName": "betatron",
   "id": "5cc8d21cd73408ce4fbf1525",
   "url": "/betatron_gitlab",
   "username": "betatron_gitlab",
   "v": 1
  },
  "html": "Hi",
  "id": "5cc8d2788446a6023ea4509b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-30T22:55:52.002Z",
  "text": "Hi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/betatron_gitlab",
   "avatarUrlMedium": "https://secure.gravatar.com/avatar/dea7a407b22c5c79fbfd2c3d532dc32d?s=128&d=identicon",
   "avatarUrlSmall": "https://secure.gravatar.com/avatar/dea7a407b22c5c79fbfd2c3d532dc32d?s=60&d=identicon",
   "displayName": "betatron",
   "id": "5cc8d21cd73408ce4fbf1525",
   "url": "/betatron_gitlab",
   "username": "betatron_gitlab",
   "v": 1
  },
  "html": " I have difficulties to calculate the integral below",
  "id": "5cc8d31bb489bb6ed7f31fc0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-30T22:58:35.187Z",
  "text": " I have difficulties to calculate the integral below",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/betatron_gitlab",
   "avatarUrlMedium": "https://secure.gravatar.com/avatar/dea7a407b22c5c79fbfd2c3d532dc32d?s=128&d=identicon",
   "avatarUrlSmall": "https://secure.gravatar.com/avatar/dea7a407b22c5c79fbfd2c3d532dc32d?s=60&d=identicon",
   "displayName": "betatron",
   "id": "5cc8d21cd73408ce4fbf1525",
   "url": "/betatron_gitlab",
   "username": "betatron_gitlab",
   "v": 1
  },
  "html": "Assuming[{0 &lt; z &lt; 1},<br> Integrate[<br>  <code>Assuming[{0 &lt; z &lt; 1}, \n Integrate[\n  g^2 ArcTanh[Sqrt[1 - 1/g^2]/R] Exp[-z g], {g, 1, Infinity}]]</code>",
  "id": "5cc8d35a1cd0b8307d9f005b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-30T22:59:38.144Z",
  "text": "Assuming[{0 < z < 1}, \n Integrate[\n  ```Assuming[{0 < z < 1}, \n Integrate[\n  g^2 ArcTanh[Sqrt[1 - 1/g^2]/R] Exp[-z g], {g, 1, Infinity}]]```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/betatron_gitlab",
   "avatarUrlMedium": "https://secure.gravatar.com/avatar/dea7a407b22c5c79fbfd2c3d532dc32d?s=128&d=identicon",
   "avatarUrlSmall": "https://secure.gravatar.com/avatar/dea7a407b22c5c79fbfd2c3d532dc32d?s=60&d=identicon",
   "displayName": "betatron",
   "id": "5cc8d21cd73408ce4fbf1525",
   "url": "/betatron_gitlab",
   "username": "betatron_gitlab",
   "v": 1
  },
  "html": "can one help me please?",
  "id": "5cc8d3f52e2caa1aa6e8944b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-30T23:02:13.782Z",
  "text": "can one help me please?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"betatron_gitlab\" class=\"mention\">@betatron_gitlab</span>  I don&#39;t see much hope here. You can use Rubi and try",
  "id": "5cc8d5b330f6ee52ad58af86",
  "issues": [],
  "mentions": [
   {
    "screenName": "betatron_gitlab",
    "userId": "5cc8d21cd73408ce4fbf1525",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-30T23:09:39.745Z",
  "text": "@betatron_gitlab  I don't see much hope here. You can use Rubi and try",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "<pre><code>Int[g^<span class=\"number\">2</span> ArcTanh[Sqrt[<span class=\"number\">1</span> - <span class=\"number\">1</span>/g^<span class=\"number\">2</span>]/R] Exp[-z g], g]</code></pre>",
  "id": "5cc8d5c08e48e7512a05bce6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-30T23:09:52.876Z",
  "text": "```\nInt[g^2 ArcTanh[Sqrt[1 - 1/g^2]/R] Exp[-z g], g]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "Then, you will find that there are several parts that Rubi can&#39;t solve. One of them is fairly simple but an antiderivative cannot be computed:",
  "id": "5cc8d5e98e48e7512a05bce8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-30T23:10:33.761Z",
  "text": "Then, you will find that there are several parts that Rubi can't solve. One of them is fairly simple but an antiderivative cannot be computed:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "<pre><code>Int[<span class=\"number\">1</span>/(E^(g*z)*Sqrt[<span class=\"number\">1</span> - g^<span class=\"number\">2</span>]), g]</code></pre>",
  "id": "5cc8d601a975f145e79639fd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-30T23:10:57.004Z",
  "text": "```\nInt[1/(E^(g*z)*Sqrt[1 - g^2]), g]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "Even if you remove the <code>z</code> from the expression, Rubi and Mathematica cannot find a closed form of the antiderivative.",
  "id": "5cc8d62630f6ee52ad58af89",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-30T23:11:34.351Z",
  "text": "Even if you remove the `z` from the expression, Rubi and Mathematica cannot find a closed form of the antiderivative.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/betatron_gitlab",
   "avatarUrlMedium": "https://secure.gravatar.com/avatar/dea7a407b22c5c79fbfd2c3d532dc32d?s=128&d=identicon",
   "avatarUrlSmall": "https://secure.gravatar.com/avatar/dea7a407b22c5c79fbfd2c3d532dc32d?s=60&d=identicon",
   "displayName": "betatron",
   "id": "5cc8d21cd73408ce4fbf1525",
   "url": "/betatron_gitlab",
   "username": "betatron_gitlab",
   "v": 1
  },
  "html": "I do not have  Rubi. Please, can you do it for me?",
  "id": "5cc8d8233d78aa6c03c2c434",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-30T23:20:03.704Z",
  "text": "I do not have  Rubi. Please, can you do it for me?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"betatron_gitlab\" class=\"mention\">@betatron_gitlab</span> (a) I already tried it for you and showed you that even with Rubi it seems not possible (b) Rubi is free and you can simply install and use it yourself.",
  "id": "5cc8d8758e48e7512a05bd01",
  "issues": [],
  "mentions": [
   {
    "screenName": "betatron_gitlab",
    "userId": "5cc8d21cd73408ce4fbf1525",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-30T23:21:25.410Z",
  "text": "@betatron_gitlab (a) I already tried it for you and showed you that even with Rubi it seems not possible (b) Rubi is free and you can simply install and use it yourself.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/betatron_gitlab",
   "avatarUrlMedium": "https://secure.gravatar.com/avatar/dea7a407b22c5c79fbfd2c3d532dc32d?s=128&d=identicon",
   "avatarUrlSmall": "https://secure.gravatar.com/avatar/dea7a407b22c5c79fbfd2c3d532dc32d?s=60&d=identicon",
   "displayName": "betatron",
   "id": "5cc8d21cd73408ce4fbf1525",
   "url": "/betatron_gitlab",
   "username": "betatron_gitlab",
   "v": 1
  },
  "html": "Ok. Thank you Sir. Please, how to instal it on My mathematica?",
  "id": "5cc8d8d6375bac74703315dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-30T23:23:02.725Z",
  "text": "Ok. Thank you Sir. Please, how to instal it on My mathematica?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"betatron_gitlab\" class=\"mention\">@betatron_gitlab</span> What Mathematica version do you have?",
  "id": "5cc8d8e930f6ee52ad58af8b",
  "issues": [],
  "mentions": [
   {
    "screenName": "betatron_gitlab",
    "userId": "5cc8d21cd73408ce4fbf1525",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-30T23:23:21.194Z",
  "text": "@betatron_gitlab What Mathematica version do you have?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/betatron_gitlab",
   "avatarUrlMedium": "https://secure.gravatar.com/avatar/dea7a407b22c5c79fbfd2c3d532dc32d?s=128&d=identicon",
   "avatarUrlSmall": "https://secure.gravatar.com/avatar/dea7a407b22c5c79fbfd2c3d532dc32d?s=60&d=identicon",
   "displayName": "betatron",
   "id": "5cc8d21cd73408ce4fbf1525",
   "url": "/betatron_gitlab",
   "username": "betatron_gitlab",
   "v": 1
  },
  "html": "11.2",
  "id": "5cc8d8f5a4ef097471299687",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-30T23:23:33.814Z",
  "text": "11.2",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "See here:",
  "id": "5cc8d903c7f2960f5c2de793",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-30T23:23:47.593Z",
  "text": "See here:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "<a href=\"https://rulebasedintegration.org/downloadRubi.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://rulebasedintegration.org/downloadRubi.html</a>",
  "id": "5cc8d9048e48e7512a05bd04",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-30T23:23:48.883Z",
  "text": "https://rulebasedintegration.org/downloadRubi.html",
  "unread": false,
  "urls": [
   {
    "url": "https://rulebasedintegration.org/downloadRubi.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/betatron_gitlab",
   "avatarUrlMedium": "https://secure.gravatar.com/avatar/dea7a407b22c5c79fbfd2c3d532dc32d?s=128&d=identicon",
   "avatarUrlSmall": "https://secure.gravatar.com/avatar/dea7a407b22c5c79fbfd2c3d532dc32d?s=60&d=identicon",
   "displayName": "betatron",
   "id": "5cc8d21cd73408ce4fbf1525",
   "url": "/betatron_gitlab",
   "username": "betatron_gitlab",
   "v": 1
  },
  "html": "Thank you.",
  "id": "5cc8d9225b3f941aa5bd61dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-30T23:24:18.437Z",
  "text": "Thank you.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "No problem",
  "id": "5cc8d92aa975f145e7963a13",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-30T23:24:26.414Z",
  "text": "No problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/betatron_gitlab",
   "avatarUrlMedium": "https://secure.gravatar.com/avatar/dea7a407b22c5c79fbfd2c3d532dc32d?s=128&d=identicon",
   "avatarUrlSmall": "https://secure.gravatar.com/avatar/dea7a407b22c5c79fbfd2c3d532dc32d?s=60&d=identicon",
   "displayName": "betatron",
   "id": "5cc8d21cd73408ce4fbf1525",
   "url": "/betatron_gitlab",
   "username": "betatron_gitlab",
   "v": 1
  },
  "html": "Please, what is the utility of Rubi for a physicist?",
  "id": "5cc8d9821cd0b8307d9f2d69",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-30T23:25:54.258Z",
  "text": "Please, what is the utility of Rubi for a physicist?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-04-30T23:30:01.113Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"betatron_gitlab\" class=\"mention\">@betatron_gitlab</span> Rubi is a package for calculating the symbolic antiderivatives of expressions. So if you have an expression that cannot be integrated with Mathematica, often but not always Rubi can do it. However, like in your case, where it is not possible, you will most likely need to use numeric integration.",
  "id": "5cc8da5dde6d005e48f180a6",
  "issues": [],
  "mentions": [
   {
    "screenName": "betatron_gitlab",
    "userId": "5cc8d21cd73408ce4fbf1525",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-30T23:29:33.949Z",
  "text": "@betatron_gitlab Rubi is a package for calculating the symbolic antiderivatives of expressions. So if you have an expression that cannot be integrated with Mathematica, often but not always Rubi can do it. However, like in your case, where it is not possible, you will most likely need to use numeric integration.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/betatron_gitlab",
   "avatarUrlMedium": "https://secure.gravatar.com/avatar/dea7a407b22c5c79fbfd2c3d532dc32d?s=128&d=identicon",
   "avatarUrlSmall": "https://secure.gravatar.com/avatar/dea7a407b22c5c79fbfd2c3d532dc32d?s=60&d=identicon",
   "displayName": "betatron",
   "id": "5cc8d21cd73408ce4fbf1525",
   "url": "/betatron_gitlab",
   "username": "betatron_gitlab",
   "v": 1
  },
  "html": "thank&#39;s",
  "id": "5cc8daac375bac74703320d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-30T23:30:52.851Z",
  "text": "thank's",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/betatron_gitlab",
   "avatarUrlMedium": "https://secure.gravatar.com/avatar/dea7a407b22c5c79fbfd2c3d532dc32d?s=128&d=identicon",
   "avatarUrlSmall": "https://secure.gravatar.com/avatar/dea7a407b22c5c79fbfd2c3d532dc32d?s=60&d=identicon",
   "displayName": "betatron",
   "id": "5cc8d21cd73408ce4fbf1525",
   "url": "/betatron_gitlab",
   "username": "betatron_gitlab",
   "v": 1
  },
  "html": "well",
  "id": "5cc8dac03d78aa6c03c2d39d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-30T23:31:12.099Z",
  "text": "well",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nasser1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15114517?v=4&s=60",
   "displayName": "Nasser M. Abbasi",
   "gv": "4",
   "id": "5b15513dd73408ce4f9bd9c0",
   "url": "/nasser1",
   "username": "nasser1",
   "v": 67
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"betatron_gitlab\" class=\"mention\">@betatron_gitlab</span>   &quot;Please, what is the utility of Rubi for a physicist?&quot;  There is a Physics paper using Rubi <a href=\"https://arxiv.org/pdf/1811.04892.pdf\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://arxiv.org/pdf/1811.04892.pdf</a>  titled &quot;An Application of Rubi: Series Expansion of the Quark Mass<br>Renormalization Group Equation&quot;",
  "id": "5cc8e3d78790b0307e2da62e",
  "issues": [],
  "mentions": [
   {
    "screenName": "betatron_gitlab",
    "userId": "5cc8d21cd73408ce4fbf1525",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-05-01T00:09:59.041Z",
  "text": "@betatron_gitlab   \"Please, what is the utility of Rubi for a physicist?\"  There is a Physics paper using Rubi https://arxiv.org/pdf/1811.04892.pdf  titled \"An Application of Rubi: Series Expansion of the Quark Mass\nRenormalization Group Equation\"",
  "unread": false,
  "urls": [
   {
    "url": "https://arxiv.org/pdf/1811.04892.pdf"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nasser1\" class=\"mention\">@nasser1</span> Ahh, yes. How could I forget that. This paper is the sole reason why we wrote the Rubi paper to make Rubi officially citable.",
  "id": "5cc8e40ca975f145e7963a1e",
  "issues": [],
  "mentions": [
   {
    "screenName": "nasser1",
    "userId": "5b15513dd73408ce4f9bd9c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-05-01T00:10:52.410Z",
  "text": "@nasser1 Ahh, yes. How could I forget that. This paper is the sole reason why we wrote the Rubi paper to make Rubi officially citable.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/halirutan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/511683?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/511683?v=4&s=60",
   "displayName": "Patrick Scheibe",
   "gv": "4",
   "id": "5904ae3bd73408ce4f5bd822",
   "url": "/halirutan",
   "username": "halirutan",
   "v": 52
  },
  "html": "Thanks Nasser.",
  "id": "5cc8e416f5b12a23c35170cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-05-01T00:11:02.237Z",
  "text": "Thanks Nasser.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/betatron_gitlab",
   "avatarUrlMedium": "https://secure.gravatar.com/avatar/dea7a407b22c5c79fbfd2c3d532dc32d?s=128&d=identicon",
   "avatarUrlSmall": "https://secure.gravatar.com/avatar/dea7a407b22c5c79fbfd2c3d532dc32d?s=60&d=identicon",
   "displayName": "betatron",
   "id": "5cc8d21cd73408ce4fbf1525",
   "url": "/betatron_gitlab",
   "username": "betatron_gitlab",
   "v": 1
  },
  "html": "Thank you",
  "id": "5cc9b5a88446a6023eaa5475",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-05-01T15:05:12.189Z",
  "text": "Thank you",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/Tobiasbouma_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "Tobias Bouma",
   "id": "5ccc1615d73408ce4fbf489e",
   "url": "/Tobiasbouma_twitter",
   "username": "Tobiasbouma_twitter",
   "v": 1
  },
  "html": "Hello everybody!",
  "id": "5ccc161bb4700e023d14ae9d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-05-03T10:21:15.245Z",
  "text": "Hello everybody!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/Tobiasbouma_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "Tobias Bouma",
   "id": "5ccc1615d73408ce4fbf489e",
   "url": "/Tobiasbouma_twitter",
   "username": "Tobiasbouma_twitter",
   "v": 1
  },
  "html": "I&#39;m having trouble looking up a reference for a RUBI rule",
  "id": "5ccc162d8446a6023ebb0967",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-05-03T10:21:33.473Z",
  "text": "I'm having trouble looking up a reference for a RUBI rule",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/Tobiasbouma_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "Tobias Bouma",
   "id": "5ccc1615d73408ce4fbf489e",
   "url": "/Tobiasbouma_twitter",
   "username": "Tobiasbouma_twitter",
   "v": 1
  },
  "html": "The rule (rules actually) are 2485 and 2490. Where can I look this up?",
  "id": "5ccc16454b4cb471d99d38cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-05-03T10:21:57.358Z",
  "text": "The rule (rules actually) are 2485 and 2490. Where can I look this up?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/Tobiasbouma_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "Tobias Bouma",
   "id": "5ccc1615d73408ce4fbf489e",
   "url": "/Tobiasbouma_twitter",
   "username": "Tobiasbouma_twitter",
   "v": 1
  },
  "html": "I have found something on page 36 of 3.3 u (a+b log(c (d+e x)^n))^p. Cheers nonetheless!",
  "id": "5ccc3f268790b0307e451395",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-05-03T13:16:22.860Z",
  "text": "I have found something on page 36 of 3.3 u (a+b log(c (d+e x)^n))^p. Cheers nonetheless!",
  "unread": false,
  "urls": [],
  "v": 1
 }
]