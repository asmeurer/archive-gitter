[
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> when you click on integration and select the pymc repo we&#39;ll get messages here about PRs and issues etc",
  "id": "5433a7397624f8a4581f6c7f",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-07T08:41:29.063Z",
  "text": "@fonnesbeck when you click on integration and select the pymc repo we'll get messages here about PRs and issues etc",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/kyleabeauchamp",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1900459?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1900459?v=4&s=60",
   "displayName": "Kyle Beauchamp",
   "gv": "4",
   "id": "5433fcb6163965c9bc20970d",
   "url": "/kyleabeauchamp",
   "username": "kyleabeauchamp",
   "v": 4
  },
  "html": "Does anyone have any suggestions on parallelizing pymc2 or pymc3 on a cluster?  I have a layer of random variables that are pretty challenging to sample (involve GPUs and OpenMM) and I&#39;d like to farm these tasks out during a single MCMC chain.  However, I suppose this would require some sort of &quot;async&quot; behavior inside the sampler loop.  I&#39;m also hoping to write as little code as possible.",
  "id": "5433fdd87624f8a4581f86e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-07T14:51:04.357Z",
  "text": "Does anyone have any suggestions on parallelizing pymc2 or pymc3 on a cluster?  I have a layer of random variables that are pretty challenging to sample (involve GPUs and OpenMM) and I'd like to farm these tasks out during a single MCMC chain.  However, I suppose this would require some sort of \"async\" behavior inside the sampler loop.  I'm also hoping to write as little code as possible.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/kyleabeauchamp",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1900459?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1900459?v=4&s=60",
   "displayName": "Kyle Beauchamp",
   "gv": "4",
   "id": "5433fcb6163965c9bc20970d",
   "url": "/kyleabeauchamp",
   "username": "kyleabeauchamp",
   "v": 4
  },
  "html": "I guess my current thinking is to use something like celery that <span data-link-type=\"mention\" data-screen-name=\"decorates\" class=\"mention\">@decorates</span> function calls with task manager.  My idea would be to add this decorator to the &quot;hard&quot; variables in the model and then sample as before.  I guess the only challenge is where to add the &quot;barrier&quot; that collects all the tasks before computing the log likelihood of the current step...",
  "id": "5433ff1c9b3f077f0f126a86",
  "issues": [],
  "mentions": [
   {
    "screenName": "decorates",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-07T14:56:28.416Z",
  "text": "I guess my current thinking is to use something like celery that @decorates function calls with task manager.  My idea would be to add this decorator to the \"hard\" variables in the model and then sample as before.  I guess the only challenge is where to add the \"barrier\" that collects all the tasks before computing the log likelihood of the current step...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "do you want to parallelize evaluation of the likelihood function during each sampling step?",
  "id": "543400b3c7fee5eb64ef5e2f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-07T15:03:15.553Z",
  "text": "do you want to parallelize evaluation of the likelihood function during each sampling step?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/kyleabeauchamp",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1900459?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1900459?v=4&s=60",
   "displayName": "Kyle Beauchamp",
   "gv": "4",
   "id": "5433fcb6163965c9bc20970d",
   "url": "/kyleabeauchamp",
   "username": "kyleabeauchamp",
   "v": 4
  },
  "html": "Actually, I suppose it&#39;s the drawing that&#39;s going to be parallelized.  The likelihood will be easy, just an observed normal.",
  "id": "54340fe97624f8a4581f8e8d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2014-10-07T16:08:09.418Z",
  "text": "Actually, I suppose it's the drawing that's going to be parallelized.  The likelihood will be easy, just an observed normal.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/kyleabeauchamp",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1900459?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1900459?v=4&s=60",
   "displayName": "Kyle Beauchamp",
   "gv": "4",
   "id": "5433fcb6163965c9bc20970d",
   "url": "/kyleabeauchamp",
   "username": "kyleabeauchamp",
   "v": 4
  },
  "html": "I think I could possibly hack this together if I lumped all of my &quot;slow to sample&quot; variables into a single container variable, then created a custom sampler for the container.  I guess my issue with this is it destroys the elegance of having the random variables stored as separate random variables.  ",
  "id": "5434112bc7fee5eb64ef65b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2014-10-07T16:13:31.829Z",
  "text": "I think I could possibly hack this together if I lumped all of my \"slow to sample\" variables into a single container variable, then created a custom sampler for the container.  I guess my issue with this is it destroys the elegance of having the random variables stored as separate random variables.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "so you have multiple observed nodes and want to evaluate their respective likelihoods in parallel?",
  "id": "54341162c7fee5eb64ef65c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2014-10-07T16:14:26.672Z",
  "text": "so you have multiple observed nodes and want to evaluate their respective likelihoods in parallel?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/kyleabeauchamp",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1900459?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1900459?v=4&s=60",
   "displayName": "Kyle Beauchamp",
   "gv": "4",
   "id": "5433fcb6163965c9bc20970d",
   "url": "/kyleabeauchamp",
   "username": "kyleabeauchamp",
   "v": 4
  },
  "html": "The observed nodes are the &quot;bottom-most&quot; layer.  There&#39;s also an intermediate layer that involves sampling from a highly-optimized simulation engine;  I want to parallelize drawing samples from these.  Maybe I&#39;ll draw out a schematic and post an issue so that I can get more feedback, as this is a slightly crazy idea that might benefit from some developer feedback...",
  "id": "5434175c7624f8a4581f9138",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2014-10-07T16:39:56.726Z",
  "text": "The observed nodes are the \"bottom-most\" layer.  There's also an intermediate layer that involves sampling from a highly-optimized simulation engine;  I want to parallelize drawing samples from these.  Maybe I'll draw out a schematic and post an issue so that I can get more feedback, as this is a slightly crazy idea that might benefit from some developer feedback...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/kyleabeauchamp",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1900459?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1900459?v=4&s=60",
   "displayName": "Kyle Beauchamp",
   "gv": "4",
   "id": "5433fcb6163965c9bc20970d",
   "url": "/kyleabeauchamp",
   "username": "kyleabeauchamp",
   "v": 4
  },
  "html": "Oh: I forgot to mention that the slow computation is a <span data-link-type=\"mention\" data-screen-name=\"deterministic\" class=\"mention\">@deterministic</span>...",
  "id": "54341cbac7fee5eb64ef6aad",
  "issues": [],
  "mentions": [
   {
    "screenName": "deterministic",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-07T17:02:50.622Z",
  "text": "Oh: I forgot to mention that the slow computation is a @deterministic...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I think I know. you just want to parallelize Gibbs sampling of individual RVs",
  "id": "543422d3c235c2a3582b3543",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-07T17:28:51.782Z",
  "text": "I think I know. you just want to parallelize Gibbs sampling of individual RVs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I think this would be very difficult",
  "id": "5434232106ffe37e0fbc1ebf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-07T17:30:09.795Z",
  "text": "I think this would be very difficult",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/kyleabeauchamp",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1900459?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1900459?v=4&s=60",
   "displayName": "Kyle Beauchamp",
   "gv": "4",
   "id": "5433fcb6163965c9bc20970d",
   "url": "/kyleabeauchamp",
   "username": "kyleabeauchamp",
   "v": 4
  },
  "html": "Now that we&#39;ve thoroughly tested gitter, we can continue discussion on tracker: <span data-link-type=\"issue\" data-issue=\"610\" data-issue-repo=\"pymc-devs/pymc\" class=\"issue\">pymc-devs/pymc#610</span>",
  "id": "5434254bc235c2a3582b359a",
  "issues": [
   {
    "number": "610",
    "repo": "pymc-devs/pymc"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-07T17:39:23.103Z",
  "text": "Now that we've thoroughly tested gitter, we can continue discussion on tracker: https://github.com/pymc-devs/pymc/issues/610",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/spenczar",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/880413?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/880413?v=3&s=60",
   "displayName": "Spencer Nelson",
   "gv": "3",
   "id": "54345dca163965c9bc2098ed",
   "url": "/spenczar",
   "username": "spenczar",
   "v": 1
  },
  "html": "hello! i&#39;m working through the tutorial at <a href=\"http://pymc-devs.github.io/pymc/tutorial.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://pymc-devs.github.io/pymc/tutorial.html</a>, and I have found a really minor error that i&#39;d like to correct, but i can&#39;t figure out where the source for that tutorial lives",
  "id": "54345e057624f8a4581faa10",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-07T21:41:25.761Z",
  "text": "hello! i'm working through the tutorial at http://pymc-devs.github.io/pymc/tutorial.html, and I have found a really minor error that i'd like to correct, but i can't figure out where the source for that tutorial lives",
  "unread": false,
  "urls": [
   {
    "url": "http://pymc-devs.github.io/pymc/tutorial.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/spenczar",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/880413?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/880413?v=3&s=60",
   "displayName": "Spencer Nelson",
   "gv": "3",
   "id": "54345dca163965c9bc2098ed",
   "url": "/spenczar",
   "username": "spenczar",
   "v": 1
  },
  "html": "specifically, there&#39;s a code block in <a href=\"http://pymc-devs.github.io/pymc/tutorial.html#two-types-of-variables\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://pymc-devs.github.io/pymc/tutorial.html#two-types-of-variables</a>:<pre><code><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">rate</span><span class=\"params\">(s=switchpoint, e=early_mean, l=late_mean)</span>:</span>\n    <span class=\"string\">''' Concatenate Poisson means '''</span>\n    out = empty(len(disasters_array))\n    out[:s] = e\n    out[s:] = l\n    <span class=\"keyword\">return</span> out</code></pre>",
  "id": "54345e2b8e1fcfec64f01ff0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-07T21:42:03.878Z",
  "text": "specifically, there's a code block in http://pymc-devs.github.io/pymc/tutorial.html#two-types-of-variables:\n```@deterministic(plot=False)\ndef rate(s=switchpoint, e=early_mean, l=late_mean):\n    ''' Concatenate Poisson means '''\n    out = empty(len(disasters_array))\n    out[:s] = e\n    out[s:] = l\n    return out```",
  "unread": false,
  "urls": [
   {
    "url": "http://pymc-devs.github.io/pymc/tutorial.html#two-types-of-variables"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/spenczar",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/880413?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/880413?v=3&s=60",
   "displayName": "Spencer Nelson",
   "gv": "3",
   "id": "54345dca163965c9bc2098ed",
   "url": "/spenczar",
   "username": "spenczar",
   "v": 1
  },
  "html": "<code>empty</code> hasn&#39;t been defined yet - and that makes sense, <code>pymc.examples.disaster_model</code> does <code>from numpy import empty</code>, not <code>import numpy as np</code> like the tutorial suggests",
  "id": "54345e52c7fee5eb64ef8241",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-07T21:42:42.719Z",
  "text": "`empty` hasn't been defined yet - and that makes sense, `pymc.examples.disaster_model` does `from numpy import empty`, not `import numpy as np` like the tutorial suggests",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"spenczar\" class=\"mention\">@spenczar</span> I&#39;ve pushed a fix for this just now. Thanks for reporting it. ",
  "id": "54346da79b3f077f0f129460",
  "issues": [],
  "mentions": [
   {
    "screenName": "spenczar",
    "userId": "54345dca163965c9bc2098ed",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-07T22:48:07.331Z",
  "text": "@spenczar I've pushed a fix for this just now. Thanks for reporting it. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/spenczar",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/880413?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/880413?v=3&s=60",
   "displayName": "Spencer Nelson",
   "gv": "3",
   "id": "54345dca163965c9bc2098ed",
   "url": "/spenczar",
   "username": "spenczar",
   "v": 1
  },
  "html": "np! another tiny error - <a href=\"http://pymc-devs.github.io/pymc/modelbuilding.html#creation-of-stochastic-variables\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://pymc-devs.github.io/pymc/modelbuilding.html#creation-of-stochastic-variables</a> says: &quot;For example, the uniformly-distributed discrete variable switchpoint in ((?)) is created using the automatic interface as follows:&quot;",
  "id": "54346f7306ffe37e0fbc2a17",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-07T22:55:47.513Z",
  "text": "np! another tiny error - http://pymc-devs.github.io/pymc/modelbuilding.html#creation-of-stochastic-variables says: \"For example, the uniformly-distributed discrete variable switchpoint in ((?)) is created using the automatic interface as follows:\"",
  "unread": false,
  "urls": [
   {
    "url": "http://pymc-devs.github.io/pymc/modelbuilding.html#creation-of-stochastic-variables"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/spenczar",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/880413?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/880413?v=3&s=60",
   "displayName": "Spencer Nelson",
   "gv": "3",
   "id": "54345dca163965c9bc2098ed",
   "url": "/spenczar",
   "username": "spenczar",
   "v": 1
  },
  "html": "the &quot;in ((?))&quot; is wrong",
  "id": "54346f7c8e1fcfec64f021ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-07T22:55:56.635Z",
  "text": "the \"in ((?))\" is wrong",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/spenczar",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/880413?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/880413?v=3&s=60",
   "displayName": "Spencer Nelson",
   "gv": "3",
   "id": "54345dca163965c9bc2098ed",
   "url": "/spenczar",
   "username": "spenczar",
   "v": 1
  },
  "html": "broken RST presumably",
  "id": "54346f8dc7fee5eb64ef87d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-07T22:56:13.837Z",
  "text": "broken RST presumably",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/spenczar",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/880413?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/880413?v=3&s=60",
   "displayName": "Spencer Nelson",
   "gv": "3",
   "id": "54345dca163965c9bc2098ed",
   "url": "/spenczar",
   "username": "spenczar",
   "v": 1
  },
  "html": "i can bundle these into a PR though as I find them, I just can&#39;t figure out where the source is?",
  "id": "54346faa06ffe37e0fbc2a1e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-07T22:56:42.393Z",
  "text": "i can bundle these into a PR though as I find them, I just can't figure out where the source is?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "The source is in the <code>docs</code> subdirectory of the 2.3 branch.",
  "id": "543473d18e1fcfec64f02273",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-07T23:14:25.119Z",
  "text": "The source is in the `docs` subdirectory of the 2.3 branch.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "Anything still to do for my nbsample pull request?",
  "id": "543658f194b1edf7377f40af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:44:17.891Z",
  "text": "Anything still to do for my nbsample pull request?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"akloster\" class=\"mention\">@akloster</span> didn&#39;t you updated, I&#39;ll check it out",
  "id": "5436598b4aa6b52430c6332c",
  "issues": [],
  "mentions": [
   {
    "screenName": "akloster",
    "userId": "54317aec163965c9bc208ec9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:46:51.790Z",
  "text": "@akloster didn't you updated, I'll check it out",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "ah, totally dropped the ball on that one",
  "id": "543659a3babeb9253000f0e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:47:15.222Z",
  "text": "ah, totally dropped the ball on that one",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "no problem",
  "id": "543659ae876d3f8814e768e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:47:26.202Z",
  "text": "no problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "one question:",
  "id": "543659be94b1edf7377f40eb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:47:42.128Z",
  "text": "one question:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "did you check the cell output that gets created when the progressbar is updated?",
  "id": "543659d5876d3f8814e768e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:48:05.966Z",
  "text": "did you check the cell output that gets created when the progressbar is updated?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "when I experimented with that, it created a new line of js for each update call",
  "id": "543659e5babeb9253000f0fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:48:21.389Z",
  "text": "when I experimented with that, it created a new line of js for each update call",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that would not be displayed in the nb",
  "id": "543659ebf997a9f637f0565b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:48:27.592Z",
  "text": "that would not be displayed in the nb",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "upds",
  "id": "543659ebbabeb9253000f103",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:48:27.634Z",
  "text": "upds",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "but messed up the NB source",
  "id": "543659f24aa6b52430c6333a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:48:34.844Z",
  "text": "but messed up the NB source",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "I should check on that... it&#39;s not necessary",
  "id": "54365a01876d3f8814e768ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:48:49.665Z",
  "text": "I should check on that... it's not necessary",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "not necessary for what?",
  "id": "54365a14876d3f8814e768f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:49:08.392Z",
  "text": "not necessary for what?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "it&#39;s not necessary to add output for every update",
  "id": "54365a6ac5193b8914cf6f3d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:50:34.921Z",
  "text": "it's not necessary to add output for every update",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "right, it seems like you&#39;re doing it the way the IPython devs suggest this to be done?",
  "id": "54365ac6f997a9f637f05671",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:52:06.376Z",
  "text": "right, it seems like you're doing it the way the IPython devs suggest this to be done?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "I&#39;m not sure I know how they suggest it. I am basically working off the official widget examples. But these examples do something very different, for example they are not running a loop",
  "id": "54365b3bf997a9f637f05681",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:54:03.417Z",
  "text": "I'm not sure I know how they suggest it. I am basically working off the official widget examples. But these examples do something very different, for example they are not running a loop",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I see",
  "id": "54365b53c5193b8914cf6f9e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:54:27.748Z",
  "text": "I see",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "well, if that&#39;s not causing a problem I think it&#39;s ready to merge",
  "id": "54365b5e4aa6b52430c63357",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:54:38.674Z",
  "text": "well, if that's not causing a problem I think it's ready to merge",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "what IPython version are you using?",
  "id": "54365b75876d3f8814e7691d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:55:01.270Z",
  "text": "what IPython version are you using?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "2.2",
  "id": "54365b84876d3f8814e7691f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:55:16.935Z",
  "text": "2.2",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "note that I haven&#39;t looked for that",
  "id": "54365b8dc5193b8914cf6fb0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:55:25.006Z",
  "text": "note that I haven't looked for that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "so it might be totally fine",
  "id": "54365b8fbabeb9253000f182",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:55:27.895Z",
  "text": "so it might be totally fine",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "I think I don&#39;t know what you mean by messing up the output",
  "id": "54365b9d876d3f8814e76921",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:55:41.195Z",
  "text": "I think I don't know what you mean by messing up the output",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "I just checked and it doesn&#39;t do anything obviously bad. NBConvert wouldn&#39;t show the widget though, I think.",
  "id": "54365bbb4aa6b52430c63367",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:56:11.685Z",
  "text": "I just checked and it doesn't do anything obviously bad. NBConvert wouldn't show the widget though, I think.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that&#39;s fine",
  "id": "54365bc4876d3f8814e76928",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:56:20.256Z",
  "text": "that's fine",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "so if your code is inserting java script",
  "id": "54365bcaf997a9f637f05699",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:56:26.382Z",
  "text": "so if your code is inserting java script",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "and being called in a loop",
  "id": "54365bcdf997a9f637f0569a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2014-10-09T09:56:29.243Z",
  "text": "and being called in a loop",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "the result of that cell will be a very long list of java script code",
  "id": "54365bd74aa6b52430c63369",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T09:56:39.371Z",
  "text": "the result of that cell will be a very long list of java script code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "one for each iteration",
  "id": "54365bdd876d3f8814e7692b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T09:56:45.987Z",
  "text": "one for each iteration",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "Yes, but I don&#39;t",
  "id": "54365be5f997a9f637f0569b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T09:56:53.028Z",
  "text": "Yes, but I don't",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "ok, great",
  "id": "54365bf14aa6b52430c6336b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T09:57:05.541Z",
  "text": "ok, great",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "just making sure",
  "id": "54365bf3f997a9f637f0569c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T09:57:07.560Z",
  "text": "just making sure",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "ok, I just merged",
  "id": "54365c1dc5193b8914cf6fec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T09:57:49.293Z",
  "text": "ok, I just merged",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "Widgets and NB Format interaction seem to be hot topics in IPython currently",
  "id": "54365c264aa6b52430c63373",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T09:57:58.089Z",
  "text": "Widgets and NB Format interaction seem to be hot topics in IPython currently",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "thanks",
  "id": "54365c2a876d3f8814e76934",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T09:58:02.644Z",
  "text": "thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> can you add the integration?",
  "id": "54365c2b4aa6b52430c63375",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T09:58:03.959Z",
  "text": "@fonnesbeck can you add the integration?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "so that we see PRs etc in gitter",
  "id": "54365c3af997a9f637f056a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T09:58:18.103Z",
  "text": "so that we see PRs etc in gitter",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"akloster\" class=\"mention\">@akloster</span> definitely, lots of exciting things happening!",
  "id": "54365c4a876d3f8814e76935",
  "issues": [],
  "mentions": [
   {
    "screenName": "akloster",
    "userId": "54317aec163965c9bc208ec9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T09:58:34.544Z",
  "text": "@akloster definitely, lots of exciting things happening!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "I build a little library which enables me to use django forms in a notebook",
  "id": "54365c65f997a9f637f056a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T09:59:01.744Z",
  "text": "I build a little library which enables me to use django forms in a notebook",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "the nbsample will certainly make for a jaw-dropping demo, people love that stuff",
  "id": "54365c774aa6b52430c6337a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T09:59:19.951Z",
  "text": "the nbsample will certainly make for a jaw-dropping demo, people love that stuff",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "cool!",
  "id": "54365c79babeb9253000f1df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T09:59:21.835Z",
  "text": "cool!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "have you seen my nb-bokeh-animations ?",
  "id": "54365c87c5193b8914cf7017",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T09:59:35.547Z",
  "text": "have you seen my nb-bokeh-animations ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I have not",
  "id": "54365c91876d3f8814e7693e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T09:59:45.614Z",
  "text": "I have not",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "bokeh would be great for pymc I think because of the streaming capabilities",
  "id": "54365c9e4aa6b52430c63382",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T09:59:58.538Z",
  "text": "bokeh would be great for pymc I think because of the streaming capabilities",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "just started using it recently",
  "id": "54365ca3babeb9253000f1ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T10:00:03.204Z",
  "text": "just started using it recently",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "what can animations do?",
  "id": "54365ca6876d3f8814e76940",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T10:00:06.533Z",
  "text": "what can animations do?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "<a href=\"https://github.com/akloster/nb-bokeh-animations\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/akloster/nb-bokeh-animations</a>",
  "id": "54365caf876d3f8814e76942",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T10:00:15.039Z",
  "text": "https://github.com/akloster/nb-bokeh-animations",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/akloster/nb-bokeh-animations"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "In these few notebooks I am talking about how different ways of animating in the notebook might work",
  "id": "54365cda876d3f8814e7694c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T10:00:58.026Z",
  "text": "In these few notebooks I am talking about how different ways of animating in the notebook might work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "neat",
  "id": "54365cecbabeb9253000f202",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T10:01:16.074Z",
  "text": "neat",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "one example shows different algorithms sampling the banana model in the pymc examples",
  "id": "54365cfdf997a9f637f056b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T10:01:33.977Z",
  "text": "one example shows different algorithms sampling the banana model in the pymc examples",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "downloading now",
  "id": "54365d0bf997a9f637f056ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:01:47.892Z",
  "text": "downloading now",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "first have to update bokeh",
  "id": "54365d59876d3f8814e76959",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:03:05.248Z",
  "text": "first have to update bokeh",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "yes, probably",
  "id": "54365d6194b1edf7377f4206",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:03:13.099Z",
  "text": "yes, probably",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "these don&#39;t work in nbviewer yet, right?",
  "id": "54365d8d4aa6b52430c63395",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:03:57.593Z",
  "text": "these don't work in nbviewer yet, right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "not really",
  "id": "54365d95c5193b8914cf7054",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:04:05.150Z",
  "text": "not really",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "would probably need a running bokeh server",
  "id": "54365d9dbabeb9253000f22e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:04:13.762Z",
  "text": "would probably need a running bokeh server",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "I tried to at least show the last frame, but the way I&#39;m doing it right now doesn&#39;t work",
  "id": "54365da7f997a9f637f056cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:04:23.512Z",
  "text": "I tried to at least show the last frame, but the way I'm doing it right now doesn't work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "no server needed",
  "id": "54365daebabeb9253000f236",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:04:30.681Z",
  "text": "no server needed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "wow! that&#39;s incredible",
  "id": "543660b9babeb9253000f33b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:17:29.326Z",
  "text": "wow! that's incredible",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "thanks",
  "id": "543660f7c5193b8914cf718d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:18:31.669Z",
  "text": "thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "we have to get this into pymc",
  "id": "54366123c5193b8914cf71a0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:19:15.483Z",
  "text": "we have to get this into pymc",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "neat trick to use the backend for this btw",
  "id": "5436612ebabeb9253000f35d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:19:26.620Z",
  "text": "neat trick to use the backend for this btw",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "you should do a blog post on that, maybe create a gif of how it&#39;s sampling in the NB",
  "id": "54366156c5193b8914cf71ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:20:06.856Z",
  "text": "you should do a blog post on that, maybe create a gif of how it's sampling in the NB",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that would create a lot of excitement",
  "id": "5436618d94b1edf7377f4373",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:21:01.462Z",
  "text": "that would create a lot of excitement",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "just difficult to show as it requires people to download the NB, installing the deps etc ",
  "id": "543661c2c5193b8914cf71d2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:21:54.374Z",
  "text": "just difficult to show as it requires people to download the NB, installing the deps etc ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "wonder what continuum&#39;s thoughts are on uploading and recording the streamed plots",
  "id": "543661dc4aa6b52430c63410",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:22:20.856Z",
  "text": "wonder what continuum's thoughts are on uploading and recording the streamed plots",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"akloster\" class=\"mention\">@akloster</span> are you on twitter?",
  "id": "543663164aa6b52430c63432",
  "issues": [],
  "mentions": [
   {
    "screenName": "akloster",
    "userId": "54317aec163965c9bc208ec9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:27:34.313Z",
  "text": "@akloster are you on twitter?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "yes",
  "id": "5436631bbabeb9253000f40a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:27:39.782Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "bayesianhorse",
  "id": "54366322babeb9253000f40d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:27:46.983Z",
  "text": "bayesianhorse",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "For pymc I think I could write a simple animation &quot;framework&quot; which integrates three different animation backends, matplotlib/seaborne type png images, bokeh and dygraphs",
  "id": "54366389babeb9253000f42d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:29:29.403Z",
  "text": "For pymc I think I could write a simple animation \"framework\" which integrates three different animation backends, matplotlib/seaborne type png images, bokeh and dygraphs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "is there a way to display <a href=\"https://raw.githubusercontent.com/akloster/nb-bokeh-animations/master/html/02_PyMC.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://raw.githubusercontent.com/akloster/nb-bokeh-animations/master/html/02_PyMC.html</a> ?",
  "id": "543663a94aa6b52430c63445",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:30:01.697Z",
  "text": "is there a way to display https://raw.githubusercontent.com/akloster/nb-bokeh-animations/master/html/02_PyMC.html ?",
  "unread": false,
  "urls": [
   {
    "url": "https://raw.githubusercontent.com/akloster/nb-bokeh-animations/master/html/02_PyMC.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "dygraph is faster in animating timeseries I think. Seaborn is much better in statistical stuff, and deals better with 2d scatter plots etc",
  "id": "543663b894b1edf7377f442b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:30:16.065Z",
  "text": "dygraph is faster in animating timeseries I think. Seaborn is much better in statistical stuff, and deals better with 2d scatter plots etc",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "what do you mean by display?",
  "id": "543663cd4aa6b52430c63451",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:30:37.597Z",
  "text": "what do you mean by display?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yeah, seaborn could make a lot of plotting code easier",
  "id": "543663d0f997a9f637f05797",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:30:40.583Z",
  "text": "yeah, seaborn could make a lot of plotting code easier",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "not get the raw html code but make it display",
  "id": "543663d94aa6b52430c63453",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:30:49.371Z",
  "text": "not get the raw html code but make it display",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "there used to be a trick for that",
  "id": "543663df94b1edf7377f4434",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:30:55.595Z",
  "text": "there used to be a trick for that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "but seaborn couldn&#39;t do animation, no?",
  "id": "543663f0babeb9253000f44d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:31:12.551Z",
  "text": "but seaborn couldn't do animation, no?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "<a href=\"http://nbviewer.ipython.org/github/akloster/nb-bokeh-animations/blob/master/notebooks/02_PyMC.ipynb\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://nbviewer.ipython.org/github/akloster/nb-bokeh-animations/blob/master/notebooks/02_PyMC.ipynb</a>",
  "id": "543663faf997a9f637f057a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:31:22.066Z",
  "text": "http://nbviewer.ipython.org/github/akloster/nb-bokeh-animations/blob/master/notebooks/02_PyMC.ipynb",
  "unread": false,
  "urls": [
   {
    "url": "http://nbviewer.ipython.org/github/akloster/nb-bokeh-animations/blob/master/notebooks/02_PyMC.ipynb"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "maybe add that to the readme",
  "id": "54366420babeb9253000f456",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:32:00.614Z",
  "text": "maybe add that to the readme",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "good idea",
  "id": "5436642cbabeb9253000f45d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:32:12.060Z",
  "text": "good idea",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "technically mpl/seaborn can&#39;t do animations, but I can replace the image. It&#39;s quite slow, also, not in the least because you need to transmit a png file each frame. But generally, more than one or two frames per seconds isn&#39;t advisable any way",
  "id": "5436648194b1edf7377f4472",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:33:37.548Z",
  "text": "technically mpl/seaborn can't do animations, but I can replace the image. It's quite slow, also, not in the least because you need to transmit a png file each frame. But generally, more than one or two frames per seconds isn't advisable any way",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I think bokeh would be good enough",
  "id": "5436649ac5193b8914cf72b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:34:02.906Z",
  "text": "I think bokeh would be good enough",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "yes",
  "id": "543664a7c5193b8914cf72c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:34:15.671Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "have you been to PyData berlin by any chance?",
  "id": "543664bac5193b8914cf72c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:34:34.302Z",
  "text": "have you been to PyData berlin by any chance?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "I am working on a live-eeg animation for the notebook, and there bokeh shows flickering because of too many line segments and no double buffering",
  "id": "543664e14aa6b52430c63472",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:35:13.175Z",
  "text": "I am working on a live-eeg animation for the notebook, and there bokeh shows flickering because of too many line segments and no double buffering",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "no, I had to leave on Friday",
  "id": "543664f2f997a9f637f057c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:35:30.322Z",
  "text": "no, I had to leave on Friday",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "you&#39;re in neurosci?",
  "id": "543664f4babeb9253000f491",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:35:32.969Z",
  "text": "you're in neurosci?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "no",
  "id": "543664faf997a9f637f057c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:35:38.032Z",
  "text": "no",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "oh but you were there for EuroPython",
  "id": "543664fcc5193b8914cf72d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:35:40.582Z",
  "text": "oh but you were there for EuroPython",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "did you see my pymc talk? ;)",
  "id": "54366506c5193b8914cf72da",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:35:50.096Z",
  "text": "did you see my pymc talk? ;)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "On video",
  "id": "5436650dbabeb9253000f498",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-09T10:35:57.055Z",
  "text": "On video",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "are you based in Berlin?",
  "id": "5436651d94b1edf7377f449f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T10:36:13.487Z",
  "text": "are you based in Berlin?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "no, Hannover, Germany",
  "id": "54366527babeb9253000f4a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T10:36:23.228Z",
  "text": "no, Hannover, Germany",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "ok, I&#39;m living in D\u00fcsseldorf",
  "id": "543665334aa6b52430c6347f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T10:36:35.573Z",
  "text": "ok, I'm living in D\u00fcsseldorf",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "My talk was &quot;Brainwaves for Hackers&quot;",
  "id": "5436653794b1edf7377f44a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T10:36:39.290Z",
  "text": "My talk was \"Brainwaves for Hackers\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "ah, I do remember that but haven&#39;t seen it",
  "id": "54366543f997a9f637f057cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T10:36:51.517Z",
  "text": "ah, I do remember that but haven't seen it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "I was using matplotlib animations in that talk... I hadn&#39;t yet figured bokeh out",
  "id": "54366557f997a9f637f057d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T10:37:11.554Z",
  "text": "I was using matplotlib animations in that talk... I hadn't yet figured bokeh out",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "where do you work?",
  "id": "54366566babeb9253000f4b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T10:37:26.118Z",
  "text": "where do you work?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "can we take this conversation to facebook or twitter?",
  "id": "5436658dbabeb9253000f4ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T10:38:05.831Z",
  "text": "can we take this conversation to facebook or twitter?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "sure, np",
  "id": "543665b14aa6b52430c6348a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-09T10:38:41.887Z",
  "text": "sure, np",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/u/Al-Ghannam",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=60",
   "displayName": "Al-Ghannam",
   "id": "54381ac6db8155e6700caa3c",
   "url": "/Al-Ghannam",
   "username": "Al-Ghannam"
  },
  "html": "Hello, I have a problem installing pymc, is there anyone to help?",
  "id": "54381ae6e64af4384a38a991",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:44:06.418Z",
  "text": "Hello, I have a problem installing pymc, is there anyone to help?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Which version are you attempting to install, and on what platform?",
  "id": "54381b7d12d3b4474af5a979",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:46:37.928Z",
  "text": "Which version are you attempting to install, and on what platform?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/u/Al-Ghannam",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=60",
   "displayName": "Al-Ghannam",
   "id": "54381ac6db8155e6700caa3c",
   "url": "/Al-Ghannam",
   "username": "Al-Ghannam"
  },
  "html": "2.3.4 on windows.",
  "id": "54381baaf0ae3e852b2d8798",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:47:22.339Z",
  "text": "2.3.4 on windows.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/u/Al-Ghannam",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=60",
   "displayName": "Al-Ghannam",
   "id": "54381ac6db8155e6700caa3c",
   "url": "/Al-Ghannam",
   "username": "Al-Ghannam"
  },
  "html": "I followed this: <a href=\"http://pymc-devs.github.io/pymc/INSTALL.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://pymc-devs.github.io/pymc/INSTALL.html</a>",
  "id": "54381bbae64af4384a38a9a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:47:38.445Z",
  "text": "I followed this: http://pymc-devs.github.io/pymc/INSTALL.html",
  "unread": false,
  "urls": [
   {
    "url": "http://pymc-devs.github.io/pymc/INSTALL.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/u/Al-Ghannam",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=60",
   "displayName": "Al-Ghannam",
   "id": "54381ac6db8155e6700caa3c",
   "url": "/Al-Ghannam",
   "username": "Al-Ghannam"
  },
  "html": "And when I do the final step import pymc I get this:",
  "id": "54381bd212d3b4474af5a996",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:48:02.566Z",
  "text": "And when I do the final step import pymc I get this:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/u/Al-Ghannam",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=60",
   "displayName": "Al-Ghannam",
   "id": "54381ac6db8155e6700caa3c",
   "url": "/Al-Ghannam",
   "username": "Al-Ghannam"
  },
  "html": "warning (theano.configdefaults): g++ not detected...",
  "id": "54381c13e64af4384a38a9b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:49:07.863Z",
  "text": "warning (theano.configdefaults): g++ not detected...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/u/Al-Ghannam",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=60",
   "displayName": "Al-Ghannam",
   "id": "54381ac6db8155e6700caa3c",
   "url": "/Al-Ghannam",
   "username": "Al-Ghannam"
  },
  "html": "warning: statsmodels and/or patsy not found. Not importing glm submodule.",
  "id": "54381c38f50d57422b6d6fdf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:49:44.764Z",
  "text": "warning: statsmodels and/or patsy not found. Not importing glm submodule.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/u/Al-Ghannam",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=60",
   "displayName": "Al-Ghannam",
   "id": "54381ac6db8155e6700caa3c",
   "url": "/Al-Ghannam",
   "username": "Al-Ghannam"
  },
  "html": "Then on running pymc.test(), I get this:",
  "id": "54381c4ee64af4384a38a9c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:50:06.967Z",
  "text": "Then on running pymc.test(), I get this:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "It was trying to install version 3. Were you using pip to install?",
  "id": "54381c51e64af4384a38a9c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:50:09.524Z",
  "text": "It was trying to install version 3. Were you using pip to install?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/u/Al-Ghannam",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=60",
   "displayName": "Al-Ghannam",
   "id": "54381ac6db8155e6700caa3c",
   "url": "/Al-Ghannam",
   "username": "Al-Ghannam"
  },
  "html": "Unfortunately I did many things, and yes one of them was trying to use pip to install it.",
  "id": "54381c6df50d57422b6d6ffa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:50:37.923Z",
  "text": "Unfortunately I did many things, and yes one of them was trying to use pip to install it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "OK if you can use pip, go ahead and uninstall it: pip uninstall pymc",
  "id": "54381c86f0ae3e852b2d87b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:51:02.205Z",
  "text": "OK if you can use pip, go ahead and uninstall it: pip uninstall pymc",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/u/Al-Ghannam",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=60",
   "displayName": "Al-Ghannam",
   "id": "54381ac6db8155e6700caa3c",
   "url": "/Al-Ghannam",
   "username": "Al-Ghannam"
  },
  "html": "But I was getting a lot of errors, and what worked finally wasn&#39;t pip.",
  "id": "54381c8812d3b4474af5a9e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:51:04.131Z",
  "text": "But I was getting a lot of errors, and what worked finally wasn't pip.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/u/Al-Ghannam",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=60",
   "displayName": "Al-Ghannam",
   "id": "54381ac6db8155e6700caa3c",
   "url": "/Al-Ghannam",
   "username": "Al-Ghannam"
  },
  "html": "Ok.",
  "id": "54381c8d12d3b4474af5a9ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:51:09.137Z",
  "text": "Ok.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "... then install from the 2.3 branch:",
  "id": "54381caef50d57422b6d7022",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:51:42.240Z",
  "text": "... then install from the 2.3 branch:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": " pip install <a href=\"mailto:git+git@github.com\" rel=\"nofollow\">git+git@github.com</a>:<a href=\"mailto:pymc-devs/pymc.git@2.3\" rel=\"nofollow\">pymc-devs/pymc.git@2.3</a>",
  "id": "54381cb1f50d57422b6d7023",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:51:45.937Z",
  "text": " pip install git+git@github.com:pymc-devs/pymc.git@2.3",
  "unread": false,
  "urls": [
   {
    "url": "mailto:git+git@github.com"
   },
   {
    "url": "mailto:pymc-devs/pymc.git@2.3"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "we should probably change that part in the readme",
  "id": "54381cbdf50d57422b6d702c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:51:57.411Z",
  "text": "we should probably change that part in the readme",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Let me know if that works. I will update the docs to clarify this.",
  "id": "54381cbd12d3b4474af5aa08",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:51:57.987Z",
  "text": "Let me know if that works. I will update the docs to clarify this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "He&#39;s reading from the docs posted in gh-pages, which correspond to PyMC 2.3",
  "id": "54381cd312d3b4474af5aa13",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:52:19.260Z",
  "text": "He's reading from the docs posted in gh-pages, which correspond to PyMC 2.3",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "right",
  "id": "54381cdcf50d57422b6d7035",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:52:28.611Z",
  "text": "right",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/u/Al-Ghannam",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=60",
   "displayName": "Al-Ghannam",
   "id": "54381ac6db8155e6700caa3c",
   "url": "/Al-Ghannam",
   "username": "Al-Ghannam"
  },
  "html": "Oh, I tried that one before but also got an error.",
  "id": "54381ce8e64af4384a38a9d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:52:40.949Z",
  "text": "Oh, I tried that one before but also got an error.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/u/Al-Ghannam",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=60",
   "displayName": "Al-Ghannam",
   "id": "54381ac6db8155e6700caa3c",
   "url": "/Al-Ghannam",
   "username": "Al-Ghannam"
  },
  "html": "I&#39;ll install then try again and tell you.",
  "id": "54381cf1f0ae3e852b2d87ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:52:49.081Z",
  "text": "I'll install then try again and tell you.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "it&#39;s probably related to gfortran then",
  "id": "54381d2012d3b4474af5aa34",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:53:36.585Z",
  "text": "it's probably related to gfortran then",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Be sure to have the &quot;<span data-link-type=\"mention\" data-screen-name=\"2\" class=\"mention\">@2</span>.3&quot; at the end.",
  "id": "54381d2212d3b4474af5aa35",
  "issues": [],
  "mentions": [
   {
    "screenName": "2",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:53:38.033Z",
  "text": "Be sure to have the \"@2.3\" at the end.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/u/Al-Ghannam",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=60",
   "displayName": "Al-Ghannam",
   "id": "54381ac6db8155e6700caa3c",
   "url": "/Al-Ghannam",
   "username": "Al-Ghannam"
  },
  "html": "It is. I&#39;ll post the error:",
  "id": "54381d60f50d57422b6d7074",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:54:40.895Z",
  "text": "It is. I'll post the error:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/u/Al-Ghannam",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=60",
   "displayName": "Al-Ghannam",
   "id": "54381ac6db8155e6700caa3c",
   "url": "/Al-Ghannam",
   "username": "Al-Ghannam"
  },
  "html": "<a href=\"http://pastebin.com/rQiGtCvz\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://pastebin.com/rQiGtCvz</a>",
  "id": "54381d95f50d57422b6d7094",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:55:33.919Z",
  "text": "http://pastebin.com/rQiGtCvz",
  "unread": false,
  "urls": [
   {
    "url": "http://pastebin.com/rQiGtCvz"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Sorry, I mangled the URL: pip install git+git:<a href=\"mailto://github.com/pymc-devs/pymc.git@2.3\" rel=\"nofollow\">//github.com/pymc-devs/pymc.git@2.3</a>",
  "id": "54381e7ee64af4384a38a9ff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T17:59:26.713Z",
  "text": "Sorry, I mangled the URL: pip install git+git://github.com/pymc-devs/pymc.git@2.3",
  "unread": false,
  "urls": [
   {
    "url": "mailto://github.com/pymc-devs/pymc.git@2.3"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/u/Al-Ghannam",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4377372?v=2&s=60",
   "displayName": "Al-Ghannam",
   "id": "54381ac6db8155e6700caa3c",
   "url": "/Al-Ghannam",
   "username": "Al-Ghannam"
  },
  "html": "I&#39;m now getting cannot find git error.",
  "id": "54381f4212d3b4474af5ab16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-10T18:02:42.894Z",
  "text": "I'm now getting cannot find git error.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "You can either install git (<a href=\"http://git-scm.com\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://git-scm.com</a>) or try substituting https for git.",
  "id": "54383e75f50d57422b6d7d19",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-10T20:15:49.611Z",
  "text": "You can either install git (http://git-scm.com) or try substituting https for git.",
  "unread": false,
  "urls": [
   {
    "url": "http://git-scm.com"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "Hi, I&#39;m going to start using PyMC in these days. Should I start with 2.3 or 3?",
  "id": "5439c2a9cfdad54e13e9bb94",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-11T23:52:09.188Z",
  "text": "Hi, I'm going to start using PyMC in these days. Should I start with 2.3 or 3?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "It depends on what you want to do. All else being equal, I would say 2.3, particularly if you have not used it before. ",
  "id": "5439c328bb204c4d13c26c02",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-11T23:54:16.183Z",
  "text": "It depends on what you want to do. All else being equal, I would say 2.3, particularly if you have not used it before. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "Yea, I read some guides but never tried so far. Ok I&#39;ll stick with 2.3 for now, so I will appreciate the improvements once v3 is ready :)",
  "id": "5439c3b9ad2b90cd0ea1031a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-11T23:56:41.186Z",
  "text": "Yea, I read some guides but never tried so far. Ok I'll stick with 2.3 for now, so I will appreciate the improvements once v3 is ready :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "The documentation is much better developed for 2.3: <a href=\"http://pymc-devs.github.io/pymc/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://pymc-devs.github.io/pymc/</a>",
  "id": "5439c419087269e94234c547",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-11T23:58:17.809Z",
  "text": "The documentation is much better developed for 2.3: http://pymc-devs.github.io/pymc/",
  "unread": false,
  "urls": [
   {
    "url": "http://pymc-devs.github.io/pymc/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "I tried installing 2. 3 on windows and Christoph Gohlke binaries on top of the anaconda distribution seem to work. Any advice for installing on OSX?",
  "id": "5439c42c12466dcc0e1c5a72",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-11T23:58:36.027Z",
  "text": "I tried installing 2. 3 on windows and Christoph Gohlke binaries on top of the anaconda distribution seem to work. Any advice for installing on OSX?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "Yes, the documentation is an important point, especially at my stage, thanks.",
  "id": "5439c45ead2b90cd0ea10328",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-11T23:59:26.654Z",
  "text": "Yes, the documentation is an important point, especially at my stage, thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "You can try using pop, as long as you have a Fortran compiler available:",
  "id": "5439c486ad2b90cd0ea1032a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T00:00:06.529Z",
  "text": "You can try using pop, as long as you have a Fortran compiler available:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "pip install git+git:<a href=\"mailto://github.com/pymc-devs/pymc.git@2.3\" rel=\"nofollow\">//github.com/pymc-devs/pymc.git@2.3</a>",
  "id": "5439c51cd827b5ea422a989e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T00:02:36.139Z",
  "text": "pip install git+git://github.com/pymc-devs/pymc.git@2.3",
  "unread": false,
  "urls": [
   {
    "url": "mailto://github.com/pymc-devs/pymc.git@2.3"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "ok, I was trying to install the conda package from binstar mentioned in the docs but it wants to downgrade numpy to 1.8 (current anaconda has 1.9 already)",
  "id": "5439c5ccbb204c4d13c26c36",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T00:05:32.918Z",
  "text": "ok, I was trying to install the conda package from binstar mentioned in the docs but it wants to downgrade numpy to 1.8 (current anaconda has 1.9 already)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Yeah, don&#39;t use that binary. We are going to be updating it to 2.3.4 soon. ",
  "id": "5439c60dd827b5ea422a98c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T00:06:37.055Z",
  "text": "Yeah, don't use that binary. We are going to be updating it to 2.3.4 soon. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "The fortran compiler should be already included with anaconda, so I&#39;m pip installing from git with your command",
  "id": "5439c639d827b5ea422a98d0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T00:07:21.359Z",
  "text": "The fortran compiler should be already included with anaconda, so I'm pip installing from git with your command",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "Hi, I&#39;m starting with pyMC",
  "id": "543ad2f212466dcc0e1c7b54",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:13:54.593Z",
  "text": "Hi, I'm starting with pyMC",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "sorry, PyMC, and I have a question.",
  "id": "543ad30312466dcc0e1c7b55",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:14:11.465Z",
  "text": "sorry, PyMC, and I have a question.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "I want to model fit some data that is extracted from a Poisson distribution",
  "id": "543ad32ecfdad54e13e9d4ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:14:54.305Z",
  "text": "I want to model fit some data that is extracted from a Poisson distribution",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "The poisson has a rate that is a random variable, let say ~Exponential",
  "id": "543ad381087269e94234ddbc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:16:17.351Z",
  "text": "The poisson has a rate that is a random variable, let say ~Exponential",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "So to generate the n samples of the data, first I draw n rates from the Exponential",
  "id": "543ad3abbb204c4d13c28017",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:16:59.641Z",
  "text": "So to generate the n samples of the data, first I draw n rates from the Exponential",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "tritemio, are you using pymc 2 or 3?",
  "id": "543ad3c6d827b5ea422abe0d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:17:26.953Z",
  "text": "tritemio, are you using pymc 2 or 3?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "Then I draw n counts from n different Poisson distributions",
  "id": "543ad3cc087269e94234ddc4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:17:32.352Z",
  "text": "Then I draw n counts from n different Poisson distributions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "2.3",
  "id": "543ad3cebb204c4d13c28018",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:17:34.178Z",
  "text": "2.3",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "In both cases you probably wouldn&#39;t explicitly sample individually from one variable and then the other...",
  "id": "543ad3f3d827b5ea422abe0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:18:11.594Z",
  "text": "In both cases you probably wouldn't explicitly sample individually from one variable and then the other...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "but rather you&#39;d define a model, create a step method and then let pymc figure it out",
  "id": "543ad411cfdad54e13e9d4ff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:18:41.100Z",
  "text": "but rather you'd define a model, create a step method and then let pymc figure it out",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "as viewed from 10,000 feet, of course",
  "id": "543ad42bad2b90cd0ea1177e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:19:07.013Z",
  "text": "as viewed from 10,000 feet, of course",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "Yes I&#39;m explaining how the data is &quot;simulated&quot;, because I have a doubt if the model I built is what I want",
  "id": "543ad447ad2b90cd0ea11780",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:19:35.171Z",
  "text": "Yes I'm explaining how the data is \"simulated\", because I have a doubt if the model I built is what I want",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "hm",
  "id": "543ad44ed827b5ea422abe27",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:19:42.206Z",
  "text": "hm",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "just for helping us understand your problem, what is your familiarity with bayesian models?",
  "id": "543ad46212466dcc0e1c7b9b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:20:02.810Z",
  "text": "just for helping us understand your problem, what is your familiarity with bayesian models?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "I&#39;m quite new but I think I am familiar with the basic terminology and concepts",
  "id": "543ad49dd827b5ea422abe43",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:21:01.529Z",
  "text": "I'm quite new but I think I am familiar with the basic terminology and concepts",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "ok, can you paste the code? preferably in a pastebin, but you can use markdown syntax in this chat window, if your code is small",
  "id": "543ad4db12466dcc0e1c7bba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:22:03.359Z",
  "text": "ok, can you paste the code? preferably in a pastebin, but you can use markdown syntax in this chat window, if your code is small",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "So far I described the underlying &quot;real&quot; process that generated the data. Since the data is simulated we &quot;know&quot; everything about it.",
  "id": "543ad50412466dcc0e1c7bc7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:22:44.326Z",
  "text": "So far I described the underlying \"real\" process that generated the data. Since the data is simulated we \"know\" everything about it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "Oh ,yes",
  "id": "543ad51812466dcc0e1c7bc8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:23:04.461Z",
  "text": "Oh ,yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "The code is very small, I&#39;ll show you",
  "id": "543ad530bb204c4d13c2802f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:23:28.782Z",
  "text": "The code is very small, I'll show you",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "First how I generate the data:<pre><code><span class=\"variable\">nsamples =</span> <span class=\"number\">1000</span>\n<span class=\"variable\">tau_true =</span> <span class=\"number\">50</span>\n<span class=\"variable\">orig_lambda_sample =</span> distributions.expon(<span class=\"variable\">scale=</span>tau_true).rvs(nsamples)\n<span class=\"variable\">data =</span> distributions.poisson(orig_lambda_sample).rvs(nsamples)</code></pre>",
  "id": "543ad5acd827b5ea422abe6b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-12T19:25:32.161Z",
  "text": "First how I generate the data:\n\n```\nnsamples = 1000\ntau_true = 50\norig_lambda_sample = distributions.expon(scale=tau_true).rvs(nsamples)\ndata = distributions.poisson(orig_lambda_sample).rvs(nsamples)    \n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2014-10-12T19:26:09.807Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "distributions is from <code>scipy.stats</code>",
  "id": "543ad5c6bb204c4d13c2803b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-12T19:25:58.283Z",
  "text": "distributions is from `scipy.stats`",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "And here how I build the model in PyMC:<pre><code><span class=\"variable\">count_rates =</span> pm.Exponential('count_rates', <span class=\"variable\">beta=</span><span class=\"number\">1</span>/tau_true)\n<span class=\"variable\">counts =</span> pm.Poisson('counts', <span class=\"variable\">mu=</span>count_rates, <span class=\"variable\">value=</span>data, <span class=\"variable\">observed=</span>True)</code></pre>",
  "id": "543ad62012466dcc0e1c7be1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-12T19:27:28.188Z",
  "text": "And here how I build the model in PyMC:\n```\ncount_rates = pm.Exponential('count_rates', beta=1/tau_true)\ncounts = pm.Poisson('counts', mu=count_rates, value=data, observed=True)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "And finally how I fit the model:<pre><code><span class=\"constant\">model</span> = pm.Model([count_rates, counts, tau])\n<span class=\"constant\">mcmc</span> = pm.MCMC(model)\nmcmc.sample(80000, 40000)</code></pre>",
  "id": "543ad663ad2b90cd0ea117b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-12T19:28:35.418Z",
  "text": "And finally how I fit the model:\n```\nmodel = pm.Model([count_rates, counts, tau])\nmcmc = pm.MCMC(model)\nmcmc.sample(80000, 40000)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "So my question is the following:",
  "id": "543ad6c112466dcc0e1c7bf3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-12T19:30:09.648Z",
  "text": "So my question is the following:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "I&#39;m not sure if this model express the fact that for each sample extracted from <code>counts</code> a new values from &#39;&#39;count_rates&quot; should be extracted (see the data generation)",
  "id": "543ad73612466dcc0e1c7c04",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-12T19:32:06.023Z",
  "text": "I'm not sure if this model express the fact that for each sample extracted from `counts` a new values from ''count_rates\" should be extracted (see the data generation)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "In the examples I read there is a hyperparameter that once fixed determines the &quot;children&quot; distribution. But in this case count_rates is not unknown, but intrinsically changes for each sample",
  "id": "543ad7c9087269e94234de25",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-12T19:34:33.380Z",
  "text": "In the examples I read there is a hyperparameter that once fixed determines the \"children\" distribution. But in this case count_rates is not unknown, but intrinsically changes for each sample",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "Hope I was clear :)",
  "id": "543ad7f6ad2b90cd0ea117db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-12T19:35:18.180Z",
  "text": "Hope I was clear :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "orig_lambda_sample is a vector",
  "id": "543ad80e087269e94234de2f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-12T19:35:42.590Z",
  "text": "orig_lambda_sample is a vector",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "count_rates isn&#39;t",
  "id": "543ad815cfdad54e13e9d570",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-12T19:35:49.574Z",
  "text": "count_rates isn't",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "I haven&#39;t run the model yet, and I am not a formally trained bayesian, but I think you are overcomplicating this",
  "id": "543ad882bb204c4d13c28074",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-12T19:37:38.918Z",
  "text": "I haven't run the model yet, and I am not a formally trained bayesian, but I think you are overcomplicating this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "Should I make count_rates a vector too?",
  "id": "543ad8cc12466dcc0e1c7c3a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2014-10-12T19:38:52.512Z",
  "text": "Should I make count_rates a vector too?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "count_rates refers to a single scalar hyperparameter of &quot;counts&quot;, but you created &quot;data&quot; from 1000 different count rates. ",
  "id": "543ad91abb204c4d13c28085",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-12T19:40:10.814Z",
  "text": "count_rates refers to a single scalar hyperparameter of \"counts\", but you created \"data\" from 1000 different count rates. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "Ok, thanks for confirming this, that is what I suspected",
  "id": "543ad9b8bb204c4d13c28092",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-12T19:42:48.295Z",
  "text": "Ok, thanks for confirming this, that is what I suspected",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "I think that would not be a good idea, because then you would try to infer a vector of 1000 count rates from one data point each. That&#39;s not impossible, but it doesn&#39;t sound like a good or useful idea.",
  "id": "543ad9bad827b5ea422abf0b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-12T19:42:50.777Z",
  "text": "I think that would not be a good idea, because then you would try to infer a vector of 1000 count rates from one data point each. That's not impossible, but it doesn't sound like a good or useful idea.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "Basically the distribution of &quot;counts&quot; is a distribution that is a Poisson with a rate that is a RV ~ Exponential. Is there a more direct way to express this composite distribution?",
  "id": "543ad9ca087269e94234de59",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-12T19:43:06.443Z",
  "text": "Basically the distribution of \"counts\" is a distribution that is a Poisson with a rate that is a RV ~ Exponential. Is there a more direct way to express this composite distribution?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "You can generate one count rate from an exponential, create 1000 samples from the poisson, then leave the rest of the model",
  "id": "543ada0aad2b90cd0ea11811",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2014-10-12T19:44:10.263Z",
  "text": "You can generate one count rate from an exponential, create 1000 samples from the poisson, then leave the rest of the model",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "then the model would try to infer the count_rate",
  "id": "543ada1bd827b5ea422abf22",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:44:27.531Z",
  "text": "then the model would try to infer the count_rate",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "Of course, I don&#39;t know where you are going with this...",
  "id": "543ada72087269e94234de73",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:45:54.188Z",
  "text": "Of course, I don't know where you are going with this...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "But I can&#39;t change the data generation problem, this is my starting point",
  "id": "543ada7d087269e94234de74",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:46:05.976Z",
  "text": "But I can't change the data generation problem, this is my starting point",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "maybe you want to generate multiple data points of shape (1000,)?",
  "id": "543adaa6bb204c4d13c280a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:46:46.400Z",
  "text": "maybe you want to generate multiple data points of shape (1000,)?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "This is a toy example of a more complex problem I want to tacke",
  "id": "543adab0ad2b90cd0ea1181c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:46:56.506Z",
  "text": "This is a toy example of a more complex problem I want to tacke",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "I don&#39;t think you understand the data generation model",
  "id": "543adacdad2b90cd0ea11822",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2014-10-12T19:47:25.801Z",
  "text": "I don't think you understand the data generation model",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "with the code above you are creating one sample each of 1000 different hyperparameters",
  "id": "543adb03d827b5ea422abf45",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2014-10-12T19:48:19.154Z",
  "text": "with the code above you are creating one sample each of 1000 different hyperparameters",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "exactly",
  "id": "543adb1cbb204c4d13c280ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2014-10-12T19:48:44.128Z",
  "text": "exactly",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "the scipy part I&#39;m perfectly aware of what it does",
  "id": "543adb33d827b5ea422abf49",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2014-10-12T19:49:07.393Z",
  "text": "the scipy part I'm perfectly aware of what it does",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "you know that the maximum likelihood of the count_rates is exactly equal to data?",
  "id": "543adb4cd827b5ea422abf53",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2014-10-12T19:49:32.342Z",
  "text": "you know that the maximum likelihood of the count_rates is exactly equal to data?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "and it is this kind of simulated data that I want to &quot;fit&quot; with PyMC",
  "id": "543adb59ad2b90cd0ea1182b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2014-10-12T19:49:45.487Z",
  "text": "and it is this kind of simulated data that I want to \"fit\" with PyMC",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "yes, I know, this is a toy example :)",
  "id": "543adb9712466dcc0e1c7ca4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2014-10-12T19:50:47.609Z",
  "text": "yes, I know, this is a toy example :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "For each Poisson, I have one sample, the ML estimate for each point would be that sample itself",
  "id": "543adbcf087269e94234de96",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2014-10-12T19:51:43.546Z",
  "text": "For each Poisson, I have one sample, the ML estimate for each point would be that sample itself",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "toy example doesn&#39;t mean that it shouldn&#39;t make any sense ;-) But I think if you are determined, you could set the shape of countrates to (1000,)",
  "id": "543adbebad2b90cd0ea11835",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2014-10-12T19:52:11.324Z",
  "text": "toy example doesn't mean that it shouldn't make any sense ;-) But I think if you are determined, you could set the shape of countrates to (1000,)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "Actually, I realized the example I posted here it is oversimplified.",
  "id": "543adc3dd827b5ea422abf68",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2014-10-12T19:53:33.948Z",
  "text": "Actually, I realized the example I posted here it is oversimplified.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2014-10-12T19:55:57.354Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "If the the parameter of the Exponential is fixed than the composite distribution (Poisson(Exponential)) is fixed too, there is nothing to fit. Thanks for make me reason about that.",
  "id": "543adcafd827b5ea422abf75",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2014-10-12T19:55:27.332Z",
  "text": "If the the parameter of the Exponential is fixed than the composite distribution (Poisson(Exponential)) is fixed too, there is nothing to fit. Thanks for make me reason about that.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "yes, normally you would want to infer some common parameter for the whole model. The way you described it, you could better have split the problem into one count_rate, one data, and then repeat the model 1000 times",
  "id": "543add2ed827b5ea422abf94",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2014-10-12T19:57:34.022Z",
  "text": "yes, normally you would want to infer some common parameter for the whole model. The way you described it, you could better have split the problem into one count_rate, one data, and then repeat the model 1000 times",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "also I can smell a conjugate form in there, but I am too lazy to look it up",
  "id": "543add68d827b5ea422abf9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-12T19:58:32.703Z",
  "text": "also I can smell a conjugate form in there, but I am too lazy to look it up",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "So let me make a more meaningful example.",
  "id": "543adeef12466dcc0e1c7d09",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-12T20:05:03.873Z",
  "text": "So let me make a more meaningful example.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2014-10-12T20:06:43.673Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "The data generation remains the same, but I used now this PyMC model:<pre><code><span class=\"variable\">tau_prior =</span> <span class=\"number\">60</span>\n<span class=\"variable\">tau =</span> pm.Exponential('tau', <span class=\"variable\">beta=</span><span class=\"number\">1</span>/tau_prior)\n<span class=\"variable\">count_rates =</span> pm.Exponential('count_rates', <span class=\"variable\">beta=</span><span class=\"number\">1</span>/tau)\n<span class=\"variable\">counts =</span> pm.Poisson('counts', <span class=\"variable\">mu=</span>count_rates, <span class=\"variable\">value=</span>data, <span class=\"variable\">observed=</span>True)</code></pre>",
  "id": "543adf3bad2b90cd0ea11872",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-12T20:06:19.213Z",
  "text": "The data generation remains the same, but I used now this PyMC model:\n```\ntau_prior = 60\ntau = pm.Exponential('tau', beta=1/tau_prior)\ncount_rates = pm.Exponential('count_rates', beta=1/tau)\ncounts = pm.Poisson('counts', mu=count_rates, value=data, observed=True)\n```",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "count_rates still is a scalar in this case",
  "id": "543adfa7d827b5ea422abff9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-12T20:08:07.795Z",
  "text": "count_rates still is a scalar in this case",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "so you are inferring one value for tau and one value for &quot;count_rates&quot; from all 1000 counts",
  "id": "543adfd7ad2b90cd0ea1187e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-12T20:08:55.845Z",
  "text": "so you are inferring one value for tau and one value for \"count_rates\" from all 1000 counts",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "I understand that. My problem is how to model this kind of &quot;nested&quot; distribution, here Poisson and Exponential are just an example",
  "id": "543ae062087269e94234df01",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-12T20:11:14.640Z",
  "text": "I understand that. My problem is how to model this kind of \"nested\" distribution, here Poisson and Exponential are just an example",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "making count_rates a vector does not seems like the right direction",
  "id": "543ae07e087269e94234df03",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-12T20:11:42.434Z",
  "text": "making count_rates a vector does not seems like the right direction",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "and it doesn&#39;t make a lot of sense to have an exponential prior to an exponential distribution",
  "id": "543ae07ecfdad54e13e9d63f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-12T20:11:42.775Z",
  "text": "and it doesn't make a lot of sense to have an exponential prior to an exponential distribution",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "Put any positive-valued prior instead.",
  "id": "543ae0b612466dcc0e1c7d32",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-12T20:12:38.209Z",
  "text": "Put any positive-valued prior instead.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "no",
  "id": "543ae0bcad2b90cd0ea11891",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-12T20:12:44.950Z",
  "text": "no",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "the count_rates may be nuisance variables, but if you want to use them at all, you need to have them as random variables",
  "id": "543ae12112466dcc0e1c7d3b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-12T20:14:25.959Z",
  "text": "the count_rates may be nuisance variables, but if you want to use them at all, you need to have them as random variables",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "also I haven&#39;t used pymc 2 enough to know how this would look with count_rates as a vector",
  "id": "543ae167cfdad54e13e9d655",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-12T20:15:35.237Z",
  "text": "also I haven't used pymc 2 enough to know how this would look with count_rates as a vector",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "Let me put the question in other terms. Can I create a PyMC stochastic variable that returns at each <code>.random()</code> call samples (counts) from the same distributions described before in scipy?",
  "id": "543ae252d827b5ea422ac05b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-12T20:19:30.863Z",
  "text": "Let me put the question in other terms. Can I create a PyMC stochastic variable that returns at each `.random()` call samples (counts) from the same distributions described before in scipy?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "I don&#39;t see how that makes any more sense.",
  "id": "543ae2d6cfdad54e13e9d685",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-12T20:21:42.577Z",
  "text": "I don't see how that makes any more sense.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "I think the problem is that you don&#39;t really know the question you are seeking an answer to",
  "id": "543ae31cad2b90cd0ea118c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-12T20:22:52.909Z",
  "text": "I think the problem is that you don't really know the question you are seeking an answer to",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "I have samples extracted from a distribution (that incidentally is a nested distribution). The distribution has a parameter to which I can assign a prior distribution. I want to obtain the posteriori distribution of this parameter given the data.  I think it&#39;s pretty clear, no?",
  "id": "543aefe8cfdad54e13e9d7df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-12T21:17:28.787Z",
  "text": "I have samples extracted from a distribution (that incidentally is a nested distribution). The distribution has a parameter to which I can assign a prior distribution. I want to obtain the posteriori distribution of this parameter given the data.  I think it's pretty clear, no?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "StackOverflow is probably a better place to get feedback on particular models. There&#39;s more space and more eyeballs.",
  "id": "543b347a087269e94234e758",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-13T02:10:02.867Z",
  "text": "StackOverflow is probably a better place to get feedback on particular models. There's more space and more eyeballs.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tritemio",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4156237?v=3&s=60",
   "displayName": "Antonino Ingargiola",
   "gv": "3",
   "id": "5439c226db8155e6700caca5",
   "url": "/tritemio",
   "username": "tritemio",
   "v": 2
  },
  "html": "Ditto, thanks: <a href=\"http://stackoverflow.com/questions/26335046/compound-model-in-pymc\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://stackoverflow.com/questions/26335046/compound-model-in-pymc</a>",
  "id": "543bfd093478ae60544b37fd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-13T16:25:45.764Z",
  "text": "Ditto, thanks: http://stackoverflow.com/questions/26335046/compound-model-in-pymc",
  "unread": false,
  "urls": [
   {
    "url": "http://stackoverflow.com/questions/26335046/compound-model-in-pymc"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/closedLoop",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2898137?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2898137?v=3&s=60",
   "displayName": "Sean Kruzel",
   "gv": "3",
   "id": "543fe64cdb8155e6700cc1e4",
   "url": "/closedLoop",
   "username": "closedLoop",
   "v": 2
  },
  "html": "I&#39;m having trouble locating the <code>psample</code> in PYMC3 code.    if I run <code>import pymc as pm\nprint pm.__version__\nfrom pymc import psample</code>  I get the error:  &quot;ImportError: cannot import name psample&quot;",
  "id": "543fe73e7d2272c659134de3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-16T15:41:50.754Z",
  "text": "I'm having trouble locating the `psample` in PYMC3 code.    if I run ```import pymc as pm\nprint pm.__version__\nfrom pymc import psample```  I get the error:  \"ImportError: cannot import name psample\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/closedLoop",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2898137?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2898137?v=3&s=60",
   "displayName": "Sean Kruzel",
   "gv": "3",
   "id": "543fe64cdb8155e6700cc1e4",
   "url": "/closedLoop",
   "username": "closedLoop",
   "v": 2
  },
  "html": "pm.<strong>version</strong> returns 3.0   (I&#39;m on Python 2.7 + ipython and have successfully run the stochastic vol notebook example so most of the library works).  I think I may have pulled the wrong branch of github.  Which is the appropriate one for this?  Thank you",
  "id": "543fe79ee8320ec559b81b5d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-16T15:43:26.821Z",
  "text": "pm.__version__ returns 3.0   (I'm on Python 2.7 + ipython and have successfully run the stochastic vol notebook example so most of the library works).  I think I may have pulled the wrong branch of github.  Which is the appropriate one for this?  Thank you",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/closedLoop",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2898137?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2898137?v=3&s=60",
   "displayName": "Sean Kruzel",
   "gv": "3",
   "id": "543fe64cdb8155e6700cc1e4",
   "url": "/closedLoop",
   "username": "closedLoop",
   "v": 2
  },
  "html": "A please disregard,  I see that you have now move it into <code>pymc.sample()</code>",
  "id": "543ff10bb7a4f087741c275e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-16T16:23:39.519Z",
  "text": "A please disregard,  I see that you have now move it into `pymc.sample()`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "is there still a reference to psample somewhere?",
  "id": "543ffd03b7a4f087741c2975",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-16T17:14:43.093Z",
  "text": "is there still a reference to psample somewhere?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/closedLoop",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2898137?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2898137?v=3&s=60",
   "displayName": "Sean Kruzel",
   "gv": "3",
   "id": "543fe64cdb8155e6700cc1e4",
   "url": "/closedLoop",
   "username": "closedLoop",
   "v": 2
  },
  "html": "pymc/tests/test_sampling.py   line 30",
  "id": "543ffd76b7a4f087741c2982",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-16T17:16:38.344Z",
  "text": "pymc/tests/test_sampling.py   line 30",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/closedLoop",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2898137?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2898137?v=3&s=60",
   "displayName": "Sean Kruzel",
   "gv": "3",
   "id": "543fe64cdb8155e6700cc1e4",
   "url": "/closedLoop",
   "username": "closedLoop",
   "v": 2
  },
  "html": "its in a couple notebooks around the web (about a year old)  + I got distracted by this post (<a href=\"http://stackoverflow.com/questions/23521463/parallelization-of-pymc\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://stackoverflow.com/questions/23521463/parallelization-of-pymc</a>)",
  "id": "543ffdb4e8320ec559b81ed4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2014-10-16T17:17:40.877Z",
  "text": "its in a couple notebooks around the web (about a year old)  + I got distracted by this post (http://stackoverflow.com/questions/23521463/parallelization-of-pymc)",
  "unread": false,
  "urls": [
   {
    "url": "http://stackoverflow.com/questions/23521463/parallelization-of-pymc"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "thanks",
  "id": "543fff1ae8320ec559b81f17",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2014-10-16T17:23:38.226Z",
  "text": "thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/closedLoop",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2898137?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2898137?v=3&s=60",
   "displayName": "Sean Kruzel",
   "gv": "3",
   "id": "543fe64cdb8155e6700cc1e4",
   "url": "/closedLoop",
   "username": "closedLoop",
   "v": 2
  },
  "html": "np.  I updated the SO post to clarify others.  Great work on this project btw",
  "id": "54400086b7a4f087741c29db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2014-10-16T17:29:42.685Z",
  "text": "np.  I updated the SO post to clarify others.  Great work on this project btw",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bjedwards",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/726274?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/726274?v=3&s=60",
   "displayName": "Ben Edwards",
   "gv": "3",
   "id": "54314ccf163965c9bc208e0b",
   "url": "/bjedwards",
   "username": "bjedwards",
   "v": 3
  },
  "html": "Has anyone else had trouble with Theano complaining about Memory for large-ish models",
  "id": "54400608102a8d8874b2475e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2014-10-16T17:53:12.900Z",
  "text": "Has anyone else had trouble with Theano complaining about Memory for large-ish models",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bjedwards",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/726274?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/726274?v=3&s=60",
   "displayName": "Ben Edwards",
   "gv": "3",
   "id": "54314ccf163965c9bc208e0b",
   "url": "/bjedwards",
   "username": "bjedwards",
   "v": 3
  },
  "html": "Like for example:",
  "id": "54400616b7a4f087741c2a9f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2014-10-16T17:53:26.926Z",
  "text": "Like for example:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bjedwards",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/726274?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/726274?v=3&s=60",
   "displayName": "Ben Edwards",
   "gv": "3",
   "id": "54314ccf163965c9bc208e0b",
   "url": "/bjedwards",
   "username": "bjedwards",
   "v": 3
  },
  "html": "<p>X = 100*np.random.random((116889,7))<br>bs = np.array([.1,3,.2,.001,.734,10,5])</p><p>Y = np.dot(X,bs) + 0.123*np.random.randn(X.shape[0])</p><p>with mc.Model() as model:<br>    betas = mc.Cauchy(&#39;betas&#39;,0,2.5,shape=(7,1))<br>    sigma = mc.Uniform(&#39;sigma&#39;,.000001,1)</p><pre><code><span class=\"variable\">Y_est =</span> mc.matrix_dot(X,betas)\n\n<span class=\"variable\">Y =</span> mc.Normal('Y',<span class=\"variable\">mu=</span>Y_est,<span class=\"variable\">tau=</span><span class=\"number\">1.0</span>/sigma,<span class=\"variable\">observed=</span>Y)</code></pre>",
  "id": "5440062e7d2272c659135dc9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2014-10-16T17:53:50.240Z",
  "text": "X = 100*np.random.random((116889,7))\nbs = np.array([.1,3,.2,.001,.734,10,5])\n\nY = np.dot(X,bs) + 0.123*np.random.randn(X.shape[0])\n\nwith mc.Model() as model:\n    betas = mc.Cauchy('betas',0,2.5,shape=(7,1))\n    sigma = mc.Uniform('sigma',.000001,1)\n    \n    Y_est = mc.matrix_dot(X,betas)\n    \n    Y = mc.Normal('Y',mu=Y_est,tau=1.0/sigma,observed=Y)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bjedwards",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/726274?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/726274?v=3&s=60",
   "displayName": "Ben Edwards",
   "gv": "3",
   "id": "54314ccf163965c9bc208e0b",
   "url": "/bjedwards",
   "username": "bjedwards",
   "v": 3
  },
  "html": "hmmm, gitter doesn&#39;t seem to know how to format the whole thing...",
  "id": "54400646e8320ec559b81fdc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2014-10-16T17:54:14.869Z",
  "text": "hmmm, gitter doesn't seem to know how to format the whole thing...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bjedwards",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/726274?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/726274?v=3&s=60",
   "displayName": "Ben Edwards",
   "gv": "3",
   "id": "54314ccf163965c9bc208e0b",
   "url": "/bjedwards",
   "username": "bjedwards",
   "v": 3
  },
  "html": "The machine I am on has, 30GB of memory, but when I try to specify that model I just get a cryptic <code>MemoryError</code> from Theano",
  "id": "5440068db7a4f087741c2aad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2014-10-16T17:55:25.918Z",
  "text": "The machine I am on has, 30GB of memory, but when I try to specify that model I just get a cryptic `MemoryError` from Theano",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that&#39;s indeed a pretty large model",
  "id": "5440095de8320ec559b8203e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2014-10-16T18:07:25.686Z",
  "text": "that's indeed a pretty large model",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "probably an issue for the theano guys though",
  "id": "544009797d2272c659135f40",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2014-10-16T18:07:53.222Z",
  "text": "probably an issue for the theano guys though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bjedwards",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/726274?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/726274?v=3&s=60",
   "displayName": "Ben Edwards",
   "gv": "3",
   "id": "54314ccf163965c9bc208e0b",
   "url": "/bjedwards",
   "username": "bjedwards",
   "v": 3
  },
  "html": "Alright, thanks anyway",
  "id": "544028e7b7a4f087741c2fae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2014-10-16T20:21:59.180Z",
  "text": "Alright, thanks anyway",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "let me know if you do decide to post to the theano list, they have been very helpful in the past",
  "id": "54402a1a102a8d8874b25729",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2014-10-16T20:27:06.367Z",
  "text": "let me know if you do decide to post to the theano list, they have been very helpful in the past",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "similar issue was just posted: <span data-link-type=\"issue\" data-issue=\"624\" data-issue-repo=\"pymc-devs/pymc\" class=\"issue\">pymc-devs/pymc#624</span>",
  "id": "54402a28e8320ec559b8246c",
  "issues": [
   {
    "number": "624",
    "repo": "pymc-devs/pymc"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2014-10-16T20:27:20.083Z",
  "text": "similar issue was just posted: https://github.com/pymc-devs/pymc/issues/624",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "different error though",
  "id": "54402a2de8320ec559b8246d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2014-10-16T20:27:25.992Z",
  "text": "different error though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bjedwards",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/726274?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/726274?v=3&s=60",
   "displayName": "Ben Edwards",
   "gv": "3",
   "id": "54314ccf163965c9bc208e0b",
   "url": "/bjedwards",
   "username": "bjedwards",
   "v": 3
  },
  "html": "Will do, this might have been an IPython issue? I started getting weird <code>MemoryError</code>s just doing some numpy manipulation shortly after, restarted the kernel and everything seems to work",
  "id": "5440300f7d2272c659136f9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2014-10-16T20:52:31.213Z",
  "text": "Will do, this might have been an IPython issue? I started getting weird `MemoryError`s just doing some numpy manipulation shortly after, restarted the kernel and everything seems to work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that&#39;s weird indeed. I think IPython hangs on to old variables even if you delete cells",
  "id": "5440312de8320ec559b8253f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2014-10-16T20:57:17.221Z",
  "text": "that's weird indeed. I think IPython hangs on to old variables even if you delete cells",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bjedwards",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/726274?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/726274?v=3&s=60",
   "displayName": "Ben Edwards",
   "gv": "3",
   "id": "54314ccf163965c9bc208e0b",
   "url": "/bjedwards",
   "username": "bjedwards",
   "v": 3
  },
  "html": "Might have been the case",
  "id": "544031d8b7a4f087741c30d2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2014-10-16T21:00:08.822Z",
  "text": "Might have been the case",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bjedwards",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/726274?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/726274?v=3&s=60",
   "displayName": "Ben Edwards",
   "gv": "3",
   "id": "54314ccf163965c9bc208e0b",
   "url": "/bjedwards",
   "username": "bjedwards",
   "v": 3
  },
  "html": "Actually this was totally my fault",
  "id": "544032027d2272c659137090",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2014-10-16T21:00:50.865Z",
  "text": "Actually this was totally my fault",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bjedwards",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/726274?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/726274?v=3&s=60",
   "displayName": "Ben Edwards",
   "gv": "3",
   "id": "54314ccf163965c9bc208e0b",
   "url": "/bjedwards",
   "username": "bjedwards",
   "v": 3
  },
  "html": "```python",
  "id": "54403206b7a4f087741c30dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2014-10-16T21:00:54.260Z",
  "text": "```python",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bjedwards",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/726274?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/726274?v=3&s=60",
   "displayName": "Ben Edwards",
   "gv": "3",
   "id": "54314ccf163965c9bc208e0b",
   "url": "/bjedwards",
   "username": "bjedwards",
   "v": 3
  },
  "html": "Y = np.dot(X,bs) + 0.123*np.random.randn(X.shape[0])",
  "id": "5440320a102a8d8874b25aad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2014-10-16T21:00:58.647Z",
  "text": "Y = np.dot(X,bs) + 0.123*np.random.randn(X.shape[0])",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bjedwards",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/726274?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/726274?v=3&s=60",
   "displayName": "Ben Edwards",
   "gv": "3",
   "id": "54314ccf163965c9bc208e0b",
   "url": "/bjedwards",
   "username": "bjedwards",
   "v": 3
  },
  "html": "That actually needs to be Y = np.dot(X,bs)[:,0] + 0.123*np.random.randn(X.shape[0])",
  "id": "544032267d2272c65913709e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2014-10-16T21:01:26.455Z",
  "text": "That actually needs to be Y = np.dot(X,bs)[:,0] + 0.123*np.random.randn(X.shape[0])",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bjedwards",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/726274?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/726274?v=3&s=60",
   "displayName": "Ben Edwards",
   "gv": "3",
   "id": "54314ccf163965c9bc208e0b",
   "url": "/bjedwards",
   "username": "bjedwards",
   "v": 3
  },
  "html": "Odd, but it seems to work...",
  "id": "54403265e8320ec559b8256a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2014-10-16T21:02:29.800Z",
  "text": "Odd, but it seems to work...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "sure you have the order right of the dot?",
  "id": "5440f34cb7a4f087741c4973",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-17T10:45:32.017Z",
  "text": "sure you have the order right of the dot?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "merged <span data-link-type=\"issue\" data-issue=\"587\" data-issue-repo=\"pymc-devs/pymc\" class=\"issue\">pymc-devs/pymc#587</span> so samplers like Metropolis and Slice will default to non-blocked",
  "id": "544238219d6320476bc06190",
  "issues": [
   {
    "number": "587",
    "repo": "pymc-devs/pymc"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T09:51:29.300Z",
  "text": "merged https://github.com/pymc-devs/pymc/pull/587 so samplers like Metropolis and Slice will default to non-blocked",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "I fixed the new Python 3 bug I introduced when fixing the import bug I introduced when introducing the nbsample function.",
  "id": "544251aef01ce6c37b1340d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T11:40:30.212Z",
  "text": "I fixed the new Python 3 bug I introduced when fixing the import bug I introduced when introducing the nbsample function.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": ":) thanks!",
  "id": "544296779d6320476bc068e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T16:33:59.546Z",
  "text": ":) thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "merged",
  "id": "544297187d2272c659140ff7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T16:36:40.342Z",
  "text": "merged",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "Is there any chance that the Gibbs sampler will make a return in pymc 3? ",
  "id": "5442a1b97d2272c659141164",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T17:22:01.690Z",
  "text": "Is there any chance that the Gibbs sampler will make a return in pymc 3? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "or maybe I&#39;m unsure about the difference between Gibbs&#39; and Slice",
  "id": "5442a1f1f01ce6c37b134dbf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T17:22:57.777Z",
  "text": "or maybe I'm unsure about the difference between Gibbs' and Slice",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that certainly would be a nice feature",
  "id": "5442aa0d7d2272c659141271",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T17:57:33.335Z",
  "text": "that certainly would be a nice feature",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "we probably first need to merge <span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span>&#39;s random branch",
  "id": "5442aa1708adfca07ab0a91f",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T17:57:43.604Z",
  "text": "we probably first need to merge @fonnesbeck's random branch",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "slice is something different",
  "id": "5442aa4900a72fbd5114417d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T17:58:33.686Z",
  "text": "slice is something different",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "there&#39;s also distributions (<a href=\"https://github.com/forcedotcom/distributions\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/forcedotcom/distributions</a>) which we might be able to tie in",
  "id": "5442aa7b08adfca07ab0a928",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T17:59:23.214Z",
  "text": "there's also distributions (https://github.com/forcedotcom/distributions) which we might be able to tie in",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/forcedotcom/distributions"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"8\" data-issue-repo=\"forcedotcom/distributions\" class=\"issue\">forcedotcom/distributions#8</span>",
  "id": "5442aacf08adfca07ab0a92e",
  "issues": [
   {
    "number": "8",
    "repo": "forcedotcom/distributions"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T18:00:47.615Z",
  "text": "https://github.com/forcedotcom/distributions/issues/8",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "another suggestion I have is to seperate out pymc 2 and 3 into different packages/repositories. I am more familiar with pymc3 currently, but it seams as though pymc2 isn&#39;t going away any time soon. Users are confusing the two, and version 3 has a very different approach. So much different that some things can&#39;t be done in 3, and some can&#39;t be done in 2.3",
  "id": "5442b07d00a72fbd51144203",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T18:25:01.939Z",
  "text": "another suggestion I have is to seperate out pymc 2 and 3 into different packages/repositories. I am more familiar with pymc3 currently, but it seams as though pymc2 isn't going away any time soon. Users are confusing the two, and version 3 has a very different approach. So much different that some things can't be done in 3, and some can't be done in 2.3",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I agree",
  "id": "5442b531f01ce6c37b1350ff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T18:45:05.413Z",
  "text": "I agree",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "we had that discussion before though",
  "id": "5442b8487d2272c659141489",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T18:58:16.735Z",
  "text": "we had that discussion before though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "but I think back then the assumption was that pymc3 would come along faster so now we&#39;re in this limbo",
  "id": "5442b85cf01ce6c37b135165",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T18:58:36.822Z",
  "text": "but I think back then the assumption was that pymc3 would come along faster so now we're in this limbo",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "which isn&#39;t ideal",
  "id": "5442b85ef01ce6c37b135166",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T18:58:38.971Z",
  "text": "which isn't ideal",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "further into the future it would be nice to have a coda-like library, based on blaze which can collect samples from different mcmc packages and make charts / analysis from that",
  "id": "5442b87a00a72fbd511442bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T18:59:06.433Z",
  "text": "further into the future it would be nice to have a coda-like library, based on blaze which can collect samples from different mcmc packages and make charts / analysis from that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "sounds neat but also sounds like a completely new project",
  "id": "5442b8a9f01ce6c37b135170",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2014-10-18T18:59:53.243Z",
  "text": "sounds neat but also sounds like a completely new project",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "yes would probably be a new project. I also think that there is a python-based simulation server, geared towards recording/documenting simulation runs, not only in MCMC",
  "id": "5442b8e29d6320476bc06b61",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2014-10-18T19:00:50.436Z",
  "text": "yes would probably be a new project. I also think that there is a python-based simulation server, geared towards recording/documenting simulation runs, not only in MCMC",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "Out of curiosity I am toying around with the idea of &quot;bayesian deployment&quot;, meaning not only the &quot;inference button&quot; but how to package up bayesian methods for users.",
  "id": "5442bb82f01ce6c37b1351ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T19:12:02.606Z",
  "text": "Out of curiosity I am toying around with the idea of \"bayesian deployment\", meaning not only the \"inference button\" but how to package up bayesian methods for users.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I see",
  "id": "5442bb997d2272c65914150d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T19:12:25.463Z",
  "text": "I see",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yeah, that&#39;s a big one",
  "id": "5442bba008adfca07ab0aa5b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T19:12:32.423Z",
  "text": "yeah, that's a big one",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "probably quite some $$ behind getting that one right",
  "id": "5442bbab00a72fbd511442fd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T19:12:43.119Z",
  "text": "probably quite some $$ behind getting that one right",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "something like yhat for Bayesian stats",
  "id": "5442bbb800a72fbd511442fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T19:12:56.023Z",
  "text": "something like yhat for Bayesian stats",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "one interesting application is the oxford nanopore sequencers. They funnel dna strands through a nanopore in a membrane, and read sequence data from that. The cost driving factor then is not really the amount of data or depth of sampling, but rather how long a particular sample is being analysed. In quite a few applications you wouldn&#39;t sequence to assemble a complete genome, but rather you look for evidence of particular bacteria in a sample. The online analysis would have to decide when enough &quot;evidence&quot; has been collected.",
  "id": "5442bc767d2272c65914152f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T19:16:06.285Z",
  "text": "one interesting application is the oxford nanopore sequencers. They funnel dna strands through a nanopore in a membrane, and read sequence data from that. The cost driving factor then is not really the amount of data or depth of sampling, but rather how long a particular sample is being analysed. In quite a few applications you wouldn't sequence to assemble a complete genome, but rather you look for evidence of particular bacteria in a sample. The online analysis would have to decide when enough \"evidence\" has been collected.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "In finance, there may be trading signals which are generated from such models. All in all, such a system would have to find a compromise of computational resources, time to convergence and accuracy of the result",
  "id": "5442bd089d9619a17abc29b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T19:18:32.760Z",
  "text": "In finance, there may be trading signals which are generated from such models. All in all, such a system would have to find a compromise of computational resources, time to convergence and accuracy of the result",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yep, that&#39;s a great idea",
  "id": "5442bef800a72fbd51144345",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T19:26:48.838Z",
  "text": "yep, that's a great idea",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "there&#39;s various levels this could be done",
  "id": "5442bf099d6320476bc06bc5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T19:27:05.476Z",
  "text": "there's various levels this could be done",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "from already providing custom models",
  "id": "5442bf14f01ce6c37b13527f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T19:27:16.780Z",
  "text": "from already providing custom models",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "to only the deployment of users&#39; models",
  "id": "5442bf1e9d6320476bc06bc7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T19:27:26.182Z",
  "text": "to only the deployment of users' models",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "biggest user base is probably A/B testing",
  "id": "5442c07900a72fbd51144364",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T19:33:13.959Z",
  "text": "biggest user base is probably A/B testing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "One of the issues I think is creating some sort of economic model, which relates &quot;time to answer&quot; and convergence.",
  "id": "5442c1dc9d6320476bc06bf0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T19:39:08.074Z",
  "text": "One of the issues I think is creating some sort of economic model, which relates \"time to answer\" and convergence.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "another idea is streaming an updating histogram into a web interface. Or having some API callbacks telling another system that a conclusion has been reached.",
  "id": "5442c2397d2272c6591415f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T19:40:41.229Z",
  "text": "another idea is streaming an updating histogram into a web interface. Or having some API callbacks telling another system that a conclusion has been reached.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": " I do like the aspect of Bayesian updating",
  "id": "5442d03b7d2272c65914179f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T20:40:27.430Z",
  "text": " I do like the aspect of Bayesian updating",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "but the problem is that MCMC does not at all lend itself to that",
  "id": "5442d04500a72fbd511444c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T20:40:37.113Z",
  "text": "but the problem is that MCMC does not at all lend itself to that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "there&#39;s some particle filtering algorithms that try to do this now",
  "id": "5442d0617d2272c6591417aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T20:41:05.564Z",
  "text": "there's some particle filtering algorithms that try to do this now",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "I haven&#39;t looked into particle filtering enough, yet. I learned it a few years ago in Sebastian Thrun&#39;s &quot;AI for self driving cars&quot;",
  "id": "5442d3bb00a72fbd5114451a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T20:55:23.603Z",
  "text": "I haven't looked into particle filtering enough, yet. I learned it a few years ago in Sebastian Thrun's \"AI for self driving cars\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "I&#39;m not quite clear on how this works for bayesian models",
  "id": "5442d3d69d6320476bc06d61",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T20:55:50.833Z",
  "text": "I'm not quite clear on how this works for bayesian models",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": " for sampling I think it&#39;s more often called sequential monte carlo",
  "id": "5442e53f9d6320476bc06f06",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-18T22:10:07.030Z",
  "text": " for sampling I think it's more often called sequential monte carlo",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"akloster\" class=\"mention\">@akloster</span> here is an example: <a href=\"http://arxiv.org/abs/1101.1528\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://arxiv.org/abs/1101.1528</a>",
  "id": "54438fde9d6320476bc07a8b",
  "issues": [],
  "mentions": [
   {
    "screenName": "akloster",
    "userId": "54317aec163965c9bc208ec9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2014-10-19T10:18:06.153Z",
  "text": "@akloster here is an example: http://arxiv.org/abs/1101.1528",
  "unread": false,
  "urls": [
   {
    "url": "http://arxiv.org/abs/1101.1528"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "new PR: <span data-link-type=\"issue\" data-issue=\"633\" data-issue-repo=\"pymc-devs/pymc\" class=\"issue\">pymc-devs/pymc#633</span>",
  "id": "5448eac5b1ae33697aa5dc6e",
  "issues": [
   {
    "number": "633",
    "repo": "pymc-devs/pymc"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-23T11:47:17.912Z",
  "text": "new PR: https://github.com/pymc-devs/pymc/pull/633",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "would appreciate some eyes",
  "id": "5448ead4ef450be817fe5967",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-23T11:47:32.228Z",
  "text": "would appreciate some eyes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/indiajoe",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2526444?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2526444?v=3&s=60",
   "displayName": "Joe Philip Ninan",
   "gv": "3",
   "id": "543c7619db8155e6700cb298",
   "url": "/indiajoe",
   "username": "indiajoe",
   "v": 2
  },
  "html": "Hi, Is it possible to run NUTS Sampler if my custom deterministic function have <code>grad()</code> attribute? I was wondering where I can find some examples or documents on how to implement custom deterministic functions which can run Samplers which need gradient.",
  "id": "5450ea68d8f49b032a3b4667",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2014-10-29T13:23:52.965Z",
  "text": "Hi, Is it possible to run NUTS Sampler if my custom deterministic function have `grad()` attribute? I was wondering where I can find some examples or documents on how to implement custom deterministic functions which can run Samplers which need gradient.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "you have to code your deterministic in theano",
  "id": "5450eebfa53c699a46cd3285",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2014-10-29T13:42:23.184Z",
  "text": "you have to code your deterministic in theano",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "then it will work automatically",
  "id": "5450eec6f9d495c20c1e7d0c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2014-10-29T13:42:30.023Z",
  "text": "then it will work automatically",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "if it&#39;s a blackbox function (e.g. using theano as_op) you&#39;d have to supply the gradient manually somehow",
  "id": "5450eedea53c699a46cd3288",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2014-10-29T13:42:54.147Z",
  "text": "if it's a blackbox function (e.g. using theano as_op) you'd have to supply the gradient manually somehow",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/indiajoe",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2526444?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2526444?v=3&s=60",
   "displayName": "Joe Philip Ninan",
   "gv": "3",
   "id": "543c7619db8155e6700cb298",
   "url": "/indiajoe",
   "username": "indiajoe",
   "v": 2
  },
  "html": "Yes. mine is a blackbox function implemented using theano&#39;s as_op. I can in principle calculate and return gradient also by interpolation on grid of data. But I couldn&#39;t find any documentation on how to add a gradient method to a function. Should i write it as a different function, or should i convert my function into an object with .grad() method? ",
  "id": "545180553823ef31490cfd47",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2014-10-30T00:03:33.459Z",
  "text": "Yes. mine is a blackbox function implemented using theano's as_op. I can in principle calculate and return gradient also by interpolation on grid of data. But I couldn't find any documentation on how to add a gradient method to a function. Should i write it as a different function, or should i convert my function into an object with .grad() method? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/indiajoe",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2526444?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2526444?v=3&s=60",
   "displayName": "Joe Philip Ninan",
   "gv": "3",
   "id": "543c7619db8155e6700cb298",
   "url": "/indiajoe",
   "username": "indiajoe",
   "v": 2
  },
  "html": "I think I was looking at the wrong place for examples. Since this is a theano related problem. I checked theano&#39;s documentation, and found this <a href=\"http://deeplearning.net/software/theano/tutorial/extending_theano.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://deeplearning.net/software/theano/tutorial/extending_theano.html</a> . It seems to explain how to define theano ops in full generality. Am I on the right track here?",
  "id": "54518d15a53c699a46cd42db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-30T00:57:57.455Z",
  "text": "I think I was looking at the wrong place for examples. Since this is a theano related problem. I checked theano's documentation, and found this http://deeplearning.net/software/theano/tutorial/extending_theano.html . It seems to explain how to define theano ops in full generality. Am I on the right track here?",
  "unread": false,
  "urls": [
   {
    "url": "http://deeplearning.net/software/theano/tutorial/extending_theano.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"indiajoe\" class=\"mention\">@indiajoe</span>, you can also post a question at stack overflow or <a href=\"http://stats.stackexchange.com/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://stats.stackexchange.com/</a> with more details. Also maybe there is a way to express your &quot;as_op&quot; operation in a symbolic way, which hasn&#39;t occurred to you yet. I have never implemented a grad function myself, so I can&#39;t help you any further without knowing any details.",
  "id": "5451cda73823ef31490d0162",
  "issues": [],
  "mentions": [
   {
    "screenName": "indiajoe",
    "userId": "543c7619db8155e6700cb298",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-30T05:33:27.807Z",
  "text": "@indiajoe, you can also post a question at stack overflow or http://stats.stackexchange.com/ with more details. Also maybe there is a way to express your \"as_op\" operation in a symbolic way, which hasn't occurred to you yet. I have never implemented a grad function myself, so I can't help you any further without knowing any details.",
  "unread": false,
  "urls": [
   {
    "url": "http://stats.stackexchange.com/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/indiajoe",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2526444?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2526444?v=3&s=60",
   "displayName": "Joe Philip Ninan",
   "gv": "3",
   "id": "543c7619db8155e6700cb298",
   "url": "/indiajoe",
   "username": "indiajoe",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"akloster\" class=\"mention\">@akloster</span> Thank you. My function decorated with &quot;as_op&quot; has no analytical form, it interpolates from a grid. It is similar to the example given in issue  <span data-link-type=\"issue\" data-issue=\"639\" data-issue-repo=\"pymc-devs/pymc\" class=\"issue\">pymc-devs/pymc#639</span> . I shall ask this question in stack overflow after reading a little bit more on ops in theano.",
  "id": "5451e447a53c699a46cd474a",
  "issues": [
   {
    "number": "639",
    "repo": "pymc-devs/pymc"
   }
  ],
  "mentions": [
   {
    "screenName": "akloster",
    "userId": "54317aec163965c9bc208ec9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-30T07:09:59.448Z",
  "text": "@akloster Thank you. My function decorated with \"as_op\" has no analytical form, it interpolates from a grid. It is similar to the example given in issue  pymc-devs/pymc#639 . I shall ask this question in stack overflow after reading a little bit more on ops in theano.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"indiajoe\" class=\"mention\">@indiajoe</span> I think approximating the gradient is probably too costly and you&#39;d be better off using a non-gradient-based sampler like Slice sampling",
  "id": "5451faf2f9d495c20c1e921b",
  "issues": [],
  "mentions": [
   {
    "screenName": "indiajoe",
    "userId": "543c7619db8155e6700cb298",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-30T08:46:42.229Z",
  "text": "@indiajoe I think approximating the gradient is probably too costly and you'd be better off using a non-gradient-based sampler like Slice sampling",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "but yes, creating a new theano op that also computes the gradient (i.e. the link you found) would be the right approach",
  "id": "5451fb06f9d495c20c1e921e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-30T08:47:02.380Z",
  "text": "but yes, creating a new theano op that also computes the gradient (i.e. the link you found) would be the right approach",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "if you still wanted to do that",
  "id": "5451fb0df9d495c20c1e921f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-30T08:47:09.407Z",
  "text": "if you still wanted to do that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/indiajoe",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2526444?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2526444?v=3&s=60",
   "displayName": "Joe Philip Ninan",
   "gv": "3",
   "id": "543c7619db8155e6700cb298",
   "url": "/indiajoe",
   "username": "indiajoe",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> For local linear interpolation on grid, I am anyway calculating the slope coefficients of linear regression on nearby points. So I can use those coefficients as gradient, without any extra calculation.",
  "id": "545210f8f9d495c20c1e9429",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-30T10:20:40.895Z",
  "text": "@twiecki For local linear interpolation on grid, I am anyway calculating the slope coefficients of linear regression on nearby points. So I can use those coefficients as gradient, without any extra calculation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I see, then that might make sense",
  "id": "545225813823ef31490d074b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2014-10-30T11:48:17.264Z",
  "text": "I see, then that might make sense",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/jhamrick",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/83444?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/83444?v=3&s=60",
   "displayName": "Jessica B. Hamrick",
   "gv": "3",
   "id": "5409d337163965c9bc202d90",
   "url": "/jhamrick",
   "username": "jhamrick",
   "v": 4
  },
  "html": "Hello",
  "id": "548e70257c1c0a2f7d19db02",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2014-12-15T05:22:45.281Z",
  "text": "Hello",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/jhamrick",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/83444?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/83444?v=3&s=60",
   "displayName": "Jessica B. Hamrick",
   "gv": "3",
   "id": "5409d337163965c9bc202d90",
   "url": "/jhamrick",
   "username": "jhamrick",
   "v": 4
  },
  "html": "I am trying to play around with pymc3 for the first time, and I was wondering if there is a way to create a model that has an unknown number of variables?",
  "id": "548e70487c1c0a2f7d19db09",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2014-12-15T05:23:20.674Z",
  "text": "I am trying to play around with pymc3 for the first time, and I was wondering if there is a way to create a model that has an unknown number of variables?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/jhamrick",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/83444?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/83444?v=3&s=60",
   "displayName": "Jessica B. Hamrick",
   "gv": "3",
   "id": "5409d337163965c9bc202d90",
   "url": "/jhamrick",
   "username": "jhamrick",
   "v": 4
  },
  "html": "For example, my model would ideally look something like this:",
  "id": "548e7070a4ffdbe561468e6a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2014-12-15T05:24:00.363Z",
  "text": "For example, my model would ideally look something like this:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/jhamrick",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/83444?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/83444?v=3&s=60",
   "displayName": "Jessica B. Hamrick",
   "gv": "3",
   "id": "5409d337163965c9bc202d90",
   "url": "/jhamrick",
   "username": "jhamrick",
   "v": 4
  },
  "html": "<pre><code><span class=\"variable\">T =</span> <span class=\"number\">2</span>\n<span class=\"variable\">alpha =</span> <span class=\"number\">774.374287</span>\n<span class=\"variable\">beta =</span> <span class=\"number\">1532.006942</span>\n\n<span class=\"keyword\">with</span> pm.Model() as model:\n    <span class=\"variable\">p =</span> pm.Uniform('p', <span class=\"number\">0</span>, <span class=\"number\">1</span>)\n    <span class=\"variable\">k =</span> pm.DensityDist('k', lambda value: PkgTp(value, T, p), <span class=\"variable\">testval=</span><span class=\"number\">1</span>, <span class=\"variable\">dtype=</span>'int64')\n    <span class=\"variable\">t =</span> pm.InverseGamma('t', alpha, <span class=\"variable\">beta=</span>beta, <span class=\"variable\">shape=</span>(k,))\n    <span class=\"variable\">t_sample =</span> pm.Deterministic('t_sample', t.sum())</code></pre>",
  "id": "548e70767c1c0a2f7d19db0e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2014-12-15T05:24:06.999Z",
  "text": "```\nT = 2\nalpha = 774.374287\nbeta = 1532.006942\n\nwith pm.Model() as model:\n    p = pm.Uniform('p', 0, 1)\n    k = pm.DensityDist('k', lambda value: PkgTp(value, T, p), testval=1, dtype='int64')\n    t = pm.InverseGamma('t', alpha, beta=beta, shape=(k,))\n    t_sample = pm.Deterministic('t_sample', t.sum())\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/jhamrick",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/83444?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/83444?v=3&s=60",
   "displayName": "Jessica B. Hamrick",
   "gv": "3",
   "id": "5409d337163965c9bc202d90",
   "url": "/jhamrick",
   "username": "jhamrick",
   "v": 4
  },
  "html": "(where <code>PkgTp</code> is some arbitrary function that is a PMF over positive integers)",
  "id": "548e70bc7c1c0a2f7d19db15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2014-12-15T05:25:16.640Z",
  "text": "(where `PkgTp` is some arbitrary function that is a PMF over positive integers)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/jhamrick",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/83444?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/83444?v=3&s=60",
   "displayName": "Jessica B. Hamrick",
   "gv": "3",
   "id": "5409d337163965c9bc202d90",
   "url": "/jhamrick",
   "username": "jhamrick",
   "v": 4
  },
  "html": "It appears, though, that you can&#39;t define the shape of variables in terms of another random variable, so I&#39;m not sure what the correct way to approach this is.",
  "id": "548e70d9a6abd16b7d6c1deb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2014-12-15T05:25:45.906Z",
  "text": "It appears, though, that you can't define the shape of variables in terms of another random variable, so I'm not sure what the correct way to approach this is.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jhamrick\" class=\"mention\">@jhamrick</span> Unfortunately you can&#39;t. the reason is that the dimensionality of the model has to be known. these nonparametric Bayesian models can be a bit tricky. one common approach, however, is to just chose a large number of dimensions and then only use the ones you&#39;re currently evaluating",
  "id": "548e8da47c1c0a2f7d19dca0",
  "issues": [],
  "mentions": [
   {
    "screenName": "jhamrick",
    "userId": "5409d337163965c9bc202d90",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2014-12-15T07:28:36.878Z",
  "text": "@jhamrick Unfortunately you can't. the reason is that the dimensionality of the model has to be known. these nonparametric Bayesian models can be a bit tricky. one common approach, however, is to just chose a large number of dimensions and then only use the ones you're currently evaluating",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "theano should support using a random variable to slice an array",
  "id": "548e8ddfa4ffdbe561469020",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2014-12-15T07:29:35.186Z",
  "text": "theano should support using a random variable to slice an array",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "or rather another theano expression",
  "id": "548e8df1a6abd16b7d6c1f74",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2014-12-15T07:29:53.298Z",
  "text": "or rather another theano expression",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jhamrick\" class=\"mention\">@jhamrick</span> One approach for this is to use indicators (a mask) to select the variables for the current iteration (i.e. latent variable models). Its also easy to set up Dirichlet process priors in PyMC, which works if the number of variables varies probabilistically.",
  "id": "548edd28a4ffdbe56146957f",
  "issues": [],
  "mentions": [
   {
    "screenName": "jhamrick",
    "userId": "5409d337163965c9bc202d90",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2014-12-15T13:07:52.403Z",
  "text": "@jhamrick One approach for this is to use indicators (a mask) to select the variables for the current iteration (i.e. latent variable models). Its also easy to set up Dirichlet process priors in PyMC, which works if the number of variables varies probabilistically.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "idea: I&#39;m often running into issues of the covariance matrix not being positive definite. perhaps the shrinkage methods from sklearn <a href=\"http://scikit-learn.org/dev/modules/covariance.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://scikit-learn.org/dev/modules/covariance.html</a> can help this. if someone wants to give this a try please report back",
  "id": "548ee21aa4ffdbe561469615",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2014-12-15T13:28:58.677Z",
  "text": "idea: I'm often running into issues of the covariance matrix not being positive definite. perhaps the shrinkage methods from sklearn http://scikit-learn.org/dev/modules/covariance.html can help this. if someone wants to give this a try please report back",
  "unread": false,
  "urls": [
   {
    "url": "http://scikit-learn.org/dev/modules/covariance.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/jhamrick",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/83444?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/83444?v=3&s=60",
   "displayName": "Jessica B. Hamrick",
   "gv": "3",
   "id": "5409d337163965c9bc202d90",
   "url": "/jhamrick",
   "username": "jhamrick",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> <span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> Ok, that\u2019s too bad that it\u2019s not possible. But I\u2019ll try out the approaches you suggested \u2014 thanks!",
  "id": "548f23e2a4ffdbe561469f4e",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   },
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2014-12-15T18:09:38.821Z",
  "text": "@twiecki @fonnesbeck Ok, that\u2019s too bad that it\u2019s not possible. But I\u2019ll try out the approaches you suggested \u2014 thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2014-12-28T23:22:26.119Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/datnamer",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=60",
   "displayName": "datnamer",
   "gv": "4",
   "id": "54602d6fdb8155e6700d316b",
   "url": "/datnamer",
   "username": "datnamer",
   "v": 10
  },
  "html": "I stumbled upon the following blogpost: <a href=\"http://matthewrocklin.com/blog/work/2014/12/27/Towards-OOC/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://matthewrocklin.com/blog/work/2014/12/27/Towards-OOC/</a> This  is an interesting  opportunity to submit input for the next generation out  of core ND-array ops that could benefit the entire ecosystem . Perhaps some pymc flavored feedback would help.",
  "id": "54a08f9f1874bf665913d78c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2014-12-28T23:17:51.481Z",
  "text": "I stumbled upon the following blogpost: http://matthewrocklin.com/blog/work/2014/12/27/Towards-OOC/ This  is an interesting  opportunity to submit input for the next generation out  of core ND-array ops that could benefit the entire ecosystem . Perhaps some pymc flavored feedback would help.",
  "unread": false,
  "urls": [
   {
    "url": "http://matthewrocklin.com/blog/work/2014/12/27/Towards-OOC/"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"datnamer\" class=\"mention\">@datnamer</span> interesting, thanks for posting. not sure it really has a direct link to pymc tho",
  "id": "54a1bd9e29aec36b6af18f31",
  "issues": [],
  "mentions": [
   {
    "screenName": "datnamer",
    "userId": "54602d6fdb8155e6700d316b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2014-12-29T20:46:22.957Z",
  "text": "@datnamer interesting, thanks for posting. not sure it really has a direct link to pymc tho",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/datnamer",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=60",
   "displayName": "datnamer",
   "gv": "4",
   "id": "54602d6fdb8155e6700d316b",
   "url": "/datnamer",
   "username": "datnamer",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span>  Agreed, but insofar as pymc uses theano and numpy and maybe eventually numpy 2, I thought it would be good to help facilitate the requested community feedback and awareness. ",
  "id": "54a1dcc929aec36b6af1916a",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2014-12-29T22:59:21.780Z",
  "text": "@twiecki  Agreed, but insofar as pymc uses theano and numpy and maybe eventually numpy 2, I thought it would be good to help facilitate the requested community feedback and awareness. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2014-12-29T23:11:05.633Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/datnamer",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=60",
   "displayName": "datnamer",
   "gv": "4",
   "id": "54602d6fdb8155e6700d316b",
   "url": "/datnamer",
   "username": "datnamer",
   "v": 10
  },
  "html": "Sorry if it wasn&#39;t an appropriate post!",
  "id": "54a1df7ed17024f3570ece4c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2014-12-29T23:10:54.705Z",
  "text": "Sorry if it wasn't an appropriate post!",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "definitely appreciate the heads up",
  "id": "54a2211ed17024f3570ed362",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2014-12-30T03:50:54.303Z",
  "text": "definitely appreciate the heads up",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tboggs",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4976161?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4976161?v=4&s=60",
   "displayName": "Thomas Boggs",
   "gv": "4",
   "id": "54cbdc28db8155e6700f46a8",
   "url": "/tboggs",
   "username": "tboggs",
   "v": 2
  },
  "html": "Hello. I&#39;ve been playing with implementing <a href=\"http://en.wikipedia.org/wiki/Latent_Dirichlet_allocation\" rel=\"nofollow\" target=\"_blank\" class=\"link\">Latent Dirichlet Allocation</a> in PyMC, starting with the relatively simple code <a href=\"http://stats.stackexchange.com/questions/104771/latent-dirichlet-allocation-in-pymc/120456#120456\" rel=\"nofollow\" target=\"_blank\" class=\"link\">here</a>. My problem is that the memory consumption is huge even for small problems. For example, using a corpus of 64 documents with 220 words each and a vocabulary size of 2200 words results in over 50 GB of RAM being consumed. I&#39;m curious if the large memory consumption is due to a sub-optimal implementation of the model or if it is something inherent in how PyMC solves models. Any insight would be appreciated.",
  "id": "54cbe3e7c0e0985060b607d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-01-30T20:04:55.368Z",
  "text": "Hello. I've been playing with implementing [Latent Dirichlet Allocation](http://en.wikipedia.org/wiki/Latent_Dirichlet_allocation) in PyMC, starting with the relatively simple code [here](http://stats.stackexchange.com/questions/104771/latent-dirichlet-allocation-in-pymc/120456#120456). My problem is that the memory consumption is huge even for small problems. For example, using a corpus of 64 documents with 220 words each and a vocabulary size of 2200 words results in over 50 GB of RAM being consumed. I'm curious if the large memory consumption is due to a sub-optimal implementation of the model or if it is something inherent in how PyMC solves models. Any insight would be appreciated.",
  "unread": false,
  "urls": [
   {
    "url": "http://en.wikipedia.org/wiki/Latent_Dirichlet_allocation"
   },
   {
    "url": "http://stats.stackexchange.com/questions/104771/latent-dirichlet-allocation-in-pymc/120456#120456"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Are you using PyMC 2.3 or the PyMC 3 alpha version? It would be helpful if you could post some sample code. Feel free to either open an issue on the issue tracker on GitHub, or post a question to StackOverflow.",
  "id": "54cc0037c0e0985060b60d8c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-01-30T22:05:43.191Z",
  "text": "Are you using PyMC 2.3 or the PyMC 3 alpha version? It would be helpful if you could post some sample code. Feel free to either open an issue on the issue tracker on GitHub, or post a question to StackOverflow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Sorry, just saw your link to an example. Will check it out.",
  "id": "54cc004d2081c9934ab67abd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-01-30T22:06:05.509Z",
  "text": "Sorry, just saw your link to an example. Will check it out.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Are you trying to replicate that same example, or is your model different?",
  "id": "54cc009dc0e0985060b60d9b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-01-30T22:07:25.769Z",
  "text": "Are you trying to replicate that same example, or is your model different?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tboggs",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4976161?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4976161?v=4&s=60",
   "displayName": "Thomas Boggs",
   "gv": "4",
   "id": "54cbdc28db8155e6700f46a8",
   "url": "/tboggs",
   "username": "tboggs",
   "v": 2
  },
  "html": "I have been running 2.3 but I&#39;m curious if the same issues should be expected with PyMC 3. To start, I am trying to replicate the linked example but I need to implement a number of new probabilistic topic models that don&#39;t have some of the simplifying assumptions of LDA and aren&#39;t found in other topic modeling packages.  I will need to be able to fit models with similar parameters as above but potentially with number of documents on order 10**5 (though I could probably scrape by with less).",
  "id": "54cc120ef39d925c13301564",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-01-30T23:21:50.803Z",
  "text": "I have been running 2.3 but I'm curious if the same issues should be expected with PyMC 3. To start, I am trying to replicate the linked example but I need to implement a number of new probabilistic topic models that don't have some of the simplifying assumptions of LDA and aren't found in other topic modeling packages.  I will need to be able to fit models with similar parameters as above but potentially with number of documents on order 10**5 (though I could probably scrape by with less).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "We were having memory issues related to the database backend in PyMC, but these were taken care of in more recent versions, so make sure you have the latest and greatest version of 2.3 (or try switching backends). PyMC 3 will use more efficient samplers for continuous variables (HMC), so it can reduce the number of samples that you need relative to Metropolis. KEep in mind, though, thatn MCMC in general does not scale very well with large datasets due to the overhead in calculating likelihoods at every iteration.",
  "id": "54d29c1a31d02b0d0485a758",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-02-04T22:24:26.688Z",
  "text": "We were having memory issues related to the database backend in PyMC, but these were taken care of in more recent versions, so make sure you have the latest and greatest version of 2.3 (or try switching backends). PyMC 3 will use more efficient samplers for continuous variables (HMC), so it can reduce the number of samples that you need relative to Metropolis. KEep in mind, though, thatn MCMC in general does not scale very well with large datasets due to the overhead in calculating likelihoods at every iteration.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-02-04T23:34:43.905Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/datnamer",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=60",
   "displayName": "datnamer",
   "gv": "4",
   "id": "54602d6fdb8155e6700d316b",
   "url": "/datnamer",
   "username": "datnamer",
   "v": 10
  },
  "html": "PYMC 3 looks great, but there seem to be lots of theano related errors  and I was having some trouble with windows installation with anaconda (going to revisit this soon. Curious about the  roadmap/timeline for finishing PYMC 3? Where is the best place to pitch in for a pymc noob?",
  "id": "54d2ac24b97ab6876520ade3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-02-04T23:32:52.654Z",
  "text": "PYMC 3 looks great, but there seem to be lots of theano related errors  and I was having some trouble with windows installation with anaconda (going to revisit this soon. Curious about the  roadmap/timeline for finishing PYMC 3? Where is the best place to pitch in for a pymc noob?\n\n\n",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Currently, we are trying to work on the documentation as much as possible. There isnt a formal timeline for PyMC 3 because all the main developers are only able to contribute when there is available time in their schedules. I&#39;m trying to secure funding for development time for myself, but until that happens, contributions are incremental and irregular (mostly bug fixing). The best place to pitch in is probably documentation, unless there are particular aspects that you think you would be suited for.",
  "id": "54d4cc20adca701740eb7092",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-02-06T14:13:52.179Z",
  "text": "Currently, we are trying to work on the documentation as much as possible. There isnt a formal timeline for PyMC 3 because all the main developers are only able to contribute when there is available time in their schedules. I'm trying to secure funding for development time for myself, but until that happens, contributions are incremental and irregular (mostly bug fixing). The best place to pitch in is probably documentation, unless there are particular aspects that you think you would be suited for.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/u/kiudee",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/564473?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/564473?v=3&s=60",
   "displayName": "kiudee",
   "id": "54d25da4db8155e6700f7232",
   "url": "/kiudee",
   "username": "kiudee"
  },
  "html": "Hey, is it possible in PyMC 3 to implement a distribution where the input shape differs from the output shape?<br>I\u2019m currently implementing a prior distribution for correlation matrices for which only  the upper triangular matrix values are of interest for the sampler and the complete matrix can be constructed from that. Currently, I think the only option would be to set an 1d output shape which the user then has to transform into a correlation matrix.",
  "id": "54d75aa987289ef554273d01",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-02-08T12:46:33.816Z",
  "text": "Hey, is it possible in PyMC 3 to implement a distribution where the input shape differs from the output shape?\nI\u2019m currently implementing a prior distribution for correlation matrices for which only  the upper triangular matrix values are of interest for the sampler and the complete matrix can be constructed from that. Currently, I think the only option would be to set an 1d output shape which the user then has to transform into a correlation matrix.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kludee\" class=\"mention\">@kludee</span> I think there are special prior distributions for correlation matrices. I haven&#39;t ever used them and I can&#39;t remember how they are called.",
  "id": "54d75c51c4e6814561969479",
  "issues": [],
  "mentions": [
   {
    "screenName": "kludee",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2015-02-08T12:53:37.248Z",
  "text": "@kludee I think there are special prior distributions for correlation matrices. I haven't ever used them and I can't remember how they are called.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/u/kiudee",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/564473?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/564473?v=3&s=60",
   "displayName": "kiudee",
   "id": "54d25da4db8155e6700f7232",
   "url": "/kiudee",
   "username": "kiudee"
  },
  "html": "Indeed, I am implementing the LKJ prior distribution for correlation matrices for public use.",
  "id": "54d75db8c4e68145619694a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-02-08T12:59:36.940Z",
  "text": "Indeed, I am implementing the LKJ prior distribution for correlation matrices for public use.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "I don&#39;t know the particulars, but if you implement the distribution in pymc 2 or 3, then the whole matrix is probably sampled as one step and it doesn&#39;t matter that much if you represent it as 1d array or not...",
  "id": "54d75f7a87289ef554273d6f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-02-08T13:07:06.439Z",
  "text": "I don't know the particulars, but if you implement the distribution in pymc 2 or 3, then the whole matrix is probably sampled as one step and it doesn't matter that much if you represent it as 1d array or not...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "I&#39;d also imagine that the pymc core developers would be grateful for a pull request with a working LKJ distribution!",
  "id": "54d75fd59c4dae457a7e033f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-02-08T13:08:37.660Z",
  "text": "I'd also imagine that the pymc core developers would be grateful for a pull request with a working LKJ distribution!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/datnamer",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=60",
   "displayName": "datnamer",
   "gv": "4",
   "id": "54602d6fdb8155e6700d316b",
   "url": "/datnamer",
   "username": "datnamer",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span>  Gotcha. Wasn&#39;t trying to rush you guys, just wanted to get an idea of the timeline so I can choose libraries appropriately for my project.  Have you considered one of the crowdsourcing websites, a donations link or GSOC?",
  "id": "54e4cabdc8e106d730ca09b8",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2015-02-18T17:24:13.232Z",
  "text": "@fonnesbeck  Gotcha. Wasn't trying to rush you guys, just wanted to get an idea of the timeline so I can choose libraries appropriately for my project.  Have you considered one of the crowdsourcing websites, a donations link or GSOC?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"datnamer\" class=\"mention\">@datnamer</span> We are looking at GSOC. I&#39;m not sure donations would help that much. Speaking only for myself, I need protected time to commit to coding PyMC, which for an academic usually means a grant of some sort (which I am investigating).",
  "id": "54e54e4748b72ed5309577a7",
  "issues": [],
  "mentions": [
   {
    "screenName": "datnamer",
    "userId": "54602d6fdb8155e6700d316b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-02-19T02:45:27.672Z",
  "text": "@datnamer We are looking at GSOC. I'm not sure donations would help that much. Speaking only for myself, I need protected time to commit to coding PyMC, which for an academic usually means a grant of some sort (which I am investigating).\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "we don&#39;t have a lot of time for GSoC 2015 though but I think it could be great",
  "id": "54e5a9c2516319127575f899",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-02-19T09:15:46.218Z",
  "text": "we don't have a lot of time for GSoC 2015 though but I think it could be great",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "check out the first start of the docs (including some examples): <a href=\"http://pymc-devs.github.io/pymc3/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://pymc-devs.github.io/pymc3/</a>",
  "id": "54edd99749a02eb3744f2b3b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-02-25T14:17:59.843Z",
  "text": "check out the first start of the docs (including some examples): http://pymc-devs.github.io/pymc3/",
  "unread": false,
  "urls": [
   {
    "url": "http://pymc-devs.github.io/pymc3/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/log0ymxm",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/35297?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/35297?v=4&s=60",
   "displayName": "Paul English",
   "gv": "4",
   "id": "54a74ec1db8155e6700e5285",
   "url": "/log0ymxm",
   "username": "log0ymxm",
   "v": 4
  },
  "html": "Is there a replacement for Container in pymc3?",
  "id": "54ef70d64b7f24b059b92d3a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-02-26T19:15:34.490Z",
  "text": "Is there a replacement for Container in pymc3?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "No, this is still an open issue in PyMC 3.",
  "id": "54ef827a5092f77b218b54a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-02-26T20:30:50.411Z",
  "text": "No, this is still an open issue in PyMC 3.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tboggs",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4976161?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4976161?v=4&s=60",
   "displayName": "Thomas Boggs",
   "gv": "4",
   "id": "54cbdc28db8155e6700f46a8",
   "url": "/tboggs",
   "username": "tboggs",
   "v": 2
  },
  "html": "I tried re-implementing the model I mentioned in my comment on 30 Jan to see if memory consumption is lower with PyMC 3. Unfortunately, I don&#39;t see how I can translate the model from PyMC 2 to 3. Could someone take a peek and let me know if I&#39;ve missed something obvious? I&#39;ve posted a minimal model <a href=\"http://stackoverflow.com/questions/28756503/unable-to-create-lambda-function-in-hierarchical-pymc3-model\" rel=\"nofollow\" target=\"_blank\" class=\"link\">here</a>.",
  "id": "54f480268d79a4a8116b6b1f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-03-02T15:22:14.232Z",
  "text": "I tried re-implementing the model I mentioned in my comment on 30 Jan to see if memory consumption is lower with PyMC 3. Unfortunately, I don't see how I can translate the model from PyMC 2 to 3. Could someone take a peek and let me know if I've missed something obvious? I've posted a minimal model [here](http://stackoverflow.com/questions/28756503/unable-to-create-lambda-function-in-hierarchical-pymc3-model).",
  "unread": false,
  "urls": [
   {
    "url": "http://stackoverflow.com/questions/28756503/unable-to-create-lambda-function-in-hierarchical-pymc3-model"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/datnamer",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=60",
   "displayName": "datnamer",
   "gv": "4",
   "id": "54602d6fdb8155e6700d316b",
   "url": "/datnamer",
   "username": "datnamer",
   "v": 10
  },
  "html": "Docs looking great and glad to see PYMC3 chugging along. Interesting blogpost on the state of the art in prob programming: <a href=\"https://moalquraishi.wordpress.com/2015/03/29/the-state-of-probabilistic-programming/comment-page-1/#comment-1438\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://moalquraishi.wordpress.com/2015/03/29/the-state-of-probabilistic-programming/comment-page-1/#comment-1438</a> ",
  "id": "552a9b880e3138bb6be7e84a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-04-12T16:21:28.973Z",
  "text": "Docs looking great and glad to see PYMC3 chugging along. Interesting blogpost on the state of the art in prob programming: https://moalquraishi.wordpress.com/2015/03/29/the-state-of-probabilistic-programming/comment-page-1/#comment-1438 ",
  "unread": false,
  "urls": [
   {
    "url": "https://moalquraishi.wordpress.com/2015/03/29/the-state-of-probabilistic-programming/comment-page-1/#comment-1438"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"datnamer\" class=\"mention\">@datnamer</span> thanks! unfortunately no mention of pymc",
  "id": "55323ec48c86646906dd61d4",
  "issues": [],
  "mentions": [
   {
    "screenName": "datnamer",
    "userId": "54602d6fdb8155e6700d316b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2015-04-18T11:23:48.932Z",
  "text": "@datnamer thanks! unfortunately no mention of pymc",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "a good read nonetheless",
  "id": "55323ed880707c8f682d0c99",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-04-18T11:24:08.387Z",
  "text": "a good read nonetheless",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/MashallAryan1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10347415?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10347415?v=3&s=60",
   "displayName": "MashallAryan1",
   "gv": "3",
   "id": "54a26231db8155e6700e3e32",
   "url": "/MashallAryan1",
   "username": "MashallAryan1",
   "v": 3
  },
  "html": "Hi,",
  "id": "55496f9652bceea22c382019",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-05-06T01:34:14.260Z",
  "text": "Hi,",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/MashallAryan1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10347415?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10347415?v=3&s=60",
   "displayName": "MashallAryan1",
   "gv": "3",
   "id": "54a26231db8155e6700e3e32",
   "url": "/MashallAryan1",
   "username": "MashallAryan1",
   "v": 3
  },
  "html": "could anybody  help me with this issue? <a href=\"http://stackoverflow.com/q/30066223/4430895\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://stackoverflow.com/q/30066223/4430895</a>",
  "id": "55497696d121a2245850ef28",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-05-06T02:04:06.699Z",
  "text": "could anybody  help me with this issue? http://stackoverflow.com/q/30066223/4430895",
  "unread": false,
  "urls": [
   {
    "url": "http://stackoverflow.com/q/30066223/4430895"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"MashallAryan1\" class=\"mention\">@MashallAryan1</span> That&#39;s not enough information on what isn&#39;t working",
  "id": "5549d35f52bceea22c3825ca",
  "issues": [],
  "mentions": [
   {
    "screenName": "MashallAryan1",
    "userId": "54a26231db8155e6700e3e32",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-05-06T08:39:59.303Z",
  "text": "@MashallAryan1 That's not enough information on what isn't working",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-05-07T00:27:26.634Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/MashallAryan1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10347415?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10347415?v=3&s=60",
   "displayName": "MashallAryan1",
   "gv": "3",
   "id": "54a26231db8155e6700e3e32",
   "url": "/MashallAryan1",
   "username": "MashallAryan1",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> I provided some more details.   ",
  "id": "554ab130e3b5d9f17024e9a6",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2015-05-07T00:26:24.219Z",
  "text": "@twiecki I provided some more details.   ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/MashallAryan1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10347415?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10347415?v=3&s=60",
   "displayName": "MashallAryan1",
   "gv": "3",
   "id": "54a26231db8155e6700e3e32",
   "url": "/MashallAryan1",
   "username": "MashallAryan1",
   "v": 3
  },
  "html": "thank you in advance",
  "id": "554ab13f489c98827952bdfe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-05-07T00:26:39.592Z",
  "text": "thank you in advance",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/shoyer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1217238?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1217238?v=4&s=60",
   "displayName": "Stephan Hoyer",
   "gv": "4",
   "id": "542ddae7163965c9bc20840d",
   "url": "/shoyer",
   "username": "shoyer",
   "v": 7
  },
  "html": "Has there been any work on gaussian processes for pymc3?",
  "id": "55611914840892054b0cac2c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-05-24T00:19:32.713Z",
  "text": "Has there been any work on gaussian processes for pymc3?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-05-24T08:12:26.614Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/jsalvatier",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/270513?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/270513?v=3&s=60",
   "displayName": "John Salvatier",
   "gv": "3",
   "id": "5419c8f9163965c9bc20529d",
   "url": "/jsalvatier",
   "username": "jsalvatier",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"shoyer\" class=\"mention\">@shoyer</span>, not recently, but I&#39;m hoping to do so soon. Are you interested in helping? ",
  "id": "556187bfb57c60450aa94e51",
  "issues": [],
  "mentions": [
   {
    "screenName": "shoyer",
    "userId": "542ddae7163965c9bc20840d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2015-05-24T08:11:43.956Z",
  "text": "@shoyer, not recently, but I'm hoping to do so soon. Are you interested in helping? ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/jsalvatier",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/270513?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/270513?v=3&s=60",
   "displayName": "John Salvatier",
   "gv": "3",
   "id": "5419c8f9163965c9bc20529d",
   "url": "/jsalvatier",
   "username": "jsalvatier",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> <span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span>  Have you guys seen LaplacesDemon for R? They seem to have implemented a lot of samplers: <a href=\"http://www.inside-r.org/packages/cran/LaplacesDemon/docs/LaplacesDemon\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://www.inside-r.org/packages/cran/LaplacesDemon/docs/LaplacesDemon</a>",
  "id": "556187de29921ce910488f21",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   },
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2015-05-24T08:12:14.624Z",
  "text": "@twiecki @fonnesbeck  Have you guys seen LaplacesDemon for R? They seem to have implemented a lot of samplers: http://www.inside-r.org/packages/cran/LaplacesDemon/docs/LaplacesDemon",
  "unread": false,
  "urls": [
   {
    "url": "http://www.inside-r.org/packages/cran/LaplacesDemon/docs/LaplacesDemon"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/jpiabrantes",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2369107?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2369107?v=3&s=60",
   "displayName": "jpiabrantes",
   "gv": "3",
   "id": "55620c5715522ed4b3e0e2cb",
   "url": "/jpiabrantes",
   "username": "jpiabrantes"
  },
  "html": "can anyone have a look at: <a href=\"http://stackoverflow.com/questions/30426216/using-theano-shared-variables-with-pymc3\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://stackoverflow.com/questions/30426216/using-theano-shared-variables-with-pymc3</a>",
  "id": "55620c7219b9da45151a48c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-05-24T17:37:54.154Z",
  "text": "can anyone have a look at: http://stackoverflow.com/questions/30426216/using-theano-shared-variables-with-pymc3",
  "unread": false,
  "urls": [
   {
    "url": "http://stackoverflow.com/questions/30426216/using-theano-shared-variables-with-pymc3"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/jpiabrantes",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2369107?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2369107?v=3&s=60",
   "displayName": "jpiabrantes",
   "gv": "3",
   "id": "55620c5715522ed4b3e0e2cb",
   "url": "/jpiabrantes",
   "username": "jpiabrantes"
  },
  "html": "I never saw any example of using PyMC3 with shared theano variables",
  "id": "55620c843715cd9539a95d50",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-05-24T17:38:12.523Z",
  "text": "I never saw any example of using PyMC3 with shared theano variables",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/jsalvatier",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/270513?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/270513?v=3&s=60",
   "displayName": "John Salvatier",
   "gv": "3",
   "id": "5419c8f9163965c9bc20529d",
   "url": "/jsalvatier",
   "username": "jsalvatier",
   "v": 3
  },
  "html": "Done. ",
  "id": "556219773715cd9539a95e6c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-05-24T18:33:27.043Z",
  "text": "Done. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/shoyer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1217238?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1217238?v=4&s=60",
   "displayName": "Stephan Hoyer",
   "gv": "4",
   "id": "542ddae7163965c9bc20840d",
   "url": "/shoyer",
   "username": "shoyer",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jsalvatier\" class=\"mention\">@jsalvatier</span> not sure exactly when I\u2019ll have the time/opportunity, but yes, in the abstract I am interested in helping on gaussian processes \u2014 it certainly  would be very useful for me",
  "id": "55625c8e19b9da45151a4e47",
  "issues": [],
  "mentions": [
   {
    "screenName": "jsalvatier",
    "userId": "5419c8f9163965c9bc20529d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2015-05-24T23:19:42.135Z",
  "text": "@jsalvatier not sure exactly when I\u2019ll have the time/opportunity, but yes, in the abstract I am interested in helping on gaussian processes \u2014 it certainly  would be very useful for me",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/jsalvatier",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/270513?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/270513?v=3&s=60",
   "displayName": "John Salvatier",
   "gv": "3",
   "id": "5419c8f9163965c9bc20529d",
   "url": "/jsalvatier",
   "username": "jsalvatier",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"shoyer\" class=\"mention\">@shoyer</span> I&#39;m probably getting started on it soon, so I&#39;ll probably ping you to do a review. What are your main use cases?",
  "id": "5564cc98dacb05b33949fffd",
  "issues": [],
  "mentions": [
   {
    "screenName": "shoyer",
    "userId": "542ddae7163965c9bc20840d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2015-05-26T19:42:16.746Z",
  "text": "@shoyer I'm probably getting started on it soon, so I'll probably ping you to do a review. What are your main use cases?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/shoyer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1217238?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1217238?v=4&s=60",
   "displayName": "Stephan Hoyer",
   "gv": "4",
   "id": "542ddae7163965c9bc20840d",
   "url": "/shoyer",
   "username": "shoyer",
   "v": 7
  },
  "html": "spatio-temporal statistics",
  "id": "5564ccb9dacb05b3394a0004",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-05-26T19:42:49.769Z",
  "text": "spatio-temporal statistics",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/shoyer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1217238?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1217238?v=4&s=60",
   "displayName": "Stephan Hoyer",
   "gv": "4",
   "id": "542ddae7163965c9bc20840d",
   "url": "/shoyer",
   "username": "shoyer",
   "v": 7
  },
  "html": "things like kriging (if that name means anything to you)",
  "id": "5564ccda1d1bf91146cb7653",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-05-26T19:43:22.457Z",
  "text": "things like kriging (if that name means anything to you)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/jsalvatier",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/270513?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/270513?v=3&s=60",
   "displayName": "John Salvatier",
   "gv": "3",
   "id": "5419c8f9163965c9bc20529d",
   "url": "/jsalvatier",
   "username": "jsalvatier",
   "v": 3
  },
  "html": "Do you have anything you could point me to that seems typical. ",
  "id": "5564ccdf4b06010f4607e832",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-05-26T19:43:27.433Z",
  "text": "Do you have anything you could point me to that seems typical. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/jsalvatier",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/270513?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/270513?v=3&s=60",
   "displayName": "John Salvatier",
   "gv": "3",
   "id": "5419c8f9163965c9bc20529d",
   "url": "/jsalvatier",
   "username": "jsalvatier",
   "v": 3
  },
  "html": "I&#39;ve read about kriging. Never done it before though. ",
  "id": "5564ccf11d1bf91146cb7658",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-05-26T19:43:45.651Z",
  "text": "I've read about kriging. Never done it before though. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/shoyer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1217238?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1217238?v=4&s=60",
   "displayName": "Stephan Hoyer",
   "gv": "4",
   "id": "542ddae7163965c9bc20840d",
   "url": "/shoyer",
   "username": "shoyer",
   "v": 7
  },
  "html": "this is a nice 1D example of something we might do with a Gaussian process: <a href=\"http://dan.iel.fm/george/current/user/hyper/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://dan.iel.fm/george/current/user/hyper/</a>",
  "id": "5564cd171d1bf91146cb765f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-05-26T19:44:23.961Z",
  "text": "this is a nice 1D example of something we might do with a Gaussian process: http://dan.iel.fm/george/current/user/hyper/",
  "unread": false,
  "urls": [
   {
    "url": "http://dan.iel.fm/george/current/user/hyper/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/jsalvatier",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/270513?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/270513?v=3&s=60",
   "displayName": "John Salvatier",
   "gv": "3",
   "id": "5419c8f9163965c9bc20529d",
   "url": "/jsalvatier",
   "username": "jsalvatier",
   "v": 3
  },
  "html": "That looks great, thanks. ",
  "id": "5564cd638f5532b4396ace9b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-05-26T19:45:39.202Z",
  "text": "That looks great, thanks. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/shoyer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1217238?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1217238?v=4&s=60",
   "displayName": "Stephan Hoyer",
   "gv": "4",
   "id": "542ddae7163965c9bc20840d",
   "url": "/shoyer",
   "username": "shoyer",
   "v": 7
  },
  "html": "kriging is usually 2D \u2014 the common use case would be interpolation",
  "id": "5564cd964b06010f4607e847",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-05-26T19:46:30.692Z",
  "text": "kriging is usually 2D \u2014 the common use case would be interpolation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/shoyer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1217238?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1217238?v=4&s=60",
   "displayName": "Stephan Hoyer",
   "gv": "4",
   "id": "542ddae7163965c9bc20840d",
   "url": "/shoyer",
   "username": "shoyer",
   "v": 7
  },
  "html": "again, supply the kernel structure and priors for each kernel parameter",
  "id": "5564cdac4b06010f4607e84c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-05-26T19:46:52.013Z",
  "text": "again, supply the kernel structure and priors for each kernel parameter",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/shoyer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1217238?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1217238?v=4&s=60",
   "displayName": "Stephan Hoyer",
   "gv": "4",
   "id": "542ddae7163965c9bc20840d",
   "url": "/shoyer",
   "username": "shoyer",
   "v": 7
  },
  "html": "the trick is that you can get the posterior distributions for the gaussian process analytically",
  "id": "5564cddbdacb05b3394a001e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-05-26T19:47:39.090Z",
  "text": "the trick is that you can get the posterior distributions for the gaussian process analytically",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/shoyer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1217238?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1217238?v=4&s=60",
   "displayName": "Stephan Hoyer",
   "gv": "4",
   "id": "542ddae7163965c9bc20840d",
   "url": "/shoyer",
   "username": "shoyer",
   "v": 7
  },
  "html": "but basically it\u2019s just the standard 2D gaussian process regression",
  "id": "5564ce1b81ef8bdf3cf107a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-05-26T19:48:43.824Z",
  "text": "but basically it\u2019s just the standard 2D gaussian process regression",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "There are several good examples of GPs in the PyMC 2 examples folder (gp subfolder)",
  "id": "5564dde0dacb05b3394a0281",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-05-26T20:56:00.929Z",
  "text": "There are several good examples of GPs in the PyMC 2 examples folder (gp subfolder)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/mattgeballe",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/727375?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/727375?v=4&s=60",
   "displayName": "Matt Geballe",
   "gv": "4",
   "id": "5432d3a9163965c9bc20936c",
   "url": "/mattgeballe",
   "username": "mattgeballe",
   "v": 3
  },
  "html": "I\u2019ve been exploring kriging and GPs some over a few months.  They seem mathematically extremely similar, most differences seem to be what inputs are often used and how covariance function is observed/fit.",
  "id": "5564e46181ef8bdf3cf10b1e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-05-26T21:23:45.638Z",
  "text": "I\u2019ve been exploring kriging and GPs some over a few months.  They seem mathematically extremely similar, most differences seem to be what inputs are often used and how covariance function is observed/fit.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/mattgeballe",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/727375?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/727375?v=4&s=60",
   "displayName": "Matt Geballe",
   "gv": "4",
   "id": "5432d3a9163965c9bc20936c",
   "url": "/mattgeballe",
   "username": "mattgeballe",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> has some good introductions to GPs in some of his teaching material on GitHub.  I found these useful as well:<br><a href=\"http://connor-johnson.com/2014/03/20/simple-kriging-in-python/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://connor-johnson.com/2014/03/20/simple-kriging-in-python/</a><br><a href=\"http://austinrochford.com/posts/2014-03-23-bayesian-nonparamtric-regression-gp.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://austinrochford.com/posts/2014-03-23-bayesian-nonparamtric-regression-gp.html</a>",
  "id": "5564e4a1220dcade3c4d609a",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2015-05-26T21:24:49.433Z",
  "text": "@fonnesbeck has some good introductions to GPs in some of his teaching material on GitHub.  I found these useful as well:\nhttp://connor-johnson.com/2014/03/20/simple-kriging-in-python/\nhttp://austinrochford.com/posts/2014-03-23-bayesian-nonparamtric-regression-gp.html",
  "unread": false,
  "urls": [
   {
    "url": "http://connor-johnson.com/2014/03/20/simple-kriging-in-python/"
   },
   {
    "url": "http://austinrochford.com/posts/2014-03-23-bayesian-nonparamtric-regression-gp.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jdfreder\" class=\"mention\">@jdfreder</span> any suggestions on how to &quot;develop&quot; on these extensions? Especially with coffeescript-in-the-middle?",
  "id": "5564e4ccdacb05b3394a0372",
  "issues": [],
  "mentions": [
   {
    "screenName": "jdfreder",
    "userId": "52f12fef5e986b0712ef5660",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2015-05-26T21:25:32.490Z",
  "text": "@jdfreder any suggestions on how to \"develop\" on these extensions? Especially with coffeescript-in-the-middle?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "I&#39;m currently running my own solution which allows me to have coffeescript in files or in cells, with full source maps and everything, and the files live where the python library lives, but the js code is &quot;display_html&quot;ed into the page.",
  "id": "5564e509dacb05b3394a037c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-05-26T21:26:33.934Z",
  "text": "I'm currently running my own solution which allows me to have coffeescript in files or in cells, with full source maps and everything, and the files live where the python library lives, but the js code is \"display_html\"ed into the page.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/jdfreder",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3292874?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3292874?v=3&s=60",
   "displayName": "Jonathan Frederic",
   "gv": "3",
   "id": "52f12fef5e986b0712ef5660",
   "url": "/jdfreder",
   "username": "jdfreder",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"akloster\" class=\"mention\">@akloster</span> with cofferscript in the middle, I&#39;d use gulp and gulp&#39;s &#39;watch&#39; feature.  Using jupyter-pip to <code>pip install -e .</code> will symlink the JS.  But you don&#39;t need jupyter-pip for that, you can use the --symlink option of install-nbextension.",
  "id": "5564ea1f8f5532b4396ad295",
  "issues": [],
  "mentions": [
   {
    "screenName": "akloster",
    "userId": "54317aec163965c9bc208ec9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2015-05-26T21:48:15.288Z",
  "text": "@akloster with cofferscript in the middle, I'd use gulp and gulp's 'watch' feature.  Using jupyter-pip to `pip install -e .` will symlink the JS.  But you don't need jupyter-pip for that, you can use the --symlink option of install-nbextension.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/jdfreder",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3292874?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3292874?v=3&s=60",
   "displayName": "Jonathan Frederic",
   "gv": "3",
   "id": "52f12fef5e986b0712ef5660",
   "url": "/jdfreder",
   "username": "jdfreder",
   "v": 4
  },
  "html": "Oh, and get used to working in an &#39;incognito&#39; or &#39;private tab&#39;, or install a handy dump cache and reload plugin.  I use &quot;Clear Cache&quot; for Chrome.",
  "id": "5564eac9dacb05b3394a03fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2015-05-26T21:51:05.778Z",
  "text": "Oh, and get used to working in an 'incognito' or 'private tab', or install a handy dump cache and reload plugin.  I use \"Clear Cache\" for Chrome.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/jdfreder",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3292874?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3292874?v=3&s=60",
   "displayName": "Jonathan Frederic",
   "gv": "3",
   "id": "52f12fef5e986b0712ef5660",
   "url": "/jdfreder",
   "username": "jdfreder",
   "v": 4
  },
  "html": "One last thing, you&#39;ll want to run a copy of the notebook that&#39;s installed from source, so you can add print&amp;console.log statements to the message in/out methods of widget.py and widget.js.",
  "id": "5564eb15220dcade3c4d6132",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2015-05-26T21:52:21.084Z",
  "text": "One last thing, you'll want to run a copy of the notebook that's installed from source, so you can add print&console.log statements to the message in/out methods of widget.py and widget.js.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "sorry wrong channel",
  "id": "55654c8d1d1bf91146cb812f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-05-27T04:48:13.749Z",
  "text": "sorry wrong channel",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/MashallAryan1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10347415?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10347415?v=3&s=60",
   "displayName": "MashallAryan1",
   "gv": "3",
   "id": "54a26231db8155e6700e3e32",
   "url": "/MashallAryan1",
   "username": "MashallAryan1",
   "v": 3
  },
  "html": "Is there a solution to this problem:  <a href=\"http://stackoverflow.com/q/30496978/4430895\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://stackoverflow.com/q/30496978/4430895</a>   . unsuccessfully attempted to do it using theano.shared. ",
  "id": "5566967b3be5887671992b6c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-05-28T04:15:55.669Z",
  "text": "Is there a solution to this problem:  http://stackoverflow.com/q/30496978/4430895   . unsuccessfully attempted to do it using theano.shared. ",
  "unread": false,
  "urls": [
   {
    "url": "http://stackoverflow.com/q/30496978/4430895"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "I&#39;ve got a strange/funny error...before I paste the code: any reason why a Bernoulli variable would take values like 2?",
  "id": "5568b2818d1a52c22e86b58d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-05-29T18:40:01.110Z",
  "text": "I've got a strange/funny error...before I paste the code: any reason why a Bernoulli variable would take values like 2?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "Here&#39;s the code: <a href=\"https://dpaste.de/sc22\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://dpaste.de/sc22</a>  I&#39;m probably doing something very wrong....",
  "id": "5568b39fa891bec12ef4d1f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-05-29T18:44:47.046Z",
  "text": "Here's the code: https://dpaste.de/sc22  I'm probably doing something very wrong....",
  "unread": false,
  "urls": [
   {
    "url": "https://dpaste.de/sc22"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "output contains negative numbers",
  "id": "5568b3bf9f3a9b7b0609e790",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-05-29T18:45:19.025Z",
  "text": "output contains negative numbers",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "That&#39;s bizarre. It appears that Bernoulli is unconstrained. I will push a fix this afternoon.",
  "id": "5568bbf7777c17d06a1340a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-05-29T19:20:23.316Z",
  "text": "That's bizarre. It appears that Bernoulli is unconstrained. I will push a fix this afternoon.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "See if the <code>bernoulli</code> branch works for you.",
  "id": "5568bee9463d0c7c066d61f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-05-29T19:32:57.517Z",
  "text": "See if the `bernoulli` branch works for you.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "I&#39;ve started a PyMC development wish list page: <a href=\"https://github.com/pymc-devs/pymc3/wiki/PyMC-3-Wish-List\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/wiki/PyMC-3-Wish-List</a>",
  "id": "5568c1a29f3a9b7b0609e950",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-05-29T19:44:34.997Z",
  "text": "I've started a PyMC development wish list page: https://github.com/pymc-devs/pymc3/wiki/PyMC-3-Wish-List",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/wiki/PyMC-3-Wish-List"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "This was converted from an old list a few years ago. I&#39;d like to use the best ideas here to help support funding for PyMC development through grant applications, so please go ahead and add/edit ideas. Think big!",
  "id": "5568c1e005c872ce6ac73d0d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-05-29T19:45:36.915Z",
  "text": "This was converted from an old list a few years ago. I'd like to use the best ideas here to help support funding for PyMC development through grant applications, so please go ahead and add/edit ideas. Think big!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "thanks for the quick fix, I&#39;ll try it later!",
  "id": "556a0c2705c872ce6ac74d46",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-05-30T19:14:47.109Z",
  "text": "thanks for the quick fix, I'll try it later!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "regarding database support, maybe odo and especially bcolz may be a good idea. Bcolz can keep columns of numbers in memory or on disk, in a chunked, compressed format, but is still very fast. But due to the chunking it can append a lot faster, and you don&#39;t need to reserve all the trace at once. It would also mean less memory consumption with huge traces...",
  "id": "556a10a105c872ce6ac74da8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-05-30T19:33:53.167Z",
  "text": "regarding database support, maybe odo and especially bcolz may be a good idea. Bcolz can keep columns of numbers in memory or on disk, in a chunked, compressed format, but is still very fast. But due to the chunking it can append a lot faster, and you don't need to reserve all the trace at once. It would also mean less memory consumption with huge traces...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "and just for reference, is there a distribution for discrete value tables like (0: 0.25, 1: 0.3, 2:0.25, 4: 0.2)? I may have missed it but I think it&#39;s not in pymc3",
  "id": "556a12139f3a9b7b0609f959",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-05-30T19:40:03.861Z",
  "text": "and just for reference, is there a distribution for discrete value tables like (0: 0.25, 1: 0.3, 2:0.25, 4: 0.2)? I may have missed it but I think it's not in pymc3",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> the bernoulli branch works for me, thank you!",
  "id": "556a14a18d1a52c22e86c8b9",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-05-30T19:50:57.637Z",
  "text": "@fonnesbeck the bernoulli branch works for me, thank you!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"akloster\" class=\"mention\">@akloster</span> that sounds like a <code>Categorical</code>, unless I am misunderstanding you.",
  "id": "556a1609a891bec12ef4e47f",
  "issues": [],
  "mentions": [
   {
    "screenName": "akloster",
    "userId": "54317aec163965c9bc208ec9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-05-30T19:56:57.640Z",
  "text": "@akloster that sounds like a `Categorical`, unless I am misunderstanding you.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "... and thanks for editing the wiki!",
  "id": "556a163fa891bec12ef4e484",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-05-30T19:57:51.209Z",
  "text": "... and thanks for editing the wiki!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "no problem",
  "id": "556a1648463d0c7c066d7326",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-05-30T19:58:00.123Z",
  "text": "no problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> like pm.Categorical(&quot;n_siblings&quot;, np.array([0.5,0.25,0.2,0.5])) ?",
  "id": "556a16e08d1a52c22e86c8e7",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-05-30T20:00:32.411Z",
  "text": "@fonnesbeck like pm.Categorical(\"n_siblings\", np.array([0.5,0.25,0.2,0.5])) ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "the problem is I am getting an error there",
  "id": "556a16ee9f3a9b7b0609f9cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-05-30T20:00:46.817Z",
  "text": "the problem is I am getting an error there",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "and sorry, the last value must be 0.05",
  "id": "556a176a05c872ce6ac74e3f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-05-30T20:02:50.335Z",
  "text": "and sorry, the last value must be 0.05",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "<a href=\"http://pastebin.com/rxzXxeEs\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://pastebin.com/rxzXxeEs</a> and the error: <a href=\"http://pastebin.com/VE7t9yj1\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://pastebin.com/VE7t9yj1</a>",
  "id": "556a17ec463d0c7c066d733c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-05-30T20:05:00.790Z",
  "text": "http://pastebin.com/rxzXxeEs and the error: http://pastebin.com/VE7t9yj1",
  "unread": false,
  "urls": [
   {
    "url": "http://pastebin.com/rxzXxeEs"
   },
   {
    "url": "http://pastebin.com/VE7t9yj1"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "and to me it doesn&#39;t really feel categorical, I&#39;m trying to model the probabilities of several numbers of calves inside one cow, so these are ordered integers, and I only care about 0 to 4",
  "id": "556a18829f3a9b7b0609f9ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-05-30T20:07:30.504Z",
  "text": "and to me it doesn't really feel categorical, I'm trying to model the probabilities of several numbers of calves inside one cow, so these are ordered integers, and I only care about 0 to 4",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "I think Categorical is correct here (you could use a <code>DiscreteUniform</code> I suppose. It does expect a simplex for p. ",
  "id": "556a1a14463d0c7c066d7374",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-05-30T20:14:12.736Z",
  "text": "I think Categorical is correct here (you could use a `DiscreteUniform` I suppose. It does expect a simplex for p. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "I have found a bug in Categorical though -- for some reason the name (<code>siblings</code>) is getting passed as the value to <code>logp</code>! ",
  "id": "556a1a368d1a52c22e86c941",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-05-30T20:14:46.847Z",
  "text": "I have found a bug in Categorical though -- for some reason the name (`siblings`) is getting passed as the value to `logp`! ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "DiscreteUniform only has one p, but the probabilities for the different numbers are different",
  "id": "556a1a678d1a52c22e86c946",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-05-30T20:15:35.338Z",
  "text": "DiscreteUniform only has one p, but the probabilities for the different numbers are different",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/akloster",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/171319?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/171319?v=4&s=60",
   "displayName": "Andreas Klostermann",
   "gv": "4",
   "id": "54317aec163965c9bc208ec9",
   "url": "/akloster",
   "username": "akloster",
   "v": 10
  },
  "html": "ok ;-)",
  "id": "556a1ac68d1a52c22e86c951",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-05-30T20:17:10.479Z",
  "text": "ok ;-)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Check out the <code>categorical_fix</code> branch. That should do it. ",
  "id": "556a22e49f3a9b7b0609fafb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-05-30T20:51:48.066Z",
  "text": "Check out the `categorical_fix` branch. That should do it. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/MCGallaspy",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8888020?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8888020?v=3&s=60",
   "displayName": "Michael Gallaspy",
   "gv": "3",
   "id": "5583a8ee15522ed4b3e22378",
   "url": "/MCGallaspy",
   "username": "MCGallaspy",
   "v": 2
  },
  "html": "Howdy! I see pymc3 is known to work on python 3.3, but are there any known issues with 3.4?",
  "id": "5583a90f6f7465873a35f517",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-06-19T05:30:55.822Z",
  "text": "Howdy! I see pymc3 is known to work on python 3.3, but are there any known issues with 3.4?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/MCGallaspy",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8888020?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8888020?v=3&s=60",
   "displayName": "Michael Gallaspy",
   "gv": "3",
   "id": "5583a8ee15522ed4b3e22378",
   "url": "/MCGallaspy",
   "username": "MCGallaspy",
   "v": 2
  },
  "html": "Actually, there&#39;s an inconsistency between readme.md and the docs here; the latter claims compatibility with python 3.4",
  "id": "5583aa19bb2c3e7c1586931b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-06-19T05:35:21.954Z",
  "text": "Actually, there's an inconsistency between readme.md and the docs here; the latter claims compatibility with python 3.4",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Definitely works on 3.4. That&#39;s the only Python version I use. ",
  "id": "558404bb6f7465873a35fcbe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-06-19T12:02:03.191Z",
  "text": "Definitely works on 3.4. That's the only Python version I use. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/mcleonard",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1200974?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1200974?v=3&s=60",
   "displayName": "Mat Leonard",
   "gv": "3",
   "id": "5584bd2315522ed4b3e22fc8",
   "url": "/mcleonard",
   "username": "mcleonard"
  },
  "html": "Hi hi hi. I have a question about working with likelihood functions. I&#39;m calculating the likelihood function for a inhomogeneous poisson process. So, P(N|lam(t)) = exp(-m(t)) * prod(lam(t_i)). Is it possible to implement this with pymc? Maybe a <code>DensityDist</code> but I&#39;m not sure how to set the logp.",
  "id": "5584be78f207aa853a8c1625",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2015-06-20T01:14:32.829Z",
  "text": "Hi hi hi. I have a question about working with likelihood functions. I'm calculating the likelihood function for a inhomogeneous poisson process. So, P(N|lam(t)) = exp(-m(t)) * prod(lam(t_i)). Is it possible to implement this with pymc? Maybe a `DensityDist` but I'm not sure how to set the logp.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-06-20T01:29:01.227Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/mcleonard",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1200974?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1200974?v=3&s=60",
   "displayName": "Mat Leonard",
   "gv": "3",
   "id": "5584bd2315522ed4b3e22fc8",
   "url": "/mcleonard",
   "username": "mcleonard"
  },
  "html": "For nice math... <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi><mo>(</mo><mi>N</mi><mi mathvariant=\"normal\">\u2223</mi><mi>\u03bb</mi><mo>(</mo><mi>t</mi><mo>)</mo><mo>)</mo><mo>=</mo><mi>exp</mi><mo>(</mo><mo>\u2212</mo><mi>m</mi><mo>(</mo><mi>t</mi><mo>)</mo><mo>)</mo><msubsup><mo>\u220f</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>N</mi></mrow></msubsup><mi>\u03bb</mi><mo>(</mo><msub><mi>t</mi><mi>n</mi></msub><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">p(N|\\lambda(t)) = \\exp(-m(t))\\prod _{n=1}^{N} \\lambda (t_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.8423309999999999em;\"></span><span class=\"strut bottom\" style=\"height:1.142341em;vertical-align:-0.30001em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">p</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord\">\u2223</span><span class=\"mord mathit\">\u03bb</span><span class=\"mopen\">(</span><span class=\"mord mathit\">t</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mrel\">=</span><span class=\"mop\">exp</span><span class=\"mopen\">(</span><span class=\"mord\">\u2212</span><span class=\"mord mathit\">m</span><span class=\"mopen\">(</span><span class=\"mord mathit\">t</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mop\"><span class=\"op-symbol small-op mop\" style=\"top:-0.0000050000000000050004em;\">\u220f</span><span class=\"vlist\"><span style=\"top:0.30001em;margin-left:0em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">n</span><span class=\"mrel\">=</span><span class=\"mord\">1</span></span></span></span><span style=\"top:-0.364em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mord mathit\">\u03bb</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathit\">t</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\">n</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mclose\">)</span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>t</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">t_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.61508em;\"></span><span class=\"strut bottom\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\">t</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\">n</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> is the time for each of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span></span></span></span> events.",
  "id": "5584c0ecbb2c3e7c1586acee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2015-06-20T01:25:00.505Z",
  "text": "For nice math... $$p(N|\\lambda(t)) = \\exp(-m(t))\\prod _{n=1}^{N} \\lambda (t_n)$$ where $$t_n$$ is the time for each of $$N$$ events.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "You just need to pass the function, perhaps using a lambda statement, as the argument to DensityDist. See the custom_dists example bundled with PyMC3. ",
  "id": "558672793039387b15780610",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-06-21T08:14:49.020Z",
  "text": "You just need to pass the function, perhaps using a lambda statement, as the argument to DensityDist. See the custom_dists example bundled with PyMC3. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/mcleonard",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1200974?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1200974?v=3&s=60",
   "displayName": "Mat Leonard",
   "gv": "3",
   "id": "5584bd2315522ed4b3e22fc8",
   "url": "/mcleonard",
   "username": "mcleonard"
  },
  "html": "<p>Hi. I&#39;m having problems figuring out how to implement the intensity function. The intensity is a sum of weighted radial basis functions. I have assigned priors over the parameters of the RBFs and the weights. I have defined the RBF, but how do I loop over it with the priors? I looked through the theano documentation and haven&#39;t found anything to help.</p><p>I wrote a notebook about it to give you an idea of what I&#39;m trying to do. Here:<br><a href=\"https://github.com/mcleonard/wm_paper/blob/master/Radial%20basis%20poisson%20process.ipynb\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/mcleonard/wm_paper/blob/master/Radial%20basis%20poisson%20process.ipynb</a>. Thanks for your help.</p>",
  "id": "5588ab691c3ba5ef5bff815d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-06-23T00:42:17.001Z",
  "text": "Hi. I'm having problems figuring out how to implement the intensity function. The intensity is a sum of weighted radial basis functions. I have assigned priors over the parameters of the RBFs and the weights. I have defined the RBF, but how do I loop over it with the priors? I looked through the theano documentation and haven't found anything to help.\n\nI wrote a notebook about it to give you an idea of what I'm trying to do. Here: \nhttps://github.com/mcleonard/wm_paper/blob/master/Radial%20basis%20poisson%20process.ipynb. Thanks for your help.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/mcleonard/wm_paper/blob/master/Radial%20basis%20poisson%20process.ipynb"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/mcleonard",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1200974?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1200974?v=3&s=60",
   "displayName": "Mat Leonard",
   "gv": "3",
   "id": "5584bd2315522ed4b3e22fc8",
   "url": "/mcleonard",
   "username": "mcleonard"
  },
  "html": "Got it working, through the use of theano&#39;s map function. If you are interested, here&#39;s the <a href=\"https://github.com/mcleonard/wm_paper/blob/master/Radial%20basis%20poisson%20process.ipynb\" rel=\"nofollow\" target=\"_blank\" class=\"link\">notebook</a>. Also, thanks for creating pymc3, it&#39;s wonderful. ",
  "id": "5588f2bddeac73ee5b861241",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-06-23T05:46:37.159Z",
  "text": "Got it working, through the use of theano's map function. If you are interested, here's the [notebook](https://github.com/mcleonard/wm_paper/blob/master/Radial%20basis%20poisson%20process.ipynb). Also, thanks for creating pymc3, it's wonderful. ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/mcleonard/wm_paper/blob/master/Radial%20basis%20poisson%20process.ipynb"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/MashallAryan1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10347415?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10347415?v=3&s=60",
   "displayName": "MashallAryan1",
   "gv": "3",
   "id": "54a26231db8155e6700e3e32",
   "url": "/MashallAryan1",
   "username": "MashallAryan1",
   "v": 3
  },
  "html": "Hi, could anybody take a look at this: <a href=\"http://stackoverflow.com/questions/31240611/why-pymc3-nuts-cant-perform-well-with-hierarchical-models\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://stackoverflow.com/questions/31240611/why-pymc3-nuts-cant-perform-well-with-hierarchical-models</a>",
  "id": "559a3fda8aaa54d756fb9211",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-07-06T08:44:10.447Z",
  "text": "Hi, could anybody take a look at this: http://stackoverflow.com/questions/31240611/why-pymc3-nuts-cant-perform-well-with-hierarchical-models",
  "unread": false,
  "urls": [
   {
    "url": "http://stackoverflow.com/questions/31240611/why-pymc3-nuts-cant-perform-well-with-hierarchical-models"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/MashallAryan1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10347415?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10347415?v=3&s=60",
   "displayName": "MashallAryan1",
   "gv": "3",
   "id": "54a26231db8155e6700e3e32",
   "url": "/MashallAryan1",
   "username": "MashallAryan1",
   "v": 3
  },
  "html": "sorry this is the edited version: <a href=\"http://stackoverflow.com/questions/31240611/pymc3s-nuts-cant-perform-well-with-my-hierarchical-model-for-bayesian-neural-n\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://stackoverflow.com/questions/31240611/pymc3s-nuts-cant-perform-well-with-my-hierarchical-model-for-bayesian-neural-n</a>",
  "id": "559a40081e35a1a03f1440ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-07-06T08:44:56.491Z",
  "text": "sorry this is the edited version: http://stackoverflow.com/questions/31240611/pymc3s-nuts-cant-perform-well-with-my-hierarchical-model-for-bayesian-neural-n",
  "unread": false,
  "urls": [
   {
    "url": "http://stackoverflow.com/questions/31240611/pymc3s-nuts-cant-perform-well-with-my-hierarchical-model-for-bayesian-neural-n"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/darribas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/417363?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/417363?v=4&s=60",
   "displayName": "Dani Arribas-Bel",
   "gv": "4",
   "id": "559d402c15522ed4b3e3a6a4",
   "url": "/darribas",
   "username": "darribas",
   "v": 24
  },
  "html": "<p>Hi, I&#39;m following <span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span>&#39;s excellent <a href=\"http://nbviewer.ipython.org/github/fonnesbeck/multilevel_modeling/blob/master/multilevel_modeling.ipynb?create=1\" rel=\"nofollow\" target=\"_blank\" class=\"link\">tutorial</a> on multilevel models with PyMC3. The model runs well without any problem.</p><p>I&#39;d like to get predictions for the entire sample, say an distribution of values for each observation. The tutorial shows how to the predictive distribution for a single observation:</p><pre><code class=\"python\"><span class=\"comment\"># St Louis county prediction</span>\nyhat_stl = Normal(<span class=\"string\">'yhat_stl'</span>, mu=a[<span class=\"number\">69</span>] + b, tau=tau_y)</code></pre><p>Is there any way to obtain that for every county at once? I&#39;ve tried:</p><pre><code class=\"python\">yhat_stl = Normal(<span class=\"string\">'yhat_all'</span>, mu=a + b, tau=tau_y)</code></pre><p>But it complains about the shape of some array (I suspect this is because <code>a</code> is not a float but a vector, but I don&#39;t know how to tell it to expect it.</p><p>Is there any way to do this directly and easily? Thank you very much!!!</p>",
  "id": "55affa0516ac52ff650f5885",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-07-22T20:16:05.611Z",
  "text": "Hi, I'm following @fonnesbeck's excellent [tutorial](http://nbviewer.ipython.org/github/fonnesbeck/multilevel_modeling/blob/master/multilevel_modeling.ipynb?create=1) on multilevel models with PyMC3. The model runs well without any problem.\n\nI'd like to get predictions for the entire sample, say an distribution of values for each observation. The tutorial shows how to the predictive distribution for a single observation:\n\n```python\n# St Louis county prediction\nyhat_stl = Normal('yhat_stl', mu=a[69] + b, tau=tau_y)\n```\n\nIs there any way to obtain that for every county at once? I've tried:\n\n```python\nyhat_stl = Normal('yhat_all', mu=a + b, tau=tau_y)\n```\n\nBut it complains about the shape of some array (I suspect this is because `a` is not a float but a vector, but I don't know how to tell it to expect it.\n\nIs there any way to do this directly and easily? Thank you very much!!!\n",
  "unread": false,
  "urls": [
   {
    "url": "http://nbviewer.ipython.org/github/fonnesbeck/multilevel_modeling/blob/master/multilevel_modeling.ipynb?create=1"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/darribas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/417363?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/417363?v=4&s=60",
   "displayName": "Dani Arribas-Bel",
   "gv": "4",
   "id": "559d402c15522ed4b3e3a6a4",
   "url": "/darribas",
   "username": "darribas",
   "v": 24
  },
  "html": "[If you think I should post this elsewhere let me know, I&#39;ll be happy to move it]",
  "id": "55affb664fdc50987c7388f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-07-22T20:21:58.537Z",
  "text": "[If you think I should post this elsewhere let me know, I'll be happy to move it]",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"darribas\" class=\"mention\">@darribas</span> If the node is not scalar, you need to provide it with a <code>shape</code> argument.",
  "id": "55b0155b4fdc50987c738d7d",
  "issues": [],
  "mentions": [
   {
    "screenName": "darribas",
    "userId": "559d402c15522ed4b3e3a6a4",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-07-22T22:12:43.687Z",
  "text": "@darribas If the node is not scalar, you need to provide it with a `shape` argument.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/darribas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/417363?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/417363?v=4&s=60",
   "displayName": "Dani Arribas-Bel",
   "gv": "4",
   "id": "559d402c15522ed4b3e3a6a4",
   "url": "/darribas",
   "username": "darribas",
   "v": 24
  },
  "html": "Thank you very much, I just tried that and it returns samples of predicted vectors, which is exactly what I was hoping for.",
  "id": "55b0216516ac52ff650f5ef6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-07-22T23:04:05.200Z",
  "text": "Thank you very much, I just tried that and it returns samples of predicted vectors, which is exactly what I was hoping for.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/jsw-fnal",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1820733?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1820733?v=3&s=60",
   "displayName": "Jon Wilson",
   "gv": "3",
   "id": "54d2a36adb8155e6700f754b",
   "url": "/jsw-fnal",
   "username": "jsw-fnal",
   "v": 1
  },
  "html": "With pymc 2.4, I sampled from a model with an HDF5 backend.  Then later, I load that backend.  I can access the traces with no trouble.  But I also need the value of <code>logp</code> at each step in the chain.  Since that is not tallied, I ask the <code>pymc.MCMC</code> object to <code>remember</code> each step in the trace, and then extract <code>logp</code>.  With the <code>ram</code> backend, this is reasonably quick.  With the HDF5 backend restored from save, each call to <code>remember</code> takes on the order of 6 seconds.  This is prohibitively slow.  So, is there a way to either (a) make <code>remember</code> go faster or (b) tally the value of <code>logp</code>?",
  "id": "55b8ee115bc8dc8874423114",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-07-29T15:15:29.236Z",
  "text": "With pymc 2.4, I sampled from a model with an HDF5 backend.  Then later, I load that backend.  I can access the traces with no trouble.  But I also need the value of `logp` at each step in the chain.  Since that is not tallied, I ask the `pymc.MCMC` object to `remember` each step in the trace, and then extract `logp`.  With the `ram` backend, this is reasonably quick.  With the HDF5 backend restored from save, each call to `remember` takes on the order of 6 seconds.  This is prohibitively slow.  So, is there a way to either (a) make `remember` go faster or (b) tally the value of `logp`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "You can keep track of the deviance by passing the <code>calc_deviance=True</code> flag to <code>MCMC</code>. That should give you what you need, no?",
  "id": "55b8fef8b49857ca223850b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-07-29T16:27:36.196Z",
  "text": "You can keep track of the deviance by passing the `calc_deviance=True` flag to `MCMC`. That should give you what you need, no?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/jsw-fnal",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1820733?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1820733?v=3&s=60",
   "displayName": "Jon Wilson",
   "gv": "3",
   "id": "54d2a36adb8155e6700f754b",
   "url": "/jsw-fnal",
   "username": "jsw-fnal",
   "v": 1
  },
  "html": "yes.  That does seem to work just fine.  Thanks!",
  "id": "55b9057ac35e438c74fc7054",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-07-29T16:55:22.049Z",
  "text": "yes.  That does seem to work just fine.  Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/maedoc",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5189886?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5189886?v=4&s=60",
   "displayName": "marmaduke woodman",
   "gv": "4",
   "id": "54b7a868db8155e6700eb2ec",
   "url": "/maedoc",
   "username": "maedoc",
   "v": 11
  },
  "html": "hi, I&#39;m curious if pymc3 is currently practical for time series models? I&#39;ve currently coded up a large, hidden state dynamical systems model for Stan, but I&#39;d prefer a Python library. Are there serious performance differences (seeing as they use an autodiff algo to get gradient)?",
  "id": "55c1cb4968c869d67cf04bb3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2015-08-05T08:37:29.357Z",
  "text": "hi, I'm curious if pymc3 is currently practical for time series models? I've currently coded up a large, hidden state dynamical systems model for Stan, but I'd prefer a Python library. Are there serious performance differences (seeing as they use an autodiff algo to get gradient)?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jonathanng",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2832171?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2832171?v=4&s=60",
   "displayName": "JPN",
   "gv": "4",
   "id": "55b930380fc9f982beab71ce",
   "url": "/jonathanng",
   "username": "jonathanng",
   "v": 7
  },
  "html": "If I have questions about this library, is this the correct place to ask?",
  "id": "55db6dcd6ebe0cd61263fa05",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2015-08-24T19:17:33.014Z",
  "text": "If I have questions about this library, is this the correct place to ask?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jonathanng",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2832171?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2832171?v=4&s=60",
   "displayName": "JPN",
   "gv": "4",
   "id": "55b930380fc9f982beab71ce",
   "url": "/jonathanng",
   "username": "jonathanng",
   "v": 7
  },
  "html": "I&#39;m going through some old code...back when TransformedVar was being used.",
  "id": "55db6e0ba6bcd8894068bdb9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2015-08-24T19:18:35.577Z",
  "text": "I'm going through some old code...back when TransformedVar was being used.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jonathanng",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2832171?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2832171?v=4&s=60",
   "displayName": "JPN",
   "gv": "4",
   "id": "55b930380fc9f982beab71ce",
   "url": "/jonathanng",
   "username": "jonathanng",
   "v": 7
  },
  "html": "Trying to translate this code into the recent version.",
  "id": "55db6e20004c3e375ad087bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2015-08-24T19:18:56.481Z",
  "text": "Trying to translate this code into the recent version.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Here works, or Stack Overflow.",
  "id": "55dbbec436e894436a9ae5f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2015-08-25T01:03:00.432Z",
  "text": "Here works, or Stack Overflow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/recluze",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/289851?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/289851?v=4&s=60",
   "displayName": "Nauman ...",
   "gv": "4",
   "id": "55d197aa0fc9f982bead9f1b",
   "url": "/recluze",
   "username": "recluze",
   "v": 3
  },
  "html": "Hi, I want to start working with PyMC3 but I don&#39;t have much knowledge about bayesian inference. Can someone point me to some basic material please. (Searches usually lead to books and even though I have some ML background, they seem a little dense. So, looking for something at the basic level even if it&#39;s fast paced.) Thanks. ",
  "id": "55efe05e760979e727e93b17",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2015-09-09T07:31:42.521Z",
  "text": "Hi, I want to start working with PyMC3 but I don't have much knowledge about bayesian inference. Can someone point me to some basic material please. (Searches usually lead to books and even though I have some ML background, they seem a little dense. So, looking for something at the basic level even if it's fast paced.) Thanks. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "I would check out <a href=\"http://camdavidsonpilon.github.io/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">Probabilistic Programming and Bayesian Methods for Hackers</a>",
  "id": "55f02dc4532e5edc65554996",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2015-09-09T13:01:56.020Z",
  "text": "I would check out [Probabilistic Programming and Bayesian Methods for Hackers](http://camdavidsonpilon.github.io/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/)",
  "unread": false,
  "urls": [
   {
    "url": "http://camdavidsonpilon.github.io/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/recluze",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/289851?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/289851?v=4&s=60",
   "displayName": "Nauman ...",
   "gv": "4",
   "id": "55d197aa0fc9f982bead9f1b",
   "url": "/recluze",
   "username": "recluze",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> Thanks. Exactly what I was looking for ... ",
  "id": "55f03c47773a9de16f2d0ab7",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2015-09-09T14:03:51.635Z",
  "text": "@fonnesbeck Thanks. Exactly what I was looking for ... ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/MCGallaspy",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8888020?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8888020?v=3&s=60",
   "displayName": "Michael Gallaspy",
   "gv": "3",
   "id": "5583a8ee15522ed4b3e22378",
   "url": "/MCGallaspy",
   "username": "MCGallaspy",
   "v": 2
  },
  "html": "Hey, thanks for the work! You guys have nice docstrings for your distributions... but do you generate documentation from them? I can&#39;t find it",
  "id": "55f4b4ef9f29979b1b614fe2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2015-09-12T23:27:43.920Z",
  "text": "Hey, thanks for the work! You guys have nice docstrings for your distributions... but do you generate documentation from them? I can't find it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/MCGallaspy",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8888020?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8888020?v=3&s=60",
   "displayName": "Michael Gallaspy",
   "gv": "3",
   "id": "5583a8ee15522ed4b3e22378",
   "url": "/MCGallaspy",
   "username": "MCGallaspy",
   "v": 2
  },
  "html": "<a href=\"https://github.com/pymc-devs/pymc3/blob/master/pymc3/distributions/multivariate.py#L64\" rel=\"nofollow\" target=\"_blank\" class=\"link\">This</a> for instance smells like sphinx",
  "id": "55f4b60773ecb93f5cdce1d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2015-09-12T23:32:23.790Z",
  "text": "[This](https://github.com/pymc-devs/pymc3/blob/master/pymc3/distributions/multivariate.py#L64) for instance smells like sphinx",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/blob/master/pymc3/distributions/multivariate.py#L64"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "We auto-generated them for PyMC 2.x with Sphinx. Should probably do something similar with v.3.",
  "id": "55f57f7d75eaca4f038b103c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2015-09-13T13:51:57.860Z",
  "text": "We auto-generated them for PyMC 2.x with Sphinx. Should probably do something similar with v.3.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/recluze",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/289851?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/289851?v=4&s=60",
   "displayName": "Nauman ...",
   "gv": "4",
   "id": "55d197aa0fc9f982bead9f1b",
   "url": "/recluze",
   "username": "recluze",
   "v": 3
  },
  "html": "Hi, I&#39;ve created a <code>trace</code> object by sampling from a posterior (within the context of a <code>model</code>). Can I save it in a file somewhere so that I don&#39;t have to re-do the several hours long computation again every time I open my editor? ",
  "id": "55f6c620c588a0de6ede6066",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2015-09-14T13:05:36.714Z",
  "text": "Hi, I've created a `trace` object by sampling from a posterior (within the context of a `model`). Can I save it in a file somewhere so that I don't have to re-do the several hours long computation again every time I open my editor? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "You can use either a text or SQLite backend rather than the default RAM backend. Check the docs. ",
  "id": "55f6d6d7f5b168df6ebbb2cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2015-09-14T14:16:55.836Z",
  "text": "You can use either a text or SQLite backend rather than the default RAM backend. Check the docs. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/recluze",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/289851?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/289851?v=4&s=60",
   "displayName": "Nauman ...",
   "gv": "4",
   "id": "55d197aa0fc9f982bead9f1b",
   "url": "/recluze",
   "username": "recluze",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> Oops. Sorry, it&#39;s mentioned in the &quot;Getting Started&quot;. Just slipped my mind that they were called <code>backend</code>s ... Thanks for the pointer. ",
  "id": "55f6dec3c588a0de6ede65f3",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2015-09-14T14:50:43.799Z",
  "text": "@fonnesbeck Oops. Sorry, it's mentioned in the \"Getting Started\". Just slipped my mind that they were called `backend`s ... Thanks for the pointer. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/recluze",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/289851?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/289851?v=4&s=60",
   "displayName": "Nauman ...",
   "gv": "4",
   "id": "55d197aa0fc9f982bead9f1b",
   "url": "/recluze",
   "username": "recluze",
   "v": 3
  },
  "html": "I&#39;ve created a logistic regression model and have done sampling successfully (<a href=\"https://gist.github.com/recluze/460157afc6a7492555bb\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/recluze/460157afc6a7492555bb</a>) ... I&#39;m coming from traditional ML background, so, I&#39;m looking to see what the equivalence of <code>accuracy</code> would be in this model? How do I see how much uncertainty there is in prediction of <code>Y</code> and what the accuracy of the fitted parameters is? ",
  "id": "55fa42d4a2c7aa6b1086e8cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2015-09-17T04:34:28.014Z",
  "text": "I've created a logistic regression model and have done sampling successfully (https://gist.github.com/recluze/460157afc6a7492555bb) ... I'm coming from traditional ML background, so, I'm looking to see what the equivalence of `accuracy` would be in this model? How do I see how much uncertainty there is in prediction of `Y` and what the accuracy of the fitted parameters is? ",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/recluze/460157afc6a7492555bb"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "You can obtain posterior credible intervals by calling <code>summary()</code> on the nodes of interest. Similarly, you can sample from the posterior predictive distribution for any predictions you set up, and these will have posterior intervals as well. ",
  "id": "55fa9dc76f976dff036ee6d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2015-09-17T11:02:31.580Z",
  "text": "You can obtain posterior credible intervals by calling `summary()` on the nodes of interest. Similarly, you can sample from the posterior predictive distribution for any predictions you set up, and these will have posterior intervals as well. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-09-30T01:10:11.137Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/markdregan",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1952278?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1952278?v=3&s=60",
   "displayName": "Mark Regan",
   "gv": "3",
   "id": "560b34170fc9f982beb240b7",
   "url": "/markdregan",
   "username": "markdregan"
  },
  "html": "<p>Hi. Could I bother someone to have a look at this: <a href=\"http://stackoverflow.com/questions/32803865/negative-binomial-model-cannot-find-starting-position-to-sample\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://stackoverflow.com/questions/32803865/negative-binomial-model-cannot-find-starting-position-to-sample</a></p><p>It is a simple model that aims to estimate parameters of a negative binomial. However, it chokes on any data set that doesn&#39;t include a zero value. This used to work in PYMC3 but recently started giving errors.</p><pre><code>import pymc3 as pm\n\ndata = [<span class=\"number\">6.0</span>,<span class=\"number\">12.0</span>,<span class=\"number\">12.0</span>,<span class=\"number\">46.0</span>,<span class=\"number\">5.0</span>,<span class=\"number\">11.0</span>,<span class=\"number\">11.0</span>,<span class=\"number\">39.0</span>,<span class=\"number\">4.0</span>,<span class=\"number\">10.0</span>,<span class=\"number\">25.0</span>,<span class=\"number\">11.0</span>,<span class=\"number\">8.0</span>,<span class=\"number\">5.0</span>,<span class=\"number\">10.0</span>,<span class=\"number\">2.0</span>,<span class=\"number\">30.0</span>,<span class=\"number\">21.0</span>]\n\nwith pm.<span class=\"function\"><span class=\"title\">Model</span><span class=\"params\">()</span></span> as model:\n    alpha = pm.<span class=\"function\"><span class=\"title\">Uniform</span><span class=\"params\">(<span class=\"string\">'alpha'</span>, lower=<span class=\"number\">0</span>, upper=<span class=\"number\">100</span>)</span></span>\n    mu = pm.<span class=\"function\"><span class=\"title\">Uniform</span><span class=\"params\">(<span class=\"string\">'mu'</span>, lower=<span class=\"number\">0</span>, upper=<span class=\"number\">100</span>)</span></span>\n\n    y_pred = pm.<span class=\"function\"><span class=\"title\">NegativeBinomial</span><span class=\"params\">(<span class=\"string\">'y_pred'</span>, mu=mu, alpha=alpha)</span></span>\n\n    y_est = pm.NegativeBinomial(<span class=\"string\">'y_est'</span>, \n                                mu=mu, \n                                alpha=alpha, \n                                observed=data)\n\n    start = pm.<span class=\"function\"><span class=\"title\">find_MAP</span><span class=\"params\">()</span></span>\n\n    step = pm.<span class=\"function\"><span class=\"title\">Metropolis</span><span class=\"params\">()</span></span>\n    trace = pm.<span class=\"function\"><span class=\"title\">sample</span><span class=\"params\">(<span class=\"number\">20000</span>, step, start, progressbar=True)</span></span></code></pre>",
  "id": "560b3607552ed7913279eb1b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-09-30T01:08:23.849Z",
  "text": "Hi. Could I bother someone to have a look at this: http://stackoverflow.com/questions/32803865/negative-binomial-model-cannot-find-starting-position-to-sample\n\nIt is a simple model that aims to estimate parameters of a negative binomial. However, it chokes on any data set that doesn't include a zero value. This used to work in PYMC3 but recently started giving errors.\n\n    import pymc3 as pm\n\n    data = [6.0,12.0,12.0,46.0,5.0,11.0,11.0,39.0,4.0,10.0,25.0,11.0,8.0,5.0,10.0,2.0,30.0,21.0]\n\n    with pm.Model() as model:\n        alpha = pm.Uniform('alpha', lower=0, upper=100)\n        mu = pm.Uniform('mu', lower=0, upper=100)\n\n        y_pred = pm.NegativeBinomial('y_pred', mu=mu, alpha=alpha)\n\n        y_est = pm.NegativeBinomial('y_est', \n                                    mu=mu, \n                                    alpha=alpha, \n                                    observed=data)\n\n        start = pm.find_MAP()\n\n        step = pm.Metropolis()\n        trace = pm.sample(20000, step, start, progressbar=True)",
  "unread": false,
  "urls": [
   {
    "url": "http://stackoverflow.com/questions/32803865/negative-binomial-model-cannot-find-starting-position-to-sample"
   }
  ],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Does it work without <code>find_MAP</code>? It&#39;s not really necessary if you are just using metropolis. what version of Theano are you using?",
  "id": "560b49c7552ed7913279eccb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-30T02:32:39.195Z",
  "text": "Does it work without `find_MAP`? It's not really necessary if you are just using metropolis. what version of Theano are you using?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/markdregan",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1952278?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1952278?v=3&s=60",
   "displayName": "Mark Regan",
   "gv": "3",
   "id": "560b34170fc9f982beb240b7",
   "url": "/markdregan",
   "username": "markdregan"
  },
  "html": "Same error without using <code>find_MAP()</code>. Theano version: &#39;0.7.0.dev-RELEASE&#39;",
  "id": "560b4a0ef4b61c106fb2b755",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-30T02:33:50.982Z",
  "text": "Same error without using `find_MAP()`. Theano version: '0.7.0.dev-RELEASE'",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/markdregan",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1952278?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1952278?v=3&s=60",
   "displayName": "Mark Regan",
   "gv": "3",
   "id": "560b34170fc9f982beb240b7",
   "url": "/markdregan",
   "username": "markdregan"
  },
  "html": "<pre><code>pymc3.__version__ = <span class=\"string\">'3.0'</span>\ntheano.__version__ = <span class=\"string\">'0.7.0.dev-RELEASE'</span>\nnumpy.__version__ = <span class=\"string\">'1.8.0rc1'</span>\nPython <span class=\"number\">2.7</span>.<span class=\"number\">10</span></code></pre>I wonder if I should update python to more recent version.",
  "id": "560be9d0dfb3151302858370",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-30T13:55:28.747Z",
  "text": "    pymc3.__version__ = '3.0'\n    theano.__version__ = '0.7.0.dev-RELEASE'\n    numpy.__version__ = '1.8.0rc1'\n    Python 2.7.10\n\nI wonder if I should update python to more recent version.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/markdregan",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1952278?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1952278?v=3&s=60",
   "displayName": "Mark Regan",
   "gv": "3",
   "id": "560b34170fc9f982beb240b7",
   "url": "/markdregan",
   "username": "markdregan"
  },
  "html": "Upgraded to python 3.5 and same issue/error persists ",
  "id": "560c2f67081f3a9c044dac79",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-09-30T18:52:23.225Z",
  "text": "Upgraded to python 3.5 and same issue/error persists ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Are you on OS X, or another platform?",
  "id": "560c2f7d081f3a9c044dac80",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-09-30T18:52:45.959Z",
  "text": "Are you on OS X, or another platform?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/markdregan",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1952278?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1952278?v=3&s=60",
   "displayName": "Mark Regan",
   "gv": "3",
   "id": "560b34170fc9f982beb240b7",
   "url": "/markdregan",
   "username": "markdregan"
  },
  "html": "OSX",
  "id": "560c2f88081f3a9c044dac85",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-09-30T18:52:56.235Z",
  "text": "OSX",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/markdregan",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1952278?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1952278?v=3&s=60",
   "displayName": "Mark Regan",
   "gv": "3",
   "id": "560b34170fc9f982beb240b7",
   "url": "/markdregan",
   "username": "markdregan"
  },
  "html": "10.10.5",
  "id": "560c2f9ddfb315130285913f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-09-30T18:53:17.644Z",
  "text": "10.10.5",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-09-30T18:53:38.684Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "You could try updating your Theano to the GitHub master:<br><code>pip install -U git+git://github.com/Theano/Theano.git</code>",
  "id": "560c2fa4dfb3151302859141",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-09-30T18:53:24.207Z",
  "text": "You could try updating your Theano to the GitHub master: \n`pip install -U git+git://github.com/Theano/Theano.git`",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/markdregan",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1952278?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1952278?v=3&s=60",
   "displayName": "Mark Regan",
   "gv": "3",
   "id": "560b34170fc9f982beb240b7",
   "url": "/markdregan",
   "username": "markdregan"
  },
  "html": "I&#39;ll try this. Thanks Chris.",
  "id": "560c2fca081f3a9c044dac97",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-30T18:54:02.389Z",
  "text": "I'll try this. Thanks Chris.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Actually, I think I have reproduced this. Stay tuned.",
  "id": "560c3091552ed791327a0e32",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-09-30T18:57:21.982Z",
  "text": "Actually, I think I have reproduced this. Stay tuned.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Yep, that\u2019s a bug. Will create an issue.",
  "id": "560c3299081f3a9c044dad45",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-09-30T19:06:01.799Z",
  "text": "Yep, that\u2019s a bug. Will create an issue.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"842\" data-issue-repo=\"pymc-devs/pymc3\" class=\"issue\">pymc-devs/pymc3#842</span>",
  "id": "560c35c9552ed791327a0f73",
  "issues": [
   {
    "number": "842",
    "repo": "pymc-devs/pymc3"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-30T19:19:37.879Z",
  "text": "https://github.com/pymc-devs/pymc3/issues/842",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/markdregan",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1952278?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1952278?v=3&s=60",
   "displayName": "Mark Regan",
   "gv": "3",
   "id": "560b34170fc9f982beb240b7",
   "url": "/markdregan",
   "username": "markdregan"
  },
  "html": "Thanks for looking into this and filing the issue. I can do further testing if needed. I&#39;ll follow the issue thread.",
  "id": "560c3f81552ed791327a113a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-30T20:01:05.102Z",
  "text": "Thanks for looking into this and filing the issue. I can do further testing if needed. I'll follow the issue thread.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/slnovak",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/270691?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/270691?v=3&s=60",
   "displayName": "Stefan Novak",
   "gv": "3",
   "id": "5581a10115522ed4b3e20e5c",
   "url": "/slnovak",
   "username": "slnovak",
   "v": 2
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span>. Is it possible to observe a deterministic variable? I.e., <code>Deterministic(&#39;response&#39;, teano.tensor.dot(A, B), observed=data)</code>",
  "id": "560f0bf7bd0a2d242718b52f",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2015-10-02T22:57:59.155Z",
  "text": "Hi @fonnesbeck. Is it possible to observe a deterministic variable? I.e., `Deterministic('response', teano.tensor.dot(A, B), observed=data)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/slnovak",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/270691?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/270691?v=3&s=60",
   "displayName": "Stefan Novak",
   "gv": "3",
   "id": "5581a10115522ed4b3e20e5c",
   "url": "/slnovak",
   "username": "slnovak",
   "v": 2
  },
  "html": " /cc <span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> ",
  "id": "560f0d86ef36415027433870",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-10-02T23:04:38.796Z",
  "text": " /cc @twiecki ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/slnovak",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/270691?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/270691?v=3&s=60",
   "displayName": "Stefan Novak",
   "gv": "3",
   "id": "5581a10115522ed4b3e20e5c",
   "url": "/slnovak",
   "username": "slnovak",
   "v": 2
  },
  "html": "Ah -- I think I found out what I need to do. Create a custom distribution with the parameter <code>theta= teano.tensor.dot(A, B)</code>, define my own <code>logp</code> function, then attach <code>observed=data</code> to an instance. ",
  "id": "560f310df4b61c106fb3479b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-10-03T01:36:13.955Z",
  "text": "Ah -- I think I found out what I need to do. Create a custom distribution with the parameter `theta= teano.tensor.dot(A, B)`, define my own `logp` function, then attach `observed=data` to an instance. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "That is correct. A custom stochastic seems to be the way to go. Deterministics are simple transforms of parameters; they have no capacity for evaluating likelihoods. ",
  "id": "560f4082ce6e633c45182564",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-10-03T02:42:10.791Z",
  "text": "That is correct. A custom stochastic seems to be the way to go. Deterministics are simple transforms of parameters; they have no capacity for evaluating likelihoods. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/recluze",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/289851?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/289851?v=4&s=60",
   "displayName": "Nauman ...",
   "gv": "4",
   "id": "55d197aa0fc9f982bead9f1b",
   "url": "/recluze",
   "username": "recluze",
   "v": 3
  },
  "html": "Hi, I am trying to understand posterior predictive checks and predictions. I&#39;ve gone through the tutorial on pymc3 site and based on that, I&#39;ve simplified code to get ppc from the <code>trace</code>. Can someone please verify that what I&#39;m doing is correct in terms of (a) getting the last few points from the trace instead of sampling through the whole collection and (b) overall flow. Relevant portions of code are in the gist here: <a href=\"https://gist.github.com/recluze/5051735efe3fc189b90d\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/recluze/5051735efe3fc189b90d</a> ",
  "id": "560ff362bd0a2d242718c494",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2015-10-03T15:25:22.635Z",
  "text": "Hi, I am trying to understand posterior predictive checks and predictions. I've gone through the tutorial on pymc3 site and based on that, I've simplified code to get ppc from the `trace`. Can someone please verify that what I'm doing is correct in terms of (a) getting the last few points from the trace instead of sampling through the whole collection and (b) overall flow. Relevant portions of code are in the gist here: https://gist.github.com/recluze/5051735efe3fc189b90d ",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/recluze/5051735efe3fc189b90d"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/slnovak",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/270691?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/270691?v=3&s=60",
   "displayName": "Stefan Novak",
   "gv": "3",
   "id": "5581a10115522ed4b3e20e5c",
   "url": "/slnovak",
   "username": "slnovak",
   "v": 2
  },
  "html": "Thanks for the response, <span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span>. If you get a chance, can you take a quick look at <a href=\"https://gist.github.com/slnovak/0edca1fda19eceb61ece?\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/slnovak/0edca1fda19eceb61ece?</a> I&#39;m having trouble running <code>find_MAP</code> to converge on a solution. I&#39;m not sure if my usage of <code>DensityDist</code> and <code>Deterministic</code> variables are valid.",
  "id": "5612dc4bce6e633c45187e51",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2015-10-05T20:23:39.262Z",
  "text": "Thanks for the response, @fonnesbeck. If you get a chance, can you take a quick look at https://gist.github.com/slnovak/0edca1fda19eceb61ece? I'm having trouble running `find_MAP` to converge on a solution. I'm not sure if my usage of `DensityDist` and `Deterministic` variables are valid.",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/slnovak/0edca1fda19eceb61ece?"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/slnovak",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/270691?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/270691?v=3&s=60",
   "displayName": "Stefan Novak",
   "gv": "3",
   "id": "5581a10115522ed4b3e20e5c",
   "url": "/slnovak",
   "username": "slnovak",
   "v": 2
  },
  "html": "<code>find_MAP</code> runs, but <code>start</code> appears to be non-informative (i.e., whatever the mean of the distribution is)",
  "id": "5612dc707e53d02c09cffe79",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2015-10-05T20:24:16.349Z",
  "text": "`find_MAP` runs, but `start` appears to be non-informative (i.e., whatever the mean of the distribution is)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/slnovak",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/270691?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/270691?v=3&s=60",
   "displayName": "Stefan Novak",
   "gv": "3",
   "id": "5581a10115522ed4b3e20e5c",
   "url": "/slnovak",
   "username": "slnovak",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"recluze\" class=\"mention\">@recluze</span> -- can you update your script with some data?",
  "id": "5612df46fd5c74d71413f798",
  "issues": [],
  "mentions": [
   {
    "screenName": "recluze",
    "userId": "55d197aa0fc9f982bead9f1b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2015-10-05T20:36:22.535Z",
  "text": "@recluze -- can you update your script with some data?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/slnovak",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/270691?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/270691?v=3&s=60",
   "displayName": "Stefan Novak",
   "gv": "3",
   "id": "5581a10115522ed4b3e20e5c",
   "url": "/slnovak",
   "username": "slnovak",
   "v": 2
  },
  "html": "Ah -- disregard my message. Apparently <code>T.prod</code> was causing issues.",
  "id": "5612fefdff22c70f6fac36c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2015-10-05T22:51:41.747Z",
  "text": "Ah -- disregard my message. Apparently `T.prod` was causing issues.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/recluze",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/289851?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/289851?v=4&s=60",
   "displayName": "Nauman ...",
   "gv": "4",
   "id": "55d197aa0fc9f982bead9f1b",
   "url": "/recluze",
   "username": "recluze",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"slnovak\" class=\"mention\">@slnovak</span> This is just a dummy script found here: <a href=\"https://github.com/pymc-devs/pymc3/blob/master/pymc3/examples/logistic.py\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/blob/master/pymc3/examples/logistic.py</a> ",
  "id": "5613473e261e77ba2dbadcd0",
  "issues": [],
  "mentions": [
   {
    "screenName": "slnovak",
    "userId": "5581a10115522ed4b3e20e5c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2015-10-06T03:59:58.184Z",
  "text": "@slnovak This is just a dummy script found here: https://github.com/pymc-devs/pymc3/blob/master/pymc3/examples/logistic.py ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/blob/master/pymc3/examples/logistic.py"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/recluze",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/289851?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/289851?v=4&s=60",
   "displayName": "Nauman ...",
   "gv": "4",
   "id": "55d197aa0fc9f982bead9f1b",
   "url": "/recluze",
   "username": "recluze",
   "v": 3
  },
  "html": "I only added lines 12--20 for the ppc ...",
  "id": "56134765ff22c70f6fac3d36",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2015-10-06T04:00:37.765Z",
  "text": "I only added lines 12--20 for the ppc ...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/slnovak",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/270691?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/270691?v=3&s=60",
   "displayName": "Stefan Novak",
   "gv": "3",
   "id": "5581a10115522ed4b3e20e5c",
   "url": "/slnovak",
   "username": "slnovak",
   "v": 2
  },
  "html": "If I want to make a <code>MvNormal</code> variable of size <code>MxN</code>, what should the dimension of <code>tau</code> be?",
  "id": "5614468576d984a358758be2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2015-10-06T22:09:09.848Z",
  "text": "If I want to make a `MvNormal` variable of size `MxN`, what should the dimension of `tau` be?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "For PyMC 3, this is an open question. In PyMC 2 you would create a list of MvNormals. There is <span data-link-type=\"issue\" data-issue=\"535\" data-issue-repo=\"pymc-devs/pymc3\" class=\"issue\">pymc-devs/pymc3#535</span> open for this. ",
  "id": "561abccd6dc64436714acdaf",
  "issues": [
   {
    "number": "535",
    "repo": "pymc-devs/pymc3"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-10-11T19:47:25.475Z",
  "text": "For PyMC 3, this is an open question. In PyMC 2 you would create a list of MvNormals. There is [an enhancement issue](https://github.com/pymc-devs/pymc3/issues/535) open for this. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/recluze",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/289851?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/289851?v=4&s=60",
   "displayName": "Nauman ...",
   "gv": "4",
   "id": "55d197aa0fc9f982bead9f1b",
   "url": "/recluze",
   "username": "recluze",
   "v": 3
  },
  "html": "How do I cite pymc3? Just the github repo or is there a paper that I can refer to? ",
  "id": "561f342faa8d9347692bc8c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-10-15T05:05:51.691Z",
  "text": "How do I cite pymc3? Just the github repo or is there a paper that I can refer to? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "We have a paper in review. There is a PyMC 2 paper published in the Journal of Statistical Software. ",
  "id": "561fd35f34cd85cd6d5c2f03",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-10-15T16:25:03.602Z",
  "text": "We have a paper in review. There is a PyMC 2 paper published in the Journal of Statistical Software. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/recluze",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/289851?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/289851?v=4&s=60",
   "displayName": "Nauman ...",
   "gv": "4",
   "id": "55d197aa0fc9f982bead9f1b",
   "url": "/recluze",
   "username": "recluze",
   "v": 3
  },
  "html": "Thanks. I don&#39;t think people cite that paper correctly. Scholar only shows 198 citations. I&#39;m sure it has been used a lot more than that in research. Maybe if you put &quot;how to cite&quot; somewhere more visible, it might help. ",
  "id": "562062f83d5f024c41761200",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-10-16T02:37:44.680Z",
  "text": "Thanks. I don't think people cite that paper correctly. Scholar only shows 198 citations. I'm sure it has been used a lot more than that in research. Maybe if you put \"how to cite\" somewhere more visible, it might help. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "A lot of folks don&#39;t mention the software they use, let alone cite it. ",
  "id": "56210e5a5de7adf44a33af7d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-10-16T14:48:58.575Z",
  "text": "A lot of folks don't mention the software they use, let alone cite it. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/recluze",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/289851?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/289851?v=4&s=60",
   "displayName": "Nauman ...",
   "gv": "4",
   "id": "55d197aa0fc9f982bead9f1b",
   "url": "/recluze",
   "username": "recluze",
   "v": 3
  },
  "html": "Yep, that&#39;s true. I&#39;ve been in the research &quot;game&quot; for a long time now. It&#39;s sad where things are going (for the most part). Anyway, thanks for such a great package. ",
  "id": "5621237a5560144738d646a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-10-16T16:19:06.949Z",
  "text": "Yep, that's true. I've been in the research \"game\" for a long time now. It's sad where things are going (for the most part). Anyway, thanks for such a great package. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"recluze\" class=\"mention\">@recluze</span> Here in the materials community we&#39;re latecomers to ML but at conferences/workshops I&#39;ve seen many young and old researchers who seem to get that developing software for research is a valuable contribution in its own right. I say this as someone whose dissertation will be about 2/3 software documentation and 1/3 domain application.",
  "id": "56250c952639469f2635a986",
  "issues": [],
  "mentions": [
   {
    "screenName": "recluze",
    "userId": "55d197aa0fc9f982bead9f1b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2015-10-19T15:30:29.821Z",
  "text": "@recluze Here in the materials community we're latecomers to ML but at conferences/workshops I've seen many young and old researchers who seem to get that developing software for research is a valuable contribution in its own right. I say this as someone whose dissertation will be about 2/3 software documentation and 1/3 domain application.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "And I think the situation with software citation is getting better, see, e.g., <a href=\"http://www.journals.elsevier.com/softwarex/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://www.journals.elsevier.com/softwarex/</a>",
  "id": "56250dc42639469f2635a9d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-10-19T15:35:32.334Z",
  "text": "And I think the situation with software citation is getting better, see, e.g., http://www.journals.elsevier.com/softwarex/",
  "unread": false,
  "urls": [
   {
    "url": "http://www.journals.elsevier.com/softwarex/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "<p>I&#39;m new to PyMC and Bayesian methods in general. I&#39;ve put together a notebook of what I think is a Bayesian lasso regression and follow-on uncertainty analysis of my model parameters, as well as uncertainty propagation to some quantities derived from the model: <a href=\"https://github.com/richardotis/pycalphad/blob/develop/research/PyMC.ipynb\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/richardotis/pycalphad/blob/develop/research/PyMC.ipynb</a></p><p>I&#39;d definitely appreciate comments from the experts in the room on whether I&#39;m &quot;doin&#39; it right&quot;, particularly on if it makes sense to use the posterior variance of my error function to compute 2-sigma curves for derived model quantities. It gives reasonable looking results, but I&#39;m wondering if that&#39;s just because my example is simple. </p>",
  "id": "56255901b46633c91301f37c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-10-19T20:56:33.570Z",
  "text": "I'm new to PyMC and Bayesian methods in general. I've put together a notebook of what I think is a Bayesian lasso regression and follow-on uncertainty analysis of my model parameters, as well as uncertainty propagation to some quantities derived from the model: https://github.com/richardotis/pycalphad/blob/develop/research/PyMC.ipynb\n\nI'd definitely appreciate comments from the experts in the room on whether I'm \"doin' it right\", particularly on if it makes sense to use the posterior variance of my error function to compute 2-sigma curves for derived model quantities. It gives reasonable looking results, but I'm wondering if that's just because my example is simple. ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/richardotis/pycalphad/blob/develop/research/PyMC.ipynb"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "Never mind about that last part, I had two variables named &quot;sig&quot;, I&#39;m actually computing the variance based on the trace, so it should be reasonable",
  "id": "56255a4b799f305d21584053",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-10-19T21:02:03.830Z",
  "text": "Never mind about that last part, I had two variables named \"sig\", I'm actually computing the variance based on the trace, so it should be reasonable",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stevenmanton",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3666725?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3666725?v=4&s=60",
   "displayName": "Steven Anton",
   "gv": "4",
   "id": "55cac5260fc9f982bead1637",
   "url": "/stevenmanton",
   "username": "stevenmanton",
   "v": 4
  },
  "html": "I run into a common problem I&#39;m wondering if someone can help with. Essentially, I&#39;d like to use infererences pymc3 to generate predictions on new data not seen during training (inference). It seems like this should be quite easy and rather common, but I can&#39;t seem to figure out any way to do this (short of copying all the code in a model and translating it to numpy). I&#39;ve written something up on <a href=\"http://stackoverflow.com/q/33249122/2708667\" rel=\"nofollow\" target=\"_blank\" class=\"link\">SO</a>. If someone cares to have a look I&#39;d very much appreciate it. I&#39;m also happy to add code or documentation with some guidance. Love the package as it&#39;s helped me invaluably on my project.",
  "id": "5626e076f539002a6f0c4a3b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2015-10-21T00:46:46.707Z",
  "text": "I run into a common problem I'm wondering if someone can help with. Essentially, I'd like to use infererences pymc3 to generate predictions on new data not seen during training (inference). It seems like this should be quite easy and rather common, but I can't seem to figure out any way to do this (short of copying all the code in a model and translating it to numpy). I've written something up on [SO](http://stackoverflow.com/q/33249122/2708667). If someone cares to have a look I'd very much appreciate it. I'm also happy to add code or documentation with some guidance. Love the package as it's helped me invaluably on my project.",
  "unread": false,
  "urls": [
   {
    "url": "http://stackoverflow.com/q/33249122/2708667"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stevenmanton\" class=\"mention\">@stevenmanton</span> is this helpful at all? <a href=\"http://pymc-devs.github.io/pymc3/posterior_predictive/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://pymc-devs.github.io/pymc3/posterior_predictive/</a>",
  "id": "56275808f539002a6f0c5775",
  "issues": [],
  "mentions": [
   {
    "screenName": "stevenmanton",
    "userId": "55cac5260fc9f982bead1637",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2015-10-21T09:16:56.228Z",
  "text": "@stevenmanton is this helpful at all? http://pymc-devs.github.io/pymc3/posterior_predictive/",
  "unread": false,
  "urls": [
   {
    "url": "http://pymc-devs.github.io/pymc3/posterior_predictive/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stevenmanton",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3666725?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3666725?v=4&s=60",
   "displayName": "Steven Anton",
   "gv": "4",
   "id": "55cac5260fc9f982bead1637",
   "url": "/stevenmanton",
   "username": "stevenmanton",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> that link is very helpful. Thanks! I&#39;ll try to digest exactly what&#39;s going on there, but it seems to address the issue I&#39;m having.",
  "id": "5627bdd3f539002a6f0c6c8e",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2015-10-21T16:31:15.332Z",
  "text": "@twiecki that link is very helpful. Thanks! I'll try to digest exactly what's going on there, but it seems to address the issue I'm having.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "the key trick is to use a theano shared variable",
  "id": "5627bfd16b0cea6a1011805c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-10-21T16:39:45.260Z",
  "text": "the key trick is to use a theano shared variable",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that allows you to switch in the data you want to predict",
  "id": "5627bfe7f539002a6f0c6d02",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-10-21T16:40:07.507Z",
  "text": "that allows you to switch in the data you want to predict",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stevenmanton",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3666725?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3666725?v=4&s=60",
   "displayName": "Steven Anton",
   "gv": "4",
   "id": "55cac5260fc9f982bead1637",
   "url": "/stevenmanton",
   "username": "stevenmanton",
   "v": 4
  },
  "html": "Totally. I appreciate that insight. That was one of the things I hadn&#39;t figured out.",
  "id": "5627c4c7d73f9e4f3b1b5070",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-10-21T17:00:55.835Z",
  "text": "Totally. I appreciate that insight. That was one of the things I hadn't figured out.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "I&#39;m trying to use pymc3 to perform nonlinear regression on multiple datasets, to find a common set of parameters that fit all the data. The trick is each dataset measures a different (but related) quantity of the system, and these measurements vary over orders of magnitude between datasets, so I cannot meaningfully group all the error together. What&#39;s the correct strategy? Should I define Potential variables based on sum-squared-error for each dataset?",
  "id": "562bda37f67aa4d236ca0df1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-10-24T19:21:27.424Z",
  "text": "I'm trying to use pymc3 to perform nonlinear regression on multiple datasets, to find a common set of parameters that fit all the data. The trick is each dataset measures a different (but related) quantity of the system, and these measurements vary over orders of magnitude between datasets, so I cannot meaningfully group all the error together. What's the correct strategy? Should I define Potential variables based on sum-squared-error for each dataset?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-10-24T19:33:54.388Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "<pre><code class=\"python\"><span class=\"keyword\">from</span> pymc3 <span class=\"keyword\">import</span> Normal, HalfNormal, Potential, Model\n<span class=\"keyword\">with</span> Model() <span class=\"keyword\">as</span> phase_model:\n    H_ex = Normal(<span class=\"string\">'H_ex'</span>, mu=<span class=\"number\">0</span>, sd=<span class=\"number\">10000</span>)\n    S_ex = Normal(<span class=\"string\">'S_ex'</span>, mu=<span class=\"number\">0</span>, sd=<span class=\"number\">500</span>)\n    L2_ex = Normal(<span class=\"string\">'L2_ex'</span>, mu=<span class=\"number\">0</span>, sd=<span class=\"number\">10</span>)\n    sig = HalfNormal(<span class=\"string\">'sig'</span>, sd=np.full_like(datasets, <span class=\"number\">10</span>, dtype=np.float), shape=len(datasets))\n    <span class=\"comment\"># datasets is defined elsewhere</span>\n    dataset = datasets[<span class=\"number\">1</span>]\n    e = Potential(<span class=\"string\">'e'</span>, -(np.square(dataset[<span class=\"string\">'func'</span>](H_ex, S_ex, L2_ex, dataset[<span class=\"string\">'T'</span>], dataset[<span class=\"string\">'x_a'</span>], dataset[<span class=\"string\">'x_b'</span>]) - dataset[<span class=\"string\">'value'</span>])).mean() / sig[<span class=\"number\">1</span>]**<span class=\"number\">2</span>)\n    dataset = datasets[<span class=\"number\">2</span>]\n    e2 = Potential(<span class=\"string\">'e2'</span>, -(np.square(dataset[<span class=\"string\">'func'</span>](H_ex, S_ex, L2_ex, dataset[<span class=\"string\">'T'</span>], dataset[<span class=\"string\">'x_a'</span>], dataset[<span class=\"string\">'x_b'</span>]) - dataset[<span class=\"string\">'value'</span>])).mean() / sig[<span class=\"number\">2</span>]**<span class=\"number\">2</span>)</code></pre>",
  "id": "562bdcd9f67aa4d236ca0e75",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-10-24T19:32:41.815Z",
  "text": "```python\nfrom pymc3 import Normal, HalfNormal, Potential, Model\nwith Model() as phase_model:\n    H_ex = Normal('H_ex', mu=0, sd=10000)\n    S_ex = Normal('S_ex', mu=0, sd=500)\n    L2_ex = Normal('L2_ex', mu=0, sd=10)\n    sig = HalfNormal('sig', sd=np.full_like(datasets, 10, dtype=np.float), shape=len(datasets))\n    # datasets is defined elsewhere\n    dataset = datasets[1]\n    e = Potential('e', -(np.square(dataset['func'](H_ex, S_ex, L2_ex, dataset['T'], dataset['x_a'], dataset['x_b']) - dataset['value'])).mean() / sig[1]**2)\n    dataset = datasets[2]\n    e2 = Potential('e2', -(np.square(dataset['func'](H_ex, S_ex, L2_ex, dataset['T'], dataset['x_a'], dataset['x_b']) - dataset['value'])).mean() / sig[2]**2)```",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "To answer my own question in case anyone&#39;s wondering, that snippet seems to give okay results.",
  "id": "562bdd14f67aa4d236ca0e80",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-10-24T19:33:40.447Z",
  "text": "To answer my own question in case anyone's wondering, that snippet seems to give okay results.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "(whereas if I only use one dataset the problem isn&#39;t well-defined and my parameter posterior distributions blow up)",
  "id": "562bdd8434e65add50ee9271",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-10-24T19:35:32.339Z",
  "text": "(whereas if I only use one dataset the problem isn't well-defined and my parameter posterior distributions blow up)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "Thanks for sharing <span data-link-type=\"mention\" data-screen-name=\"richardotis\" class=\"mention\">@richardotis</span> ",
  "id": "563649c8643ae8fb655b9cd1",
  "issues": [],
  "mentions": [
   {
    "screenName": "richardotis",
    "userId": "55a137c15e0d51bd787b0b26",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2015-11-01T17:20:08.662Z",
  "text": "Thanks for sharing @richardotis ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> I made some improvements which you can check out here:  <a href=\"https://github.com/richardotis/pycalphad/blob/develop/research/PyMC3.ipynb\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/richardotis/pycalphad/blob/develop/research/PyMC3.ipynb</a> (pycalphad is not required to run the notebook)",
  "id": "5636516d3d7306ae0f2969e4",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2015-11-01T17:52:45.098Z",
  "text": "@twiecki I made some improvements which you can check out here:  https://github.com/richardotis/pycalphad/blob/develop/research/PyMC3.ipynb (pycalphad is not required to run the notebook)",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/richardotis/pycalphad/blob/develop/research/PyMC3.ipynb"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "I am pretty new to this area and the idea of multiplying a bunch of factor potentials together which describe MSE for different datasets <em>feels like</em> something a lot of people would have done before, but I have no idea what terms should be used to find it.",
  "id": "563651d144f10a06616ca05e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2015-11-01T17:54:25.969Z",
  "text": "I am pretty new to this area and the idea of multiplying a bunch of factor potentials together which describe MSE for different datasets _feels like_ something a lot of people would have done before, but I have no idea what terms should be used to find it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"richardotis\" class=\"mention\">@richardotis</span> I don&#39;t understand: what common set of parameters would you like to find, given the dataset order-of-magnitude differences?",
  "id": "56365d0b643ae8fb655ba096",
  "issues": [],
  "mentions": [
   {
    "screenName": "richardotis",
    "userId": "55a137c15e0d51bd787b0b26",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2015-11-01T18:42:19.383Z",
  "text": "@richardotis I don't understand: what common set of parameters would you like to find, given the dataset order-of-magnitude differences?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "and why would this make sense?",
  "id": "56365d2e643ae8fb655ba0a0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2015-11-01T18:42:54.481Z",
  "text": "and why would this make sense?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ocramz\" class=\"mention\">@ocramz</span> I am building a parametric model to describe the energy of a system, call it f(x) where x is some input vector. I want to fit experimental data to that model. For physical reasons that data is not going to be direct measurements of f(x). It might be measurements of df/dx2, or measurements of (f(x) - x2*df/dx2), or it might even be points on the convex hull of f(x), or some mixture of all the above. Each dataset is measuring a different quantity, but all of them depend on the same set of parameters since all of them depend on f(x).",
  "id": "563675803d7306ae0f296c7c",
  "issues": [],
  "mentions": [
   {
    "screenName": "ocramz",
    "userId": "54413309db8155e6700cc708",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2015-11-01T20:26:40.144Z",
  "text": "@ocramz I am building a parametric model to describe the energy of a system, call it f(x) where x is some input vector. I want to fit experimental data to that model. For physical reasons that data is not going to be direct measurements of f(x). It might be measurements of df/dx2, or measurements of (f(x) - x2*df/dx2), or it might even be points on the convex hull of f(x), or some mixture of all the above. Each dataset is measuring a different quantity, but all of them depend on the same set of parameters since all of them depend on f(x).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "I can&#39;t fit directly to f(x), I can only fit to stuff that depends on f(x)",
  "id": "563675eb643ae8fb655ba63a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2015-11-01T20:28:27.381Z",
  "text": "I can't fit directly to f(x), I can only fit to stuff that depends on f(x)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "For example, let f(T,x,y) = T <em> (x</em>ln(x) + y<em>ln(y)) + (a + b</em>T)<em>x</em>y, where a and b are the parameters I&#39;d like to fit to",
  "id": "56367678195a24fc65bdd1c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2015-11-01T20:30:48.407Z",
  "text": "For example, let f(T,x,y) = T * (x*ln(x) + y*ln(y)) + (a + b*T)*x*y, where a and b are the parameters I'd like to fit to",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "I can&#39;t measure f(T,x,y), but I can measure df/dT. I can also measure (f(T,x,y) - df/dT). I can also measure some other things which are more complicated functions of f.",
  "id": "563676bf643ae8fb655ba662",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2015-11-01T20:31:59.138Z",
  "text": "I can't measure f(T,x,y), but I can measure df/dT. I can also measure (f(T,x,y) - df/dT). I can also measure some other things which are more complicated functions of f.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "So, given some datasets that measure different quantities which can be some complicated function of f(T,x,y) which may not even be analytic, I want to determine probability distributions for a and b",
  "id": "563676f6195a24fc65bdd1dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2015-11-01T20:32:54.564Z",
  "text": "So, given some datasets that measure different quantities which can be some complicated function of f(T,x,y) which may not even be analytic, I want to determine probability distributions for a and b",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "Historically in my community it&#39;s been done using weighted least-squares estimation, where the weights are assigned empirically",
  "id": "56367750643ae8fb655ba693",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2015-11-01T20:34:24.351Z",
  "text": "Historically in my community it's been done using weighted least-squares estimation, where the weights are assigned empirically",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "So Dataset 1 may be some values of df/dT as a function of T, x, and y. Dataset 2 may be measurements of some other g(f(T, x, y)) for some T, x and y. The numerical values of these quantities can vary wildly between datasets, but they are all fundamentally dependent on f and therefore its parameters ",
  "id": "563677ec44f10a06616ca2f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2015-11-01T20:37:00.461Z",
  "text": "So Dataset 1 may be some values of df/dT as a function of T, x, and y. Dataset 2 may be measurements of some other g(f(T, x, y)) for some T, x and y. The numerical values of these quantities can vary wildly between datasets, but they are all fundamentally dependent on f and therefore its parameters ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "I should note that g could be an arbitrary transformation of f, but it is guaranteed to be deterministic",
  "id": "56367969195a24fc65bdd2a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2015-11-01T20:43:21.390Z",
  "text": "I should note that g could be an arbitrary transformation of f, but it is guaranteed to be deterministic",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"richardotis\" class=\"mention\">@richardotis</span> ok, but 1. you can only sum/subtract homogeneous quantities 2. you need the likelihood functions for the parameters wrt each dataset and 3. averaging will perform very poorly if the components are different functionals   ",
  "id": "5636863de87b056a49cdc1ef",
  "issues": [],
  "mentions": [
   {
    "screenName": "richardotis",
    "userId": "55a137c15e0d51bd787b0b26",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2015-11-01T21:38:05.289Z",
  "text": "@richardotis ok, but 1. you can only sum/subtract homogeneous quantities 2. you need the likelihood functions for the parameters wrt each dataset and 3. averaging will perform very poorly if the components are different functionals   ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "All the quantities measured are scalar quantities",
  "id": "5636865c195a24fc65bdd5f5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2015-11-01T21:38:36.566Z",
  "text": "All the quantities measured are scalar quantities",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "yes but f(.) is in units of [f] , whereas df/dx is in units of [f/x]",
  "id": "5636869f44f10a06616ca409",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2015-11-01T21:39:43.708Z",
  "text": "yes but f(.) is in units of [f] , whereas df/dx is in units of [f/x]",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "correct",
  "id": "563686a9195a24fc65bdd604",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2015-11-01T21:39:53.882Z",
  "text": "correct",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "ok but this was just a minor point; my concern is with the &quot;collective&quot; estimator",
  "id": "563686c544f10a06616ca41a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2015-11-01T21:40:20.998Z",
  "text": "ok but this was just a minor point; my concern is with the \"collective\" estimator",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-11-01T21:42:32.882Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "Can I just choose as my likelihood function for each dataset exp(-&lt;g(f(.)) - y&gt;^2 / sig^2), where sig is a hyperparameter in my model",
  "id": "56368733643ae8fb655baaf3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2015-11-01T21:42:11.145Z",
  "text": "Can I just choose as my likelihood function for each dataset exp(-<g(f(.)) - y>^2 / sig^2), where sig is a hyperparameter in my model",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "only if the noise is Gaussian",
  "id": "5636876a195a24fc65bdd628",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2015-11-01T21:43:06.470Z",
  "text": "only if the noise is Gaussian",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "I can only assume as much. These are physical measurements typically",
  "id": "5636878a643ae8fb655bab09",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2015-11-01T21:43:38.621Z",
  "text": "I can only assume as much. These are physical measurements typically",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "I&#39;ve experimented with making some datasets systematically biased by adding Guassian noise shifted by different values, and what seems to happen is the value of sig for that dataset will increase",
  "id": "563687cf195a24fc65bdd646",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2015-11-01T21:44:47.296Z",
  "text": "I've experimented with making some datasets systematically biased by adding Guassian noise shifted by different values, and what seems to happen is the value of sig for that dataset will increase",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "Which is what I want. Ideally my model would automatically reweight &quot;bad&quot; data",
  "id": "56368811643ae8fb655bab32",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2015-11-01T21:45:53.740Z",
  "text": "Which is what I want. Ideally my model would automatically reweight \"bad\" data",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "well measurement noise should be zero mean",
  "id": "563688173d7306ae0f296de2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2015-11-01T21:45:59.432Z",
  "text": "well measurement noise should be zero mean",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "so first of all whiten all the experimental data",
  "id": "56368835e87b056a49cdc21b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2015-11-01T21:46:29.714Z",
  "text": "so first of all whiten all the experimental data",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "I don&#39;t know what whiten means.",
  "id": "56368840195a24fc65bdd65c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-11-01T21:46:40.702Z",
  "text": "I don't know what whiten means.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "removing the mean and dividing by the covariance",
  "id": "5636884dcfb11ae853069a47",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-11-01T21:46:53.549Z",
  "text": "removing the mean and dividing by the covariance",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "you need the empirical mean and the SVD of the covariance matrix",
  "id": "5636886e44f10a06616ca43d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-11-01T21:47:26.552Z",
  "text": "you need the empirical mean and the SVD of the covariance matrix",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "for each dataset?",
  "id": "56368877195a24fc65bdd671",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-11-01T21:47:35.113Z",
  "text": "for each dataset?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "yes, since they have different statistics, as you said",
  "id": "5636888644f10a06616ca43f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-11-01T21:47:50.480Z",
  "text": "yes, since they have different statistics, as you said",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "but hmmm",
  "id": "563688cce4bb7eee53802358",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-11-01T21:49:00.359Z",
  "text": "but hmmm",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "so what I described is the first step usually when one needs to perform a regression",
  "id": "5636890816a0020761922703",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-11-01T21:50:00.363Z",
  "text": "so what I described is the first step usually when one needs to perform a regression",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "but you want also to capture a relationship between datasets",
  "id": "5636891744f10a06616ca449",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-11-01T21:50:15.159Z",
  "text": "but you want also to capture a relationship between datasets",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "Is whitening necessary if I choose the prior of sig to have high probability density close to the empirical variance",
  "id": "56368962643ae8fb655bab78",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-11-01T21:51:30.632Z",
  "text": "Is whitening necessary if I choose the prior of sig to have high probability density close to the empirical variance",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "except the issue isn&#39;t the variance of that particular dataset",
  "id": "56368976643ae8fb655bab7d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-01T21:51:50.106Z",
  "text": "except the issue isn't the variance of that particular dataset",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "maybe you already realized this",
  "id": "5636897a643ae8fb655bab7e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-01T21:51:54.995Z",
  "text": "maybe you already realized this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "It&#39;s also possible that a dataset has very small empirical variance but actually measured the wrong thing",
  "id": "56368992195a24fc65bdd6aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-01T21:52:18.318Z",
  "text": "It's also possible that a dataset has very small empirical variance but actually measured the wrong thing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "so my calculation will need to &quot;realize&quot; that a dataset is inconsistent with the priors on the parameters / the other datasets",
  "id": "563689b7643ae8fb655bab90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-01T21:52:55.370Z",
  "text": "so my calculation will need to \"realize\" that a dataset is inconsistent with the priors on the parameters / the other datasets",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "wait, wait",
  "id": "563689c8cfb11ae853069a76",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-01T21:53:12.895Z",
  "text": "wait, wait",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "do all datasets share at least a support? i.e. have nonzero probability over the same set?",
  "id": "56368a0244f10a06616ca459",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-01T21:54:10.620Z",
  "text": "do all datasets share at least a support? i.e. have nonzero probability over the same set?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "The same set of what?",
  "id": "56368a14643ae8fb655bab98",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-01T21:54:28.331Z",
  "text": "The same set of what?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "of parameters",
  "id": "56368a3bcfb11ae853069a7d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-01T21:55:07.527Z",
  "text": "of parameters",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "I should say &quot;range&quot;, the parameter is a real vector, right?",
  "id": "56368a50e87b056a49cdc257",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-01T21:55:28.580Z",
  "text": "I should say \"range\", the parameter is a real vector, right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "yes",
  "id": "56368a55643ae8fb655baba4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-01T21:55:33.074Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "Each parameter is a scalar so all the parameters comprise a vector",
  "id": "56368a6b195a24fc65bdd6d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-01T21:55:55.984Z",
  "text": "Each parameter is a scalar so all the parameters comprise a vector",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "I am not sure how to answer your question. In principle every dataset is a measurement of the same underlying physical system which is attempted to be captured by f(.).",
  "id": "56368aab643ae8fb655babbb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-01T21:56:59.153Z",
  "text": "I am not sure how to answer your question. In principle every dataset is a measurement of the same underlying physical system which is attempted to be captured by f(.).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "ok so we have x -&gt; f(x) -&gt; {g1[f(x)], g2[f(x)] ... gN[f(x)]}",
  "id": "56368af244f10a06616ca46d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-01T21:58:10.867Z",
  "text": "ok so we have x -> f(x) -> {g1[f(x)], g2[f(x)] ... gN[f(x)]}",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "?",
  "id": "56368afe44f10a06616ca46e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-01T21:58:22.014Z",
  "text": "?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "correct",
  "id": "56368afe195a24fc65bdd6fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-01T21:58:22.379Z",
  "text": "correct",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "I think the regression for gi[f(x)] etc. should be done separately forall i  ",
  "id": "56368b5ae4bb7eee5380238b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-01T21:59:54.244Z",
  "text": "I think the regression for gi[f(x)] etc. should be done separately forall i  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "For any i the system will typically be underdetermined wrt the parameters. Typically the number of data points in a dataset ~ the total number of parameters of f(.)",
  "id": "56368b99643ae8fb655bac03",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-01T22:00:57.033Z",
  "text": "For any i the system will typically be underdetermined wrt the parameters. Typically the number of data points in a dataset ~ the total number of parameters of f(.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "uh",
  "id": "56368ba8cfb11ae853069aa6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-01T22:01:12.681Z",
  "text": "uh",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "this is very bad news for any regression algorithm",
  "id": "56368bbb3d7306ae0f296e3b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-01T22:01:31.250Z",
  "text": "this is very bad news for any regression algorithm",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "It&#39;s possible that we can break out the parameters into subsets. For physical reasons we expect certain parameters to play a role in some gi, but not others",
  "id": "56368c15643ae8fb655bac18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-01T22:03:01.268Z",
  "text": "It's possible that we can break out the parameters into subsets. For physical reasons we expect certain parameters to play a role in some gi, but not others",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "but the gi might not be differentiable ",
  "id": "56368c8b195a24fc65bdd749",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-01T22:04:59.522Z",
  "text": "but the gi might not be differentiable ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "in general it isn&#39;t",
  "id": "56368c93195a24fc65bdd74c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:05:07.813Z",
  "text": "in general it isn't",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "do you have a generative model of f ?",
  "id": "56368cba195a24fc65bdd753",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:05:46.713Z",
  "text": "do you have a generative model of f ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "is it a PDE?",
  "id": "56368cc3643ae8fb655bac3c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:05:55.770Z",
  "text": "is it a PDE?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "f is typically a multivariate polynomial",
  "id": "56368cd1643ae8fb655bac40",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:06:09.607Z",
  "text": "f is typically a multivariate polynomial",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "sometimes with some nonlinear terms mixed in, logs and exp",
  "id": "56368ce6643ae8fb655bac44",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:06:30.136Z",
  "text": "sometimes with some nonlinear terms mixed in, logs and exp",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "no differentiation",
  "id": "56368cf2195a24fc65bdd763",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:06:42.818Z",
  "text": "no differentiation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "then the parametric sensitivity can be computed in closed form ",
  "id": "56368d04195a24fc65bdd765",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:07:00.430Z",
  "text": "then the parametric sensitivity can be computed in closed form ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "at least of f(x)",
  "id": "56368d09195a24fc65bdd766",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:07:05.705Z",
  "text": "at least of f(x)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "What does that imply for my analysis?",
  "id": "56368d32195a24fc65bdd76c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:07:46.428Z",
  "text": "What does that imply for my analysis?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "I&#39;m getting sloppy due to the late hour",
  "id": "56368d50195a24fc65bdd76e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:08:16.629Z",
  "text": "I'm getting sloppy due to the late hour",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "I mean",
  "id": "56368d54643ae8fb655bac57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:08:20.620Z",
  "text": "I mean",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "ok I re-read the spec",
  "id": "56368ddb195a24fc65bdd78c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:10:35.430Z",
  "text": "ok I re-read the spec",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "the problem is fitting those functionals of f(.)",
  "id": "56368de9643ae8fb655bac84",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:10:49.542Z",
  "text": "the problem is fitting those functionals of f(.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "but in order to set up Bayes&#39; theorem, you want also p( f(T, x, y) , T, x,  y), the joint pdf of the x-&gt;f(.) transformation",
  "id": "56368e4f643ae8fb655baca1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:12:31.819Z",
  "text": "but in order to set up Bayes' theorem, you want also p( f(T, x, y) , T, x,  y), the joint pdf of the x->f(.) transformation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "since the collective jpdf would be of the form p(f, g1, g2, ... , T, x, y)",
  "id": "56368e83643ae8fb655bacae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:13:23.431Z",
  "text": "since the collective jpdf would be of the form p(f, g1, g2, ... , T, x, y)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "T, x and y are fixed independent variables in this construction",
  "id": "56368e8e44f10a06616ca4b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:13:34.388Z",
  "text": "T, x and y are fixed independent variables in this construction",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "factor it into causes and effects",
  "id": "56368e94195a24fc65bdd7ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:13:40.225Z",
  "text": "factor it into causes and effects",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "ok, fine",
  "id": "56368e9c643ae8fb655bacb8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:13:48.264Z",
  "text": "ok, fine",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "Do you mean of a and b",
  "id": "56368eab3d7306ae0f296e81",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:14:03.816Z",
  "text": "Do you mean of a and b",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "oh, yes, sure",
  "id": "56368eca195a24fc65bdd7c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:14:34.616Z",
  "text": "oh, yes, sure",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "but, well, it depends how many free parameters make sense for any given output",
  "id": "56368eeb195a24fc65bdd7c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:15:07.351Z",
  "text": "but, well, it depends how many free parameters make sense for any given output",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "should the output data lie on a plane, or on a Swiss roll? you tell me",
  "id": "56368f16643ae8fb655bacd9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:15:50.245Z",
  "text": "should the output data lie on a plane, or on a Swiss roll? you tell me",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "For a particular gi we can say something about the trend we expect from physical arguments, whether it&#39;s roughly linear or parabolic or cubic",
  "id": "56368f63195a24fc65bdd7e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:17:07.675Z",
  "text": "For a particular gi we can say something about the trend we expect from physical arguments, whether it's roughly linear or parabolic or cubic",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "With respect to T, x and y",
  "id": "56368f75643ae8fb655bace3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-11-01T22:17:25.841Z",
  "text": "With respect to T, x and y",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "The trend with respect to a and b is definitely not clear",
  "id": "56368f80195a24fc65bdd7e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-11-01T22:17:36.867Z",
  "text": "The trend with respect to a and b is definitely not clear",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "Beyond perhaps &quot;increasing&quot; or &quot;decreasing&quot;",
  "id": "56368f9e643ae8fb655bacf3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-11-01T22:18:06.996Z",
  "text": "Beyond perhaps \"increasing\" or \"decreasing\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": ":D",
  "id": "56368fa4643ae8fb655bacf4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-11-01T22:18:12.235Z",
  "text": ":D",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "so, re. the model selection you were looking for earlier: the &quot;evidence&quot; is required, i.e. the marginalization of the Bayes numerator wrt all parameter settings, for any given fitting model (e.g. a polynomial of given order)",
  "id": "56368fdd195a24fc65bdd800",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-11-01T22:19:09.741Z",
  "text": "so, re. the model selection you were looking for earlier: the \"evidence\" is required, i.e. the marginalization of the Bayes numerator wrt all parameter settings, for any given fitting model (e.g. a polynomial of given order)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "I&#39;m not necessarily looking for model selection at the moment. I&#39;m happy to choose a certain set of parameters, construct my f(.) and just include zero in my prior",
  "id": "5636901ee87b056a49cdc2cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-11-01T22:20:14.006Z",
  "text": "I'm not necessarily looking for model selection at the moment. I'm happy to choose a certain set of parameters, construct my f(.) and just include zero in my prior",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-11-01T22:20:45.139Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "Unless you mean &quot;find the most probable model parameters&quot; as being a model selection problem",
  "id": "5636903216a0020761922799",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:20:34.081Z",
  "text": "Unless you mean \"find the most probable model parameters\" as being a model selection problem",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "no, the two are separate problems; I meant selection",
  "id": "56369087e4bb7eee538023f6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:21:59.293Z",
  "text": "no, the two are separate problems; I meant selection",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "So it&#39;s possible for us to actually order the parameters, since they are typically multivariate polynomial coefficients",
  "id": "563690bae87b056a49cdc2d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:22:50.881Z",
  "text": "So it's possible for us to actually order the parameters, since they are typically multivariate polynomial coefficients",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "As we add parameters, we start to have to increase the order of the polynomial",
  "id": "563690cce4bb7eee538023fb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:23:08.272Z",
  "text": "As we add parameters, we start to have to increase the order of the polynomial",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "So a larger number of parameters is actually less likely",
  "id": "563690dae4bb7eee538023fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:23:22.696Z",
  "text": "So a larger number of parameters is actually less likely",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "If you made me draw a graph of probability versus # of parameters for a typical f() on a whiteboard, I&#39;d draw something that started small but finite at zero, peaked around 2-3, and then steadily decreased and got tiny around 8",
  "id": "5636914dcfb11ae853069b10",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:25:17.056Z",
  "text": "If you made me draw a graph of probability versus # of parameters for a typical f() on a whiteboard, I'd draw something that started small but finite at zero, peaked around 2-3, and then steadily decreased and got tiny around 8",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "re: evidence, Is it enough for me to specify a semi-informative prior on each of my parameters? I typically have decent bounds on them at least.",
  "id": "563691f6643ae8fb655bad4e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-01T22:28:06.802Z",
  "text": "re: evidence, Is it enough for me to specify a semi-informative prior on each of my parameters? I typically have decent bounds on them at least.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "Thanks again for the discussion <span data-link-type=\"mention\" data-screen-name=\"ocramz\" class=\"mention\">@ocramz</span> . I am very interested in solving this problem. Right now in my field we don&#39;t even report uncertainties with our parameters, and even if we did, I don&#39;t know what they would mean. Propagating uncertainty from underlying datasets, through our models, to a predicted property is considered cutting-edge research.",
  "id": "5636948a44f10a06616ca53e",
  "issues": [],
  "mentions": [
   {
    "screenName": "ocramz",
    "userId": "54413309db8155e6700cc708",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2015-11-01T22:39:06.476Z",
  "text": "Thanks again for the discussion @ocramz . I am very interested in solving this problem. Right now in my field we don't even report uncertainties with our parameters, and even if we did, I don't know what they would mean. Propagating uncertainty from underlying datasets, through our models, to a predicted property is considered cutting-edge research.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "Solving this problem and developing the software tooling, perhaps based on pymc3, is going to be a portion of my PhD work",
  "id": "563694cae87b056a49cdc318",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-11-01T22:40:10.639Z",
  "text": "Solving this problem and developing the software tooling, perhaps based on pymc3, is going to be a portion of my PhD work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "hi <span data-link-type=\"mention\" data-screen-name=\"richardotis\" class=\"mention\">@richardotis</span> ; here is something on UQ for non-MC-based methods (namely, spectral expansions e.g. Wiener &quot;chaos&quot;): <a href=\"https://web.stanford.edu/group/cits/pdf/lectures/ghanem.pdf\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://web.stanford.edu/group/cits/pdf/lectures/ghanem.pdf</a>",
  "id": "56374fa544f10a06616cb003",
  "issues": [],
  "mentions": [
   {
    "screenName": "richardotis",
    "userId": "55a137c15e0d51bd787b0b26",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2015-11-02T11:57:25.280Z",
  "text": "hi @richardotis ; here is something on UQ for non-MC-based methods (namely, spectral expansions e.g. Wiener \"chaos\"): https://web.stanford.edu/group/cits/pdf/lectures/ghanem.pdf",
  "unread": false,
  "urls": [
   {
    "url": "https://web.stanford.edu/group/cits/pdf/lectures/ghanem.pdf"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "Very interesting project by <span data-link-type=\"mention\" data-screen-name=\"markdregan\" class=\"mention\">@markdregan</span> <a href=\"https://github.com/markdregan/Bayesian-Modelling-in-Python\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/markdregan/Bayesian-Modelling-in-Python</a>",
  "id": "56375458e4bb7eee53802f5a",
  "issues": [],
  "mentions": [
   {
    "screenName": "markdregan",
    "userId": "560b34170fc9f982beb240b7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2015-11-02T12:17:28.206Z",
  "text": "Very interesting project by @markdregan https://github.com/markdregan/Bayesian-Modelling-in-Python",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/markdregan/Bayesian-Modelling-in-Python"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"markdregan\" class=\"mention\">@markdregan</span> would love to chat more about what your plans are with this",
  "id": "563754679ecf3d082fc9b35b",
  "issues": [],
  "mentions": [
   {
    "screenName": "markdregan",
    "userId": "560b34170fc9f982beb240b7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2015-11-02T12:17:43.417Z",
  "text": "@markdregan would love to chat more about what your plans are with this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "^ very well made too, with the right balance of examples, theory and pretty pictures",
  "id": "563757e99ecf3d082fc9b3b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-11-02T12:32:41.719Z",
  "text": "^ very well made too, with the right balance of examples, theory and pretty pictures",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "(only nitpick, Poisson and Bayes were people at some point in history, so their names and derived adjectives should be capitalized)",
  "id": "56375818e87b056a49cdcee9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-11-02T12:33:28.631Z",
  "text": "(only nitpick, Poisson and Bayes were people at some point in history, so their names and derived adjectives should be capitalized)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yes, I noticed the same thing",
  "id": "563762c656e0e94b18ddc6d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-11-02T13:19:02.846Z",
  "text": "yes, I noticed the same thing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"ocramz\" class=\"mention\">@ocramz</span> . Looks like a lot of formalisms I am personally unfamiliar with. I&#39;ll pass it along to my math collaborator (I&#39;m a materials scientist) and perhaps he can make some sense of it. As an aside, I have heard of Legendre polynomials before and I&#39;m vaguely aware that they have some orthogonality properties which make their coefficients relatively insensitive to one another. It would be interesting to convert from our existing (Redlich-Kister) polynomial basis to that one, perform the regression and transform the coefficients back when we&#39;re done. People in my field have proposed doing it, but no one&#39;s ever written the code to do it.",
  "id": "563a54f9c74a90c744793f28",
  "issues": [],
  "mentions": [
   {
    "screenName": "ocramz",
    "userId": "54413309db8155e6700cc708",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2015-11-04T18:56:57.445Z",
  "text": "Thanks @ocramz . Looks like a lot of formalisms I am personally unfamiliar with. I'll pass it along to my math collaborator (I'm a materials scientist) and perhaps he can make some sense of it. As an aside, I have heard of Legendre polynomials before and I'm vaguely aware that they have some orthogonality properties which make their coefficients relatively insensitive to one another. It would be interesting to convert from our existing (Redlich-Kister) polynomial basis to that one, perform the regression and transform the coefficients back when we're done. People in my field have proposed doing it, but no one's ever written the code to do it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "Oh, so Wiener chaos is also known as polynomial chaos, which I have heard of before. I was at a conference recently where several researchers have mentioned polynomial chaos expansion as an interesting UQ method, though I&#39;ve unfortunately found the whole topic to be somewhat impenetrable.",
  "id": "563a56c6e39fabcb5f00e018",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-04T19:04:38.738Z",
  "text": "Oh, so Wiener chaos is also known as polynomial chaos, which I have heard of before. I was at a conference recently where several researchers have mentioned polynomial chaos expansion as an interesting UQ method, though I've unfortunately found the whole topic to be somewhat impenetrable.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "Spectral methods are like principal component analysis? I know that one.",
  "id": "563a57500800da954de6b816",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-04T19:06:56.431Z",
  "text": "Spectral methods are like principal component analysis? I know that one.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "(MC appeals to the engineer in me, because it suggests that I can construct a simple, general formulation of my problem, and then throw supercomputing resources at it until it converges... Human time writing special programs for new formulations is expensive, but extra cpu-hours are relatively cheap.)",
  "id": "563a575c7e866a5357623b32",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-04T19:07:08.031Z",
  "text": "(MC appeals to the engineer in me, because it suggests that I can construct a simple, general formulation of my problem, and then throw supercomputing resources at it until it converges... Human time writing special programs for new formulations is expensive, but extra cpu-hours are relatively cheap.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "Absolutely; each MC solution is exact, but the moment estimators converge as $1/\\sqrt(n)$",
  "id": "563a964f5680530d2704703e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-04T23:35:43.974Z",
  "text": "Absolutely; each MC solution is exact, but the moment estimators converge as $1/\\sqrt(n)$",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stevenmanton",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3666725?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3666725?v=4&s=60",
   "displayName": "Steven Anton",
   "gv": "4",
   "id": "55cac5260fc9f982bead1637",
   "url": "/stevenmanton",
   "username": "stevenmanton",
   "v": 4
  },
  "html": "Anyone have any experience implementing spike-and-slab priors in pymc3?",
  "id": "563ab01d5680530d27047619",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-05T01:25:49.343Z",
  "text": "Anyone have any experience implementing spike-and-slab priors in pymc3?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"richardotis\" class=\"mention\">@richardotis</span> , let&#39;s move the conversation to a private channel ; )",
  "id": "563b228bc74a90c744794fb3",
  "issues": [],
  "mentions": [
   {
    "screenName": "richardotis",
    "userId": "55a137c15e0d51bd787b0b26",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2015-11-05T09:34:03.461Z",
  "text": "@richardotis , let's move the conversation to a private channel ; )",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stevenmanton\" class=\"mention\">@stevenmanton</span> Haven&#39;t tried yet but that&#39;d be a great example",
  "id": "563b284ec74a90c744795044",
  "issues": [],
  "mentions": [
   {
    "screenName": "stevenmanton",
    "userId": "55cac5260fc9f982bead1637",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2015-11-05T09:58:38.313Z",
  "text": "@stevenmanton Haven't tried yet but that'd be a great example",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I&#39;d start with the gaussian mixture model",
  "id": "563b2864e39fabcb5f00f07d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-11-05T09:59:00.127Z",
  "text": "I'd start with the gaussian mixture model",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that model is probably very hard to do in stan actually (because they don&#39;t have discrete vars)",
  "id": "563b28840800da954de6c8a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-11-05T09:59:32.899Z",
  "text": "that model is probably very hard to do in stan actually (because they don't have discrete vars)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ocramz\" class=\"mention\">@ocramz</span> <span data-link-type=\"mention\" data-screen-name=\"richardotis\" class=\"mention\">@richardotis</span> you are welcome to talk advanced modeling here (at least as far as I\u2019m concerned)",
  "id": "563ba38c0379c7e740695357",
  "issues": [],
  "mentions": [
   {
    "screenName": "ocramz",
    "userId": "54413309db8155e6700cc708",
    "userIds": []
   },
   {
    "screenName": "richardotis",
    "userId": "55a137c15e0d51bd787b0b26",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2015-11-05T18:44:28.690Z",
  "text": "@ocramz @richardotis you are welcome to talk advanced modeling here (at least as far as I\u2019m concerned)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stevenmanton",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3666725?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3666725?v=4&s=60",
   "displayName": "Steven Anton",
   "gv": "4",
   "id": "55cac5260fc9f982bead1637",
   "url": "/stevenmanton",
   "username": "stevenmanton",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> can you have a look at <a href=\"https://github.com/stevenmanton/pymc3/blob/spike-and-slab/pymc3/examples/spike_and_slab_prior.ipynb\" rel=\"nofollow\" target=\"_blank\" class=\"link\">this example notebook</a>? It seems close to what I want (using Bernoulli selection of spike versus slab), but the random sampling from the slab portion seems actually to be fixed.",
  "id": "563bd7681c745ee6407405a9",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2015-11-05T22:25:44.929Z",
  "text": "@twiecki can you have a look at [this example notebook](https://github.com/stevenmanton/pymc3/blob/spike-and-slab/pymc3/examples/spike_and_slab_prior.ipynb)? It seems close to what I want (using Bernoulli selection of spike versus slab), but the random sampling from the slab portion seems actually to be fixed.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/stevenmanton/pymc3/blob/spike-and-slab/pymc3/examples/spike_and_slab_prior.ipynb"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ocramz\" class=\"mention\">@ocramz</span> <span data-link-type=\"mention\" data-screen-name=\"richardotis\" class=\"mention\">@richardotis</span> agreed, I enjoyed the discussions",
  "id": "563c587ec712fe074e4ddf76",
  "issues": [],
  "mentions": [
   {
    "screenName": "ocramz",
    "userId": "54413309db8155e6700cc708",
    "userIds": []
   },
   {
    "screenName": "richardotis",
    "userId": "55a137c15e0d51bd787b0b26",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2015-11-06T07:36:30.918Z",
  "text": "@ocramz @richardotis agreed, I enjoyed the discussions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stevenmanton\" class=\"mention\">@stevenmanton</span> wouldn&#39;t you have to set the spike to 0 (i.e. not a RV)? Also, this assumes a single coefficient I think, if you did multiple you&#39;d need multiple bernoullies",
  "id": "563c592bc712fe074e4ddf9e",
  "issues": [],
  "mentions": [
   {
    "screenName": "stevenmanton",
    "userId": "55cac5260fc9f982bead1637",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2015-11-06T07:39:23.178Z",
  "text": "@stevenmanton wouldn't you have to set the spike to 0 (i.e. not a RV)? Also, this assumes a single coefficient I think, if you did multiple you'd need multiple bernoullies",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> <span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> then there will be more : ) I&#39;m always interested in discussing UQ, numerical methods, dynamic programming/dumb AI",
  "id": "563c5f580379c7e74069625a",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   },
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-11-06T08:05:44.835Z",
  "text": "@fonnesbeck @twiecki then there will be more : ) I'm always interested in discussing UQ, numerical methods, dynamic programming/dumb AI",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "Given the receptive audience I&#39;ll copy-and-paste what I was saying to <span data-link-type=\"mention\" data-screen-name=\"ocramz\" class=\"mention\">@ocramz</span> privately and perhaps get some additional thoughts",
  "id": "563cba152e8c19094ec03f02",
  "issues": [],
  "mentions": [
   {
    "screenName": "ocramz",
    "userId": "54413309db8155e6700cc708",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-11-06T14:32:53.359Z",
  "text": "Given the receptive audience I'll copy-and-paste what I was saying to @ocramz privately and perhaps get some additional thoughts",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "I expect a typical thermodynamic system of interest to require me to deal with 10-100 random variables if I go with an MC approach like I discussed earlier, with perhaps 1/2 to 1/3 of those variables being the actual model parameters of interest and the rest as hyperparameters (variances of priors on separate datasets, etc)",
  "id": "563cba392e8c19094ec03f13",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-11-06T14:33:29.261Z",
  "text": "I expect a typical thermodynamic system of interest to require me to deal with 10-100 random variables if I go with an MC approach like I discussed earlier, with perhaps 1/2 to 1/3 of those variables being the actual model parameters of interest and the rest as hyperparameters (variances of priors on separate datasets, etc)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "The other complicating factor is my model function will sometimes contain more than just Redlich-Kister polynomial terms. For the case of magnetism there may be some nonlinear terms. Also typically the R-K polynomial coefficients are defined as piecewise functions, and I don&#39;t know if polynomial chaos (PC) can handle this.",
  "id": "563cba5b2e8c19094ec03f1d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-11-06T14:34:03.294Z",
  "text": "The other complicating factor is my model function will sometimes contain more than just Redlich-Kister polynomial terms. For the case of magnetism there may be some nonlinear terms. Also typically the R-K polynomial coefficients are defined as piecewise functions, and I don't know if polynomial chaos (PC) can handle this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "I&#39;m not necessarily set on an MC approach-- I really only started learning any Bayesian methods about three weeks ago, so I&#39;m happy to take directions. My only restriction is that the method can be reduced to practice in Python relatively quickly, because I am trying to defend my dissertation in 5 months. :)",
  "id": "563cba682e8c19094ec03f21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-11-06T14:34:16.715Z",
  "text": "I'm not necessarily set on an MC approach-- I really only started learning any Bayesian methods about three weeks ago, so I'm happy to take directions. My only restriction is that the method can be reduced to practice in Python relatively quickly, because I am trying to defend my dissertation in 5 months. :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "FYI <a href=\"http://twiecki.github.io/blog/2015/11/10/mcmc-sampling/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://twiecki.github.io/blog/2015/11/10/mcmc-sampling/</a>",
  "id": "564231906420c33467a128aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-11-10T18:04:00.217Z",
  "text": "FYI http://twiecki.github.io/blog/2015/11/10/mcmc-sampling/",
  "unread": false,
  "urls": [
   {
    "url": "http://twiecki.github.io/blog/2015/11/10/mcmc-sampling/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "blog post on MCMC sampling",
  "id": "564231b96420c33467a128bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-11-10T18:04:41.054Z",
  "text": "blog post on MCMC sampling",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stevenmanton",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3666725?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3666725?v=4&s=60",
   "displayName": "Steven Anton",
   "gv": "4",
   "id": "55cac5260fc9f982bead1637",
   "url": "/stevenmanton",
   "username": "stevenmanton",
   "v": 4
  },
  "html": "Hey devs, is there a reason that there aren&#39;t more Half* distributions. Say, HalfT?",
  "id": "564272fd6420c33467a1421c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-11-10T22:43:09.695Z",
  "text": "Hey devs, is there a reason that there aren't more Half* distributions. Say, HalfT?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> Nice article. That helped put some missing pieces together for me. I&#39;m also giving a talk tomorrow showing some results computed using PyMC, so it&#39;ll help me explain MCMC and Metropolis sampling correctly :)",
  "id": "5642bc0e565da33267ffd54e",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2015-11-11T03:54:54.009Z",
  "text": "@twiecki Nice article. That helped put some missing pieces together for me. I'm also giving a talk tomorrow showing some results computed using PyMC, so it'll help me explain MCMC and Metropolis sampling correctly :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stevenmanton\" class=\"mention\">@stevenmanton</span> no good reason, would be good to add them (HalfCauchy is like HalfT with df=1)",
  "id": "564310c96420c33467a15f5c",
  "issues": [],
  "mentions": [
   {
    "screenName": "stevenmanton",
    "userId": "55cac5260fc9f982bead1637",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2015-11-11T09:56:25.661Z",
  "text": "@stevenmanton no good reason, would be good to add them (HalfCauchy is like HalfT with df=1)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"richardotis\" class=\"mention\">@richardotis</span> thanks, glad it&#39;s useful",
  "id": "564310d5565da33267ffe313",
  "issues": [],
  "mentions": [
   {
    "screenName": "richardotis",
    "userId": "55a137c15e0d51bd787b0b26",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2015-11-11T09:56:37.847Z",
  "text": "@richardotis thanks, glad it's useful",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/jonsedar",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/708325?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/708325?v=3&s=60",
   "displayName": "Jonathan Sedar",
   "gv": "3",
   "id": "54745f8fdb8155e6700d7f39",
   "url": "/jonsedar",
   "username": "jonsedar",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"markdregan\" class=\"mention\">@markdregan</span> nice tutorial! I used pymc3 (and emcee) for a project last year that effectively implemented a Bayesian Aalen Additive model. Do you want PR&#39;s?",
  "id": "5645ac976296df7f6efe8ea5",
  "issues": [],
  "mentions": [
   {
    "screenName": "markdregan",
    "userId": "560b34170fc9f982beb240b7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2015-11-13T09:25:43.992Z",
  "text": "@markdregan nice tutorial! I used pymc3 (and emcee) for a project last year that effectively implemented a Bayesian Aalen Additive model. Do you want PR's?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jonsedar\" class=\"mention\">@jonsedar</span> definitely!",
  "id": "5648c1b7bb11d0727959689a",
  "issues": [],
  "mentions": [
   {
    "screenName": "jonsedar",
    "userId": "54745f8fdb8155e6700d7f39",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2015-11-15T17:32:39.686Z",
  "text": "@jonsedar definitely!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/markdregan",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1952278?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1952278?v=3&s=60",
   "displayName": "Mark Regan",
   "gv": "3",
   "id": "560b34170fc9f982beb240b7",
   "url": "/markdregan",
   "username": "markdregan"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jonsedar\" class=\"mention\">@jonsedar</span> - thank you! And yes,  I&#39;d love to get PRs for the tutorial. Aalen&#39;s additive model would be a great addition! <span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> - I only just saw your comment above RE future of that tutorial. We should chat. I started creating the tutorial to force me to learn PyMC3. I&#39;m happy for others to contribute and/or work on new sections in collaboration with others.",
  "id": "5648dc1abb11d07279596d0c",
  "issues": [],
  "mentions": [
   {
    "screenName": "jonsedar",
    "userId": "54745f8fdb8155e6700d7f39",
    "userIds": []
   },
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2015-11-15T19:25:14.511Z",
  "text": "@jonsedar - thank you! And yes,  I'd love to get PRs for the tutorial. Aalen's additive model would be a great addition! @twiecki - I only just saw your comment above RE future of that tutorial. We should chat. I started creating the tutorial to force me to learn PyMC3. I'm happy for others to contribute and/or work on new sections in collaboration with others.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "Are there any examples on reloading data from a backend, with the caveat that I don&#39;t want to have to rebuild my <code>Model</code> object? I only want to plot autocorrelations and access the existing traces, and my model construction step is a tad expensive time-wise for data exploration.",
  "id": "565cc561f0893e5f6b729d0d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-30T21:53:37.349Z",
  "text": "Are there any examples on reloading data from a backend, with the caveat that I don't want to have to rebuild my `Model` object? I only want to plot autocorrelations and access the existing traces, and my model construction step is a tad expensive time-wise for data exploration.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "I&#39;m using pymc2 in this case",
  "id": "565cc5846693bfd6058dd2b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-30T21:54:12.245Z",
  "text": "I'm using pymc2 in this case",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "If you save your trace to a backend like SQLite or HDF5 (or even txt) you can manipulate the traces entirely independently  of PyMC. It may not be worth going through the trouble of creating a model if all you want to do is summarize output. ",
  "id": "565cc5fb54a1cd41644fb8c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-30T21:56:11.701Z",
  "text": "If you save your trace to a backend like SQLite or HDF5 (or even txt) you can manipulate the traces entirely independently  of PyMC. It may not be worth going through the trouble of creating a model if all you want to do is summarize output. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "hm",
  "id": "565cc622a3d522606b386444",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-30T21:56:50.198Z",
  "text": "hm",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "ok, so I can call the pytables library directly to access it? I&#39;m only familiar with using the pymc convenience functions for this step",
  "id": "565cc67c6693bfd6058dd2dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-30T21:58:20.871Z",
  "text": "ok, so I can call the pytables library directly to access it? I'm only familiar with using the pymc convenience functions for this step",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "I&#39;m using the hdf5 backend",
  "id": "565cc68e54a1cd41644fb8e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-30T21:58:38.879Z",
  "text": "I'm using the hdf5 backend",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Yes, PyMC just wraps calls to pytables to implement the backend. You can still use PyMC\u2019s plotting functions with raw traces (ndarrays) if you like.",
  "id": "565cf1d9a3d522606b3869ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-01T01:03:21.595Z",
  "text": "Yes, PyMC just wraps calls to pytables to implement the backend. You can still use PyMC\u2019s plotting functions with raw traces (ndarrays) if you like.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "I&#39;ve been reading about how DIC calculation is implemented, and it looks like computing DIC requires a sample of parameter space near the MAP to compute expectation, so I&#39;m guessing I need to do an MCMC run for that computation to be valid. That means I can&#39;t just simply MAP.fit(), if I&#39;m understanding right, since I won&#39;t have proper statistics for the distribution. Am I correct?",
  "id": "5665cfebb692dc8f48f4c9a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-07T18:28:59.124Z",
  "text": "I've been reading about how DIC calculation is implemented, and it looks like computing DIC requires a sample of parameter space near the MAP to compute expectation, so I'm guessing I need to do an MCMC run for that computation to be valid. That means I can't just simply MAP.fit(), if I'm understanding right, since I won't have proper statistics for the distribution. Am I correct?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "Reading some more, it looks like I only need the maximum value of the likelihood, so the MAP ought to be sufficient, at least if I use AIC instead of DIC.",
  "id": "5665d22e868b8da62a253995",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-07T18:38:38.270Z",
  "text": "Reading some more, it looks like I only need the maximum value of the likelihood, so the MAP ought to be sufficient, at least if I use AIC instead of DIC.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "You also need a trace of logp values I think",
  "id": "5666cf2baccacb9048920c23",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-08T12:38:03.107Z",
  "text": "You also need a trace of logp values I think",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "should be the expected logp, not the maximum",
  "id": "5666cf50835961e946e1dfde",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-08T12:38:40.608Z",
  "text": "should be the expected logp, not the maximum",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> <span data-link-type=\"mention\" data-screen-name=\"jsalvatier\" class=\"mention\">@jsalvatier</span> I\u2019ve added some PP text to the paper.",
  "id": "5667600c868b8da62a2576bd",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   },
   {
    "screenName": "jsalvatier",
    "userId": "5419c8f9163965c9bc20529d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-08T22:56:12.278Z",
  "text": "@twiecki @jsalvatier I\u2019ve added some PP text to the paper.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "perfect",
  "id": "56680abfc4b3d2a52a6b1853",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-09T11:04:31.668Z",
  "text": "perfect",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I converted the gfx to pdf (but there&#39;s still a small issue with ordering it seems)",
  "id": "56680ace981d328249338d7f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-09T11:04:46.381Z",
  "text": "I converted the gfx to pdf (but there's still a small issue with ordering it seems)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stevenmanton",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3666725?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3666725?v=4&s=60",
   "displayName": "Steven Anton",
   "gv": "4",
   "id": "55cac5260fc9f982bead1637",
   "url": "/stevenmanton",
   "username": "stevenmanton",
   "v": 4
  },
  "html": "Has anyone experienced the &quot;Desired error not necessarily achieved due to precision loss.&quot; warning when using <code>find_MAP</code> before running MCMC? I have a model that is crippled because of this issue and I&#39;m not sure the best way to debug it. Sometimes, if I make small changes to the input data (like add/subtract a single data point), the model converges quickly and the MCMC runs without any issues.  I&#39;ve also tried a number of different optimizers without much success. Most of the time, the algorithm runs 0 iterations before throwing the warning, which makes me wonder if the gradient being reported is incorrect. In any case, any tips would be much appreciated!",
  "id": "566f0fe25d67e2860460ceb8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-14T18:52:18.127Z",
  "text": "Has anyone experienced the \"Desired error not necessarily achieved due to precision loss.\" warning when using `find_MAP` before running MCMC? I have a model that is crippled because of this issue and I'm not sure the best way to debug it. Sometimes, if I make small changes to the input data (like add/subtract a single data point), the model converges quickly and the MCMC runs without any issues.  I've also tried a number of different optimizers without much success. Most of the time, the algorithm runs 0 iterations before throwing the warning, which makes me wonder if the gradient being reported is incorrect. In any case, any tips would be much appreciated!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/anandpratap",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/628125?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/628125?v=3&s=60",
   "displayName": "Anand Pratap Singh",
   "gv": "3",
   "id": "5670bb7316b6c7089cbed8f9",
   "url": "/anandpratap",
   "username": "anandpratap"
  },
  "html": "For the NUTS sampler, is it possible to bypass auto generated gradient and use an analytically defined function as gradient?",
  "id": "5670bc573078c074765161c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-16T01:20:23.868Z",
  "text": "For the NUTS sampler, is it possible to bypass auto generated gradient and use an analytically defined function as gradient?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"anandpratap\" class=\"mention\">@anandpratap</span> why do you want to do that?",
  "id": "56714cc7c2305b2659d8615c",
  "issues": [],
  "mentions": [
   {
    "screenName": "anandpratap",
    "userId": "5670bb7316b6c7089cbed8f9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-16T11:36:39.201Z",
  "text": "@anandpratap why do you want to do that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/anandpratap",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/628125?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/628125?v=3&s=60",
   "displayName": "Anand Pratap Singh",
   "gv": "3",
   "id": "5670bb7316b6c7089cbed8f9",
   "url": "/anandpratap",
   "username": "anandpratap"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span>  My function consists of a differential equation solver, so I get the gradients using adjoints. At the moment I am using the <span data-link-type=\"mention\" data-screen-name=\"as_op\" class=\"mention\">@as_op</span> decorator for the function(say f), I think, I need to write the f.grad method(?). I am not sure about the return format though, specially for a vector valued f.",
  "id": "56717ef85e9f95036bebbd94",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   },
   {
    "screenName": "as_op",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-16T15:10:48.037Z",
  "text": "@twiecki  My function consists of a differential equation solver, so I get the gradients using adjoints. At the moment I am using the @as_op decorator for the function(say f), I think, I need to write the f.grad method(?). I am not sure about the return format though, specially for a vector valued f.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stevenmanton",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3666725?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3666725?v=4&s=60",
   "displayName": "Steven Anton",
   "gv": "4",
   "id": "55cac5260fc9f982bead1637",
   "url": "/stevenmanton",
   "username": "stevenmanton",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"anandpratap\" class=\"mention\">@anandpratap</span> It might be. I get stuck even before that, at the <code>find_MAP</code> step just trying to find a good starting point for the NUTS (or other) samplers. I&#39;ve actually found that using a numerical gradient in the optimizer helps in this case. (I&#39;ve added an option for this in the <code>find_MAP</code> function. PR to come.) Then, I just run the NUTS sampler for longer and it seems eventually to find the high probability region. This solution seems pretty unsatisfactory, though. I wonder, for example, why the analytical gradient should be so different than the numerical one. Issues with precision in theano, maybe?",
  "id": "56719b1ff99ceb846ae6461e",
  "issues": [],
  "mentions": [
   {
    "screenName": "anandpratap",
    "userId": "5670bb7316b6c7089cbed8f9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-16T17:10:55.410Z",
  "text": "@anandpratap It might be. I get stuck even before that, at the `find_MAP` step just trying to find a good starting point for the NUTS (or other) samplers. I've actually found that using a numerical gradient in the optimizer helps in this case. (I've added an option for this in the `find_MAP` function. PR to come.) Then, I just run the NUTS sampler for longer and it seems eventually to find the high probability region. This solution seems pretty unsatisfactory, though. I wonder, for example, why the analytical gradient should be so different than the numerical one. Issues with precision in theano, maybe?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/anandpratap",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/628125?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/628125?v=3&s=60",
   "displayName": "Anand Pratap Singh",
   "gv": "3",
   "id": "5670bb7316b6c7089cbed8f9",
   "url": "/anandpratap",
   "username": "anandpratap"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stevenmanton\" class=\"mention\">@stevenmanton</span> I am not familiar with theano, but as far as I know it uses automatic differentiation to generate the gradients. My function solves a nonlinear differential equation using time marching scheme, so using theano(as it is) is not possible. For the map solution, I don&#39;t use find_MAP function, I have my own optimizer to find the map solution which I pass on to pymc.",
  "id": "5671ac47c505c268728852ed",
  "issues": [],
  "mentions": [
   {
    "screenName": "stevenmanton",
    "userId": "55cac5260fc9f982bead1637",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-16T18:24:07.942Z",
  "text": "@stevenmanton I am not familiar with theano, but as far as I know it uses automatic differentiation to generate the gradients. My function solves a nonlinear differential equation using time marching scheme, so using theano(as it is) is not possible. For the map solution, I don't use find_MAP function, I have my own optimizer to find the map solution which I pass on to pymc.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"anandpratap\" class=\"mention\">@anandpratap</span> yes, I think you need to create a theano OP directly (<code>as_op</code> is just a convenience wrapper) <a href=\"http://deeplearning.net/software/theano/tutorial/extending_theano.html#op-structure\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://deeplearning.net/software/theano/tutorial/extending_theano.html#op-structure</a> and then overwrite <code>grad()</code> and <code>perform()</code>",
  "id": "5671c1aca95dea5d42150a06",
  "issues": [],
  "mentions": [
   {
    "screenName": "anandpratap",
    "userId": "5670bb7316b6c7089cbed8f9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-16T19:55:24.006Z",
  "text": "@anandpratap yes, I think you need to create a theano OP directly (`as_op` is just a convenience wrapper) http://deeplearning.net/software/theano/tutorial/extending_theano.html#op-structure and then overwrite `grad()` and `perform()`",
  "unread": false,
  "urls": [
   {
    "url": "http://deeplearning.net/software/theano/tutorial/extending_theano.html#op-structure"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stevenmanton\" class=\"mention\">@stevenmanton</span> that PR will be appreciated. it&#39;s odd indeed though. is this a special model?",
  "id": "5671c1d2f31bbe91555adfb9",
  "issues": [],
  "mentions": [
   {
    "screenName": "stevenmanton",
    "userId": "55cac5260fc9f982bead1637",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-16T19:56:02.135Z",
  "text": "@stevenmanton that PR will be appreciated. it's odd indeed though. is this a special model?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/anandpratap",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/628125?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/628125?v=3&s=60",
   "displayName": "Anand Pratap Singh",
   "gv": "3",
   "id": "5670bb7316b6c7089cbed8f9",
   "url": "/anandpratap",
   "username": "anandpratap"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> Thanks for the link. I tried adding an op but could not make it to work. Is there a way to disable the compilation to cuda etc. and use pure python? It always try to compile when I am using NUTS. I could not find anything by googling. Also, I don&#39;t know about the implementation but how easy/difficult will it be to pass a function for gradient directly in the pymc3 source? I think there should be an option of passing gradient function. ",
  "id": "5671f0d169a89a8f552ee45f",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-16T23:16:33.543Z",
  "text": "@twiecki Thanks for the link. I tried adding an op but could not make it to work. Is there a way to disable the compilation to cuda etc. and use pure python? It always try to compile when I am using NUTS. I could not find anything by googling. Also, I don't know about the implementation but how easy/difficult will it be to pass a function for gradient directly in the pymc3 source? I think there should be an option of passing gradient function. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"anandpratap\" class=\"mention\">@anandpratap</span> I&#39;m not aware, we just rely on theano to compute the gradient so it would have to work through that. maybe ask on the theano mailing list with your best-effort <code>Op</code>, they are very helpful",
  "id": "56725fd937169e856a753ce7",
  "issues": [],
  "mentions": [
   {
    "screenName": "anandpratap",
    "userId": "5670bb7316b6c7089cbed8f9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-17T07:10:17.933Z",
  "text": "@anandpratap I'm not aware, we just rely on theano to compute the gradient so it would have to work through that. maybe ask on the theano mailing list with your best-effort `Op`, they are very helpful",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/superbobry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/185856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/185856?v=4&s=60",
   "displayName": "Sergei Lebedev",
   "gv": "4",
   "id": "54e47f0815522ed4b3dc2640",
   "url": "/superbobry",
   "username": "superbobry",
   "v": 11
  },
  "html": "Hi, does PyMC3 have API docs somewhere? Can&#39;t find the link in the tutorial.",
  "id": "567a8787653b30761d75d5b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-23T11:37:43.239Z",
  "text": "Hi, does PyMC3 have API docs somewhere? Can't find the link in the tutorial.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-12-23T11:53:10.662Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/superbobry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/185856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/185856?v=4&s=60",
   "displayName": "Sergei Lebedev",
   "gv": "4",
   "id": "54e47f0815522ed4b3dc2640",
   "url": "/superbobry",
   "username": "superbobry",
   "v": 11
  },
  "html": "<p>And one more question: I have a DAG-structured prior where the parameter value for each node comes from a mixture of the values of its parents. Is it possible to encode this in PyMC3? </p><p>The problem I&#39;m currently facing is that  you can&#39;t index a list with a categorical variable:</p><pre><code class=\"python\"><span class=\"comment\"># The graph is traversed in topological order; ``j`` is the current node.</span>\nparents = list(g.in_degree_iter(j))\nI[j] = pm.Categorical(label(<span class=\"string\">\"I\"</span>), p=np.ones(len(parents)) / len(parents))\nphi[j] = pm.Normal(label(<span class=\"string\">\"phi\"</span>), mu=phi[parents[I[j]]], tau=tau)\n<span class=\"comment\">#                                      ^^^^^^^^^^^^^^^</span>\n<span class=\"comment\">#                                      How do I encode this?</span></code></pre>",
  "id": "567a8a133acb611716ff8710",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-23T11:48:35.419Z",
  "text": "And one more question: I have a DAG-structured prior where the parameter value for each node comes from a mixture of the values of its parents. Is it possible to encode this in PyMC3? \n\nThe problem I'm currently facing is that  you can't index a list with a categorical variable:\n```python\n# The graph is traversed in topological order; ``j`` is the current node.\nparents = list(g.in_degree_iter(j))\nI[j] = pm.Categorical(label(\"I\"), p=np.ones(len(parents)) / len(parents))\nphi[j] = pm.Normal(label(\"phi\"), mu=phi[parents[I[j]]], tau=tau)\n#                                      ^^^^^^^^^^^^^^^\n#                                      How do I encode this?\n```",
  "unread": false,
  "urls": [],
  "v": 5
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/superbobry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/185856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/185856?v=4&s=60",
   "displayName": "Sergei Lebedev",
   "gv": "4",
   "id": "54e47f0815522ed4b3dc2640",
   "url": "/superbobry",
   "username": "superbobry",
   "v": 11
  },
  "html": "This seems relevant: <span data-link-type=\"issue\" data-issue=\"502\" data-issue-repo=\"pymc-devs/pymc3\" class=\"issue\">pymc-devs/pymc3#502</span>. ",
  "id": "567aae170171d1791d01e72d",
  "issues": [
   {
    "number": "502",
    "repo": "pymc-devs/pymc3"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-23T14:22:15.966Z",
  "text": "This seems relevant: https://github.com/pymc-devs/pymc3/issues/502. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"superbobry\" class=\"mention\">@superbobry</span> unfortunately no API docs yet, will need sphinx for that",
  "id": "567ac2ce3acb611716ff8eaf",
  "issues": [],
  "mentions": [
   {
    "screenName": "superbobry",
    "userId": "54e47f0815522ed4b3dc2640",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-23T15:50:38.874Z",
  "text": "@superbobry unfortunately no API docs yet, will need sphinx for that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"superbobry\" class=\"mention\">@superbobry</span> can you try doing theano.shared() or theano.const() for parents",
  "id": "567ac2eb9606b15a055d69c4",
  "issues": [],
  "mentions": [
   {
    "screenName": "superbobry",
    "userId": "54e47f0815522ed4b3dc2640",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-23T15:51:07.195Z",
  "text": "@superbobry can you try doing theano.shared() or theano.const() for parents",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "everything has to be a theano object",
  "id": "567ac2f335e1a316162dfe40",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-23T15:51:15.599Z",
  "text": "everything has to be a theano object",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/superbobry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/185856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/185856?v=4&s=60",
   "displayName": "Sergei Lebedev",
   "gv": "4",
   "id": "54e47f0815522ed4b3dc2640",
   "url": "/superbobry",
   "username": "superbobry",
   "v": 11
  },
  "html": "Hmm, I think I can, yes. I will be able to index it with another theano var after that, right?",
  "id": "567aca970199d70069df7953",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-23T16:23:51.078Z",
  "text": "Hmm, I think I can, yes. I will be able to index it with another theano var after that, right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yes",
  "id": "567e6e2c9606b15a055dab82",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-26T10:38:36.174Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "does it work?",
  "id": "567e6e2d3c6894026924d592",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-26T10:38:37.977Z",
  "text": "does it work?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/superbobry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/185856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/185856?v=4&s=60",
   "displayName": "Sergei Lebedev",
   "gv": "4",
   "id": "54e47f0815522ed4b3dc2640",
   "url": "/superbobry",
   "username": "superbobry",
   "v": 11
  },
  "html": "Well, I&#39;m now able to define the model, but I can&#39;t compile it due to a missing input var. Is there a way to introduce a constant var (not an RV) into the model so that it&#39;s passed to logp and dlogp?",
  "id": "567fb5eb3acb611716ffdfa9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-12-27T09:56:59.524Z",
  "text": "Well, I'm now able to define the model, but I can't compile it due to a missing input var. Is there a way to introduce a constant var (not an RV) into the model so that it's passed to logp and dlogp?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "so T.const or T.shared doesn&#39;t work?",
  "id": "567fb60c653b30761d763618",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-12-27T09:57:32.469Z",
  "text": "so T.const or T.shared doesn't work?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/superbobry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/185856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/185856?v=4&s=60",
   "displayName": "Sergei Lebedev",
   "gv": "4",
   "id": "54e47f0815522ed4b3dc2640",
   "url": "/superbobry",
   "username": "superbobry",
   "v": 11
  },
  "html": "It&#39;s a bit tricky. I&#39;m doing a scan over an array of graph nodes to build the model. And it is this array I&#39;m missing when compiling logp.",
  "id": "567fb68635e1a316162e4fa8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-12-27T09:59:34.901Z",
  "text": "It's a bit tricky. I'm doing a scan over an array of graph nodes to build the model. And it is this array I'm missing when compiling logp.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "certainly sounds like it should be possible. maybe post the model?",
  "id": "567fb6b34f069158055bf1e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-12-27T10:00:19.685Z",
  "text": "certainly sounds like it should be possible. maybe post the model?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/superbobry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/185856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/185856?v=4&s=60",
   "displayName": "Sergei Lebedev",
   "gv": "4",
   "id": "54e47f0815522ed4b3dc2640",
   "url": "/superbobry",
   "username": "superbobry",
   "v": 11
  },
  "html": "Sure, <a href=\"https://gist.github.com/superbobry/c086cd75ea2c3ab2ed52\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/superbobry/c086cd75ea2c3ab2ed52</a>",
  "id": "567fb6bd9606b15a055dbff1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-12-27T10:00:29.072Z",
  "text": "Sure, https://gist.github.com/superbobry/c086cd75ea2c3ab2ed52",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/superbobry/c086cd75ea2c3ab2ed52"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/superbobry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/185856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/185856?v=4&s=60",
   "displayName": "Sergei Lebedev",
   "gv": "4",
   "id": "54e47f0815522ed4b3dc2640",
   "url": "/superbobry",
   "username": "superbobry",
   "v": 11
  },
  "html": "<code>T.constant(order, &quot;G&quot;)</code> is an array of nodes",
  "id": "567fb6dc4f069158055bf1e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-12-27T10:01:00.298Z",
  "text": "`T.constant(order, \"G\")` is an array of nodes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "NCHG?",
  "id": "567fb70d0171d1791d024260",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-12-27T10:01:49.330Z",
  "text": "NCHG?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/superbobry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/185856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/185856?v=4&s=60",
   "displayName": "Sergei Lebedev",
   "gv": "4",
   "id": "54e47f0815522ed4b3dc2640",
   "url": "/superbobry",
   "username": "superbobry",
   "v": 11
  },
  "html": "non-central hypergeometric distribution, added to the gist above",
  "id": "567fb7484f069158055bf1e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-12-27T10:02:48.310Z",
  "text": "non-central hypergeometric distribution, added to the gist above",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "out of curiosity, what kind of model is that?",
  "id": "567fb7753c6894026924e9fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-12-27T10:03:33.925Z",
  "text": "out of curiosity, what kind of model is that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/superbobry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/185856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/185856?v=4&s=60",
   "displayName": "Sergei Lebedev",
   "gv": "4",
   "id": "54e47f0815522ed4b3dc2640",
   "url": "/superbobry",
   "username": "superbobry",
   "v": 11
  },
  "html": "a model for gene ontology enrichment analysis, <a href=\"http://geneontology.org/page/go-enrichment-analysis\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://geneontology.org/page/go-enrichment-analysis</a>",
  "id": "567fb7cd3c6894026924ea02",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-27T10:05:01.071Z",
  "text": "a model for gene ontology enrichment analysis, http://geneontology.org/page/go-enrichment-analysis",
  "unread": false,
  "urls": [
   {
    "url": "http://geneontology.org/page/go-enrichment-analysis"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "interesting. and where are you getting the error?",
  "id": "567fb846653b30761d763625",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-27T10:07:02.772Z",
  "text": "interesting. and where are you getting the error?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "in the scan?",
  "id": "567fb8494f069158055bf1ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-27T10:07:05.214Z",
  "text": "in the scan?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/superbobry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/185856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/185856?v=4&s=60",
   "displayName": "Sergei Lebedev",
   "gv": "4",
   "id": "54e47f0815522ed4b3dc2640",
   "url": "/superbobry",
   "username": "superbobry",
   "v": 11
  },
  "html": "In plain terms: we have a graph of gene annotations and two sets of genes: the universe (i.e. all genes) and a subset of genes of interest. The goal is to find out most specific annotations describing the set of interesting genes.",
  "id": "567fb8993acb611716ffdfc4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-27T10:08:25.864Z",
  "text": "In plain terms: we have a graph of gene annotations and two sets of genes: the universe (i.e. all genes) and a subset of genes of interest. The goal is to find out most specific annotations describing the set of interesting genes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/superbobry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/185856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/185856?v=4&s=60",
   "displayName": "Sergei Lebedev",
   "gv": "4",
   "id": "54e47f0815522ed4b3dc2640",
   "url": "/superbobry",
   "username": "superbobry",
   "v": 11
  },
  "html": "Nope, the scan is fine. I get the error when calling <code>find_MAP</code>",
  "id": "567fb8aa3acb611716ffdfc6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-27T10:08:42.560Z",
  "text": "Nope, the scan is fine. I get the error when calling `find_MAP`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/superbobry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/185856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/185856?v=4&s=60",
   "displayName": "Sergei Lebedev",
   "gv": "4",
   "id": "54e47f0815522ed4b3dc2640",
   "url": "/superbobry",
   "username": "superbobry",
   "v": 11
  },
  "html": "<a href=\"https://files.gitter.im/pymc-devs/pymc/ggbb/model.svg\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/pymc-devs/pymc/ggbb/thumb/model.jpg\" alt=\"model.svg\" rel=\"nofollow\"></a>",
  "id": "567fb9900171d1791d024271",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-27T10:12:32.153Z",
  "text": "[![model.svg](https://files.gitter.im/pymc-devs/pymc/ggbb/thumb/model.jpg)](https://files.gitter.im/pymc-devs/pymc/ggbb/model.svg)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/ggbb/thumb/model.jpg"
   },
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/ggbb/model.svg"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "what&#39;s the error?",
  "id": "567fb9c54f069158055bf207",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-27T10:13:25.886Z",
  "text": "what's the error?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/superbobry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/185856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/185856?v=4&s=60",
   "displayName": "Sergei Lebedev",
   "gv": "4",
   "id": "54e47f0815522ed4b3dc2640",
   "url": "/superbobry",
   "username": "superbobry",
   "v": 11
  },
  "html": "You can see <code>G[t]</code> on the right here. Also the error message:<pre><code>A variable <span class=\"literal\">that</span> <span class=\"keyword\">is</span> an input <span class=\"keyword\">to</span> the graph was neither provided as an input <span class=\"keyword\">to</span> the <span class=\"keyword\">function</span> nor given a value. A chain <span class=\"keyword\">of</span> variables leading <span class=\"keyword\">from</span> <span class=\"keyword\">this</span> input <span class=\"keyword\">to</span> an output <span class=\"keyword\">is</span> [G[t], ScalarFromTensor.<span class=\"number\">0</span>, Subtensor{::, int64}.<span class=\"number\">0</span>, Sum{acc_dtype=int64}.<span class=\"number\">0</span>, Elemwise{sub,no_inplace}.<span class=\"number\">0</span>, Elemwise{floor,no_inplace}.<span class=\"number\">0</span>, Elemwise{Cast{int32}}.<span class=\"number\">0</span>, Elemwise{le,no_inplace}.<span class=\"number\">0</span>, Elemwise{mul,no_inplace}.<span class=\"number\">0</span>, Elemwise{mul,no_inplace}.<span class=\"number\">0</span>, Elemwise{<span class=\"keyword\">switch</span>,no_inplace}.<span class=\"number\">0</span>, Sum{acc_dtype=float64}.<span class=\"number\">0</span>, Sum{acc_dtype=float64}.<span class=\"number\">0</span>, Elemwise{add,no_inplace}.<span class=\"number\">0</span>].</code></pre>",
  "id": "567fb9c60171d1791d024274",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-27T10:13:26.628Z",
  "text": "You can see `G[t]` on the right here. Also the error message:\n\n```\nA variable that is an input to the graph was neither provided as an input to the function nor given a value. A chain of variables leading from this input to an output is [G[t], ScalarFromTensor.0, Subtensor{::, int64}.0, Sum{acc_dtype=int64}.0, Elemwise{sub,no_inplace}.0, Elemwise{floor,no_inplace}.0, Elemwise{Cast{int32}}.0, Elemwise{le,no_inplace}.0, Elemwise{mul,no_inplace}.0, Elemwise{mul,no_inplace}.0, Elemwise{switch,no_inplace}.0, Sum{acc_dtype=float64}.0, Sum{acc_dtype=float64}.0, Elemwise{add,no_inplace}.0]. \n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "from <code>T.constant(order, &quot;G&quot;)</code>?",
  "id": "567fba143acb611716ffdfd7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-27T10:14:44.035Z",
  "text": "from `T.constant(order, \"G\")`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/superbobry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/185856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/185856?v=4&s=60",
   "displayName": "Sergei Lebedev",
   "gv": "4",
   "id": "54e47f0815522ed4b3dc2640",
   "url": "/superbobry",
   "username": "superbobry",
   "v": 11
  },
  "html": "yep",
  "id": "567fba1f35e1a316162e4fd0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-27T10:14:55.067Z",
  "text": "yep",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/superbobry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/185856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/185856?v=4&s=60",
   "displayName": "Sergei Lebedev",
   "gv": "4",
   "id": "54e47f0815522ed4b3dc2640",
   "url": "/superbobry",
   "username": "superbobry",
   "v": 11
  },
  "html": "A relevant part of the stacktrace<pre><code>    <span class=\"number\">143</span>     <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fastlogp</span>(</span>self):\n    <span class=\"number\">144</span>         <span class=\"string\">\"\"\"Compiled log probability density function\"\"\"</span>\n--&gt; <span class=\"number\">145</span>         <span class=\"keyword\">return</span> self.model.fastfn(self.logpt)</code></pre>",
  "id": "567fba8035e1a316162e4fd5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-27T10:16:32.596Z",
  "text": "A relevant part of the stacktrace\n```\n    143     def fastlogp(self):\n    144         \"\"\"Compiled log probability density function\"\"\"\n--> 145         return self.model.fastfn(self.logpt)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "ok, that&#39;s compiling the theano expression",
  "id": "567fba974f069158055bf215",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-27T10:16:55.197Z",
  "text": "ok, that's compiling the theano expression",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I&#39;m afraid I&#39;m not enough of a theano expert",
  "id": "567fbaa99606b15a055dc01f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-27T10:17:13.892Z",
  "text": "I'm afraid I'm not enough of a theano expert",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "but that&#39;s what I think, it seems more like a theano issue than a pymc3 issue",
  "id": "567fbab60199d70069dfd080",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-27T10:17:26.213Z",
  "text": "but that's what I think, it seems more like a theano issue than a pymc3 issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "so maybe asking on their mailing list",
  "id": "567fbabe0171d1791d02427d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-27T10:17:34.061Z",
  "text": "so maybe asking on their mailing list",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/superbobry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/185856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/185856?v=4&s=60",
   "displayName": "Sergei Lebedev",
   "gv": "4",
   "id": "54e47f0815522ed4b3dc2640",
   "url": "/superbobry",
   "username": "superbobry",
   "v": 11
  },
  "html": "Yes, thank you, I&#39;ll give it a try",
  "id": "567fbdb535e1a316162e4ffa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-27T10:30:13.312Z",
  "text": "Yes, thank you, I'll give it a try",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"superbobry\" class=\"mention\">@superbobry</span>  My (super frustrating) experience with theano has been that it&#39;s really easy for your input variables to get disconnected from the rest of the graph when using <code>scan</code>.  I&#39;m not familiar enough with theano or your model to offer detailed advice, but my read on your code plus the error message is that, somewhere along the way, the variables used to build the computational graph do not refer to the input variables you try to use to evaluate it, despite being theoretically equivalent. Theano requires them to be exactly the same object in memory. I&#39;ve seen this happen when trying to define symbolic arrays like you&#39;re doing.",
  "id": "568360379606b15a055e1c53",
  "issues": [],
  "mentions": [
   {
    "screenName": "superbobry",
    "userId": "54e47f0815522ed4b3dc2640",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-30T04:40:23.861Z",
  "text": "@superbobry  My (super frustrating) experience with theano has been that it's really easy for your input variables to get disconnected from the rest of the graph when using `scan`.  I'm not familiar enough with theano or your model to offer detailed advice, but my read on your code plus the error message is that, somewhere along the way, the variables used to build the computational graph do not refer to the input variables you try to use to evaluate it, despite being theoretically equivalent. Theano requires them to be exactly the same object in memory. I've seen this happen when trying to define symbolic arrays like you're doing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "Not sure if this will help, but after some back-and-forth with a theano guru, I had some working code using <code>scan</code> for a complex differentiation operation. The key is pre-constructing a cache of input variables and exclusively using references to the cache to build and evaluate the graph: <a href=\"https://groups.google.com/forum/#!topic/theano-users/33FeqcHrRAU\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://groups.google.com/forum/#!topic/theano-users/33FeqcHrRAU</a>",
  "id": "568360e69606b15a055e1c60",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-30T04:43:18.033Z",
  "text": "Not sure if this will help, but after some back-and-forth with a theano guru, I had some working code using `scan` for a complex differentiation operation. The key is pre-constructing a cache of input variables and exclusively using references to the cache to build and evaluate the graph: https://groups.google.com/forum/#!topic/theano-users/33FeqcHrRAU",
  "unread": false,
  "urls": [
   {
    "url": "https://groups.google.com/forum/#!topic/theano-users/33FeqcHrRAU"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "sounds tedious",
  "id": "5683c67635e1a316162eacef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-30T11:56:38.368Z",
  "text": "sounds tedious",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span>  In my case the graph construction operation completely swallowed the performance gains from doing the differentiation in Theano. I ended up switching tactics (to the autograd library) altogether.",
  "id": "568562e00199d70069e065d7",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-31T17:16:16.153Z",
  "text": "@twiecki  In my case the graph construction operation completely swallowed the performance gains from doing the differentiation in Theano. I ended up switching tactics (to the autograd library) altogether.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<code>scan</code> is a nightmare.  As you have discovered. ",
  "id": "568563449606b15a055e526b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-31T17:17:56.381Z",
  "text": "`scan` is a nightmare.  As you have discovered. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "Admittedly the issues theano has with my arithmetically straightforward (+-*/, log, exp) but large (~1000s of ops) graphs has kept me on pymc2 versus 3",
  "id": "568563a10171d1791d02d902",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-31T17:19:29.958Z",
  "text": "Admittedly the issues theano has with my arithmetically straightforward (+-*/, log, exp) but large (~1000s of ops) graphs has kept me on pymc2 versus 3",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "graph construction? if you were able to cache a model, would that help?",
  "id": "568685394f069158055c964c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-01-01T13:55:05.476Z",
  "text": "graph construction? if you were able to cache a model, would that help?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "Model caching doesn&#39;t do me much good because my models are constructed at run-time based on the contents of an input file. My data flow is Input File -&gt; SymPy graph object -&gt; f(.), df/dxi(.), hess(f)(.). To be competitive performance-wise with alternative libraries that whole process needs to take less than, e.g., 30 seconds for a particular input, plus maybe another 5-10 seconds to perform the actual calculation. Theano was requiring &gt;5 minutes to build the graph for a ~50% reduction in calculation time. Caching did help, when it worked, but I would consistently get cache misses on the same input for unknown reasons, perhaps stochasticity in the SymPy graph due to dict ordering. I didn&#39;t end up running it to ground because I ended up switching to autograd for differentiation.",
  "id": "56869fa335e1a316162eec7c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-01-01T15:47:47.616Z",
  "text": "Model caching doesn't do me much good because my models are constructed at run-time based on the contents of an input file. My data flow is Input File -> SymPy graph object -> f(.), df/dxi(.), hess(f)(.). To be competitive performance-wise with alternative libraries that whole process needs to take less than, e.g., 30 seconds for a particular input, plus maybe another 5-10 seconds to perform the actual calculation. Theano was requiring >5 minutes to build the graph for a ~50% reduction in calculation time. Caching did help, when it worked, but I would consistently get cache misses on the same input for unknown reasons, perhaps stochasticity in the SymPy graph due to dict ordering. I didn't end up running it to ground because I ended up switching to autograd for differentiation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "makes sense",
  "id": "568a5dad35e1a316162f4312",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-01-04T11:55:25.621Z",
  "text": "makes sense",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/jonsedar",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/708325?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/708325?v=3&s=60",
   "displayName": "Jonathan Sedar",
   "gv": "3",
   "id": "54745f8fdb8155e6700d7f39",
   "url": "/jonsedar",
   "username": "jonsedar",
   "v": 2
  },
  "html": "Any thoughts on python3.5 compatibility? I know it&#39;s a pain to keep up with latest releases - and I don&#39;t exactly require 3.5 - just wondering if 3.5 may be already compatible. If it&#39;s not compatible, I&#39;d be happy to try to convert things if someone can suggest a starting point.",
  "id": "56939ba8b1f439094a0771c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-01-11T12:10:16.940Z",
  "text": "Any thoughts on python3.5 compatibility? I know it's a pain to keep up with latest releases - and I don't exactly require 3.5 - just wondering if 3.5 may be already compatible. If it's not compatible, I'd be happy to try to convert things if someone can suggest a starting point.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "should be compatible",
  "id": "5693dd72d739f50a3602e963",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-01-11T16:50:58.026Z",
  "text": "should be compatible",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I use py 3.5",
  "id": "5693dd760712a5b63b4cc338",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-01-11T16:51:02.142Z",
  "text": "I use py 3.5",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Likewise. Works fine. ",
  "id": "5693e21e7669220736030ece",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-01-11T17:10:54.111Z",
  "text": "Likewise. Works fine. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/jonsedar",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/708325?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/708325?v=3&s=60",
   "displayName": "Jonathan Sedar",
   "gv": "3",
   "id": "54745f8fdb8155e6700d7f39",
   "url": "/jonsedar",
   "username": "jonsedar",
   "v": 2
  },
  "html": "Nice, I\u2019ll make the switch then, cheers!",
  "id": "5694ed020712a5b63b4cea65",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-01-12T12:09:38.204Z",
  "text": "Nice, I\u2019ll make the switch then, cheers!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/datnamer",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=60",
   "displayName": "datnamer",
   "gv": "4",
   "id": "54602d6fdb8155e6700d316b",
   "url": "/datnamer",
   "username": "datnamer",
   "v": 10
  },
  "html": "Hi everyone. I&#39;ve been thinking about how to express models in python other than with canned formula of patsy. Would it be feasible to factor  context manager model syntax be factored out of Pymc 3 into its own package? Would MLE models in statsmodels and other packages benefit from such a thing?",
  "id": "569828cd59e3d04215bbd177",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-01-14T23:01:33.824Z",
  "text": "Hi everyone. I've been thinking about how to express models in python other than with canned formula of patsy. Would it be feasible to factor  context manager model syntax be factored out of Pymc 3 into its own package? Would MLE models in statsmodels and other packages benefit from such a thing?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/datnamer",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=60",
   "displayName": "datnamer",
   "gv": "4",
   "id": "54602d6fdb8155e6700d316b",
   "url": "/datnamer",
   "username": "datnamer",
   "v": 10
  },
  "html": "Or is it inextricable from theano",
  "id": "569828de3165a6af1a3bd7a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-01-14T23:01:50.829Z",
  "text": "Or is it inextricable from theano",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stevenmanton",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3666725?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3666725?v=4&s=60",
   "displayName": "Steven Anton",
   "gv": "4",
   "id": "55cac5260fc9f982bead1637",
   "url": "/stevenmanton",
   "username": "stevenmanton",
   "v": 4
  },
  "html": "I really like the idea of an implementation-agnostic API for specifying stochastic models. I think pymc3 has a pretty good interface, but I think it&#39;s pretty tied to the theano implementation right now. I don&#39;t have a good sense for how much work it would be to factor out that dependence.",
  "id": "56993ff459e3d04215bbfcd7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-01-15T18:52:36.769Z",
  "text": "I really like the idea of an implementation-agnostic API for specifying stochastic models. I think pymc3 has a pretty good interface, but I think it's pretty tied to the theano implementation right now. I don't have a good sense for how much work it would be to factor out that dependence.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I was wondering the same thing",
  "id": "569a75e559e3d04215bc1ec8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-01-16T16:55:01.534Z",
  "text": "I was wondering the same thing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "it should be trivial to port the distributions",
  "id": "569a7605a03e28ad1adf1478",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-01-16T16:55:33.851Z",
  "text": "it should be trivial to port the distributions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "it&#39;s no small refactor, that&#39;s for sure. but a pymc3 that depends on numpy (and autograd <a href=\"https://github.com/HIPS/autograd\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/HIPS/autograd</a>) is pretty tempting. the key then will be whether numba can work with that so that we get speed",
  "id": "569a7698c391361d48eb7705",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-01-16T16:58:00.065Z",
  "text": "it's no small refactor, that's for sure. but a pymc3 that depends on numpy (and autograd https://github.com/HIPS/autograd) is pretty tempting. the key then will be whether numba can work with that so that we get speed",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/HIPS/autograd"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "at the end of the day, you need logp and dlogp of the model",
  "id": "569a76b959e3d04215bc1ee3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-01-16T16:58:33.390Z",
  "text": "at the end of the day, you need logp and dlogp of the model",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/datnamer",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=60",
   "displayName": "datnamer",
   "gv": "4",
   "id": "54602d6fdb8155e6700d316b",
   "url": "/datnamer",
   "username": "datnamer",
   "v": 10
  },
  "html": "Super tempting :) Here is an issue fro numba support",
  "id": "569ade72a03e28ad1adf2233",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-01-17T00:21:06.769Z",
  "text": "Super tempting :) Here is an issue fro numba support",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/datnamer",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=60",
   "displayName": "datnamer",
   "gv": "4",
   "id": "54602d6fdb8155e6700d316b",
   "url": "/datnamer",
   "username": "datnamer",
   "v": 10
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"47\" data-issue-repo=\"HIPS/autograd\" class=\"issue\">HIPS/autograd#47</span>",
  "id": "569adee05de13b3f15e37d4e",
  "issues": [
   {
    "number": "47",
    "repo": "HIPS/autograd"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-01-17T00:22:56.248Z",
  "text": "https://github.com/HIPS/autograd/issues/47",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"datnamer\" class=\"mention\">@datnamer</span> I am highly interested in such a project, as I mentioned in that issue. I&#39;m a fan of SymPy for expressing symbolic models because of its highly extensible nature and good community support. For pymc, SymPy already has the notion of stochastic variables: <a href=\"http://docs.sympy.org/latest/modules/stats.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.sympy.org/latest/modules/stats.html</a></p><p>They have the concept of a &#39;Printer&#39; which makes it very easy to translate SymPy graphs into arbitrary forms. I built my project&#39;s model serialization/export around it because it&#39;s so convenient. The &#39;lambdify&#39; function handles the common case of turning graphs into callable functions.</p><p>As we discussed in that issue, though, the key for performance is good backpropagation support such as what autograd can provide. &#39;lambdify&#39; works with autograd in numpy mode today, but if we had it working with numba it&#39;d be a killer feature of the scientific Python stack, I think.</p>",
  "id": "569aebd1a03e28ad1adf235d",
  "issues": [],
  "mentions": [
   {
    "screenName": "datnamer",
    "userId": "54602d6fdb8155e6700d316b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-01-17T01:18:09.030Z",
  "text": "@datnamer I am highly interested in such a project, as I mentioned in that issue. I'm a fan of SymPy for expressing symbolic models because of its highly extensible nature and good community support. For pymc, SymPy already has the notion of stochastic variables: http://docs.sympy.org/latest/modules/stats.html\n\nThey have the concept of a 'Printer' which makes it very easy to translate SymPy graphs into arbitrary forms. I built my project's model serialization/export around it because it's so convenient. The 'lambdify' function handles the common case of turning graphs into callable functions.\n\nAs we discussed in that issue, though, the key for performance is good backpropagation support such as what autograd can provide. 'lambdify' works with autograd in numpy mode today, but if we had it working with numba it'd be a killer feature of the scientific Python stack, I think.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.sympy.org/latest/modules/stats.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "If your #PyMC3 model uses the <code>T</code> distribution, you will have to change it to <code>StudentT</code> <span data-link-type=\"issue\" data-issue=\"905\" data-issue-repo=\"pymc-devs/pymc3\" class=\"issue\">pymc-devs/pymc3#905</span>",
  "id": "569ca3f959e3d04215bc5b7e",
  "issues": [
   {
    "number": "905",
    "repo": "pymc-devs/pymc3"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-01-18T08:36:09.331Z",
  "text": "If your #PyMC3 model uses the `T` distribution, you will have to change it to `StudentT` https://github.com/pymc-devs/pymc3/pull/905",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"richardotis\" class=\"mention\">@richardotis</span> another problem with SymPy is lack of support for multivariate cases",
  "id": "569ca4365de13b3f15e3abea",
  "issues": [],
  "mentions": [
   {
    "screenName": "richardotis",
    "userId": "55a137c15e0d51bd787b0b26",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-01-18T08:37:10.671Z",
  "text": "@richardotis another problem with SymPy is lack of support for multivariate cases",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"richardotis\" class=\"mention\">@richardotis</span> <span data-link-type=\"issue\" data-issue=\"178\" data-issue-repo=\"pymc-devs/pymc3\" class=\"issue\">pymc-devs/pymc3#178</span>",
  "id": "569ca45159e3d04215bc5b87",
  "issues": [
   {
    "number": "178",
    "repo": "pymc-devs/pymc3"
   }
  ],
  "mentions": [
   {
    "screenName": "richardotis",
    "userId": "55a137c15e0d51bd787b0b26",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-01-18T08:37:37.985Z",
  "text": "@richardotis https://github.com/pymc-devs/pymc3/issues/178",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> Looks like the pros and cons were weighed long before I was even on the scene. :) Glad to know it was at least considered.",
  "id": "569d9ef159e3d04215bc88c0",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-01-19T02:26:57.087Z",
  "text": "@twiecki Looks like the pros and cons were weighed long before I was even on the scene. :) Glad to know it was at least considered.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "actually I think autograd can be used quite easily. the problem with pymc3 is that when users want to define custom distributions. having to code them in theano is cumbersome. pymc3 works really well for common distributions though and you never even touch theano. thus, for the case of the user-defined function all we have to do is write a theano op generator that takes a numpy function that returns logp and uses autograd to compute the gradient. that&#39;s all that is required to build a theano op that can be used with the rest of the model",
  "id": "569ebf03c391361d48ec1464",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-01-19T22:56:03.507Z",
  "text": "actually I think autograd can be used quite easily. the problem with pymc3 is that when users want to define custom distributions. having to code them in theano is cumbersome. pymc3 works really well for common distributions though and you never even touch theano. thus, for the case of the user-defined function all we have to do is write a theano op generator that takes a numpy function that returns logp and uses autograd to compute the gradient. that's all that is required to build a theano op that can be used with the rest of the model",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "the result is transparent user-defined distributions in numpy rather than theano which can still be used with NUTS",
  "id": "569ebf2659e3d04215bcbdf0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-01-19T22:56:38.613Z",
  "text": "the result is transparent user-defined distributions in numpy rather than theano which can still be used with NUTS",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/jonsedar",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/708325?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/708325?v=3&s=60",
   "displayName": "Jonathan Sedar",
   "gv": "3",
   "id": "54745f8fdb8155e6700d7f39",
   "url": "/jonsedar",
   "username": "jonsedar",
   "v": 2
  },
  "html": "<p>Hi all, this is a bit off-topic</p><p>If there\u2019s anyone London-based on here you might be interested in a new meetup group that Markus Gessman and I are organising called Bayesian Mixer 7pm-9pm Fri 12 Feb at the Artillery Arms near Old St Station, London. (It\u2019s right by Bunhill Fields cemetery and you can see Thomas Bayes grave from the window!)</p><p>By day Markus heads up the analysis team at Lloyds of London, and I co-direct a small data science consultancy working in the insurance sector. We\u2019ve independently been using Bayesian techniques recently, him from the R/RStan corner and me from the Python/PyMC corner,  so we thought it might be fun to join forces and host a new meetup geared towards discussion of Bayesian inference.</p><p>We intend the group to be small (announcing only on the stan user group and here for now) and geared to open discussion of Bayesian inference, tools, techniques and theory. Neither of us is a great expert, we\u2019re really just users of the tools, but we\u2019d love to welcome academic discussion as well as real world examples etc. For the first meeting on 12 Feb we\u2019ll both give a short 30min talk on something interesting, and have a general chat amongst the group. We expect about 10-20 people.</p><p>If you\u2019d like more info we both maintain blogs at <a href=\"http://www.magesblog.com\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://www.magesblog.com</a> and <a href=\"http://blog.applied.ai\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://blog.applied.ai</a> and feel free to reach us on twitter at <span data-link-type=\"mention\" data-screen-name=\"MarkusGesmann\" class=\"mention\">@MarkusGesmann</span> and <span data-link-type=\"mention\" data-screen-name=\"jonsedar\" class=\"mention\">@jonsedar</span></p><p>Cheers!</p>",
  "id": "56a88d51eaf741c118d522fa",
  "issues": [],
  "mentions": [
   {
    "screenName": "MarkusGesmann",
    "userIds": []
   },
   {
    "screenName": "jonsedar",
    "userId": "54745f8fdb8155e6700d7f39",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-01-27T09:26:41.599Z",
  "text": "Hi all, this is a bit off-topic\n\nIf there\u2019s anyone London-based on here you might be interested in a new meetup group that Markus Gessman and I are organising called Bayesian Mixer 7pm-9pm Fri 12 Feb at the Artillery Arms near Old St Station, London. (It\u2019s right by Bunhill Fields cemetery and you can see Thomas Bayes grave from the window!)\n\nBy day Markus heads up the analysis team at Lloyds of London, and I co-direct a small data science consultancy working in the insurance sector. We\u2019ve independently been using Bayesian techniques recently, him from the R/RStan corner and me from the Python/PyMC corner,  so we thought it might be fun to join forces and host a new meetup geared towards discussion of Bayesian inference.\n\nWe intend the group to be small (announcing only on the stan user group and here for now) and geared to open discussion of Bayesian inference, tools, techniques and theory. Neither of us is a great expert, we\u2019re really just users of the tools, but we\u2019d love to welcome academic discussion as well as real world examples etc. For the first meeting on 12 Feb we\u2019ll both give a short 30min talk on something interesting, and have a general chat amongst the group. We expect about 10-20 people.\n\nIf you\u2019d like more info we both maintain blogs at http://www.magesblog.com and http://blog.applied.ai and feel free to reach us on twitter at @MarkusGesmann and @jonsedar\n\nCheers!",
  "unread": false,
  "urls": [
   {
    "url": "http://www.magesblog.com"
   },
   {
    "url": "http://blog.applied.ai"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Sounds like a great meetup. Unfortunately I&#39;m not going to be in the UK until June. ",
  "id": "56b005f380ad69394a7bd343",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-02-02T01:27:15.730Z",
  "text": "Sounds like a great meetup. Unfortunately I'm not going to be in the UK until June. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tp199911",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1941694?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1941694?v=3&s=60",
   "displayName": "tp199911",
   "gv": "3",
   "id": "55e04ee20fc9f982beaee3a8",
   "url": "/tp199911",
   "username": "tp199911"
  },
  "html": "Hello, I try to run an example (<a href=\"http://nbviewer.jupyter.org/github/aflaxman/pymc-examples/blob/master/seeds_re_logistic_regression_pymc3.ipynb\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://nbviewer.jupyter.org/github/aflaxman/pymc-examples/blob/master/seeds_re_logistic_regression_pymc3.ipynb</a>), but I have the weird result of completely flat (sd=0) traces. What could be causing this?",
  "id": "56b3569d073653e7151ba60a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-02-04T13:48:13.098Z",
  "text": "Hello, I try to run an example (http://nbviewer.jupyter.org/github/aflaxman/pymc-examples/blob/master/seeds_re_logistic_regression_pymc3.ipynb), but I have the weird result of completely flat (sd=0) traces. What could be causing this?",
  "unread": false,
  "urls": [
   {
    "url": "http://nbviewer.jupyter.org/github/aflaxman/pymc-examples/blob/master/seeds_re_logistic_regression_pymc3.ipynb"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "does find_MAP() set it to 0?",
  "id": "56b3581c65d6cbe729041337",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-02-04T13:54:36.952Z",
  "text": "does find_MAP() set it to 0?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "if so, you might want fix that to a reasonable starting place",
  "id": "56b3582625142e764dfce13b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-02-04T13:54:46.647Z",
  "text": "if so, you might want fix that to a reasonable starting place",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tp199911",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1941694?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1941694?v=3&s=60",
   "displayName": "tp199911",
   "gv": "3",
   "id": "55e04ee20fc9f982beaee3a8",
   "url": "/tp199911",
   "username": "tp199911"
  },
  "html": "No, MAP sets it close to what is also reported as BUGS parameter means, except for tau which gets set at around 10000",
  "id": "56b35a325cc201794d495f02",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-02-04T14:03:30.837Z",
  "text": "No, MAP sets it close to what is also reported as BUGS parameter means, except for tau which gets set at around 10000",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<code>tau = sd**-2</code>, right?",
  "id": "56b4859a25142e764dfd1874",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-02-05T11:20:58.759Z",
  "text": "`tau = sd**-2`, right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-02-05T11:34:39.073Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tp199911",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1941694?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1941694?v=3&s=60",
   "displayName": "tp199911",
   "gv": "3",
   "id": "55e04ee20fc9f982beaee3a8",
   "url": "/tp199911",
   "username": "tp199911"
  },
  "html": "Indeed. I tried setting <code>tau_log</code> (because it gets transformed) to <code>-1</code> before sampling but the effect stays the same: flatline traceplots",
  "id": "56b4889f70aea8e629e6736c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-02-05T11:33:51.580Z",
  "text": "Indeed. I tried setting `tau_log` (because it gets transformed) to `-1` before sampling but the effect stays the same: flatline traceplots",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/tp199911",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1941694?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1941694?v=3&s=60",
   "displayName": "tp199911",
   "gv": "3",
   "id": "55e04ee20fc9f982beaee3a8",
   "url": "/tp199911",
   "username": "tp199911"
  },
  "html": "The even weirder thing is: if I take the <code>b</code> random effect out of the model, it works as expected, but only if I don&#39;t define <code>tau</code> (which is now disconnected from the model); is this expected behaviour?",
  "id": "56b89eaed09b3b1c4dda479a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-02-08T13:57:02.720Z",
  "text": "The even weirder thing is: if I take the `b` random effect out of the model, it works as expected, but only if I don't define `tau` (which is now disconnected from the model); is this expected behaviour?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "have you played around with the priors?",
  "id": "56b8eb0f9f5549965ee1c91d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-02-08T19:22:55.040Z",
  "text": "have you played around with the priors?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "the gamma seems very narrow",
  "id": "56b8eb139f5549965ee1c91e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-02-08T19:22:59.560Z",
  "text": "the gamma seems very narrow",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "and I&#39;d use NUTS",
  "id": "56b8eb1e37ae7622436b802b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-02-08T19:23:10.808Z",
  "text": "and I'd use NUTS",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/naupa",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17130504?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17130504?v=3&s=60",
   "displayName": "naupa",
   "gv": "3",
   "id": "56b9c414e610378809c08ec9",
   "url": "/naupa",
   "username": "naupa"
  },
  "html": "Hi, First of all I want to say the pymc3 is a great library. I wanted to ask if missing values are supported in predictions (i use shared and sample_ppc) yet ? ",
  "id": "56b9c68fbd3dfe40303dd40a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-02-09T10:59:27.177Z",
  "text": "Hi, First of all I want to say the pymc3 is a great library. I wanted to ask if missing values are supported in predictions (i use shared and sample_ppc) yet ? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "missing values in the predictors?",
  "id": "56b9cd2c3fab8f985ec96ca6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-02-09T11:27:40.126Z",
  "text": "missing values in the predictors?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/naupa",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17130504?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17130504?v=3&s=60",
   "displayName": "naupa",
   "gv": "3",
   "id": "56b9c414e610378809c08ec9",
   "url": "/naupa",
   "username": "naupa"
  },
  "html": "yes, ich have products (say 0, 1, 2, 3) and product groups (say 0, 1). In the prediction I only know which product group I have, but not which product it is. This can happen if new products are released. So I filled the product index as masked array with -999 . ",
  "id": "56b9cfd29a395e5d1151ced1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-02-09T11:38:58.469Z",
  "text": "yes, ich have products (say 0, 1, 2, 3) and product groups (say 0, 1). In the prediction I only know which product group I have, but not which product it is. This can happen if new products are released. So I filled the product index as masked array with -999 . ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/naupa",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17130504?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17130504?v=3&s=60",
   "displayName": "naupa",
   "gv": "3",
   "id": "56b9c414e610378809c08ec9",
   "url": "/naupa",
   "username": "naupa"
  },
  "html": "I just do not know if my model doesn&#39;t generalize to new products or if the functionality is not there.",
  "id": "56b9d1a89f5549965ee1ea54",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-02-09T11:46:48.041Z",
  "text": "I just do not know if my model doesn't generalize to new products or if the functionality is not there.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "if it&#39;s a masked array that should work automatically",
  "id": "56b9d1c25e0e1860110b4511",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-02-09T11:47:14.214Z",
  "text": "if it's a masked array that should work automatically",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-02-09T11:49:16.492Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/naupa",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17130504?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17130504?v=3&s=60",
   "displayName": "naupa",
   "gv": "3",
   "id": "56b9c414e610378809c08ec9",
   "url": "/naupa",
   "username": "naupa"
  },
  "html": "<pre><code>   p_idx = data[group_column].values.copy() ; p_idx[:] = -<span class=\"number\">999</span>\n    x = np.ma.masked_values(p_idx.astype(np.int64), value=-<span class=\"number\">999</span>)\n    product_idx_shared.set_value(x)\n    predictions_insample = predict(hierarchical_trace[n_first:],\n                                   hierarchical_model)\n    <span class=\"keyword\">from</span> IPython <span class=\"keyword\">import</span> embed\n    embed()\n\n\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">predict</span><span class=\"params\">(trace, model)</span>:</span>\n    observed_name = str(model.observed_RVs[<span class=\"number\">0</span>]) \n    ppc = pm.sample_ppc(trace, model=model)\n    prediction = ppc[observed_name]\n    <span class=\"keyword\">return</span> prediction</code></pre>",
  "id": "56b9d1fd5e0e1860110b451b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-02-09T11:48:13.958Z",
  "text": "```     \n   p_idx = data[group_column].values.copy() ; p_idx[:] = -999\n    x = np.ma.masked_values(p_idx.astype(np.int64), value=-999)\n    product_idx_shared.set_value(x)\n    predictions_insample = predict(hierarchical_trace[n_first:],\n                                   hierarchical_model)\n    from IPython import embed\n    embed()\n    \n\ndef predict(trace, model):\n    observed_name = str(model.observed_RVs[0]) \n    ppc = pm.sample_ppc(trace, model=model)\n    prediction = ppc[observed_name]\n    return prediction\n```",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/naupa",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17130504?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17130504?v=3&s=60",
   "displayName": "naupa",
   "gv": "3",
   "id": "56b9c414e610378809c08ec9",
   "url": "/naupa",
   "username": "naupa"
  },
  "html": "this is the part, ok, thank you. ",
  "id": "56b9d2700fda6e254372aafe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-02-09T11:50:08.465Z",
  "text": "this is the part, ok, thank you. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/naupa",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17130504?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17130504?v=3&s=60",
   "displayName": "naupa",
   "gv": "3",
   "id": "56b9c414e610378809c08ec9",
   "url": "/naupa",
   "username": "naupa"
  },
  "html": "Perhaps i can adopt the radon example and see if it works there as expected ...",
  "id": "56b9d2899928374130b42f3d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-02-09T11:50:33.267Z",
  "text": "Perhaps i can adopt the radon example and see if it works there as expected ...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-02-10T10:28:34.571Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/jonsedar",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/708325?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/708325?v=3&s=60",
   "displayName": "Jonathan Sedar",
   "gv": "3",
   "id": "54745f8fdb8155e6700d7f39",
   "url": "/jonsedar",
   "username": "jonsedar",
   "v": 2
  },
  "html": "<p>Thanks <span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span>, it would be great to have a few of you guys along to present &amp; chat at the meetups. We\u2019ll have to try to keep going until June!</p><p>More info and signups at: <a href=\"http://www.magesblog.com/2016/02/first-bayesian-mixer-meeting-in-london.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://www.magesblog.com/2016/02/first-bayesian-mixer-meeting-in-london.html</a></p>",
  "id": "56bb10a43487c9930a5cd904",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2016-02-10T10:27:48.339Z",
  "text": "Thanks @fonnesbeck, it would be great to have a few of you guys along to present & chat at the meetups. We\u2019ll have to try to keep going until June!\n\nMore info and signups at: http://www.magesblog.com/2016/02/first-bayesian-mixer-meeting-in-london.html",
  "unread": false,
  "urls": [
   {
    "url": "http://www.magesblog.com/2016/02/first-bayesian-mixer-meeting-in-london.html"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/PabloLeon",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4320924?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4320924?v=4&s=60",
   "displayName": "PabloLeon",
   "gv": "4",
   "id": "56bb744fe610378809c0ca1c",
   "url": "/PabloLeon",
   "username": "PabloLeon",
   "v": 9
  },
  "html": "Hi! I would like to use Gaussian processes in combination with pymc3. Any advice on how to best proceed? Right now I would try to wrap the numpy log likelihood/ in an theano op.",
  "id": "56bb7b854dfe1fa71ffbf207",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-02-10T18:03:49.766Z",
  "text": "Hi! I would like to use Gaussian processes in combination with pymc3. Any advice on how to best proceed? Right now I would try to wrap the numpy log likelihood/ in an theano op.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I think creating the GP as a multivariate normal would be the way to go",
  "id": "56bcbe2296d748c4782f52df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-02-11T17:00:18.670Z",
  "text": "I think creating the GP as a multivariate normal would be the way to go",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "mainly requires careful construction of the covariance matrix",
  "id": "56bcbe2e1fbcdac178978b16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-02-11T17:00:30.421Z",
  "text": "mainly requires careful construction of the covariance matrix",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "there&#39;s a good example in the stan docs",
  "id": "56bcbe3efa79226456f9beb3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-02-11T17:00:46.743Z",
  "text": "there's a good example in the stan docs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "We may want to consider creating a separate repository for PyMC examples. They are beginning to pile up, and though they are very useful, we may not want them all in the main repo.",
  "id": "56cb51a2d659dcbc6ba27527",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-02-22T18:21:22.935Z",
  "text": "We may want to consider creating a separate repository for PyMC examples. They are beginning to pile up, and though they are very useful, we may not want them all in the main repo.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "I\u2019d suggest having a small subset that are useful for testing and that are referred to in the documentation to cover the PyMC3 use cases, and move the others.",
  "id": "56cb51c9d659dcbc6ba2752d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-02-22T18:22:01.190Z",
  "text": "I\u2019d suggest having a small subset that are useful for testing and that are referred to in the documentation to cover the PyMC3 use cases, and move the others.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> stuck in git purgatory after trying to merge your ADVI changes:",
  "id": "56cb56c0d659dcbc6ba27679",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-02-22T18:43:12.312Z",
  "text": "@twiecki stuck in git purgatory after trying to merge your ADVI changes:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<pre><code>fonnescj on Christy.local in ~/Repositories/pymc3(1h44m|advi*)\n$ gst\nOn branch advi\nYour branch is up-to-date with 'origin/advi'.\nChanges not staged for <span class=\"operator\"><span class=\"keyword\">commit</span>:\n  (<span class=\"keyword\">use</span> <span class=\"string\">\"git add &lt;file&gt;...\"</span> <span class=\"keyword\">to</span> <span class=\"keyword\">update</span> what will be committed)\n  (<span class=\"keyword\">use</span> <span class=\"string\">\"git checkout -- &lt;file&gt;...\"</span> <span class=\"keyword\">to</span> discard changes <span class=\"keyword\">in</span> working directory)\n\n    modified:   pymc3/variational/ADVI.py\n\n<span class=\"keyword\">no</span> changes added <span class=\"keyword\">to</span> <span class=\"keyword\">commit</span> (<span class=\"keyword\">use</span> <span class=\"string\">\"git add\"</span> <span class=\"keyword\">and</span>/<span class=\"keyword\">or</span> <span class=\"string\">\"git commit -a\"</span>)\nfonnescj <span class=\"keyword\">on</span> Christy.<span class=\"keyword\">local</span> <span class=\"keyword\">in</span> ~/Repositories/pymc3(<span class=\"number\">1</span>h44m|advi*)\n$ git rm -f pymc3/variational/ADVI.py\nrm <span class=\"string\">'pymc3/variational/ADVI.py'</span>\nfonnescj <span class=\"keyword\">on</span> Christy.<span class=\"keyword\">local</span> <span class=\"keyword\">in</span> ~/Repositories/pymc3(<span class=\"number\">1</span>h44m|advi*)\n$ gst\n<span class=\"keyword\">On</span> branch advi\nYour branch <span class=\"keyword\">is</span> up-<span class=\"keyword\">to</span>-<span class=\"built_in\">date</span> <span class=\"keyword\">with</span> <span class=\"string\">'origin/advi'</span>.\nChanges <span class=\"keyword\">to</span> be committed:\n  (<span class=\"keyword\">use</span> <span class=\"string\">\"git reset HEAD &lt;file&gt;...\"</span> <span class=\"keyword\">to</span> unstage)\n\n    deleted:    pymc3/variational/ADVI.py\n\nChanges <span class=\"keyword\">not</span> staged <span class=\"keyword\">for</span> <span class=\"keyword\">commit</span>:\n  (<span class=\"keyword\">use</span> <span class=\"string\">\"git add/rm &lt;file&gt;...\"</span> <span class=\"keyword\">to</span> <span class=\"keyword\">update</span> what will be committed)\n  (<span class=\"keyword\">use</span> <span class=\"string\">\"git checkout -- &lt;file&gt;...\"</span> <span class=\"keyword\">to</span> discard changes <span class=\"keyword\">in</span> working directory)\n\n    deleted:    pymc3/variational/advi.py\n\nfonnescj <span class=\"keyword\">on</span> Christy.<span class=\"keyword\">local</span> <span class=\"keyword\">in</span> ~/Repositories/pymc3(<span class=\"number\">1</span>h44m|advi*)</span></code></pre>any ideas?",
  "id": "56cb56dc631af87d5c4501fb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-02-22T18:43:40.256Z",
  "text": "```\nfonnescj on Christy.local in ~/Repositories/pymc3(1h44m|advi*)\n$ gst\nOn branch advi\nYour branch is up-to-date with 'origin/advi'.\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n\tmodified:   pymc3/variational/ADVI.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nfonnescj on Christy.local in ~/Repositories/pymc3(1h44m|advi*)\n$ git rm -f pymc3/variational/ADVI.py\nrm 'pymc3/variational/ADVI.py'\nfonnescj on Christy.local in ~/Repositories/pymc3(1h44m|advi*)\n$ gst\nOn branch advi\nYour branch is up-to-date with 'origin/advi'.\nChanges to be committed:\n  (use \"git reset HEAD <file>...\" to unstage)\n\n\tdeleted:    pymc3/variational/ADVI.py\n\nChanges not staged for commit:\n  (use \"git add/rm <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n\tdeleted:    pymc3/variational/advi.py\n\nfonnescj on Christy.local in ~/Repositories/pymc3(1h44m|advi*)\n\n```\n\nany ideas?\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Figured it out. Please disregard.",
  "id": "56cb5e6195f2abfa55e81b76",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-02-22T19:15:45.911Z",
  "text": "Figured it out. Please disregard.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "advi is so cool",
  "id": "56cb5e92bd660af56c724633",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-02-22T19:16:34.199Z",
  "text": "advi is so cool",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Its a good tool to have, particularly when NUTS does not cooperate.",
  "id": "56cb5f1dd659dcbc6ba278c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-02-22T19:18:53.447Z",
  "text": "Its a good tool to have, particularly when NUTS does not cooperate.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "it also make NUTS cooperate",
  "id": "56cb5f5bddb9925767543776",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-02-22T19:19:55.340Z",
  "text": "it also make NUTS cooperate",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "works way better when initializing NUTS with the mean",
  "id": "56cb5f66d12993d965571c08",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-02-22T19:20:06.073Z",
  "text": "works way better when initializing NUTS with the mean",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "should be even better when constructing a covariance matrix from the advi estimate",
  "id": "56cb5f74631af87d5c45042d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-02-22T19:20:20.980Z",
  "text": "should be even better when constructing a covariance matrix from the advi estimate",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "but haven&#39;t figured that out yet",
  "id": "56cb5f7addb992576754377d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-02-22T19:20:26.579Z",
  "text": "but haven't figured that out yet",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Interesting. Should we make <code>sample</code> use it when <code>start</code> is not specified?",
  "id": "56cb5fe1631af87d5c450440",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-02-22T19:22:09.374Z",
  "text": "Interesting. Should we make `sample` use it when `start` is not specified?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "I noticed my GP example breaks down when not initialized adequately.",
  "id": "56cb600495f2abfa55e81bc8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-02-22T19:22:44.306Z",
  "text": "I noticed my GP example breaks down when not initialized adequately.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "eventually, it probably needs a bit more testing. and it&#39;s kinda slow compared to find_MAP()",
  "id": "56cb602addb99257675437a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-02-22T19:23:22.682Z",
  "text": "eventually, it probably needs a bit more testing. and it's kinda slow compared to find_MAP()",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "\u2026 when find_MAP works.",
  "id": "56cb604cbd660af56c724696",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-02-22T19:23:56.215Z",
  "text": "\u2026 when find_MAP works.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "right",
  "id": "56cb605695f2abfa55e81bd7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-02-22T19:24:06.832Z",
  "text": "right",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "and yeah, GP worked way better when started at the advi mean estimate",
  "id": "56cb605fa6edbb623dbb56f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-02-22T19:24:15.522Z",
  "text": "and yeah, GP worked way better when started at the advi mean estimate",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "a lot times advi alone is probably sufficient",
  "id": "56cb6087bd660af56c7246a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-02-22T19:24:55.003Z",
  "text": "a lot times advi alone is probably sufficient",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "We could also stop advi automagically according to ELBO, which could shorten the run time.",
  "id": "56cb6087d12993d965571c47",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-02-22T19:24:55.857Z",
  "text": "We could also stop advi automagically according to ELBO, which could shorten the run time.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "good point",
  "id": "56cb6096d12993d965571c4e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-02-22T19:25:10.754Z",
  "text": "good point",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "and we should add generating a trace from the advi posterior (trivial as it&#39;s just sampling from a normal) but makes it useful if your analysis uses samples",
  "id": "56cb60cea6edbb623dbb570e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-02-22T19:26:06.732Z",
  "text": "and we should add generating a trace from the advi posterior (trivial as it's just sampling from a normal) but makes it useful if your analysis uses samples",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "yes, was thinking that too.",
  "id": "56cb60e3a6edbb623dbb5716",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-02-22T19:26:27.661Z",
  "text": "yes, was thinking that too.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "could use similar machinery to generate GP draws/predictions.",
  "id": "56cb610f95f2abfa55e81c0e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-02-22T19:27:11.443Z",
  "text": "could use similar machinery to generate GP draws/predictions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "interesting",
  "id": "56cb611b568360a24892dba6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-02-22T19:27:23.040Z",
  "text": "interesting",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/datnamer",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=60",
   "displayName": "datnamer",
   "gv": "4",
   "id": "54602d6fdb8155e6700d316b",
   "url": "/datnamer",
   "username": "datnamer",
   "v": 10
  },
  "html": "ADVI blogpost would be awesome and potentially draw new contrib and users :) really excited about this",
  "id": "56cb9852bd660af56c72535a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-02-22T23:22:58.123Z",
  "text": "ADVI blogpost would be awesome and potentially draw new contrib and users :) really excited about this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "agreed",
  "id": "56cc5bdb95f2abfa55e842ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-02-23T13:17:15.991Z",
  "text": "agreed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I&#39;d love to build a bayesian neural net and then do streaming advi",
  "id": "56cc5be6d659dcbc6ba2a000",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-02-23T13:17:26.795Z",
  "text": "I'd love to build a bayesian neural net and then do streaming advi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "should be pretty simple",
  "id": "56cc5bea568360a2489301ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-02-23T13:17:30.636Z",
  "text": "should be pretty simple",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "here&#39;s the bayesian neural net: <a href=\"https://gist.github.com/twiecki/14694749b5f85e89b246\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/twiecki/14694749b5f85e89b246</a>",
  "id": "56d33b129b88648d7a08b4f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-02-28T18:23:14.820Z",
  "text": "here's the bayesian neural net: https://gist.github.com/twiecki/14694749b5f85e89b246",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/twiecki/14694749b5f85e89b246"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/jonsedar",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/708325?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/708325?v=3&s=60",
   "displayName": "Jonathan Sedar",
   "gv": "3",
   "id": "54745f8fdb8155e6700d7f39",
   "url": "/jonsedar",
   "username": "jonsedar",
   "v": 2
  },
  "html": "<p>Hi all, I\u2019d like to run multiple chains in some models, but find I get recursion errors, usually when the model is beyond some level of complexity. I\u2019ve created this Notebook to reproduce the problem, any ideas? <a href=\"https://gist.github.com/jonsedar/b68136b53ee43465ecc9\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/jonsedar/b68136b53ee43465ecc9</a></p><p>PS: I suspect this is highly dependent upon the system, so whilst I\u2019ve added my version info etc - I won\u2019t be surprised if you can\u2019t replicate it :(</p>",
  "id": "56e2f60dc7364f7926be2461",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-03-11T16:45:01.785Z",
  "text": "Hi all, I\u2019d like to run multiple chains in some models, but find I get recursion errors, usually when the model is beyond some level of complexity. I\u2019ve created this Notebook to reproduce the problem, any ideas? https://gist.github.com/jonsedar/b68136b53ee43465ecc9\n\nPS: I suspect this is highly dependent upon the system, so whilst I\u2019ve added my version info etc - I won\u2019t be surprised if you can\u2019t replicate it :(",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/jonsedar/b68136b53ee43465ecc9"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/jonsedar",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/708325?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/708325?v=3&s=60",
   "displayName": "Jonathan Sedar",
   "gv": "3",
   "id": "54745f8fdb8155e6700d7f39",
   "url": "/jonsedar",
   "username": "jonsedar",
   "v": 2
  },
  "html": "Aha, I should have read this first: <span data-link-type=\"issue\" data-issue=\"879\" data-issue-repo=\"pymc-devs/pymc3\" class=\"issue\">pymc-devs/pymc3#879</span>",
  "id": "56e2f99bc7364f7926be257e",
  "issues": [
   {
    "number": "879",
    "repo": "pymc-devs/pymc3"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-03-11T17:00:11.217Z",
  "text": "Aha, I should have read this first: https://github.com/pymc-devs/pymc3/issues/879",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "Hi all, sorry to intrude here, I&#39;m having trouble using a theano/lasagne convnet as my energy model (logp) in pymc3, does anyone have experience with this? My main issues are float32 vs float64 conversion, and an apparent interaction between theano.config.compute_test_value=&#39;raise&#39; and compiling the convnet computational graph",
  "id": "56e81af211a3dbf55acc2980",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-03-15T14:23:46.031Z",
  "text": "Hi all, sorry to intrude here, I'm having trouble using a theano/lasagne convnet as my energy model (logp) in pymc3, does anyone have experience with this? My main issues are float32 vs float64 conversion, and an apparent interaction between theano.config.compute_test_value='raise' and compiling the convnet computational graph",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fhuszar\" class=\"mention\">@fhuszar</span> You may have better luck if you can post a minimal example of your issue here",
  "id": "56e81dc189dd3cce1006a368",
  "issues": [],
  "mentions": [
   {
    "screenName": "fhuszar",
    "userId": "545caccbdb8155e6700d2595",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2016-03-15T14:35:45.112Z",
  "text": "@fhuszar You may have better luck if you can post a minimal example of your issue here",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "<pre><code><span class=\"keyword\">from</span> pymc3 <span class=\"keyword\">import</span> Model, NUTS, sample\n<span class=\"keyword\">from</span> pymc3.distributions <span class=\"keyword\">import</span> DensityDist\ntheano.config.compute_test_value = <span class=\"string\">'raise'</span>\n\n<span class=\"keyword\">with</span> Model() <span class=\"keyword\">as</span> denoising_model:\n<span class=\"comment\">#     theano.config.compute_test_value = 'off'</span>\n\n    x = DensityDist(<span class=\"string\">'x'</span>,\n            logp= <span class=\"keyword\">lambda</span> value: -(value**<span class=\"number\">2</span>).sum(),\n            shape=(<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>),\n            testval=np.random.randn(<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">10</span>).astype(<span class=\"string\">'float32'</span>),\n            dtype=<span class=\"string\">'float32'</span>,\n        )\n\n    trace = sample(<span class=\"number\">10</span>)</code></pre>",
  "id": "56e81e0e0055f8f35a835e5d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-03-15T14:37:02.836Z",
  "text": "```\nfrom pymc3 import Model, NUTS, sample\nfrom pymc3.distributions import DensityDist\ntheano.config.compute_test_value = 'raise'\n\nwith Model() as denoising_model:\n#     theano.config.compute_test_value = 'off'\n\n    x = DensityDist('x',\n            logp= lambda value: -(value**2).sum(),\n            shape=(1, 1, 10, 10),\n            testval=np.random.randn(1,1,10,10).astype('float32'),\n            dtype='float32',\n        )\n\n    trace = sample(10)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "this gives an error ```",
  "id": "56e81e3b0055f8f35a835e6a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-03-15T14:37:47.437Z",
  "text": "this gives an error ```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "<pre><code><span class=\"type\">TypeError</span>: (<span class=\"symbol\">'The</span> <span class=\"class\"><span class=\"keyword\">type</span> <span class=\"title\">of</span> <span class=\"title\">the</span> <span class=\"title\">replacement</span> <span class=\"title\">must</span> <span class=\"title\">be</span> <span class=\"title\">compatible</span> <span class=\"keyword\"><span class=\"keyword\">with</span></span> <span class=\"title\">the</span> <span class=\"title\">type</span> <span class=\"title\">of</span> <span class=\"title\">the</span> <span class=\"title\">original</span> <span class=\"title\">Variable</span>.', <span class=\"title\">Sum</span>{</span>axis=[<span class=\"number\">0</span>, <span class=\"number\">1</span>], acc_dtype=float64}.<span class=\"number\">0</span>, <span class=\"type\">Elemwise</span>{mul,no_inplace}.<span class=\"number\">0</span>, <span class=\"type\">TensorType</span>(float32, matrix), <span class=\"type\">TensorType</span>(float64, matrix), <span class=\"symbol\">'local_sum_prod_mul_by_scala</span>r')</code></pre>",
  "id": "56e81e5c11a3dbf55acc2afc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-03-15T14:38:20.543Z",
  "text": "```\nTypeError: ('The type of the replacement must be compatible with the type of the original Variable.', Sum{axis=[0, 1], acc_dtype=float64}.0, Elemwise{mul,no_inplace}.0, TensorType(float32, matrix), TensorType(float64, matrix), 'local_sum_prod_mul_by_scalar')\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "instead of <code>-(value**2).sum()</code> I in fact want to have a <code>lasagne.layers.get_output(network)</code> which basically returns a theano graph with loads of convolutions in there",
  "id": "56e81ed0c7364f7926bf2cb9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-03-15T14:40:16.555Z",
  "text": "instead of `-(value**2).sum()` I in fact want to have a `lasagne.layers.get_output(network)` which basically returns a theano graph with loads of convolutions in there",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "but even this simple example does not work",
  "id": "56e81ee0618c335373ec0765",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-03-15T14:40:32.667Z",
  "text": "but even this simple example does not work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-03-15T14:48:36.363Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "even simpler example. This works without <code>dtype=&#39;float32&#39;</code> but not with it:<pre><code><span class=\"keyword\">from</span> pymc3 <span class=\"keyword\">import</span> Model, NUTS, sample\n<span class=\"keyword\">from</span> pymc3.distributions <span class=\"keyword\">import</span> DensityDist\ntheano.config.compute_test_value = <span class=\"string\">'raise'</span>\n\n<span class=\"keyword\">with</span> Model() <span class=\"keyword\">as</span> denoising_model:\n<span class=\"comment\">#     theano.config.compute_test_value = 'off'</span>\n\n    x = DensityDist(<span class=\"string\">'x'</span>,\n            logp= <span class=\"keyword\">lambda</span> value: value**<span class=\"number\">2</span>,\n            shape=(<span class=\"number\">1</span>,),\n            testval=<span class=\"number\">1.0</span>,\n            dtype=<span class=\"string\">'float32'</span>,\n        )\n\n    trace = sample(<span class=\"number\">10</span>)</code></pre>",
  "id": "56e820be0055f8f35a835f70",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-03-15T14:48:30.343Z",
  "text": "even simpler example. This works without `dtype='float32'` but not with it:\n```\nfrom pymc3 import Model, NUTS, sample\nfrom pymc3.distributions import DensityDist\ntheano.config.compute_test_value = 'raise'\n\nwith Model() as denoising_model:\n#     theano.config.compute_test_value = 'off'\n\n    x = DensityDist('x',\n            logp= lambda value: value**2,\n            shape=(1,),\n            testval=1.0,\n            dtype='float32',\n        )\n\n    trace = sample(10)\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/clbarnes",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8995328?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8995328?v=4&s=60",
   "displayName": "Chris Barnes",
   "gv": "4",
   "id": "54da419515522ed4b3dbda0c",
   "url": "/clbarnes",
   "username": "clbarnes",
   "v": 6
  },
  "html": "Hi all, fairly new user here (well, I&#39;ve been struggling with PyMC2 for a few months and though I&#39;d check in here in case I&#39;m missing something)",
  "id": "56eb19dfd37167a26ea0d22b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-03-17T20:55:59.042Z",
  "text": "Hi all, fairly new user here (well, I've been struggling with PyMC2 for a few months and though I'd check in here in case I'm missing something)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/clbarnes",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8995328?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8995328?v=4&s=60",
   "displayName": "Chris Barnes",
   "gv": "4",
   "id": "54da419515522ed4b3dbda0c",
   "url": "/clbarnes",
   "username": "clbarnes",
   "v": 6
  },
  "html": "I&#39;ve got a model with a bunch of boolean variables in it, and the hierarchy looks like this",
  "id": "56eb1afbc081db78786b0e45",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-03-17T21:00:43.054Z",
  "text": "I've got a model with a bunch of boolean variables in it, and the hierarchy looks like this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/clbarnes",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8995328?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8995328?v=4&s=60",
   "displayName": "Chris Barnes",
   "gv": "4",
   "id": "54da419515522ed4b3dbda0c",
   "url": "/clbarnes",
   "username": "clbarnes",
   "v": 6
  },
  "html": "<a href=\"https://files.gitter.im/pymc-devs/pymc/xhFg/new_anon.png\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/pymc-devs/pymc/xhFg/thumb/new_anon.png\" alt=\"new_anon.png\" rel=\"nofollow\"></a>",
  "id": "56eb1b028f56f9a16e0d996b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-03-17T21:00:50.565Z",
  "text": "[![new_anon.png](https://files.gitter.im/pymc-devs/pymc/xhFg/thumb/new_anon.png)](https://files.gitter.im/pymc-devs/pymc/xhFg/new_anon.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/xhFg/thumb/new_anon.png"
   },
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/xhFg/new_anon.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/clbarnes",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8995328?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8995328?v=4&s=60",
   "displayName": "Chris Barnes",
   "gv": "4",
   "id": "54da419515522ed4b3dbda0c",
   "url": "/clbarnes",
   "username": "clbarnes",
   "v": 6
  },
  "html": "I have a bunch of observed data of p(E|C,D), but nothing else",
  "id": "56eb1b3bde00745d3dd3838e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-03-17T21:01:47.019Z",
  "text": "I have a bunch of observed data of p(E|C,D), but nothing else",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/clbarnes",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8995328?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8995328?v=4&s=60",
   "displayName": "Chris Barnes",
   "gv": "4",
   "id": "54da419515522ed4b3dbda0c",
   "url": "/clbarnes",
   "username": "clbarnes",
   "v": 6
  },
  "html": "in real terms: C and D are the activities of particular sensory nerves, and E is a behavioural response. I have done experiments where I can trigger C and D and see whether E happens",
  "id": "56eb1be3d37167a26ea0d2f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-03-17T21:04:35.841Z",
  "text": "in real terms: C and D are the activities of particular sensory nerves, and E is a behavioural response. I have done experiments where I can trigger C and D and see whether E happens",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/clbarnes",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8995328?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8995328?v=4&s=60",
   "displayName": "Chris Barnes",
   "gv": "4",
   "id": "54da419515522ed4b3dbda0c",
   "url": "/clbarnes",
   "username": "clbarnes",
   "v": 6
  },
  "html": "is there a way of representing this conditional observed data in PyMC?",
  "id": "56eb1c0d6fbc43bf4098f381",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-03-17T21:05:17.370Z",
  "text": "is there a way of representing this conditional observed data in PyMC?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> sorry I&#39;m not staying on top of things this week. I&#39;m out of town until next week. ",
  "id": "56f2be16e247956f1e3066ec",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-03-23T16:02:30.382Z",
  "text": "@twiecki sorry I'm not staying on top of things this week. I'm out of town until next week. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "no worries :)",
  "id": "56fb8a56d9b73e635f6787fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-03-30T08:12:06.426Z",
  "text": "no worries :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fhuszar\" class=\"mention\">@fhuszar</span> Can you place pymc3 priors in lasagne?",
  "id": "56fb8aa5d39de41b495ee0df",
  "issues": [],
  "mentions": [
   {
    "screenName": "fhuszar",
    "userId": "545caccbdb8155e6700d2595",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-03-30T08:13:25.563Z",
  "text": "@fhuszar Can you place pymc3 priors in lasagne?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/mynameisfiber",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/47370?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/47370?v=3&s=60",
   "displayName": "Micha Gorelick",
   "gv": "3",
   "id": "54c81a1fdb8155e6700f279c",
   "url": "/mynameisfiber",
   "username": "mynameisfiber",
   "v": 2
  },
  "html": "Is there a way around this TensorVariable indexing problem? (<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> I see that you commented on it.... thoughts?) <a href=\"http://stackoverflow.com/questions/31473459/pymc3-how-to-implement-latent-dirichlet-allocation\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://stackoverflow.com/questions/31473459/pymc3-how-to-implement-latent-dirichlet-allocation</a>",
  "id": "56fd535b8d2a72471b7bdd76",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-03-31T16:42:03.974Z",
  "text": "Is there a way around this TensorVariable indexing problem? (@twiecki I see that you commented on it.... thoughts?) http://stackoverflow.com/questions/31473459/pymc3-how-to-implement-latent-dirichlet-allocation",
  "unread": false,
  "urls": [
   {
    "url": "http://stackoverflow.com/questions/31473459/pymc3-how-to-implement-latent-dirichlet-allocation"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "do you have a 2d dirichlet?",
  "id": "56fd564311ea211749c39742",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-03-31T16:54:27.771Z",
  "text": "do you have a 2d dirichlet?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/mynameisfiber",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/47370?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/47370?v=3&s=60",
   "displayName": "Micha Gorelick",
   "gv": "3",
   "id": "54c81a1fdb8155e6700f279c",
   "url": "/mynameisfiber",
   "username": "mynameisfiber",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> i don&#39;t really have anything... just trying to understand an LDA example in pymc3 to get a handle of how this package works",
  "id": "56fd5b25bbffcc665faafbbd",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-03-31T17:15:17.338Z",
  "text": "@twiecki i don't really have anything... just trying to understand an LDA example in pymc3 to get a handle of how this package works",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "Is this the latest PyMC publication? Patil A, Huard D, Fonnesbeck CJ. PyMC: Bayesian Stochastic Modelling in Python. Journal of statistical software. 2010;35(4):1-81.",
  "id": "56fd6e33e4a8384a1bbdb6fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-03-31T18:36:35.691Z",
  "text": "Is this the latest PyMC publication? Patil A, Huard D, Fonnesbeck CJ. PyMC: Bayesian Stochastic Modelling in Python. Journal of statistical software. 2010;35(4):1-81.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "no",
  "id": "56fd6e3f8f5147e119f23f10",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-03-31T18:36:47.193Z",
  "text": "no",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "Could you provide a link to the most recent one?",
  "id": "56fd6e5b11ea211749c39f48",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-03-31T18:37:15.420Z",
  "text": "Could you provide a link to the most recent one?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<a href=\"https://peerj.com/preprints/1686.pdf\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://peerj.com/preprints/1686.pdf</a>",
  "id": "56fd6e65e4a8384a1bbdb70a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-03-31T18:37:25.112Z",
  "text": "https://peerj.com/preprints/1686.pdf",
  "unread": false,
  "urls": [
   {
    "url": "https://peerj.com/preprints/1686.pdf"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "(was just looking it up)",
  "id": "56fd6e6bd9b73e635f681452",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-03-31T18:37:31.213Z",
  "text": "(was just looking it up)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "unless you want to cite pymc2",
  "id": "56fd6e7e11ea211749c39f54",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-03-31T18:37:50.286Z",
  "text": "unless you want to cite pymc2",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "then yours is correct",
  "id": "56fd6e8211ea211749c39f56",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-03-31T18:37:54.419Z",
  "text": "then yours is correct",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "I think all these calculations were done in 2",
  "id": "56fd6e978d2a72471b7be726",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-03-31T18:38:15.903Z",
  "text": "I think all these calculations were done in 2",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "So I&#39;ll just that one. Thanks!",
  "id": "56fd6eb076b6f9de194cf8aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-03-31T18:38:40.440Z",
  "text": "So I'll just that one. Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "then Patil et al is probably the correct citation, although I&#39;d love to have someone cite pymc3 ;)",
  "id": "56fd6eb7d9b73e635f681471",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-03-31T18:38:47.717Z",
  "text": "then Patil et al is probably the correct citation, although I'd love to have someone cite pymc3 ;)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "I actually way prefer the API for 3",
  "id": "56fd6fdabbffcc665fab02a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-03-31T18:43:38.669Z",
  "text": "I actually way prefer the API for 3",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "it&#39;s much more elegant and the code base is way lighter. theano is still sometimes a bit hard to work with if not familiar. for simple models it doesn&#39;t get exposed though",
  "id": "56fd7038e4a8384a1bbdb7c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-03-31T18:45:12.103Z",
  "text": "it's much more elegant and the code base is way lighter. theano is still sometimes a bit hard to work with if not familiar. for simple models it doesn't get exposed though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"775\" data-issue-repo=\"pymc-devs/pymc3\" class=\"issue\">pymc-devs/pymc3#775</span> merged!",
  "id": "56fd704ebbffcc665fab02e0",
  "issues": [
   {
    "number": "775",
    "repo": "pymc-devs/pymc3"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-03-31T18:45:34.173Z",
  "text": "https://github.com/pymc-devs/pymc3/pull/775 merged!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/clbarnes",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8995328?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8995328?v=4&s=60",
   "displayName": "Chris Barnes",
   "gv": "4",
   "id": "54da419515522ed4b3dbda0c",
   "url": "/clbarnes",
   "username": "clbarnes",
   "v": 6
  },
  "html": "any thoughts on the conditional observed data thing? seems like the overwhelming majority of scientists do experiments where they control a particular variable and look at the outcome, I&#39;d be surprised if there wasn&#39;t a way of doing that",
  "id": "56fd8715d478c81e2cbbf43b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-03-31T20:22:45.656Z",
  "text": "any thoughts on the conditional observed data thing? seems like the overwhelming majority of scientists do experiments where they control a particular variable and look at the outcome, I'd be surprised if there wasn't a way of doing that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "what are you referring to exactly?",
  "id": "56fe4a4476b6f9de194d2b59",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-04-01T10:15:32.138Z",
  "text": "what are you referring to exactly?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "Hi there, has anyone try to set up a cloud computing server for pymc3? I tried Amazon EC2 on a AWI (A Ubuntu GPU machine) with theano already setup , however pymc3 failed to install (lots of missing package for displaying figures etc). Any thoughts?",
  "id": "56ff7f42bbffcc665fab7586",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-04-02T08:13:54.716Z",
  "text": "Hi there, has anyone try to set up a cloud computing server for pymc3? I tried Amazon EC2 on a AWI (A Ubuntu GPU machine) with theano already setup , however pymc3 failed to install (lots of missing package for displaying figures etc). Any thoughts?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "we need a very recent theano build, in addition to matplotlib",
  "id": "56ffb6f18d2a72471b7c6262",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-04-02T12:11:29.851Z",
  "text": "we need a very recent theano build, in addition to matplotlib",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "so far we couldn&#39;t find speed improvements using GPU",
  "id": "56ffb6f9d9b73e635f688de9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-04-02T12:11:37.232Z",
  "text": "so far we couldn't find speed improvements using GPU",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "so you might as well stick to CPU for the time being",
  "id": "56ffb7008d2a72471b7c6263",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-04-02T12:11:44.732Z",
  "text": "so you might as well stick to CPU for the time being",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "I see, thx!",
  "id": "56ffd90711ea211749c42069",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-04-02T14:36:55.203Z",
  "text": "I see, thx!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> I use terminal.com with PyMC 3 all the time. Super easy to get up and running. ",
  "id": "57003d3bbbffcc665fab92d5",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-04-02T21:44:27.471Z",
  "text": "@twiecki I use terminal.com with PyMC 3 all the time. Super easy to get up and running. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "hadn&#39;t seen terminal.com. looks really interesting",
  "id": "5700cd9811ea211749c44281",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-04-03T08:00:24.053Z",
  "text": "hadn't seen terminal.com. looks really interesting",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "just checked it out, this is great",
  "id": "5700e891d9b73e635f68ba47",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-04-03T09:55:29.384Z",
  "text": "just checked it out, this is great",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "Thanks for the recommendation <span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> ! It really looks great. Do you have a snap that I can get a quick start?",
  "id": "5701053fd9b73e635f68bdf6",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2016-04-03T11:57:51.529Z",
  "text": "Thanks for the recommendation @fonnesbeck ! It really looks great. Do you have a snap that I can get a quick start?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "I just use the Python 3 Jupyter snapshot that they have. You should be able to search for I t on the site. ",
  "id": "570178ea11ea211749c45ba0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-04-03T20:11:22.989Z",
  "text": "I just use the Python 3 Jupyter snapshot that they have. You should be able to search for I t on the site. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "found it, thx!",
  "id": "57018874bbffcc665fabc310",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-04-03T21:17:40.177Z",
  "text": "found it, thx!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/clbarnes",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8995328?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8995328?v=4&s=60",
   "displayName": "Chris Barnes",
   "gv": "4",
   "id": "54da419515522ed4b3dbda0c",
   "url": "/clbarnes",
   "username": "clbarnes",
   "v": 6
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> my original question was here: </p><p>I&#39;ve got a model with a bunch of boolean variables in it, and the hierarchy looks like this<br><a href=\"https://files.gitter.im/pymc-devs/pymc/xhFg/new_anon.png\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/pymc-devs/pymc/xhFg/thumb/new_anon.png\" alt=\"new_anon.png\" rel=\"nofollow\"></a><br><span data-link-type=\"mention\" data-screen-name=\"clbarnes\" class=\"mention\">@clbarnes</span><br>I have a bunch of observed data of p(E|C,D), but nothing else<br>in real terms: C and D are the activities of particular sensory nerves, and E is a behavioural response. I have done experiments where I can trigger C and D and see whether E happens<br>is there a way of representing this conditional observed data in PyMC?</p>",
  "id": "5703dac715b4d27b083ee1b5",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   },
   {
    "screenName": "clbarnes",
    "userId": "54da419515522ed4b3dbda0c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-04-05T15:33:27.303Z",
  "text": "@twiecki my original question was here: \n\nI've got a model with a bunch of boolean variables in it, and the hierarchy looks like this\n[![new_anon.png](https://files.gitter.im/pymc-devs/pymc/xhFg/thumb/new_anon.png)](https://files.gitter.im/pymc-devs/pymc/xhFg/new_anon.png)\n@clbarnes\nI have a bunch of observed data of p(E|C,D), but nothing else\nin real terms: C and D are the activities of particular sensory nerves, and E is a behavioural response. I have done experiments where I can trigger C and D and see whether E happens\nis there a way of representing this conditional observed data in PyMC?",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/xhFg/thumb/new_anon.png"
   },
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/xhFg/new_anon.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/bcaine",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1737445?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1737445?v=3&s=60",
   "displayName": "Ben Caine",
   "gv": "3",
   "id": "5706878b187bb6f0eade5793",
   "url": "/bcaine",
   "username": "bcaine",
   "v": 2
  },
  "html": "Has anyone had success doing Gaussian Processes with more than one dimension? Having a lot of trouble, especially with setting up a covariance function with the diagonal being set to my eta_sq + sigma_sq. This is probably me not knowing Theano well enough, but I&#39;m pretty stuck.",
  "id": "57068c1a2a2f4d42761273d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-04-07T16:34:34.712Z",
  "text": "Has anyone had success doing Gaussian Processes with more than one dimension? Having a lot of trouble, especially with setting up a covariance function with the diagonal being set to my eta_sq + sigma_sq. This is probably me not knowing Theano well enough, but I'm pretty stuck.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/bcaine",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1737445?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1737445?v=3&s=60",
   "displayName": "Ben Caine",
   "gv": "3",
   "id": "5706878b187bb6f0eade5793",
   "url": "/bcaine",
   "username": "bcaine",
   "v": 2
  },
  "html": "Trying to extend <a href=\"https://gist.github.com/fonnesbeck/3919968669ecd852f87f\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/fonnesbeck/3919968669ecd852f87f</a>",
  "id": "57068cb3f55f5c717feb0a83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-04-07T16:37:07.792Z",
  "text": "Trying to extend https://gist.github.com/fonnesbeck/3919968669ecd852f87f",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/fonnesbeck/3919968669ecd852f87f"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"bcaine\" class=\"mention\">@bcaine</span> did you make any progress? what&#39;s the error you are seeing?",
  "id": "5718a3a498c544f1396d2b0c",
  "issues": [],
  "mentions": [
   {
    "screenName": "bcaine",
    "userId": "5706878b187bb6f0eade5793",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-04-21T09:55:48.780Z",
  "text": "@bcaine did you make any progress? what's the error you are seeing?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Folks seem to be getting frustrated trying to use PyMC3 on a GPU. Perhaps we shoud add some info in the docs on this? MCMC (at least how we are implementing it) won\u2019t really benefit from GPU acceleration, will it? Seems like there would be too much data transfer going on.",
  "id": "5718e3c527c0fbf239b033d0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-04-21T14:29:25.517Z",
  "text": "Folks seem to be getting frustrated trying to use PyMC3 on a GPU. Perhaps we shoud add some info in the docs on this? MCMC (at least how we are implementing it) won\u2019t really benefit from GPU acceleration, will it? Seems like there would be too much data transfer going on.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "well the model evaluation could in principle be faster and the data would need to be loaded to the GPU only once. but yeah, I suppose we shouldn&#39;t advertise it if we haven&#39;t gotten it to work",
  "id": "5718e40f98c544f1396d41e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-04-21T14:30:39.944Z",
  "text": "well the model evaluation could in principle be faster and the data would need to be loaded to the GPU only once. but yeah, I suppose we shouldn't advertise it if we haven't gotten it to work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Been meaning to read this, but havent gotten to it: <a href=\"http://arxiv.org/abs/1402.4089\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://arxiv.org/abs/1402.4089</a>",
  "id": "5718e44d27c0fbf239b033f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-04-21T14:31:41.939Z",
  "text": "Been meaning to read this, but havent gotten to it: http://arxiv.org/abs/1402.4089",
  "unread": false,
  "urls": [
   {
    "url": "http://arxiv.org/abs/1402.4089"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "I need to get some postdoc $$ to have some of this implemented.",
  "id": "5718e46a98c544f1396d420c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-04-21T14:32:10.499Z",
  "text": "I need to get some postdoc $$ to have some of this implemented.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "we missed gsoc again, alas",
  "id": "5718e484599a529856d9e530",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-04-21T14:32:36.421Z",
  "text": "we missed gsoc again, alas",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/tsdlovell",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16540200?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16540200?v=4&s=60",
   "displayName": "tsdlovell",
   "gv": "4",
   "id": "572a009cc43b8c6019711ce2",
   "url": "/tsdlovell",
   "username": "tsdlovell",
   "v": 2
  },
  "html": "Is there anything similar to the pandas contributing guidelines (<a href=\"http://pandas-docs.github.io/pandas-docs-travis/contributing.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://pandas-docs.github.io/pandas-docs-travis/contributing.html</a>) for pymc3?",
  "id": "572a013b474247a946a6248d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-05-04T14:03:39.468Z",
  "text": "Is there anything similar to the pandas contributing guidelines (http://pandas-docs.github.io/pandas-docs-travis/contributing.html) for pymc3?",
  "unread": false,
  "urls": [
   {
    "url": "http://pandas-docs.github.io/pandas-docs-travis/contributing.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "No, but we should. In fact, we could probably modify the pandas guidelines pretty easily. ",
  "id": "572a11df72798bd77be9f522",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-05-04T15:14:39.248Z",
  "text": "No, but we should. In fact, we could probably modify the pandas guidelines pretty easily. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/ericmjonas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/36626?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/36626?v=3&s=60",
   "displayName": "Eric Jonas",
   "gv": "3",
   "id": "552d52c215522ed4b3defdad",
   "url": "/ericmjonas",
   "username": "ericmjonas",
   "v": 3
  },
  "html": "Hi, I&#39;m just getting into PyMC, is there an easy example of simulating from the forward model for a variety of hyperparameter settings? ",
  "id": "5733c32675a64b453292c764",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-05-11T23:41:26.838Z",
  "text": "Hi, I'm just getting into PyMC, is there an easy example of simulating from the forward model for a variety of hyperparameter settings? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "hi <span data-link-type=\"mention\" data-screen-name=\"ericmjonas\" class=\"mention\">@ericmjonas</span>, good to hear you&#39;re giving pymc3 a test-drive. here&#39;s an example of a posterior-preditive checks: <a href=\"http://pymc-devs.github.io/pymc3/posterior_predictive/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://pymc-devs.github.io/pymc3/posterior_predictive/</a>",
  "id": "573446e33a05b11b6a4c38de",
  "issues": [],
  "mentions": [
   {
    "screenName": "ericmjonas",
    "userId": "552d52c215522ed4b3defdad",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-05-12T09:03:31.803Z",
  "text": "hi @ericmjonas, good to hear you're giving pymc3 a test-drive. here's an example of a posterior-preditive checks: http://pymc-devs.github.io/pymc3/posterior_predictive/",
  "unread": false,
  "urls": [
   {
    "url": "http://pymc-devs.github.io/pymc3/posterior_predictive/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/ericmjonas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/36626?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/36626?v=3&s=60",
   "displayName": "Eric Jonas",
   "gv": "3",
   "id": "552d52c215522ed4b3defdad",
   "url": "/ericmjonas",
   "username": "ericmjonas",
   "v": 3
  },
  "html": "Hi Thomas! I actually found this <span data-link-type=\"issue\" data-issue=\"686\" data-issue-repo=\"pymc-devs/pymc3\" class=\"issue\">pymc-devs/pymc3#686</span>  which cleared up a lot of the confusion -- Yarden and I are both from Josh&#39;s lab, where all the prob programming languages have a different notion of variable/observation separation. The tutorial you pointed me to helped a lot! ",
  "id": "57349016f17eed7b275d1abf",
  "issues": [
   {
    "number": "686",
    "repo": "pymc-devs/pymc3"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-05-12T14:15:50.321Z",
  "text": "Hi Thomas! I actually found this https://github.com/pymc-devs/pymc3/issues/686  which cleared up a lot of the confusion -- Yarden and I are both from Josh's lab, where all the prob programming languages have a different notion of variable/observation separation. The tutorial you pointed me to helped a lot! ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/ericmjonas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/36626?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/36626?v=3&s=60",
   "displayName": "Eric Jonas",
   "gv": "3",
   "id": "552d52c215522ed4b3defdad",
   "url": "/ericmjonas",
   "username": "ericmjonas",
   "v": 3
  },
  "html": "The real issue for me is that I&#39;m trying to do MCMC inside a reinforcement learning loop, and so I am continually running the same model but with new data. The progress bar seems to suggest the actual sampling (via nuts) is only taking 0.2 seconds but the total model-setup-solve-do-inference takes ~5 seconds. I&#39;d love to find a way to have it be closer to 0.2 seconds :) ",
  "id": "57349245e44f74fa65bd578f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-05-12T14:25:09.392Z",
  "text": "The real issue for me is that I'm trying to do MCMC inside a reinforcement learning loop, and so I am continually running the same model but with new data. The progress bar seems to suggest the actual sampling (via nuts) is only taking 0.2 seconds but the total model-setup-solve-do-inference takes ~5 seconds. I'd love to find a way to have it be closer to 0.2 seconds :) ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "ah, yes, I had that same problem",
  "id": "57349c0b1794136a7d080321",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-05-12T15:06:51.624Z",
  "text": "ah, yes, I had that same problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "model initialization / compilation takes a long time",
  "id": "57349c1864dbdadc7deb6be9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-05-12T15:07:04.759Z",
  "text": "model initialization / compilation takes a long time",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "the solution I came up with was caching the model which worked quite well",
  "id": "57349c420cb634927f7e39f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-05-12T15:07:46.433Z",
  "text": "the solution I came up with was caching the model which worked quite well",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/ericmjonas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/36626?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/36626?v=3&s=60",
   "displayName": "Eric Jonas",
   "gv": "3",
   "id": "552d52c215522ed4b3defdad",
   "url": "/ericmjonas",
   "username": "ericmjonas",
   "v": 3
  },
  "html": "Can you elaborate on that? How do you cache the model if each new set of observations necessitates a &quot;new&quot; model? ",
  "id": "57349c85ae26c1967f9dd32c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-05-12T15:08:53.726Z",
  "text": "Can you elaborate on that? How do you cache the model if each new set of observations necessitates a \"new\" model? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "digging up the code",
  "id": "57349cebeea93e5742d1442b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-05-12T15:10:35.302Z",
  "text": "digging up the code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/ericmjonas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/36626?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/36626?v=3&s=60",
   "displayName": "Eric Jonas",
   "gv": "3",
   "id": "552d52c215522ed4b3defdad",
   "url": "/ericmjonas",
   "username": "ericmjonas",
   "v": 3
  },
  "html": "Oh awesome thank you! ",
  "id": "57349d200cb634927f7e3a75",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-05-12T15:11:28.853Z",
  "text": "Oh awesome thank you! ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<a href=\"https://gist.github.com/twiecki/972496588bf69fbfbd98ed6b01a3c8a8\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/twiecki/972496588bf69fbfbd98ed6b01a3c8a8</a>",
  "id": "57349d351794136a7d0803ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-05-12T15:11:49.107Z",
  "text": "https://gist.github.com/twiecki/972496588bf69fbfbd98ed6b01a3c8a8",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/twiecki/972496588bf69fbfbd98ed6b01a3c8a8"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/ericmjonas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/36626?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/36626?v=3&s=60",
   "displayName": "Eric Jonas",
   "gv": "3",
   "id": "552d52c215522ed4b3defdad",
   "url": "/ericmjonas",
   "username": "ericmjonas",
   "v": 3
  },
  "html": "oh brilliant, that teaches me many things",
  "id": "57349da8ae26c1967f9dd3bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-05-12T15:13:44.870Z",
  "text": "oh brilliant, that teaches me many things",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/ericmjonas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/36626?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/36626?v=3&s=60",
   "displayName": "Eric Jonas",
   "gv": "3",
   "id": "552d52c215522ed4b3defdad",
   "url": "/ericmjonas",
   "username": "ericmjonas",
   "v": 3
  },
  "html": "thank you! ",
  "id": "57349dab64dbdadc7deb6cb2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-05-12T15:13:47.432Z",
  "text": "thank you! ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "np, you&#39;d then just call <code>best.run(y1=data1, y2=data2)</code>, first time it&#39;ll take a while but all subsequent runs will be fast",
  "id": "57349df8eea93e5742d144ad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-05-12T15:15:04.266Z",
  "text": "np, you'd then just call `best.run(y1=data1, y2=data2)`, first time it'll take a while but all subsequent runs will be fast",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "thinking more about this, it&#39;d be pretty easy to add a <code>predict()</code> method above that does PPC based on new data passed in. that&#39;d be kinda cool",
  "id": "5734a1b7ae26c1967f9dd592",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-05-12T15:31:03.791Z",
  "text": "thinking more about this, it'd be pretty easy to add a `predict()` method above that does PPC based on new data passed in. that'd be kinda cool",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "Hi,<br>Is mcmcplotlib still alive or we should add plots directly to PyMC3?",
  "id": "57372a9bae26c1967f9e7120",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-05-14T13:39:39.598Z",
  "text": "\nHi, \nIs mcmcplotlib still alive or we should add plots directly to PyMC3?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "It would probably depend on how general the plots were. Whar were you thinking of?",
  "id": "57372b381794136a7d08a04d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-05-14T13:42:16.419Z",
  "text": "It would probably depend on how general the plots were. Whar were you thinking of?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "at this moment I am thinking on diagnostics/gof test plots like geweke and separation plot. I have also a &quot;kruschke-like&quot; plot (that I think could be interesting to have). ",
  "id": "57372d09c61823687d3bd7e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-05-14T13:50:01.349Z",
  "text": "at this moment I am thinking on diagnostics/gof test plots like geweke and separation plot. I have also a \"kruschke-like\" plot (that I think could be interesting to have). ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "But I also want/need to think about other plots that could be useful in general.",
  "id": "57372d400cb634927f7ed7ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-05-14T13:50:56.790Z",
  "text": "But I also want/need to think about other plots that could be useful in general.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "The Categorical variable in PyMC3 seems to be utterly broken in master. Any idea what happened?",
  "id": "57374e0dae26c1967f9e77b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-05-14T16:10:53.885Z",
  "text": "The Categorical variable in PyMC3 seems to be utterly broken in master. Any idea what happened?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "I think I made one of the last changes to the Categorical distribution, I was having problems with Softmax regression",
  "id": "57378eabe2996a5a42c86ae9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-05-14T20:46:35.564Z",
  "text": "I think I made one of the last changes to the Categorical distribution, I was having problems with Softmax regression",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"aloctavodia\" class=\"mention\">@aloctavodia</span> mcmcplotlib lost momentum somewhat, I&#39;m still in favor of joining efforts and removing the plotting code from pymc3",
  "id": "5739a12e831fd2d97d9ecf77",
  "issues": [],
  "mentions": [
   {
    "screenName": "aloctavodia",
    "userId": "54314cd8163965c9bc208e0f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-05-16T10:30:06.156Z",
  "text": "@aloctavodia mcmcplotlib lost momentum somewhat, I'm still in favor of joining efforts and removing the plotting code from pymc3",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "initially pystan wanted that but after creating I haven&#39;t heard back, maybe it&#39;s worth getting back in touch what they plan. <span data-link-type=\"mention\" data-screen-name=\"ariddell\" class=\"mention\">@ariddell</span>",
  "id": "5739a19e831fd2d97d9ecf8c",
  "issues": [],
  "mentions": [
   {
    "screenName": "ariddell",
    "userId": "544fb965db8155e6700cf1e9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-05-16T10:31:58.854Z",
  "text": "initially pystan wanted that but after creating I haven't heard back, maybe it's worth getting back in touch what they plan. @ariddell",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"224\" data-issue-repo=\"stan-dev/pystan\" class=\"issue\">stan-dev/pystan#224</span>",
  "id": "5739a1e9eea93e5742d23e8a",
  "issues": [
   {
    "number": "224",
    "repo": "stan-dev/pystan"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-05-16T10:33:13.954Z",
  "text": "https://github.com/stan-dev/pystan/issues/224",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> I am open to help, even when the demarcation criterion is still not clear to me, like the example with the diagnostic tests.",
  "id": "5739b18d831fd2d97d9ed321",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-05-16T11:39:57.583Z",
  "text": "@twiecki I am open to help, even when the demarcation criterion is still not clear to me, like the example with the diagnostic tests.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yeah, I&#39;m not sure either. I suppose it makes sense to also include them as they can be used by other packages too",
  "id": "5739c87264dbdadc7dec758e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-05-16T13:17:38.356Z",
  "text": "yeah, I'm not sure either. I suppose it makes sense to also include them as they can be used by other packages too",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "what are your thoughts?",
  "id": "5739c876ae26c1967f9edde9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-05-16T13:17:42.730Z",
  "text": "what are your thoughts?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "I&#39;d only recommend this route if there is significant buy-in from the maintainers of the other packages. Otherwise the cost of maintaining two packages seems higher than the benefit. ",
  "id": "5739c901c61823687d3c44a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-05-16T13:20:01.193Z",
  "text": "I'd only recommend this route if there is significant buy-in from the maintainers of the other packages. Otherwise the cost of maintaining two packages seems higher than the benefit. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> that&#39;s a great point",
  "id": "5739cc260cb634927f7f4536",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-05-16T13:33:26.779Z",
  "text": "@fonnesbeck that's a great point",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "seems like pystan, who would benefit the most, isn&#39;t really involved",
  "id": "5739cc38831fd2d97d9eda72",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-05-16T13:33:44.302Z",
  "text": "seems like pystan, who would benefit the most, isn't really involved",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "I have the same concern Chris has. Splitting code could mean double effort, and while I am willing to help with PyMC3 I do not have a lot of &quot;free&quot; time.",
  "id": "5739cd8d1794136a7d091016",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-05-16T13:39:25.540Z",
  "text": "I have the same concern Chris has. Splitting code could mean double effort, and while I am willing to help with PyMC3 I do not have a lot of \"free\" time.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "perhaps then instead we just keep everything as is. if pystan wants to adopt the code, they can use mcmcplotlib and we can still decide to that route",
  "id": "5739cee30cb634927f7f462b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-05-16T13:45:07.627Z",
  "text": "perhaps then instead we just keep everything as is. if pystan wants to adopt the code, they can use mcmcplotlib and we can still decide to that route",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "should we commit to that?",
  "id": "5739cfeb1794136a7d0910ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-05-16T13:49:31.727Z",
  "text": "should we commit to that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "Sounds good to me, may be during Bayesian-Mixer-Londonmeeting you can revisit this discussion. Nevertheless, <span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> and <span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span>  I will follow your decision here, you have much more experience.",
  "id": "5739d122ae26c1967f9ee0c0",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   },
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-05-16T13:54:42.890Z",
  "text": "Sounds good to me, may be during Bayesian-Mixer-Londonmeeting you can revisit this discussion. Nevertheless, @twiecki and @fonnesbeck  I will follow your decision here, you have much more experience.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"aloctavodia\" class=\"mention\">@aloctavodia</span> have there been significant additions to mcmcplotlib we might want to back-port?",
  "id": "5739d1410cb634927f7f470a",
  "issues": [],
  "mentions": [
   {
    "screenName": "aloctavodia",
    "userId": "54314cd8163965c9bc208e0f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-05-16T13:55:13.581Z",
  "text": "@aloctavodia have there been significant additions to mcmcplotlib we might want to back-port?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "There are a couple of new functions &quot;mean_plot&quot; and &quot;overlap_tail&quot;, to visualize diagnose convergence. How relevant they really are I am not quite sure.<br>There is also a plot_post function to do kruschke-like posterior diagrams that works on numpy array. <span data-link-type=\"mention\" data-screen-name=\"volodymyr\" class=\"mention\">@volodymyr</span> has a PR on a similar functions that work with traces, I think we should probably accept his PR and then work from there.<br>Finally there is a function to compute HPD that works for multimodal distribution, But I never found one of those in practice, ha ha.",
  "id": "5739d3da831fd2d97d9edd3c",
  "issues": [],
  "mentions": [
   {
    "screenName": "volodymyr",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-05-16T14:06:18.021Z",
  "text": "There are a couple of new functions \"mean_plot\" and \"overlap_tail\", to visualize diagnose convergence. How relevant they really are I am not quite sure. \nThere is also a plot_post function to do kruschke-like posterior diagrams that works on numpy array. @volodymyr has a PR on a similar functions that work with traces, I think we should probably accept his PR and then work from there.\nFinally there is a function to compute HPD that works for multimodal distribution, But I never found one of those in practice, ha ha.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "got it, the HPD would be super useful",
  "id": "5739d40e0cb634927f7f47d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-05-16T14:07:10.909Z",
  "text": "got it, the HPD would be super useful",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "does the PR get a sign-off from you?",
  "id": "5739d419c61823687d3c4860",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-05-16T14:07:21.082Z",
  "text": "does the PR get a sign-off from you?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "Sorry, I don&#39;t get the question.",
  "id": "5739dd7fae26c1967f9ee558",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-05-16T14:47:27.051Z",
  "text": "Sorry, I don't get the question.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "whether you think the code needs more work",
  "id": "5739dd901794136a7d0915ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-05-16T14:47:44.435Z",
  "text": "whether you think the code needs more work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "or if it&#39;s good-to-merge as-is",
  "id": "5739dd96c61823687d3c4be4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-05-16T14:47:50.003Z",
  "text": "or if it's good-to-merge as-is",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "is good-to-merge, then we can improve it.",
  "id": "5739ddc8ae26c1967f9ee573",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-05-16T14:48:40.569Z",
  "text": "is good-to-merge, then we can improve it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Travis tests are failing again due to timeouts. I&#39;m noticing the <code>glm</code> models running very slowly on my local machine too.",
  "id": "573ded4d08a18f700b81d085",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-05-19T16:43:57.521Z",
  "text": "Travis tests are failing again due to timeouts. I'm noticing the `glm` models running very slowly on my local machine too.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yeah, can&#39;t reproduce locally",
  "id": "573e2bfe7aab25fb459cfcea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-05-19T21:11:26.289Z",
  "text": "yeah, can't reproduce locally",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "not sure why that&#39;s happening",
  "id": "573e2c02f240e50046a0984a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-05-19T21:11:30.380Z",
  "text": "not sure why that's happening",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/tknuth",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=60",
   "displayName": "Tobias Knuth",
   "gv": "3",
   "id": "573f8274c43b8c6019741432",
   "url": "/tknuth",
   "username": "tknuth",
   "v": 3
  },
  "html": "Hi everyone, I am totally new to pymc(3) and would like to know where I can ask really <em>basic</em> questions?",
  "id": "573f82945b4261a6333caada",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-05-20T21:33:08.986Z",
  "text": "Hi everyone, I am totally new to pymc(3) and would like to know where I can ask really *basic* questions?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/tknuth",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=60",
   "displayName": "Tobias Knuth",
   "gv": "3",
   "id": "573f8274c43b8c6019741432",
   "url": "/tknuth",
   "username": "tknuth",
   "v": 3
  },
  "html": "(didn&#39;t find the answers in the tutorial)",
  "id": "573f82a65b4261a6333caae1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-05-20T21:33:26.469Z",
  "text": "(didn't find the answers in the tutorial)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "Hi, here or stackoverflow",
  "id": "573f83017aab25fb459d5919",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-05-20T21:34:57.970Z",
  "text": "Hi, here or stackoverflow",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "If you tag your question with <code>pymc</code> on StackOverflow, it should get seen.",
  "id": "573f833a08a18f700b824653",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-05-20T21:35:54.286Z",
  "text": "If you tag your question with `pymc` on StackOverflow, it should get seen.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/tknuth",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=60",
   "displayName": "Tobias Knuth",
   "gv": "3",
   "id": "573f8274c43b8c6019741432",
   "url": "/tknuth",
   "username": "tknuth",
   "v": 3
  },
  "html": "Okay, I will do that right now :)",
  "id": "573f8347f240e50046a0f441",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-05-20T21:36:07.243Z",
  "text": "Okay, I will do that right now :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Also, if you have suggestions about what is missing from the tutorial that would have helped you understand things better, feel free to submit a request to improve it on our issue tracker.",
  "id": "573f83795b4261a6333cab21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-05-20T21:36:57.308Z",
  "text": "Also, if you have suggestions about what is missing from the tutorial that would have helped you understand things better, feel free to submit a request to improve it on our issue tracker.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/tknuth",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=60",
   "displayName": "Tobias Knuth",
   "gv": "3",
   "id": "573f8274c43b8c6019741432",
   "url": "/tknuth",
   "username": "tknuth",
   "v": 3
  },
  "html": "I&#39;m (probably) going to use pymc3 in my dissertation. Thus, if you like, I might even be able to add parts to the tutorial and send a pull request or are you happier with a description in the issue tracker?",
  "id": "573f8418dce4845b35ebccbc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-05-20T21:39:36.562Z",
  "text": "I'm (probably) going to use pymc3 in my dissertation. Thus, if you like, I might even be able to add parts to the tutorial and send a pull request or are you happier with a description in the issue tracker?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "PRs are even better -- thanks!",
  "id": "573f842aff441ca333d3885e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-05-20T21:39:54.686Z",
  "text": "PRs are even better -- thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "We always welcome contributors (and documentation contributors even more!)",
  "id": "573f844fdce4845b35ebcccf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-05-20T21:40:31.775Z",
  "text": "We always welcome contributors (and documentation contributors even more!)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/tknuth",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=60",
   "displayName": "Tobias Knuth",
   "gv": "3",
   "id": "573f8274c43b8c6019741432",
   "url": "/tknuth",
   "username": "tknuth",
   "v": 3
  },
  "html": "Wonderful. Will do that if I manage to really dive into it. Looks very promising!",
  "id": "573f84b9d3f431720bb257df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-05-20T21:42:17.282Z",
  "text": "Wonderful. Will do that if I manage to really dive into it. Looks very promising!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/tknuth",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=60",
   "displayName": "Tobias Knuth",
   "gv": "3",
   "id": "573f8274c43b8c6019741432",
   "url": "/tknuth",
   "username": "tknuth",
   "v": 3
  },
  "html": "Hey folks, have you noticed that the documentation seems broken at the moment?",
  "id": "5742d728f240e50046a1722e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-05-23T10:10:48.728Z",
  "text": "Hey folks, have you noticed that the documentation seems broken at the moment?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Thanks. Might be due to my reorganization of the examples. Will take a look. ",
  "id": "5742eedff240e50046a17937",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-05-23T11:51:59.162Z",
  "text": "Thanks. Might be due to my reorganization of the examples. Will take a look. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "What came of the <code>T</code> vs. <code>tt</code> debate as an alias for <code>theano.tensor</code>? ",
  "id": "5745a93180352f204df1f345",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-05-25T13:31:29.406Z",
  "text": "What came of the `T` vs. `tt` debate as an alias for `theano.tensor`? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/tknuth",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=60",
   "displayName": "Tobias Knuth",
   "gv": "3",
   "id": "573f8274c43b8c6019741432",
   "url": "/tknuth",
   "username": "tknuth",
   "v": 3
  },
  "html": "Two questions: (1) I believe I fixed something (thanks <span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> for the criticism of the &quot;half-way bugfix&quot;) ... would you prefer working on branches and then merging into master later for <em>everything</em> or was that fine the way I did it? (2) In GLM-logistic.ipynb, where is it specified that a logistic model is applied. I just cannot see it in the code. :worried: ",
  "id": "5745b743ec10ddbb09da8b36",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-05-25T14:31:31.115Z",
  "text": "Two questions: (1) I believe I fixed something (thanks @fonnesbeck for the criticism of the \"half-way bugfix\") ... would you prefer working on branches and then merging into master later for *everything* or was that fine the way I did it? (2) In GLM-logistic.ipynb, where is it specified that a logistic model is applied. I just cannot see it in the code. :worried: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/tknuth",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=60",
   "displayName": "Tobias Knuth",
   "gv": "3",
   "id": "573f8274c43b8c6019741432",
   "url": "/tknuth",
   "username": "tknuth",
   "v": 3
  },
  "html": "(3) I&#39;m relatively new to working with git <em>in a team</em>. If you notice anything, I&#39;m happy to know.",
  "id": "5745b84b80352f204df1fac5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-05-25T14:35:55.390Z",
  "text": "(3) I'm relatively new to working with git *in a team*. If you notice anything, I'm happy to know.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"tknuth\" class=\"mention\">@tknuth</span> marking a PR &quot;WIP&quot; helps with that",
  "id": "5745b882f44fde236e50318b",
  "issues": [],
  "mentions": [
   {
    "screenName": "tknuth",
    "userId": "573f8274c43b8c6019741432",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-05-25T14:36:50.628Z",
  "text": "@tknuth marking a PR \"WIP\" helps with that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "the logistic is applied via <code>family</code>",
  "id": "5745b88b454cb2be094ec9c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-05-25T14:36:59.444Z",
  "text": "the logistic is applied via `family`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> we landed on <code>tt</code>",
  "id": "5745b896ec10ddbb09da8bb6",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2016-05-25T14:37:10.626Z",
  "text": "@fonnesbeck we landed on `tt`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> good! Was running into confusion with the transpose attribute, so I&#39;m glad to hear it. Do we have a PR for that?",
  "id": "5745ca7710f0fed86f480b2f",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2016-05-25T15:53:27.977Z",
  "text": "@twiecki good! Was running into confusion with the transpose attribute, so I'm glad to hear it. Do we have a PR for that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I think we only changed it in the distributions",
  "id": "5745ca9480352f204df20378",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-05-25T15:53:56.024Z",
  "text": "I think we only changed it in the distributions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "I think its all still <code>T</code> in master, even in distributions.",
  "id": "5745cab410f0fed86f480b55",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-05-25T15:54:28.877Z",
  "text": "I think its all still `T` in master, even in distributions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "huh",
  "id": "5745cac8f44fde236e503a95",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-05-25T15:54:48.245Z",
  "text": "huh",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<a href=\"https://github.com/pymc-devs/pymc3/pull/905/files\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/pull/905/files</a> still uses <code>T</code>",
  "id": "5745cb49a78d5a256e37b55f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-05-25T15:56:57.312Z",
  "text": "https://github.com/pymc-devs/pymc3/pull/905/files still uses `T`",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/pull/905/files"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that&#39;s what I thought I remembered",
  "id": "5745cb4fa78d5a256e37b563",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-05-25T15:57:03.931Z",
  "text": "that's what I thought I remembered",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<a href=\"https://github.com/pymc-devs/pymc3/pull/905#issuecomment-172209778\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/pull/905#issuecomment-172209778</a>",
  "id": "5745cba5a78d5a256e37b589",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-05-25T15:58:29.760Z",
  "text": "https://github.com/pymc-devs/pymc3/pull/905#issuecomment-172209778",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/pull/905#issuecomment-172209778"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"groupmention\" data-group-name=\"all\" class=\"groupmention\">@/all</span> check out our new docs: <a href=\"http://pymc-devs.github.io/pymc3/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://pymc-devs.github.io/pymc3/</a>",
  "id": "574605a2da3f93da6f20408a",
  "issues": [],
  "mentions": [
   {
    "announcement": true,
    "group": true,
    "screenName": "all",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 38,
  "sent": "2016-05-25T20:05:54.946Z",
  "text": "@/all check out our new docs: http://pymc-devs.github.io/pymc3/",
  "unread": false,
  "urls": [
   {
    "url": "http://pymc-devs.github.io/pymc3/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "lots of progress today, high five <span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> ",
  "id": "5746085e10f0fed86f48255f",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2016-05-25T20:17:34.171Z",
  "text": "lots of progress today, high five @fonnesbeck ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": ":whew: ",
  "id": "5746118a80352f204df2214c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-05-25T20:56:42.871Z",
  "text": ":whew: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Looking forward to some in-person hacking in London next month!",
  "id": "574611ab6bbc2d1d4dee29f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-05-25T20:57:15.650Z",
  "text": "Looking forward to some in-person hacking in London next month!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-25T21:20:08.705Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/soupault",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1315589?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1315589?v=4&s=60",
   "displayName": "Egor Panfilov",
   "gv": "4",
   "id": "565b49ee16b6c7089cbc9b44",
   "url": "/soupault",
   "username": "soupault",
   "v": 6
  },
  "html": "",
  "id": "5746168610f0fed86f482b19",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-05-25T21:17:58.753Z",
  "text": "",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-05-26T02:27:29.842Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/danielbarter",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8081722?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8081722?v=3&s=60",
   "displayName": "Daniel Barter",
   "gv": "3",
   "id": "57465cc7c43b8c601974f6e8",
   "url": "/danielbarter",
   "username": "danielbarter",
   "v": 1
  },
  "html": "Hi! I asked a dumb question in the issues which was promptly closed: If I have two previously implemented distributions f(x|theta) and g(x|phi), is there an easy way to implement the new distribution p(x|theta,phi,b) which equals f when b = 0 and g when b = 1? <span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> said I should be looking at switch, but I can&#39;t find what I am looking for in help(switch)",
  "id": "57465ebd454cb2be094f01a7",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2016-05-26T02:26:05.029Z",
  "text": "Hi! I asked a dumb question in the issues which was promptly closed: If I have two previously implemented distributions f(x|theta) and g(x|phi), is there an easy way to implement the new distribution p(x|theta,phi,b) which equals f when b = 0 and g when b = 1? @fonnesbeck said I should be looking at switch, but I can't find what I am looking for in help(switch)",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"danielbarter\" class=\"mention\">@danielbarter</span> you can see how switch works by having a peek at the disasters model example in the documentation. ",
  "id": "5746611f10f0fed86f483ba7",
  "issues": [],
  "mentions": [
   {
    "screenName": "danielbarter",
    "userId": "57465cc7c43b8c601974f6e8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2016-05-26T02:36:15.055Z",
  "text": "@danielbarter you can see how switch works by having a peek at the disasters model example in the documentation. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/danielbarter",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8081722?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8081722?v=3&s=60",
   "displayName": "Daniel Barter",
   "gv": "3",
   "id": "57465cc7c43b8c601974f6e8",
   "url": "/danielbarter",
   "username": "danielbarter",
   "v": 1
  },
  "html": "wow i didn&#39;t realize there were so many notebooks in there! Thanks :D",
  "id": "5746625fec10ddbb09dac4f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-05-26T02:41:35.926Z",
  "text": "wow i didn't realize there were so many notebooks in there! Thanks :D",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/danielbarter",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8081722?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8081722?v=3&s=60",
   "displayName": "Daniel Barter",
   "gv": "3",
   "id": "57465cc7c43b8c601974f6e8",
   "url": "/danielbarter",
   "username": "danielbarter",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> I think that solved my problem",
  "id": "574662a6a78d5a256e37e5d8",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2016-05-26T02:42:46.493Z",
  "text": "@fonnesbeck I think that solved my problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/danielbarter",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8081722?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8081722?v=3&s=60",
   "displayName": "Daniel Barter",
   "gv": "3",
   "id": "57465cc7c43b8c601974f6e8",
   "url": "/danielbarter",
   "username": "danielbarter",
   "v": 1
  },
  "html": "thanks",
  "id": "574662a880352f204df233d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-05-26T02:42:48.912Z",
  "text": "thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/sukram-n",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17848481?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17848481?v=3&s=60",
   "displayName": "sukram-n",
   "gv": "3",
   "id": "57480126c43b8c6019753cd3",
   "url": "/sukram-n",
   "username": "sukram-n",
   "v": 1
  },
  "html": "Hi there! I am quite new to pymc(3) and struggle to get my model working.  I have a detector that records an incoming signal with Poissonian statistics. However, part of the detector shall be covered and a &quot;dark signal&quot; (i.e. amplifier noise) is measured from there (another Poisson distributed part). So started with something like: ``` with my_model:",
  "id": "5748042f80352f204df29ff2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-05-27T08:24:15.080Z",
  "text": "Hi there! I am quite new to pymc(3) and struggle to get my model working.  I have a detector that records an incoming signal with Poissonian statistics. However, part of the detector shall be covered and a \"dark signal\" (i.e. amplifier noise) is measured from there (another Poisson distributed part). So started with something like: ``` with my_model:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/sukram-n",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17848481?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17848481?v=3&s=60",
   "displayName": "sukram-n",
   "gv": "3",
   "id": "57480126c43b8c6019753cd3",
   "url": "/sukram-n",
   "username": "sukram-n",
   "v": 1
  },
  "html": "Sorry, just found that I have overlooked something. Can someone delete my posts? Thank you. :-)",
  "id": "574807d06bbc2d1d4deea97f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-05-27T08:39:44.922Z",
  "text": "Sorry, just found that I have overlooked something. Can someone delete my posts? Thank you. :-)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "glad you found a solution",
  "id": "57480c40454cb2be094f7169",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-05-27T08:58:40.762Z",
  "text": "glad you found a solution",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/sukram-n",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17848481?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17848481?v=3&s=60",
   "displayName": "sukram-n",
   "gv": "3",
   "id": "57480126c43b8c6019753cd3",
   "url": "/sukram-n",
   "username": "sukram-n",
   "v": 1
  },
  "html": "not sure, I have to clarify where my problems start. ;-)",
  "id": "57480c6f10f0fed86f48af68",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-05-27T08:59:27.735Z",
  "text": "not sure, I have to clarify where my problems start. ;-)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/tknuth",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=60",
   "displayName": "Tobias Knuth",
   "gv": "3",
   "id": "573f8274c43b8c6019741432",
   "url": "/tknuth",
   "username": "tknuth",
   "v": 3
  },
  "html": "Am I supposed to delete branches that were merged remotely?",
  "id": "57483ed26bbc2d1d4deeb946",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-05-27T12:34:26.922Z",
  "text": "Am I supposed to delete branches that were merged remotely?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "in your own fork? doesn&#39;t really matter what you do there",
  "id": "57483ee4ec10ddbb09db43c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-05-27T12:34:44.102Z",
  "text": "in your own fork? doesn't really matter what you do there",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/tknuth",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=60",
   "displayName": "Tobias Knuth",
   "gv": "3",
   "id": "573f8274c43b8c6019741432",
   "url": "/tknuth",
   "username": "tknuth",
   "v": 3
  },
  "html": "Not in my own, but I see my master-merged branch in the original pymc3 as active, but it&#39;s already been merged",
  "id": "57483f13ec10ddbb09db43cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-05-27T12:35:31.352Z",
  "text": "Not in my own, but I see my master-merged branch in the original pymc3 as active, but it's already been merged",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/tknuth",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=60",
   "displayName": "Tobias Knuth",
   "gv": "3",
   "id": "573f8274c43b8c6019741432",
   "url": "/tknuth",
   "username": "tknuth",
   "v": 3
  },
  "html": "<a href=\"https://github.com/pymc-devs/pymc3/branches\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/branches</a> disp_fix",
  "id": "57483f1d80352f204df2b142",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-05-27T12:35:41.021Z",
  "text": "https://github.com/pymc-devs/pymc3/branches disp_fix",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/branches"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/tknuth",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=60",
   "displayName": "Tobias Knuth",
   "gv": "3",
   "id": "573f8274c43b8c6019741432",
   "url": "/tknuth",
   "username": "tknuth",
   "v": 3
  },
  "html": "still getting the grip on collaboration with github ...",
  "id": "57483f35ec10ddbb09db43d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-05-27T12:36:05.128Z",
  "text": "still getting the grip on collaboration with github ...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "deleted it",
  "id": "57483f3980352f204df2b152",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-05-27T12:36:09.015Z",
  "text": "deleted it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/tknuth",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5556920?v=3&s=60",
   "displayName": "Tobias Knuth",
   "gv": "3",
   "id": "573f8274c43b8c6019741432",
   "url": "/tknuth",
   "username": "tknuth",
   "v": 3
  },
  "html": ":thumbsup: ",
  "id": "57483f4eda3f93da6f20d988",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-05-27T12:36:30.573Z",
  "text": ":thumbsup: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/sukram-n",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17848481?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17848481?v=3&s=60",
   "displayName": "sukram-n",
   "gv": "3",
   "id": "57480126c43b8c6019753cd3",
   "url": "/sukram-n",
   "username": "sukram-n",
   "v": 1
  },
  "html": "<p>Hi there! Ok, still struggling. The scenario I want to model:<br>A detector with Poissonian statistics is evenly illuminated except for a shadow region. The detector electronics produce some additional Poissonian noise, so there is a &quot;signal&quot; in the shaded region, too.<br>I want to infer the shadow region, the lambda coefficient of the noise and the incoming intensity.<br>The model I set up:</p><pre><code>def nice_plot(data, ax=None):\n    <span class=\"operator\"><span class=\"keyword\">show</span> = <span class=\"literal\">False</span>\n    <span class=\"keyword\">if</span> ax <span class=\"keyword\">is</span> None:\n        <span class=\"keyword\">show</span> = <span class=\"literal\">True</span>\n        fig = plt.figure()\n        ax = fig.add_subplot(<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>)\n    tt = np.<span class=\"keyword\">round</span>(np.<span class=\"built_in\">array</span>([<span class=\"keyword\">data</span>.<span class=\"keyword\">min</span>(),<span class=\"keyword\">data</span>.mean(), <span class=\"keyword\">data</span>.<span class=\"keyword\">max</span>()]),<span class=\"number\">1</span>)\n    cax=ax.imshow(<span class=\"keyword\">data</span>, interpolation=<span class=\"string\">\"nearest\"</span>, cmap=<span class=\"string\">\"viridis\"</span>,vmin=tt[<span class=\"number\">0</span>],vmax=tt[<span class=\"number\">2</span>])\n    cbar = plt.colorbar(cax, ticks=tt)\n    cbar.ax.set_yticklabels(tt)  # vertically oriented colorbar\n    <span class=\"keyword\">if</span> <span class=\"keyword\">show</span>:\n        plt.<span class=\"keyword\">show</span>()\n\nbin_data = (image_data - image_data.<span class=\"keyword\">min</span>())/(image_data.<span class=\"keyword\">max</span>() - image_data.<span class=\"keyword\">min</span>()) &gt; <span class=\"number\">0.9</span>\nnice_plot(bin_data)\n\n# specifiy model\n<span class=\"keyword\">with</span> pm.Model() <span class=\"keyword\">as</span> model:\n\n    # Incoming intensity\n    I0 = pm.Uniform(<span class=\"string\">\"I0\"</span>,\n                    <span class=\"keyword\">lower</span>=image_data.<span class=\"keyword\">min</span>(),\n                    <span class=\"keyword\">upper</span>=image_data.<span class=\"keyword\">max</span>(),\n                   testval=image_data.mean())\n\n    #shadow_beta = pm.Beta(<span class=\"string\">\"shadow_beta\"</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>,\n    #                      shape=image_data.shape, transform=None)\n    # <span class=\"keyword\">Prior</span> distribution <span class=\"keyword\">for</span> shadow\n    shadow = pm.Bernoulli(<span class=\"string\">\"shadow\"</span>,p=<span class=\"number\">0.5</span>, shape=image_data.shape, testval=bin_data)\n\n    bg_noise_mu = pm.Uniform(<span class=\"string\">\"bg_noise_mu\"</span>,<span class=\"keyword\">lower</span>=<span class=\"number\">10</span>,<span class=\"keyword\">upper</span>=<span class=\"number\">1000</span>,\n                            testval=image_data.<span class=\"keyword\">std</span>())\n\n    bg_noise = pm.Poisson(<span class=\"string\">\"bg_noise\"</span>,\n                           shape=image_data.shape,\n                           mu=bg_noise_mu)\n    signal =  pm.Poisson(<span class=\"string\">\"signal\"</span>,\n                         shape=image_data.shape,\n                         mu=shadow * I0)\n    image_model = signal  + bg_noise\n\n    observation=pm.Normal(<span class=\"string\">\"observation\"</span>, mu=image_model, observed=image_data)\n\n    print(I0.random())\n    maps = [bg_noise.random()]\n    n = <span class=\"keyword\">len</span>(maps)\n    fig = plt.figure(figsize=(n * <span class=\"number\">4</span>, <span class=\"number\">4</span>))\n\n    <span class=\"keyword\">for</span> i, mp <span class=\"keyword\">in</span> enumerate(maps):\n        ax = plt.subplot(<span class=\"number\">1</span>,n,i+<span class=\"number\">1</span>)\n        nice_plot(mp,ax)\n    trace = None</span></code></pre><p>However, upon sampling the shadow array is not changed at all. <code>I0</code> and <code>bg_noise_mu</code> creep around at meaningful values.</p><pre><code>with model:\n    <span class=\"operator\"><span class=\"keyword\">start</span>=None\n    <span class=\"keyword\">if</span> trace <span class=\"keyword\">is</span> None:\n        <span class=\"keyword\">start</span> = map_estimate\n    trace = pm.sample(<span class=\"number\">100</span>, <span class=\"keyword\">start</span>=<span class=\"keyword\">start</span>, trace=trace)</span></code></pre><pre><code>Assigned NUTS <span class=\"keyword\">to</span> I0_interval\nAssigned BinaryGibbsMetropolis <span class=\"keyword\">to</span> shadow\nAssigned NUTS <span class=\"keyword\">to</span> bg_noise_mu_interval\nAssigned Metropolis <span class=\"keyword\">to</span> bg_noise\nAssigned Metropolis <span class=\"keyword\">to</span> signal\n [-----------------<span class=\"number\">101</span>%-----------------] <span class=\"number\">101</span> <span class=\"keyword\">of</span> <span class=\"number\">100</span> complete <span class=\"keyword\">in</span> <span class=\"number\">53.4</span> sec</code></pre><p>The image is 32x32 pixel and I sampled several thousand times.<br>I would be very happy if someone can point me into the right direction.</p>",
  "id": "574846b6f44fde236e50eefa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-05-27T13:08:06.234Z",
  "text": "Hi there! Ok, still struggling. The scenario I want to model:\nA detector with Poissonian statistics is evenly illuminated except for a shadow region. The detector electronics produce some additional Poissonian noise, so there is a \"signal\" in the shaded region, too.\nI want to infer the shadow region, the lambda coefficient of the noise and the incoming intensity.\nThe model I set up:\n```\ndef nice_plot(data, ax=None):\n    show = False\n    if ax is None:\n        show = True\n        fig = plt.figure()\n        ax = fig.add_subplot(1, 1, 1)\n    tt = np.round(np.array([data.min(),data.mean(), data.max()]),1)\n    cax=ax.imshow(data, interpolation=\"nearest\", cmap=\"viridis\",vmin=tt[0],vmax=tt[2])\n    cbar = plt.colorbar(cax, ticks=tt)\n    cbar.ax.set_yticklabels(tt)  # vertically oriented colorbar\n    if show:\n        plt.show()\n\nbin_data = (image_data - image_data.min())/(image_data.max() - image_data.min()) > 0.9\nnice_plot(bin_data)\n\n# specifiy model\nwith pm.Model() as model:\n\n    # Incoming intensity\n    I0 = pm.Uniform(\"I0\",\n                    lower=image_data.min(),\n                    upper=image_data.max(),\n                   testval=image_data.mean())\n\n    #shadow_beta = pm.Beta(\"shadow_beta\", 1, 1,\n    #                      shape=image_data.shape, transform=None)\n    # Prior distribution for shadow\n    shadow = pm.Bernoulli(\"shadow\",p=0.5, shape=image_data.shape, testval=bin_data)\n\n    bg_noise_mu = pm.Uniform(\"bg_noise_mu\",lower=10,upper=1000,\n                            testval=image_data.std())\n\n    bg_noise = pm.Poisson(\"bg_noise\",\n                           shape=image_data.shape,\n                           mu=bg_noise_mu)\n    signal =  pm.Poisson(\"signal\",\n                         shape=image_data.shape,\n                         mu=shadow * I0)\n    image_model = signal  + bg_noise\n    \n    observation=pm.Normal(\"observation\", mu=image_model, observed=image_data)\n\n    print(I0.random())\n    maps = [bg_noise.random()]\n    n = len(maps)\n    fig = plt.figure(figsize=(n * 4, 4))\n\n    for i, mp in enumerate(maps):\n        ax = plt.subplot(1,n,i+1)\n        nice_plot(mp,ax)\n    trace = None\n```\nHowever, upon sampling the shadow array is not changed at all. `I0` and `bg_noise_mu` creep around at meaningful values.\n```\nwith model:\n    start=None\n    if trace is None:\n        start = map_estimate\n    trace = pm.sample(100, start=start, trace=trace)\n```\n```\nAssigned NUTS to I0_interval\nAssigned BinaryGibbsMetropolis to shadow\nAssigned NUTS to bg_noise_mu_interval\nAssigned Metropolis to bg_noise\nAssigned Metropolis to signal\n [-----------------101%-----------------] 101 of 100 complete in 53.4 sec\n```\nThe image is 32x32 pixel and I sampled several thousand times.\nI would be very happy if someone can point me into the right direction.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "The inverse logit ok implementation ",
  "id": "574878bb80352f204df2c779",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-05-27T16:41:31.320Z",
  "text": "The inverse logit ok implementation ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "The inverse logit implementation that I merged doesn&#39;t quite work.  I will fix it when I get back in town. Even simple conditional statements are a nightmare in Theano. We need to move away from it as a computational back end in the long term, so I&#39;m glad that conversation has started. ",
  "id": "5748797480352f204df2c7c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-05-27T16:44:36.366Z",
  "text": "The inverse logit implementation that I merged doesn't quite work.  I will fix it when I get back in town. Even simple conditional statements are a nightmare in Theano. We need to move away from it as a computational back end in the long term, so I'm glad that conversation has started. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-27T18:29:45.604Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "",
  "id": "574891fea78d5a256e3886a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-05-27T18:29:18.741Z",
  "text": "",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/datnamer",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=60",
   "displayName": "datnamer",
   "gv": "4",
   "id": "54602d6fdb8155e6700d316b",
   "url": "/datnamer",
   "username": "datnamer",
   "v": 10
  },
  "html": "What is the alternative? numpy autograd with numba?",
  "id": "574b32e2454cb2be09500340",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-05-29T18:20:18.439Z",
  "text": "What is the alternative? numpy autograd with numba?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that&#39;s one option. not sure if tensorflow is any better. I think for the time being we&#39;re stuck with theano, while it&#39;s causing headaches, we have accomplished a lot with it",
  "id": "574bc2ea80352f204df34a82",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-05-30T04:34:50.804Z",
  "text": "that's one option. not sure if tensorflow is any better. I think for the time being we're stuck with theano, while it's causing headaches, we have accomplished a lot with it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/sukram-n",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17848481?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17848481?v=3&s=60",
   "displayName": "sukram-n",
   "gv": "3",
   "id": "57480126c43b8c6019753cd3",
   "url": "/sukram-n",
   "username": "sukram-n",
   "v": 1
  },
  "html": "may I comment as someone who more applies this stuff rather than developing it. So far, I use(d) Bayesian inference via home brewed software. I am now at a point, where want to decide which way to go. Continuing to use my software, while knowing that my programming skills are limited as will be the performance of my code? Or start using one of the available tools (with an python interface) like pymc(3), sampyl, pystan, ...? While the latter options require to get used their syntax approach and to find out that all of them are limited in one or the other way, which I possibly could deal with but I am not sure at the moment? So what to do?",
  "id": "574beaaa80352f204df350f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-05-30T07:24:26.207Z",
  "text": "may I comment as someone who more applies this stuff rather than developing it. So far, I use(d) Bayesian inference via home brewed software. I am now at a point, where want to decide which way to go. Continuing to use my software, while knowing that my programming skills are limited as will be the performance of my code? Or start using one of the available tools (with an python interface) like pymc(3), sampyl, pystan, ...? While the latter options require to get used their syntax approach and to find out that all of them are limited in one or the other way, which I possibly could deal with but I am not sure at the moment? So what to do?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "use pymc3 :)",
  "id": "574c0a6ff44fde236e5197c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-05-30T09:39:59.939Z",
  "text": "use pymc3 :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "... if you know python. if you&#39;re not a programmer, use stan",
  "id": "574c0a90da3f93da6f21869d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-05-30T09:40:32.765Z",
  "text": "... if you know python. if you're not a programmer, use stan",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/sukram-n",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17848481?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17848481?v=3&s=60",
   "displayName": "sukram-n",
   "gv": "3",
   "id": "57480126c43b8c6019753cd3",
   "url": "/sukram-n",
   "username": "sukram-n",
   "v": 1
  },
  "html": "It seems that you are biased ... ;-)",
  "id": "574c1a5af44fde236e519c0b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-05-30T10:47:54.788Z",
  "text": "It seems that you are biased ... ;-)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "pymc3-biased answers in the pymc3-chatroom? outrageous ;)",
  "id": "574c1a9ba78d5a256e391754",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-05-30T10:48:59.964Z",
  "text": "pymc3-biased answers in the pymc3-chatroom? outrageous ;)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "seriously though, using either pystan or pymc3 (those are most mature options currently) will make you much more efficient",
  "id": "574c65a8da3f93da6f21a333",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-05-30T16:09:12.397Z",
  "text": "seriously though, using either pystan or pymc3 (those are most mature options currently) will make you much more efficient",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "they&#39;re quite easy to learn I think",
  "id": "574c65bd454cb2be095045bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-05-30T16:09:33.633Z",
  "text": "they're quite easy to learn I think",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/datnamer",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8646471?v=4&s=60",
   "displayName": "datnamer",
   "gv": "4",
   "id": "54602d6fdb8155e6700d316b",
   "url": "/datnamer",
   "username": "datnamer",
   "v": 10
  },
  "html": "I&#39;m also biased. Pymc 3 has much nicer syntax and flexibility :p ",
  "id": "574c96966bbc2d1d4def8bf1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-05-30T19:37:58.954Z",
  "text": "I'm also biased. Pymc 3 has much nicer syntax and flexibility :p ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-31T07:19:58.490Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/sukram-n",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17848481?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17848481?v=3&s=60",
   "displayName": "sukram-n",
   "gv": "3",
   "id": "57480126c43b8c6019753cd3",
   "url": "/sukram-n",
   "username": "sukram-n",
   "v": 1
  },
  "html": "No wonder that there biases in a Bayesian habitat ...",
  "id": "574d3a60f44fde236e51e280",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-05-31T07:16:48.912Z",
  "text": "No wonder that there biases in a Bayesian habitat ...",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/sukram-n",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17848481?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17848481?v=3&s=60",
   "displayName": "sukram-n",
   "gv": "3",
   "id": "57480126c43b8c6019753cd3",
   "url": "/sukram-n",
   "username": "sukram-n",
   "v": 1
  },
  "html": "and I have to confess, that I am skewed to pymc3. However, my above stated problem remains wants to be solved more or less now. Is there a way to contribute from my side?",
  "id": "574d3b0b80352f204df3a37b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-05-31T07:19:39.939Z",
  "text": "and I have to confess, that I am skewed to pymc3. However, my above stated problem remains wants to be solved more or less now. Is there a way to contribute from my side?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> <span data-link-type=\"mention\" data-screen-name=\"datnamer\" class=\"mention\">@datnamer</span> I think I&#39;ve discussed this with you before, but I&#39;ve had a lot of luck recently using the new-ish (since 1.0) code generation features in SymPy. You write the model symbolically and then use the code generator to dump f(x), f&#39;(x) to source code files, run the compiler in the background and then link the Python extension back into the interpreter. It sounds complicated but it&#39;s working pretty well, for me at least. I think <span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> will be talking about sympy codegen at SciPy this year",
  "id": "574e4182ec10ddbb09dc8dd5",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   },
   {
    "screenName": "datnamer",
    "userId": "54602d6fdb8155e6700d316b",
    "userIds": []
   },
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-01T01:59:30.023Z",
  "text": "@twiecki @datnamer I think I've discussed this with you before, but I've had a lot of luck recently using the new-ish (since 1.0) code generation features in SymPy. You write the model symbolically and then use the code generator to dump f(x), f'(x) to source code files, run the compiler in the background and then link the Python extension back into the interpreter. It sounds complicated but it's working pretty well, for me at least. I think @asmeurer will be talking about sympy codegen at SciPy this year",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "The disadvantage is you may have to write additional code printing code to handle functions not defined in the default generators",
  "id": "574e41eea78d5a256e39b6e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-06-01T02:01:18.844Z",
  "text": "The disadvantage is you may have to write additional code printing code to handle functions not defined in the default generators",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/brandonwillard",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/971601?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/971601?v=4&s=60",
   "displayName": "Brandon T. Willard",
   "gv": "4",
   "id": "5673079316b6c7089cbf14fc",
   "url": "/brandonwillard",
   "username": "brandonwillard",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"richardotis\" class=\"mention\">@richardotis</span> I love the SymPy + PyMC3 combination.  Last I checked, though, SymPy didn&#39;t handle vector/matrix/tensor analysis operations well.  For example, derivative identities like the ones found <a href=\"http://people.tuebingen.mpg.de/harmeling/bn142.pdf\" rel=\"nofollow\" target=\"_blank\" class=\"link\">here</a> weren&#39;t implemented in SymPy&#39;s derivative logic.   ",
  "id": "574e4f3f454cb2be0950ccc5",
  "issues": [],
  "mentions": [
   {
    "screenName": "richardotis",
    "userId": "55a137c15e0d51bd787b0b26",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-06-01T02:58:07.464Z",
  "text": "@richardotis I love the SymPy + PyMC3 combination.  Last I checked, though, SymPy didn't handle vector/matrix/tensor analysis operations well.  For example, derivative identities like the ones found [here](http://people.tuebingen.mpg.de/harmeling/bn142.pdf) weren't implemented in SymPy's derivative logic.   ",
  "unread": false,
  "urls": [
   {
    "url": "http://people.tuebingen.mpg.de/harmeling/bn142.pdf"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/brandonwillard",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/971601?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/971601?v=4&s=60",
   "displayName": "Brandon T. Willard",
   "gv": "4",
   "id": "5673079316b6c7089cbf14fc",
   "url": "/brandonwillard",
   "username": "brandonwillard",
   "v": 15
  },
  "html": "With that in mind, I have to ask how well the SymPy stats module handles tensors (if at all).  Do you have to manually handle arrays of SymPy objects to get the effect?",
  "id": "574e4ffcda3f93da6f222da4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-06-01T03:01:16.288Z",
  "text": "With that in mind, I have to ask how well the SymPy stats module handles tensors (if at all).  Do you have to manually handle arrays of SymPy objects to get the effect?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "thanks for the pointers <span data-link-type=\"mention\" data-screen-name=\"richardotis\" class=\"mention\">@richardotis</span>. <span data-link-type=\"mention\" data-screen-name=\"brandonwillard\" class=\"mention\">@brandonwillard</span> is correct though, the matrix/tensor support is not good enough yet",
  "id": "574e8310ec10ddbb09dc9824",
  "issues": [],
  "mentions": [
   {
    "screenName": "richardotis",
    "userId": "55a137c15e0d51bd787b0b26",
    "userIds": []
   },
   {
    "screenName": "brandonwillard",
    "userId": "5673079316b6c7089cbf14fc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-06-01T06:39:12.814Z",
  "text": "thanks for the pointers @richardotis. @brandonwillard is correct though, the matrix/tensor support is not good enough yet",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "new blog post: Bayesian Deep Learning <a href=\"http://twiecki.github.io/blog/2016/06/01/bayesian-deep-learning/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://twiecki.github.io/blog/2016/06/01/bayesian-deep-learning/</a>",
  "id": "574efe0610f0fed86f4a468d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-06-01T15:23:50.465Z",
  "text": "new blog post: Bayesian Deep Learning http://twiecki.github.io/blog/2016/06/01/bayesian-deep-learning/",
  "unread": false,
  "urls": [
   {
    "url": "http://twiecki.github.io/blog/2016/06/01/bayesian-deep-learning/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "tracking issue on that, if anyone wants to follow it <span data-link-type=\"issue\" data-issue=\"5858\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#5858</span>",
  "id": "574f2043ec10ddbb09dcd0da",
  "issues": [
   {
    "number": "5858",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-06-01T17:49:55.483Z",
  "text": "tracking issue on that, if anyone wants to follow it https://github.com/sympy/sympy/issues/5858",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/brandonwillard",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/971601?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/971601?v=4&s=60",
   "displayName": "Brandon T. Willard",
   "gv": "4",
   "id": "5673079316b6c7089cbf14fc",
   "url": "/brandonwillard",
   "username": "brandonwillard",
   "v": 15
  },
  "html": "ah, yeah, that&#39;s what I was referring to",
  "id": "574f20c0a78d5a256e39faa7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-06-01T17:52:00.593Z",
  "text": "ah, yeah, that's what I was referring to",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-01T18:07:36.659Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/brandonwillard",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/971601?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/971601?v=4&s=60",
   "displayName": "Brandon T. Willard",
   "gv": "4",
   "id": "5673079316b6c7089cbf14fc",
   "url": "/brandonwillard",
   "username": "brandonwillard",
   "v": 15
  },
  "html": "Theano essentially encodes that matrix derivative logic, so it seems possible to just offload that work to Theano.  However, it would be nice to use SymPy&#39;s integration and probability statement features (e.g. <code>P(X &gt; n, ...)</code>), but when vectors/matrices/tensors get involved so do Jacobians, and I don&#39;t think the Theano offloading can/should happen in those places",
  "id": "574f23fd6bbc2d1d4df04719",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-01T18:05:49.009Z",
  "text": "Theano essentially encodes that matrix derivative logic, so it seems possible to just offload that work to Theano.  However, it would be nice to use SymPy's integration and probability statement features (e.g. `P(X > n, ...)`), but when vectors/matrices/tensors get involved so do Jacobians, and I don't think the Theano offloading can/should happen in those places",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/brandonwillard",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/971601?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/971601?v=4&s=60",
   "displayName": "Brandon T. Willard",
   "gv": "4",
   "id": "5673079316b6c7089cbf14fc",
   "url": "/brandonwillard",
   "username": "brandonwillard",
   "v": 15
  },
  "html": "Perhaps a better example is random variable transforms; SymPy can do some of that for scalars, but not tensors.  Adding that functionality would probably require the tensor derivative logic that Theano has.",
  "id": "574f2531454cb2be09510fcf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-01T18:10:57.143Z",
  "text": "Perhaps a better example is random variable transforms; SymPy can do some of that for scalars, but not tensors.  Adding that functionality would probably require the tensor derivative logic that Theano has.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/ericmjonas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/36626?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/36626?v=3&s=60",
   "displayName": "Eric Jonas",
   "gv": "3",
   "id": "552d52c215522ed4b3defdad",
   "url": "/ericmjonas",
   "username": "ericmjonas",
   "v": 3
  },
  "html": "Ok the fact that the new variational stuff &quot;just works&quot; is amazing",
  "id": "574f803710f0fed86f4a7210",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-02T00:39:19.301Z",
  "text": "Ok the fact that the new variational stuff \"just works\" is amazing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "also added to the pymc3 docs: <a href=\"http://pymc-devs.github.io/pymc3/notebooks/bayesian_neural_network_advi.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://pymc-devs.github.io/pymc3/notebooks/bayesian_neural_network_advi.html</a>",
  "id": "574fd51680352f204df46784",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-02T06:41:26.966Z",
  "text": "also added to the pymc3 docs: http://pymc-devs.github.io/pymc3/notebooks/bayesian_neural_network_advi.html",
  "unread": false,
  "urls": [
   {
    "url": "http://pymc-devs.github.io/pymc3/notebooks/bayesian_neural_network_advi.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "Great post <span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> , did you try to scale up the network to more layers/neurons? Would be interesting to see how it performs compare to pure theano implementation such as Deep Belief Networks <a href=\"http://deeplearning.net/tutorial/DBN.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://deeplearning.net/tutorial/DBN.html</a>",
  "id": "574fe90f6bbc2d1d4df076b0",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-02T08:06:39.476Z",
  "text": "Great post @twiecki , did you try to scale up the network to more layers/neurons? Would be interesting to see how it performs compare to pure theano implementation such as Deep Belief Networks http://deeplearning.net/tutorial/DBN.html",
  "unread": false,
  "urls": [
   {
    "url": "http://deeplearning.net/tutorial/DBN.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "thanks <span data-link-type=\"mention\" data-screen-name=\"junpenglao\" class=\"mention\">@junpenglao</span>. haven&#39;t tried that yet but these are certainly worthwhile areas to explore!",
  "id": "574feb2b6bbc2d1d4df0776e",
  "issues": [],
  "mentions": [
   {
    "screenName": "junpenglao",
    "userId": "56e8df4685d51f252ab907f1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-02T08:15:39.257Z",
  "text": "thanks @junpenglao. haven't tried that yet but these are certainly worthwhile areas to explore!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> btw, i think it might worth to look into Tensorflow, it&#39;s in many way very similar to theano. And the accessibility to the tensorflow api might be much easier in the near future (web access to a backend through Google, etc). It would be totally cool to run PyMC3 from a browser or from a phone.",
  "id": "574ff20010f0fed86f4a8a50",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-02T08:44:48.097Z",
  "text": "@twiecki btw, i think it might worth to look into Tensorflow, it's in many way very similar to theano. And the accessibility to the tensorflow api might be much easier in the near future (web access to a backend through Google, etc). It would be totally cool to run PyMC3 from a browser or from a phone.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "definitely, we thought about it. currently I don&#39;t see many good reasons to switch (other than the coolness factor) as theano is quite mature and not behin tensorflow in terms of functionality or speed",
  "id": "574ff2b980352f204df4707b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-02T08:47:53.444Z",
  "text": "definitely, we thought about it. currently I don't see many good reasons to switch (other than the coolness factor) as theano is quite mature and not behin tensorflow in terms of functionality or speed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "probably still ahead",
  "id": "574ff2c86bbc2d1d4df079e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-02T08:48:08.148Z",
  "text": "probably still ahead",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/ericmjonas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/36626?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/36626?v=3&s=60",
   "displayName": "Eric Jonas",
   "gv": "3",
   "id": "552d52c215522ed4b3defdad",
   "url": "/ericmjonas",
   "username": "ericmjonas",
   "v": 3
  },
  "html": "I&#39;m trying to fit a GLM-like model and would like to minimize compile and run time for adding a new (x, y) observation pair. That is, I have a list of observations [(x1, y1), (x2, y2), ...., (xn, yn)] and do some inference to compute a posterior. I then observe a new (x<em>{n+1}, y</em>{n+1}) and want to update my posterior. Is there an idiomatic way of doing this in pymc? ",
  "id": "5750d95d10f0fed86f4ad9fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-03T01:11:57.698Z",
  "text": "I'm trying to fit a GLM-like model and would like to minimize compile and run time for adding a new (x, y) observation pair. That is, I have a list of observations [(x1, y1), (x2, y2), ...., (xn, yn)] and do some inference to compute a posterior. I then observe a new (x_{n+1}, y_{n+1}) and want to update my posterior. Is there an idiomatic way of doing this in pymc? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "One issue that was brought up during my discussions this week with the Stan folks is that we can&#39;t be sure that model outputs are valid when mixing NUTS (for continuous variables) and Metropolis (for discrete variables). The discrete variables changing outside of the NUTS algorithm may in fact destabilize the NUTS sampler; you may not be able to validly sample conditional on the current values of the discrete variables. In fact, it is entirely unknown. We need to compare models fit by integrating out the discrete variables with those fit using the mixed sampling approach.",
  "id": "5750e540f44fde236e530478",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-03T02:02:40.666Z",
  "text": "One issue that was brought up during my discussions this week with the Stan folks is that we can't be sure that model outputs are valid when mixing NUTS (for continuous variables) and Metropolis (for discrete variables). The discrete variables changing outside of the NUTS algorithm may in fact destabilize the NUTS sampler; you may not be able to validly sample conditional on the current values of the discrete variables. In fact, it is entirely unknown. We need to compare models fit by integrating out the discrete variables with those fit using the mixed sampling approach.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "Wow! How they know/think this could be a problem? Do you/they have an example where mixing Metropolis for discrete variables  and NUTS fails? Empirically the approach seems to work, of course we may have been fooling ourselves. What about mixing Metropolis and NUTS for continuous variables? Same problem?",
  "id": "575179e310972679212ffa14",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-03T12:36:51.905Z",
  "text": "Wow! How they know/think this could be a problem? Do you/they have an example where mixing Metropolis for discrete variables  and NUTS fails? Empirically the approach seems to work, of course we may have been fooling ourselves. What about mixing Metropolis and NUTS for continuous variables? Same problem?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "The idea is that the Hamiltonian dynamics may not work as expected when other variables in the model are changing that are not part of the gradient calculation. We dont  know its a problem (and probably isn&#39;t for simple models), but think it might be.",
  "id": "57518ea3824488852c4e984a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-06-03T14:05:23.169Z",
  "text": "The idea is that the Hamiltonian dynamics may not work as expected when other variables in the model are changing that are not part of the gradient calculation. We dont  know its a problem (and probably isn't for simple models), but think it might be.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "Interesting! So I guess the answer is related to check if detailed balance is satisfied.",
  "id": "5751a0ed3bdac7ae37b456e3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-06-03T15:23:25.477Z",
  "text": "Interesting! So I guess the answer is related to check if detailed balance is satisfied.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "It would make for a good publication if anyone needs additional motivation to evaluate this. ",
  "id": "5751b740e96484d0692f5707",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-06-03T16:58:40.327Z",
  "text": "It would make for a good publication if anyone needs additional motivation to evaluate this. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "I feel this is beyond my skills, I will ask a mathematician friend if he is interested. If so I can put him in contact with you <span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> ",
  "id": "5751ba75e96484d0692f5824",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2016-06-03T17:12:21.332Z",
  "text": "I feel this is beyond my skills, I will ask a mathematician friend if he is interested. If so I can put him in contact with you @fonnesbeck ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "When I was porting the models in Lee and Wagenmakers&#39; &quot;Bayesian Cognitive Modeling&quot; to pymc3, there are a few occasions the model mixed different sampling algorithm together, but i always get the same output as in STAN. ",
  "id": "5752c0da3bdac7ae37b49050",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-04T11:51:54.175Z",
  "text": "When I was porting the models in Lee and Wagenmakers' \"Bayesian Cognitive Modeling\" to pymc3, there are a few occasions the model mixed different sampling algorithm together, but i always get the same output as in STAN. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "But they are fairly simple models",
  "id": "5752c0e39be9c5b637f0627f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-04T11:52:03.765Z",
  "text": "But they are fairly simple models",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "yep, empirically the idea (apparently) works",
  "id": "5752d9cc824488852c4edd3a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-04T13:38:20.757Z",
  "text": "yep, empirically the idea (apparently) works",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "I think this could be interesting <a href=\"http://stoics.org.uk/plp/plp2016/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://stoics.org.uk/plp/plp2016/</a>",
  "id": "5755ae9d17856dc5179abc70",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-06T17:10:53.824Z",
  "text": "I think this could be interesting http://stoics.org.uk/plp/plp2016/",
  "unread": false,
  "urls": [
   {
    "url": "http://stoics.org.uk/plp/plp2016/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> before I create an issue for this, is there not a way for returning the calculated value of a <code>Deterministic</code> by passing it a <code>Point</code> (and a model)? I thought we could do this.",
  "id": "57578b49b5122bc217787d1a",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-06-08T03:04:41.560Z",
  "text": "@twiecki before I create an issue for this, is there not a way for returning the calculated value of a `Deterministic` by passing it a `Point` (and a model)? I thought we could do this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "not sure how you mean",
  "id": "5757c0f917856dc5179b4f56",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-06-08T06:53:45.429Z",
  "text": "not sure how you mean",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Sorted it out. Please disregard.",
  "id": "57582f0c75a601a158b0f49f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-06-08T14:43:24.250Z",
  "text": "Sorted it out. Please disregard.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<a href=\"https://github.com/pymc-devs/pymc3/issues/1167#issuecomment-224697232\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/issues/1167#issuecomment-224697232</a> &lt;- anyone wants to collaborate on this?",
  "id": "575879e9e20024bd1ad1ac62",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-06-08T20:02:49.678Z",
  "text": "https://github.com/pymc-devs/pymc3/issues/1167#issuecomment-224697232 <- anyone wants to collaborate on this?",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/issues/1167#issuecomment-224697232"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "Which is the proper way to run tests locally before doing a pull request? ",
  "id": "575b16e51cf76dd645360934",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-06-10T19:37:09.411Z",
  "text": "Which is the proper way to run tests locally before doing a pull request? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<code>nosetests tests</code>",
  "id": "575b1fabe20024bd1ad27097",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-06-10T20:14:35.601Z",
  "text": "`nosetests tests`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "Thanks! I tried that and took a lot of time. I will check it again",
  "id": "575b3e20e20024bd1ad278db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-06-10T22:24:32.253Z",
  "text": "Thanks! I tried that and took a lot of time. I will check it again",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "It takes almost 1 hour. I get a memory allocation error from theano.gof.cmodule. All the RAM  (4Gb) is occupied and about 80% of swap memory (2 Gb). The notebook becomes useless for most part of the test. Any idea how to fix this. It usually takes so long?",
  "id": "575b4ba46092456f663310b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-06-10T23:22:12.651Z",
  "text": "It takes almost 1 hour. I get a memory allocation error from theano.gof.cmodule. All the RAM  (4Gb) is occupied and about 80% of swap memory (2 Gb). The notebook becomes useless for most part of the test. Any idea how to fix this. It usually takes so long?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arkmagus",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=60",
   "displayName": "arkmagus",
   "gv": "3",
   "id": "575d4764c2f0db084a1d71b5",
   "url": "/arkmagus",
   "username": "arkmagus",
   "v": 4
  },
  "html": "Hello, I am new with PyMC. So I tried to create hierarchical Beta-Binomial model (screenshot graphical model + JAGS code : <a href=\"http://imgur.com/a/bEV5U\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://imgur.com/a/bEV5U</a>)  from Doing Bayesian Data Analysis book (source code : <a href=\"https://gist.github.com/arkmagus/827fa0b6104d4ac76dc19cfead0eec43)\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/arkmagus/827fa0b6104d4ac76dc19cfead0eec43)</a>. However, I got different result with the code from RJags especially for the first omega_cat[0] posterior distribution where the JAGS omega_cat[0] mode near 0.122 but PyMC mean near 0.151.<br>I have tried to calculate number of hits given the hitter is pitcher is 650 / 5033 = 0.129, which is closer to JAGS result rather than PyMC results. I will be very happy if someone can help me to get correct code for this problem. Thank you :smile: ",
  "id": "575d4cc3814a5680714247bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-06-12T11:51:31.684Z",
  "text": "Hello, I am new with PyMC. So I tried to create hierarchical Beta-Binomial model (screenshot graphical model + JAGS code : http://imgur.com/a/bEV5U)  from Doing Bayesian Data Analysis book (source code : https://gist.github.com/arkmagus/827fa0b6104d4ac76dc19cfead0eec43). However, I got different result with the code from RJags especially for the first omega_cat[0] posterior distribution where the JAGS omega_cat[0] mode near 0.122 but PyMC mean near 0.151. \nI have tried to calculate number of hits given the hitter is pitcher is 650 / 5033 = 0.129, which is closer to JAGS result rather than PyMC results. I will be very happy if someone can help me to get correct code for this problem. Thank you :smile: ",
  "unread": false,
  "urls": [
   {
    "url": "http://imgur.com/a/bEV5U"
   },
   {
    "url": "https://gist.github.com/arkmagus/827fa0b6104d4ac76dc19cfead0eec43)"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"arkmagus\" class=\"mention\">@arkmagus</span> the link to your model is broken; can you double check it? Are you using PyMC2 or 3?",
  "id": "575d8a80814a568071425278",
  "issues": [],
  "mentions": [
   {
    "screenName": "arkmagus",
    "userId": "575d4764c2f0db084a1d71b5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2016-06-12T16:14:56.842Z",
  "text": "@arkmagus the link to your model is broken; can you double check it? Are you using PyMC2 or 3?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arkmagus",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=60",
   "displayName": "arkmagus",
   "gv": "3",
   "id": "575d4764c2f0db084a1d71b5",
   "url": "/arkmagus",
   "username": "arkmagus",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> <a href=\"https://gist.github.com/arkmagus/827fa0b6104d4ac76dc19cfead0eec43\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/arkmagus/827fa0b6104d4ac76dc19cfead0eec43</a> (the closing parentheses mess up). I use PyMC3 ",
  "id": "575d9fd6064b9e7266f1d056",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2016-06-12T17:45:58.975Z",
  "text": "@fonnesbeck https://gist.github.com/arkmagus/827fa0b6104d4ac76dc19cfead0eec43 (the closing parentheses mess up). I use PyMC3 ",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/arkmagus/827fa0b6104d4ac76dc19cfead0eec43"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2016-06-12T17:48:47.661Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arkmagus",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=60",
   "displayName": "arkmagus",
   "gv": "3",
   "id": "575d4764c2f0db084a1d71b5",
   "url": "/arkmagus",
   "username": "arkmagus",
   "v": 4
  },
  "html": "this is the result screenshot : <a href=\"http://imgur.com/a/SjMsK\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://imgur.com/a/SjMsK</a> for comparison between RJAGS and PyMC  (top is RJAGS, bottom is PyMC pm.summary on first omega_cat_pm[0])",
  "id": "575da046814a56807142570b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-06-12T17:47:50.687Z",
  "text": "this is the result screenshot : http://imgur.com/a/SjMsK for comparison between RJAGS and PyMC  (top is RJAGS, bottom is PyMC pm.summary on first omega_cat_pm[0])",
  "unread": false,
  "urls": [
   {
    "url": "http://imgur.com/a/SjMsK"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Use <code>1/r_kappa</code> instead of <code>r_kappa</code>. We use a different parameterization than BUGS. ",
  "id": "575db1bda1be01c01a793d3f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-06-12T19:02:21.630Z",
  "text": "Use `1/r_kappa` instead of `r_kappa`. We use a different parameterization than BUGS. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-13T07:14:50.745Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arkmagus",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=60",
   "displayName": "arkmagus",
   "gv": "3",
   "id": "575d4764c2f0db084a1d71b5",
   "url": "/arkmagus",
   "username": "arkmagus",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> Now I have tried to change \\beta from Gamma into 1/r_kappa but get worse result. Then, I read the JAGS documentation ( <a href=\"http://people.math.aau.dk/~kkb/Undervisning/Bayes14/sorenh/docs/jags_user_manual.pdf\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://people.math.aau.dk/~kkb/Undervisning/Bayes14/sorenh/docs/jags_user_manual.pdf</a> ) ( gamma distribution parameter screenshot :  <a href=\"http://imgur.com/DwzWenr\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://imgur.com/DwzWenr</a> ), the JAGS r &amp; lambda is same as \\alpha and \\beta for PyMC3 I think. CMIIW",
  "id": "575e5cd9064b9e7266f1f308",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-06-13T07:12:25.721Z",
  "text": "@fonnesbeck Now I have tried to change \\beta from Gamma into 1/r_kappa but get worse result. Then, I read the JAGS documentation ( http://people.math.aau.dk/~kkb/Undervisning/Bayes14/sorenh/docs/jags_user_manual.pdf ) ( gamma distribution parameter screenshot :  http://imgur.com/DwzWenr ), the JAGS r & lambda is same as \\alpha and \\beta for PyMC3 I think. CMIIW",
  "unread": false,
  "urls": [
   {
    "url": "http://people.math.aau.dk/~kkb/Undervisning/Bayes14/sorenh/docs/jags_user_manual.pdf"
   },
   {
    "url": "http://imgur.com/DwzWenr"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"arkmagus\" class=\"mention\">@arkmagus</span> yes, there&#39;s where I had it from",
  "id": "575e66e61cf76dd645369712",
  "issues": [],
  "mentions": [
   {
    "screenName": "arkmagus",
    "userId": "575d4764c2f0db084a1d71b5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-06-13T07:55:18.868Z",
  "text": "@arkmagus yes, there's where I had it from",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "just thought it was cumbersome to always have to do the transformation",
  "id": "575e66f9a1be01c01a795ec6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-13T07:55:37.185Z",
  "text": "just thought it was cumbersome to always have to do the transformation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Ok , sorry. I did not realize we had changed it. Do you get a different result with NUTS sampling?",
  "id": "575e68c2a1be01c01a795f65",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-13T08:03:14.240Z",
  "text": "Ok , sorry. I did not realize we had changed it. Do you get a different result with NUTS sampling?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arkmagus",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=60",
   "displayName": "arkmagus",
   "gv": "3",
   "id": "575d4764c2f0db084a1d71b5",
   "url": "/arkmagus",
   "username": "arkmagus",
   "v": 4
  },
  "html": "I have used NUTS sampling, but so slow. For metropolis 20k samples, its complete within 2 minutes, but NUTS needs more than 30 minutes. RJAGS needs about 1 mins IIRC",
  "id": "575e6a3f1cf76dd645369827",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-13T08:09:35.260Z",
  "text": "I have used NUTS sampling, but so slow. For metropolis 20k samples, its complete within 2 minutes, but NUTS needs more than 30 minutes. RJAGS needs about 1 mins IIRC",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "seems like NUTS has gotten slower somehow..",
  "id": "575e6a5d6092456f66338ff3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-13T08:10:05.057Z",
  "text": "seems like NUTS has gotten slower somehow..",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arkmagus",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=60",
   "displayName": "arkmagus",
   "gv": "3",
   "id": "575d4764c2f0db084a1d71b5",
   "url": "/arkmagus",
   "username": "arkmagus",
   "v": 4
  },
  "html": "For that model, NUTS didnt give better result than Metropolis if I remember correctly",
  "id": "575e706b97e1b2d245e2411b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-13T08:35:55.080Z",
  "text": "For that model, NUTS didnt give better result than Metropolis if I remember correctly",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arkmagus",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=60",
   "displayName": "arkmagus",
   "gv": "3",
   "id": "575d4764c2f0db084a1d71b5",
   "url": "/arkmagus",
   "username": "arkmagus",
   "v": 4
  },
  "html": "So currently I keep using Metropolis as the sampler",
  "id": "575e707da1be01c01a7961e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-06-13T08:36:13.426Z",
  "text": "So currently I keep using Metropolis as the sampler",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yeah,  Metropolis works well in most circumstances",
  "id": "575e70d32eaa837d71e8f131",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-06-13T08:37:39.750Z",
  "text": "yeah,  Metropolis works well in most circumstances",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-13T09:04:03.838Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arkmagus",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=60",
   "displayName": "arkmagus",
   "gv": "3",
   "id": "575d4764c2f0db084a1d71b5",
   "url": "/arkmagus",
   "username": "arkmagus",
   "v": 4
  },
  "html": "I will attach the dataset for anyone who interested to run the model ( <a href=\"https://gist.github.com/arkmagus/f1170016269fff3279eace607177261c\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/arkmagus/f1170016269fff3279eace607177261c</a> ). ",
  "id": "575e76851cf76dd645369c71",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-06-13T09:01:57.843Z",
  "text": "I will attach the dataset for anyone who interested to run the model ( https://gist.github.com/arkmagus/f1170016269fff3279eace607177261c ). ",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/arkmagus/f1170016269fff3279eace607177261c"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arkmagus",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=60",
   "displayName": "arkmagus",
   "gv": "3",
   "id": "575d4764c2f0db084a1d71b5",
   "url": "/arkmagus",
   "username": "arkmagus",
   "v": 4
  },
  "html": "so is anyone has an idea ? or should I tried using PyMC2 instead ?",
  "id": "57601d32814a568071431491",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-06-14T15:05:22.451Z",
  "text": "so is anyone has an idea ? or should I tried using PyMC2 instead ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "I will figure it out. I did not have time to get to it yesterday. ",
  "id": "57601e10c77287463a975cac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-06-14T15:09:04.892Z",
  "text": "I will figure it out. I did not have time to get to it yesterday. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arkmagus",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=60",
   "displayName": "arkmagus",
   "gv": "3",
   "id": "575d4764c2f0db084a1d71b5",
   "url": "/arkmagus",
   "username": "arkmagus",
   "v": 4
  },
  "html": "thanks <span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> , sorry for the inconvenient ",
  "id": "57601f3d52352c840281eb9b",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2016-06-14T15:14:05.357Z",
  "text": "thanks @fonnesbeck , sorry for the inconvenient ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Hey folks. I&#39;ve developed some teaching materials for a PyMC workshop that ive been teaching this week in Norway. The repository is here: <a href=\"https://github.com/fonnesbeck/PyMC3_Oslo\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/fonnesbeck/PyMC3_Oslo</a>",
  "id": "57601fe3b8ad3d5d7edfe9f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-06-14T15:16:51.788Z",
  "text": "Hey folks. I've developed some teaching materials for a PyMC workshop that ive been teaching this week in Norway. The repository is here: https://github.com/fonnesbeck/PyMC3_Oslo",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/fonnesbeck/PyMC3_Oslo"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "some of the material i have written, and some is from the docs or the paper. It might be something we want to develop as a set of courseware for teaching PyMC more genrerally. The material can be taught in 1-2 days depending course. Have a peek and see what you think. ",
  "id": "57602055f191398330a05484",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-06-14T15:18:45.691Z",
  "text": "some of the material i have written, and some is from the docs or the paper. It might be something we want to develop as a set of courseware for teaching PyMC more genrerally. The material can be taught in 1-2 days depending course. Have a peek and see what you think. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> super! Binder is not responsive at the moment, I&#39;ll try them out asap",
  "id": "5760209263ea0987306aae23",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2016-06-14T15:19:46.016Z",
  "text": "@fonnesbeck super! Binder is not responsive at the moment, I'll try them out asap",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> ! The material looks great! BTW I am getting a binder error on Pydot not installed.",
  "id": "57602ce9dfb1d8aa45a33dda",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2016-06-14T16:12:25.639Z",
  "text": "Thanks @fonnesbeck ! The material looks great! BTW I am getting a binder error on Pydot not installed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"arkmagus\" class=\"mention\">@arkmagus</span> NUTS sometimes is very sensitive to the starting value (at least in STAN). Maybe you can try choosing different starting values.",
  "id": "57602d7bf191398330a05ab6",
  "issues": [],
  "mentions": [
   {
    "screenName": "arkmagus",
    "userId": "575d4764c2f0db084a1d71b5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2016-06-14T16:14:51.836Z",
  "text": "@arkmagus NUTS sometimes is very sensitive to the starting value (at least in STAN). Maybe you can try choosing different starting values.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arkmagus",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=60",
   "displayName": "arkmagus",
   "gv": "3",
   "id": "575d4764c2f0db084a1d71b5",
   "url": "/arkmagus",
   "username": "arkmagus",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"junpenglao\" class=\"mention\">@junpenglao</span> In my attached script I use Metropolis ",
  "id": "57602db6da1c26b04535eb3b",
  "issues": [],
  "mentions": [
   {
    "screenName": "junpenglao",
    "userId": "56e8df4685d51f252ab907f1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2016-06-14T16:15:50.004Z",
  "text": "@junpenglao In my attached script I use Metropolis ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"junpenglao\" class=\"mention\">@junpenglao</span> yeah, unfortunately even though I have specified pydot as a dependency, binder does not seem to install graphviz, on which it depends.",
  "id": "57604a3336c83a88020588cc",
  "issues": [],
  "mentions": [
   {
    "screenName": "junpenglao",
    "userId": "56e8df4685d51f252ab907f1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2016-06-14T18:17:23.910Z",
  "text": "@junpenglao yeah, unfortunately even though I have specified pydot as a dependency, binder does not seem to install graphviz, on which it depends.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"arkmagus\" class=\"mention\">@arkmagus</span> I know this doesnt answer your question, but here&#39;s how I would have modeled the data:<pre><code><span class=\"tag\">with</span> <span class=\"tag\">pm</span><span class=\"class\">.Model</span>() <span class=\"tag\">as</span> <span class=\"rule\"><span class=\"attribute\">model </span>:<span class=\"value\">\n\n    # Random effect hyperparameters\n    mu_pos = pm.<span class=\"function\">Normal</span>(<span class=\"string\">'mu_pos'</span>, <span class=\"number\">0</span>, sd=<span class=\"number\">1</span>e5, shape=N_pripos)\n    sigma_pos = pm.<span class=\"function\">HalfCauchy</span>(<span class=\"string\">'sigma_pos'</span>, <span class=\"number\">5</span>, shape=N_pripos)\n\n    # Mean by position\n    omega_pos = pm.<span class=\"function\">Deterministic</span>(<span class=\"string\">'omega_pos'</span>, pm.<span class=\"function\">invlogit</span>(mu_pos))\n\n    # Batting averages sampled from position means and sds\n    omega_player = pm.<span class=\"function\">Normal</span>(<span class=\"string\">'omega_player'</span>, mu_pos[data_pripos], sd=sigma_pos[data_pripos], shape=N_player)\n\n    like = pm.<span class=\"function\">Binomial</span>(<span class=\"string\">'like'</span>, p=pm.<span class=\"function\">invlogit</span>(omega_player), n=data_numbats, observed=data_hits)\n\n    # inference\n    step = pm.<span class=\"function\">NUTS</span>()\n    trace_result = pm.<span class=\"function\">sample</span>(<span class=\"number\">2000</span>, step=step)</span></span></code></pre>",
  "id": "576087b236c83a880205a355",
  "issues": [],
  "mentions": [
   {
    "screenName": "arkmagus",
    "userId": "575d4764c2f0db084a1d71b5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2016-06-14T22:39:46.331Z",
  "text": "@arkmagus I know this doesnt answer your question, but here's how I would have modeled the data:\n\n```\nwith pm.Model() as model :\n\n    # Random effect hyperparameters\n    mu_pos = pm.Normal('mu_pos', 0, sd=1e5, shape=N_pripos)\n    sigma_pos = pm.HalfCauchy('sigma_pos', 5, shape=N_pripos)\n    \n    # Mean by position\n    omega_pos = pm.Deterministic('omega_pos', pm.invlogit(mu_pos))\n    \n    # Batting averages sampled from position means and sds\n    omega_player = pm.Normal('omega_player', mu_pos[data_pripos], sd=sigma_pos[data_pripos], shape=N_player)\n\n    like = pm.Binomial('like', p=pm.invlogit(omega_player), n=data_numbats, observed=data_hits)\n\n    # inference\n    step = pm.NUTS()\n    trace_result = pm.sample(2000, step=step)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "And I get a good result with this:",
  "id": "576087c4b8ad3d5d7ee01699",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-06-14T22:40:04.378Z",
  "text": "And I get a good result with this:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<a href=\"https://files.gitter.im/pymc-devs/pymc/m4IN/Unknown.png\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/pymc-devs/pymc/m4IN/thumb/Unknown.png\" alt=\"Unknown.png\" rel=\"nofollow\"></a>",
  "id": "576087f163ea0987306adb2a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-06-14T22:40:49.446Z",
  "text": "[![Unknown.png](https://files.gitter.im/pymc-devs/pymc/m4IN/thumb/Unknown.png)](https://files.gitter.im/pymc-devs/pymc/m4IN/Unknown.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/m4IN/thumb/Unknown.png"
   },
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/m4IN/Unknown.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Will try to dig into the beta parameterization tomorrow.",
  "id": "5760880736c83a880205a375",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-06-14T22:41:11.611Z",
  "text": "Will try to dig into the beta parameterization tomorrow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-15T14:08:29.127Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arkmagus",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=60",
   "displayName": "arkmagus",
   "gv": "3",
   "id": "575d4764c2f0db084a1d71b5",
   "url": "/arkmagus",
   "username": "arkmagus",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> thanks, I have tried your snippet, and it produced same result as your figure. TBH I haven&#39;t read about NUTS sampler algorithm, but I am curious is your NUTS sampler took longer time compared MH sampler ? &gt; [-----------------100%-----------------] 2001 of 2000 complete in 401.2 sec",
  "id": "5761613c7a851b587e6f08bb",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2016-06-15T14:07:56.083Z",
  "text": "@fonnesbeck thanks, I have tried your snippet, and it produced same result as your figure. TBH I haven't read about NUTS sampler algorithm, but I am curious is your NUTS sampler took longer time compared MH sampler ? > [-----------------100%-----------------] 2001 of 2000 complete in 401.2 sec",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "NUTS is always slower per iteration, but is a far more efficient sampler. The correct metric is the effective sa",
  "id": "57618b6852352c8402827055",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-06-15T17:07:52.600Z",
  "text": "NUTS is always slower per iteration, but is a far more efficient sampler. The correct metric is the effective sa",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "... sample size per unit time. ",
  "id": "57618baada1c26b045366607",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-06-15T17:08:58.866Z",
  "text": "... sample size per unit time. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "For a model I would typically take 50-100K samples in Metripolis, I typically take 2-5K with NUTS, all else being equal. ",
  "id": "57618bdfda1c26b04536661b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-06-15T17:09:51.880Z",
  "text": "For a model I would typically take 50-100K samples in Metripolis, I typically take 2-5K with NUTS, all else being equal. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arkmagus",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=60",
   "displayName": "arkmagus",
   "gv": "3",
   "id": "575d4764c2f0db084a1d71b5",
   "url": "/arkmagus",
   "username": "arkmagus",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> I think I found which part my of my code causes those inaccurate result",
  "id": "5761924052352c8402827332",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2016-06-15T17:37:04.343Z",
  "text": "@fonnesbeck I think I found which part my of my code causes those inaccurate result",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arkmagus",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=60",
   "displayName": "arkmagus",
   "gv": "3",
   "id": "575d4764c2f0db084a1d71b5",
   "url": "/arkmagus",
   "username": "arkmagus",
   "v": 4
  },
  "html": "I just run again my script with NUTS sampler and I removed the MAP initialization. The omega_pos[1] mean become 0.121 (close to the MLE result)",
  "id": "5761928bf191398330a0d8c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-06-15T17:38:19.771Z",
  "text": "I just run again my script with NUTS sampler and I removed the MAP initialization. The omega_pos[1] mean become 0.121 (close to the MLE result)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arkmagus",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=60",
   "displayName": "arkmagus",
   "gv": "3",
   "id": "575d4764c2f0db084a1d71b5",
   "url": "/arkmagus",
   "username": "arkmagus",
   "v": 4
  },
  "html": "Is MAP init harmful for NUTS ?",
  "id": "5761929736c83a880205fb26",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-06-15T17:38:31.480Z",
  "text": "Is MAP init harmful for NUTS ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arkmagus",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=60",
   "displayName": "arkmagus",
   "gv": "3",
   "id": "575d4764c2f0db084a1d71b5",
   "url": "/arkmagus",
   "username": "arkmagus",
   "v": 4
  },
  "html": "edited model : <a href=\"https://gist.github.com/arkmagus/827fa0b6104d4ac76dc19cfead0eec43\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/arkmagus/827fa0b6104d4ac76dc19cfead0eec43</a>",
  "id": "5761930ef191398330a0d90d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-06-15T17:40:30.123Z",
  "text": "edited model : https://gist.github.com/arkmagus/827fa0b6104d4ac76dc19cfead0eec43",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/arkmagus/827fa0b6104d4ac76dc19cfead0eec43"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"arkmagus\" class=\"mention\">@arkmagus</span> its only harmful if it picks a poor starting value! Otherwise it helps.",
  "id": "5761a7fcf191398330a0e1c3",
  "issues": [],
  "mentions": [
   {
    "screenName": "arkmagus",
    "userId": "575d4764c2f0db084a1d71b5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2016-06-15T19:09:48.074Z",
  "text": "@arkmagus its only harmful if it picks a poor starting value! Otherwise it helps.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/springcoil",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/983944?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/983944?v=4&s=60",
   "displayName": "Peadar Coyle",
   "gv": "4",
   "id": "55cd15780fc9f982bead5155",
   "url": "/springcoil",
   "username": "springcoil",
   "v": 9
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jamestwebber\" class=\"mention\">@jamestwebber</span> Hey man",
  "id": "5761cefcda1c26b04536845b",
  "issues": [],
  "mentions": [
   {
    "screenName": "jamestwebber",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2016-06-15T21:56:12.689Z",
  "text": "@jamestwebber Hey man",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arkmagus",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=60",
   "displayName": "arkmagus",
   "gv": "3",
   "id": "575d4764c2f0db084a1d71b5",
   "url": "/arkmagus",
   "username": "arkmagus",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> Oh OK I get it now. Thank you so much for your help :smile: ! ",
  "id": "576248f8b8ad3d5d7ee0a36c",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2016-06-16T06:36:40.630Z",
  "text": "@fonnesbeck Oh OK I get it now. Thank you so much for your help :smile: ! ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/jonsjoberg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11414302?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11414302?v=3&s=60",
   "displayName": "jonsjoberg",
   "gv": "3",
   "id": "5765175ec2f0db084a1e94d2",
   "url": "/jonsjoberg",
   "username": "jonsjoberg",
   "v": 6
  },
  "html": "Hi! I&#39;m also new to PyMC (a bayesian inference in general) and I&#39;m also working through the Doing Bayesian Data Analysis book. Currently I&#39;m having issue with getting good results from PyMC3 for a hierachical linear regression with a quadratic term and weighted data (so chapter 17.4 in the book, here is a handdrawn sketch of the model <a href=\"http://imgur.com/kMHEQok\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://imgur.com/kMHEQok</a>). Here is the code for how I would like to model it <a href=\"https://github.com/jonsjoberg/hierachical_linear_regression/blob/master/hierarchical_lin_reg_quad.ipynb\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/jonsjoberg/hierachical_linear_regression/blob/master/hierarchical_lin_reg_quad.ipynb</a> (and an equivalent model works fine in Stan) but the NUTS sampler in PyMC3 seems to get stuck (it managed to draw two samples in the last 5 minutes). If I change to a metropolis sampler and standardize the data the model runs fine but the results are not as good as what I get from Stan (<a href=\"http://imgur.com/W1v94E8\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://imgur.com/W1v94E8</a>, the blue lines are from stan and the red from PyMC3, this is showing the overall trend). So I guess I have two questions, anything that stands out to as wrong with my model/code and is causing the NUTS sampler to stall? What is a good way of modelling problems like this, if this is not?<br>(For a simpler case without the quadratic term and the weights I got similar results from PyMC3, with standardizing and a metropolis sampler, as I got from Stan, as I&#39;ve discussed with <span data-link-type=\"mention\" data-screen-name=\"aloctavodia\" class=\"mention\">@aloctavodia</span> on stackoverflow) ",
  "id": "5765231dbd67400679daa685",
  "issues": [],
  "mentions": [
   {
    "screenName": "aloctavodia",
    "userId": "54314cd8163965c9bc208e0f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2016-06-18T10:31:57.971Z",
  "text": "Hi! I'm also new to PyMC (a bayesian inference in general) and I'm also working through the Doing Bayesian Data Analysis book. Currently I'm having issue with getting good results from PyMC3 for a hierachical linear regression with a quadratic term and weighted data (so chapter 17.4 in the book, here is a handdrawn sketch of the model http://imgur.com/kMHEQok). Here is the code for how I would like to model it https://github.com/jonsjoberg/hierachical_linear_regression/blob/master/hierarchical_lin_reg_quad.ipynb (and an equivalent model works fine in Stan) but the NUTS sampler in PyMC3 seems to get stuck (it managed to draw two samples in the last 5 minutes). If I change to a metropolis sampler and standardize the data the model runs fine but the results are not as good as what I get from Stan (http://imgur.com/W1v94E8, the blue lines are from stan and the red from PyMC3, this is showing the overall trend). So I guess I have two questions, anything that stands out to as wrong with my model/code and is causing the NUTS sampler to stall? What is a good way of modelling problems like this, if this is not? \n(For a simpler case without the quadratic term and the weights I got similar results from PyMC3, with standardizing and a metropolis sampler, as I got from Stan, as I've discussed with @aloctavodia on stackoverflow) ",
  "unread": false,
  "urls": [
   {
    "url": "http://imgur.com/kMHEQok"
   },
   {
    "url": "https://github.com/jonsjoberg/hierachical_linear_regression/blob/master/hierarchical_lin_reg_quad.ipynb"
   },
   {
    "url": "http://imgur.com/W1v94E8"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "does standardizing help NUTS in PyMC3?",
  "id": "576529bfa82a6b0079a6b9d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2016-06-18T11:00:15.317Z",
  "text": "does standardizing help NUTS in PyMC3?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-18T13:20:26.015Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/jonsjoberg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11414302?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11414302?v=3&s=60",
   "displayName": "jonsjoberg",
   "gv": "3",
   "id": "5765175ec2f0db084a1e94d2",
   "url": "/jonsjoberg",
   "username": "jonsjoberg",
   "v": 6
  },
  "html": "No, it gets stuck when the data is standardized as well",
  "id": "57654a892a4cd63745ea8d41",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2016-06-18T13:20:09.160Z",
  "text": "No, it gets stuck when the data is standardized as well",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/jonsjoberg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11414302?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11414302?v=3&s=60",
   "displayName": "jonsjoberg",
   "gv": "3",
   "id": "5765175ec2f0db084a1e94d2",
   "url": "/jonsjoberg",
   "username": "jonsjoberg",
   "v": 6
  },
  "html": "If I remove the find_MAP() step it actually proceeds a little bit quicker, although it&#39;s still very slow (I have gotten 1443 samples in 12632 seconds, with standardized data)",
  "id": "5765910efeaf6cd222acce19",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2016-06-18T18:21:02.069Z",
  "text": "If I remove the find_MAP() step it actually proceeds a little bit quicker, although it's still very slow (I have gotten 1443 samples in 12632 seconds, with standardized data)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "you can try initializing with ADVI",
  "id": "57659124feaf6cd222acce1d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2016-06-18T18:21:24.265Z",
  "text": "you can try initializing with ADVI",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "it&#39;s in the stochastic vol example",
  "id": "5765912e4227fdc92298423f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2016-06-18T18:21:34.748Z",
  "text": "it's in the stochastic vol example",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/jonsjoberg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11414302?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11414302?v=3&s=60",
   "displayName": "jonsjoberg",
   "gv": "3",
   "id": "5765175ec2f0db084a1e94d2",
   "url": "/jonsjoberg",
   "username": "jonsjoberg",
   "v": 6
  },
  "html": "Thanks, I&#39;ll give it a try later",
  "id": "576591bd2a4cd63745ea9fbb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2016-06-18T18:23:57.453Z",
  "text": "Thanks, I'll give it a try later",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/jonsjoberg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11414302?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11414302?v=3&s=60",
   "displayName": "jonsjoberg",
   "gv": "3",
   "id": "5765175ec2f0db084a1e94d2",
   "url": "/jonsjoberg",
   "username": "jonsjoberg",
   "v": 6
  },
  "html": "About using advi, in that example (<a href=\"http://pymc-devs.github.io/pymc3/notebooks/stochastic_volatility.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://pymc-devs.github.io/pymc3/notebooks/stochastic_volatility.html</a>) I can&#39;t seem to find the function model.dict_to_array(..) ?",
  "id": "576656824227fdc9229862aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2016-06-19T08:23:30.273Z",
  "text": "About using advi, in that example (http://pymc-devs.github.io/pymc3/notebooks/stochastic_volatility.html) I can't seem to find the function model.dict_to_array(..) ?",
  "unread": false,
  "urls": [
   {
    "url": "http://pymc-devs.github.io/pymc3/notebooks/stochastic_volatility.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "are you up-to-date on master?",
  "id": "5767b3526577f032450cbe0b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2016-06-20T09:11:46.179Z",
  "text": "are you up-to-date on master?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/jonsjoberg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11414302?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11414302?v=3&s=60",
   "displayName": "jonsjoberg",
   "gv": "3",
   "id": "5765175ec2f0db084a1e94d2",
   "url": "/jonsjoberg",
   "username": "jonsjoberg",
   "v": 6
  },
  "html": "Ah, it was that easy to fix =)",
  "id": "5768588af0528c4c5bbaf022",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2016-06-20T20:56:42.809Z",
  "text": "Ah, it was that easy to fix =)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/springcoil",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/983944?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/983944?v=4&s=60",
   "displayName": "Peadar Coyle",
   "gv": "4",
   "id": "55cd15780fc9f982bead5155",
   "url": "/springcoil",
   "username": "springcoil",
   "v": 9
  },
  "html": "Often the a",
  "id": "5768633ebd67400679db7477",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2016-06-20T21:42:22.668Z",
  "text": "Often the a",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/springcoil",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/983944?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/983944?v=4&s=60",
   "displayName": "Peadar Coyle",
   "gv": "4",
   "id": "55cd15780fc9f982bead5155",
   "url": "/springcoil",
   "username": "springcoil",
   "v": 9
  },
  "html": "way :)",
  "id": "576863432a4cd63745eb567f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2016-06-20T21:42:27.214Z",
  "text": "way :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arkmagus",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=60",
   "displayName": "arkmagus",
   "gv": "3",
   "id": "575d4764c2f0db084a1d71b5",
   "url": "/arkmagus",
   "username": "arkmagus",
   "v": 4
  },
  "html": "Is PyMC3 has pm.Container ? I am trying to implement Categorical Mixture Model, but I dont know how to define Dirichlet distribution for each item prior distribution given cluster (in this form -&gt; R_{num_of_cluster x num_of_item_per_cluster})",
  "id": "576a2c735ba3ccaa25b67b4c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-06-22T06:13:07.925Z",
  "text": "Is PyMC3 has pm.Container ? I am trying to implement Categorical Mixture Model, but I dont know how to define Dirichlet distribution for each item prior distribution given cluster (in this form -> R_{num_of_cluster x num_of_item_per_cluster})",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arkmagus",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=60",
   "displayName": "arkmagus",
   "gv": "3",
   "id": "575d4764c2f0db084a1d71b5",
   "url": "/arkmagus",
   "username": "arkmagus",
   "v": 4
  },
  "html": "So I can sample like this theta[topic_z] where topic_z ~ Categorical",
  "id": "576a31bec7594b5f0dd1795b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-06-22T06:35:42.591Z",
  "text": "So I can sample like this theta[topic_z] where topic_z ~ Categorical",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<a href=\"http://pymc-devs.github.io/pymc3/notebooks/dp_mix.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://pymc-devs.github.io/pymc3/notebooks/dp_mix.html</a> this is a bit more complex but I think should help",
  "id": "576a7f842554bbe049ba7eb6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-06-22T12:07:32.111Z",
  "text": "http://pymc-devs.github.io/pymc3/notebooks/dp_mix.html this is a bit more complex but I think should help",
  "unread": false,
  "urls": [
   {
    "url": "http://pymc-devs.github.io/pymc3/notebooks/dp_mix.html"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2016-06-22T13:22:00.071Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/maedoc",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5189886?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5189886?v=4&s=60",
   "displayName": "marmaduke woodman",
   "gv": "4",
   "id": "54b7a868db8155e6700eb2ec",
   "url": "/maedoc",
   "username": "maedoc",
   "v": 11
  },
  "html": "<p>hi all, I&#39;m trying to write down a basic AR like in the Stan user guide, and i&#39;d like to write it in a vectorized way but I don&#39;t know how to say that a variable has prior following itself, ie.</p><pre><code class=\"python\">a0 = Normal(<span class=\"string\">'a0'</span>, mu=<span class=\"number\">0</span>, sd=<span class=\"number\">10</span>)\nx[<span class=\"number\">1</span>:] = Normal(<span class=\"string\">'x'</span>, mu=a0 * x[:-<span class=\"number\">1</span>])</code></pre><p>which is sort of what one can do it Stan, where the parameter is declared first and then sampling statements set up the dependence. </p>",
  "id": "576a905d5ba3ccaa25b6a03a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-06-22T13:19:25.816Z",
  "text": "hi all, I'm trying to write down a basic AR like in the Stan user guide, and i'd like to write it in a vectorized way but I don't know how to say that a variable has prior following itself, ie.\n\n```python\na0 = Normal('a0', mu=0, sd=10)\nx[1:] = Normal('x', mu=a0 * x[:-1])\n```\nwhich is sort of what one can do it Stan, where the parameter is declared first and then sampling statements set up the dependence. ",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/maedoc",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5189886?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5189886?v=4&s=60",
   "displayName": "marmaduke woodman",
   "gv": "4",
   "id": "54b7a868db8155e6700eb2ec",
   "url": "/maedoc",
   "username": "maedoc",
   "v": 11
  },
  "html": "<p>I see there are continuous distributiosn defined for AR, for example, but I have a more complex stochastic  process I&#39;d like to fit, hence the question.</p><p>Should I instead try to write down my time stepping function as a distribution with a logp method?</p>",
  "id": "576a9259c7594b5f0dd19f4c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-06-22T13:27:53.617Z",
  "text": "I see there are continuous distributiosn defined for AR, for example, but I have a more complex stochastic  process I'd like to fit, hence the question.\n\nShould I instead try to write down my time stepping function as a distribution with a logp method?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-22T14:09:03.396Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arkmagus",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=60",
   "displayName": "arkmagus",
   "gv": "3",
   "id": "575d4764c2f0db084a1d71b5",
   "url": "/arkmagus",
   "username": "arkmagus",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> I am confused with the shape parameter, for example, if I write pm.Dirichlet(&#39;phi&#39;, a=np.ones((5, 3)), do I need to provide shape=(5, 3) ? So far I stuck with index error from tensor.<pre><code><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fit</span><span class=\"params\">(self, X)</span> :</span>\n        <span class=\"string\">\"\"\"\n\n        dataset text X = [list of word occ for each documents]\n        example X : [[0,2,1], [1,2,0]]\n\n        phi ~ Dir(alpha) # topic distribution\n        theta[i] ~ Dir(beta) (1 &lt;= i &lt;= num_topics) # word_distribution per topic\n\n        \"\"\"</span>\n        num_docs = len(X)\n        self.model = pm.Model()\n        <span class=\"keyword\">with</span> self.model :\n            phi = pm.Dirichlet(<span class=\"string\">'phi'</span>, a=self.alpha_hyp * np.ones(self.num_topics))\n            theta = pm.Dirichlet(<span class=\"string\">'theta'</span>, a=self.beta_hyp*np.ones((self.num_topics, self.num_vocabs)))\n            <span class=\"comment\"># each document has one latent topic to be inferred</span>\n            z = pm.Categorical(<span class=\"string\">'z'</span>, p=phi, shape=num_docs)\n            <span class=\"comment\"># use multinomial (change to occurance) to reduce number of RV</span>\n            x = [pm.Multinomial(<span class=\"string\">'x[%d]'</span>%(ii), p=theta[z[ii]], observed=X[ii], n=X[ii].sum()) <span class=\"keyword\">for</span> ii <span class=\"keyword\">in</span> range(num_docs)]\n\n            <span class=\"comment\">#step1 = pm.Metropolis(vars=[phi, theta])</span>\n            <span class=\"comment\">#step2 = pm.ElemwiseCategorical(vars=[z], values=range(self.num_topics))</span>\n            <span class=\"comment\">#step3 = pm.ElemwiseCategorical(vars=x, values=range(self.num_vocabs))</span>\n            tres = pm.sample(<span class=\"number\">10000</span>, step=pm.Metropolis())<span class=\"comment\">#step1, step2, step3])</span>\n            <span class=\"keyword\">pass</span></code></pre>",
  "id": "576a9ba75ba3ccaa25b6a67c",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2016-06-22T14:07:35.065Z",
  "text": "@twiecki I am confused with the shape parameter, for example, if I write pm.Dirichlet('phi', a=np.ones((5, 3)), do I need to provide shape=(5, 3) ? So far I stuck with index error from tensor.\n```\ndef fit(self, X) :\n        \"\"\"\n\n        dataset text X = [list of word occ for each documents]\n        example X : [[0,2,1], [1,2,0]]\n\n        phi ~ Dir(alpha) # topic distribution\n        theta[i] ~ Dir(beta) (1 <= i <= num_topics) # word_distribution per topic\n\n        \"\"\"\n        num_docs = len(X)\n        self.model = pm.Model()\n        with self.model :\n            phi = pm.Dirichlet('phi', a=self.alpha_hyp * np.ones(self.num_topics))\n            theta = pm.Dirichlet('theta', a=self.beta_hyp*np.ones((self.num_topics, self.num_vocabs)))\n            # each document has one latent topic to be inferred\n            z = pm.Categorical('z', p=phi, shape=num_docs)\n            # use multinomial (change to occurance) to reduce number of RV\n            x = [pm.Multinomial('x[%d]'%(ii), p=theta[z[ii]], observed=X[ii], n=X[ii].sum()) for ii in range(num_docs)]\n\n            #step1 = pm.Metropolis(vars=[phi, theta])\n            #step2 = pm.ElemwiseCategorical(vars=[z], values=range(self.num_topics))\n            #step3 = pm.ElemwiseCategorical(vars=x, values=range(self.num_vocabs))\n            tres = pm.sample(10000, step=pm.Metropolis())#step1, step2, step3])\n            pass\n```",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"maedoc\" class=\"mention\">@maedoc</span> <a href=\"https://github.com/pymc-devs/pymc3/blob/master/pymc3/distributions/timeseries.py#L10\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/blob/master/pymc3/distributions/timeseries.py#L10</a>",
  "id": "576b8f046c39b965695ff12c",
  "issues": [],
  "mentions": [
   {
    "screenName": "maedoc",
    "userId": "54b7a868db8155e6700eb2ec",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-23T07:25:56.029Z",
  "text": "@maedoc https://github.com/pymc-devs/pymc3/blob/master/pymc3/distributions/timeseries.py#L10",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/blob/master/pymc3/distributions/timeseries.py#L10"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"arkmagus\" class=\"mention\">@arkmagus</span> yeah, that part is super confusing and we are working on changing that",
  "id": "576b8f1f80f1c6a5257e44b4",
  "issues": [],
  "mentions": [
   {
    "screenName": "arkmagus",
    "userId": "575d4764c2f0db084a1d71b5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2016-06-23T07:26:23.713Z",
  "text": "@arkmagus yeah, that part is super confusing and we are working on changing that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I think currently you need to supply shape only if you want to broadcast beyond your input arguments",
  "id": "576b8f3f0ede04dc490434dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-06-23T07:26:55.323Z",
  "text": "I think currently you need to supply shape only if you want to broadcast beyond your input arguments",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arkmagus",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=60",
   "displayName": "arkmagus",
   "gv": "3",
   "id": "575d4764c2f0db084a1d71b5",
   "url": "/arkmagus",
   "username": "arkmagus",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> So, currently is I write z = pm.Categorical(&#39;z&#39;, p=phi, shape=num_docs), based on phi = pm.Dirichlet(&#39;phi&#39;, a=self.alpha_hyp * np.ones(self.num_topics)), I will get 2 dimensional z with R^{num_docs x num_topics} ? ",
  "id": "576b9ca32554bbe049bb09f8",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2016-06-23T08:24:03.730Z",
  "text": "@twiecki So, currently is I write z = pm.Categorical('z', p=phi, shape=num_docs), based on phi = pm.Dirichlet('phi', a=self.alpha_hyp * np.ones(self.num_topics)), I will get 2 dimensional z with R^{num_docs x num_topics} ? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I hope so :) does it work?",
  "id": "576ba7be80f1c6a5257e583e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-06-23T09:11:26.731Z",
  "text": "I hope so :) does it work?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-23T09:57:57.440Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arkmagus",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1749603?v=3&s=60",
   "displayName": "arkmagus",
   "gv": "3",
   "id": "575d4764c2f0db084a1d71b5",
   "url": "/arkmagus",
   "username": "arkmagus",
   "v": 4
  },
  "html": "<p>So far I still stuck with Input dimension mis-match from theano, now I define shape for every RV :laughing: . </p><pre><code>num_docs = len(X)\n\n        np_alpha_hyp = np.ones(<span class=\"keyword\">self</span>.num_topics) * <span class=\"keyword\">self</span>.alpha_hyp\n        np_beta_hyp = np.ones(<span class=\"keyword\">self</span>.num_vocabs) * <span class=\"keyword\">self</span>.beta_hyp\n\n        <span class=\"keyword\">self</span>.model = pm.Model()\n        with <span class=\"keyword\">self</span>.model :\n            phi = pm.Dirichlet('phi', a=<span class=\"keyword\">self</span>.alpha_hyp * np.ones(<span class=\"keyword\">self</span>.num_topics), shape=<span class=\"keyword\">self</span>.num_topics)\n            theta = pm.Dirichlet('theta', a=<span class=\"keyword\">self</span>.beta_hyp*np.ones((<span class=\"keyword\">self</span>.num_topics, <span class=\"keyword\">self</span>.num_vocabs)), shape=(<span class=\"keyword\">self</span>.num_topics, <span class=\"keyword\">self</span>.num_vocabs))\n            # each document has one latent topic to <span class=\"keyword\">be</span> inferred\n            z = pm.Categorical(<span class=\"string\">'z'</span>, p=phi, shape=num_docs)\n            # <span class=\"keyword\">use</span> word list <span class=\"keyword\">if</span> we <span class=\"keyword\">use</span> categorical\n            x = [pm.Categorical('x[%d]'%(ii), p=theta[z[ii]],\n                observed=np.array(X[ii])) <span class=\"keyword\">for</span> ii <span class=\"keyword\">in</span> range(num_docs)]\n            # <span class=\"keyword\">use</span> occ mat <span class=\"keyword\">if</span> we <span class=\"keyword\">use</span> multinomial\n            # x = [pm.Multinomial('x[%d]'%(ii), p=theta[z[ii]],\n            #     observed=np.array(X[ii]), n=np.sum(X[ii])) <span class=\"keyword\">for</span> ii <span class=\"keyword\">in</span> range(num_docs)]\n\n            step_prior = pm.Slice(vars=[phi, theta])\n            step_cat = pm.ElemwiseCategoricalStep(vars=[z])\n            <span class=\"keyword\">self</span>.tres = pm.sample(<span class=\"number\">2000</span>, step=[step_prior, step_cat])</code></pre><pre><code>ValueError: Input dimension mis-match. (<span class=\"tag\">input</span>[<span class=\"number\">0</span>]<span class=\"class\">.shape</span>[<span class=\"number\">0</span>] = <span class=\"number\">7</span>, <span class=\"tag\">input</span>[<span class=\"number\">1</span>]<span class=\"class\">.shape</span>[<span class=\"number\">0</span>] = <span class=\"number\">6</span>)</code></pre><p>for information X is in list of list int -&gt; [[1, 0, 1, 0, 0], [2,2,3]] which is mapped from word into unique id, so for each document X[ii] can has different length. </p>",
  "id": "576bb2800ede04dc4904521b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-06-23T09:57:20.059Z",
  "text": "So far I still stuck with Input dimension mis-match from theano, now I define shape for every RV :laughing: . \n```\nnum_docs = len(X)\n\n        np_alpha_hyp = np.ones(self.num_topics) * self.alpha_hyp\n        np_beta_hyp = np.ones(self.num_vocabs) * self.beta_hyp\n\n        self.model = pm.Model()\n        with self.model :\n            phi = pm.Dirichlet('phi', a=self.alpha_hyp * np.ones(self.num_topics), shape=self.num_topics)\n            theta = pm.Dirichlet('theta', a=self.beta_hyp*np.ones((self.num_topics, self.num_vocabs)), shape=(self.num_topics, self.num_vocabs))\n            # each document has one latent topic to be inferred\n            z = pm.Categorical('z', p=phi, shape=num_docs)\n            # use word list if we use categorical\n            x = [pm.Categorical('x[%d]'%(ii), p=theta[z[ii]],\n                observed=np.array(X[ii])) for ii in range(num_docs)]\n            # use occ mat if we use multinomial\n            # x = [pm.Multinomial('x[%d]'%(ii), p=theta[z[ii]],\n            #     observed=np.array(X[ii]), n=np.sum(X[ii])) for ii in range(num_docs)]\n\n            step_prior = pm.Slice(vars=[phi, theta])\n            step_cat = pm.ElemwiseCategoricalStep(vars=[z])\n            self.tres = pm.sample(2000, step=[step_prior, step_cat])\n```\n```\nValueError: Input dimension mis-match. (input[0].shape[0] = 7, input[1].shape[0] = 6)\n```\nfor information X is in list of list int -> [[1, 0, 1, 0, 0], [2,2,3]] which is mapped from word into unique id, so for each document X[ii] can has different length. \n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "<p>Hello. I&#39;m trying to follow this example for pymc and linear regression: <a href=\"http://www.databozo.com/2014/01/17/Exploring_PyMC3.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://www.databozo.com/2014/01/17/Exploring_PyMC3.html</a><br>I am getting the following error:<br>/usr/lib/pymodules/python2.7/pymc/Model.py:87: UserWarning: The MCMC() syntax is deprecated. Please pass in nodes explicitly via M = MCMC(input).<br>  warnings.warn(&#39;The MCMC() syntax is deprecated. Please pass in nodes explicitly via M = MCMC(input).&#39;)<br>Traceback (most recent call last):<br>  File &quot;pymc3_regression.py&quot;, line 17, in &lt;module&gt;<br>    with pm.Model() as model:<br>AttributeError: <strong>exit</strong></p><p>it looks like i need pymc 3 and not what I installed from the mint repository, python-pymc 2.2+ds-1. pymc 3 is in beta and must be installed via pip. Could somebody confirm please?</p>",
  "id": "576c8bd02554bbe049bb9fa0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-06-24T01:24:32.468Z",
  "text": "Hello. I'm trying to follow this example for pymc and linear regression: http://www.databozo.com/2014/01/17/Exploring_PyMC3.html\nI am getting the following error:\n/usr/lib/pymodules/python2.7/pymc/Model.py:87: UserWarning: The MCMC() syntax is deprecated. Please pass in nodes explicitly via M = MCMC(input).\n  warnings.warn('The MCMC() syntax is deprecated. Please pass in nodes explicitly via M = MCMC(input).')\nTraceback (most recent call last):\n  File \"pymc3_regression.py\", line 17, in <module>\n    with pm.Model() as model:\nAttributeError: __exit__\n\nit looks like i need pymc 3 and not what I installed from the mint repository, python-pymc 2.2+ds-1. pymc 3 is in beta and must be installed via pip. Could somebody confirm please?\n",
  "unread": false,
  "urls": [
   {
    "url": "http://www.databozo.com/2014/01/17/Exploring_PyMC3.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "Well...to answer my own question, yes it appears so. Looks like everything works ok now.",
  "id": "576c8fd45ba3ccaa25b7b904",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-06-24T01:41:40.860Z",
  "text": "Well...to answer my own question, yes it appears so. Looks like everything works ok now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/Eh2406",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3709504?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3709504?v=3&s=60",
   "displayName": "Jacob Finkelman",
   "gv": "3",
   "id": "57474b77c43b8c601975228c",
   "url": "/Eh2406",
   "username": "Eh2406",
   "v": 3
  },
  "html": "Hi, Just heard about ADVI and was wondering what  &quot;Note, that this is a mean-field approximation so we ignore correlations in the posterior.&quot; means in practise?",
  "id": "576d61f3d4fc8062415f557b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-06-24T16:38:11.991Z",
  "text": "Hi, Just heard about ADVI and was wondering what  \"Note, that this is a mean-field approximation so we ignore correlations in the posterior.\" means in practise?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "if you think about a multidimensional posterior, there could be all kind of correlations",
  "id": "576d69d99f9132eb716f1f06",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-24T17:11:53.936Z",
  "text": "if you think about a multidimensional posterior, there could be all kind of correlations",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "like a 2d normal with most action along the diagonal",
  "id": "576d69f50d6f4b6641ffe0c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-24T17:12:21.248Z",
  "text": "like a 2d normal with most action along the diagonal",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "you wouldn&#39;t fit that distribution",
  "id": "576d69fb9f9132eb716f1f89",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-24T17:12:27.927Z",
  "text": "you wouldn't fit that distribution",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "but instead just a spherical gaussian centered on that elongated one",
  "id": "576d6a0ce786e0807f294576",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-06-24T17:12:44.472Z",
  "text": "but instead just a spherical gaussian centered on that elongated one",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "ignoring the existing correlation",
  "id": "576d6a10e786e0807f294584",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-06-24T17:12:48.453Z",
  "text": "ignoring the existing correlation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/jonsedar",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/708325?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/708325?v=3&s=60",
   "displayName": "Jonathan Sedar",
   "gv": "3",
   "id": "54745f8fdb8155e6700d7f39",
   "url": "/jonsedar",
   "username": "jonsedar",
   "v": 2
  },
  "html": "Hi from the Bayesian Mixer meetup",
  "id": "576e73aa8c9263ba30e46307",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-06-25T12:06:02.819Z",
  "text": "Hi from the Bayesian Mixer meetup",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "hi :)",
  "id": "576e73d18441a8124d4002ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-06-25T12:06:41.105Z",
  "text": "hi :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/jonsedar",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/708325?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/708325?v=3&s=60",
   "displayName": "Jonathan Sedar",
   "gv": "3",
   "id": "54745f8fdb8155e6700d7f39",
   "url": "/jonsedar",
   "username": "jonsedar",
   "v": 2
  },
  "html": "first, lunchtime\u2026.",
  "id": "576e74731ac8bd1a4d4b8499",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-25T12:09:23.983Z",
  "text": "first, lunchtime\u2026.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/Volodymyrk",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5244286?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5244286?v=3&s=60",
   "displayName": "Volodymyr",
   "gv": "3",
   "id": "576e864fc2f0db084a1fdcab",
   "url": "/Volodymyrk",
   "username": "Volodymyrk",
   "v": 1
  },
  "html": "Testing.. Hello from Bayesian Mixer",
  "id": "576e86818c9263ba30e51a65",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-06-25T13:26:25.742Z",
  "text": "Testing.. Hello from Bayesian Mixer",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "<p>Hello. I am following the example and source code found here: <a href=\"http://www.johnwittenauer.net/an-intro-to-probablistic-programming/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://www.johnwittenauer.net/an-intro-to-probablistic-programming/</a><br>and I&#39;m getting the following DeprecationWarning:<br>/usr/lib/python2.7/dist-packages/scipy/lib/_util.py:35: DeprecationWarning: Module scipy.linalg.blas.fblas is deprecated, use scipy.linalg.blas instead<br>  DeprecationWarning)</p><p>I am using pymc3. </p>",
  "id": "57702f578441a8124d53c61b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-26T19:39:03.345Z",
  "text": "Hello. I am following the example and source code found here: http://www.johnwittenauer.net/an-intro-to-probablistic-programming/\nand I'm getting the following DeprecationWarning:\n/usr/lib/python2.7/dist-packages/scipy/lib/_util.py:35: DeprecationWarning: Module scipy.linalg.blas.fblas is deprecated, use scipy.linalg.blas instead\n  DeprecationWarning)\n\nI am using pymc3. ",
  "unread": false,
  "urls": [
   {
    "url": "http://www.johnwittenauer.net/an-intro-to-probablistic-programming/"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2016-06-26T19:47:32.531Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "Here is my code , if it helps. <pre><code><span class=\"keyword\">import</span> os  \n<span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np  \n<span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd  \n<span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt  \n\npath = os.getcwd() + <span class=\"string\">'/ex1data2.txt'</span>  \ndata = pd.read_csv(path, header=<span class=\"keyword\">None</span>, names=[<span class=\"string\">'Size'</span>, <span class=\"string\">'Bedrooms'</span>, <span class=\"string\">'Price'</span>])  \ndata.head() \n\nfig, ax = plt.subplots(<span class=\"number\">1</span>, <span class=\"number\">2</span>, figsize=(<span class=\"number\">15</span>,<span class=\"number\">6</span>))  \nax[<span class=\"number\">0</span>].scatter(data.Size, data.Price)  \nax[<span class=\"number\">1</span>].scatter(data.Bedrooms, data.Price)  \nax[<span class=\"number\">0</span>].set_ylabel(<span class=\"string\">'Price'</span>)  \nax[<span class=\"number\">0</span>].set_xlabel(<span class=\"string\">'Size'</span>)  \nax[<span class=\"number\">1</span>].set_xlabel(<span class=\"string\">'Bedrooms'</span>)  \n\n<span class=\"comment\">#plt.show()</span>\n\n<span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> linear_model  \nmodel = linear_model.LinearRegression()\n\n<span class=\"comment\"># normalize features</span>\ndata = (data - data.mean()) / data.std()\n\nX = data[[<span class=\"string\">'Size'</span>, <span class=\"string\">'Bedrooms'</span>]].values  \ny = data[<span class=\"string\">'Price'</span>].values\n\nmodel.fit(X, y)  \ny_pred = model.predict(X)  \nsquared_error = ((y - y_pred) ** <span class=\"number\">2</span>).sum()  \n<span class=\"keyword\">print</span> <span class=\"string\">'squared error = '</span>, squared_error  \n\n<span class=\"keyword\">from</span> pymc3 <span class=\"keyword\">import</span> Model, Normal, HalfNormal\n\nregression_model = Model()  \n<span class=\"keyword\">with</span> regression_model:  \n    <span class=\"comment\"># priors for unknown model parameters</span>\n    alpha = Normal(<span class=\"string\">'alpha'</span>, mu=<span class=\"number\">0</span>, sd=<span class=\"number\">10</span>)\n    beta = Normal(<span class=\"string\">'beta'</span>, mu=<span class=\"number\">0</span>, sd=<span class=\"number\">10</span>, shape=<span class=\"number\">2</span>)\n    sigma = HalfNormal(<span class=\"string\">'sigma'</span>, sd=<span class=\"number\">1</span>)\n\n    <span class=\"comment\"># expected value of outcome</span>\n    mu = alpha + beta[<span class=\"number\">0</span>] * X[:,<span class=\"number\">0</span>] + beta[<span class=\"number\">1</span>] * X[:,<span class=\"number\">1</span>]\n\n    <span class=\"comment\"># likelihood (sampling distribution) of observations</span>\n    y_obs = Normal(<span class=\"string\">'y_obs'</span>, mu=mu, sd=sigma, observed=y)\n\n<span class=\"keyword\">from</span> pymc3 <span class=\"keyword\">import</span> find_MAP  \n<span class=\"keyword\">from</span> scipy <span class=\"keyword\">import</span> optimize\n\nmap_estimate = find_MAP(model=regression_model, fmin=optimize.fmin_powell)  \nprint(map_estimate)   \n\n<span class=\"keyword\">from</span> pymc3 <span class=\"keyword\">import</span> NUTS, sample\n\n<span class=\"keyword\">with</span> regression_model:  \n    <span class=\"comment\"># obtain starting values via MAP</span>\n    start = find_MAP(fmin=optimize.fmin_powell)\n\n    <span class=\"comment\"># instantiate sampler</span>\n    step = NUTS(scaling=start)\n\n    <span class=\"comment\"># draw posterior samples</span>\n    trace = sample(<span class=\"number\">5000</span>, step, start=start)\n\n<span class=\"keyword\">from</span> pymc3 <span class=\"keyword\">import</span> traceplot  \ntraceplot(trace)  \nplt.show()\n\n<span class=\"keyword\">from</span> pymc3 <span class=\"keyword\">import</span> summary  \nsummary(trace)</code></pre>",
  "id": "577030d1632b75030f7478d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-06-26T19:45:21.473Z",
  "text": "Here is my code , if it helps. \n```\nimport os  \nimport numpy as np  \nimport pandas as pd  \nimport matplotlib.pyplot as plt  \n\npath = os.getcwd() + '/ex1data2.txt'  \ndata = pd.read_csv(path, header=None, names=['Size', 'Bedrooms', 'Price'])  \ndata.head() \n\nfig, ax = plt.subplots(1, 2, figsize=(15,6))  \nax[0].scatter(data.Size, data.Price)  \nax[1].scatter(data.Bedrooms, data.Price)  \nax[0].set_ylabel('Price')  \nax[0].set_xlabel('Size')  \nax[1].set_xlabel('Bedrooms')  \n\n#plt.show()\n\nfrom sklearn import linear_model  \nmodel = linear_model.LinearRegression()\n\n# normalize features\ndata = (data - data.mean()) / data.std()\n\nX = data[['Size', 'Bedrooms']].values  \ny = data['Price'].values\n\nmodel.fit(X, y)  \ny_pred = model.predict(X)  \nsquared_error = ((y - y_pred) ** 2).sum()  \nprint 'squared error = ', squared_error  \n\nfrom pymc3 import Model, Normal, HalfNormal\n\nregression_model = Model()  \nwith regression_model:  \n    # priors for unknown model parameters\n    alpha = Normal('alpha', mu=0, sd=10)\n    beta = Normal('beta', mu=0, sd=10, shape=2)\n    sigma = HalfNormal('sigma', sd=1)\n\n    # expected value of outcome\n    mu = alpha + beta[0] * X[:,0] + beta[1] * X[:,1]\n\n    # likelihood (sampling distribution) of observations\n    y_obs = Normal('y_obs', mu=mu, sd=sigma, observed=y)\n\nfrom pymc3 import find_MAP  \nfrom scipy import optimize\n\nmap_estimate = find_MAP(model=regression_model, fmin=optimize.fmin_powell)  \nprint(map_estimate)   \n\nfrom pymc3 import NUTS, sample\n\nwith regression_model:  \n    # obtain starting values via MAP\n    start = find_MAP(fmin=optimize.fmin_powell)\n\n    # instantiate sampler\n    step = NUTS(scaling=start)\n\n    # draw posterior samples\n    trace = sample(5000, step, start=start)\n\nfrom pymc3 import traceplot  \ntraceplot(trace)  \nplt.show()\n\nfrom pymc3 import summary  \nsummary(trace) \n```\n\n    \n",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/sachinruk",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1410927?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1410927?v=4&s=60",
   "displayName": "Sachin Abeywardana",
   "gv": "4",
   "id": "57707fd9c2f0db084a2010fd",
   "url": "/sachinruk",
   "username": "sachinruk",
   "v": 2
  },
  "html": "<p>Hi all,</p><p>I already posted this on Thomas&#39; blog but with his Neural Net example I&#39;m having trouble with minibatches. This is what I posted:</p><p>I downloaded the latest master version and with <code>pm.variational.advi_minibatch</code> I am getting the error <code>TypeError: &#39;list&#39; object is not an iterator.</code> I am using the example the code you have in this notebook. My only guess is that its to do with minibatch_RVs not being an iterator.</p>",
  "id": "5770ba7ea0c12d110f922f09",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-06-27T05:32:46.345Z",
  "text": "Hi all,\n\nI already posted this on Thomas' blog but with his Neural Net example I'm having trouble with minibatches. This is what I posted:\n\nI downloaded the latest master version and with `pm.variational.advi_minibatch ` I am getting the error `TypeError: 'list' object is not an iterator.` I am using the example the code you have in this notebook. My only guess is that its to do with minibatch_RVs not being an iterator.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asbhatti\" class=\"mention\">@asbhatti</span> that warning is probably harmless. updating theano and pymc3 to master might help",
  "id": "5770c91ca0c12d110f92ed05",
  "issues": [],
  "mentions": [
   {
    "screenName": "asbhatti",
    "userId": "576c8947c2f0db084a1fa138",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2016-06-27T06:35:08.269Z",
  "text": "@asbhatti that warning is probably harmless. updating theano and pymc3 to master might help",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sachinruk\" class=\"mention\">@sachinruk</span> I&#39;ll respond there",
  "id": "5770c9238c9263ba30fefe97",
  "issues": [],
  "mentions": [
   {
    "screenName": "sachinruk",
    "userId": "57707fd9c2f0db084a2010fd",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2016-06-27T06:35:15.362Z",
  "text": "@sachinruk I'll respond there",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> ok thanks for getting back to me",
  "id": "5771be0d1ac8bd1a4d7481f5",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2016-06-28T00:00:13.618Z",
  "text": "@twiecki ok thanks for getting back to me",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-28T09:28:38.024Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/maedoc",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5189886?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5189886?v=4&s=60",
   "displayName": "marmaduke woodman",
   "gv": "4",
   "id": "54b7a868db8155e6700eb2ec",
   "url": "/maedoc",
   "username": "maedoc",
   "v": 11
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> would you be interested contributions related to time series models? I have SDE style models in mind",
  "id": "577243199717171554705ca8",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2016-06-28T09:27:53.049Z",
  "text": "@twiecki would you be interested contributions related to time series models? I have SDE style models in mind",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "definitely",
  "id": "5772449d8441a8124d70376d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-06-28T09:34:21.885Z",
  "text": "definitely",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/maedoc",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5189886?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5189886?v=4&s=60",
   "displayName": "marmaduke woodman",
   "gv": "4",
   "id": "54b7a868db8155e6700eb2ec",
   "url": "/maedoc",
   "username": "maedoc",
   "v": 11
  },
  "html": "Cool. I used Stan in a previous project but prefer Python to C++ and I expect Theano-as-backend to be more efficient than Eigen for long time series. ",
  "id": "577245028c9263ba30145361",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-06-28T09:36:02.073Z",
  "text": "Cool. I used Stan in a previous project but prefer Python to C++ and I expect Theano-as-backend to be more efficient than Eigen for long time series. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/taku-y",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4969395?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4969395?v=3&s=60",
   "displayName": "Taku Yoshioka",
   "gv": "3",
   "id": "57497d60c43b8c6019756ee7",
   "url": "/taku-y",
   "username": "taku-y",
   "v": 7
  },
  "html": "Hi, I have been implementing autoencoding variational inference for ADVI and applied it to latent Dirichlet allocation (<a href=\"https://gist.github.com/taku-y/66c9613ab29a150e4493b899a6507354\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/taku-y/66c9613ab29a150e4493b899a6507354</a>). I think this feature is useful and want to send a PR. I would appreciate any comments or suggestions. ",
  "id": "57729a8b8441a8124d75cd96",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2016-06-28T15:40:59.746Z",
  "text": "Hi, I have been implementing autoencoding variational inference for ADVI and applied it to latent Dirichlet allocation (https://gist.github.com/taku-y/66c9613ab29a150e4493b899a6507354). I think this feature is useful and want to send a PR. I would appreciate any comments or suggestions. ",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/taku-y/66c9613ab29a150e4493b899a6507354"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "very exciting <span data-link-type=\"mention\" data-screen-name=\"taku-y\" class=\"mention\">@taku-y</span>, I&#39;ll give it a read",
  "id": "57736966a0c12d110fb9d230",
  "issues": [],
  "mentions": [
   {
    "screenName": "taku-y",
    "userId": "57497d60c43b8c6019756ee7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2016-06-29T06:23:34.191Z",
  "text": "very exciting @taku-y, I'll give it a read",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "folk -&gt; fork",
  "id": "577382c4971717155482d70c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2016-06-29T08:11:48.900Z",
  "text": "folk -> fork",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "correption -&gt; correction",
  "id": "577383a4a0c12d110fbb658a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2016-06-29T08:15:32.487Z",
  "text": "correption -> correction",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "just read through it, really cool stuff! we definitely want the more stable dirichlet. you also rewrote the stickbreaking transform? Was there a problem with the previous one?",
  "id": "5773845a1ac8bd1a4d8d180d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2016-06-29T08:18:34.233Z",
  "text": "just read through it, really cool stuff! we definitely want the more stable dirichlet. you also rewrote the stickbreaking transform? Was there a problem with the previous one?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "in general, look forward to a PR",
  "id": "577384631ac8bd1a4d8d1859",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2016-06-29T08:18:43.015Z",
  "text": "in general, look forward to a PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/taku-y",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4969395?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4969395?v=3&s=60",
   "displayName": "Taku Yoshioka",
   "gv": "3",
   "id": "57497d60c43b8c6019756ee7",
   "url": "/taku-y",
   "username": "taku-y",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> Thanks for your comments. Although I&#39;m not sure that the sbtransform I modified is reasonable, I&#39;m going to prepare for a PR. ",
  "id": "5773a1bc8441a8124d842b3d",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 24,
  "sent": "2016-06-29T10:23:56.866Z",
  "text": "@twiecki Thanks for your comments. Although I'm not sure that the sbtransform I modified is reasonable, I'm going to prepare for a PR. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/taku-y",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4969395?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4969395?v=3&s=60",
   "displayName": "Taku Yoshioka",
   "gv": "3",
   "id": "57497d60c43b8c6019756ee7",
   "url": "/taku-y",
   "username": "taku-y",
   "v": 7
  },
  "html": "And it helps for me that the dimension of the array of Dirichlet samples is prior to that of components of vectors. I mean when ndim=2, dim 0 and 1 correspond to samples and vector components, respectively. This is the reason I redefined Dirichlet in my notebook. The same thing have been posted as an issue.",
  "id": "5773a3561ac8bd1a4d8e8af4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2016-06-29T10:30:46.644Z",
  "text": "And it helps for me that the dimension of the array of Dirichlet samples is prior to that of components of vectors. I mean when ndim=2, dim 0 and 1 correspond to samples and vector components, respectively. This is the reason I redefined Dirichlet in my notebook. The same thing have been posted as an issue.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yeah, that definitely needs fixing",
  "id": "5773b5429717171554855e28",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2016-06-29T11:47:14.484Z",
  "text": "yeah, that definitely needs fixing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"taku-y\" class=\"mention\">@taku-y</span> this might of interest as well: <a href=\"https://github.com/casperkaae/parmesan\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/casperkaae/parmesan</a>",
  "id": "57742abe8c9263ba3030c2eb",
  "issues": [],
  "mentions": [
   {
    "screenName": "taku-y",
    "userId": "57497d60c43b8c6019756ee7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2016-06-29T20:08:30.872Z",
  "text": "@taku-y this might of interest as well: https://github.com/casperkaae/parmesan",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/casperkaae/parmesan"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/taku-y",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4969395?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4969395?v=3&s=60",
   "displayName": "Taku Yoshioka",
   "gv": "3",
   "id": "57497d60c43b8c6019756ee7",
   "url": "/taku-y",
   "username": "taku-y",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> Interesting! I will read the code in this weekend. ",
  "id": "57753beba0c12d110fd4950e",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2016-06-30T15:34:03.555Z",
  "text": "@twiecki Interesting! I will read the code in this weekend. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/svenski",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1081507?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1081507?v=3&s=60",
   "displayName": "svenski",
   "gv": "3",
   "id": "55fd2ed30fc9f982beb12a32",
   "url": "/svenski",
   "username": "svenski",
   "v": 3
  },
  "html": "FYI, I&#39;m going through the getting started page and the following data set link is not working: <code>https://raw.githubusercontent.com/pymc-devs/pymc3/master/docs/notebooks/data/SP500.csv</code> . From: <a href=\"http://pymc-devs.github.io/pymc3/notebooks/getting_started.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://pymc-devs.github.io/pymc3/notebooks/getting_started.html</a> . ",
  "id": "57753cb197171715549b6db5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-06-30T15:37:21.104Z",
  "text": "FYI, I'm going through the getting started page and the following data set link is not working: `https://raw.githubusercontent.com/pymc-devs/pymc3/master/docs/notebooks/data/SP500.csv` . From: http://pymc-devs.github.io/pymc3/notebooks/getting_started.html . ",
  "unread": false,
  "urls": [
   {
    "url": "http://pymc-devs.github.io/pymc3/notebooks/getting_started.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I know what it is, can you open an issue please?",
  "id": "57753ccea0c12d110fd4a112",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-06-30T15:37:50.876Z",
  "text": "I know what it is, can you open an issue please?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/svenski",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1081507?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1081507?v=3&s=60",
   "displayName": "svenski",
   "gv": "3",
   "id": "55fd2ed30fc9f982beb12a32",
   "url": "/svenski",
   "username": "svenski",
   "v": 3
  },
  "html": "Done - <span data-link-type=\"issue\" data-issue=\"1213\" data-issue-repo=\"pymc-devs/pymc3\" class=\"issue\">pymc-devs/pymc3#1213</span>",
  "id": "57753f5e97171715549b9729",
  "issues": [
   {
    "number": "1213",
    "repo": "pymc-devs/pymc3"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-06-30T15:48:46.539Z",
  "text": "Done - https://github.com/pymc-devs/pymc3/issues/1213",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "thanks",
  "id": "57753feda0c12d110fd4cfb5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-06-30T15:51:09.269Z",
  "text": "thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/sachinruk",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1410927?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1410927?v=4&s=60",
   "displayName": "Sachin Abeywardana",
   "gv": "4",
   "id": "57707fd9c2f0db084a2010fd",
   "url": "/sachinruk",
   "username": "sachinruk",
   "v": 2
  },
  "html": "Hi all, got a question on integrating out discrete variables in pymc3 here: <a href=\"http://stats.stackexchange.com/questions/221611/integrating-out-discrete-variables-in-pymc3\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://stats.stackexchange.com/questions/221611/integrating-out-discrete-variables-in-pymc3</a>",
  "id": "5775f33c632b75030fc63752",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-01T04:36:12.181Z",
  "text": "Hi all, got a question on integrating out discrete variables in pymc3 here: http://stats.stackexchange.com/questions/221611/integrating-out-discrete-variables-in-pymc3",
  "unread": false,
  "urls": [
   {
    "url": "http://stats.stackexchange.com/questions/221611/integrating-out-discrete-variables-in-pymc3"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/sachinruk",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1410927?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1410927?v=4&s=60",
   "displayName": "Sachin Abeywardana",
   "gv": "4",
   "id": "57707fd9c2f0db084a2010fd",
   "url": "/sachinruk",
   "username": "sachinruk",
   "v": 2
  },
  "html": "would appreciate any help",
  "id": "5775f343a0c12d110fdd5fb0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-01T04:36:19.439Z",
  "text": "would appreciate any help",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sachinruk\" class=\"mention\">@sachinruk</span> pymc3 also has logsumexp function (see <a href=\"https://github.com/pymc-devs/pymc3/blob/master/pymc3/math.py\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/blob/master/pymc3/math.py</a>). I think you can just port your STAN code into PyMC3.",
  "id": "57760488a0c12d110fde23a9",
  "issues": [],
  "mentions": [
   {
    "screenName": "sachinruk",
    "userId": "57707fd9c2f0db084a2010fd",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-01T05:50:00.461Z",
  "text": "@sachinruk pymc3 also has logsumexp function (see https://github.com/pymc-devs/pymc3/blob/master/pymc3/math.py). I think you can just port your STAN code into PyMC3.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/blob/master/pymc3/math.py"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/sachinruk",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1410927?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1410927?v=4&s=60",
   "displayName": "Sachin Abeywardana",
   "gv": "4",
   "id": "57707fd9c2f0db084a2010fd",
   "url": "/sachinruk",
   "username": "sachinruk",
   "v": 2
  },
  "html": "Do you know of a pymc3 sample code using logsumexp? or atleast using a mixture model? And thanks, <span data-link-type=\"mention\" data-screen-name=\"junpenglao\" class=\"mention\">@junpenglao</span> ",
  "id": "577607321ac8bd1a4daee880",
  "issues": [],
  "mentions": [
   {
    "screenName": "junpenglao",
    "userId": "56e8df4685d51f252ab907f1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2016-07-01T06:01:22.336Z",
  "text": "Do you know of a pymc3 sample code using logsumexp? or atleast using a mixture model? And thanks, @junpenglao ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/sachinruk",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1410927?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1410927?v=4&s=60",
   "displayName": "Sachin Abeywardana",
   "gv": "4",
   "id": "57707fd9c2f0db084a2010fd",
   "url": "/sachinruk",
   "username": "sachinruk",
   "v": 2
  },
  "html": "actually found one <a href=\"https://gist.github.com/taku-y/a884a0ee78fb89bf5735\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/taku-y/a884a0ee78fb89bf5735</a>",
  "id": "57760ce21ac8bd1a4daf20c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-07-01T06:25:38.628Z",
  "text": "actually found one https://gist.github.com/taku-y/a884a0ee78fb89bf5735",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/taku-y/a884a0ee78fb89bf5735"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "new blog post: <a href=\"http://twiecki.github.io/blog/2016/07/05/bayesian-deep-learning/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://twiecki.github.io/blog/2016/07/05/bayesian-deep-learning/</a>",
  "id": "577bc14cf06cda5d098fe3aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-05T14:16:44.124Z",
  "text": "new blog post: http://twiecki.github.io/blog/2016/07/05/bayesian-deep-learning/",
  "unread": false,
  "urls": [
   {
    "url": "http://twiecki.github.io/blog/2016/07/05/bayesian-deep-learning/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/jordn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1463197?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1463197?v=3&s=60",
   "displayName": "Jordan Burgess",
   "gv": "3",
   "id": "568ab41a16b6c7089cc11e14",
   "url": "/jordn",
   "username": "jordn",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> reading through it now! the last one was super helpful. i&#39;m trying to use pymc3 for bayesian deep learning with informed priors and your blog was a perfect starting point",
  "id": "577c3a32c6b33f904a8cd78d",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-05T22:52:34.750Z",
  "text": "@twiecki reading through it now! the last one was super helpful. i'm trying to use pymc3 for bayesian deep learning with informed priors and your blog was a perfect starting point",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/jordn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1463197?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1463197?v=3&s=60",
   "displayName": "Jordan Burgess",
   "gv": "3",
   "id": "568ab41a16b6c7089cc11e14",
   "url": "/jordn",
   "username": "jordn",
   "v": 1
  },
  "html": "grateful if someone could help resolve my confusion over how  to set a multivariate normal distribution over some parameters",
  "id": "577c3aa9e22c1b816ae0b81d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-05T22:54:33.423Z",
  "text": "grateful if someone could help resolve my confusion over how  to set a multivariate normal distribution over some parameters",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/jordn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1463197?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1463197?v=3&s=60",
   "displayName": "Jordan Burgess",
   "gv": "3",
   "id": "568ab41a16b6c7089cc11e14",
   "url": "/jordn",
   "username": "jordn",
   "v": 1
  },
  "html": "<p>I&#39;m trying to fit a gaussian prior with non-zero means and a covariance structure to weights in a softmax classifier. Currently trying to understand the wore performance when applying a more sophisticated prior.</p><pre><code>    weights = pm.Normal(<span class=\"string\">'weights'</span>, mu=<span class=\"number\">0</span>, sd=<span class=\"number\">10</span>,\n                       shape=(num_classes, num_<span class=\"keyword\">in</span>))</code></pre><p>should be the same as</p><pre><code>    weights = pm.<span class=\"function\"><span class=\"title\">MvNormal</span><span class=\"params\">(<span class=\"string\">'weights'</span>, mu=np.zeros(num_in)</span></span>,\n                          tau=np<span class=\"class\">.linalg</span><span class=\"class\">.inv</span>(np.<span class=\"function\"><span class=\"title\">eye</span><span class=\"params\">(num_in)</span></span>*<span class=\"number\">10</span>),\n                          shape=(num_classes, num_in))</code></pre><p>right? All else being equal, shouldn&#39;t these perform the same? (they don&#39;t)</p>",
  "id": "577c3c60c6b33f904a8cef8a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-05T23:01:52.721Z",
  "text": "I'm trying to fit a gaussian prior with non-zero means and a covariance structure to weights in a softmax classifier. Currently trying to understand the wore performance when applying a more sophisticated prior.\n``` \n    weights = pm.Normal('weights', mu=0, sd=10,\n                       shape=(num_classes, num_in))\n```\nshould be the same as\n``` \n    weights = pm.MvNormal('weights', mu=np.zeros(num_in),\n                          tau=np.linalg.inv(np.eye(num_in)*10),\n                          shape=(num_classes, num_in))\n```\nright? All else being equal, shouldn't these perform the same? (they don't)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> The lasagne example fails for me on Python 3 at the <code>build_ann</code> step: <pre><code>RuntimeError: cannot initialize parameters: the provided callable did<span class=\"instruction\"> not </span>return an<span class=\"instruction\"> array-like </span>value</code></pre>",
  "id": "577c58cc9d3eadd723713217",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-06T01:03:08.358Z",
  "text": "@twiecki The lasagne example fails for me on Python 3 at the `build_ann` step: \n\n```\nRuntimeError: cannot initialize parameters: the provided callable did not return an array-like value\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Also, <code>itertools</code> does not have <code>izip</code> in Python 3, since <code>zip</code> is part of the standard library.",
  "id": "577c592fddcdcee623f7a611",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-06T01:04:47.179Z",
  "text": "Also, `itertools` does not have `izip` in Python 3, since `zip` is part of the standard library.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jordn\" class=\"mention\">@jordn</span> interesting, yeah, that should be the same. what&#39;s the error?",
  "id": "577c9a1d9d3eadd72374302f",
  "issues": [],
  "mentions": [
   {
    "screenName": "jordn",
    "userId": "568ab41a16b6c7089cc11e14",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-06T05:41:49.692Z",
  "text": "@jordn interesting, yeah, that should be the same. what's the error?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> oh right, probably need to use <code>six</code>. the other error suggests you need to update lasagne to master",
  "id": "577c9a3a9d3eadd7237430ad",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-06T05:42:18.580Z",
  "text": "@fonnesbeck oh right, probably need to use `six`. the other error suggests you need to update lasagne to master",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/jordn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1463197?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1463197?v=3&s=60",
   "displayName": "Jordan Burgess",
   "gv": "3",
   "id": "568ab41a16b6c7089cc11e14",
   "url": "/jordn",
   "username": "jordn",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span>  no error and actually probably no problem. The latter one was performing much worse in this instance. But I believe my mistake was in setting the SD/precision matrix.... should be <em>100 not </em>10 on the latter. They perform similarly well after that.",
  "id": "577cce2451724d8078c4ba54",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-06T09:23:48.401Z",
  "text": "@twiecki  no error and actually probably no problem. The latter one was performing much worse in this instance. But I believe my mistake was in setting the SD/precision matrix.... should be *100 not *10 on the latter. They perform similarly well after that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-06T09:41:34.898Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "cool, glad it works. What kind of priors are you looking to experiment with?",
  "id": "577cd059ddcdcee623fdaaf4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-06T09:33:13.449Z",
  "text": "cool, glad it works. What kind of priors are you looking to experiment with?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/sachinruk",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1410927?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1410927?v=4&s=60",
   "displayName": "Sachin Abeywardana",
   "gv": "4",
   "id": "57707fd9c2f0db084a2010fd",
   "url": "/sachinruk",
   "username": "sachinruk",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> you just need to change izip to zip in python 3 for it to work. No need for <code>six</code>",
  "id": "577dcfba064f828707cd06ee",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-07T03:42:50.840Z",
  "text": "@twiecki you just need to change izip to zip in python 3 for it to work. No need for `six`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/sachinruk",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1410927?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1410927?v=4&s=60",
   "displayName": "Sachin Abeywardana",
   "gv": "4",
   "id": "57707fd9c2f0db084a2010fd",
   "url": "/sachinruk",
   "username": "sachinruk",
   "v": 2
  },
  "html": "also any thoughts on this issue anyone? <a href=\"http://stackoverflow.com/questions/38237737/sampling-from-posterior-distribution-of-custom-density-in-pymc3\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://stackoverflow.com/questions/38237737/sampling-from-posterior-distribution-of-custom-density-in-pymc3</a>",
  "id": "577deab359cfbd4c5e366bb6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-07T05:37:55.663Z",
  "text": "also any thoughts on this issue anyone? http://stackoverflow.com/questions/38237737/sampling-from-posterior-distribution-of-custom-density-in-pymc3",
  "unread": false,
  "urls": [
   {
    "url": "http://stackoverflow.com/questions/38237737/sampling-from-posterior-distribution-of-custom-density-in-pymc3"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/danielbarter",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8081722?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8081722?v=3&s=60",
   "displayName": "Daniel Barter",
   "gv": "3",
   "id": "57465cc7c43b8c601974f6e8",
   "url": "/danielbarter",
   "username": "danielbarter",
   "v": 1
  },
  "html": "Broad question: What is the best way to learn about the internal workings of the library? I understand some of the underlying algorithms (MCMC and HMC) in the sense that I could implement crappy versions myself. I understand the surface syntax: It closely mirrors what you write on paper when specifying a model. I don&#39;t understand what happens under the hood. As a result, if something goes wrong, I am not sure how to fix it :( ",
  "id": "578371dbbdafd19107616618",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-11T10:15:55.731Z",
  "text": "Broad question: What is the best way to learn about the internal workings of the library? I understand some of the underlying algorithms (MCMC and HMC) in the sense that I could implement crappy versions myself. I understand the surface syntax: It closely mirrors what you write on paper when specifying a model. I don't understand what happens under the hood. As a result, if something goes wrong, I am not sure how to fix it :( ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/danielbarter",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8081722?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8081722?v=3&s=60",
   "displayName": "Daniel Barter",
   "gv": "3",
   "id": "57465cc7c43b8c601974f6e8",
   "url": "/danielbarter",
   "username": "danielbarter",
   "v": 1
  },
  "html": "Here are some more specific questions I have: ",
  "id": "578371ee3eaf66535e72efc2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-07-11T10:16:14.537Z",
  "text": "Here are some more specific questions I have: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/danielbarter",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8081722?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8081722?v=3&s=60",
   "displayName": "Daniel Barter",
   "gv": "3",
   "id": "57465cc7c43b8c601974f6e8",
   "url": "/danielbarter",
   "username": "danielbarter",
   "v": 1
  },
  "html": "<ol>\n<li>How does the model class work? How does the syntactic suger get translated into building a model object</li>\n</ol>\n",
  "id": "5783725a3eaf66535e72f0cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-07-11T10:18:02.357Z",
  "text": "1. How does the model class work? How does the syntactic suger get translated into building a model object",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/danielbarter",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8081722?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8081722?v=3&s=60",
   "displayName": "Daniel Barter",
   "gv": "3",
   "id": "57465cc7c43b8c601974f6e8",
   "url": "/danielbarter",
   "username": "danielbarter",
   "v": 1
  },
  "html": "<ol>\n<li>Where does Theano come in? I know it is required for HMC, but I don&#39;t understand how the model class interacts with Theano</li>\n</ol>\n",
  "id": "57837297064f8287070da66c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-07-11T10:19:03.851Z",
  "text": "2. Where does Theano come in? I know it is required for HMC, but I don't understand how the model class interacts with Theano",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/danielbarter",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8081722?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8081722?v=3&s=60",
   "displayName": "Daniel Barter",
   "gv": "3",
   "id": "57465cc7c43b8c601974f6e8",
   "url": "/danielbarter",
   "username": "danielbarter",
   "v": 1
  },
  "html": "I have been periodically browsing the source code. There isn&#39;t so much of it, and I think that I could probably understand what is happening with a little guidance, but im not exactly sure where to start",
  "id": "578372ecb79455146f903931",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-07-11T10:20:28.656Z",
  "text": "I have been periodically browsing the source code. There isn't so much of it, and I think that I could probably understand what is happening with a little guidance, but im not exactly sure where to start",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "each distribution produces a theano expression",
  "id": "57837314bdafd1910761728d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-07-11T10:21:08.597Z",
  "text": "each distribution produces a theano expression",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "it&#39;s the job of the Model class to store all of them and then put them together",
  "id": "578373233eaf66535e72fb9d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-07-11T10:21:23.150Z",
  "text": "it's the job of the Model class to store all of them and then put them together",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "for example, <a href=\"https://github.com/pymc-devs/pymc3/blob/master/pymc3/model.py#L218\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/blob/master/pymc3/model.py#L218</a> computes the sum logp",
  "id": "57837349064f8287070db241",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-07-11T10:22:01.514Z",
  "text": "for example, https://github.com/pymc-devs/pymc3/blob/master/pymc3/model.py#L218 computes the sum logp",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/blob/master/pymc3/model.py#L218"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "so the outside, Model just provides logp and dlogp (the gradient)",
  "id": "57837360b79455146f903f70",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-07-11T10:22:24.430Z",
  "text": "so the outside, Model just provides logp and dlogp (the gradient)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that&#39;s the interface provided to the samples which just call .logp and .dlogp to evaluate the model at various parameter settings",
  "id": "5783737ec9b49c1d6f01a6aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-07-11T10:22:54.057Z",
  "text": "that's the interface provided to the samples which just call .logp and .dlogp to evaluate the model at various parameter settings",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/danielbarter",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8081722?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8081722?v=3&s=60",
   "displayName": "Daniel Barter",
   "gv": "3",
   "id": "57465cc7c43b8c601974f6e8",
   "url": "/danielbarter",
   "username": "danielbarter",
   "v": 1
  },
  "html": "that makes sense. So the files in the distrubution folder are just class wrappers around theano functions? ",
  "id": "578373c3064f8287070db391",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-07-11T10:24:03.219Z",
  "text": "that makes sense. So the files in the distrubution folder are just class wrappers around theano functions? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "exactly",
  "id": "578373da7aeb080527a66d8d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-07-11T10:24:26.152Z",
  "text": "exactly",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "we try to provide just a thin layer on top of theano",
  "id": "578373ec3eaf66535e7304bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-07-11T10:24:44.328Z",
  "text": "we try to provide just a thin layer on top of theano",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "pymc3 is really just plugging theano expressions together to build the model, and then it has samplers which are mostly written in python",
  "id": "578374067aeb080527a66e76",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-07-11T10:25:10.637Z",
  "text": "pymc3 is really just plugging theano expressions together to build the model, and then it has samplers which are mostly written in python",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-11T10:31:14.830Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that&#39;s why there is not that much code",
  "id": "5783741a59cfbd4c5e759e65",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-07-11T10:25:30.960Z",
  "text": "that's why there is not that much code",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/danielbarter",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8081722?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8081722?v=3&s=60",
   "displayName": "Daniel Barter",
   "gv": "3",
   "id": "57465cc7c43b8c601974f6e8",
   "url": "/danielbarter",
   "username": "danielbarter",
   "v": 1
  },
  "html": "thanks a lot  <span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span>. that was super helpful",
  "id": "578374b959cfbd4c5e75a541",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2016-07-11T10:28:09.729Z",
  "text": "thanks a lot  @twiecki. that was super helpful",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/JWarmenhoven",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7450204?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7450204?v=3&s=60",
   "displayName": "Jordi Warmenhoven",
   "gv": "3",
   "id": "555c4b2715522ed4b3e0a88c",
   "url": "/JWarmenhoven",
   "username": "JWarmenhoven",
   "v": 5
  },
  "html": "I am trying to model the Baseball batting average data from Kruschke (2015) in PyMC3. Just starting out with probabilistic modelling/PyMC3 and I am not sure I got the model definition correct. <a href=\"http://nbviewer.jupyter.org/github/JWarmenhoven/DBDA-python/blob/master/Notebooks/Chapter%209.ipynb#9.5.1---Example:-Baseball-batting-abilities-by-position\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://nbviewer.jupyter.org/github/JWarmenhoven/DBDA-python/blob/master/Notebooks/Chapter%209.ipynb#9.5.1---Example:-Baseball-batting-abilities-by-position</a> Any comments?",
  "id": "578c9e22914c51592b3cee3f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-07-18T09:15:14.862Z",
  "text": "I am trying to model the Baseball batting average data from Kruschke (2015) in PyMC3. Just starting out with probabilistic modelling/PyMC3 and I am not sure I got the model definition correct. http://nbviewer.jupyter.org/github/JWarmenhoven/DBDA-python/blob/master/Notebooks/Chapter%209.ipynb#9.5.1---Example:-Baseball-batting-abilities-by-position Any comments?\n",
  "unread": false,
  "urls": [
   {
    "url": "http://nbviewer.jupyter.org/github/JWarmenhoven/DBDA-python/blob/master/Notebooks/Chapter%209.ipynb#9.5.1---Example:-Baseball-batting-abilities-by-position"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"JWarmenhoven\" class=\"mention\">@JWarmenhoven</span> did you see <a href=\"https://github.com/aloctavodia/Doing_bayesian_data_analysis?\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/aloctavodia/Doing_bayesian_data_analysis?</a>",
  "id": "578cc2019f79ee4f2bda63e2",
  "issues": [],
  "mentions": [
   {
    "screenName": "JWarmenhoven",
    "userId": "555c4b2715522ed4b3e0a88c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-07-18T11:48:17.788Z",
  "text": "@JWarmenhoven did you see https://github.com/aloctavodia/Doing_bayesian_data_analysis?",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aloctavodia/Doing_bayesian_data_analysis?"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/JWarmenhoven",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7450204?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7450204?v=3&s=60",
   "displayName": "Jordi Warmenhoven",
   "gv": "3",
   "id": "555c4b2715522ed4b3e0a88c",
   "url": "/JWarmenhoven",
   "username": "JWarmenhoven",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> Yes I did. But I think this particular example was not included in the first edition of the book.<br><a href=\"https://sites.google.com/site/doingbayesiandataanalysis/what-s-new-in-2nd-ed\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://sites.google.com/site/doingbayesiandataanalysis/what-s-new-in-2nd-ed</a> And I did not find any corresponding code in the repo.",
  "id": "578cc6d8914c51592b3eb113",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T12:08:56.993Z",
  "text": "@twiecki Yes I did. But I think this particular example was not included in the first edition of the book.\nhttps://sites.google.com/site/doingbayesiandataanalysis/what-s-new-in-2nd-ed And I did not find any corresponding code in the repo.",
  "unread": false,
  "urls": [
   {
    "url": "https://sites.google.com/site/doingbayesiandataanalysis/what-s-new-in-2nd-ed"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "ah",
  "id": "578cc6ebd11cd28812473481",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T12:09:15.645Z",
  "text": "ah",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "let me check",
  "id": "578cc6edd11cd28812473486",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T12:09:17.446Z",
  "text": "let me check",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "the trace of the second model definitely looks odd",
  "id": "578cc739d11cd28812473548",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T12:10:33.828Z",
  "text": "the trace of the second model definitely looks odd",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "never seen the Binomial used liked that for percentages",
  "id": "578cc7d6914c51592b3ebfba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T12:13:10.016Z",
  "text": "never seen the Binomial used liked that for percentages",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I guess it makes sense, just not sure that works",
  "id": "578cc7df8423d084245ae26b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T12:13:19.319Z",
  "text": "I guess it makes sense, just not sure that works",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<code>start = pmc.find_MAP()</code> that usually does not work very well, better to just start somewhere",
  "id": "578cc7fed11cd288124740fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T12:13:50.829Z",
  "text": "`start = pmc.find_MAP()` that usually does not work very well, better to just start somewhere",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/JWarmenhoven",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7450204?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7450204?v=3&s=60",
   "displayName": "Jordi Warmenhoven",
   "gv": "3",
   "id": "555c4b2715522ed4b3e0a88c",
   "url": "/JWarmenhoven",
   "username": "JWarmenhoven",
   "v": 5
  },
  "html": "Regarding the Binomial: I more or less mapped the JAGS code to pymc3 \ud83d\ude10",
  "id": "578cc8d8d11cd288124743d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T12:17:28.146Z",
  "text": "Regarding the Binomial: I more or less mapped the JAGS code to pymc3 \ud83d\ude10",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that&#39;s fair",
  "id": "578cc8e8914c51592b3eccdd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T12:17:44.314Z",
  "text": "that's fair",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "the model is compiling so it&#39;s not obviously wrong",
  "id": "578cc8f49f79ee4f2bdaa6d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T12:17:56.916Z",
  "text": "the model is compiling so it's not obviously wrong",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "just the sampler seems to get stuck in some odd state",
  "id": "578cc8fc9f79ee4f2bdaa6e3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T12:18:04.110Z",
  "text": "just the sampler seems to get stuck in some odd state",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "before then, do the results look reasonable / comparable?",
  "id": "578cc94e9f79ee4f2bdab122",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T12:19:26.946Z",
  "text": "before then, do the results look reasonable / comparable?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-18T13:02:29.971Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> my post on lasagne + pymc3 not playing nicely:</p><p>even simpler example. This works without <code>dtype=&#39;float32&#39;</code> but not with it:</p><pre><code><span class=\"keyword\">from</span> pymc3 <span class=\"keyword\">import</span> Model, NUTS, sample\n<span class=\"keyword\">from</span> pymc3.distributions <span class=\"keyword\">import</span> DensityDist\ntheano.config.compute_test_value = <span class=\"string\">'raise'</span>\n\n<span class=\"keyword\">with</span> Model() <span class=\"keyword\">as</span> denoising_model:\n<span class=\"comment\">#     theano.config.compute_test_value = 'off'</span>\n\n    x = DensityDist(<span class=\"string\">'x'</span>,\n            logp= <span class=\"keyword\">lambda</span> value: value**<span class=\"number\">2</span>,\n            shape=(<span class=\"number\">1</span>,),\n            testval=<span class=\"number\">1.0</span>,\n            dtype=<span class=\"string\">'float32'</span>,\n        )\n\n    trace = sample(<span class=\"number\">10</span>)</code></pre>",
  "id": "578cd31fe4375c921207df10",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-18T13:01:19.941Z",
  "text": "@twiecki my post on lasagne + pymc3 not playing nicely:\n\neven simpler example. This works without `dtype='float32'` but not with it:\n```\nfrom pymc3 import Model, NUTS, sample\nfrom pymc3.distributions import DensityDist\ntheano.config.compute_test_value = 'raise'\n\nwith Model() as denoising_model:\n#     theano.config.compute_test_value = 'off'\n\n    x = DensityDist('x',\n            logp= lambda value: value**2,\n            shape=(1,),\n            testval=1.0,\n            dtype='float32',\n        )\n\n    trace = sample(10)\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "sorry this got messed up...",
  "id": "578cd341d11cd2881247c6ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T13:01:53.262Z",
  "text": "sorry this got messed up...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "no worries, easy to clean?",
  "id": "578cd353d11cd2881247c6e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T13:02:11.477Z",
  "text": "no worries, easy to clean?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-18T13:03:52.623Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "so looking aback at this, the problem with convnets in pymc might be that for GPUs one has to use <code>float32</code>, but it doesn&#39;t work well with <code>pymc3</code> and I also recall somehow <code>theano.config.compute_test_value = &#39;raise&#39;</code> being part of the reason why",
  "id": "578cd390914c51592b3f41a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T13:03:12.189Z",
  "text": "so looking aback at this, the problem with convnets in pymc might be that for GPUs one has to use `float32`, but it doesn't work well with `pymc3` and I also recall somehow `theano.config.compute_test_value = 'raise'` being part of the reason why",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-07-18T13:05:34.236Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "",
  "id": "578cd4023cb52e8b24e31796",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T13:05:06.194Z",
  "text": "",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "how can I check if something runs on the GPU or not?",
  "id": "578cd451196179690e032ae9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T13:06:25.680Z",
  "text": "how can I check if something runs on the GPU or not?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "this page from theano tutorial has an example: <a href=\"http://deeplearning.net/software/theano/tutorial/using_gpu.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://deeplearning.net/software/theano/tutorial/using_gpu.html</a>",
  "id": "578cd46a3c5129720e53cb08",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T13:06:50.428Z",
  "text": "this page from theano tutorial has an example: http://deeplearning.net/software/theano/tutorial/using_gpu.html",
  "unread": false,
  "urls": [
   {
    "url": "http://deeplearning.net/software/theano/tutorial/using_gpu.html"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2016-07-18T13:07:24.855Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "basically you have to check that when the theano graph gets computed, the ops in the tree are ones that run on GPU.",
  "id": "578cd489d11cd2881247e399",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T13:07:21.932Z",
  "text": "basically you have to check that when the theano graph gets computed, the ops in the tree are ones that run on GPU.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "(now I&#39;m confused by gitter, I can&#39;t see my previous message, or your reply to it)",
  "id": "578cd4b1e4375c921207fb3b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T13:08:01.910Z",
  "text": "(now I'm confused by gitter, I can't see my previous message, or your reply to it)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "browser refresh maybe?",
  "id": "578cd4e39f79ee4f2bdb433c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T13:08:51.126Z",
  "text": "browser refresh maybe?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "and your example above is one that does not work on GPU, but should?",
  "id": "578cd4f38423d084245b8624",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T13:09:07.394Z",
  "text": "and your example above is one that does not work on GPU, but should?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "frankly, I can&#39;t remember what exactly I was trying to do",
  "id": "578cd51a914c51592b3f464a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T13:09:46.134Z",
  "text": "frankly, I can't remember what exactly I was trying to do",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "ok",
  "id": "578cd52d3c5129720e53db8a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T13:10:05.945Z",
  "text": "ok",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "So in the example I posted here in March (please scroll back as quoting doesn&#39;t seem to work well) there is no GPU even remotely involved, I&#39;m just trying to create a random variable which is of <code>float32</code> type and pymc gives an error. I think this is a prerequisite to doing anything on a GPU.<pre><code><span class=\"keyword\">from</span> pymc3 <span class=\"keyword\">import</span> Model, NUTS, sample\n<span class=\"keyword\">from</span> pymc3.distributions <span class=\"keyword\">import</span> DensityDist\ntheano.config.compute_test_value = <span class=\"string\">'raise'</span>\n\n<span class=\"keyword\">with</span> Model() <span class=\"keyword\">as</span> denoising_model:\n<span class=\"comment\">#     theano.config.compute_test_value = 'off'</span>\n\n    x = DensityDist(<span class=\"string\">'x'</span>,\n            logp= <span class=\"keyword\">lambda</span> value: -(value**<span class=\"number\">2</span>).sum(),\n            shape=(<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>),\n            testval=np.random.randn(<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">10</span>).astype(<span class=\"string\">'float32'</span>),\n            dtype=<span class=\"string\">'float32'</span>,\n        )\n\n    trace = sample(<span class=\"number\">10</span>)</code></pre>",
  "id": "578cd5b83cb52e8b24e32990",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T13:12:24.628Z",
  "text": "So in the example I posted here in March (please scroll back as quoting doesn't seem to work well) there is no GPU even remotely involved, I'm just trying to create a random variable which is of `float32` type and pymc gives an error. I think this is a prerequisite to doing anything on a GPU.\n\n```\nfrom pymc3 import Model, NUTS, sample\nfrom pymc3.distributions import DensityDist\ntheano.config.compute_test_value = 'raise'\n\nwith Model() as denoising_model:\n#     theano.config.compute_test_value = 'off'\n\n    x = DensityDist('x',\n            logp= lambda value: -(value**2).sum(),\n            shape=(1, 1, 10, 10),\n            testval=np.random.randn(1,1,10,10).astype('float32'),\n            dtype='float32',\n        )\n\n    trace = sample(10)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "because of the <code>float32</code>",
  "id": "578cd5d3196179690e034768",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T13:12:51.381Z",
  "text": "because of the `float32`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "trying",
  "id": "578cd5ec196179690e0347af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T13:13:16.989Z",
  "text": "trying",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "<p>yes, the error message this code gave me in March is this:</p><p><code>TypeError: (&#39;The type of the replacement must be compatible with the type of the original Variable.&#39;, Sum{axis=[0, 1], acc_dtype=float64}.0, Elemwise{mul,no_inplace}.0, TensorType(float32, matrix), TensorType(float64, matrix), &#39;local_sum_prod_mul_by_scalar&#39;)</code></p>",
  "id": "578cd5f18423d084245b954f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T13:13:21.193Z",
  "text": "yes, the error message this code gave me in March is this:\n\n```TypeError: ('The type of the replacement must be compatible with the type of the original Variable.', Sum{axis=[0, 1], acc_dtype=float64}.0, Elemwise{mul,no_inplace}.0, TensorType(float32, matrix), TensorType(float64, matrix), 'local_sum_prod_mul_by_scalar')```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "and what I want to do is eventually replace <code>lambda value: -(value**2).sum()</code> with <code>network.get_output()</code> where <code>network</code> is a lasagne net",
  "id": "578cd6288423d084245b960a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T13:14:16.349Z",
  "text": "and what I want to do is eventually replace `lambda value: -(value**2).sum()` with `network.get_output()` where `network` is a lasagne net",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "right",
  "id": "578cd634914c51592b3f4d7a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T13:14:28.076Z",
  "text": "right",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I remember having to do that too for my bayesian deep learning 2 blog post",
  "id": "578cd64f8423d084245b9913",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-18T13:14:55.713Z",
  "text": "I remember having to do that too for my bayesian deep learning 2 blog post",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "but yours also didn&#39;t run on GPU?",
  "id": "578cd6658423d084245b9b74",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-18T13:15:17.013Z",
  "text": "but yours also didn't run on GPU?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "also try this:",
  "id": "578cd66cd11cd2881248003d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-18T13:15:24.419Z",
  "text": "also try this:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "no, it didn&#39;t",
  "id": "578cd673e4375c9212080e86",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-18T13:15:31.446Z",
  "text": "no, it didn't",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "run the example code from the page I posted which checks if theano runs on GPU. Then try the same thing with an extra <code>import pymc3</code> on top",
  "id": "578cd68f3cb52e8b24e331a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-18T13:15:59.323Z",
  "text": "run the example code from the page I posted which checks if theano runs on GPU. Then try the same thing with an extra `import pymc3` on top",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "as far as I remember even just importing pymc causes theano to run the same code on CPU unstead",
  "id": "578cd6a6196179690e034c15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-07-18T13:16:22.625Z",
  "text": "as far as I remember even just importing pymc causes theano to run the same code on CPU unstead",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "and the cause for that is the <code>theano.config.compute_test_value = &#39;raise&#39;</code> flag ",
  "id": "578cd6bae4375c9212081011",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-07-18T13:16:42.213Z",
  "text": "and the cause for that is the `theano.config.compute_test_value = 'raise'` flag ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "or at least that&#39;s what I remember, I may be wrong",
  "id": "578cd6dde4375c9212081399",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-07-18T13:17:17.799Z",
  "text": "or at least that's what I remember, I may be wrong",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I see, so there are at least two reasons it seems",
  "id": "578cd6ee8423d084245ba220",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-07-18T13:17:34.191Z",
  "text": "I see, so there are at least two reasons it seems",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "if I could make NUTS work on an energy function defined by a deep network that would be brilliant - it&#39;s relatively easy to train an unnormalised deep energy model for natural images, so once you&#39;ve done that you can use that as a prior in a graphical model and do all sorts of inference tasks with it",
  "id": "578cd742196179690e035508",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-07-18T13:18:58.415Z",
  "text": "if I could make NUTS work on an energy function defined by a deep network that would be brilliant - it's relatively easy to train an unnormalised deep energy model for natural images, so once you've done that you can use that as a prior in a graphical model and do all sorts of inference tasks with it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/fhuszar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1321918?v=3&s=60",
   "displayName": "Ferenc Huszar",
   "gv": "3",
   "id": "545caccbdb8155e6700d2595",
   "url": "/fhuszar",
   "username": "fhuszar",
   "v": 4
  },
  "html": "yes, I think I identified these two problems, couldn&#39;t resolve either",
  "id": "578cd764e4375c9212081776",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-07-18T13:19:32.212Z",
  "text": "yes, I think I identified these two problems, couldn't resolve either",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I replaced all occurances in pymc3 of float64 with float32, but no luck",
  "id": "578cd7d5196179690e03592d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-07-18T13:21:25.155Z",
  "text": "I replaced all occurances in pymc3 of float64 with float32, but no luck",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<pre><code><span class=\"type\">TypeError</span>: (<span class=\"symbol\">'The</span> <span class=\"class\"><span class=\"keyword\">type</span> <span class=\"title\">of</span> <span class=\"title\">the</span> <span class=\"title\">replacement</span> <span class=\"title\">must</span> <span class=\"title\">be</span> <span class=\"title\">compatible</span> <span class=\"keyword\"><span class=\"keyword\">with</span></span> <span class=\"title\">the</span> <span class=\"title\">type</span> <span class=\"title\">of</span> <span class=\"title\">the</span> <span class=\"title\">original</span> <span class=\"title\">Variable</span>.', <span class=\"title\">Sum</span>{</span>axis=[<span class=\"number\">0</span>, <span class=\"number\">1</span>], acc_dtype=float64}.<span class=\"number\">0</span>, <span class=\"type\">Elemwise</span>{mul,no_inplace}.<span class=\"number\">0</span>, <span class=\"type\">TensorType</span>(float32, matrix), <span class=\"type\">TensorType</span>(float64, matrix), <span class=\"symbol\">'local_sum_prod_mul_by_scala</span>r')</code></pre>",
  "id": "578cd7dd8423d084245bb4ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-07-18T13:21:33.866Z",
  "text": "```\nTypeError: ('The type of the replacement must be compatible with the type of the original Variable.', Sum{axis=[0, 1], acc_dtype=float64}.0, Elemwise{mul,no_inplace}.0, TensorType(float32, matrix), TensorType(float64, matrix), 'local_sum_prod_mul_by_scalar')\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "seems like a lot of tensor operations are float64 via the <code>acc_dtype</code>",
  "id": "578cd8f08423d084245bcae3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-07-18T13:26:08.730Z",
  "text": "seems like a lot of tensor operations are float64 via the `acc_dtype`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"1246\" data-issue-repo=\"pymc-devs/pymc3\" class=\"issue\">pymc-devs/pymc3#1246</span>",
  "id": "578cd9a33c5129720e54069f",
  "issues": [
   {
    "number": "1246",
    "repo": "pymc-devs/pymc3"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-07-18T13:29:07.628Z",
  "text": "https://github.com/pymc-devs/pymc3/issues/1246",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "maybe noiuz has an idea",
  "id": "578cd9a8d11cd28812482de8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-07-18T13:29:12.007Z",
  "text": "maybe noiuz has an idea",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/JWarmenhoven",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7450204?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7450204?v=3&s=60",
   "displayName": "Jordi Warmenhoven",
   "gv": "3",
   "id": "555c4b2715522ed4b3e0a88c",
   "url": "/JWarmenhoven",
   "username": "JWarmenhoven",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> When ",
  "id": "578d268f75045f8767f0c5ea",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-18T18:57:19.150Z",
  "text": "@twiecki When ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "when what?",
  "id": "578d2b720720fd587a8f7540",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-18T19:18:10.329Z",
  "text": "when what?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/JWarmenhoven",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7450204?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7450204?v=3&s=60",
   "displayName": "Jordi Warmenhoven",
   "gv": "3",
   "id": "555c4b2715522ed4b3e0a88c",
   "url": "/JWarmenhoven",
   "username": "JWarmenhoven",
   "v": 5
  },
  "html": "...you say just start somewhere and not use ",
  "id": "578d2c322d04e058517c6093",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-18T19:21:22.168Z",
  "text": "...you say just start somewhere and not use ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/JWarmenhoven",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7450204?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7450204?v=3&s=60",
   "displayName": "Jordi Warmenhoven",
   "gv": "3",
   "id": "555c4b2715522ed4b3e0a88c",
   "url": "/JWarmenhoven",
   "username": "JWarmenhoven",
   "v": 5
  },
  "html": "find_MAP(), how should I go about?",
  "id": "578d2c8175045f8767f12237",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-18T19:22:41.168Z",
  "text": "find_MAP(), how should I go about?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "just don&#39;t set a scaling",
  "id": "578d2c962d04e058517c66ff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-18T19:23:02.846Z",
  "text": "just don't set a scaling",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "and don&#39;t call find_MAP()",
  "id": "578d2c9c16487c5e5146ecbd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-18T19:23:08.836Z",
  "text": "and don't call find_MAP()",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/JWarmenhoven",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7450204?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7450204?v=3&s=60",
   "displayName": "Jordi Warmenhoven",
   "gv": "3",
   "id": "555c4b2715522ed4b3e0a88c",
   "url": "/JWarmenhoven",
   "username": "JWarmenhoven",
   "v": 5
  },
  "html": "Ok. I&#39;ll give it a try. ",
  "id": "578d342a75045f8767f1877b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-18T19:55:22.503Z",
  "text": "Ok. I'll give it a try. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/JWarmenhoven",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7450204?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7450204?v=3&s=60",
   "displayName": "Jordi Warmenhoven",
   "gv": "3",
   "id": "555c4b2715522ed4b3e0a88c",
   "url": "/JWarmenhoven",
   "username": "JWarmenhoven",
   "v": 5
  },
  "html": "That did not solve the issue. The results are neither reasonable nor comparable.<br><a href=\"http://nbviewer.jupyter.org/github/JWarmenhoven/DBDA-python/blob/master/Notebooks/Chapter%209.ipynb#9.5.1---Example:-Baseball-batting-abilities-by-position\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://nbviewer.jupyter.org/github/JWarmenhoven/DBDA-python/blob/master/Notebooks/Chapter%209.ipynb#9.5.1---Example:-Baseball-batting-abilities-by-position</a>",
  "id": "578d625b3d74e5a016591c38",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-18T23:12:27.709Z",
  "text": "That did not solve the issue. The results are neither reasonable nor comparable.\nhttp://nbviewer.jupyter.org/github/JWarmenhoven/DBDA-python/blob/master/Notebooks/Chapter%209.ipynb#9.5.1---Example:-Baseball-batting-abilities-by-position\n",
  "unread": false,
  "urls": [
   {
    "url": "http://nbviewer.jupyter.org/github/JWarmenhoven/DBDA-python/blob/master/Notebooks/Chapter%209.ipynb#9.5.1---Example:-Baseball-batting-abilities-by-position"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "looks the model converged this time though",
  "id": "578e537c0720fd587a9d53a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-19T16:21:16.125Z",
  "text": "looks the model converged this time though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I would add some burn-in (slicing off the first 100 samples)",
  "id": "578e538775045f8767ff5b4e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-19T16:21:27.468Z",
  "text": "I would add some burn-in (slicing off the first 100 samples)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/JWarmenhoven",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7450204?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7450204?v=3&s=60",
   "displayName": "Jordi Warmenhoven",
   "gv": "3",
   "id": "555c4b2715522ed4b3e0a88c",
   "url": "/JWarmenhoven",
   "username": "JWarmenhoven",
   "v": 5
  },
  "html": "Indeed it did. ",
  "id": "578e664d75045f876700a192",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-19T17:41:33.366Z",
  "text": "Indeed it did. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "but something is very wrong",
  "id": "578e6c1d3d74e5a016662454",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-19T18:06:21.065Z",
  "text": "but something is very wrong",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "also, you&#39;re now using a bernoulli for non-binary data",
  "id": "578e6c243d74e5a016662475",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-19T18:06:28.892Z",
  "text": "also, you're now using a bernoulli for non-binary data",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/JWarmenhoven",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7450204?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7450204?v=3&s=60",
   "displayName": "Jordi Warmenhoven",
   "gv": "3",
   "id": "555c4b2715522ed4b3e0a88c",
   "url": "/JWarmenhoven",
   "username": "JWarmenhoven",
   "v": 5
  },
  "html": "Maybe there is indeed something wrong with the likelihood definition. But the model is not that much different from the one based on the &#39;Therapeutic Touch&#39; data. Only some categories have been added. ",
  "id": "578e99fbac85f2507ad20afb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-19T21:22:03.945Z",
  "text": "Maybe there is indeed something wrong with the likelihood definition. But the model is not that much different from the one based on the 'Therapeutic Touch' data. Only some categories have been added. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-19T22:24:55.646Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/JWarmenhoven",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7450204?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7450204?v=3&s=60",
   "displayName": "Jordi Warmenhoven",
   "gv": "3",
   "id": "555c4b2715522ed4b3e0a88c",
   "url": "/JWarmenhoven",
   "username": "JWarmenhoven",
   "v": 5
  },
  "html": "Ok, looks like I am getting somewhere with the following likelihood:<br><code>y = pmc.Binomial(&#39;y&#39;, n=df2.AtBats.as_matrix(), p=theta[players_idx], observed=df2.Hits)</code><br>Should of course use the binomial data (hits and trials) and not the percentage. But not really sure of the category parameters: they are somehow too similar I think. The mode (omega_c) for pitcher category should be much lower.",
  "id": "578ea88c3d74e5a016691db9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-19T22:24:12.630Z",
  "text": "Ok, looks like I am getting somewhere with the following likelihood:\n`y = pmc.Binomial('y', n=df2.AtBats.as_matrix(), p=theta[players_idx], observed=df2.Hits)`\nShould of course use the binomial data (hits and trials) and not the percentage. But not really sure of the category parameters: they are somehow too similar I think. The mode (omega_c) for pitcher category should be much lower.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "editedAt": "2016-07-20T00:03:51.200Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/weitzenfeld_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9_bigger.jpeg",
   "displayName": "Daniel Weitzenfeld",
   "id": "578e947ac2f0db084a23bde6",
   "url": "/weitzenfeld_twitter",
   "username": "weitzenfeld_twitter"
  },
  "html": "<p>I&#39;m getting strange results when I try to use a masked array: </p><pre><code>import pymc3 as pm\nimport numpy as np\n\nobs = np.<span class=\"function\"><span class=\"title\">concatenate</span><span class=\"params\">((np.ones(<span class=\"number\">50</span>)</span></span>, np.<span class=\"function\"><span class=\"title\">zeros</span><span class=\"params\">(<span class=\"number\">50</span>)</span></span>))\nnp<span class=\"class\">.random</span><span class=\"class\">.shuffle</span>(obs)\n\n<span class=\"attribute\">mask</span> = np<span class=\"class\">.random</span><span class=\"class\">.random_integers</span>(<span class=\"number\">0</span>, <span class=\"number\">99</span>, <span class=\"number\">20</span>)\nobs[<span class=\"attribute\">mask</span>] = -<span class=\"number\">999</span>\n\nmasked_array = np<span class=\"class\">.ma</span><span class=\"class\">.masked_values</span>(obs, value=-<span class=\"number\">999</span>)\nmasked_array\n\nwith pm.<span class=\"function\"><span class=\"title\">Model</span><span class=\"params\">()</span></span> as model:\n\n    theta = pm.<span class=\"function\"><span class=\"title\">Beta</span><span class=\"params\">(<span class=\"string\">'theta'</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, testval = .<span class=\"number\">5</span>)</span></span>\n\n    observed = pm.<span class=\"function\"><span class=\"title\">Bernoulli</span><span class=\"params\">(<span class=\"string\">'observed'</span>, theta, observed=masked_array)</span></span>    \n\n    step = pm.<span class=\"function\"><span class=\"title\">Metropolis</span><span class=\"params\">([theta, observed.missing_values[<span class=\"number\">0</span>]])</span></span>\n    trace = pm.<span class=\"function\"><span class=\"title\">sample</span><span class=\"params\">(draws=<span class=\"number\">50000</span>, step=[step])</span></span></code></pre><p>The posterior for <code>observed_missing</code> is always 0, and <code>theta</code> is centered around .42</p>",
  "id": "578ebfc49f35137e67e055c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-20T00:03:16.522Z",
  "text": "I'm getting strange results when I try to use a masked array: \n```\nimport pymc3 as pm\nimport numpy as np\n\nobs = np.concatenate((np.ones(50), np.zeros(50)))\nnp.random.shuffle(obs)\n\nmask = np.random.random_integers(0, 99, 20)\nobs[mask] = -999\n\nmasked_array = np.ma.masked_values(obs, value=-999)\nmasked_array\n\nwith pm.Model() as model:\n    \n    theta = pm.Beta('theta', 2, 2, testval = .5)\n    \n    observed = pm.Bernoulli('observed', theta, observed=masked_array)    \n    \n    step = pm.Metropolis([theta, observed.missing_values[0]])\n    trace = pm.sample(draws=50000, step=[step])```\n\nThe posterior for `observed_missing` is always 0, and `theta` is centered around .42\n\n",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/weitzenfeld_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9_bigger.jpeg",
   "displayName": "Daniel Weitzenfeld",
   "id": "578e947ac2f0db084a23bde6",
   "url": "/weitzenfeld_twitter",
   "username": "weitzenfeld_twitter"
  },
  "html": "I should say <code>observed_missing</code> is almost always 0... I just did a run and got some 1s.  But it seems to be 0 way more than it ought to be.",
  "id": "578ec0f89f35137e67e067b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-20T00:08:24.523Z",
  "text": "I should say `observed_missing` is almost always 0... I just did a run and got some 1s.  But it seems to be 0 way more than it ought to be.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"JWarmenhoven\" class=\"mention\">@JWarmenhoven</span> that looks much closer",
  "id": "578f784616487c5e51627fe7",
  "issues": [],
  "mentions": [
   {
    "screenName": "JWarmenhoven",
    "userId": "555c4b2715522ed4b3e0a88c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-20T13:10:30.630Z",
  "text": "@JWarmenhoven that looks much closer",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/weitzenfeld_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9_bigger.jpeg",
   "displayName": "Daniel Weitzenfeld",
   "id": "578e947ac2f0db084a23bde6",
   "url": "/weitzenfeld_twitter",
   "username": "weitzenfeld_twitter"
  },
  "html": "Answering my own question above - I assumed that the inference process would infer theta to be around .5 from the observed data, and then use that to determine likely values of for the missing data.  But what&#39;s happening is that the missing values are initialized to be all 0, theta is inferred to be &lt;.5 accordingly, which makes sense. ",
  "id": "5790dee89f35137e67f86eb5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-21T14:40:40.508Z",
  "text": "Answering my own question above - I assumed that the inference process would infer theta to be around .5 from the observed data, and then use that to determine likely values of for the missing data.  But what's happening is that the missing values are initialized to be all 0, theta is inferred to be <.5 accordingly, which makes sense. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "ah, glad you figured it out",
  "id": "5790dfb89f35137e67f87805",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-21T14:44:08.183Z",
  "text": "ah, glad you figured it out",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "so now you initialize them randomly?",
  "id": "5790dfc09f35137e67f8781a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-21T14:44:16.064Z",
  "text": "so now you initialize them randomly?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/weitzenfeld_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9_bigger.jpeg",
   "displayName": "Daniel Weitzenfeld",
   "id": "578e947ac2f0db084a23bde6",
   "url": "/weitzenfeld_twitter",
   "username": "weitzenfeld_twitter"
  },
  "html": "hadn&#39;t tried that, I&#39;ll do so",
  "id": "5790dfda841e619d162cc271",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-21T14:44:42.153Z",
  "text": "hadn't tried that, I'll do so",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-22T00:07:33.676Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/weitzenfeld_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9_bigger.jpeg",
   "displayName": "Daniel Weitzenfeld",
   "id": "578e947ac2f0db084a23bde6",
   "url": "/weitzenfeld_twitter",
   "username": "weitzenfeld_twitter"
  },
  "html": "I&#39;ve kept digging and I&#39;m still getting strange results with masked arrays. Let me know if this is not the right forum for this.<br>In this model, there&#39;s a population of 0s and 1s.  On avg., 1s live 10x time as long as 0s.  Class (0 or 1) is missing for 10% of the population, but we know lifetime for everyone.  Presumably, the class likelihoods for those missing class should depend on the observed lifetime, but that&#39;s not the results you get when running this model: <pre><code><span class=\"keyword\">import</span> pymc3 as pm\n<span class=\"keyword\">import</span> numpy as np\n\n# zeros have <span class=\"keyword\">short</span> lives, ones have <span class=\"keyword\">long</span> lives\nobs = np.concatenate(( np.zeros(<span class=\"number\">500</span>), np.ones(<span class=\"number\">500</span>)))\nshortlived = np.random.exponential(<span class=\"number\">10</span>, <span class=\"keyword\">size</span>=<span class=\"number\">500</span>)\nlonglived = np.random.exponential(<span class=\"number\">100</span>, <span class=\"keyword\">size</span>=<span class=\"number\">500</span>)\nlifetimes = np.concatenate((shortlived, longlived))\n\n# mask <span class=\"keyword\">class</span> <span class=\"keyword\">for</span> <span class=\"number\">50</span> of <span class=\"keyword\">each</span>\nobs_for_masking = np.<span class=\"keyword\">copy</span>(obs)\nobs_for_masking[np.arange(<span class=\"number\">0</span>, <span class=\"number\">50</span>)] = -<span class=\"number\">999</span>\nobs_for_masking[np.arange(<span class=\"number\">500</span>, <span class=\"number\">550</span>)] = -<span class=\"number\">999</span>\nmasked_array = np.ma.masked_values(obs_for_masking, value=-<span class=\"number\">999</span>)\n\nwith pm.Model() as model:\n    theta = pm.Beta(<span class=\"string\">'theta'</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, testval = .<span class=\"number\">5</span>)    \n    <span class=\"keyword\">group</span> = pm.Bernoulli(<span class=\"string\">'group'</span>, theta, observed=masked_array, testval=obs) \n    lambdas = pm.Uniform(<span class=\"string\">'lambdas'</span>, <span class=\"number\">0</span>, <span class=\"number\">100</span>, shape=<span class=\"number\">2</span>, testval = np.array([<span class=\"number\">1</span>.<span class=\"regexp\">/10, 1./</span><span class=\"number\">100</span>]))\n    lambda_switch = pm.<span class=\"keyword\">switch</span>(T.eq(<span class=\"keyword\">group</span>, np.ones(len(masked_array))), lambdas[<span class=\"number\">0</span>], lambdas[<span class=\"number\">1</span>])\n    obs_lifetimes = pm.Exponential(<span class=\"string\">'obs_lifetimes'</span>, lambda_switch, observed=lifetimes)\n    trace = pm.sample(draws=<span class=\"number\">30000</span>)</code></pre>",
  "id": "579163b47d3b50ce77b451f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-22T00:07:16.277Z",
  "text": "I've kept digging and I'm still getting strange results with masked arrays. Let me know if this is not the right forum for this.\nIn this model, there's a population of 0s and 1s.  On avg., 1s live 10x time as long as 0s.  Class (0 or 1) is missing for 10% of the population, but we know lifetime for everyone.  Presumably, the class likelihoods for those missing class should depend on the observed lifetime, but that's not the results you get when running this model: \n```\nimport pymc3 as pm\nimport numpy as np\n\n# zeros have short lives, ones have long lives\nobs = np.concatenate(( np.zeros(500), np.ones(500)))\nshortlived = np.random.exponential(10, size=500)\nlonglived = np.random.exponential(100, size=500)\nlifetimes = np.concatenate((shortlived, longlived))\n\n# mask class for 50 of each\nobs_for_masking = np.copy(obs)\nobs_for_masking[np.arange(0, 50)] = -999\nobs_for_masking[np.arange(500, 550)] = -999\nmasked_array = np.ma.masked_values(obs_for_masking, value=-999)\n\nwith pm.Model() as model:\n    theta = pm.Beta('theta', 2, 2, testval = .5)    \n    group = pm.Bernoulli('group', theta, observed=masked_array, testval=obs) \n    lambdas = pm.Uniform('lambdas', 0, 100, shape=2, testval = np.array([1./10, 1./100]))\n    lambda_switch = pm.switch(T.eq(group, np.ones(len(masked_array))), lambdas[0], lambdas[1])\n    obs_lifetimes = pm.Exponential('obs_lifetimes', lambda_switch, observed=lifetimes)\n    trace = pm.sample(draws=30000)```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/weitzenfeld_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9_bigger.jpeg",
   "displayName": "Daniel Weitzenfeld",
   "id": "578e947ac2f0db084a23bde6",
   "url": "/weitzenfeld_twitter",
   "username": "weitzenfeld_twitter"
  },
  "html": "I moved this ^ to an issue, including a counter example producing the expected results: <span data-link-type=\"issue\" data-issue=\"1254\" data-issue-repo=\"pymc-devs/pymc3\" class=\"issue\">pymc-devs/pymc3#1254</span>",
  "id": "5793ce91b92e27447fa67047",
  "issues": [
   {
    "number": "1254",
    "repo": "pymc-devs/pymc3"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-23T20:07:45.136Z",
  "text": "I moved this ^ to an issue, including a counter example producing the expected results: https://github.com/pymc-devs/pymc3/issues/1254",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Why do we have two readme files?",
  "id": "57961bedad8f331f4e46a210",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-25T14:02:21.449Z",
  "text": "Why do we have two readme files?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "one for sphinx, one for readme",
  "id": "57961c0400c8ebdd0e224b57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-25T14:02:44.768Z",
  "text": "one for sphinx, one for readme",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "but you&#39;re right",
  "id": "57961c068fb4820a46627f9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-25T14:02:46.879Z",
  "text": "but you're right",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "we can probably remove the .md one",
  "id": "57961c0c93148c6b21dcc2dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-25T14:02:52.778Z",
  "text": "we can probably remove the .md one",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "I though we were living in a markdown world",
  "id": "57961c1b93148c6b21dcc30c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-25T14:03:07.774Z",
  "text": "I though we were living in a markdown world",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "thoguth",
  "id": "57961c1fad8f331f4e46a27a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-25T14:03:11.519Z",
  "text": "thoguth",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "thought",
  "id": "57961c21ad8f331f4e46a27e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-25T14:03:13.652Z",
  "text": "thought",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "we used to, but rest pulled us back in",
  "id": "57961c31d155b0294e08805e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-25T14:03:29.458Z",
  "text": "we used to, but rest pulled us back in",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "it really only affects the readme though",
  "id": "57961c4937c95e2446b4410e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-25T14:03:53.347Z",
  "text": "it really only affects the readme though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "btw I fixed up your refactor branch",
  "id": "57961e9b8fb4820a466286d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-25T14:13:47.852Z",
  "text": "btw I fixed up your refactor branch",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Saw that. Should be ready to go now.",
  "id": "57961ed93383eb622141ed6a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-25T14:14:49.237Z",
  "text": "Saw that. Should be ready to go now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "We should probably release beta 2. Bugs from the current beta keep cropping up in the issue tracker.",
  "id": "5798285a7c9324e20e014098",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-27T03:19:54.607Z",
  "text": "We should probably release beta 2. Bugs from the current beta keep cropping up in the issue tracker.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "agreed",
  "id": "579866433383eb622146c82f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-27T07:44:03.956Z",
  "text": "agreed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "or maybe just 3.0",
  "id": "579866488fb4820a46678702",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-27T07:44:08.612Z",
  "text": "or maybe just 3.0",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/parsing-science",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4855740?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4855740?v=3&s=60",
   "displayName": "Nicole Carlson",
   "gv": "3",
   "id": "5799046640f3a6eec05cc4d0",
   "url": "/parsing-science",
   "username": "parsing-science",
   "v": 3
  },
  "html": "Hi PyMC3 devs! I&#39;ve been using PyMC3 for the past few months, and I thought you all might like to know about this PyMC3 tutorial I&#39;m giving at PyData Chicago: <a href=\"http://pydata.org/chicago2016/schedule/presentation/6/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://pydata.org/chicago2016/schedule/presentation/6/</a>",
  "id": "579905a58fb4820a46694ee2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-27T19:04:05.003Z",
  "text": "Hi PyMC3 devs! I've been using PyMC3 for the past few months, and I thought you all might like to know about this PyMC3 tutorial I'm giving at PyData Chicago: http://pydata.org/chicago2016/schedule/presentation/6/",
  "unread": false,
  "urls": [
   {
    "url": "http://pydata.org/chicago2016/schedule/presentation/6/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Very cool, thanks for letting us know, and good luck with the tutorial!",
  "id": "579906eb00c8ebdd0e290ce0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-27T19:09:31.223Z",
  "text": "Very cool, thanks for letting us know, and good luck with the tutorial!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "I&#39;m going to be in Chicago next week, and will be talking about PyMC at Civis on Monday.",
  "id": "579907097c9324e20e037f9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-27T19:10:01.597Z",
  "text": "I'm going to be in Chicago next week, and will be talking about PyMC at Civis on Monday.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that looks great Nicole, I&#39;m sure you&#39;ll get a great turn-out",
  "id": "57991d7700c8ebdd0e294d46",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-27T20:45:43.133Z",
  "text": "that looks great Nicole, I'm sure you'll get a great turn-out",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "Hello. I&#39;ve been reading about, and trying out some sample code for pymc. So far I&#39;ve seen it work with regression. What would be a good way to get coefficients and eventually a prediction for a distribution like this: <a href=\"http://i.imgur.com/WQfxkxx.png\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://i.imgur.com/WQfxkxx.png</a>",
  "id": "5799668837c95e2446bbf278",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-28T01:57:28.927Z",
  "text": "Hello. I've been reading about, and trying out some sample code for pymc. So far I've seen it work with regression. What would be a good way to get coefficients and eventually a prediction for a distribution like this: http://i.imgur.com/WQfxkxx.png\n",
  "unread": false,
  "urls": [
   {
    "url": "http://i.imgur.com/WQfxkxx.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "I&#39;m thinking it&#39;s not possible, which is fine.",
  "id": "579966ffd155b0294e100408",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-28T01:59:27.625Z",
  "text": "I'm thinking it's not possible, which is fine.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-28T02:02:29.677Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "So you can see the y variable has my function. I then create some data and plot it to get the image above ^<br>Then I try take the x,y data and convert to a data frame and run pymc glm on it.<pre><code>import numpy as np  \n\n#### <span class=\"operator\"><span class=\"keyword\">show</span> original <span class=\"keyword\">function</span>\nx = np.linspace(-<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">200</span>) # linearly spaced numbers, <span class=\"built_in\">array</span> <span class=\"keyword\">of</span> evenly spaced numbers\n# <span class=\"keyword\">function</span>:\ny = np.<span class=\"keyword\">exp</span>((-<span class=\"number\">1</span>/<span class=\"number\">2</span>) * x**<span class=\"number\">2</span>) * ((<span class=\"number\">4</span> * np.<span class=\"keyword\">sin</span>(<span class=\"number\">6</span>*x) * np.<span class=\"keyword\">sin</span>(<span class=\"number\">6</span>*x)) + (<span class=\"number\">3</span> * np.<span class=\"keyword\">cos</span>(x) * np.<span class=\"keyword\">cos</span>(x)) * (np.<span class=\"keyword\">sin</span>(<span class=\"number\">4</span>*x) * np.<span class=\"keyword\">sin</span>(<span class=\"number\">4</span>*x)) + <span class=\"number\">1</span>) # <span class=\"string\">'Estrada function'</span>\n\nimport pylab\npx,= pylab.plot(x,y)\npy, = pylab.plot(x,y,<span class=\"string\">'co'</span>)\npylab.legend([px,py],[<span class=\"string\">\"Estrada function\"</span>,<span class=\"string\">\"(x,y) plots\"</span>], loc=<span class=\"number\">1</span>)\npylab.<span class=\"keyword\">show</span>()\n\n# <span class=\"keyword\">convert</span> arrays <span class=\"keyword\">to</span> pandas <span class=\"keyword\">data</span> frame\nimport matplotlib.pyplot <span class=\"keyword\">as</span> plt\nimport pandas <span class=\"keyword\">as</span> pd\ndf = pd.DataFrame({<span class=\"string\">'x'</span>:x,<span class=\"string\">'y'</span>:y})\ndf.plot(<span class=\"string\">'x'</span>,<span class=\"string\">'y'</span>, kind = <span class=\"string\">'scatter'</span>)\nplt.<span class=\"keyword\">show</span>()\n\n############ bayesian mcmc <span class=\"keyword\">using</span> glm\n<span class=\"keyword\">from</span> pymc3 import Model, Normal, HalfNormal, glm, find_MAP, NUTS, sample, traceplot, summary\n\n<span class=\"keyword\">with</span> Model() <span class=\"keyword\">as</span> model:  \n    glm.glm(<span class=\"string\">'y ~ x'</span>, df)\n    <span class=\"keyword\">start</span> = find_MAP()\n    step = NUTS(scaling=<span class=\"keyword\">start</span>)\n    trace = sample(<span class=\"number\">1000</span>, step, <span class=\"keyword\">start</span>=<span class=\"keyword\">start</span>)\n\nsummary(trace)    \ntraceplot(trace)  \nplt.<span class=\"keyword\">show</span>()</span></code></pre>",
  "id": "5799671dd155b0294e100425",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-28T01:59:57.432Z",
  "text": "So you can see the y variable has my function. I then create some data and plot it to get the image above ^\nThen I try take the x,y data and convert to a data frame and run pymc glm on it.\n```\nimport numpy as np  \n\n#### show original function\nx = np.linspace(-2,2,200) # linearly spaced numbers, array of evenly spaced numbers\n# function:\ny = np.exp((-1/2) * x**2) * ((4 * np.sin(6*x) * np.sin(6*x)) + (3 * np.cos(x) * np.cos(x)) * (np.sin(4*x) * np.sin(4*x)) + 1) # 'Estrada function'\n\nimport pylab\npx,= pylab.plot(x,y)\npy, = pylab.plot(x,y,'co')\npylab.legend([px,py],[\"Estrada function\",\"(x,y) plots\"], loc=1)\npylab.show()\n\n# convert arrays to pandas data frame\nimport matplotlib.pyplot as plt\nimport pandas as pd\ndf = pd.DataFrame({'x':x,'y':y})\ndf.plot('x','y', kind = 'scatter')\nplt.show()\n\n############ bayesian mcmc using glm\nfrom pymc3 import Model, Normal, HalfNormal, glm, find_MAP, NUTS, sample, traceplot, summary\n\nwith Model() as model:  \n    glm.glm('y ~ x', df)\n    start = find_MAP()\n    step = NUTS(scaling=start)\n    trace = sample(1000, step, start=start)\n\nsummary(trace)    \ntraceplot(trace)  \nplt.show()\n```",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "<pre><code>Applied <span class=\"command\">log</span>-transform <span class=\"keyword\">to</span> sd <span class=\"keyword\">and</span> added transformed sd_log <span class=\"keyword\">to</span> model.\n[<span class=\"comment\">-----------------62%---               ] 625 of 1000 complete in 0.5 sec</span>\n[<span class=\"comment\">-----------------100%-----------------] 1000 of 1000 complete in 0.8 sec</span>\n\nIntercept:\n\n  Mean             SD               MC Error         <span class=\"number\">95</span>% HPD interval\n  <span class=\"comment\">-------------------------------------------------------------------</span>\n\n  <span class=\"number\">1.765</span>            <span class=\"number\">0.137</span>            <span class=\"number\">0.004</span>            [<span class=\"number\">1.491</span>, <span class=\"number\">2.012</span>]\n\n  Posterior quantiles:\n  <span class=\"number\">2.5</span>            <span class=\"number\">25</span>             <span class=\"number\">50</span>             <span class=\"number\">75</span>             <span class=\"number\">97.5</span>\n  |<span class=\"comment\">--------------|==============|==============|--------------|</span>\n\n  <span class=\"number\">1.492</span>          <span class=\"number\">1.666</span>          <span class=\"number\">1.766</span>          <span class=\"number\">1.861</span>          <span class=\"number\">2.020</span>\n\n\nx:\n\n  Mean             SD               MC Error         <span class=\"number\">95</span>% HPD interval\n  <span class=\"comment\">-------------------------------------------------------------------</span>\n\n  -<span class=\"number\">0.008</span>           <span class=\"number\">0.119</span>            <span class=\"number\">0.004</span>            [-<span class=\"number\">0.239</span>, <span class=\"number\">0.226</span>]\n\n  Posterior quantiles:\n  <span class=\"number\">2.5</span>            <span class=\"number\">25</span>             <span class=\"number\">50</span>             <span class=\"number\">75</span>             <span class=\"number\">97.5</span>\n  |<span class=\"comment\">--------------|==============|==============|--------------|</span>\n\n  -<span class=\"number\">0.260</span>         -<span class=\"number\">0.087</span>         <span class=\"number\">0.002</span>          <span class=\"number\">0.066</span>          <span class=\"number\">0.216</span>\n\n\nsd:\n\n  Mean             SD               MC Error         <span class=\"number\">95</span>% HPD interval\n  <span class=\"comment\">-------------------------------------------------------------------</span>\n\n  <span class=\"number\">1.884</span>            <span class=\"number\">0.099</span>            <span class=\"number\">0.003</span>            [<span class=\"number\">1.687</span>, <span class=\"number\">2.070</span>]\n\n  Posterior quantiles:\n  <span class=\"number\">2.5</span>            <span class=\"number\">25</span>             <span class=\"number\">50</span>             <span class=\"number\">75</span>             <span class=\"number\">97.5</span>\n  |<span class=\"comment\">--------------|==============|==============|--------------|</span>\n\n  <span class=\"number\">1.711</span>          <span class=\"number\">1.812</span>          <span class=\"number\">1.881</span>          <span class=\"number\">1.949</span>          <span class=\"number\">2.103</span></code></pre>",
  "id": "579967fbad8f331f4e4e55c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-28T02:03:39.740Z",
  "text": "```\nApplied log-transform to sd and added transformed sd_log to model.\n[-----------------62%---               ] 625 of 1000 complete in 0.5 sec\n[-----------------100%-----------------] 1000 of 1000 complete in 0.8 sec\n\nIntercept:\n\n  Mean             SD               MC Error         95% HPD interval\n  -------------------------------------------------------------------\n  \n  1.765            0.137            0.004            [1.491, 2.012]\n\n  Posterior quantiles:\n  2.5            25             50             75             97.5\n  |--------------|==============|==============|--------------|\n  \n  1.492          1.666          1.766          1.861          2.020\n\n\nx:\n\n  Mean             SD               MC Error         95% HPD interval\n  -------------------------------------------------------------------\n  \n  -0.008           0.119            0.004            [-0.239, 0.226]\n\n  Posterior quantiles:\n  2.5            25             50             75             97.5\n  |--------------|==============|==============|--------------|\n  \n  -0.260         -0.087         0.002          0.066          0.216\n\n\nsd:\n\n  Mean             SD               MC Error         95% HPD interval\n  -------------------------------------------------------------------\n  \n  1.884            0.099            0.003            [1.687, 2.070]\n\n  Posterior quantiles:\n  2.5            25             50             75             97.5\n  |--------------|==============|==============|--------------|\n  \n  1.711          1.812          1.881          1.949          2.103\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-28T02:07:23.536Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "So could I use pymc to fit my non-linear function and then get predicted values to later overlay on the actual distribution (the image above)?",
  "id": "579968d3ad8f331f4e4e5711",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-28T02:07:15.911Z",
  "text": "So could I use pymc to fit my non-linear function and then get predicted values to later overlay on the actual distribution (the image above)?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "In sklearn LinearRegression()  there is  &quot;.predict&quot; which gives predicted values.",
  "id": "5799695bd155b0294e10083c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-28T02:09:31.953Z",
  "text": "In sklearn LinearRegression()  there is  \".predict\" which gives predicted values.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asbhatti\" class=\"mention\">@asbhatti</span> I don&#39;t see a problem with using your Estrada function as a likelihood. Just convert it to theano (replacing numpy with theano.tensor) and putting it into a <code>pm.DensityDist()</code> to provide you with a new likelihood (see the help docs on custom distributions for more info)",
  "id": "5799abdc8fb4820a466ab243",
  "issues": [],
  "mentions": [
   {
    "screenName": "asbhatti",
    "userId": "576c8947c2f0db084a1fa138",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-28T06:53:16.342Z",
  "text": "@asbhatti I don't see a problem with using your Estrada function as a likelihood. Just convert it to theano (replacing numpy with theano.tensor) and putting it into a `pm.DensityDist()` to provide you with a new likelihood (see the help docs on custom distributions for more info)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "you couldn&#39;t easily use that with <code>glm</code> though, unless you created a <code>Family</code> class (see the <code>glm</code> submodule code for that, it&#39;s not hard)",
  "id": "5799abf900c8ebdd0e2a6567",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-28T06:53:45.871Z",
  "text": "you couldn't easily use that with `glm` though, unless you created a `Family` class (see the `glm` submodule code for that, it's not hard)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "oh hm, that&#39;s not your likelihood I just noticed",
  "id": "5799ac338fb4820a466ab332",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-28T06:54:43.183Z",
  "text": "oh hm, that's not your likelihood I just noticed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "it&#39;s the link function",
  "id": "5799ac403383eb622149df19",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-28T06:54:56.774Z",
  "text": "it's the link function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "well, you could still use that function to transform x to y and then place priors on the parameters of that Estrada function",
  "id": "5799ac6000c8ebdd0e2a664a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-28T06:55:28.833Z",
  "text": "well, you could still use that function to transform x to y and then place priors on the parameters of that Estrada function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-28T10:14:02.953Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/maedoc",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5189886?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5189886?v=4&s=60",
   "displayName": "marmaduke woodman",
   "gv": "4",
   "id": "54b7a868db8155e6700eb2ec",
   "url": "/maedoc",
   "username": "maedoc",
   "v": 11
  },
  "html": "<p>I have a question, maybe more about theano usage in custom distributions: I&#39;ve manage to implement a univariate linear SDE distribution with a <code>logp</code> function similar to pymc3&#39;s existing time series distributions, but when I try to do a multivariate SDE, </p><pre><code class=\"python\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">logp</span><span class=\"params\">(self, xy)</span>:</span>\n        x, y = xy[:, <span class=\"number\">0</span>], xy[:, <span class=\"number\">1</span>]\n        x_mu = x + self.dt * self.\u03c4 * (x - x**<span class=\"number\">3.0</span>/<span class=\"number\">3.0</span> + y)\n        y_mu = y + self.dt * (<span class=\"number\">1.0</span> / self.\u03c4) * (self.a - x)\n        mu = c_[x_mu, y_mu]\n        <span class=\"keyword\">return</span> tt.sum(pm.Normal.dist(mu=mu, sd=\u03c3<span class=\"number\">2</span> * sqrt(dt)).logp(xy[<span class=\"number\">1</span>:]))</code></pre><p>I&#39;m running into an indexing issue with the theano tensor variable / RV <code>xy</code>which doesn&#39;t have the correct shape information. </p><p>Any suggestions how this should be implemented?</p>",
  "id": "5799daa500c8ebdd0e2ad121",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-28T10:12:53.782Z",
  "text": "I have a question, maybe more about theano usage in custom distributions: I've manage to implement a univariate linear SDE distribution with a `logp` function similar to pymc3's existing time series distributions, but when I try to do a multivariate SDE, \n```python\n    def logp(self, xy):\n        x, y = xy[:, 0], xy[:, 1]\n        x_mu = x + self.dt * self.\u03c4 * (x - x**3.0/3.0 + y)\n        y_mu = y + self.dt * (1.0 / self.\u03c4) * (self.a - x)\n        mu = c_[x_mu, y_mu]\n        return tt.sum(pm.Normal.dist(mu=mu, sd=\u03c32 * sqrt(dt)).logp(xy[1:]))\n```\nI'm running into an indexing issue with the theano tensor variable / RV `xy`which doesn't have the correct shape information. \n\nAny suggestions how this should be implemented?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/maedoc",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5189886?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5189886?v=4&s=60",
   "displayName": "marmaduke woodman",
   "gv": "4",
   "id": "54b7a868db8155e6700eb2ec",
   "url": "/maedoc",
   "username": "maedoc",
   "v": 11
  },
  "html": "oops, stupid question, just needed <code>theano.tensor.stack</code> instead of <code>numpy.c_</code>",
  "id": "5799dede93148c6b21e53949",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-28T10:30:54.084Z",
  "text": "oops, stupid question, just needed `theano.tensor.stack` instead of `numpy.c_`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "glad it&#39;s working",
  "id": "5799e0148fb4820a466b2ae9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-28T10:36:04.587Z",
  "text": "glad it's working",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "we&#39;d love to have support for SDEs, considering a pull request?",
  "id": "5799e02893148c6b21e53cb4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-28T10:36:24.807Z",
  "text": "we'd love to have support for SDEs, considering a pull request?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span>  I&#39;m not sure what you mean by &quot;oh hm, that&#39;s not your likelihood I just noticed<br>it&#39;s the link function&quot;. Am I doing something wrong here?<br>I will take a look at the docs for a custom distribution. Hopefully there is a straightforward example?",
  "id": "5799e2e67c9324e20e0553bf",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-28T10:48:06.974Z",
  "text": "@twiecki  I'm not sure what you mean by \"oh hm, that's not your likelihood I just noticed\nit's the link function\". Am I doing something wrong here? \nI will take a look at the docs for a custom distribution. Hopefully there is a straightforward example?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "you can just do <code>obs = pm.Normal(&#39;obs&#39;, mu=Estrada(x), sd=sigma**2, obs=y)</code>",
  "id": "5799e3243383eb62214a5b35",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-28T10:49:08.549Z",
  "text": "you can just do `obs = pm.Normal('obs', mu=Estrada(x), sd=sigma**2, obs=y)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "where Estrada is your (theano) estrada function",
  "id": "5799e32d00c8ebdd0e2ae3a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-28T10:49:17.344Z",
  "text": "where Estrada is your (theano) estrada function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-28T11:00:02.097Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/maedoc",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5189886?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5189886?v=4&s=60",
   "displayName": "marmaduke woodman",
   "gv": "4",
   "id": "54b7a868db8155e6700eb2ec",
   "url": "/maedoc",
   "username": "maedoc",
   "v": 11
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> yep I wanted to send a PR for an Euler-Maruyama scheme, just need clean the code up; I was mainly stuck on how to handle the multivariate case",
  "id": "5799e5957c9324e20e055914",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-28T10:59:33.517Z",
  "text": "@twiecki yep I wanted to send a PR for an Euler-Maruyama scheme, just need clean the code up; I was mainly stuck on how to handle the multivariate case",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "sweet",
  "id": "579a0ab07c9324e20e05b4ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-28T13:37:52.459Z",
  "text": "sweet",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-29T01:56:19.328Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "",
  "id": "579ab76d98ae54636210c7bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-29T01:54:53.639Z",
  "text": "",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-07-29T02:15:45.538Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> ok! I see now in the docs what you&#39;re talking about. Previously I was using &quot;Bayesian Methods for Hackers&quot;, which is quite good, esp. for those new to Bayesian stats. Anyways...this is what I have now:</p><pre><code>def <span class=\"function\">Estrada</span>(x)<span class=\"value\">:\n    <span class=\"string\">\"Estrada function (just something I made up)\"</span>\n    y = np.<span class=\"function\">exp</span>((-<span class=\"number\">1</span>/<span class=\"number\">2</span>) * x**<span class=\"number\">2</span>) * ((<span class=\"number\">4</span> * np.<span class=\"function\">sin</span>(<span class=\"number\">6</span>*x) * np.<span class=\"function\">sin</span>(<span class=\"number\">6</span>*x)) + (<span class=\"number\">3</span> * np.<span class=\"function\">cos</span>(x) * np.<span class=\"function\">cos</span>(x)) * (np.<span class=\"function\">sin</span>(<span class=\"number\">4</span>*x) * np.<span class=\"function\">sin</span>(<span class=\"number\">4</span>*x)) + <span class=\"number\">1</span>) # <span class=\"string\">'Estrada function'</span>\n    return y\n\nregression_model = pymc.<span class=\"function\">Model</span>()  \nwith regression_model:     \n    # priors for unknown model parameters\n    alpha = pymc.<span class=\"function\">Normal</span>(<span class=\"string\">'alpha'</span>, mu=<span class=\"number\">0</span>, sd=<span class=\"number\">10</span>)\n    beta = pymc.<span class=\"function\">Normal</span>(<span class=\"string\">'beta'</span>, mu=<span class=\"number\">0</span>, sd=<span class=\"number\">10</span>, shape=<span class=\"number\">2</span>)\n    sigma = pymc.<span class=\"function\">HalfNormal</span>(<span class=\"string\">'sigma'</span>, sd=<span class=\"number\">1</span>)\n\n    # likelihood (sampling distribution) of observations\n    y_obs = pymc.<span class=\"function\">Normal</span>(<span class=\"string\">'y_obs'</span>, mu=<span class=\"function\">Estrada</span>(x), sd=sigma**<span class=\"number\">2</span>, observed=y)\n\n    step = pymc.<span class=\"function\">Metropolis</span>()\n    trace = pymc.<span class=\"function\">sample</span>(<span class=\"number\">1000</span>, step)\n\npymc.<span class=\"function\">summary</span>(trace)    \npymc.<span class=\"function\">traceplot</span>(trace)\n\nplt.<span class=\"function\">show</span>()</span></code></pre><p>And the output:</p><pre><code>alpha:\n\n  Mean             SD               MC Error         95% HPD interval\n  -<span class=\"ruby\">------------------------------------------------------------------\n</span>\n  -<span class=\"ruby\"><span class=\"number\">0</span>.<span class=\"number\">485</span>           <span class=\"number\">9.955</span>            <span class=\"number\">0</span>.<span class=\"number\">630</span>            [-<span class=\"number\">18.180</span>, <span class=\"number\">18.351</span>]\n</span>\n  Posterior quantiles:\n  2.5            25             50             75             97.5\n  |--------------|==============|==============|--------------|\n\n  -<span class=\"ruby\"><span class=\"number\">19.944</span>        -<span class=\"number\">6.852</span>         -<span class=\"number\">0</span>.<span class=\"number\">939</span>         <span class=\"number\">6.586</span>          <span class=\"number\">18.346</span>\n</span>\n\nbeta:\n\n  Mean             SD               MC Error         95% HPD interval\n  -<span class=\"ruby\">------------------------------------------------------------------\n</span>\n  1.074            9.458            0.661            [-19.128, 17.907]\n  1.084            9.792            0.726            [-16.095, 21.525]\n\n  Posterior quantiles:\n  2.5            25             50             75             97.5\n  |--------------|==============|==============|--------------|\n\n  -<span class=\"ruby\"><span class=\"number\">19.128</span>        -<span class=\"number\">4.907</span>         <span class=\"number\">1.536</span>          <span class=\"number\">7.343</span>          <span class=\"number\">17.907</span>\n</span>  -<span class=\"ruby\"><span class=\"number\">17.183</span>        -<span class=\"number\">5.776</span>         <span class=\"number\">1.458</span>          <span class=\"number\">7.767</span>          <span class=\"number\">21.525</span>\n</span>\n\nsigma:\n\n  Mean             SD               MC Error         95% HPD interval\n  -<span class=\"ruby\">------------------------------------------------------------------\n</span>\n  0.001            0.026            0.001            [0.000, 0.000]\n\n  Posterior quantiles:\n  2.5            25             50             75             97.5\n  |--------------|==============|==============|--------------|\n\n  0.000          0.000          0.000          0.000          0.000</code></pre>",
  "id": "579abc1c8df57475625fe81e",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-07-29T02:14:52.816Z",
  "text": "@twiecki ok! I see now in the docs what you're talking about. Previously I was using \"Bayesian Methods for Hackers\", which is quite good, esp. for those new to Bayesian stats. Anyways...this is what I have now:\n\n```\ndef Estrada(x):\n    \"Estrada function (just something I made up)\"\n    y = np.exp((-1/2) * x**2) * ((4 * np.sin(6*x) * np.sin(6*x)) + (3 * np.cos(x) * np.cos(x)) * (np.sin(4*x) * np.sin(4*x)) + 1) # 'Estrada function'\n    return y\n\nregression_model = pymc.Model()  \nwith regression_model:     \n    # priors for unknown model parameters\n    alpha = pymc.Normal('alpha', mu=0, sd=10)\n    beta = pymc.Normal('beta', mu=0, sd=10, shape=2)\n    sigma = pymc.HalfNormal('sigma', sd=1)\n    \n    # likelihood (sampling distribution) of observations\n    y_obs = pymc.Normal('y_obs', mu=Estrada(x), sd=sigma**2, observed=y)\n    \n    step = pymc.Metropolis()\n    trace = pymc.sample(1000, step)\n\npymc.summary(trace)    \npymc.traceplot(trace)\n  \nplt.show()    \n```\nAnd the output:\n```\nalpha:\n\n  Mean             SD               MC Error         95% HPD interval\n  -------------------------------------------------------------------\n  \n  -0.485           9.955            0.630            [-18.180, 18.351]\n\n  Posterior quantiles:\n  2.5            25             50             75             97.5\n  |--------------|==============|==============|--------------|\n  \n  -19.944        -6.852         -0.939         6.586          18.346\n\n\nbeta:\n\n  Mean             SD               MC Error         95% HPD interval\n  -------------------------------------------------------------------\n  \n  1.074            9.458            0.661            [-19.128, 17.907]\n  1.084            9.792            0.726            [-16.095, 21.525]\n\n  Posterior quantiles:\n  2.5            25             50             75             97.5\n  |--------------|==============|==============|--------------|\n  \n  -19.128        -4.907         1.536          7.343          17.907\n  -17.183        -5.776         1.458          7.767          21.525\n\n\nsigma:\n\n  Mean             SD               MC Error         95% HPD interval\n  -------------------------------------------------------------------\n  \n  0.001            0.026            0.001            [0.000, 0.000]\n\n  Posterior quantiles:\n  2.5            25             50             75             97.5\n  |--------------|==============|==============|--------------|\n  \n  0.000          0.000          0.000          0.000          0.000\n```\n\n\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "<a href=\"https://files.gitter.im/pymc-devs/pymc/figure_1.png\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/pymc-devs/pymc/thumb/figure_1.png\" alt=\"figure_1.png\" rel=\"nofollow\"></a>",
  "id": "579abc628df57475625fe87e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-29T02:16:02.072Z",
  "text": "[![figure_1.png](https://files.gitter.im/pymc-devs/pymc/thumb/figure_1.png)](https://files.gitter.im/pymc-devs/pymc/figure_1.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/thumb/figure_1.png"
   },
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/figure_1.png"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2016-07-29T02:17:10.807Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "<p>So all of that is the output^<br>Now, I&#39;m trying to plot the predicted results from the model to check how well it fits. This is fairly common using linear regression in sci kit as I&#39;m sure you know. As you can see I create an x and y from the orig function and graph it.  I think I want to keep x, but use the prediction from a new y.</p><pre><code>def Estrada(x):\n    <span class=\"string\">\"Estrada function\"</span>\n    y = np.exp((-1/2) <span class=\"keyword\">*</span> x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2) <span class=\"keyword\">*</span> ((4 <span class=\"keyword\">*</span> np.sin(6<span class=\"keyword\">*</span>x) <span class=\"keyword\">*</span> np.sin(6<span class=\"keyword\">*</span>x)) + (3 <span class=\"keyword\">*</span> np.cos(x) <span class=\"keyword\">*</span> np.cos(x)) <span class=\"keyword\">*</span> (np.sin(4<span class=\"keyword\">*</span>x) <span class=\"keyword\">*</span> np.sin(4<span class=\"keyword\">*</span>x)) + 1) <span class=\"comment\"># 'Estrada function'</span>\n    return y\n\n<span class=\"comment\">#### show original function</span>\nx = np.linspace(-2,2,200) <span class=\"comment\"># linearly spaced numbers, array of evenly spaced numbers</span>\ny = Estrada(x)  \n<span class=\"comment\">#plot code goes here...</span></code></pre><p>To get the graph that I want, which is what the model is able to predict, should I somehow use the trace variable?<br>Trying to plot x and trace will not work of course, since the dimensions are different. I can&#39;t find a good example to help. I skimmed through Chapter 7:  Model checking and diagnostics and it doesn&#39;t have what I want.</p>",
  "id": "579abc8698ae54636210cf66",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-29T02:16:38.803Z",
  "text": "So all of that is the output^\nNow, I'm trying to plot the predicted results from the model to check how well it fits. This is fairly common using linear regression in sci kit as I'm sure you know. As you can see I create an x and y from the orig function and graph it.  I think I want to keep x, but use the prediction from a new y.\n```\ndef Estrada(x):\n    \"Estrada function\"\n    y = np.exp((-1/2) * x**2) * ((4 * np.sin(6*x) * np.sin(6*x)) + (3 * np.cos(x) * np.cos(x)) * (np.sin(4*x) * np.sin(4*x)) + 1) # 'Estrada function'\n    return y\n\n#### show original function\nx = np.linspace(-2,2,200) # linearly spaced numbers, array of evenly spaced numbers\ny = Estrada(x)  \n#plot code goes here...\n```\nTo get the graph that I want, which is what the model is able to predict, should I somehow use the trace variable?\nTrying to plot x and trace will not work of course, since the dimensions are different. I can't find a good example to help. I skimmed through Chapter 7:  Model checking and diagnostics and it doesn't have what I want.\n\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "I need to use something like <code>trace[&#39;sigma&#39;].T</code>",
  "id": "579ac4c5a8a477b5158245bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-29T02:51:49.514Z",
  "text": "I need to use something like ```  trace['sigma'].T```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yes, you should use the trace and do a &quot;posterior predictive check&quot; <a href=\"http://pymc-devs.github.io/pymc3/notebooks/posterior_predictive.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://pymc-devs.github.io/pymc3/notebooks/posterior_predictive.html</a>",
  "id": "579afbf74536c1f33fd5ed27",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-29T06:47:19.797Z",
  "text": "yes, you should use the trace and do a \"posterior predictive check\" http://pymc-devs.github.io/pymc3/notebooks/posterior_predictive.html",
  "unread": false,
  "urls": [
   {
    "url": "http://pymc-devs.github.io/pymc3/notebooks/posterior_predictive.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I&#39;m actually surprised that function works, usually you&#39;d have to replace <code>np.</code> with <code>theano.tensor</code>",
  "id": "579afc188df5747562605730",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-29T06:47:52.131Z",
  "text": "I'm actually surprised that function works, usually you'd have to replace `np.` with `theano.tensor`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-29T10:11:17.061Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> ok thanks. So now I&#39;m trying this:</p><pre><code>predictors_oos = np<span class=\"class\">.random</span><span class=\"class\">.normal</span>(size=<span class=\"number\">50</span>)\noutcomes_oos = np<span class=\"class\">.random</span><span class=\"class\">.binomial</span>(<span class=\"number\">1</span>, <span class=\"function\"><span class=\"title\">Estrada</span><span class=\"params\">(predictors_oos)</span></span>)\nppc = pymc.<span class=\"function\"><span class=\"title\">sample_ppc</span><span class=\"params\">(trace, samples=<span class=\"number\">500</span>, model=regression_model, size=<span class=\"number\">100</span>)</span></span>\n\nplt.<span class=\"function\"><span class=\"title\">plot</span><span class=\"params\">(predictors_oos,outcomes_oos)</span></span>\nplt.<span class=\"function\"><span class=\"title\">show</span><span class=\"params\">()</span></span></code></pre><p>And I&#39;m getting:</p><pre><code>Applied log-<span class=\"attribute\">transform</span> to sigma and added transformed sigma_log to model.\n[-----------------<span class=\"number\">100%</span>-----------------] <span class=\"number\">20</span> of <span class=\"number\">20</span> complete <span class=\"keyword\">in</span> <span class=\"number\">0.0</span> sec\nTraceback (most recent call last):\n  File <span class=\"string\">\"estrada_function.py\"</span>, line <span class=\"number\">52</span>, <span class=\"keyword\">in</span> &lt;module&gt;\n    outcomes_oos = np<span class=\"class\">.random</span><span class=\"class\">.binomial</span>(<span class=\"number\">1</span>, <span class=\"function\"><span class=\"title\">Estrada</span><span class=\"params\">(predictors_oos)</span></span>)\n  File <span class=\"string\">\"mtrand.pyx\"</span>, line <span class=\"number\">3521</span>, <span class=\"keyword\">in</span> mtrand<span class=\"class\">.RandomState</span><span class=\"class\">.binomial</span> (numpy/random/mtrand/mtrand<span class=\"class\">.c</span>:<span class=\"number\">17278</span>)\nValueError: <span class=\"tag\">p</span> &gt; <span class=\"number\">1</span></code></pre>",
  "id": "579b2ba53eb00fbd152227ee",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-29T10:10:45.463Z",
  "text": "@twiecki ok thanks. So now I'm trying this:\n```\npredictors_oos = np.random.normal(size=50)\noutcomes_oos = np.random.binomial(1, Estrada(predictors_oos))\nppc = pymc.sample_ppc(trace, samples=500, model=regression_model, size=100)\n\nplt.plot(predictors_oos,outcomes_oos)\nplt.show()\n```\nAnd I'm getting:\n```\nApplied log-transform to sigma and added transformed sigma_log to model.\n[-----------------100%-----------------] 20 of 20 complete in 0.0 sec\nTraceback (most recent call last):\n  File \"estrada_function.py\", line 52, in <module>\n    outcomes_oos = np.random.binomial(1, Estrada(predictors_oos))\n  File \"mtrand.pyx\", line 3521, in mtrand.RandomState.binomial (numpy/random/mtrand/mtrand.c:17278)\nValueError: p > 1\n```\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that error is not in pymc3 code",
  "id": "579b2c31a8a477b515830f09",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-29T10:13:05.361Z",
  "text": "that error is not in pymc3 code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "Maybe I should switch to theano as you mentioned",
  "id": "579b2cdcac80b5ea3f15ff86",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-29T10:15:56.205Z",
  "text": "Maybe I should switch to theano as you mentioned",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that&#39;s unrelated, your outcomes_oos line is wrong",
  "id": "579b2cf31d6bf8244e2bbddb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-29T10:16:19.412Z",
  "text": "that's unrelated, your outcomes_oos line is wrong",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "is that because of <code>binomial</code> ?",
  "id": "579b2da38df574756260c48e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-29T10:19:15.743Z",
  "text": "is that because of ```binomial``` ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yes, that&#39;s what the traceback says",
  "id": "579b2dc08df574756260c4b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-29T10:19:44.160Z",
  "text": "yes, that's what the traceback says",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "oh right..and the probabilities all add up to &gt; 1 (the error)",
  "id": "579b2de7ac80b5ea3f160179",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-29T10:20:23.551Z",
  "text": "oh right..and the probabilities all add up to > 1 (the error)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "Would it better to use a normal? This is what I get as scatterplot, overlaid with the orig function:<br><a href=\"http://i.imgur.com/OUdFMwk.png\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://i.imgur.com/OUdFMwk.png</a>",
  "id": "579b2eea4536c1f33fd6575a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-29T10:24:42.309Z",
  "text": "Would it better to use a normal? This is what I get as scatterplot, overlaid with the orig function:\nhttp://i.imgur.com/OUdFMwk.png",
  "unread": false,
  "urls": [
   {
    "url": "http://i.imgur.com/OUdFMwk.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "Blue dots are <code>plt.scatter(predictors_oos,outcomes_oos)</code>",
  "id": "579b2f014536c1f33fd65799",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-07-29T10:25:05.590Z",
  "text": "Blue dots are ```plt.scatter(predictors_oos,outcomes_oos)```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I&#39;m not sure what you&#39;re trying to do. you should compare <code>y</code> to the output of the PPC",
  "id": "579b2f271d6bf8244e2bc219",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-29T10:25:43.134Z",
  "text": "I'm not sure what you're trying to do. you should compare `y` to the output of the PPC",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "I&#39;m trying to make a prediction over the interval of -2,2 and graph it. I want to see how well the prediction did against a graph of this:<pre><code>x = np.linspace(-<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">20</span>) # linearly spaced numbers, <span class=\"keyword\">array</span> <span class=\"keyword\">of</span> evenly spaced numbers\ny = Estrada(x)</code></pre>",
  "id": "579b2fe398ae54636211ac4d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-29T10:28:51.636Z",
  "text": "I'm trying to make a prediction over the interval of -2,2 and graph it. I want to see how well the prediction did against a graph of this:\n```\nx = np.linspace(-2,2,20) # linearly spaced numbers, array of evenly spaced numbers\ny = Estrada(x)  \n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-29T17:34:49.958Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "So I guess what I&#39;m trying to do is limit the PPC to a range of x. So x is between -2 and 2. I can then plot  the x (that is inbetween -2 and 2) and ppc.<pre><code>ppc = pymc.<span class=\"function\"><span class=\"title\">sample_ppc</span><span class=\"params\">(trace, samples=<span class=\"number\">500</span>, model=regression_model, size=<span class=\"number\">100</span>)</span></span></code></pre>",
  "id": "579b939579f759713751ac98",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-07-29T17:34:13.964Z",
  "text": "So I guess what I'm trying to do is limit the PPC to a range of x. So x is between -2 and 2. I can then plot  the x (that is inbetween -2 and 2) and ppc.\n```\nppc = pymc.sample_ppc(trace, samples=500, model=regression_model, size=100)\n```\n\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/maedoc",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5189886?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5189886?v=4&s=60",
   "displayName": "marmaduke woodman",
   "gv": "4",
   "id": "54b7a868db8155e6700eb2ec",
   "url": "/maedoc",
   "username": "maedoc",
   "v": 11
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> re: Euler-Maruyama for SDE, an API question: do you prefer a style where user subclasses and provides drift &amp; diffusion functions as method, or instead have them passed as functions to the E-M class <code>__init__</code>method, as with the other distributions?",
  "id": "579c6ecb7fd9f73e16ec1b58",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-30T09:09:31.024Z",
  "text": "@twiecki re: Euler-Maruyama for SDE, an API question: do you prefer a style where user subclasses and provides drift & diffusion functions as method, or instead have them passed as functions to the E-M class `__init__`method, as with the other distributions?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/maedoc",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5189886?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5189886?v=4&s=60",
   "displayName": "marmaduke woodman",
   "gv": "4",
   "id": "54b7a868db8155e6700eb2ec",
   "url": "/maedoc",
   "username": "maedoc",
   "v": 11
  },
  "html": "The latter forces the user to create a closure if their drift/diffusion functions have parameters.. which might be a little awkward in the context manager style of model construction.",
  "id": "579c6f139639024416a85c6e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-30T09:10:43.767Z",
  "text": "The latter forces the user to create a closure if their drift/diffusion functions have parameters.. which might be a little awkward in the context manager style of model construction.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I see, yeah I&#39;d prefer the latter but if it&#39;s awkward I think a baseclass is fine",
  "id": "579c87faf1da4f376e1a49c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-30T10:56:58.824Z",
  "text": "I see, yeah I'd prefer the latter but if it's awkward I think a baseclass is fine",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/maedoc",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5189886?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5189886?v=4&s=60",
   "displayName": "marmaduke woodman",
   "gv": "4",
   "id": "54b7a868db8155e6700eb2ec",
   "url": "/maedoc",
   "username": "maedoc",
   "v": 11
  },
  "html": "<p>a compromise would be an explicit arg for SDE parameters, e.g.</p><pre><code class=\"python\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SDE</span><span class=\"params\">(pm.Continuous)</span>:</span>\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, a, b, dt, sde_pars, *args, **kwds)</span>:</span>\n        ...\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">logp</span><span class=\"params\">(self, x)</span>:</span>\n        x_t = x[:-<span class=\"number\">1</span>]\n        mu = self.a(x_t, *self.sde_pars)\n        ....\n\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">a</span><span class=\"params\">(x, lam)</span>:</span>\n    <span class=\"keyword\">return</span> lam * x\n\n<span class=\"keyword\">with</span> pm.Model <span class=\"keyword\">as</span> model:\n    lam = pm.Flat(<span class=\"string\">'lam'</span>)\n    sde = SDE(<span class=\"string\">'sde'</span>, a, b, dt, (lam, ), ....)</code></pre><p>Look alright? A second question, are there are any docs on understanding the <code>testval</code>arg? I didn&#39;t understand this very well from the examples what and why this is needed</p>",
  "id": "579c89e89639024416a88bcb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-30T11:05:12.593Z",
  "text": "a compromise would be an explicit arg for SDE parameters, e.g.\n```python\nclass SDE(pm.Continuous):\n    def __init__(self, a, b, dt, sde_pars, *args, **kwds):\n        ...\n    def logp(self, x):\n        x_t = x[:-1]\n        mu = self.a(x_t, *self.sde_pars)\n        ....\n\ndef a(x, lam):\n    return lam * x\n\nwith pm.Model as model:\n    lam = pm.Flat('lam')\n    sde = SDE('sde', a, b, dt, (lam, ), ....)\n```\nLook alright? A second question, are there are any docs on understanding the `testval`arg? I didn't understand this very well from the examples what and why this is needed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yeah that part is a bit odd",
  "id": "579c8b509639024416a88e59",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-30T11:11:12.532Z",
  "text": "yeah that part is a bit odd",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "it&#39;s basically an init-value",
  "id": "579c8b557fd9f73e16ec4af0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-30T11:11:17.974Z",
  "text": "it's basically an init-value",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that is used during creation of the theano compute graph",
  "id": "579c8b629684847b373df25a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-30T11:11:30.243Z",
  "text": "that is used during creation of the theano compute graph",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "but we also default to it as a starting point if you don&#39;t supply one",
  "id": "579c8b6c9639024416a88e7e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-30T11:11:40.950Z",
  "text": "but we also default to it as a starting point if you don't supply one",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that looks pretty good to me",
  "id": "579c8b8c7fd9f73e16ec4c2f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-30T11:12:12.513Z",
  "text": "that looks pretty good to me",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "really important will be a good example NB that explains and demonstrates it",
  "id": "579c8b9acdc68c4904af832a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-30T11:12:26.146Z",
  "text": "really important will be a good example NB that explains and demonstrates it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "along with some simple unittests",
  "id": "579c8ba19684847b373df3a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-30T11:12:33.928Z",
  "text": "along with some simple unittests",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> I&#39;m still having problems getting what I want from the API. Was I able to explain well what I&#39;m trying to do?",
  "id": "579cbfd59684847b373e4888",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-30T14:55:17.299Z",
  "text": "@twiecki I'm still having problems getting what I want from the API. Was I able to explain well what I'm trying to do?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asbhatti\" class=\"mention\">@asbhatti</span> I&#39;m still confused by the model and your approach to PPC. sure that you have the problem completely mapped out?",
  "id": "579cc598e56d2538041b4109",
  "issues": [],
  "mentions": [
   {
    "screenName": "asbhatti",
    "userId": "576c8947c2f0db084a1fa138",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-30T15:19:52.477Z",
  "text": "@asbhatti I'm still confused by the model and your approach to PPC. sure that you have the problem completely mapped out?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "<p>It&#39;s mapped out in my mind :) Let me see if I can explain it better. I do appreciate you taking the time. So in sklearn.linear_model LinearRegression  you re able to do something like (as an example):</p><pre><code>Predicted_price= lm_model.<span class=\"function\"><span class=\"title\">predict</span><span class=\"params\">(X_test)</span></span></code></pre><p>and then plot X_test and Predicted_price as an x,y.<br>I am trying to figure out the analogue in pymc3.  It seems that <code>pymc.sample_ppc</code> will get me the &quot;y&quot;, but I can send it my &quot;x&quot; value, or in my example, &quot;X_test&quot;. Hopefully I am making sense. Unfortunately I have to leave my house and I will return in a few hours.</p>",
  "id": "579cc8cd07d2d2396e2de37a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-07-30T15:33:33.291Z",
  "text": "It's mapped out in my mind :) Let me see if I can explain it better. I do appreciate you taking the time. So in sklearn.linear_model LinearRegression  you re able to do something like (as an example):\n```\nPredicted_price= lm_model.predict(X_test)\n```\nand then plot X_test and Predicted_price as an x,y.\nI am trying to figure out the analogue in pymc3.  It seems that ```pymc.sample_ppc``` will get me the \"y\", but I can send it my \"x\" value, or in my example, \"X_test\". Hopefully I am making sense. Unfortunately I have to leave my house and I will return in a few hours.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "oh I see",
  "id": "579cca1a7fd9f73e16ecb624",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-07-30T15:39:06.421Z",
  "text": "oh I see",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "at the end of the PPC tutorial",
  "id": "579cca21f1da4f376e1ab48a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-07-30T15:39:13.963Z",
  "text": "at the end of the PPC tutorial",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "it shows you can use theano.shared to switch out the x values after sampling",
  "id": "579cca2ee56d2538041b486a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-07-30T15:39:26.070Z",
  "text": "it shows you can use theano.shared to switch out the x values after sampling",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> Awesome, thanks. So I&#39;m looking through that and I tried the same in my code in &quot;custom&quot; distribution. Now I&#39;m getting an <code>IndexError: tuple index out of range</code> error when I call trace. I&#39;m pretty sure I have everything sized ok. Any ideas? I feel like I&#39;m getting further, though.<pre><code><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np  \n<span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt\n<span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns\nnp.random.seed(<span class=\"number\">12345</span>) \n\n\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Estrada</span><span class=\"params\">(x)</span>:</span>\n    <span class=\"string\">\"Estrada function\"</span>\n    y = np.exp((-<span class=\"number\">1</span>/<span class=\"number\">2</span>) * x**<span class=\"number\">2</span>) * ((<span class=\"number\">4</span> * np.sin(<span class=\"number\">6</span>*x) * np.sin(<span class=\"number\">6</span>*x)) + (<span class=\"number\">3</span> * np.cos(x) * np.cos(x)) * (np.sin(<span class=\"number\">4</span>*x) * np.sin(<span class=\"number\">4</span>*x)) + <span class=\"number\">1</span>) <span class=\"comment\"># 'Estrada function'</span>\n    <span class=\"keyword\">return</span> y\n\n<span class=\"comment\"># generate data</span>\nx = np.linspace(-<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">50</span>) <span class=\"comment\"># linearly spaced numbers, array of evenly spaced numbers</span>\ny = Estrada(x)  \n<span class=\"keyword\">print</span> <span class=\"string\">'x='</span>,x\n\n<span class=\"comment\">#### show original function</span>\npx,= plt.plot(x,y)\npy, = plt.plot(x,y,<span class=\"string\">'co'</span>)\nplt.legend([px,py],[<span class=\"string\">\"Estrada function\"</span>,<span class=\"string\">\"(x,y) plots\"</span>], loc=<span class=\"number\">1</span>)\nplt.show()\n\n\n<span class=\"comment\"># convert arrays to pandas data frame</span>\n<span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd\n<span class=\"comment\">#df = pd.DataFrame({'x':x,'y':y})</span>\n<span class=\"comment\">#df.plot('x','y', kind = 'scatter')</span>\n<span class=\"comment\">#plt.show()</span>\n\n\n<span class=\"keyword\">import</span> pymc3 <span class=\"keyword\">as</span> pymc\n<span class=\"keyword\">from</span> scipy <span class=\"keyword\">import</span> optimize\n<span class=\"keyword\">from</span> theano <span class=\"keyword\">import</span> shared\n\npredictors = np.random.normal(size=<span class=\"number\">50</span>)\n<span class=\"comment\"># Turn predictor into a shared var so that we can change it later</span>\npredictors_shared = shared(predictors)\noutcomes = np.random.normal(<span class=\"number\">1</span>, Estrada(predictors))\n<span class=\"keyword\">print</span> <span class=\"string\">'outcomes--&gt;'</span>, outcomes\npredictors_oos = np.random.normal(size=<span class=\"number\">50</span>)\noutcomes_oos = np.random.normal(<span class=\"number\">1</span>, Estrada(predictors_oos))\n\nregression_model = pymc.Model()  \n<span class=\"keyword\">with</span> regression_model:     \n    <span class=\"comment\"># priors for unknown model parameters</span>\n    alpha = pymc.Normal(<span class=\"string\">'alpha'</span>, mu=<span class=\"number\">0</span>, sd=<span class=\"number\">10</span>)\n    beta = pymc.Normal(<span class=\"string\">'beta'</span>, mu=<span class=\"number\">0</span>, sd=<span class=\"number\">10</span>, shape=<span class=\"number\">2</span>)\n    sigma = pymc.HalfNormal(<span class=\"string\">'sigma'</span>, sd=<span class=\"number\">1</span>)\n\n    <span class=\"comment\"># likelihood (sampling distribution) of observations</span>\n    y_obs = pymc.Normal(<span class=\"string\">'y_obs'</span>, mu=Estrada(x), sd=sigma**<span class=\"number\">2</span>, observed=y)\n\n    step = pymc.Metropolis()\n    trace = pymc.sample(<span class=\"number\">50</span>, step)\n\npymc.summary(trace)    <span class=\"comment\"># THIS DOES NOT WORK! </span>\npymc.traceplot(trace)\nplt.show()\n\n<span class=\"comment\"># Changing values here will also change values in the model</span>\npredictors_shared.set_value(predictors_oos)\n\nppc = pymc.sample_ppc(trace, samples=<span class=\"number\">50</span>, model=regression_model, size=<span class=\"number\">50</span>)</code></pre><pre><code>Traceback (most recent <span class=\"operator\"><span class=\"keyword\">call</span> <span class=\"keyword\">last</span>):\n  File <span class=\"string\">\"estrada_function.py\"</span>, line <span class=\"number\">56</span>, <span class=\"keyword\">in</span> &lt;<span class=\"keyword\">module</span>&gt;\n    pymc.summary(trace)    # THIS DOES <span class=\"keyword\">NOT</span> <span class=\"keyword\">WORK</span>! \n  File <span class=\"string\">\"/usr/local/lib/python2.7/dist-packages/pymc3/stats.py\"</span>, line <span class=\"number\">494</span>, <span class=\"keyword\">in</span> summary\n    fh.<span class=\"keyword\">write</span>(stat_summ.<span class=\"keyword\">output</span>(sample))\n  File <span class=\"string\">\"/usr/local/lib/python2.7/dist-packages/pymc3/stats.py\"</span>, line <span class=\"number\">510</span>, <span class=\"keyword\">in</span> <span class=\"keyword\">output</span>\n    <span class=\"keyword\">return</span> <span class=\"string\">'\\n'</span>.<span class=\"keyword\">join</span>(list(self._get_lines(sample))) + <span class=\"string\">'\\n\\n'</span>\n  File <span class=\"string\">\"/usr/local/lib/python2.7/dist-packages/pymc3/stats.py\"</span>, line <span class=\"number\">516</span>, <span class=\"keyword\">in</span> _get_lines\n    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> self._create_value_output(summary_lines):\n  File <span class=\"string\">\"/usr/local/lib/python2.7/dist-packages/pymc3/stats.py\"</span>, line <span class=\"number\">520</span>, <span class=\"keyword\">in</span> _create_value_output\n    <span class=\"keyword\">for</span> <span class=\"keyword\">values</span> <span class=\"keyword\">in</span> <span class=\"keyword\">lines</span>:\n  File <span class=\"string\">\"/usr/local/lib/python2.7/dist-packages/pymc3/stats.py\"</span>, line <span class=\"number\">604</span>, <span class=\"keyword\">in</span> _calculate_stats\n    mces = mc_error(sample, batches)\n  File <span class=\"string\">\"/usr/local/lib/python2.7/dist-packages/pymc3/stats.py\"</span>, line <span class=\"number\">29</span>, <span class=\"keyword\">in</span> wrapped_f\n    <span class=\"keyword\">return</span> f(pymc3_obj, *args, **kwargs)\n  File <span class=\"string\">\"/usr/local/lib/python2.7/dist-packages/pymc3/stats.py\"</span>, line <span class=\"number\">305</span>, <span class=\"keyword\">in</span> mc_error\n    means = np.mean(batched_traces, <span class=\"number\">1</span>)\n  File <span class=\"string\">\"/usr/lib/python2.7/dist-packages/numpy/core/fromnumeric.py\"</span>, line <span class=\"number\">2716</span>, <span class=\"keyword\">in</span> mean\n    out=out, keepdims=keepdims)\n  File <span class=\"string\">\"/usr/lib/python2.7/dist-packages/numpy/core/_methods.py\"</span>, line <span class=\"number\">52</span>, <span class=\"keyword\">in</span> _mean\n    rcount = _count_reduce_items(arr, axis)\n  File <span class=\"string\">\"/usr/lib/python2.7/dist-packages/numpy/core/_methods.py\"</span>, line <span class=\"number\">46</span>, <span class=\"keyword\">in</span> _count_reduce_items\n    items *= arr.shape[ax]\nIndexError: tuple <span class=\"keyword\">index</span> out <span class=\"keyword\">of</span> range</span></code></pre>",
  "id": "579d00059684847b373ec210",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2016-07-30T19:29:09.322Z",
  "text": "@twiecki Awesome, thanks. So I'm looking through that and I tried the same in my code in \"custom\" distribution. Now I'm getting an ```\nIndexError: tuple index out of range``` error when I call trace. I'm pretty sure I have everything sized ok. Any ideas? I feel like I'm getting further, though.\n\n```\nimport numpy as np  \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nnp.random.seed(12345) \n\n\ndef Estrada(x):\n    \"Estrada function\"\n    y = np.exp((-1/2) * x**2) * ((4 * np.sin(6*x) * np.sin(6*x)) + (3 * np.cos(x) * np.cos(x)) * (np.sin(4*x) * np.sin(4*x)) + 1) # 'Estrada function'\n    return y\n\n# generate data\nx = np.linspace(-2,2,50) # linearly spaced numbers, array of evenly spaced numbers\ny = Estrada(x)  \nprint 'x=',x\n\n#### show original function\npx,= plt.plot(x,y)\npy, = plt.plot(x,y,'co')\nplt.legend([px,py],[\"Estrada function\",\"(x,y) plots\"], loc=1)\nplt.show()\n\n\n# convert arrays to pandas data frame\nimport pandas as pd\n#df = pd.DataFrame({'x':x,'y':y})\n#df.plot('x','y', kind = 'scatter')\n#plt.show()\n\n\nimport pymc3 as pymc\nfrom scipy import optimize\nfrom theano import shared\n\npredictors = np.random.normal(size=50)\n# Turn predictor into a shared var so that we can change it later\npredictors_shared = shared(predictors)\noutcomes = np.random.normal(1, Estrada(predictors))\nprint 'outcomes-->', outcomes\npredictors_oos = np.random.normal(size=50)\noutcomes_oos = np.random.normal(1, Estrada(predictors_oos))\n \nregression_model = pymc.Model()  \nwith regression_model:     \n    # priors for unknown model parameters\n    alpha = pymc.Normal('alpha', mu=0, sd=10)\n    beta = pymc.Normal('beta', mu=0, sd=10, shape=2)\n    sigma = pymc.HalfNormal('sigma', sd=1)\n    \n    # likelihood (sampling distribution) of observations\n    y_obs = pymc.Normal('y_obs', mu=Estrada(x), sd=sigma**2, observed=y)\n    \n    step = pymc.Metropolis()\n    trace = pymc.sample(50, step)\n\npymc.summary(trace)    # THIS DOES NOT WORK! \npymc.traceplot(trace)\nplt.show()\n\n# Changing values here will also change values in the model\npredictors_shared.set_value(predictors_oos)\n\nppc = pymc.sample_ppc(trace, samples=50, model=regression_model, size=50)\n```\n\n```\nTraceback (most recent call last):\n  File \"estrada_function.py\", line 56, in <module>\n    pymc.summary(trace)    # THIS DOES NOT WORK! \n  File \"/usr/local/lib/python2.7/dist-packages/pymc3/stats.py\", line 494, in summary\n    fh.write(stat_summ.output(sample))\n  File \"/usr/local/lib/python2.7/dist-packages/pymc3/stats.py\", line 510, in output\n    return '\\n'.join(list(self._get_lines(sample))) + '\\n\\n'\n  File \"/usr/local/lib/python2.7/dist-packages/pymc3/stats.py\", line 516, in _get_lines\n    for line in self._create_value_output(summary_lines):\n  File \"/usr/local/lib/python2.7/dist-packages/pymc3/stats.py\", line 520, in _create_value_output\n    for values in lines:\n  File \"/usr/local/lib/python2.7/dist-packages/pymc3/stats.py\", line 604, in _calculate_stats\n    mces = mc_error(sample, batches)\n  File \"/usr/local/lib/python2.7/dist-packages/pymc3/stats.py\", line 29, in wrapped_f\n    return f(pymc3_obj, *args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/pymc3/stats.py\", line 305, in mc_error\n    means = np.mean(batched_traces, 1)\n  File \"/usr/lib/python2.7/dist-packages/numpy/core/fromnumeric.py\", line 2716, in mean\n    out=out, keepdims=keepdims)\n  File \"/usr/lib/python2.7/dist-packages/numpy/core/_methods.py\", line 52, in _mean\n    rcount = _count_reduce_items(arr, axis)\n  File \"/usr/lib/python2.7/dist-packages/numpy/core/_methods.py\", line 46, in _count_reduce_items\n    items *= arr.shape[ax]\nIndexError: tuple index out of range\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/JWarmenhoven",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7450204?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7450204?v=3&s=60",
   "displayName": "Jordi Warmenhoven",
   "gv": "3",
   "id": "555c4b2715522ed4b3e0a88c",
   "url": "/JWarmenhoven",
   "username": "JWarmenhoven",
   "v": 5
  },
  "html": "I am trying to implement a model from Kruschke&#39;s book, chapter 12. It is about an experiment where subjects are asked to memorize and recall words under 4 different conditions (types of background music). The idea is to see whether the conditions produce different results: compare a model with condition specific parameters with a model with overal parameters. I am not sure I have defined the model correctly . It is not sampling from both model indexes (0 and 1).<br>Am I missing something?<br><a href=\"http://nbviewer.jupyter.org/github/JWarmenhoven/DBDA-python/blob/master/Notebooks/Chapter%2012.ipynb\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://nbviewer.jupyter.org/github/JWarmenhoven/DBDA-python/blob/master/Notebooks/Chapter%2012.ipynb</a>",
  "id": "579fd5f30bd017c16e3391b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2016-08-01T23:06:27.179Z",
  "text": "I am trying to implement a model from Kruschke's book, chapter 12. It is about an experiment where subjects are asked to memorize and recall words under 4 different conditions (types of background music). The idea is to see whether the conditions produce different results: compare a model with condition specific parameters with a model with overal parameters. I am not sure I have defined the model correctly . It is not sampling from both model indexes (0 and 1). \nAm I missing something?\nhttp://nbviewer.jupyter.org/github/JWarmenhoven/DBDA-python/blob/master/Notebooks/Chapter%2012.ipynb\n",
  "unread": false,
  "urls": [
   {
    "url": "http://nbviewer.jupyter.org/github/JWarmenhoven/DBDA-python/blob/master/Notebooks/Chapter%2012.ipynb"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "hello?",
  "id": "57a21d3ee2ff9ec76e53775a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-08-03T16:35:10.872Z",
  "text": "hello?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ericmjl",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=60",
   "displayName": "Eric Ma",
   "gv": "4",
   "id": "553645b415522ed4b3df4dc5",
   "url": "/ericmjl",
   "username": "ericmjl",
   "v": 13
  },
  "html": "hey everybody! just wondering if anybody here has experience with model persistence using pymc3?",
  "id": "57a23d04e2ff9ec76e53d21d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-08-03T18:50:44.108Z",
  "text": "hey everybody! just wondering if anybody here has experience with model persistence using pymc3?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ericmjl",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=60",
   "displayName": "Eric Ma",
   "gv": "4",
   "id": "553645b415522ed4b3df4dc5",
   "url": "/ericmjl",
   "username": "ericmjl",
   "v": 13
  },
  "html": "for example, something i&#39;m thinking of is the ability to save a model spec with posterior probabilities to disk.",
  "id": "57a23d23e2ff9ec76e53d26f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-08-03T18:51:15.091Z",
  "text": "for example, something i'm thinking of is the ability to save a model spec with posterior probabilities to disk.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ericmjl",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=60",
   "displayName": "Eric Ma",
   "gv": "4",
   "id": "553645b415522ed4b3df4dc5",
   "url": "/ericmjl",
   "username": "ericmjl",
   "v": 13
  },
  "html": "and then re-load the model again in a separate context for predictive purposes.",
  "id": "57a23d369e85d3e8268428b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-08-03T18:51:34.350Z",
  "text": "and then re-load the model again in a separate context for predictive purposes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/dadaromeo",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5675732?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5675732?v=3&s=60",
   "displayName": "Dada Romeo",
   "gv": "3",
   "id": "5770f9b3c2f0db084a2020b3",
   "url": "/dadaromeo",
   "username": "dadaromeo",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asbhatti\" class=\"mention\">@asbhatti</span> the ting with predict in sklearn is because the are predefined so the predict method in each model knows how to handle the input data. In pymc3 the models are user defined but given your model specification, you can construct a predict function very straightforwardly. If you use a custom distribution, you need to implement the <code>random</code> method.",
  "id": "57a303acc915a0e426bb71e2",
  "issues": [],
  "mentions": [
   {
    "screenName": "asbhatti",
    "userId": "576c8947c2f0db084a1fa138",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2016-08-04T08:58:20.041Z",
  "text": "@asbhatti the ting with predict in sklearn is because the are predefined so the predict method in each model knows how to handle the input data. In pymc3 the models are user defined but given your model specification, you can construct a predict function very straightforwardly. If you use a custom distribution, you need to implement the `random` method.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"dadaromeo\" class=\"mention\">@dadaromeo</span>  ok thanks. is there a good example of that? ",
  "id": "57a32b1ac915a0e426bbce67",
  "issues": [],
  "mentions": [
   {
    "screenName": "dadaromeo",
    "userId": "5770f9b3c2f0db084a2020b3",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2016-08-04T11:46:34.904Z",
  "text": "@dadaromeo  ok thanks. is there a good example of that? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/dadaromeo",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5675732?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5675732?v=3&s=60",
   "displayName": "Dada Romeo",
   "gv": "3",
   "id": "5770f9b3c2f0db084a2020b3",
   "url": "/dadaromeo",
   "username": "dadaromeo",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asbhatti\" class=\"mention\">@asbhatti</span> It might look something like this <a href=\"https://gist.github.com/dadaromeo/33e581d9e3bcbad83531b4a91a87509f\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/dadaromeo/33e581d9e3bcbad83531b4a91a87509f</a>",
  "id": "57a343d71c2bf6621bbb9b64",
  "issues": [],
  "mentions": [
   {
    "screenName": "asbhatti",
    "userId": "576c8947c2f0db084a1fa138",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2016-08-04T13:32:07.914Z",
  "text": "@asbhatti It might look something like this https://gist.github.com/dadaromeo/33e581d9e3bcbad83531b4a91a87509f",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/dadaromeo/33e581d9e3bcbad83531b4a91a87509f"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/4n00p",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4590808?v=4&s=60",
   "displayName": "-",
   "gv": "4",
   "id": "576c8947c2f0db084a1fa138",
   "url": "/4n00p",
   "username": "4n00p",
   "v": 17
  },
  "html": "ok great. i will look that over and try it out.",
  "id": "57a34e82c915a0e426bc2e2c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2016-08-04T14:17:38.066Z",
  "text": "ok great. i will look that over and try it out.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/jonsedar",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/708325?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/708325?v=3&s=60",
   "displayName": "Jonathan Sedar",
   "gv": "3",
   "id": "54745f8fdb8155e6700d7f39",
   "url": "/jonsedar",
   "username": "jonsedar",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ericmjl\" class=\"mention\">@ericmjl</span> yep, I\u2019ve done that in a recent project, I found it simplest to persist the trained traces and rebuild the model manually for prediction. It (understandably) doesn\u2019t appear possible or even wise to pickle the model itself",
  "id": "57a4cee6857442dc0f566431",
  "issues": [],
  "mentions": [
   {
    "screenName": "ericmjl",
    "userId": "553645b415522ed4b3df4dc5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2016-08-05T17:37:42.306Z",
  "text": "@ericmjl yep, I\u2019ve done that in a recent project, I found it simplest to persist the trained traces and rebuild the model manually for prediction. It (understandably) doesn\u2019t appear possible or even wise to pickle the model itself",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ericmjl",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=60",
   "displayName": "Eric Ma",
   "gv": "4",
   "id": "553645b415522ed4b3df4dc5",
   "url": "/ericmjl",
   "username": "ericmjl",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jonsedar\" class=\"mention\">@jonsedar</span> got it, thanks a lot!",
  "id": "57a4d2cf2f03cf8749ca250b",
  "issues": [],
  "mentions": [
   {
    "screenName": "jonsedar",
    "userId": "54745f8fdb8155e6700d7f39",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2016-08-05T17:54:23.100Z",
  "text": "@jonsedar got it, thanks a lot!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ericmjl",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=60",
   "displayName": "Eric Ma",
   "gv": "4",
   "id": "553645b415522ed4b3df4dc5",
   "url": "/ericmjl",
   "username": "ericmjl",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jonsedar\" class=\"mention\">@jonsedar</span>: a few questions on what you did - I can get persisting the trained traces (pickling?), but how do you use them in the rebuilt model?",
  "id": "57a8836e483751d50f3370b3",
  "issues": [],
  "mentions": [
   {
    "screenName": "jonsedar",
    "userId": "54745f8fdb8155e6700d7f39",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2016-08-08T13:04:46.184Z",
  "text": "@jonsedar: a few questions on what you did - I can get persisting the trained traces (pickling?), but how do you use them in the rebuilt model?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/zjost",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/9660566?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/9660566?v=4&s=60",
   "displayName": "zjost",
   "gv": "4",
   "id": "57a61ec940f3a6eec05e3c3a",
   "url": "/zjost",
   "username": "zjost",
   "v": 2
  },
  "html": "Anyone find a way to do reversible jump MCMC for model selection?",
  "id": "57abbaa5613cc18036786226",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-08-10T23:37:09.235Z",
  "text": "Anyone find a way to do reversible jump MCMC for model selection?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/jordn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1463197?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1463197?v=3&s=60",
   "displayName": "Jordan Burgess",
   "gv": "3",
   "id": "568ab41a16b6c7089cc11e14",
   "url": "/jordn",
   "username": "jordn",
   "v": 1
  },
  "html": "Does PyMC3&#39;s implementation of ADVI perform the mean-field or full rank approximation?",
  "id": "57ac4ddcd7087a017fab9edc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-08-11T10:05:16.109Z",
  "text": "Does PyMC3's implementation of ADVI perform the mean-field or full rank approximation?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/taku-y",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4969395?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4969395?v=3&s=60",
   "displayName": "Taku Yoshioka",
   "gv": "3",
   "id": "57497d60c43b8c6019756ee7",
   "url": "/taku-y",
   "username": "taku-y",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jordn\" class=\"mention\">@jordn</span> Meanfield. I will add more info about advi in docstring. ",
  "id": "57ac4fd116b0696856ac3f2e",
  "issues": [],
  "mentions": [
   {
    "screenName": "jordn",
    "userId": "568ab41a16b6c7089cc11e14",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2016-08-11T10:13:37.240Z",
  "text": "@jordn Meanfield. I will add more info about advi in docstring. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/jordn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1463197?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1463197?v=3&s=60",
   "displayName": "Jordan Burgess",
   "gv": "3",
   "id": "568ab41a16b6c7089cc11e14",
   "url": "/jordn",
   "username": "jordn",
   "v": 1
  },
  "html": "thanks",
  "id": "57ac5360613cc1803679a308",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-08-11T10:28:48.928Z",
  "text": "thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/du-phan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10564525?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10564525?v=3&s=60",
   "displayName": "Du Phan",
   "gv": "3",
   "id": "56e16d3b85d51f252ab81f2d",
   "url": "/du-phan",
   "username": "du-phan",
   "v": 1
  },
  "html": "Hello everybody, I have a small problem when using the function &#39;ppc_sample&#39; with new data for prediction. Sometime (it doesn&#39;t happen every time), the function returns the error <strong>ValueError: scale &lt;= 0</strong>. I see that the parameter lambda of the exponential posterior of some sample is negative... Apparently some data points cause this problem, but I don&#39;t know why ? Can you guy give me some advices ? Thank you! <pre><code>ValueError                                Traceback (most recent call last)\n&lt;ipython-input-<span class=\"number\">146</span>-<span class=\"number\">2</span>a783d23dcdf&gt; <span class=\"keyword\">in</span> &lt;module&gt;()\n     <span class=\"number\">10</span> sector_id_share.set_value(sector_id)\n     <span class=\"number\">11</span> \n---&gt; <span class=\"number\">12</span> ppc = pm.sample_ppc(hm_trace[<span class=\"number\">80000</span>:], model=hierarchical_model, samples=<span class=\"number\">100</span>)\n\n<span class=\"regexp\">/Users/</span>admin<span class=\"regexp\">/anaconda/</span>lib<span class=\"regexp\">/python2.7/</span>site-packages<span class=\"regexp\">/pymc3-3.0-py2.7.egg/</span>pymc3/sampling.pyc <span class=\"keyword\">in</span> sample_ppc(trace, samples, model, vars, size)\n    <span class=\"number\">345</span>         <span class=\"keyword\">for</span> var <span class=\"keyword\">in</span> <span class=\"string\">vars:</span>\n    <span class=\"number\">346</span>             ppc[var.name].append(var.distribution.random(point=param,\n--&gt; <span class=\"number\">347</span>                                                          size=size))\n    <span class=\"number\">348</span> \n    <span class=\"number\">349</span>     <span class=\"keyword\">return</span> {<span class=\"string\">k:</span> np.asarray(v) <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> ppc.items()}\n\n<span class=\"regexp\">/Users/</span>admin<span class=\"regexp\">/anaconda/</span>lib<span class=\"regexp\">/python2.7/</span>site-packages<span class=\"regexp\">/pymc3-3.0-py2.7.egg/</span>pymc3<span class=\"regexp\">/distributions/</span>continuous.py <span class=\"keyword\">in</span> random(self, point, size, repeat)\n    <span class=\"number\">465</span>         <span class=\"keyword\">return</span> generate_samples(np.random.exponential, scale=<span class=\"number\">1.</span>/lam,\n    <span class=\"number\">466</span>                                 dist_shape=self.shape,\n--&gt; <span class=\"number\">467</span>                                 size=size)\n    <span class=\"number\">468</span> \n    <span class=\"number\">469</span>     <span class=\"keyword\">def</span> logp(self, value):\n\n<span class=\"regexp\">/Users/</span>admin<span class=\"regexp\">/anaconda/</span>lib<span class=\"regexp\">/python2.7/</span>site-packages<span class=\"regexp\">/pymc3-3.0-py2.7.egg/</span>pymc3<span class=\"regexp\">/distributions/</span>distribution.pyc <span class=\"keyword\">in</span> generate_samples(generator, *args, **kwargs)\n    <span class=\"number\">329</span>                                   broadcast_shape,\n    <span class=\"number\">330</span>                                   prefix_shape,\n--&gt; <span class=\"number\">331</span>                                   *args, **kwargs)\n    <span class=\"number\">332</span>             <span class=\"keyword\">if</span> broadcast_shape == (<span class=\"number\">1</span>,):\n    <span class=\"number\">333</span>                 samples = np.reshape(samples, prefix_shape)\n\n<span class=\"regexp\">/Users/</span>admin<span class=\"regexp\">/anaconda/</span>lib<span class=\"regexp\">/python2.7/</span>site-packages<span class=\"regexp\">/pymc3-3.0-py2.7.egg/</span>pymc3<span class=\"regexp\">/distributions/</span>distribution.pyc <span class=\"keyword\">in</span> replicate_samples(generator, size, repeats, *args, **kwargs)\n    <span class=\"number\">249</span>     n = <span class=\"typename\">int</span>(np.prod(repeats))\n    <span class=\"number\">250</span>     <span class=\"keyword\">if</span> n == <span class=\"number\">1</span>:\n--&gt; <span class=\"number\">251</span>         samples = generator(size=size, *args, **kwargs)\n    <span class=\"number\">252</span>     <span class=\"string\">else:</span>\n    <span class=\"number\">253</span>         samples = np.array([generator(size=size, *args, **kwargs) \\\n\nmtrand.pyx <span class=\"keyword\">in</span> mtrand.RandomState.exponential (numpy<span class=\"regexp\">/random/</span>mtrand/mtrand.<span class=\"string\">c:</span><span class=\"number\">19511</span>)()\n<span class=\"label\">\nValueError:</span> scale &lt;= <span class=\"number\">0</span></code></pre>",
  "id": "57adc7c6f7f11a7936b8ce08",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-08-12T12:57:42.671Z",
  "text": "Hello everybody, I have a small problem when using the function 'ppc_sample' with new data for prediction. Sometime (it doesn't happen every time), the function returns the error **ValueError: scale <= 0**. I see that the parameter lambda of the exponential posterior of some sample is negative... Apparently some data points cause this problem, but I don't know why ? Can you guy give me some advices ? Thank you! \n```\nValueError                                Traceback (most recent call last)\n<ipython-input-146-2a783d23dcdf> in <module>()\n     10 sector_id_share.set_value(sector_id)\n     11 \n---> 12 ppc = pm.sample_ppc(hm_trace[80000:], model=hierarchical_model, samples=100)\n\n/Users/admin/anaconda/lib/python2.7/site-packages/pymc3-3.0-py2.7.egg/pymc3/sampling.pyc in sample_ppc(trace, samples, model, vars, size)\n    345         for var in vars:\n    346             ppc[var.name].append(var.distribution.random(point=param,\n--> 347                                                          size=size))\n    348 \n    349     return {k: np.asarray(v) for k, v in ppc.items()}\n\n/Users/admin/anaconda/lib/python2.7/site-packages/pymc3-3.0-py2.7.egg/pymc3/distributions/continuous.py in random(self, point, size, repeat)\n    465         return generate_samples(np.random.exponential, scale=1./lam,\n    466                                 dist_shape=self.shape,\n--> 467                                 size=size)\n    468 \n    469     def logp(self, value):\n\n/Users/admin/anaconda/lib/python2.7/site-packages/pymc3-3.0-py2.7.egg/pymc3/distributions/distribution.pyc in generate_samples(generator, *args, **kwargs)\n    329                                   broadcast_shape,\n    330                                   prefix_shape,\n--> 331                                   *args, **kwargs)\n    332             if broadcast_shape == (1,):\n    333                 samples = np.reshape(samples, prefix_shape)\n\n/Users/admin/anaconda/lib/python2.7/site-packages/pymc3-3.0-py2.7.egg/pymc3/distributions/distribution.pyc in replicate_samples(generator, size, repeats, *args, **kwargs)\n    249     n = int(np.prod(repeats))\n    250     if n == 1:\n--> 251         samples = generator(size=size, *args, **kwargs)\n    252     else:\n    253         samples = np.array([generator(size=size, *args, **kwargs) \\\n\nmtrand.pyx in mtrand.RandomState.exponential (numpy/random/mtrand/mtrand.c:19511)()\n\nValueError: scale <= 0\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/weitzenfeld_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9_bigger.jpeg",
   "displayName": "Daniel Weitzenfeld",
   "id": "578e947ac2f0db084a23bde6",
   "url": "/weitzenfeld_twitter",
   "username": "weitzenfeld_twitter"
  },
  "html": "Is there an equivalent to pymc2&#39;s <code>Potential</code> class in pymc3?  <a href=\"https://pymc-devs.github.io/pymc/modelbuilding.html#the-potential-class\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://pymc-devs.github.io/pymc/modelbuilding.html#the-potential-class</a>",
  "id": "57b1f4fc1a7d020756810136",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-08-15T16:59:40.889Z",
  "text": "Is there an equivalent to pymc2's `Potential` class in pymc3?  https://pymc-devs.github.io/pymc/modelbuilding.html#the-potential-class",
  "unread": false,
  "urls": [
   {
    "url": "https://pymc-devs.github.io/pymc/modelbuilding.html#the-potential-class"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/weitzenfeld_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9_bigger.jpeg",
   "displayName": "Daniel Weitzenfeld",
   "id": "578e947ac2f0db084a23bde6",
   "url": "/weitzenfeld_twitter",
   "username": "weitzenfeld_twitter"
  },
  "html": "ah - I should have googled first.  I found this: <span data-link-type=\"issue\" data-issue=\"826\" data-issue-repo=\"pymc-devs/pymc3\" class=\"issue\">pymc-devs/pymc3#826</span>",
  "id": "57b1f55c7ce08cec69db86ef",
  "issues": [
   {
    "number": "826",
    "repo": "pymc-devs/pymc3"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-08-15T17:01:16.355Z",
  "text": "ah - I should have googled first.  I found this: https://github.com/pymc-devs/pymc3/issues/826",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/ilanman",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2523556?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2523556?v=3&s=60",
   "displayName": "Ilan Man",
   "gv": "3",
   "id": "57b222bf40f3a6eec05f9e78",
   "url": "/ilanman",
   "username": "ilanman",
   "v": 1
  },
  "html": "If I&#39;d like to contribute a .ipynb notebook to the examples page here <a href=\"https://github.com/pymc-devs/pymc3/tree/master/docs/source/notebooks\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/tree/master/docs/source/notebooks</a> how can I go about doing so?",
  "id": "57b223c85a4ad610567d1de5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-08-15T20:19:20.311Z",
  "text": "If I'd like to contribute a .ipynb notebook to the examples page here https://github.com/pymc-devs/pymc3/tree/master/docs/source/notebooks how can I go about doing so?",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/tree/master/docs/source/notebooks"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ilanman\" class=\"mention\">@ilanman</span> github PR?",
  "id": "57b336026a2fa2ff3d8ff022",
  "issues": [],
  "mentions": [
   {
    "screenName": "ilanman",
    "userId": "57b222bf40f3a6eec05f9e78",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2016-08-16T15:49:22.980Z",
  "text": "@ilanman github PR?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/ilanman",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2523556?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2523556?v=3&s=60",
   "displayName": "Ilan Man",
   "gv": "3",
   "id": "57b222bf40f3a6eec05f9e78",
   "url": "/ilanman",
   "username": "ilanman",
   "v": 1
  },
  "html": "ok - wasn\u2019t sure if there is a formal process, or guidelines/format I should follow",
  "id": "57b3450d8d93113d5f011d2e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-08-16T16:53:33.965Z",
  "text": "ok - wasn\u2019t sure if there is a formal process, or guidelines/format I should follow",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "we&#39;re working on some contribution docs btw",
  "id": "57b46086be8025f16949b2fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-08-17T13:03:02.979Z",
  "text": "we're working on some contribution docs btw",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/springcoil",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/983944?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/983944?v=4&s=60",
   "displayName": "Peadar Coyle",
   "gv": "4",
   "id": "55cd15780fc9f982bead5155",
   "url": "/springcoil",
   "username": "springcoil",
   "v": 9
  },
  "html": "Any thoughts on what needs to go into the contribution guidelines",
  "id": "57b9bf19b64a3a016f542724",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-08-21T14:47:53.530Z",
  "text": "Any thoughts on what needs to go into the contribution guidelines",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/springcoil",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/983944?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/983944?v=4&s=60",
   "displayName": "Peadar Coyle",
   "gv": "4",
   "id": "55cd15780fc9f982bead5155",
   "url": "/springcoil",
   "username": "springcoil",
   "v": 9
  },
  "html": "maybe mash together the pandas version and the other ones",
  "id": "57b9bf3187f779f06915d50e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-08-21T14:48:17.251Z",
  "text": "maybe mash together the pandas version and the other ones",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-23T14:44:14.004Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "",
  "id": "57bc6137ed79c5ee4f2d5428",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-08-23T14:44:07.213Z",
  "text": "",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "<a href=\"https://files.gitter.im/pymc-devs/pymc/NGs8/blob\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/pymc-devs/pymc/NGs8/thumb/blob.png\" alt=\"blob\" rel=\"nofollow\"></a>",
  "id": "57bc6231187885ef4f6ef476",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-08-23T14:48:17.587Z",
  "text": "[![blob](https://files.gitter.im/pymc-devs/pymc/NGs8/thumb/blob.png)](https://files.gitter.im/pymc-devs/pymc/NGs8/blob)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/NGs8/thumb/blob.png"
   },
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/NGs8/blob"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "nice sine-wave",
  "id": "57bc6240cd00bdff6e7246d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-08-23T14:48:32.969Z",
  "text": "nice sine-wave",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": ";)",
  "id": "57bc624687f779f0691f1f76",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-08-23T14:48:38.001Z",
  "text": ";)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "Hey, I got stuck early on. Fitting a non-linear signal ... a sine wave.",
  "id": "57bc625d5ffbca3e3c06a42f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-08-23T14:49:01.579Z",
  "text": "Hey, I got stuck early on. Fitting a non-linear signal ... a sine wave.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-23T14:51:05.731Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "<pre><code>model = pymc3.Model()\nwith model:\n     amp   = pymc3.Uniform('amp',   <span class=\"built_in\">lower</span>=<span class=\"number\">0.0</span>,  <span class=\"built_in\">upper</span>=<span class=\"number\">1.0</span>)\n     omega = pymc3.Uniform('omega', <span class=\"built_in\">lower</span>=<span class=\"number\">0.0</span>,  <span class=\"built_in\">upper</span>=<span class=\"number\">1.0</span>)\n     phi   = pymc3.Uniform('phi',   <span class=\"built_in\">lower</span>=-<span class=\"number\">1.0</span>, <span class=\"built_in\">upper</span>=<span class=\"number\">1.0</span>)\n     eps = pymc3.Uniform('eps', <span class=\"built_in\">lower</span>=<span class=\"number\">0</span>, <span class=\"built_in\">upper</span>=<span class=\"number\">10</span>) \n     sine = amp * pymc3.<span class=\"built_in\">sin</span>(x*omega + phi)\n     y = pymc3.Normal(<span class=\"string\">\"y\"</span>, mu=sine, sd=eps, observed=x)</code></pre>",
  "id": "57bc62a6b64a3a016f5d5e0b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-08-23T14:50:14.295Z",
  "text": "    model = pymc3.Model()\n    with model:\n         amp   = pymc3.Uniform('amp',   lower=0.0,  upper=1.0)\n         omega = pymc3.Uniform('omega', lower=0.0,  upper=1.0)\n         phi   = pymc3.Uniform('phi',   lower=-1.0, upper=1.0)\n         eps = pymc3.Uniform('eps', lower=0, upper=10) \n         sine = amp * pymc3.sin(x*omega + phi)\n         y = pymc3.Normal(\"y\", mu=sine, sd=eps, observed=x)",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-08-23T14:50:48.252Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "<pre><code>with model:\n    start= pymc3.<span class=\"function\"><span class=\"title\">find_MAP</span><span class=\"params\">()</span></span>\n    step = pymc3.<span class=\"function\"><span class=\"title\">NUTS</span><span class=\"params\">()</span></span>\n    trace = pymc3.<span class=\"function\"><span class=\"title\">sample</span><span class=\"params\">(<span class=\"number\">1</span>e4, start=start, step=step, njobs=<span class=\"number\">4</span>, progressbar=True)</span></span>\n    df = pymc3.<span class=\"function\"><span class=\"title\">df_summary</span><span class=\"params\">(trace)</span></span></code></pre>",
  "id": "57bc62b9bb6fad403cfb5730",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-08-23T14:50:33.380Z",
  "text": "    with model:\n        start= pymc3.find_MAP()\n        step = pymc3.NUTS()\n        trace = pymc3.sample(1e4, start=start, step=step, njobs=4, progressbar=True)\n        df = pymc3.df_summary(trace)",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "But I always get a traceplot looking similar to that:",
  "id": "57bc63036981f5f269100eed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-08-23T14:51:47.265Z",
  "text": "But I always get a traceplot looking similar to that:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "<a href=\"https://files.gitter.im/pymc-devs/pymc/sCgh/blob\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/pymc-devs/pymc/sCgh/thumb/blob.png\" alt=\"blob\" rel=\"nofollow\"></a>",
  "id": "57bc63245ffbca3e3c06a7c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-08-23T14:52:20.318Z",
  "text": "[![blob](https://files.gitter.im/pymc-devs/pymc/sCgh/thumb/blob.png)](https://files.gitter.im/pymc-devs/pymc/sCgh/blob)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/sCgh/thumb/blob.png"
   },
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/sCgh/blob"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2016-08-23T14:53:43.913Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "I expected the frequency distribution peaked around the true value of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03c9</mi><mo>=</mo><mn>0</mn><mi mathvariant=\"normal\">.</mi><mn>3</mn><mn>5</mn></mrow><annotation encoding=\"application/x-tex\">\\omega=0.35</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.64444em;\"></span><span class=\"strut bottom\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">\u03c9</span><span class=\"mrel\">=</span><span class=\"mord mathrm\">0</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">3</span><span class=\"mord mathrm\">5</span></span></span></span>",
  "id": "57bc635e6981f5f269101318",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-08-23T14:53:18.446Z",
  "text": "I expected the frequency distribution peaked around the true value of $$\\omega=0.35$$",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "Am I completely wrong? What&#39;s going on?",
  "id": "57bc638f187885ef4f6efb1d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-08-23T14:54:07.930Z",
  "text": "Am I completely wrong? What's going on?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "a couple of pointers",
  "id": "57bc647fed79c5ee4f2d6278",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-08-23T14:58:07.517Z",
  "text": "a couple of pointers",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "for circular RVs, I would use the vonMises distribution",
  "id": "57bc648bbb6fad403cfb5f60",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-08-23T14:58:19.807Z",
  "text": "for circular RVs, I would use the vonMises distribution",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "with NUTS, I wouldn&#39;t use <code>find_MAP()</code> but just set a good starting point yourself (can be the true parameter if you know it)",
  "id": "57bc64a8b64a3a016f5d68c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-08-23T14:58:48.327Z",
  "text": "with NUTS, I wouldn't use `find_MAP()` but just set a good starting point yourself (can be the true parameter if you know it)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "otherwise, I&#39;m not sure, looks OK to me. I would check your sine formula very closely",
  "id": "57bc64e1cd00bdff6e725405",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-08-23T14:59:45.916Z",
  "text": "otherwise, I'm not sure, looks OK to me. I would check your sine formula very closely",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "Okay, thank you. I will have a look at it.",
  "id": "57bc6676b64a3a016f5d722c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-08-23T15:06:30.282Z",
  "text": "Okay, thank you. I will have a look at it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "But in general pymc is a tool for doing parameter estimation for non linear functions?",
  "id": "57bc66babb6fad403cfb6abb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-08-23T15:07:38.866Z",
  "text": "But in general pymc is a tool for doing parameter estimation for non linear functions?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "you can do many things, including that",
  "id": "57bc66cfbb6fad403cfb6afc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-08-23T15:07:59.372Z",
  "text": "you can do many things, including that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "\ud83d\ude31",
  "id": "57bc6736ed79c5ee4f2d70a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-08-23T15:09:42.797Z",
  "text": "\ud83d\ude31",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/hrjn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2502671?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2502671?v=3&s=60",
   "displayName": "Harizo Rajaona",
   "gv": "3",
   "id": "5632a02216b6c7089cb8c7c0",
   "url": "/hrjn",
   "username": "hrjn",
   "v": 3
  },
  "html": "Hello! Do you know if there is a proper way to &quot;import&quot; sampling results from model_1 and reuse them in another model_2 ? The simplest way to go would be to incorporate everything in one single model, but since sampling in the model_1 part takes way too much time, I want to &quot;split&quot; the tasks.",
  "id": "57bd867eed79c5ee4f31880e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-08-24T11:35:26.429Z",
  "text": "Hello! Do you know if there is a proper way to \"import\" sampling results from model_1 and reuse them in another model_2 ? The simplest way to go would be to incorporate everything in one single model, but since sampling in the model_1 part takes way too much time, I want to \"split\" the tasks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ericmjl",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=60",
   "displayName": "Eric Ma",
   "gv": "4",
   "id": "553645b415522ed4b3df4dc5",
   "url": "/ericmjl",
   "username": "ericmjl",
   "v": 13
  },
  "html": "hi <span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> <span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span>, i had a question (which might be trivial to you all, but i&#39;m stuck).",
  "id": "57bdbd6ece157d1b579fb3d3",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   },
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2016-08-24T15:29:50.810Z",
  "text": "hi @twiecki @fonnesbeck, i had a question (which might be trivial to you all, but i'm stuck).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ericmjl",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=60",
   "displayName": "Eric Ma",
   "gv": "4",
   "id": "553645b415522ed4b3df4dc5",
   "url": "/ericmjl",
   "username": "ericmjl",
   "v": 13
  },
  "html": "i was looking at the BEST example <a href=\"https://pymc-devs.github.io/pymc3/notebooks/BEST.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://pymc-devs.github.io/pymc3/notebooks/BEST.html</a>",
  "id": "57bdbd817de2114a7996fba4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-08-24T15:30:09.131Z",
  "text": "i was looking at the BEST example https://pymc-devs.github.io/pymc3/notebooks/BEST.html",
  "unread": false,
  "urls": [
   {
    "url": "https://pymc-devs.github.io/pymc3/notebooks/BEST.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ericmjl",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=60",
   "displayName": "Eric Ma",
   "gv": "4",
   "id": "553645b415522ed4b3df4dc5",
   "url": "/ericmjl",
   "username": "ericmjl",
   "v": 13
  },
  "html": "there, it&#39;s two-sample comparison; what if I have ~1000+ samples that each are compared to a control?",
  "id": "57bdbdb07de2114a7996fc6e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-08-24T15:30:56.932Z",
  "text": "there, it's two-sample comparison; what if I have ~1000+ samples that each are compared to a control?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ericmjl",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=60",
   "displayName": "Eric Ma",
   "gv": "4",
   "id": "553645b415522ed4b3df4dc5",
   "url": "/ericmjl",
   "username": "ericmjl",
   "v": 13
  },
  "html": "the structure of my data will be repeated measurements for each sample as a running flat file; one row = one measurement.",
  "id": "57bdbdf261f3fa59598922b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-08-24T15:32:02.344Z",
  "text": "the structure of my data will be repeated measurements for each sample as a running flat file; one row = one measurement.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-24T15:33:56.507Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ericmjl",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=60",
   "displayName": "Eric Ma",
   "gv": "4",
   "id": "553645b415522ed4b3df4dc5",
   "url": "/ericmjl",
   "username": "ericmjl",
   "v": 13
  },
  "html": "do I have to convert the data such that it is column-oriented, where each column is the set of repeated measures for each of the samples and the control?",
  "id": "57bdbe4cc976227a1c4ac566",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-08-24T15:33:32.782Z",
  "text": "do I have to convert the data such that it is column-oriented, where each column is the set of repeated measures for each of the samples and the control?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "BEST is not directly suited for repeated measures",
  "id": "57bdbf47757a871757af7ca4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-08-24T15:37:43.651Z",
  "text": "BEST is not directly suited for repeated measures",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ericmjl",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=60",
   "displayName": "Eric Ma",
   "gv": "4",
   "id": "553645b415522ed4b3df4dc5",
   "url": "/ericmjl",
   "username": "ericmjl",
   "v": 13
  },
  "html": "hmmm...",
  "id": "57bdbf6961f3fa5959892916",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-08-24T15:38:17.641Z",
  "text": "hmmm...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ericmjl",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=60",
   "displayName": "Eric Ma",
   "gv": "4",
   "id": "553645b415522ed4b3df4dc5",
   "url": "/ericmjl",
   "username": "ericmjl",
   "v": 13
  },
  "html": "that&#39;s interesting, i must have mistakenly thought that the structure of the problem was similar to the one in BEST.",
  "id": "57bdbfada7bd7e55795f343f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-08-24T15:39:25.958Z",
  "text": "that's interesting, i must have mistakenly thought that the structure of the problem was similar to the one in BEST.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ericmjl",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2631566?v=4&s=60",
   "displayName": "Eric Ma",
   "gv": "4",
   "id": "553645b415522ed4b3df4dc5",
   "url": "/ericmjl",
   "username": "ericmjl",
   "v": 13
  },
  "html": "what i&#39;m working on is as such: protein mutants being measured for activity relative to control; want to quantify uncertainty in measurements and propagate that through to the final quantity i&#39;m interested in, which is the fold change as defined by <code>mutant / control</code>. i had thought that the structure of the problem was similar to BEST, except that i had ~1000+ mutants that i&#39;m measuring. would you have a recommended paper I could look at that deals with something similar? ",
  "id": "57bdc0847c2d3860599d558c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-08-24T15:43:00.472Z",
  "text": "what i'm working on is as such: protein mutants being measured for activity relative to control; want to quantify uncertainty in measurements and propagate that through to the final quantity i'm interested in, which is the fold change as defined by `mutant / control`. i had thought that the structure of the problem was similar to BEST, except that i had ~1000+ mutants that i'm measuring. would you have a recommended paper I could look at that deals with something similar? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "<p>Hey <span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span>, it&#39;s me again. I wanted to report back, that my oscillation fit from yesterday is kind of working after using your excellent hints:</p><pre><code>model = pm.<span class=\"function\"><span class=\"title\">Model</span><span class=\"params\">()</span></span>\nwith model:\n    amp   = pm<span class=\"class\">.Uniform</span> (<span class=\"string\">'amp'</span>,   lower=<span class=\"number\">0.9</span>,  upper=<span class=\"number\">1.1</span>)\n    omega = pm.<span class=\"function\"><span class=\"title\">VonMises</span><span class=\"params\">(<span class=\"string\">'omega'</span>, mu=<span class=\"number\">3.0</span>, kappa=<span class=\"number\">1.0</span>)</span></span>\n    phi   = pm.<span class=\"function\"><span class=\"title\">VonMises</span><span class=\"params\">(<span class=\"string\">'phi'</span>,   mu=<span class=\"number\">0.0</span>, kappa=<span class=\"number\">2.0</span>)</span></span>\n    sine = pm.<span class=\"function\"><span class=\"title\">Deterministic</span><span class=\"params\">(<span class=\"string\">'sine'</span>, amp * pm.sin(omega * x + phi)</span></span>)\n    y = pm.<span class=\"function\"><span class=\"title\">Normal</span><span class=\"params\">(<span class=\"string\">\"y\"</span>, mu=sine, observed=x)</span></span></code></pre><p>and sampling:</p><pre><code>with model:\n    step = pm.<span class=\"function\"><span class=\"title\">NUTS</span><span class=\"params\">()</span></span>\n    trace = pm.<span class=\"function\"><span class=\"title\">sample</span><span class=\"params\">(<span class=\"number\">1</span>e4, step=step, njobs=<span class=\"number\">4</span>, progressbar=True)</span></span>\n    pm.<span class=\"function\"><span class=\"title\">traceplot</span><span class=\"params\">(trace)</span></span></code></pre>",
  "id": "57bdc2d6ce157d1b579fcffc",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2016-08-24T15:52:54.176Z",
  "text": "Hey @twiecki, it's me again. I wanted to report back, that my oscillation fit from yesterday is kind of working after using your excellent hints:\n\n    model = pm.Model()\n    with model:\n        amp   = pm.Uniform ('amp',   lower=0.9,  upper=1.1)\n        omega = pm.VonMises('omega', mu=3.0, kappa=1.0)\n        phi   = pm.VonMises('phi',   mu=0.0, kappa=2.0)\n        sine = pm.Deterministic('sine', amp * pm.sin(omega * x + phi))\n        y = pm.Normal(\"y\", mu=sine, observed=x)\n\nand sampling:\n\n    with model:\n        step = pm.NUTS()\n        trace = pm.sample(1e4, step=step, njobs=4, progressbar=True)\n        pm.traceplot(trace)\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "<a href=\"https://files.gitter.im/pymc-devs/pymc/tC4T/blob\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/pymc-devs/pymc/tC4T/thumb/blob.png\" alt=\"blob\" rel=\"nofollow\"></a>",
  "id": "57bdc2e4ce157d1b579fd083",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-08-24T15:53:08.037Z",
  "text": "[![blob](https://files.gitter.im/pymc-devs/pymc/tC4T/thumb/blob.png)](https://files.gitter.im/pymc-devs/pymc/tC4T/blob)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/tC4T/thumb/blob.png"
   },
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/tC4T/blob"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2016-08-24T15:54:51.840Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "<p>The plot is produced like this:</p><pre><code>sine_fit = np.<span class=\"function\"><span class=\"title\">percentile</span><span class=\"params\">(trace.sine, <span class=\"number\">50.0</span>, axis=<span class=\"number\">0</span>)</span></span>\nsine_min = np.<span class=\"function\"><span class=\"title\">percentile</span><span class=\"params\">(trace.sine,  <span class=\"number\">2.5</span>, axis=<span class=\"number\">0</span>)</span></span>\nsine_max = np.<span class=\"function\"><span class=\"title\">percentile</span><span class=\"params\">(trace.sine, <span class=\"number\">97.5</span>, axis=<span class=\"number\">0</span>)</span></span>\nplt.<span class=\"function\"><span class=\"title\">plot</span><span class=\"params\">(t, x, <span class=\"string\">'k'</span>)</span></span>\nplt.<span class=\"function\"><span class=\"title\">plot</span><span class=\"params\">(t, sine_fit, <span class=\"string\">'r'</span>)</span></span>\nplt.<span class=\"function\"><span class=\"title\">fill_between</span><span class=\"params\">(t, sine_min, sine_max, color=<span class=\"string\">'0.5'</span>, alpha=<span class=\"number\">0.5</span>)</span></span></code></pre><p>Where <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">x</span></span></span></span> is the input signal.</p>",
  "id": "57bdc328ce157d1b579fd1ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-08-24T15:54:16.163Z",
  "text": "The plot is produced like this:\n\n    sine_fit = np.percentile(trace.sine, 50.0, axis=0)\n    sine_min = np.percentile(trace.sine,  2.5, axis=0)\n    sine_max = np.percentile(trace.sine, 97.5, axis=0)\n    plt.plot(t, x, 'k')\n    plt.plot(t, sine_fit, 'r')\n    plt.fill_between(t, sine_min, sine_max, color='0.5', alpha=0.5)\n\nWhere $$x$$ is the input signal.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "What puzzles me now is the following. If I do<pre><code>omega_fit = np.percentile(<span class=\"built_in\">trace</span>.omega, <span class=\"number\">50.0</span>, axis=<span class=\"number\">0</span>)\namp_fit = np.percentile(<span class=\"built_in\">trace</span>.amp, <span class=\"number\">50.0</span>, axis=<span class=\"number\">0</span>)\nphi_fit = np.percentile(<span class=\"built_in\">trace</span>.phi, <span class=\"number\">50.0</span>, axis=<span class=\"number\">0</span>)\nx_fit = amp_fit * np.<span class=\"built_in\">sin</span>(omega_fit * t + phi_fit)\nplt.plot(t, x, <span class=\"string\">'k'</span>)\nplt.plot(t, x_fit, <span class=\"string\">'b'</span>)</code></pre>",
  "id": "57bdc386ce157d1b579fd394",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-08-24T15:55:50.155Z",
  "text": "What puzzles me now is the following. If I do\n\n    omega_fit = np.percentile(trace.omega, 50.0, axis=0)\n    amp_fit = np.percentile(trace.amp, 50.0, axis=0)\n    phi_fit = np.percentile(trace.phi, 50.0, axis=0)\n    x_fit = amp_fit * np.sin(omega_fit * t + phi_fit)\n    plt.plot(t, x, 'k')\n    plt.plot(t, x_fit, 'b')\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "I get the following result:",
  "id": "57bdc3b15bdd197c1cb996b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-08-24T15:56:33.128Z",
  "text": "I get the following result:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "<a href=\"https://files.gitter.im/pymc-devs/pymc/yS1A/blob\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/pymc-devs/pymc/yS1A/thumb/blob.png\" alt=\"blob\" rel=\"nofollow\"></a>",
  "id": "57bdc3bb757a871757af958a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-08-24T15:56:43.744Z",
  "text": "[![blob](https://files.gitter.im/pymc-devs/pymc/yS1A/thumb/blob.png)](https://files.gitter.im/pymc-devs/pymc/yS1A/blob)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/yS1A/thumb/blob.png"
   },
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/yS1A/blob"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "And I don&#39;t understand why the deterministic variable <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">sine</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.65952em;\"></span><span class=\"strut bottom\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">s</span><span class=\"mord mathit\">i</span><span class=\"mord mathit\">n</span><span class=\"mord mathit\">e</span></span></span></span> does fit signal very well, but e.g. the parent variable <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>o</mi><mi>m</mi><mi>e</mi><mi>g</mi><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">omega</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">o</span><span class=\"mord mathit\">m</span><span class=\"mord mathit\">e</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathit\">a</span></span></span></span> is totally off.",
  "id": "57bdc3f9c976227a1c4ae332",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-08-24T15:57:45.227Z",
  "text": "And I don't understand why the deterministic variable $$sine$$ does fit signal very well, but e.g. the parent variable $$omega$$ is totally off.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-24T15:59:42.665Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "So the true value of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>o</mi><mi>m</mi><mi>e</mi><mi>g</mi><mi>a</mi><mo>=</mo><mn>3</mn><mi mathvariant=\"normal\">.</mi><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">omega=3.3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.64444em;\"></span><span class=\"strut bottom\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">o</span><span class=\"mord mathit\">m</span><span class=\"mord mathit\">e</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathit\">a</span><span class=\"mrel\">=</span><span class=\"mord mathrm\">3</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">3</span></span></span></span> and the median of the RV trace is <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>1</mn><mi mathvariant=\"normal\">.</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">1.2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.64444em;\"></span><span class=\"strut bottom\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathrm\">1</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">2</span></span></span></span>. Do you have an idea why?",
  "id": "57bdc450ce157d1b579fd849",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-08-24T15:59:12.858Z",
  "text": "So the true value of $$omega=3.3$$ and the median of the RV trace is $$1.2$$. Do you have an idea why?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "Any ideas?",
  "id": "57beae12cc94ce8b56615ced",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-08-25T08:36:34.023Z",
  "text": "Any ideas?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "you can try with the posterior mean",
  "id": "57beb32cce157d1b57a324b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-08-25T08:58:20.005Z",
  "text": "you can try with the posterior mean",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jrosskopf\" class=\"mention\">@jrosskopf</span>  the angular frequency omega only needs to be positive,  so I guess an exponential would do. Phase shift is indeed periodic so the Von Mises is appropriate",
  "id": "57beb3d5cc94ce8b56617155",
  "issues": [],
  "mentions": [
   {
    "screenName": "jrosskopf",
    "userId": "56b229d8e610378809bfb196",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-08-25T09:01:09.163Z",
  "text": "@jrosskopf  the angular frequency omega only needs to be positive,  so I guess an exponential would do. Phase shift is indeed periodic so the Von Mises is appropriate",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span>  <code>np.mean(trace.omega)</code> is also around <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>1</mn><mi mathvariant=\"normal\">.</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">1.2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.64444em;\"></span><span class=\"strut bottom\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathrm\">1</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">2</span></span></span></span> so just slightly different.",
  "id": "57beb4021237f2f2445ff118",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-08-25T09:01:54.073Z",
  "text": "@twiecki  `np.mean(trace.omega)` is also around $$1.2$$ so just slightly different.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ocramz\" class=\"mention\">@ocramz</span>  Good point. I will change that. But what I don&#39;t understand is how the value of child deterministic var <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">sine</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.65952em;\"></span><span class=\"strut bottom\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">s</span><span class=\"mord mathit\">i</span><span class=\"mord mathit\">n</span><span class=\"mord mathit\">e</span></span></span></span> could be correct, but it&#39;s parent RV <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>o</mi><mi>m</mi><mi>e</mi><mi>g</mi><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">omega</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">o</span><span class=\"mord mathit\">m</span><span class=\"mord mathit\">e</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathit\">a</span></span></span></span> be wrong.",
  "id": "57beb46acc94ce8b56617354",
  "issues": [],
  "mentions": [
   {
    "screenName": "ocramz",
    "userId": "54413309db8155e6700cc708",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-08-25T09:03:38.088Z",
  "text": "@ocramz  Good point. I will change that. But what I don't understand is how the value of child deterministic var $$sine$$ could be correct, but it's parent RV $$omega$$ be wrong.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "If this is a totally stupid question, just tell me, and perhaps direct me to a resource which clarifies why it&#39;s happening.",
  "id": "57beb4cfce157d1b57a3299c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-08-25T09:05:19.398Z",
  "text": "If this is a totally stupid question, just tell me, and perhaps direct me to a resource which clarifies why it's happening.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jrosskopf\" class=\"mention\">@jrosskopf</span> you&#39;re picking the posterior parameters as being the 50th percentile of the trace. Wouldn&#39;t a well mixed random walk be well described by a higher percentile?",
  "id": "57beb4dd5bdd197c1cbcf6f6",
  "issues": [],
  "mentions": [
   {
    "screenName": "jrosskopf",
    "userId": "56b229d8e610378809bfb196",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-08-25T09:05:33.683Z",
  "text": "@jrosskopf you're picking the posterior parameters as being the 50th percentile of the trace. Wouldn't a well mixed random walk be well described by a higher percentile?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jrosskopf\" class=\"mention\">@jrosskopf</span> I don&#39;t know why that&#39;s happening but share your intuition that the correct parameters should be recovered",
  "id": "57beb507cc94ce8b56617511",
  "issues": [],
  "mentions": [
   {
    "screenName": "jrosskopf",
    "userId": "56b229d8e610378809bfb196",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-08-25T09:06:15.464Z",
  "text": "@jrosskopf I don't know why that's happening but share your intuition that the correct parameters should be recovered",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "it&#39;s weird, but my hunch is that it&#39;s something obvious",
  "id": "57beb5161237f2f2445ff3eb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-08-25T09:06:30.111Z",
  "text": "it's weird, but my hunch is that it's something obvious",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span>  My intuition was, that if I use the posteriors of the RVs which are parent to the deterministic variable, and insert e.g. the mean or median of this RVs into the formula of the deterministic, I will recover the something similar to the posterior of the deterministic.",
  "id": "57beb6987de2114a799a946d",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-08-25T09:12:56.552Z",
  "text": "@twiecki  My intuition was, that if I use the posteriors of the RVs which are parent to the deterministic variable, and insert e.g. the mean or median of this RVs into the formula of the deterministic, I will recover the something similar to the posterior of the deterministic.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yep, I share that intuition",
  "id": "57beb6a85bdd197c1cbcfc88",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-08-25T09:13:12.295Z",
  "text": "yep, I share that intuition",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "does the posterior trace look OK?",
  "id": "57beb6c1cc94ce8b56617a97",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-08-25T09:13:37.826Z",
  "text": "does the posterior trace look OK?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span>  That&#39;s kind of my problem: What does okay mean. ",
  "id": "57beb6df1237f2f2445ff9e2",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2016-08-25T09:14:07.714Z",
  "text": "@twiecki  That's kind of my problem: What does okay mean. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span>  The median of the deterministic variable fits the input signal very well.",
  "id": "57beb6f75bdd197c1cbcfdae",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2016-08-25T09:14:31.196Z",
  "text": "@twiecki  The median of the deterministic variable fits the input signal very well.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "can you paste the traceplot",
  "id": "57beb709ce157d1b57a33113",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-08-25T09:14:49.935Z",
  "text": "can you paste the traceplot",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "Give me some minutes ;) ",
  "id": "57beb72c7de2114a799a9603",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-08-25T09:15:24.008Z",
  "text": "Give me some minutes ;) ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "<a href=\"https://files.gitter.im/pymc-devs/pymc/4sfr/blob\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/pymc-devs/pymc/4sfr/thumb/blob.png\" alt=\"blob\" rel=\"nofollow\"></a>",
  "id": "57beb9001237f2f2446000b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-08-25T09:23:12.614Z",
  "text": "[![blob](https://files.gitter.im/pymc-devs/pymc/4sfr/thumb/blob.png)](https://files.gitter.im/pymc-devs/pymc/4sfr/blob)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/4sfr/thumb/blob.png"
   },
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/4sfr/blob"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ocramz\" class=\"mention\">@ocramz</span> If i use &#39;np.percentile(trace.omega, 97.5, axis=0)&#39; the value increases a little bit to <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>\u2248</mo><mn>1</mn><mi mathvariant=\"normal\">.</mi><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">\\approx 1.4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.64444em;\"></span><span class=\"strut bottom\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mrel\">\u2248</span><span class=\"mord mathrm\">1</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">4</span></span></span></span> but is still far away from the expected <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>3</mn><mi mathvariant=\"normal\">.</mi><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3.3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.64444em;\"></span><span class=\"strut bottom\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathrm\">3</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">3</span></span></span></span>",
  "id": "57beb9a0ce157d1b57a3391c",
  "issues": [],
  "mentions": [
   {
    "screenName": "ocramz",
    "userId": "54413309db8155e6700cc708",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2016-08-25T09:25:52.356Z",
  "text": "@ocramz If i use 'np.percentile(trace.omega, 97.5, axis=0)' the value increases a little bit to $$\\approx 1.4$$ but is still far away from the expected $$3.3$$",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ocramz\" class=\"mention\">@ocramz</span> Did you mean that?",
  "id": "57beb9af757a871757b2fd0c",
  "issues": [],
  "mentions": [
   {
    "screenName": "ocramz",
    "userId": "54413309db8155e6700cc708",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2016-08-25T09:26:07.607Z",
  "text": "@ocramz Did you mean that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "your amplitube prior is very narrow",
  "id": "57beb9c3ce157d1b57a3396e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-08-25T09:26:27.672Z",
  "text": "your amplitube prior is very narrow",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "and it&#39;s hitting the bound",
  "id": "57beb9cf7de2114a799a9e90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-08-25T09:26:39.480Z",
  "text": "and it's hitting the bound",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> For the input signal the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>a</mi><mi>m</mi><msub><mi>p</mi><mrow><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi></mrow></msub><mo>=</mo><mn>1</mn><mi mathvariant=\"normal\">.</mi><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">amp_{true}=1.0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.64444em;\"></span><span class=\"strut bottom\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">a</span><span class=\"mord mathit\">m</span><span class=\"mord\"><span class=\"mord mathit\">p</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">t</span><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathit\">u</span><span class=\"mord mathit\">e</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mrel\">=</span><span class=\"mord mathrm\">1</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">0</span></span></span></span>",
  "id": "57beb9fb5bdd197c1cbd0795",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2016-08-25T09:27:23.661Z",
  "text": "@twiecki For the input signal the $$amp_{true}=1.0$$",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "still",
  "id": "57beba0f7c2d386059a0f66f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-08-25T09:27:43.068Z",
  "text": "still",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "I modeled the RV with <code>amp   = pm.Uniform (&#39;amp&#39;,   lower=0.9,  upper=1.1)</code>",
  "id": "57beba227de2114a799a9f72",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-08-25T09:28:02.174Z",
  "text": "I modeled the RV with `amp   = pm.Uniform ('amp',   lower=0.9,  upper=1.1)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that&#39;s the wrong prior",
  "id": "57beba2d7c2d386059a0f6c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-08-25T09:28:13.494Z",
  "text": "that's the wrong prior",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "Okay?",
  "id": "57beba36cc94ce8b566188a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-08-25T09:28:22.045Z",
  "text": "Okay?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "Use a log-normal or something",
  "id": "57beba507de2114a799aa059",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-08-25T09:28:48.977Z",
  "text": "Use a log-normal or something",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "or Uniform(0, 50)",
  "id": "57beba577de2114a799aa068",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-08-25T09:28:55.294Z",
  "text": "or Uniform(0, 50)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "Hmm. I&#39;dont get it, why?",
  "id": "57beba8a5bdd197c1cbd0936",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2016-08-25T09:29:46.269Z",
  "text": "Hmm. I'dont get it, why?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "Crazy, with <code>amp   = pm.Uniform (&#39;amp&#39;,   lower=0, upper=50)</code> the traceplot looks like",
  "id": "57bebc8d7c2d386059a0ff18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2016-08-25T09:38:21.902Z",
  "text": "Crazy, with ` amp   = pm.Uniform ('amp',   lower=0, upper=50)` the traceplot looks like",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "<a href=\"https://files.gitter.im/pymc-devs/pymc/V6AT/blob\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/pymc-devs/pymc/V6AT/thumb/blob.png\" alt=\"blob\" rel=\"nofollow\"></a>",
  "id": "57bebca1757a871757b3077e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2016-08-25T09:38:41.067Z",
  "text": "[![blob](https://files.gitter.im/pymc-devs/pymc/V6AT/thumb/blob.png)](https://files.gitter.im/pymc-devs/pymc/V6AT/blob)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/V6AT/thumb/blob.png"
   },
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/V6AT/blob"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "you need some burn-in but otherwise looks much better",
  "id": "57bebccace157d1b57a34330",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2016-08-25T09:39:22.038Z",
  "text": "you need some burn-in but otherwise looks much better",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "Yeah, but the omea histogram didn&#39;t change a lot.",
  "id": "57bebd331237f2f244600eb2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2016-08-25T09:41:07.851Z",
  "text": "Yeah, but the omea histogram didn't change a lot.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "(Sorry to be persistent, but that&#39;s the actual problem)",
  "id": "57bebd725bdd197c1cbd12ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2016-08-25T09:42:10.507Z",
  "text": "(Sorry to be persistent, but that's the actual problem)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I understand, can you recover the correct parameters with optimization? I worry that your data generation does not match the model",
  "id": "57bebd987de2114a799aab95",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2016-08-25T09:42:48.442Z",
  "text": "I understand, can you recover the correct parameters with optimization? I worry that your data generation does not match the model",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "So, the data generation is super simple:<pre><code>amp_<span class=\"literal\">true</span> = <span class=\"number\">1.0</span>\nomega_<span class=\"literal\">true</span> = <span class=\"number\">3.3</span>\nphi_<span class=\"literal\">true</span> = <span class=\"number\">0.0</span>\nt = np.linspace(<span class=\"number\">0</span>, <span class=\"number\">10</span>*np.pi, <span class=\"number\">1000</span>)\nx = amp_<span class=\"literal\">true</span> * np.sin(omega_<span class=\"literal\">true</span> * t + phi_<span class=\"literal\">true</span>)</code></pre>",
  "id": "57bebe21757a871757b30c92",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2016-08-25T09:45:05.116Z",
  "text": "So, the data generation is super simple:\n\n    amp_true = 1.0\n    omega_true = 3.3\n    phi_true = 0.0\n    t = np.linspace(0, 10*np.pi, 1000)\n    x = amp_true * np.sin(omega_true * t + phi_true)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "This is super similar to the model, except, that I use <code>pymc3.sin</code> instead of <code>np.sin</code> in the deterministic part, and RVs for the parameters of the oscillation.",
  "id": "57bebe6e7c2d386059a104ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2016-08-25T09:46:22.087Z",
  "text": "This is super similar to the model, except, that I use `pymc3.sin` instead of `np.sin` in the deterministic part, and RVs for the parameters of the oscillation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "With a e.g. NM simplex I can recover the parameters.",
  "id": "57bebe8c1237f2f2446013c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2016-08-25T09:46:52.314Z",
  "text": "With a e.g. NM simplex I can recover the parameters.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<code>sine = pm.Deterministic(&#39;sine&#39;, amp * pm.sin(omega * x + phi))</code> shouldn&#39;t that be <code>sine = pm.Deterministic(&#39;sine&#39;, amp * pm.sin(omega * t + phi))</code> then?",
  "id": "57bec219ce157d1b57a355b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2016-08-25T10:02:01.203Z",
  "text": "`sine = pm.Deterministic('sine', amp * pm.sin(omega * x + phi))` shouldn't that be `sine = pm.Deterministic('sine', amp * pm.sin(omega * t + phi))` then?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "Wow fuck.",
  "id": "57bec233ce157d1b57a3566d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2016-08-25T10:02:27.134Z",
  "text": "Wow fuck.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "Lets see.",
  "id": "57bec23e757a871757b31ac6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2016-08-25T10:02:38.395Z",
  "text": "Lets see.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "yep, what you called <code>sine</code> is really the instant amplitude <code>x(t)</code>",
  "id": "57bec5251237f2f2446029ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2016-08-25T10:15:01.534Z",
  "text": "yep, what you called `sine` is really the instant amplitude `x(t)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "I will report back, if this embarrassing  mistake was the cause of the problem.",
  "id": "57bec89e757a871757b33158",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2016-08-25T10:29:50.318Z",
  "text": "I will report back, if this embarrassing  mistake was the cause of the problem.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jrosskopf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/851749?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/851749?v=3&s=60",
   "displayName": "Joachim Rosskopf",
   "gv": "3",
   "id": "56b229d8e610378809bfb196",
   "url": "/jrosskopf",
   "username": "jrosskopf",
   "v": 10
  },
  "html": "Guys, thank you very, very much. The stupid t &lt;-&gt; x mixup was the source of my confusion.",
  "id": "57bedae65bdd197c1cbd7212",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2016-08-25T11:47:50.432Z",
  "text": "Guys, thank you very, very much. The stupid t <-> x mixup was the source of my confusion.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "glad it&#39;s working",
  "id": "57beddca757a871757b37cb0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2016-08-25T12:00:10.514Z",
  "text": "glad it's working",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-31T03:38:09.621Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/npyoung",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1348767?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1348767?v=4&s=60",
   "displayName": "NP Young",
   "gv": "4",
   "id": "54f77c7315522ed4b3dccfb4",
   "url": "/npyoung",
   "username": "npyoung",
   "v": 12
  },
  "html": "Hi everyone. I&#39;ve been working on implementing a state space dynamics <code>Distribution</code> in pymc3. I need it for my own project, but I figure it might also make a nice addition to <code>distributions.timeseries</code>. My model for the hidden state x(t) seems to work, but I get serious performance issues when I attach the observation model y(t). My code and tests are in a <a href=\"https://gist.github.com/npyoung/adc097f95c6148a5e31c2f388efaa697\" rel=\"nofollow\" target=\"_blank\" class=\"link\">notebook on gist</a>. There&#39;s no error so I&#39;m at a loss debugging.",
  "id": "57c650fc89fabaea6bd8c955",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2016-08-31T03:37:32.981Z",
  "text": "Hi everyone. I've been working on implementing a state space dynamics `Distribution` in pymc3. I need it for my own project, but I figure it might also make a nice addition to `distributions.timeseries`. My model for the hidden state x(t) seems to work, but I get serious performance issues when I attach the observation model y(t). My code and tests are in a [notebook on gist](https://gist.github.com/npyoung/adc097f95c6148a5e31c2f388efaa697). There's no error so I'm at a loss debugging.",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/npyoung/adc097f95c6148a5e31c2f388efaa697"
   }
  ],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/npyoung",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1348767?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1348767?v=4&s=60",
   "displayName": "NP Young",
   "gv": "4",
   "id": "54f77c7315522ed4b3dccfb4",
   "url": "/npyoung",
   "username": "npyoung",
   "v": 12
  },
  "html": "I&#39;ve even tried attaching an observation model with Gaussian noise onto <code>GaussianRandomWalk</code> and it worked fine, although everything was 1D in that case.",
  "id": "57c651b72dcc4f312947e694",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2016-08-31T03:40:39.222Z",
  "text": "I've even tried attaching an observation model with Gaussian noise onto `GaussianRandomWalk` and it worked fine, although everything was 1D in that case.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "Hi everyone, I am wondering whether there is any recommendation of prior choice in PyMC3? Is <a href=\"https://github.com/stan-dev/stan/wiki/Prior-Choice-Recommendations\" rel=\"nofollow\" target=\"_blank\" class=\"link\">the recommendation for STAN</a> also applies in PyMC3?",
  "id": "57c6a14c8635a5ba6c8437a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2016-08-31T09:20:12.770Z",
  "text": "Hi everyone, I am wondering whether there is any recommendation of prior choice in PyMC3? Is [the recommendation for STAN](https://github.com/stan-dev/stan/wiki/Prior-Choice-Recommendations) also applies in PyMC3?",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/stan-dev/stan/wiki/Prior-Choice-Recommendations"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/springcoil",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/983944?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/983944?v=4&s=60",
   "displayName": "Peadar Coyle",
   "gv": "4",
   "id": "55cd15780fc9f982bead5155",
   "url": "/springcoil",
   "username": "springcoil",
   "v": 9
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"junpenglao\" class=\"mention\">@junpenglao</span> I&#39;d say those are sensible priors to choose",
  "id": "57ce959dfe284f6c302b5930",
  "issues": [],
  "mentions": [
   {
    "screenName": "junpenglao",
    "userId": "56e8df4685d51f252ab907f1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2016-09-06T10:08:29.647Z",
  "text": "Hi @junpenglao I'd say those are sensible priors to choose",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/springcoil",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/983944?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/983944?v=4&s=60",
   "displayName": "Peadar Coyle",
   "gv": "4",
   "id": "55cd15780fc9f982bead5155",
   "url": "/springcoil",
   "username": "springcoil",
   "v": 9
  },
  "html": "This would be a good contribution btw - an FAQ or something with a link to that",
  "id": "57ce95b477c1b70d7fec6d61",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-09-06T10:08:52.496Z",
  "text": "This would be a good contribution btw - an FAQ or something with a link to that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Here\u2019s the first release candidate for PyMC3 (version 3.0): <a href=\"https://pypi.python.org/pypi/pymc3\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://pypi.python.org/pypi/pymc3</a>",
  "id": "57cf27e81baa312a6bdc57aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-09-06T20:32:40.000Z",
  "text": "Here\u2019s the first release candidate for PyMC3 (version 3.0): https://pypi.python.org/pypi/pymc3",
  "unread": false,
  "urls": [
   {
    "url": "https://pypi.python.org/pypi/pymc3"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": " I am trying to work out a theoretical question with MCMC and thought maybe someone here can point me in the right direction. Why don&#39;t we just choose an acceptance ratio of 1 always? If I choose my priors for all N parameters well, I can generate K samples per parameter prior, construct a K x N matrix and compute the likelihood function K times. Then I can compute the product of the likelihood and each parameter prior, and I now have something which is proportional to the target posterior distribution. Since my samples are completely independent from one another, this algorithm trivially allows me to parallelize my likelihood function computation over all K samples. Could someone tell me or point me to some resources discussing why this approach is not good?",
  "id": "57cfd0bdfe284f6c302f49b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-09-07T08:33:01.866Z",
  "text": " I am trying to work out a theoretical question with MCMC and thought maybe someone here can point me in the right direction. Why don't we just choose an acceptance ratio of 1 always? If I choose my priors for all N parameters well, I can generate K samples per parameter prior, construct a K x N matrix and compute the likelihood function K times. Then I can compute the product of the likelihood and each parameter prior, and I now have something which is proportional to the target posterior distribution. Since my samples are completely independent from one another, this algorithm trivially allows me to parallelize my likelihood function computation over all K samples. Could someone tell me or point me to some resources discussing why this approach is not good?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "I think I&#39;ve worked it out. As N gets bigger, K would need to be quite large to make it a reasonable approximation. The acceptance rules help you to not waste so many iterations in low probability regions.",
  "id": "57d00217f33967fc643780db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-09-07T12:03:35.897Z",
  "text": "I think I've worked it out. As N gets bigger, K would need to be quite large to make it a reasonable approximation. The acceptance rules help you to not waste so many iterations in low probability regions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "if you adjust to have an acceptance ratio of 1 your step-sizes need to be super-tiny, leading to ineffiecient random-walks",
  "id": "57d188d8f33967fc643c471a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-09-08T15:50:48.348Z",
  "text": "if you adjust to have an acceptance ratio of 1 your step-sizes need to be super-tiny, leading to ineffiecient random-walks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ericmjl\" class=\"mention\">@ericmjl</span> let me know if the conda forge recipy makes progress, super excited about that",
  "id": "57d1891c98f8df994d4872b4",
  "issues": [],
  "mentions": [
   {
    "screenName": "ericmjl",
    "userId": "553645b415522ed4b3df4dc5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2016-09-08T15:51:56.470Z",
  "text": "@ericmjl let me know if the conda forge recipy makes progress, super excited about that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "hi there, I came across something quite nice in Keras that it provides a <a href=\"https://keras.io/scikit-learn-api/#wrappers-for-the-scikit-learn-api\" rel=\"nofollow\" target=\"_blank\" class=\"link\">wrapper for the Scikit-Learn API</a>. Is there something similar in PyMC3?",
  "id": "57d65b3da0e8dbb04f2e160d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-09-12T07:37:33.268Z",
  "text": "hi there, I came across something quite nice in Keras that it provides a [wrapper for the Scikit-Learn API](https://keras.io/scikit-learn-api/#wrappers-for-the-scikit-learn-api). Is there something similar in PyMC3?",
  "unread": false,
  "urls": [
   {
    "url": "https://keras.io/scikit-learn-api/#wrappers-for-the-scikit-learn-api"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"junpenglao\" class=\"mention\">@junpenglao</span> not yet but I think that would be a great project. there&#39;s also nolearn: <a href=\"https://github.com/dnouri/nolearn\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/dnouri/nolearn</a>",
  "id": "57d66b8d83c1556511bc9c09",
  "issues": [],
  "mentions": [
   {
    "screenName": "junpenglao",
    "userId": "56e8df4685d51f252ab907f1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-09-12T08:47:09.607Z",
  "text": "@junpenglao not yet but I think that would be a great project. there's also nolearn: https://github.com/dnouri/nolearn",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/dnouri/nolearn"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> Thanks! Too many good libraries, not enough time... ",
  "id": "57d66e00d274dbdf350ca1ca",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-09-12T08:57:36.446Z",
  "text": "@twiecki Thanks! Too many good libraries, not enough time... ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "indeed. but I think having a package of commonly used models (LDA, GMM, DPGMM, logistic regression, BEST etc) on top of pymc3 would be a great addition",
  "id": "57d66e46cba69fe735071ca0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-09-12T08:58:46.995Z",
  "text": "indeed. but I think having a package of commonly used models (LDA, GMM, DPGMM, logistic regression, BEST etc) on top of pymc3 would be a great addition",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Isnt that what Bambi already does?",
  "id": "57d6a4a3a0e8dbb04f2f020c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-09-12T12:50:43.325Z",
  "text": "Isnt that what Bambi already does?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "for mixed-effects models, yeah",
  "id": "57d6a9bdb37816b14fae4a1d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-09-12T13:12:29.335Z",
  "text": "for mixed-effects models, yeah",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "but not really ML",
  "id": "57d6a9c1b8d4c13840887c42",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-09-12T13:12:33.033Z",
  "text": "but not really ML",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-09-12T14:32:19.241Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/henripal",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14865193?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14865193?v=3&s=60",
   "displayName": "henripal",
   "gv": "3",
   "id": "57d6babf40f3a6eec064d331",
   "url": "/henripal",
   "username": "henripal",
   "v": 2
  },
  "html": "",
  "id": "57d6bc6e7b9f81671140cff7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-09-12T14:32:14.930Z",
  "text": "",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-09-12T14:40:53.229Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/henripal",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14865193?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14865193?v=3&s=60",
   "displayName": "henripal",
   "gv": "3",
   "id": "57d6babf40f3a6eec064d331",
   "url": "/henripal",
   "username": "henripal",
   "v": 2
  },
  "html": "<p>Hi, I&#39;m trying to use PyMC3 for inference in a biology research paper. Our data follows an inhomogeneous Poisson process, with the Poisson parameter <code>lambda_p</code> growing linearly with a vector <code>x</code>.<br>I can successfully recover the parameter specifying the model like this:</p><pre><code>lambda_p = Beta<span class=\"list\">(<span class=\"quoted\">'lambda_p</span>',alpha=1, beta =1)</span> \npoisson_param_p = lambda_p * x\nY_obs = Poisson<span class=\"list\">(<span class=\"quoted\">'Y_obs</span>', mu = poisson_param_p, observed=poisson_counts, shape = len<span class=\"list\">(<span class=\"keyword\">x</span>)</span>)</span></code></pre><p>However, when I try to add a small amount of Gaussian noise, the inference converges to a completely erroneous value for lambda_p:</p><pre><code>lambda_p = Beta<span class=\"list\">(<span class=\"quoted\">'lambda_p</span>', alpha=1, beta=1)</span> \npoisson_param_p = lambda_p * x\npoisson_counts_p = Poisson<span class=\"list\">(<span class=\"quoted\">'poisson_counts_p</span>', mu = poisson_param_p, shape =len<span class=\"list\">(<span class=\"keyword\">x</span>)</span>)</span>\nY_obs = Normal<span class=\"list\">(<span class=\"quoted\">'Y_obs</span>', mu = poisson_counts_p, sd = <span class=\"number\">0.0001</span>, shape = len<span class=\"list\">(<span class=\"keyword\">x</span>)</span>, observed = poisson_counts)</span></code></pre><p>I think the two models should yield something similar but they don&#39;t. Am I mis-specifying the Gaussian noise? Thanks so much for any help!</p>",
  "id": "57d6be41b8d4c1384088d28f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-09-12T14:40:01.416Z",
  "text": "Hi, I'm trying to use PyMC3 for inference in a biology research paper. Our data follows an inhomogeneous Poisson process, with the Poisson parameter `lambda_p` growing linearly with a vector `x`.\nI can successfully recover the parameter specifying the model like this:\n```\nlambda_p = Beta('lambda_p',alpha=1, beta =1) \npoisson_param_p = lambda_p * x\nY_obs = Poisson('Y_obs', mu = poisson_param_p, observed=poisson_counts, shape = len(x))\n```\nHowever, when I try to add a small amount of Gaussian noise, the inference converges to a completely erroneous value for lambda_p:\n```\nlambda_p = Beta('lambda_p', alpha=1, beta=1) \npoisson_param_p = lambda_p * x\npoisson_counts_p = Poisson('poisson_counts_p', mu = poisson_param_p, shape =len(x))\nY_obs = Normal('Y_obs', mu = poisson_counts_p, sd = 0.0001, shape = len(x), observed = poisson_counts)\n```\nI think the two models should yield something similar but they don't. Am I mis-specifying the Gaussian noise? Thanks so much for any help!\n ",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "have you tried adding more noise?",
  "id": "57d7bb4def19fa3f407eaafa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-09-13T08:39:41.979Z",
  "text": "have you tried adding more noise?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/henripal",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14865193?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14865193?v=3&s=60",
   "displayName": "henripal",
   "gv": "3",
   "id": "57d6babf40f3a6eec064d331",
   "url": "/henripal",
   "username": "henripal",
   "v": 2
  },
  "html": "<p>Hi, yes! I generated some data according to the model I later specify in PyMC and tried to fit it. I&#39;ve tried the following:</p><ul>\n<li>added more noise</li>\n<li>changed the parameter start values to the correct ones</li>\n<li>heavily weighed my priors to the correct start values</li>\n<li>changed the sampling methods; also tried specifying the order of sampling methods using 2 steps</li>\n<li>changed the prior distribution to Gamma</li>\n</ul>\n<p>And the results are identical each time: the noiseless version converges to a distribution near the true value of the parameter lambda, while the noisy version estimates a very narrow distribution for lambda near 0. </p>",
  "id": "57d7f916ef19fa3f407f7938",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-09-13T13:03:18.658Z",
  "text": "Hi, yes! I generated some data according to the model I later specify in PyMC and tried to fit it. I've tried the following:\n- added more noise\n- changed the parameter start values to the correct ones\n- heavily weighed my priors to the correct start values\n- changed the sampling methods; also tried specifying the order of sampling methods using 2 steps\n- changed the prior distribution to Gamma\n\nAnd the results are identical each time: the noiseless version converges to a distribution near the true value of the parameter lambda, while the noisy version estimates a very narrow distribution for lambda near 0. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/henripal",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14865193?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14865193?v=3&s=60",
   "displayName": "henripal",
   "gv": "3",
   "id": "57d6babf40f3a6eec064d331",
   "url": "/henripal",
   "username": "henripal",
   "v": 2
  },
  "html": "Here is a notebook with a minimal example: <a href=\"https://gist.github.com/henripal/1c42e2b68ab347766c8eecc8971ad068\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/henripal/1c42e2b68ab347766c8eecc8971ad068</a> - any hints or directions to try are much appreciated!",
  "id": "57d7ffa3cba69fe7350c6253",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-09-13T13:31:15.277Z",
  "text": "Here is a notebook with a minimal example: https://gist.github.com/henripal/1c42e2b68ab347766c8eecc8971ad068 - any hints or directions to try are much appreciated!",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/henripal/1c42e2b68ab347766c8eecc8971ad068"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/henripal",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14865193?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14865193?v=3&s=60",
   "displayName": "henripal",
   "gv": "3",
   "id": "57d6babf40f3a6eec064d331",
   "url": "/henripal",
   "username": "henripal",
   "v": 2
  },
  "html": "... one last thing and I&#39;ll stop spamming: I just ported the code to pymc2 and it works as expected.",
  "id": "57d83785ef19fa3f408089e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-09-13T17:29:41.339Z",
  "text": "... one last thing and I'll stop spamming: I just ported the code to pymc2 and it works as expected.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "hm, that is very odd",
  "id": "57d90887cba69fe7350fe448",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-09-14T08:21:27.320Z",
  "text": "hm, that is very odd",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "maybe try only using Metropolis for all variables",
  "id": "57d9088e83c1556511c56025",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-09-14T08:21:34.821Z",
  "text": "maybe try only using Metropolis for all variables",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/henripal",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14865193?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14865193?v=3&s=60",
   "displayName": "henripal",
   "gv": "3",
   "id": "57d6babf40f3a6eec064d331",
   "url": "/henripal",
   "username": "henripal",
   "v": 2
  },
  "html": "Ran this with Metropolis everywhere and I still get the same result. Looking at the samples, it seems like for some reason the poisson_counts that are generated default to all zeros very quickly and stay that way. ",
  "id": "57d94542d274dbdf35164e9d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-09-14T12:40:34.931Z",
  "text": "Ran this with Metropolis everywhere and I still get the same result. Looking at the samples, it seems like for some reason the poisson_counts that are generated default to all zeros very quickly and stay that way. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I would very close check which values are being taken on: <a href=\"http://pymc-devs.github.io/pymc3/notebooks/howto_debugging.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://pymc-devs.github.io/pymc3/notebooks/howto_debugging.html</a>",
  "id": "57d9458b7b9f816711496845",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2016-09-14T12:41:47.840Z",
  "text": "I would very close check which values are being taken on: http://pymc-devs.github.io/pymc3/notebooks/howto_debugging.html",
  "unread": false,
  "urls": [
   {
    "url": "http://pymc-devs.github.io/pymc3/notebooks/howto_debugging.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "your model looks OK to me reading through it",
  "id": "57d945c5b8d4c13840912c71",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2016-09-14T12:42:45.670Z",
  "text": "your model looks OK to me reading through it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/henripal",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14865193?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14865193?v=3&s=60",
   "displayName": "henripal",
   "gv": "3",
   "id": "57d6babf40f3a6eec064d331",
   "url": "/henripal",
   "username": "henripal",
   "v": 2
  },
  "html": "ok, will try that! thanks so so much.",
  "id": "57d94f41ef19fa3f4084308b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2016-09-14T13:23:13.824Z",
  "text": "ok, will try that! thanks so so much.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/henripal",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14865193?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14865193?v=3&s=60",
   "displayName": "henripal",
   "gv": "3",
   "id": "57d6babf40f3a6eec064d331",
   "url": "/henripal",
   "username": "henripal",
   "v": 2
  },
  "html": "it looks like the poisson stochastic generates negative values if the parameter is low, even in 1d",
  "id": "57d98e84c3e7045a304ccde4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2016-09-14T17:53:08.674Z",
  "text": "it looks like the poisson stochastic generates negative values if the parameter is low, even in 1d",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/henripal",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14865193?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14865193?v=3&s=60",
   "displayName": "henripal",
   "gv": "3",
   "id": "57d6babf40f3a6eec064d331",
   "url": "/henripal",
   "username": "henripal",
   "v": 2
  },
  "html": "this for example causes a lot of negative values to be generated:<pre><code><span class=\"keyword\">import</span> theano.tensor as T\n<span class=\"keyword\">from</span> pymc3 <span class=\"keyword\">import</span> *\n\nmodel_debug = Model()\n\nwith model_debug:  \n    counts = Poisson(<span class=\"string\">'counts'</span>, mu=.<span class=\"number\">1</span>)\n    counts_print = T.printing.<span class=\"keyword\">Print</span>(<span class=\"string\">'counts'</span>)(counts)\n    Y_obs_wn = Normal(<span class=\"string\">'Y_obs_wn'</span>, mu=counts_print, sd=<span class=\"number\">0.01</span>,\n                         observed=<span class=\"number\">0</span>)\n    <span class=\"keyword\">step</span> = Metropolis()\n    trace_wn = sample(<span class=\"number\">10</span>, <span class=\"keyword\">step</span> = <span class=\"keyword\">step</span>)</code></pre>",
  "id": "57d98eb4c8af41d45f162f99",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2016-09-14T17:53:56.524Z",
  "text": "this for example causes a lot of negative values to be generated:\n```\nimport theano.tensor as T\nfrom pymc3 import *\n\nmodel_debug = Model()\n\nwith model_debug:  \n    counts = Poisson('counts', mu=.1)\n    counts_print = T.printing.Print('counts')(counts)\n    Y_obs_wn = Normal('Y_obs_wn', mu=counts_print, sd=0.01,\n                         observed=0)\n    step = Metropolis()\n    trace_wn = sample(10, step = step)\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "interesting, how can that be",
  "id": "57d99c3b18291e1048704e5f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2016-09-14T18:51:39.194Z",
  "text": "interesting, how can that be",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/npyoung",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1348767?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1348767?v=4&s=60",
   "displayName": "NP Young",
   "gv": "4",
   "id": "54f77c7315522ed4b3dccfb4",
   "url": "/npyoung",
   "username": "npyoung",
   "v": 12
  },
  "html": "I&#39;m curious why <code>Distribution</code>s in <code>distributions.continuous</code>, for example, have <code>random()</code> methods, but those in <code>distributions.timeseries</code> don&#39;t. Doesn&#39;t the sampler need to know how to draw from a distribution given the parameters, not just evaluate the likelihood given parameters and observations?",
  "id": "57d9ce9718291e10487118c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2016-09-14T22:26:31.243Z",
  "text": "I'm curious why `Distribution`s in `distributions.continuous`, for example, have `random()` methods, but those in `distributions.timeseries` don't. Doesn't the sampler need to know how to draw from a distribution given the parameters, not just evaluate the likelihood given parameters and observations?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/npyoung",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1348767?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1348767?v=4&s=60",
   "displayName": "NP Young",
   "gv": "4",
   "id": "54f77c7315522ed4b3dccfb4",
   "url": "/npyoung",
   "username": "npyoung",
   "v": 12
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"henripal\" class=\"mention\">@henripal</span> but samples with negative counts get rejected. Check <code>trace_wn[&#39;counts&#39;]</code>.",
  "id": "57d9d25efa660dd95fded1f1",
  "issues": [],
  "mentions": [
   {
    "screenName": "henripal",
    "userId": "57d6babf40f3a6eec064d331",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 25,
  "sent": "2016-09-14T22:42:38.549Z",
  "text": "@henripal but samples with negative counts get rejected. Check `trace_wn['counts']`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> <span data-link-type=\"mention\" data-screen-name=\"henripal\" class=\"mention\">@henripal</span> I&#39;ve noticed this as well. I believe it has to do with Metropolis not dealing with support boundaries well for discrete variables, which are not transformed.",
  "id": "57da0633fa660dd95fdf681e",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   },
   {
    "screenName": "henripal",
    "userId": "57d6babf40f3a6eec064d331",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 25,
  "sent": "2016-09-15T02:23:47.078Z",
  "text": "@twiecki @henripal I've noticed this as well. I believe it has to do with Metropolis not dealing with support boundaries well for discrete variables, which are not transformed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "We probably need a distinct <code>DiscreteMetropolis</code> that is boundary-aware.",
  "id": "57da073034eaa30e48783a22",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2016-09-15T02:28:00.067Z",
  "text": "We probably need a distinct `DiscreteMetropolis` that is boundary-aware.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"npyoung\" class=\"mention\">@npyoung</span> this is not gibbs sampling, the sampler just proposes values (<a href=\"http://twiecki.github.io/blog/2015/11/10/mcmc-sampling/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://twiecki.github.io/blog/2015/11/10/mcmc-sampling/</a>)",
  "id": "57da56aac8af41d45f18b144",
  "issues": [],
  "mentions": [
   {
    "screenName": "npyoung",
    "userId": "54f77c7315522ed4b3dccfb4",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2016-09-15T08:07:06.086Z",
  "text": "@npyoung this is not gibbs sampling, the sampler just proposes values (http://twiecki.github.io/blog/2015/11/10/mcmc-sampling/)",
  "unread": false,
  "urls": [
   {
    "url": "http://twiecki.github.io/blog/2015/11/10/mcmc-sampling/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/springcoil",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/983944?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/983944?v=4&s=60",
   "displayName": "Peadar Coyle",
   "gv": "4",
   "id": "55cd15780fc9f982bead5155",
   "url": "/springcoil",
   "username": "springcoil",
   "v": 9
  },
  "html": "That &#39;howto_debugging&#39; is really useful Thomas :) ",
  "id": "57e6517cb39f35d16d958f46",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2016-09-24T10:12:12.091Z",
  "text": "That 'howto_debugging' is really useful Thomas :) ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "thanks, yeah, I think a guide on model construction with all the pit-falls would be very helpful",
  "id": "57e6840e87fa803c5ee8a553",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2016-09-24T13:47:58.447Z",
  "text": "thanks, yeah, I think a guide on model construction with all the pit-falls would be very helpful",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> when do you think we should release a 2nd one?",
  "id": "57e91e74ea1b6b1a6c6b778c",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2016-09-26T13:11:16.406Z",
  "text": "@fonnesbeck when do you think we should release a 2nd one?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/springcoil",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/983944?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/983944?v=4&s=60",
   "displayName": "Peadar Coyle",
   "gv": "4",
   "id": "55cd15780fc9f982bead5155",
   "url": "/springcoil",
   "username": "springcoil",
   "v": 9
  },
  "html": "Ping is anyone in here",
  "id": "57e9542476d85b087dab1c2d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-09-26T17:00:20.461Z",
  "text": "Ping is anyone in here",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> perhaps this weekend?",
  "id": "57ea65ba35e0f31c6c47fa6f",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2016-09-27T12:27:38.471Z",
  "text": "@twiecki perhaps this weekend?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "great, lets try to merge <span data-link-type=\"issue\" data-issue=\"1398\" data-issue-repo=\"pymc-devs/pymc3\" class=\"issue\">pymc-devs/pymc3#1398</span> before",
  "id": "57ea71e854302caa6f22ade1",
  "issues": [
   {
    "number": "1398",
    "repo": "pymc-devs/pymc3"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-09-27T13:19:36.912Z",
  "text": "great, lets try to merge https://github.com/pymc-devs/pymc3/pull/1398 before",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/parsing-science",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4855740?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4855740?v=3&s=60",
   "displayName": "Nicole Carlson",
   "gv": "3",
   "id": "5799046640f3a6eec05cc4d0",
   "url": "/parsing-science",
   "username": "parsing-science",
   "v": 3
  },
  "html": "Hi all, I thought you might be interested in the code I used for my PyData PyMC3 tutorial so here it is: <a href=\"https://github.com/parsing-science/pymc3_quickstart_guide\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/parsing-science/pymc3_quickstart_guide</a>. Let me know if you have any questions.",
  "id": "57ea795d35e0f31c6c484f28",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-09-27T13:51:25.183Z",
  "text": "Hi all, I thought you might be interested in the code I used for my PyData PyMC3 tutorial so here it is: https://github.com/parsing-science/pymc3_quickstart_guide. Let me know if you have any questions.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/parsing-science/pymc3_quickstart_guide"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "hi nicole, thanks for dropping by and for giving such a great tutorial",
  "id": "57ea7985857ab70f7d464802",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-09-27T13:52:05.906Z",
  "text": "hi nicole, thanks for dropping by and for giving such a great tutorial",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "the pain points you identified are also very helpful. making those less cryptic is definitely high on our list",
  "id": "57ea79a576d85b087daf09f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-09-27T13:52:37.634Z",
  "text": "the pain points you identified are also very helpful. making those less cryptic is definitely high on our list",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/parsing-science",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4855740?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4855740?v=3&s=60",
   "displayName": "Nicole Carlson",
   "gv": "3",
   "id": "5799046640f3a6eec05cc4d0",
   "url": "/parsing-science",
   "username": "parsing-science",
   "v": 3
  },
  "html": "thanks!",
  "id": "57ea79a5783fe9b9459f0733",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-09-27T13:52:37.983Z",
  "text": "thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/parsing-science",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4855740?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4855740?v=3&s=60",
   "displayName": "Nicole Carlson",
   "gv": "3",
   "id": "5799046640f3a6eec05cc4d0",
   "url": "/parsing-science",
   "username": "parsing-science",
   "v": 3
  },
  "html": "and it was nice that you fixed the unicode/string issue the day before my talk",
  "id": "57ea79bd857ab70f7d4648b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-09-27T13:53:01.466Z",
  "text": "and it was nice that you fixed the unicode/string issue the day before my talk",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsing-science\" class=\"mention\">@parsing-science</span> are you on twitter?",
  "id": "57ea82b2ca69aeb745b51534",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsing-science",
    "userId": "5799046640f3a6eec05cc4d0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2016-09-27T14:31:14.600Z",
  "text": "@parsing-science are you on twitter?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/parsing-science",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4855740?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4855740?v=3&s=60",
   "displayName": "Nicole Carlson",
   "gv": "3",
   "id": "5799046640f3a6eec05cc4d0",
   "url": "/parsing-science",
   "username": "parsing-science",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span>: I actually just joined, parsing_science",
  "id": "57ea8eb400961416551ea249",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2016-09-27T15:22:28.516Z",
  "text": "@twiecki: I actually just joined, parsing_science",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsing-science\" class=\"mention\">@parsing-science</span> that tweet got pretty good traction: <a href=\"https://twitter.com/twiecki/status/779376429989527553\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://twitter.com/twiecki/status/779376429989527553</a>",
  "id": "57ea8f0054302caa6f233259",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsing-science",
    "userId": "5799046640f3a6eec05cc4d0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2016-09-27T15:23:44.485Z",
  "text": "@parsing-science that tweet got pretty good traction: https://twitter.com/twiecki/status/779376429989527553",
  "unread": false,
  "urls": [
   {
    "url": "https://twitter.com/twiecki/status/779376429989527553"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/parsing-science",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4855740?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4855740?v=3&s=60",
   "displayName": "Nicole Carlson",
   "gv": "3",
   "id": "5799046640f3a6eec05cc4d0",
   "url": "/parsing-science",
   "username": "parsing-science",
   "v": 3
  },
  "html": "cool, thanks for the tweet!",
  "id": "57ea8fb776d85b087daf70a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-09-27T15:26:47.790Z",
  "text": "cool, thanks for the tweet!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "Breaking change: Normal distributions in #PyMC3 are now expecting mu and sd as opposed to mu and tau <span data-link-type=\"issue\" data-issue=\"1398\" data-issue-repo=\"pymc-devs/pymc3\" class=\"issue\">pymc-devs/pymc3#1398</span>",
  "id": "57eae49aab9ba81255ebc76f",
  "issues": [
   {
    "number": "1398",
    "repo": "pymc-devs/pymc3"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-09-27T21:28:58.788Z",
  "text": "Breaking change: Normal distributions in #PyMC3 are now expecting mu and sd as opposed to mu and tau https://github.com/pymc-devs/pymc3/pull/1398",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsing-science\" class=\"mention\">@parsing-science</span> I looked into your logistic regression notebook but there are errors",
  "id": "57eb9217ab9ba81255edbb6e",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsing-science",
    "userId": "5799046640f3a6eec05cc4d0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2016-09-28T09:49:11.273Z",
  "text": "@parsing-science I looked into your logistic regression notebook but there are errors",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/parsing-science",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4855740?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4855740?v=3&s=60",
   "displayName": "Nicole Carlson",
   "gv": "3",
   "id": "5799046640f3a6eec05cc4d0",
   "url": "/parsing-science",
   "username": "parsing-science",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ocramz\" class=\"mention\">@ocramz</span>: that could definitely be the case. I should probably make a note in the README, that the up to date notebooks are the Quickstart guide with errors and the one without errors",
  "id": "57ec0162ab9ba81255ef92f0",
  "issues": [],
  "mentions": [
   {
    "screenName": "ocramz",
    "userId": "54413309db8155e6700cc708",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2016-09-28T17:44:02.265Z",
  "text": "@ocramz: that could definitely be the case. I should probably make a note in the README, that the up to date notebooks are the Quickstart guide with errors and the one without errors",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "or .. fix the buggy one <span data-link-type=\"mention\" data-screen-name=\"parsing-science\" class=\"mention\">@parsing-science</span> ;)",
  "id": "57f0cc60be5dec755011d6ea",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsing-science",
    "userId": "5799046640f3a6eec05cc4d0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2016-10-02T08:59:12.096Z",
  "text": "or .. fix the buggy one @parsing-science ;)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "jokes aside, looking forward to trying them out!",
  "id": "57f0cc6abe5dec755011d701",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-10-02T08:59:22.377Z",
  "text": "jokes aside, looking forward to trying them out!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/lookfwd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/789359?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/789359?v=4&s=60",
   "displayName": "Dimitrios Kouzis-Loukas",
   "gv": "4",
   "id": "56c7105de610378809c246d1",
   "url": "/lookfwd",
   "username": "lookfwd",
   "v": 15
  },
  "html": "<p>Hello guys, I&#39;ve been going through Getting Started and on the first example of using the NUTS sampler, an <code>from scipy import optimize</code> is missing. Also for me</p><pre><code>&gt;&gt;&gt; print pymc3.__version__\n<span class=\"number\">3.0</span>\n...\n...     trace = <span class=\"function\"><span class=\"title\">sample</span><span class=\"params\">(<span class=\"number\">2000</span>, start=start)</span></span>\n...     \n... \nTraceback (most recent call last):\n  File <span class=\"string\">\"&lt;stdin&gt;\"</span>, line <span class=\"number\">5</span>, <span class=\"keyword\">in</span> &lt;module&gt;\nTypeError: <span class=\"function\"><span class=\"title\">sample</span><span class=\"params\">()</span></span> takes at least <span class=\"number\">2</span> arguments (<span class=\"number\">2</span> given)</code></pre><p>. In contrast the code in <a href=\"https://peerj.com/articles/cs-55/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://peerj.com/articles/cs-55/</a>  worked fine. Should I do a PR in the doc?</p>",
  "id": "57f19aae34a8d5681cd7560a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-10-02T23:39:26.537Z",
  "text": "Hello guys, I've been going through Getting Started and on the first example of using the NUTS sampler, an `from scipy import optimize` is missing. Also for me\n```\n>>> print pymc3.__version__\n3.0\n...\n...     trace = sample(2000, start=start)\n...     \n... \nTraceback (most recent call last):\n  File \"<stdin>\", line 5, in <module>\nTypeError: sample() takes at least 2 arguments (2 given)\n```\n. In contrast the code in https://peerj.com/articles/cs-55/  worked fine. Should I do a PR in the doc?",
  "unread": false,
  "urls": [
   {
    "url": "https://peerj.com/articles/cs-55/"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2016-10-03T00:42:04.266Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/lookfwd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/789359?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/789359?v=4&s=60",
   "displayName": "Dimitrios Kouzis-Loukas",
   "gv": "4",
   "id": "56c7105de610378809c246d1",
   "url": "/lookfwd",
   "username": "lookfwd",
   "v": 15
  },
  "html": "The two-argument <code>sample()</code>  works for <pre><code><span class=\"prompt\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> pymc3.__version__\n<span class=\"number\">3.0</span>.rc2</code></pre>",
  "id": "57f1a94c34a8d5681cd7800e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-10-03T00:41:48.758Z",
  "text": "The two-argument `sample()`  works for \n```\n>>> print pymc3.__version__\n3.0.rc2\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/lookfwd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/789359?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/789359?v=4&s=60",
   "displayName": "Dimitrios Kouzis-Loukas",
   "gv": "4",
   "id": "56c7105de610378809c246d1",
   "url": "/lookfwd",
   "username": "lookfwd",
   "v": 15
  },
  "html": "<code>from pymc3 import exp</code> -&gt; <code>NameError: name &#39;exp&#39; is not defined</code>. <code>from theano.tensor import exp</code> worked fine. Same for <code>switch</code>",
  "id": "57f1af88be5dec7550144b3a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-10-03T01:08:23.999Z",
  "text": "`from pymc3 import exp` -> `NameError: name 'exp' is not defined`. `from theano.tensor import exp` worked fine. Same for `switch`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/lookfwd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/789359?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/789359?v=4&s=60",
   "displayName": "Dimitrios Kouzis-Loukas",
   "gv": "4",
   "id": "56c7105de610378809c246d1",
   "url": "/lookfwd",
   "username": "lookfwd",
   "v": 15
  },
  "html": "And that&#39;s all. Apart from those minor things all the rest works perfectly fine. Very nice!",
  "id": "57f1b0140ff4ef7a50fc32d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-10-03T01:10:44.955Z",
  "text": "And that's all. Apart from those minor things all the rest works perfectly fine. Very nice!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "It looks like some of our cleanup broke the examples in the docs.",
  "id": "57f1c53bb0ff456d3adcb34e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-10-03T02:40:59.074Z",
  "text": "It looks like some of our cleanup broke the examples in the docs.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Where are you seeing <code>from pymc3 import exp</code>?",
  "id": "57f1c56dbe5dec7550147d83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-10-03T02:41:49.175Z",
  "text": "Where are you seeing `from pymc3 import exp`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yeah, that would to change to <code>from pymc3.math import ...</code>",
  "id": "57f20f5116c3736220208b18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-10-03T07:57:05.766Z",
  "text": "yeah, that would to change to `from pymc3.math import ...`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "done, also did some refactoring of the docs",
  "id": "57f220c2d38f186520bd8015",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-10-03T09:11:30.626Z",
  "text": "done, also did some refactoring of the docs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "thanks <span data-link-type=\"mention\" data-screen-name=\"lookfwd\" class=\"mention\">@lookfwd</span> ",
  "id": "57f220c5be5dec7550159c99",
  "issues": [],
  "mentions": [
   {
    "screenName": "lookfwd",
    "userId": "56c7105de610378809c246d1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2016-10-03T09:11:33.625Z",
  "text": "thanks @lookfwd ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/lookfwd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/789359?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/789359?v=4&s=60",
   "displayName": "Dimitrios Kouzis-Loukas",
   "gv": "4",
   "id": "56c7105de610378809c246d1",
   "url": "/lookfwd",
   "username": "lookfwd",
   "v": 15
  },
  "html": "Everything looks great! Thanks a lot! :)",
  "id": "57f24df6d45d7f0f525b48f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-10-03T12:24:22.762Z",
  "text": "Everything looks great! Thanks a lot! :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/majidaldo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=60",
   "displayName": "Majid alDosari",
   "gv": "4",
   "id": "57ebe54640f3a6eec067d81a",
   "url": "/majidaldo",
   "username": "majidaldo",
   "v": 5
  },
  "html": "re: the docs, i found myself going &#39;back&#39; to pymc2 docs to figure out some things.",
  "id": "57f3c2a091d6af11522aed23",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-10-04T14:54:24.414Z",
  "text": "re: the docs, i found myself going 'back' to pymc2 docs to figure out some things.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/majidaldo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=60",
   "displayName": "Majid alDosari",
   "gv": "4",
   "id": "57ebe54640f3a6eec067d81a",
   "url": "/majidaldo",
   "username": "majidaldo",
   "v": 5
  },
  "html": "...as a user",
  "id": "57f3c2b3f69c94ad098ae85a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-10-04T14:54:43.075Z",
  "text": "...as a user",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"majidaldo\" class=\"mention\">@majidaldo</span> which things specifically?",
  "id": "57f3d2fad45d7f0f5260ecfb",
  "issues": [],
  "mentions": [
   {
    "screenName": "majidaldo",
    "userId": "57ebe54640f3a6eec067d81a",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2016-10-04T16:04:10.897Z",
  "text": "@majidaldo which things specifically?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/majidaldo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=60",
   "displayName": "Majid alDosari",
   "gv": "4",
   "id": "57ebe54640f3a6eec067d81a",
   "url": "/majidaldo",
   "username": "majidaldo",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> for example, talk about potentials and sampling convergence",
  "id": "57f3d33af69c94ad098b3a3c",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2016-10-04T16:05:14.357Z",
  "text": "@twiecki for example, talk about potentials and sampling convergence",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "right, potentials are definitely missing",
  "id": "57f3d35591d6af11522b3a8e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-10-04T16:05:41.175Z",
  "text": "right, potentials are definitely missing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/majidaldo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=60",
   "displayName": "Majid alDosari",
   "gv": "4",
   "id": "57ebe54640f3a6eec067d81a",
   "url": "/majidaldo",
   "username": "majidaldo",
   "v": 5
  },
  "html": "(is it ok if i use this forum to get some attention to my problem?) <a href=\"http://stackoverflow.com/questions/39752518/pymc3-observables-preprocessing-random-variable\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://stackoverflow.com/questions/39752518/pymc3-observables-preprocessing-random-variable</a>",
  "id": "57f3d3d90ec6f9457d9f8b76",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-10-04T16:07:53.142Z",
  "text": "(is it ok if i use this forum to get some attention to my problem?) http://stackoverflow.com/questions/39752518/pymc3-observables-preprocessing-random-variable",
  "unread": false,
  "urls": [
   {
    "url": "http://stackoverflow.com/questions/39752518/pymc3-observables-preprocessing-random-variable"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/majidaldo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=60",
   "displayName": "Majid alDosari",
   "gv": "4",
   "id": "57ebe54640f3a6eec067d81a",
   "url": "/majidaldo",
   "username": "majidaldo",
   "v": 5
  },
  "html": "is this meant to be a user forum?",
  "id": "57f3d3e243b5aeb00998013e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-10-04T16:08:02.751Z",
  "text": "is this meant to be a user forum?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yes",
  "id": "57f3d43a91d6af11522b3efb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-10-04T16:09:30.676Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-10-04T17:38:59.704Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/lookfwd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/789359?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/789359?v=4&s=60",
   "displayName": "Dimitrios Kouzis-Loukas",
   "gv": "4",
   "id": "56c7105de610378809c246d1",
   "url": "/lookfwd",
   "username": "lookfwd",
   "v": 15
  },
  "html": "A similarly general question... I&#39;ve some C++ code - not math but complex state machines. With a bit of effort I can make it look as <code>y = f(x)</code>where <code>x</code> is a vector of &quot;settings&quot; (all discrete vars). <code>f(x)</code> takes e.g. 10 ms to evaluate.  I want to maximize <code>y</code>. What would be a viable approach for this? I could do some <a href=\"http://deeplearning.net/software/theano/extending/extending_theano_c.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">magic with Theano&#39;s C-API</a> and <code>@as_op</code> which of course sounds like tons of work, but do you think it&#39;s worth the effort - or I should create a custom, possibly multi-threaded, C++ Metropolis\u2013Hastings implementation?",
  "id": "57f3e9070ec6f9457d9fe8ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-10-04T17:38:15.288Z",
  "text": "A similarly general question... I've some C++ code - not math but complex state machines. With a bit of effort I can make it look as `y = f(x)`where `x` is a vector of \"settings\" (all discrete vars). `f(x)` takes e.g. 10 ms to evaluate.  I want to maximize `y`. What would be a viable approach for this? I could do some [magic with Theano's C-API](http://deeplearning.net/software/theano/extending/extending_theano_c.html) and `@as_op` which of course sounds like tons of work, but do you think it's worth the effort - or I should create a custom, possibly multi-threaded, C++ Metropolis\u2013Hastings implementation?",
  "unread": false,
  "urls": [
   {
    "url": "http://deeplearning.net/software/theano/extending/extending_theano_c.html"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "actually <code>@as_op</code> is pretty straight forward",
  "id": "57f3e94ad45d7f0f52614f84",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-10-04T17:39:22.035Z",
  "text": "actually `@as_op` is pretty straight forward",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-10-04T17:40:38.382Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/lookfwd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/789359?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/789359?v=4&s=60",
   "displayName": "Dimitrios Kouzis-Loukas",
   "gv": "4",
   "id": "56c7105de610378809c246d1",
   "url": "/lookfwd",
   "username": "lookfwd",
   "v": 15
  },
  "html": "Certainly agree. Interfacing C++ is the main problem",
  "id": "57f3e97191d6af11522ba40c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-10-04T17:40:01.967Z",
  "text": "Certainly agree. Interfacing C++ is the main problem",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "oh you don&#39;t have a python wrapper yet?",
  "id": "57f3e9f13c59573f6f0a6b9b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-10-04T17:42:09.606Z",
  "text": "oh you don't have a python wrapper yet?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/lookfwd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/789359?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/789359?v=4&s=60",
   "displayName": "Dimitrios Kouzis-Loukas",
   "gv": "4",
   "id": "56c7105de610378809c246d1",
   "url": "/lookfwd",
   "username": "lookfwd",
   "v": 15
  },
  "html": "no :/",
  "id": "57f4500b91d6af11522d1b3e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-10-05T00:57:47.396Z",
  "text": "no :/",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/sachinruk",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1410927?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1410927?v=4&s=60",
   "displayName": "Sachin Abeywardana",
   "gv": "4",
   "id": "57707fd9c2f0db084a2010fd",
   "url": "/sachinruk",
   "username": "sachinruk",
   "v": 2
  },
  "html": "<p>Hey all,</p><p>I&#39;m trying to implement a Bayesian word2vec as detailed here: <a href=\"http://stats.stackexchange.com/questions/238512/bayesian-word2vec\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://stats.stackexchange.com/questions/238512/bayesian-word2vec</a>. Would appreciate any thoughts on this matter. Especially how to implement negative sampling in a Bayesian framework.</p><p>Thank in advance</p>",
  "id": "57f4821e29403a416fc9003d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-10-05T04:31:26.442Z",
  "text": "Hey all,\n\nI'm trying to implement a Bayesian word2vec as detailed here: http://stats.stackexchange.com/questions/238512/bayesian-word2vec. Would appreciate any thoughts on this matter. Especially how to implement negative sampling in a Bayesian framework.\n\nThank in advance",
  "unread": false,
  "urls": [
   {
    "url": "http://stats.stackexchange.com/questions/238512/bayesian-word2vec"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"lookfwd\" class=\"mention\">@lookfwd</span> Cython is great for that. but yeah, you might want to look for C++ solutions directly. maybe Stan",
  "id": "57f4b6a33c59573f6f0cf475",
  "issues": [],
  "mentions": [
   {
    "screenName": "lookfwd",
    "userId": "56c7105de610378809c246d1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2016-10-05T08:15:31.022Z",
  "text": "@lookfwd Cython is great for that. but yeah, you might want to look for C++ solutions directly. maybe Stan",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "although they only have NUTS",
  "id": "57f4b6aff69c94ad098e2711",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-10-05T08:15:43.265Z",
  "text": "although they only have NUTS",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/majidaldo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=60",
   "displayName": "Majid alDosari",
   "gv": "4",
   "id": "57ebe54640f3a6eec067d81a",
   "url": "/majidaldo",
   "username": "majidaldo",
   "v": 5
  },
  "html": "also something that i wanted to do is pymc3 rv -&gt; my theano function with a rv. can&#39;t do that b/c you can&#39;t take the gradient of a random operator",
  "id": "57f50e8e3c59573f6f0e4e53",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-10-05T14:30:38.522Z",
  "text": "also something that i wanted to do is pymc3 rv -> my theano function with a rv. can't do that b/c you can't take the gradient of a random operator",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/majidaldo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=60",
   "displayName": "Majid alDosari",
   "gv": "4",
   "id": "57ebe54640f3a6eec067d81a",
   "url": "/majidaldo",
   "username": "majidaldo",
   "v": 5
  },
  "html": "i didn&#39;t want to use pymc3 rvs for it b/c i would have to have a big shape and i wasn&#39;t interested in tracking them.",
  "id": "57f50eb243b5aeb0099c3e72",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-10-05T14:31:14.855Z",
  "text": "i didn't want to use pymc3 rvs for it b/c i would have to have a big shape and i wasn't interested in tracking them.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/majidaldo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=60",
   "displayName": "Majid alDosari",
   "gv": "4",
   "id": "57ebe54640f3a6eec067d81a",
   "url": "/majidaldo",
   "username": "majidaldo",
   "v": 5
  },
  "html": "oh maybe i could have assigned a non-gradient sampler to it.",
  "id": "57f5142cf69c94ad098faa8f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-10-05T14:54:36.489Z",
  "text": "oh maybe i could have assigned a non-gradient sampler to it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yes, certainly",
  "id": "57f5166b29403a416fcb0ffa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-10-05T15:04:11.423Z",
  "text": "yes, certainly",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "Metropolis or Slice",
  "id": "57f5166f43b5aeb0099c66ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-10-05T15:04:15.230Z",
  "text": "Metropolis or Slice",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/majidaldo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=60",
   "displayName": "Majid alDosari",
   "gv": "4",
   "id": "57ebe54640f3a6eec067d81a",
   "url": "/majidaldo",
   "username": "majidaldo",
   "v": 5
  },
  "html": "hmm maybe that knowledge could be integrated in the code b/c theano returns a gradient error.",
  "id": "57f5534791d6af115230b92f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-10-05T19:23:51.500Z",
  "text": "hmm maybe that knowledge could be integrated in the code b/c theano returns a gradient error.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "We are getting a new logo for PyMC3! I have set up a contest on 99designs, and we currently have 8 candidate logos. I\u2019ve set up a poll so that the PyMC community can help us decide: <a href=\"https://99designs.com/contests/poll/t05zkt?urlcategory=logo-design\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://99designs.com/contests/poll/t05zkt?urlcategory=logo-design</a>",
  "id": "57f80e7c4fde7203141af7df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-10-07T21:07:08.431Z",
  "text": "We are getting a new logo for PyMC3! I have set up a contest on 99designs, and we currently have 8 candidate logos. I\u2019ve set up a poll so that the PyMC community can help us decide: https://99designs.com/contests/poll/t05zkt?urlcategory=logo-design",
  "unread": false,
  "urls": [
   {
    "url": "https://99designs.com/contests/poll/t05zkt?urlcategory=logo-design"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/majidaldo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=60",
   "displayName": "Majid alDosari",
   "gv": "4",
   "id": "57ebe54640f3a6eec067d81a",
   "url": "/majidaldo",
   "username": "majidaldo",
   "v": 5
  },
  "html": "i only see the relevant symbolism in a couple",
  "id": "57f80ee568f560d80ce811ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-10-07T21:08:53.193Z",
  "text": "i only see the relevant symbolism in a couple",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "I agree. I didnt say they were all good.",
  "id": "57f80f000aa72e3c5be309e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-10-07T21:09:20.089Z",
  "text": "I agree. I didnt say they were all good.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "The context is that the old logo had a rocket ship, and I think several designers riffed on that motif.",
  "id": "57f80f1e68f560d80ce8126d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-10-07T21:09:50.688Z",
  "text": "The context is that the old logo had a rocket ship, and I think several designers riffed on that motif.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/majidaldo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=60",
   "displayName": "Majid alDosari",
   "gv": "4",
   "id": "57ebe54640f3a6eec067d81a",
   "url": "/majidaldo",
   "username": "majidaldo",
   "v": 5
  },
  "html": "i&#39;d like to see a die element with the 3 side facing and of course the (obligatory) python.",
  "id": "57f80f98a7c618cd26f1e5d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-10-07T21:11:52.813Z",
  "text": "i'd like to see a die element with the 3 side facing and of course the (obligatory) python.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/majidaldo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=60",
   "displayName": "Majid alDosari",
   "gv": "4",
   "id": "57ebe54640f3a6eec067d81a",
   "url": "/majidaldo",
   "username": "majidaldo",
   "v": 5
  },
  "html": "anyone attending pydata dc this weekend by any chance?",
  "id": "57f80fcd0aa72e3c5be30d49",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-10-07T21:12:45.443Z",
  "text": "anyone attending pydata dc this weekend by any chance?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Here&#39;s a new entry:<br><a href=\"http://d.pr/i/17knZ+\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://d.pr/i/17knZ+</a>",
  "id": "57f86f7ba7c618cd26f2df1a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-10-08T04:00:59.780Z",
  "text": "Here's a new entry:\nhttp://d.pr/i/17knZ+",
  "unread": false,
  "urls": [
   {
    "url": "http://d.pr/i/17knZ+"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2016-10-08T09:24:52.109Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "",
  "id": "57f8bb230aa72e3c5be4aad9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-10-08T09:23:47.649Z",
  "text": "",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-10-08T09:24:49.755Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "",
  "id": "57f8bb5a84f1db061491cfc2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-10-08T09:24:42.462Z",
  "text": "",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<a href=\"https://files.gitter.im/pymc-devs/pymc/gySY/PyMC3.png\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/pymc-devs/pymc/gySY/thumb/PyMC3.png\" alt=\"PyMC3.png\" rel=\"nofollow\"></a>",
  "id": "57f8bb6fa7c618cd26f38717",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-10-08T09:25:03.034Z",
  "text": "[![PyMC3.png](https://files.gitter.im/pymc-devs/pymc/gySY/thumb/PyMC3.png)](https://files.gitter.im/pymc-devs/pymc/gySY/PyMC3.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/gySY/thumb/PyMC3.png"
   },
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/gySY/PyMC3.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "my 2 cents (I am a big fan of multilevel modeling)",
  "id": "57f8bb780aa72e3c5be4abe1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-10-08T09:25:12.401Z",
  "text": "my 2 cents (I am a big fan of multilevel modeling)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"junpenglao\" class=\"mention\">@junpenglao</span> I like it! maybe make the arcs thicker though, to highlight the &quot;3&quot; ",
  "id": "57f8bba968f560d80ce9b9bf",
  "issues": [],
  "mentions": [
   {
    "screenName": "junpenglao",
    "userId": "56e8df4685d51f252ab907f1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-10-08T09:26:01.737Z",
  "text": "@junpenglao I like it! maybe make the arcs thicker though, to highlight the \"3\" ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"junpenglao\" class=\"mention\">@junpenglao</span> neat!",
  "id": "57f8bd630aa72e3c5be4b023",
  "issues": [],
  "mentions": [
   {
    "screenName": "junpenglao",
    "userId": "56e8df4685d51f252ab907f1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-10-08T09:33:23.090Z",
  "text": "@junpenglao neat!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "also the font choice could be improved",
  "id": "57f8bd8b84f1db061491d4cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-10-08T09:34:03.555Z",
  "text": "also the font choice could be improved",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> <span data-link-type=\"mention\" data-screen-name=\"ocramz\" class=\"mention\">@ocramz</span> ! This is just a proof of concept ;-)",
  "id": "57f8cc0168f560d80ce9e8cd",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   },
   {
    "screenName": "ocramz",
    "userId": "54413309db8155e6700cc708",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-10-08T10:35:45.542Z",
  "text": "Thanks @twiecki @ocramz ! This is just a proof of concept ;-)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "Alternatively, use the graph model as &quot;M&quot;, and future version can just update the last digit:",
  "id": "57f8ccac84f1db061491f69b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-10-08T10:38:36.889Z",
  "text": "Alternatively, use the graph model as \"M\", and future version can just update the last digit:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<a href=\"https://files.gitter.im/pymc-devs/pymc/dmuC/PyMC3_v2.png\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/pymc-devs/pymc/dmuC/thumb/PyMC3_v2.png\" alt=\"PyMC3_v2.png\" rel=\"nofollow\"></a>",
  "id": "57f8ccb684f1db061491f6b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-10-08T10:38:46.511Z",
  "text": "[![PyMC3_v2.png](https://files.gitter.im/pymc-devs/pymc/dmuC/thumb/PyMC3_v2.png)](https://files.gitter.im/pymc-devs/pymc/dmuC/PyMC3_v2.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/dmuC/thumb/PyMC3_v2.png"
   },
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/dmuC/PyMC3_v2.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Thanks. I&#39;ve posted the idea to 99designs, so we will see if anyone runs with the idea. ",
  "id": "57f8fa19d6251fd126a0e60e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-10-08T13:52:25.559Z",
  "text": "Thanks. I've posted the idea to 99designs, so we will see if anyone runs with the idea. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Here are a few more entries since I posted the first poll: <a href=\"https://99designs.com/contests/poll/r0ppap?urlcategory=logo-design\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://99designs.com/contests/poll/r0ppap?urlcategory=logo-design</a>",
  "id": "57f9647570fcb5db0c3e78c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-08T21:26:13.472Z",
  "text": "Here are a few more entries since I posted the first poll: https://99designs.com/contests/poll/r0ppap?urlcategory=logo-design",
  "unread": false,
  "urls": [
   {
    "url": "https://99designs.com/contests/poll/r0ppap?urlcategory=logo-design"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/dadaromeo",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5675732?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5675732?v=3&s=60",
   "displayName": "Dada Romeo",
   "gv": "3",
   "id": "5770f9b3c2f0db084a2020b3",
   "url": "/dadaromeo",
   "username": "dadaromeo",
   "v": 2
  },
  "html": "I read in the doc that <code>pymc3</code> supports sparse matrices via <code>scikit-sparse</code>. How? Does anyone have an example? Thanks.",
  "id": "57fbc1b3dfe82a365b12e9a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-10-10T16:28:35.548Z",
  "text": "I read in the doc that `pymc3` supports sparse matrices via `scikit-sparse`. How? Does anyone have an example? Thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"dadaromeo\" class=\"mention\">@dadaromeo</span> unfortunately it&#39;s been quite a while since someone worked with that. could still be functional or could be completely broken",
  "id": "57fc94f7a7c618cd26ff2136",
  "issues": [],
  "mentions": [
   {
    "screenName": "dadaromeo",
    "userId": "5770f9b3c2f0db084a2020b3",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-10-11T07:29:59.254Z",
  "text": "@dadaromeo unfortunately it's been quite a while since someone worked with that. could still be functional or could be completely broken",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "there was an example at some point",
  "id": "57fc94fed6251fd126aba6be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-10-11T07:30:06.512Z",
  "text": "there was an example at some point",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "the examples we had, I think, turned the covariance matrix into a sparse matrix by just calling <code>find_hessian()</code> and then calling <code>csc_matrix</code> on it and passing that to <code>NUTS(scaling=sparse_matrix)</code>",
  "id": "57fcb7d7d6251fd126ac21fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-11T09:58:47.657Z",
  "text": "the examples we had, I think, turned the covariance matrix into a sparse matrix by just calling `find_hessian()` and then calling `csc_matrix` on it and passing that to `NUTS(scaling=sparse_matrix)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that should still work",
  "id": "57fcb7da70fcb5db0c48bbe7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-11T09:58:50.286Z",
  "text": "that should still work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "or do you have sparse data?",
  "id": "57fcb7de68f560d80cf5ed41",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-11T09:58:54.196Z",
  "text": "or do you have sparse data?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/jonsedar",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/708325?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/708325?v=3&s=60",
   "displayName": "Jonathan Sedar",
   "gv": "3",
   "id": "54745f8fdb8155e6700d7f39",
   "url": "/jonsedar",
   "username": "jonsedar",
   "v": 2
  },
  "html": "<p>Hi guys, I caught up with <span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> last weekend at ODSC and he mentioned using ADVI stdev to set the scaling matrix for NUTS sampler - making it much more effective. </p><p>There\u2019s already something in the docs but I wanted to try it for myself, so created this Notebook: <a href=\"https://gist.github.com/jonsedar/cd4985bbfafdba61b3c8d077dd91f237\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/jonsedar/cd4985bbfafdba61b3c8d077dd91f237</a></p><p>Maybe it\u2019s useful for someone else too.</p>",
  "id": "57fce4154fde7203142998f0",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-10-11T13:07:33.424Z",
  "text": "Hi guys, I caught up with @twiecki last weekend at ODSC and he mentioned using ADVI stdev to set the scaling matrix for NUTS sampler - making it much more effective. \n\nThere\u2019s already something in the docs but I wanted to try it for myself, so created this Notebook: https://gist.github.com/jonsedar/cd4985bbfafdba61b3c8d077dd91f237\n\nMaybe it\u2019s useful for someone else too.",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/jonsedar/cd4985bbfafdba61b3c8d077dd91f237"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/dadaromeo",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5675732?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5675732?v=3&s=60",
   "displayName": "Dada Romeo",
   "gv": "3",
   "id": "5770f9b3c2f0db084a2020b3",
   "url": "/dadaromeo",
   "username": "dadaromeo",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> yes, I have a sparse data. Actually, I&#39;m trying to implement the Hierarchical Poisson Matrix Factorization (HPF) for recommendation and the data as you might guess is sparse. Now I&#39;m trying to see if I can control the sparsity by &quot;wishful&quot; prior setting \ud83d\ude06. Thanks.",
  "id": "57fd3c3284f1db0614a022c4",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-10-11T19:23:30.696Z",
  "text": "@twiecki yes, I have a sparse data. Actually, I'm trying to implement the Hierarchical Poisson Matrix Factorization (HPF) for recommendation and the data as you might guess is sparse. Now I'm trying to see if I can control the sparsity by \"wishful\" prior setting \ud83d\ude06. Thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yeah, you&#39;ll have to figure that out I&#39;m afraid, there&#39;s no example. do let me know if you manage to do it. it should be possible",
  "id": "57fdee48a7c618cd2603f39f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-10-12T08:03:20.288Z",
  "text": "yeah, you'll have to figure that out I'm afraid, there's no example. do let me know if you manage to do it. it should be possible",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ljwolf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2250995?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2250995?v=4&s=60",
   "displayName": "Levi John Wolf",
   "gv": "4",
   "id": "5560107c15522ed4b3e0d487",
   "url": "/ljwolf",
   "username": "ljwolf",
   "v": 36
  },
  "html": "I had similar needs with some spatial econometrics models with sparse covariance matrices.  I tried using <code>theano.sparse</code>in the likelihood and writing custom ops where required, and that worked okay. But, that was definitely not &quot;off the shelf&quot; ",
  "id": "57fe5441457ae29b71d27beb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-10-12T15:18:25.669Z",
  "text": "I had similar needs with some spatial econometrics models with sparse covariance matrices.  I tried using `theano.sparse`in the likelihood and writing custom ops where required, and that worked okay. But, that was definitely not \"off the shelf\" ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "good to hear that it worked",
  "id": "57fe5653b68c1ca566aca317",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-10-12T15:27:15.234Z",
  "text": "good to hear that it worked",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ljwolf\" class=\"mention\">@ljwolf</span> an example NB that shows its use would be a great contribution",
  "id": "57ff5df11cc4cda4564859ed",
  "issues": [],
  "mentions": [
   {
    "screenName": "ljwolf",
    "userId": "5560107c15522ed4b3e0d487",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-10-13T10:12:01.552Z",
  "text": "@ljwolf an example NB that shows its use would be a great contribution",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ljwolf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2250995?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2250995?v=4&s=60",
   "displayName": "Levi John Wolf",
   "gv": "4",
   "id": "5560107c15522ed4b3e0d487",
   "url": "/ljwolf",
   "username": "ljwolf",
   "v": 36
  },
  "html": "yes, definitely have been working on that. My particular needs tie in with Theano/pull/3959, a fast sparse log determinant op.",
  "id": "57ffc3381cc4cda4564a1100",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-10-13T17:24:08.121Z",
  "text": "yes, definitely have been working on that. My particular needs tie in with Theano/pull/3959, a fast sparse log determinant op.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "pymc2: Is there a nice way to get the trace of a pymc.Potential object?",
  "id": "5806d299759f6d2436c5dffe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-19T01:55:37.669Z",
  "text": "pymc2: Is there a nice way to get the trace of a pymc.Potential object?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "wrap it in a pm.Deterministic",
  "id": "5807015a8d2babbd0886a774",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-19T05:15:06.187Z",
  "text": "wrap it in a pm.Deterministic",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "oh pymc2, I don&#39;t know then",
  "id": "58070163b17b667961d48198",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-19T05:15:15.452Z",
  "text": "oh pymc2, I don't know then",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "No, a potential has no value, just a log-probability, so there is nothing to record to a trace. If what you are working with has a value and a log-probability, then it should probably be a stochastic. ",
  "id": "58074f75759f6d2436c7cf3a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-19T10:48:21.656Z",
  "text": "No, a potential has no value, just a log-probability, so there is nothing to record to a trace. If what you are working with has a value and a log-probability, then it should probably be a stochastic. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/majidaldo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=60",
   "displayName": "Majid alDosari",
   "gv": "4",
   "id": "57ebe54640f3a6eec067d81a",
   "url": "/majidaldo",
   "username": "majidaldo",
   "v": 5
  },
  "html": "re: docs. also i&#39;m not seeing docs on model methods. i&#39;m trying to find methods that will give me likelihood and model probability",
  "id": "580795f8759f6d2436c96193",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-19T15:49:12.761Z",
  "text": "re: docs. also i'm not seeing docs on model methods. i'm trying to find methods that will give me likelihood and model probability",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-10-20T03:30:38.981Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/hiraksarkar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/9473877?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/9473877?v=4&s=60",
   "displayName": "Hirak Sarkar",
   "gv": "4",
   "id": "553992ff15522ed4b3df7174",
   "url": "/hiraksarkar",
   "username": "hiraksarkar",
   "v": 11
  },
  "html": "hi all this might sound naive but I am having problem importing pymc3 in ubuntu server giving me this display related error <pre><code>Python <span class=\"number\">2.7</span>.<span class=\"number\">8</span> (<span class=\"keyword\">default</span>, Jun <span class=\"number\">18</span> <span class=\"number\">2015</span>, <span class=\"number\">18</span>:<span class=\"number\">54</span>:<span class=\"number\">19</span>)\n[GCC <span class=\"number\">4.9</span>.<span class=\"number\">1</span>] <span class=\"literal\">on</span> linux2\nType <span class=\"string\">\"help\"</span>, <span class=\"string\">\"copyright\"</span>, <span class=\"string\">\"credits\"</span> <span class=\"keyword\">or</span> <span class=\"string\">\"license\"</span> <span class=\"keyword\">for</span> more information.\n&gt;&gt;&gt; <span class=\"keyword\">import</span> pymc3 as pm\ngdk_mir_display_open\nFailed <span class=\"keyword\">to</span> connect <span class=\"keyword\">to</span> <span class=\"attribute\">Mir</span>: Failed <span class=\"keyword\">to</span> connect <span class=\"keyword\">to</span> server <span class=\"attribute\">socket</span>: No such file <span class=\"keyword\">or</span> directory\ngdk_mir_display_open\nFailed <span class=\"keyword\">to</span> connect <span class=\"keyword\">to</span> <span class=\"attribute\">Mir</span>: Failed <span class=\"keyword\">to</span> connect <span class=\"keyword\">to</span> server <span class=\"attribute\">socket</span>: No such file <span class=\"keyword\">or</span> directory\n\n(.:<span class=\"number\">23176</span>): Gdk-CRITICAL **: <span class=\"attribute\">gdk_cursor_new_for_display</span>: assertion <span class=\"string\">'GDK_IS_DISPLAY (display)'</span> failed\nTraceback (most recent call last):\n  File <span class=\"string\">\"&lt;stdin&gt;\"</span>, line <span class=\"number\">1</span>, <span class=\"keyword\">in</span> &lt;<span class=\"built_in\">module</span>&gt;\n  File <span class=\"string\">\"/usr/local/lib/python2.7/dist-packages/pymc3/__init__.py\"</span>, line <span class=\"number\">21</span>, <span class=\"keyword\">in</span> &lt;<span class=\"built_in\">module</span>&gt;\n    <span class=\"keyword\">from</span> .plots <span class=\"keyword\">import</span> *\n  File <span class=\"string\">\"/usr/local/lib/python2.7/dist-packages/pymc3/plots.py\"</span>, line <span class=\"number\">4</span>, <span class=\"keyword\">in</span> &lt;<span class=\"built_in\">module</span>&gt;\n    <span class=\"keyword\">import</span> matplotlib.pyplot as plt\n  File <span class=\"string\">\"/usr/local/lib/python2.7/dist-packages/matplotlib/pyplot.py\"</span>, line <span class=\"number\">114</span>, <span class=\"keyword\">in</span> &lt;<span class=\"built_in\">module</span>&gt;\n    _backend_mod, new_figure_manager, draw_if_interactive, _show = pylab_setup()\n  File <span class=\"string\">\"/usr/local/lib/python2.7/dist-packages/matplotlib/backends/__init__.py\"</span>, line <span class=\"number\">32</span>, <span class=\"keyword\">in</span> pylab_setup\n    globals(),locals(),[backend_name],<span class=\"number\">0</span>)\n  File <span class=\"string\">\"/usr/local/lib/python2.7/dist-packages/matplotlib/backends/backend_gtk3agg.py\"</span>, line <span class=\"number\">11</span>, <span class=\"keyword\">in</span> &lt;<span class=\"built_in\">module</span>&gt;\n    <span class=\"keyword\">from</span> . <span class=\"keyword\">import</span> backend_gtk3\n  File <span class=\"string\">\"/usr/local/lib/python2.7/dist-packages/matplotlib/backends/backend_gtk3.py\"</span>, line <span class=\"number\">58</span>, <span class=\"keyword\">in</span> &lt;<span class=\"built_in\">module</span>&gt;\n    cursors.MOVE          : Gdk.Cursor.<span class=\"keyword\">new</span>(Gdk.CursorType.FLEUR),\n<span class=\"attribute\">TypeError</span>: constructor returned NULL\n&gt;&gt;&gt;</code></pre>",
  "id": "58083a39b827179842db144c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-20T03:30:01.303Z",
  "text": "hi all this might sound naive but I am having problem importing pymc3 in ubuntu server giving me this display related error \n```\nPython 2.7.8 (default, Jun 18 2015, 18:54:19)\n[GCC 4.9.1] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import pymc3 as pm\ngdk_mir_display_open\nFailed to connect to Mir: Failed to connect to server socket: No such file or directory\ngdk_mir_display_open\nFailed to connect to Mir: Failed to connect to server socket: No such file or directory\n\n(.:23176): Gdk-CRITICAL **: gdk_cursor_new_for_display: assertion 'GDK_IS_DISPLAY (display)' failed\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python2.7/dist-packages/pymc3/__init__.py\", line 21, in <module>\n    from .plots import *\n  File \"/usr/local/lib/python2.7/dist-packages/pymc3/plots.py\", line 4, in <module>\n    import matplotlib.pyplot as plt\n  File \"/usr/local/lib/python2.7/dist-packages/matplotlib/pyplot.py\", line 114, in <module>\n    _backend_mod, new_figure_manager, draw_if_interactive, _show = pylab_setup()\n  File \"/usr/local/lib/python2.7/dist-packages/matplotlib/backends/__init__.py\", line 32, in pylab_setup\n    globals(),locals(),[backend_name],0)\n  File \"/usr/local/lib/python2.7/dist-packages/matplotlib/backends/backend_gtk3agg.py\", line 11, in <module>\n    from . import backend_gtk3\n  File \"/usr/local/lib/python2.7/dist-packages/matplotlib/backends/backend_gtk3.py\", line 58, in <module>\n    cursors.MOVE          : Gdk.Cursor.new(Gdk.CursorType.FLEUR),\nTypeError: constructor returned NULL\n>>>\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/hiraksarkar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/9473877?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/9473877?v=4&s=60",
   "displayName": "Hirak Sarkar",
   "gv": "4",
   "id": "553992ff15522ed4b3df7174",
   "url": "/hiraksarkar",
   "username": "hiraksarkar",
   "v": 11
  },
  "html": "any work around  ?",
  "id": "58083a7c80020cc608f82ca0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-20T03:31:08.136Z",
  "text": "any work around  ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ljwolf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2250995?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2250995?v=4&s=60",
   "displayName": "Levi John Wolf",
   "gv": "4",
   "id": "5560107c15522ed4b3e0d487",
   "url": "/ljwolf",
   "username": "ljwolf",
   "v": 36
  },
  "html": "that looks like a failure in the matplotlib backend. One thing might be to change your matplotlib backend to something like <code>Agg</code>. If you&#39;re running on ubuntu server without xwindow forwarding, that might work. ",
  "id": "58085040759f6d2436cc5826",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-20T05:04:00.221Z",
  "text": "that looks like a failure in the matplotlib backend. One thing might be to change your matplotlib backend to something like `Agg`. If you're running on ubuntu server without xwindow forwarding, that might work. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ljwolf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2250995?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2250995?v=4&s=60",
   "displayName": "Levi John Wolf",
   "gv": "4",
   "id": "5560107c15522ed4b3e0d487",
   "url": "/ljwolf",
   "username": "ljwolf",
   "v": 36
  },
  "html": "<a href=\"http://matplotlib.org/users/customizing.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://matplotlib.org/users/customizing.html</a>",
  "id": "5808505980020cc608f8792b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-20T05:04:25.509Z",
  "text": "http://matplotlib.org/users/customizing.html",
  "unread": false,
  "urls": [
   {
    "url": "http://matplotlib.org/users/customizing.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/hiraksarkar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/9473877?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/9473877?v=4&s=60",
   "displayName": "Hirak Sarkar",
   "gv": "4",
   "id": "553992ff15522ed4b3df7174",
   "url": "/hiraksarkar",
   "username": "hiraksarkar",
   "v": 11
  },
  "html": "cool ... thanks ! this seems to solve the import error ",
  "id": "580853812189c68f4202dd23",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-20T05:17:53.735Z",
  "text": "cool ... thanks ! this seems to solve the import error ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/majidaldo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=60",
   "displayName": "Majid alDosari",
   "gv": "4",
   "id": "57ebe54640f3a6eec067d81a",
   "url": "/majidaldo",
   "username": "majidaldo",
   "v": 5
  },
  "html": "so this isn&#39;t documented <a href=\"http://stats.stackexchange.com/questions/161082/bayesian-model-selection-in-pymc3\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://stats.stackexchange.com/questions/161082/bayesian-model-selection-in-pymc3</a>",
  "id": "5808de5236d64226368d264c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-20T15:10:10.524Z",
  "text": "so this isn't documented http://stats.stackexchange.com/questions/161082/bayesian-model-selection-in-pymc3",
  "unread": false,
  "urls": [
   {
    "url": "http://stats.stackexchange.com/questions/161082/bayesian-model-selection-in-pymc3"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/majidaldo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=60",
   "displayName": "Majid alDosari",
   "gv": "4",
   "id": "57ebe54640f3a6eec067d81a",
   "url": "/majidaldo",
   "username": "majidaldo",
   "v": 5
  },
  "html": "is there a way to access logp of a rv in a model?",
  "id": "5808de69b17b667961dc99d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-20T15:10:33.335Z",
  "text": "is there a way to access logp of a rv in a model?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/richardotis",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6405510?v=4&s=60",
   "displayName": "Richard Otis",
   "gv": "4",
   "id": "55a137c15e0d51bd787b0b26",
   "url": "/richardotis",
   "username": "richardotis",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> Thanks for the response. I&#39;m trying to do nonlinear least squares. My objective function prototype looks like <code>error(arg1=pymc.Uniform(), arg2=pymc.Uniform(), ...)</code> -&gt; float, where the float result value is <code>-sum([x**2 for x in all_errors])</code>. I have been wrapping <code>error</code> in a <code>pymc.potential</code>. Is there a better way? I would like to know the value of the error at every MCMC step. Using <code>pymc.stochastic</code> didn&#39;t sound right since the error is a deterministic function of the input arguments, and using <code>pymc.deterministic</code> didn&#39;t seem to work.",
  "id": "5808e75636d64226368d5163",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-10-20T15:48:38.372Z",
  "text": "@fonnesbeck Thanks for the response. I'm trying to do nonlinear least squares. My objective function prototype looks like `error(arg1=pymc.Uniform(), arg2=pymc.Uniform(), ...)` -> float, where the float result value is `-sum([x**2 for x in all_errors])`. I have been wrapping `error` in a `pymc.potential`. Is there a better way? I would like to know the value of the error at every MCMC step. Using `pymc.stochastic` didn't sound right since the error is a deterministic function of the input arguments, and using `pymc.deterministic` didn't seem to work.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/majidaldo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=60",
   "displayName": "Majid alDosari",
   "gv": "4",
   "id": "57ebe54640f3a6eec067d81a",
   "url": "/majidaldo",
   "username": "majidaldo",
   "v": 5
  },
  "html": "why are documentation modules part of requirements.txt?",
  "id": "580e8d5a52bb2d111d048275",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-10-24T22:38:18.397Z",
  "text": "why are documentation modules part of requirements.txt?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/majidaldo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=60",
   "displayName": "Majid alDosari",
   "gv": "4",
   "id": "57ebe54640f3a6eec067d81a",
   "url": "/majidaldo",
   "username": "majidaldo",
   "v": 5
  },
  "html": "...err doc. packages",
  "id": "580e8d7be4e68c5058b1c450",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-10-24T22:38:51.264Z",
  "text": "...err doc. packages",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-10-25T08:22:17.233Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "This <code>pm.sample(1000,  njobs=4)</code> used to return 4 chains, each one starting from a different point. Now it returns 4 identical chains, unless something like <code>random_seed=None</code>  or <code>random_seed=[1,2,3,4]</code> is specified. Is this the new intended behavior or a bug?",
  "id": "580f162652bb2d111d06445c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-10-25T08:21:58.212Z",
  "text": "This ```pm.sample(1000,  njobs=4)``` used to return 4 chains, each one starting from a different point. Now it returns 4 identical chains, unless something like ```random_seed=None```  or ```random_seed=[1,2,3,4]``` is specified. Is this the new intended behavior or a bug?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"aloctavodia\" class=\"mention\">@aloctavodia</span> that&#39;s not intended. can you open an issue?",
  "id": "580f5a825a1cfa016e470836",
  "issues": [],
  "mentions": [
   {
    "screenName": "aloctavodia",
    "userId": "54314cd8163965c9bc208e0f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-10-25T13:13:38.861Z",
  "text": "@aloctavodia that's not intended. can you open an issue?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "it&#39;s a side-effect of not setting the seed by default",
  "id": "580f5aa25a1cfa016e470895",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-10-25T13:14:10.974Z",
  "text": "it's a side-effect of not setting the seed by default",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "but it does not make sense for parallel sampling. I wonder why those different processes have the same seed tbw though",
  "id": "580f5ab85a1cfa016e4708d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-25T13:14:32.915Z",
  "text": "but it does not make sense for parallel sampling. I wonder why those different processes have the same seed tbw though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> I will do it ASAP! ",
  "id": "580f6bf3482c168b22b5f861",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-25T14:28:03.567Z",
  "text": "@twiecki I will do it ASAP! ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sebp",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/74460?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/74460?v=4&s=60",
   "displayName": "Sebastian P\u00f6lsterl",
   "gv": "4",
   "id": "580fade3d73408ce4f30cc23",
   "url": "/sebp",
   "username": "sebp",
   "v": 3
  },
  "html": "Hi! I&#39;m trying to port code for robust Bayesian correlation regression from PyMC2 to PyMC3 but get quite different results. I&#39;d appreciate if someone could have a look at <a href=\"http://stackoverflow.com/questions/40126809/robust-bayesian-correlation-with-pymc3\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://stackoverflow.com/questions/40126809/robust-bayesian-correlation-with-pymc3</a> and see whether I&#39;m doing something wrong.",
  "id": "580fae419235851a45c87611",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-10-25T19:10:57.979Z",
  "text": "Hi! I'm trying to port code for robust Bayesian correlation regression from PyMC2 to PyMC3 but get quite different results. I'd appreciate if someone could have a look at http://stackoverflow.com/questions/40126809/robust-bayesian-correlation-with-pymc3 and see whether I'm doing something wrong.",
  "unread": false,
  "urls": [
   {
    "url": "http://stackoverflow.com/questions/40126809/robust-bayesian-correlation-with-pymc3"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/jonsedar",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/708325?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/708325?v=3&s=60",
   "displayName": "Jonathan Sedar",
   "gv": "3",
   "id": "54745f8fdb8155e6700d7f39",
   "url": "/jonsedar",
   "username": "jonsedar",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"aloctavodia\" class=\"mention\">@aloctavodia</span> <span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> Gael Veroquax mentioned something in passing about joblib not using different random seeds by default - possibly a bug/ feature of joblib?",
  "id": "5812ee587b15d16e55b8a6ad",
  "issues": [],
  "mentions": [
   {
    "screenName": "aloctavodia",
    "userId": "54314cd8163965c9bc208e0f",
    "userIds": []
   },
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-28T06:21:12.774Z",
  "text": "@aloctavodia @twiecki Gael Veroquax mentioned something in passing about joblib not using different random seeds by default - possibly a bug/ feature of joblib?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-10-30T19:59:03.752Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> me again with a feature/bug question. This two statements used to give the same result :</p><pre><code><span class=\"tag\">a</span> = pm.<span class=\"function\"><span class=\"title\">Normal</span><span class=\"params\">(<span class=\"string\">'a'</span>, mu=<span class=\"number\">0</span>, sd=<span class=\"number\">1</span>)</span></span> + <span class=\"number\">10</span>\n<span class=\"tag\">b</span> = pm.<span class=\"function\"><span class=\"title\">Deterministic</span><span class=\"params\">(<span class=\"string\">'b'</span>, pm.Normal(<span class=\"string\">'b_'</span>, mu=<span class=\"number\">0</span>, sd=<span class=\"number\">1</span>)</span></span> + <span class=\"number\">10</span>) </code></pre><p>but now a is centered at 0 and b at 10 </p>",
  "id": "581650f07b15d16e55c5ff7f",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-10-30T19:58:40.719Z",
  "text": "@twiecki me again with a feature/bug question. This two statements used to give the same result :\n\n\n    a = pm.Normal('a', mu=0, sd=1) + 10\n    b = pm.Deterministic('b', pm.Normal('b_', mu=0, sd=1) + 10) \n\n\nbut now a is centered at 0 and b at 10 ",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jonsedar\" class=\"mention\">@jonsedar</span> Thanks for the info, at least the issue I reported was already solved. ",
  "id": "58165186806316005dd809ef",
  "issues": [],
  "mentions": [
   {
    "screenName": "jonsedar",
    "userId": "54745f8fdb8155e6700d7f39",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-10-30T20:01:10.219Z",
  "text": "@jonsedar Thanks for the info, at least the issue I reported was already solved. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"aloctavodia\" class=\"mention\">@aloctavodia</span> can you give an example of code that shows those different centers? i think i know what may be happening.",
  "id": "58166bf883a2008d22eddcb0",
  "issues": [],
  "mentions": [
   {
    "screenName": "aloctavodia",
    "userId": "54314cd8163965c9bc208e0f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-30T21:54:00.755Z",
  "text": "@aloctavodia can you give an example of code that shows those different centers? i think i know what may be happening.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-10-31T05:49:41.092Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "<pre><code>with pm.<span class=\"function\"><span class=\"title\">Model</span><span class=\"params\">()</span></span> as model:\n    <span class=\"tag\">a</span> = pm.<span class=\"function\"><span class=\"title\">Normal</span><span class=\"params\">(<span class=\"string\">'a'</span>, mu=<span class=\"number\">0</span>, sd=<span class=\"number\">1</span>)</span></span> + <span class=\"number\">10</span>\n    <span class=\"tag\">b</span> = pm.<span class=\"function\"><span class=\"title\">Deterministic</span><span class=\"params\">(<span class=\"string\">'b'</span>, pm.Normal(<span class=\"string\">'b_'</span>, mu=<span class=\"number\">0</span>, sd=<span class=\"number\">1</span>)</span></span> + <span class=\"number\">10</span>)\n    trace = pm.<span class=\"function\"><span class=\"title\">sample</span><span class=\"params\">(<span class=\"number\">1000</span>)</span></span></code></pre>",
  "id": "5816db5f7b15d16e55c81ae0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-31T05:49:19.081Z",
  "text": "```  \nwith pm.Model() as model:\n    a = pm.Normal('a', mu=0, sd=1) + 10\n    b = pm.Deterministic('b', pm.Normal('b_', mu=0, sd=1) + 10)\n    trace = pm.sample(1000)\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "<a href=\"https://files.gitter.im/pymc-devs/pymc/KdOL/index.png\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/pymc-devs/pymc/KdOL/thumb/index.png\" alt=\"index.png\" rel=\"nofollow\"></a>",
  "id": "5816dcbf482c168b22d36e3f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-31T05:55:11.475Z",
  "text": "[![index.png](https://files.gitter.im/pymc-devs/pymc/KdOL/thumb/index.png)](https://files.gitter.im/pymc-devs/pymc/KdOL/index.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/KdOL/thumb/index.png"
   },
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/KdOL/index.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "yes, i think that has been the expected behavior for some time. how long ago did they give the same result? can you point me to a commit where that happens?",
  "id": "58173f705a1cfa016e6713e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-31T12:56:16.670Z",
  "text": "yes, i think that has been the expected behavior for some time. how long ago did they give the same result? can you point me to a commit where that happens?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-10-31T13:04:32.395Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": " I always use the version with the deterministic variable. So I am not really sure when this stops working, I think this used to work like 8 months ago (I was giving a course) but I am not sure.  If this is the expected behavior the <a href=\"https://pymc-devs.github.io/pymc3/notebooks/BEST.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">BEST</a> example should be fixed.",
  "id": "5817414883a2008d22f14eb0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-31T13:04:08.384Z",
  "text": " I always use the version with the deterministic variable. So I am not really sure when this stops working, I think this used to work like 8 months ago (I was giving a course) but I am not sure.  If this is the expected behavior the [BEST](https://pymc-devs.github.io/pymc3/notebooks/BEST.html) example should be fixed.",
  "unread": false,
  "urls": [
   {
    "url": "https://pymc-devs.github.io/pymc3/notebooks/BEST.html"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "I think the BEST example is working as expected, since the emphasis is not really on interpreting <code>\u03bd_minus_one</code>.  The the correct (shifted) value of <code>\u03bd</code> is being used for sampling.  The difference you have pointed out only affects the value that gets recorded in the trace.",
  "id": "5817438c806316005ddbfe12",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-31T13:13:48.100Z",
  "text": "I think the BEST example is working as expected, since the emphasis is not really on interpreting `\u03bd_minus_one`.  The the correct (shifted) value of `\u03bd` is being used for sampling.  The difference you have pointed out only affects the value that gets recorded in the trace.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "<pre><code>SEED = <span class=\"number\">1234567890</span>\n\nwith pm.<span class=\"function\"><span class=\"title\">Model</span><span class=\"params\">()</span></span> as non_det_model:\n    <span class=\"tag\">a</span> = pm.<span class=\"function\"><span class=\"title\">Normal</span><span class=\"params\">(<span class=\"string\">'a'</span>, mu=<span class=\"number\">0</span>, sd=<span class=\"number\">1</span>)</span></span> + <span class=\"number\">10</span>\n    non_det_trace = pm.<span class=\"function\"><span class=\"title\">sample</span><span class=\"params\">(<span class=\"number\">1000</span>, random_seed=SEED)</span></span>\n\nwith pm.<span class=\"function\"><span class=\"title\">Model</span><span class=\"params\">()</span></span> as det_model:\n    <span class=\"tag\">b</span> = pm.<span class=\"function\"><span class=\"title\">Deterministic</span><span class=\"params\">(<span class=\"string\">'b'</span>, pm.Normal(<span class=\"string\">'b_'</span>, mu=<span class=\"number\">0</span>, sd=<span class=\"number\">1</span>)</span></span> + <span class=\"number\">10</span>)\n    det_trace = pm.<span class=\"function\"><span class=\"title\">sample</span><span class=\"params\">(<span class=\"number\">1000</span>, random_seed=SEED)</span></span>\n\nassert (det_trace[<span class=\"string\">'b'</span>] - non_det_trace[<span class=\"string\">'a'</span>] == <span class=\"number\">10</span>.).<span class=\"function\"><span class=\"title\">all</span><span class=\"params\">()</span></span></code></pre>",
  "id": "5817442a806316005ddc0134",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-31T13:16:26.435Z",
  "text": "```\nSEED = 1234567890\n\nwith pm.Model() as non_det_model:\n    a = pm.Normal('a', mu=0, sd=1) + 10\n    non_det_trace = pm.sample(1000, random_seed=SEED)\n\nwith pm.Model() as det_model:\n    b = pm.Deterministic('b', pm.Normal('b_', mu=0, sd=1) + 10)\n    det_trace = pm.sample(1000, random_seed=SEED)\n    \nassert (det_trace['b'] - non_det_trace['a'] == 10.).all()\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "the assertion should pass",
  "id": "58174438c3569a036e3a7a27",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-31T13:16:40.499Z",
  "text": "the assertion should pass",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "So the value is correctly added to the variable but not recorded in the trace. That could be a little bit confusing.",
  "id": "5817446083a2008d22f164ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-31T13:17:20.782Z",
  "text": "So the value is correctly added to the variable but not recorded in the trace. That could be a little bit confusing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "yes, it is a bit subtle, but i would be hesitant to add a warning whenever there is a transformed RV that is not wrapped in <code>Deterministic</code>, as that will cause <em>a lot</em> of noise",
  "id": "581744988ed1c0ff5c49a493",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-31T13:18:16.947Z",
  "text": "yes, it is a bit subtle, but i would be hesitant to add a warning whenever there is a transformed RV that is not wrapped in `Deterministic`, as that will cause _a lot_ of noise",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "unless we defined several warning levels and only did that on the more verbose ones",
  "id": "581744d25a1cfa016e673364",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-31T13:19:14.991Z",
  "text": "unless we defined several warning levels and only did that on the more verbose ones",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "I agree about the warnings. Still unsure of the introductory example, even when it works is still confusing to do not get the results in the trace. Because is a introductory example maybe using a <code>Deterministic</code> is a better choice.  Also the recent warnings about using non-positive values will not work unless the modifications are wrapped as a <code>Deterministic</code> variable... Anyway, thanks for the clarification.",
  "id": "58174b727b15d16e55ca2d24",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-10-31T13:47:30.897Z",
  "text": "I agree about the warnings. Still unsure of the introductory example, even when it works is still confusing to do not get the results in the trace. Because is a introductory example maybe using a `Deterministic` is a better choice.  Also the recent warnings about using non-positive values will not work unless the modifications are wrapped as a `Deterministic` variable... Anyway, thanks for the clarification.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/springcoil",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/983944?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/983944?v=4&s=60",
   "displayName": "Peadar Coyle",
   "gv": "4",
   "id": "55cd15780fc9f982bead5155",
   "url": "/springcoil",
   "username": "springcoil",
   "v": 9
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"majidaldo\" class=\"mention\">@majidaldo</span> What isn&#39;t documented? ",
  "id": "581752c6482c168b22d5ab28",
  "issues": [],
  "mentions": [
   {
    "screenName": "majidaldo",
    "userId": "57ebe54640f3a6eec067d81a",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2016-10-31T14:18:46.328Z",
  "text": "@majidaldo What isn't documented? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/springcoil",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/983944?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/983944?v=4&s=60",
   "displayName": "Peadar Coyle",
   "gv": "4",
   "id": "55cd15780fc9f982bead5155",
   "url": "/springcoil",
   "username": "springcoil",
   "v": 9
  },
  "html": "Has anyone seen this paper? <a href=\"https://arxiv.org/pdf/1610.09033v1.pdf\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://arxiv.org/pdf/1610.09033v1.pdf</a>",
  "id": "5817534a8ed1c0ff5c49fd92",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-10-31T14:20:58.516Z",
  "text": "Has anyone seen this paper? https://arxiv.org/pdf/1610.09033v1.pdf",
  "unread": false,
  "urls": [
   {
    "url": "https://arxiv.org/pdf/1610.09033v1.pdf"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "No, thanks for the link!",
  "id": "58175500c3569a036e3ae3c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-10-31T14:28:16.331Z",
  "text": "No, thanks for the link!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"springcoil\" class=\"mention\">@springcoil</span> read that last night, really interesting",
  "id": "5817558bc3569a036e3ae6fe",
  "issues": [],
  "mentions": [
   {
    "screenName": "springcoil",
    "userId": "55cd15780fc9f982bead5155",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-10-31T14:30:35.937Z",
  "text": "@springcoil read that last night, really interesting",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/springcoil",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/983944?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/983944?v=4&s=60",
   "displayName": "Peadar Coyle",
   "gv": "4",
   "id": "55cd15780fc9f982bead5155",
   "url": "/springcoil",
   "username": "springcoil",
   "v": 9
  },
  "html": "I&#39;ve not read it yet, but really interesting. No idea how this would be implemented in PyMC3 though",
  "id": "58175711806316005ddc7cb9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-10-31T14:37:05.476Z",
  "text": "I've not read it yet, but really interesting. No idea how this would be implemented in PyMC3 though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/springcoil",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/983944?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/983944?v=4&s=60",
   "displayName": "Peadar Coyle",
   "gv": "4",
   "id": "55cd15780fc9f982bead5155",
   "url": "/springcoil",
   "username": "springcoil",
   "v": 9
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> that bug you found in discrete_MAP is really weird... ",
  "id": "58175723c3569a036e3af1d6",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-10-31T14:37:23.904Z",
  "text": "@fonnesbeck that bug you found in discrete_MAP is really weird... ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Can you replicate it?",
  "id": "581759b40e25dbfa117f2070",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-10-31T14:48:20.490Z",
  "text": "Can you replicate it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/springcoil",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/983944?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/983944?v=4&s=60",
   "displayName": "Peadar Coyle",
   "gv": "4",
   "id": "55cd15780fc9f982bead5155",
   "url": "/springcoil",
   "username": "springcoil",
   "v": 9
  },
  "html": "Yeah I&#39;ve replicated it",
  "id": "58175caa806316005ddca770",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-10-31T15:00:58.288Z",
  "text": "Yeah I've replicated it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/springcoil",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/983944?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/983944?v=4&s=60",
   "displayName": "Peadar Coyle",
   "gv": "4",
   "id": "55cd15780fc9f982bead5155",
   "url": "/springcoil",
   "username": "springcoil",
   "v": 9
  },
  "html": "With your example",
  "id": "58175cb8482c168b22d5f60d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-10-31T15:01:12.447Z",
  "text": "With your example",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/springcoil",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/983944?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/983944?v=4&s=60",
   "displayName": "Peadar Coyle",
   "gv": "4",
   "id": "55cd15780fc9f982bead5155",
   "url": "/springcoil",
   "username": "springcoil",
   "v": 9
  },
  "html": "Do you want to know what version of PyMC3 and Theano I&#39;m using etc?",
  "id": "58175cc8806316005ddca813",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-10-31T15:01:28.724Z",
  "text": "Do you want to know what version of PyMC3 and Theano I'm using etc?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "<a href=\"http://andrewgelman.com/2016/11/02/some-modeling-and-computational-ideas-to-look-into/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://andrewgelman.com/2016/11/02/some-modeling-and-computational-ideas-to-look-into/</a>",
  "id": "581b364431c5cbef43aefe8f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-11-03T13:06:12.018Z",
  "text": "http://andrewgelman.com/2016/11/02/some-modeling-and-computational-ideas-to-look-into/",
  "unread": false,
  "urls": [
   {
    "url": "http://andrewgelman.com/2016/11/02/some-modeling-and-computational-ideas-to-look-into/"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2016-11-03T13:07:16.958Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "always interesting to see what the stan folks are thinking about",
  "id": "581b366545c9e3eb43f23561",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-11-03T13:06:45.035Z",
  "text": "always interesting to see what the stan folks are thinking about",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/jonsedar",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/708325?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/708325?v=3&s=60",
   "displayName": "Jonathan Sedar",
   "gv": "3",
   "id": "54745f8fdb8155e6700d7f39",
   "url": "/jonsedar",
   "username": "jonsedar",
   "v": 2
  },
  "html": "<p>Is anyone else here using PyMC3 on OSX? Something changed between RC1 and RC2 that means NUTS fails to initialise at all on e.g. <a href=\"https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/NUTS_scaling_using_ADVI.ipynb\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/NUTS_scaling_using_ADVI.ipynb</a></p><p>I\u2019m having trouble nailing down just what\u2019s causing it, if there\u2019s others finding weird behaviours let me know and I\u2019ll go digging. Until then, just reverting to RC1</p>",
  "id": "581f194631c5cbef43c10f45",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-11-06T11:51:34.619Z",
  "text": "Is anyone else here using PyMC3 on OSX? Something changed between RC1 and RC2 that means NUTS fails to initialise at all on e.g. https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/NUTS_scaling_using_ADVI.ipynb\n\nI\u2019m having trouble nailing down just what\u2019s causing it, if there\u2019s others finding weird behaviours let me know and I\u2019ll go digging. Until then, just reverting to RC1",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/NUTS_scaling_using_ADVI.ipynb"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/springcoil",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/983944?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/983944?v=4&s=60",
   "displayName": "Peadar Coyle",
   "gv": "4",
   "id": "55cd15780fc9f982bead5155",
   "url": "/springcoil",
   "username": "springcoil",
   "v": 9
  },
  "html": "That&#39;s a weird bug Jon",
  "id": "581f5f352d4796175f4f7e64",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-11-06T16:49:57.144Z",
  "text": "That's a weird bug Jon",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/springcoil",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/983944?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/983944?v=4&s=60",
   "displayName": "Peadar Coyle",
   "gv": "4",
   "id": "55cd15780fc9f982bead5155",
   "url": "/springcoil",
   "username": "springcoil",
   "v": 9
  },
  "html": "Might be worth adding it to <span data-link-type=\"issue\" data-issue=\"1458\" data-issue-repo=\"pymc-devs/pymc3\" class=\"issue\">pymc-devs/pymc3#1458</span> ",
  "id": "581f5f9431c5cbef43c24502",
  "issues": [
   {
    "number": "1458",
    "repo": "pymc-devs/pymc3"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-11-06T16:51:32.516Z",
  "text": "Might be worth adding it to https://github.com/pymc-devs/pymc3/pull/1458 ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Hi! Don&#39;t know if it is a bug or feature. I cannot have 2 linear components / glms in one Model. What should I do?",
  "id": "5821042ce462097a301ec793",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-11-07T22:46:04.886Z",
  "text": "Hi! Don't know if it is a bug or feature. I cannot have 2 linear components / glms in one Model. What should I do?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Default names overlap:)",
  "id": "5821044fe462097a301ec7fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-11-07T22:46:39.473Z",
  "text": "Default names overlap:)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Is it possible to change a prior over specific variable after it is already set up? It is needed for iterative procedure with reweighting priors before every iteration ",
  "id": "5821e3f2c2f2cf7275e5d005",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-11-08T14:40:50.573Z",
  "text": "Is it possible to change a prior over specific variable after it is already set up? It is needed for iterative procedure with reweighting priors before every iteration ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "hmm, I can&#39;t think of a way how. maybe by creating a custom prior that switches based on what you set via a shared theano var",
  "id": "582707416cb720763068e809",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-11-12T12:12:49.538Z",
  "text": "hmm, I can't think of a way how. maybe by creating a custom prior that switches based on what you set via a shared theano var",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-11-14T18:06:35.972Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "congrats on the quantopian raise <span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> !",
  "id": "5829fd2731c5cbef43f5d5de",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2016-11-14T18:06:31.078Z",
  "text": "congrats on the quantopian raise @twiecki !",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AustinRochford_twitter\" class=\"mention\">@AustinRochford_twitter</span> hey thanks!",
  "id": "5829fd55df5ae966455767f0",
  "issues": [],
  "mentions": [
   {
    "screenName": "AustinRochford_twitter",
    "userId": "58166bbcd73408ce4f31e2f7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2016-11-14T18:07:17.343Z",
  "text": "@AustinRochford_twitter hey thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/kuza55",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/387986?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/387986?v=3&s=60",
   "displayName": "kuza55",
   "gv": "3",
   "id": "5696bb5c16b6c7089cc26bd8",
   "url": "/kuza55",
   "username": "kuza55",
   "v": 6
  },
  "html": "is there a good way to have a model where the size of a variable is drawn from a distribution?",
  "id": "582be646715933bd5573961a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-11-16T04:53:26.927Z",
  "text": "is there a good way to have a model where the size of a variable is drawn from a distribution?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/darribas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/417363?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/417363?v=4&s=60",
   "displayName": "Dani Arribas-Bel",
   "gv": "4",
   "id": "559d402c15522ed4b3e3a6a4",
   "url": "/darribas",
   "username": "darribas",
   "v": 24
  },
  "html": "Hello, quick question: I&#39;m setting up a multilevel linear regression with varying intercepts and I want to make those random effects vary by a label I have for observations. I&#39;m currently getting it to work by converting those labels (strings) into ints, but I would ideally want to not have to do this as it&#39;d streamline the rest of the code quite a bit (and it&#39;d make me much more confident about results). Is there a way of doing this?",
  "id": "582c0ee0c2f2cf72751928d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-11-16T07:46:40.509Z",
  "text": "Hello, quick question: I'm setting up a multilevel linear regression with varying intercepts and I want to make those random effects vary by a label I have for observations. I'm currently getting it to work by converting those labels (strings) into ints, but I would ideally want to not have to do this as it'd streamline the rest of the code quite a bit (and it'd make me much more confident about results). Is there a way of doing this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/darribas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/417363?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/417363?v=4&s=60",
   "displayName": "Dani Arribas-Bel",
   "gv": "4",
   "id": "559d402c15522ed4b3e3a6a4",
   "url": "/darribas",
   "username": "darribas",
   "v": 24
  },
  "html": "Thanks a lot in advance!",
  "id": "582c0ee6c2f2cf72751928e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-11-16T07:46:46.411Z",
  "text": "Thanks a lot in advance!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kuza55\" class=\"mention\">@kuza55</span> I&#39;m afraid not, but look at <a href=\"http://pymc-devs.github.io/pymc3/notebooks/dp_mix.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://pymc-devs.github.io/pymc3/notebooks/dp_mix.html</a> for a version of that",
  "id": "582c0f1b65485ebc67a0c6a5",
  "issues": [],
  "mentions": [
   {
    "screenName": "kuza55",
    "userId": "5696bb5c16b6c7089cc26bd8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-11-16T07:47:39.639Z",
  "text": "@kuza55 I'm afraid not, but look at http://pymc-devs.github.io/pymc3/notebooks/dp_mix.html for a version of that",
  "unread": false,
  "urls": [
   {
    "url": "http://pymc-devs.github.io/pymc3/notebooks/dp_mix.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"darribas\" class=\"mention\">@darribas</span> so have a theano vector that&#39;s indexed not by integer but by string? not sure that exists, I don&#39;t thinks o",
  "id": "582c0f4fbd2f135f1a23e780",
  "issues": [],
  "mentions": [
   {
    "screenName": "darribas",
    "userId": "559d402c15522ed4b3e3a6a4",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-11-16T07:48:31.306Z",
  "text": "@darribas so have a theano vector that's indexed not by integer but by string? not sure that exists, I don't thinks o",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/darribas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/417363?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/417363?v=4&s=60",
   "displayName": "Dani Arribas-Bel",
   "gv": "4",
   "id": "559d402c15522ed4b3e3a6a4",
   "url": "/darribas",
   "username": "darribas",
   "v": 24
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> Yes, something like a <code>DataFrame</code>... thanks anyway!",
  "id": "582c1695c2f2cf7275194e7e",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-11-16T08:19:33.254Z",
  "text": "@twiecki Yes, something like a `DataFrame`... thanks anyway!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/kuza55",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/387986?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/387986?v=3&s=60",
   "displayName": "kuza55",
   "gv": "3",
   "id": "5696bb5c16b6c7089cc26bd8",
   "url": "/kuza55",
   "username": "kuza55",
   "v": 6
  },
  "html": "do you guys see much speedup from running pymc3 on a GPU?",
  "id": "582c6ed822673e7c6b13cf89",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-11-16T14:36:08.829Z",
  "text": "do you guys see much speedup from running pymc3 on a GPU?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kuza55\" class=\"mention\">@kuza55</span> it&#39;s not utilizing GPU most likely",
  "id": "582c6ef3e462097a3058ab21",
  "issues": [],
  "mentions": [
   {
    "screenName": "kuza55",
    "userId": "5696bb5c16b6c7089cc26bd8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-11-16T14:36:35.061Z",
  "text": "@kuza55 it's not utilizing GPU most likely",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "are you using master?",
  "id": "582c6ef6df5ae96645656a95",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-11-16T14:36:38.055Z",
  "text": "are you using master?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/kuza55",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/387986?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/387986?v=3&s=60",
   "displayName": "kuza55",
   "gv": "3",
   "id": "5696bb5c16b6c7089cc26bd8",
   "url": "/kuza55",
   "username": "kuza55",
   "v": 6
  },
  "html": "I&#39;m not, just wondering if it&#39;s worth setting up",
  "id": "582c6fe320636697211bed07",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-11-16T14:40:35.978Z",
  "text": "I'm not, just wondering if it's worth setting up",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "we haven&#39;t made it work yet",
  "id": "582c700d65485ebc67a3052c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-11-16T14:41:17.088Z",
  "text": "we haven't made it work yet",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "but it&#39;s working on an experimental branch",
  "id": "582c7018df5ae966456573a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-11-16T14:41:28.656Z",
  "text": "but it's working on an experimental branch",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "still some things to work out though",
  "id": "582c7021c2f2cf72751b6a66",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-11-16T14:41:37.876Z",
  "text": "still some things to work out though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/kuza55",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/387986?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/387986?v=3&s=60",
   "displayName": "kuza55",
   "gv": "3",
   "id": "5696bb5c16b6c7089cc26bd8",
   "url": "/kuza55",
   "username": "kuza55",
   "v": 6
  },
  "html": "so, instead of trying to figure out how a dirichlet could work for what I&#39;m trying to do, I tried to simply get N samples (since the number of events per simulation is bounded), and then compute a mask based on the sample I draw from the number of events distribution, but it seems when I specify a shape property I get the same sample N times, rather than N different samples, is that expected behaviour?",
  "id": "582c718ff644a00d2580eebf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-11-16T14:47:43.139Z",
  "text": "so, instead of trying to figure out how a dirichlet could work for what I'm trying to do, I tried to simply get N samples (since the number of events per simulation is bounded), and then compute a mask based on the sample I draw from the number of events distribution, but it seems when I specify a shape property I get the same sample N times, rather than N different samples, is that expected behaviour?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/kuza55",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/387986?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/387986?v=3&s=60",
   "displayName": "kuza55",
   "gv": "3",
   "id": "5696bb5c16b6c7089cc26bd8",
   "url": "/kuza55",
   "username": "kuza55",
   "v": 6
  },
  "html": "and having N independent random variables seems like a poor idea... I tried to do that and then stack them and compiling the model pegged my CPU for 20 minutes",
  "id": "582c77bd20636697211bf1b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-11-16T15:14:05.762Z",
  "text": "and having N independent random variables seems like a poor idea... I tried to do that and then stack them and compiling the model pegged my CPU for 20 minutes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "what&#39;s your model?",
  "id": "582c77ca88fa21d53c2d4cc4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-11-16T15:14:18.235Z",
  "text": "what's your model?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/kuza55",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/387986?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/387986?v=3&s=60",
   "displayName": "kuza55",
   "gv": "3",
   "id": "5696bb5c16b6c7089cc26bd8",
   "url": "/kuza55",
   "username": "kuza55",
   "v": 6
  },
  "html": "I&#39;m mostly just playing around; trying to build a simple computer security risk model where there is a distribution that dictates how many threat events happen each year, then whether the threat event turns into a loss event is dictated by whether the &quot;threat capability&quot; (as defined by some distribution) exceeds the &quot;control strength&quot; (also another distribution), and those loss events incur a loss defined by some distribution; where all the distributions are estimated as PERT distributions and I&#39;m just trying to sample from the final distribution, rather than fit the model; someone built an R version of the same model here: <a href=\"http://datadrivensecurity.info/blog/posts/2014/Jan/solvo-mediocris/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://datadrivensecurity.info/blog/posts/2014/Jan/solvo-mediocris/</a> though I don&#39;t know if they resolved the issue I ran into where my first attempt assumed that in each &quot;year&quot; the all the threat events either succeeded or failed and used the same loss estimate for all of them",
  "id": "582c795d22673e7c6b13d69f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-11-16T15:21:01.540Z",
  "text": "I'm mostly just playing around; trying to build a simple computer security risk model where there is a distribution that dictates how many threat events happen each year, then whether the threat event turns into a loss event is dictated by whether the \"threat capability\" (as defined by some distribution) exceeds the \"control strength\" (also another distribution), and those loss events incur a loss defined by some distribution; where all the distributions are estimated as PERT distributions and I'm just trying to sample from the final distribution, rather than fit the model; someone built an R version of the same model here: http://datadrivensecurity.info/blog/posts/2014/Jan/solvo-mediocris/ though I don't know if they resolved the issue I ran into where my first attempt assumed that in each \"year\" the all the threat events either succeeded or failed and used the same loss estimate for all of them",
  "unread": false,
  "urls": [
   {
    "url": "http://datadrivensecurity.info/blog/posts/2014/Jan/solvo-mediocris/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/kuza55",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/387986?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/387986?v=3&s=60",
   "displayName": "kuza55",
   "gv": "3",
   "id": "5696bb5c16b6c7089cc26bd8",
   "url": "/kuza55",
   "username": "kuza55",
   "v": 6
  },
  "html": "this is my first time trying to do anything with MCMC, so I don&#39;t really know what I&#39;m doing; I was just reading the Bayesian Methods for Hackers book and remembered I&#39;d wanted to do this before",
  "id": "582c7a5622673e7c6b13d713",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-11-16T15:25:10.274Z",
  "text": "this is my first time trying to do anything with MCMC, so I don't really know what I'm doing; I was just reading the Bayesian Methods for Hackers book and remembered I'd wanted to do this before",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kuza55\" class=\"mention\">@kuza55</span> regarding your question about the size of a variable being drawn from a distribution, there are two other alternatives:",
  "id": "582c8686e097df7575bcc03b",
  "issues": [],
  "mentions": [
   {
    "screenName": "kuza55",
    "userId": "5696bb5c16b6c7089cc26bd8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-11-16T16:17:10.947Z",
  "text": "@kuza55 regarding your question about the size of a variable being drawn from a distribution, there are two other alternatives:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<ol>\n<li>reversible jump MCMC, which is not currently in PyMC3, but could be done now that we can calculate arbitrry Jacobians, whereby you essentially jump between models of different sizes</li>\n</ol>\n",
  "id": "582c86c565485ebc67a3a5a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-11-16T16:18:13.243Z",
  "text": "1. reversible jump MCMC, which is not currently in PyMC3, but could be done now that we can calculate arbitrry Jacobians, whereby you essentially jump between models of different sizes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<ol>\n<li>use latent  indicators, whereby you create a variable of the largest possible size, then have an auxilliary vector of indicator variables that turn on or off individual elements of the full variable. The indicators, of course, are driven by a random distribution.</li>\n</ol>\n",
  "id": "582c873b65485ebc67a3a8ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-11-16T16:20:11.118Z",
  "text": "2. use latent  indicators, whereby you create a variable of the largest possible size, then have an auxilliary vector of indicator variables that turn on or off individual elements of the full variable. The indicators, of course, are driven by a random distribution.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "2 is what the dp mixture does essentially",
  "id": "582c8760c2f2cf72751c01b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-11-16T16:20:48.387Z",
  "text": "2 is what the dp mixture does essentially",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/kuza55",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/387986?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/387986?v=3&s=60",
   "displayName": "kuza55",
   "gv": "3",
   "id": "5696bb5c16b6c7089cc26bd8",
   "url": "/kuza55",
   "username": "kuza55",
   "v": 6
  },
  "html": "Can you suggest some reading on the topic that is accessible to a beginner? Or should I just see if I can figure out that page you linked before?",
  "id": "582c886988fa21d53c2dbb30",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-11-16T16:25:13.838Z",
  "text": "Can you suggest some reading on the topic that is accessible to a beginner? Or should I just see if I can figure out that page you linked before?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I think that&#39;s a pretty good intro",
  "id": "582c887888fa21d53c2dbb8a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-11-16T16:25:28.147Z",
  "text": "I think that's a pretty good intro",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/kuza55",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/387986?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/387986?v=3&s=60",
   "displayName": "kuza55",
   "gv": "3",
   "id": "5696bb5c16b6c7089cc26bd8",
   "url": "/kuza55",
   "username": "kuza55",
   "v": 6
  },
  "html": "Ok, thanks, I&#39;ll see if I can figure it out :)",
  "id": "582c88b2e097df7575bcce11",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-11-16T16:26:26.299Z",
  "text": "Ok, thanks, I'll see if I can figure it out :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/kuza55",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/387986?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/387986?v=3&s=60",
   "displayName": "kuza55",
   "gv": "3",
   "id": "5696bb5c16b6c7089cc26bd8",
   "url": "/kuza55",
   "username": "kuza55",
   "v": 6
  },
  "html": "so approach <span data-link-type=\"issue\" data-issue=\"2\" class=\"issue\">#2</span> was essentially what I did before (not using a dp mixture) and it was just super, super slow to even build the model, let alone sample from it: <a href=\"https://gist.github.com/kuza55/7d01a6285868116fa0feeb54b78f3354\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/kuza55/7d01a6285868116fa0feeb54b78f3354</a> so yeah, trying to read up on mixture models",
  "id": "582cc59ec6e9b54d74fcdd3b",
  "issues": [
   {
    "number": "2"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-11-16T20:46:22.244Z",
  "text": "so approach #2 was essentially what I did before (not using a dp mixture) and it was just super, super slow to even build the model, let alone sample from it: https://gist.github.com/kuza55/7d01a6285868116fa0feeb54b78f3354 so yeah, trying to read up on mixture models",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/kuza55/7d01a6285868116fa0feeb54b78f3354"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "maybe try the marginalized mixture model",
  "id": "582cc5c0e462097a305af383",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-11-16T20:46:56.886Z",
  "text": "maybe try the marginalized mixture model",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "there&#39;s also a tutorial on that",
  "id": "582cc5c6e462097a305af39f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-11-16T20:47:02.421Z",
  "text": "there's also a tutorial on that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "i have been meaning to change the DP mixture model notebook to use the marginal mixture class",
  "id": "582cc963df5ae9664567cb93",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-11-16T21:02:27.603Z",
  "text": "i have been meaning to change the DP mixture model notebook to use the marginal mixture class",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "will do that soon",
  "id": "582cc964bd2f135f1a285aa6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-11-16T21:02:28.868Z",
  "text": "will do that soon",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/WannaBeBayesian",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/23693148?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/23693148?v=3&s=60",
   "displayName": "WannaBeBayesian",
   "gv": "3",
   "id": "583531c1d73408ce4f380265",
   "url": "/WannaBeBayesian",
   "username": "WannaBeBayesian"
  },
  "html": "How do i use traceplot in a text editor environment instead of IPython to make it show the plot? any help appreciated.",
  "id": "583532837f83e6c97720f8fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-11-23T06:09:07.135Z",
  "text": "How do i use traceplot in a text editor environment instead of IPython to make it show the plot? any help appreciated.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Just like using any matplotlib plot, you need to call <code>show()</code> when you want it displayed. ",
  "id": "5835a49d9a5479d04850e119",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-11-23T14:15:57.155Z",
  "text": "Just like using any matplotlib plot, you need to call `show()` when you want it displayed. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/darribas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/417363?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/417363?v=4&s=60",
   "displayName": "Dani Arribas-Bel",
   "gv": "4",
   "id": "559d402c15522ed4b3e3a6a4",
   "url": "/darribas",
   "username": "darribas",
   "v": 24
  },
  "html": "hello, is there any way of accessing in a PyMC-3 model what variables have been transformed? I&#39;m trying to plug in my own starting values and a log-transform is causing problems. Is there anywhere in the documentation where this is explained? Thanks!",
  "id": "583be13d444b377876650b71",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-11-28T07:48:13.662Z",
  "text": "hello, is there any way of accessing in a PyMC-3 model what variables have been transformed? I'm trying to plug in my own starting values and a log-transform is causing problems. Is there anywhere in the documentation where this is explained? Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "hi <span data-link-type=\"mention\" data-screen-name=\"darribas\" class=\"mention\">@darribas</span>. unfortunately not, still an outstanding issue",
  "id": "583be2b58255fe6b76d88dad",
  "issues": [],
  "mentions": [
   {
    "screenName": "darribas",
    "userId": "559d402c15522ed4b3e3a6a4",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-11-28T07:54:29.963Z",
  "text": "hi @darribas. unfortunately not, still an outstanding issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "you&#39;d have to manually inv-transform",
  "id": "583be2c58d65e3830eab6824",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-11-28T07:54:45.734Z",
  "text": "you'd have to manually inv-transform",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/darribas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/417363?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/417363?v=4&s=60",
   "displayName": "Dani Arribas-Bel",
   "gv": "4",
   "id": "559d402c15522ed4b3e3a6a4",
   "url": "/darribas",
   "username": "darribas",
   "v": 24
  },
  "html": "I&#39;ve found this as the closest to documentation: <a href=\"https://peerj.com/articles/cs-55/#p-49\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://peerj.com/articles/cs-55/#p-49</a>",
  "id": "583be2d38d65e3830eab6851",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-11-28T07:54:59.725Z",
  "text": "I've found this as the closest to documentation: https://peerj.com/articles/cs-55/#p-49",
  "unread": false,
  "urls": [
   {
    "url": "https://peerj.com/articles/cs-55/#p-49"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<a href=\"http://pymc-devs.github.io/pymc3/getting_started.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://pymc-devs.github.io/pymc3/getting_started.html</a> is more up-to-date",
  "id": "583be2ec1dec193f14fb3bf6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-11-28T07:55:24.273Z",
  "text": "http://pymc-devs.github.io/pymc3/getting_started.html is more up-to-date",
  "unread": false,
  "urls": [
   {
    "url": "http://pymc-devs.github.io/pymc3/getting_started.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "there&#39;s also examples and the API docs",
  "id": "583be2f073abd79c55a59985",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2016-11-28T07:55:28.955Z",
  "text": "there's also examples and the API docs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/darribas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/417363?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/417363?v=4&s=60",
   "displayName": "Dani Arribas-Bel",
   "gv": "4",
   "id": "559d402c15522ed4b3e3a6a4",
   "url": "/darribas",
   "username": "darribas",
   "v": 24
  },
  "html": "basically, every time a variable is known to be always greater than zero, it&#39;s log-transformed, correct?",
  "id": "583be2f789d179bf4dd31882",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-11-28T07:55:35.487Z",
  "text": "basically, every time a variable is known to be always greater than zero, it's log-transformed, correct?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "correct",
  "id": "583be2fe381827c24d8cfca2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-11-28T07:55:42.892Z",
  "text": "correct",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "you can also set <code>transform=None</code> if you don&#39;t want that",
  "id": "583be30b16207f7b0eb3d1e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-11-28T07:55:55.013Z",
  "text": "you can also set `transform=None` if you don't want that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "and if you supply a testval it should actually already work",
  "id": "583be31f444b377876651582",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-11-28T07:56:15.929Z",
  "text": "and if you supply a testval it should actually already work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/darribas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/417363?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/417363?v=4&s=60",
   "displayName": "Dani Arribas-Bel",
   "gv": "4",
   "id": "559d402c15522ed4b3e3a6a4",
   "url": "/darribas",
   "username": "darribas",
   "v": 24
  },
  "html": "basically to get back into the original, just <code>np.exp</code> will do it, right?",
  "id": "583be321381827c24d8cfd4c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-11-28T07:56:17.839Z",
  "text": "basically to get back into the original, just `np.exp` will do it, right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "right",
  "id": "583be32616207f7b0eb3d283",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-11-28T07:56:22.482Z",
  "text": "right",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/darribas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/417363?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/417363?v=4&s=60",
   "displayName": "Dani Arribas-Bel",
   "gv": "4",
   "id": "559d402c15522ed4b3e3a6a4",
   "url": "/darribas",
   "username": "darribas",
   "v": 24
  },
  "html": "cool, where would <code>transform=None</code> go? In say <code>find_MAP</code>?",
  "id": "583be3568255fe6b76d8911f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-11-28T07:57:10.697Z",
  "text": "cool, where would `transform=None` go? In say `find_MAP`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "onto the RV",
  "id": "583be35f8255fe6b76d891bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-11-28T07:57:19.127Z",
  "text": "onto the RV",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<code>pm.LogNormal(..., transform=None)</code>",
  "id": "583be36a73abd79c55a59b5e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-11-28T07:57:30.481Z",
  "text": "`pm.LogNormal(..., transform=None)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/darribas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/417363?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/417363?v=4&s=60",
   "displayName": "Dani Arribas-Bel",
   "gv": "4",
   "id": "559d402c15522ed4b3e3a6a4",
   "url": "/darribas",
   "username": "darribas",
   "v": 24
  },
  "html": "ah yes of course, I see",
  "id": "583be37989d179bf4dd31bac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-11-28T07:57:45.618Z",
  "text": "ah yes of course, I see",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/darribas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/417363?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/417363?v=4&s=60",
   "displayName": "Dani Arribas-Bel",
   "gv": "4",
   "id": "559d402c15522ed4b3e3a6a4",
   "url": "/darribas",
   "username": "darribas",
   "v": 24
  },
  "html": "fantastic, thank you very much!",
  "id": "583be3818255fe6b76d89260",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-11-28T07:57:53.572Z",
  "text": "fantastic, thank you very much!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I would rather figure out the starting point issue though, transforming the model really helps and is required for e.g. ADVI and NUTS",
  "id": "583be3a91dec193f14fb3ff8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-11-28T07:58:33.039Z",
  "text": "I would rather figure out the starting point issue though, transforming the model really helps and is required for e.g. ADVI and NUTS",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<code>pm.sample(n)</code> will also do the initialization for you",
  "id": "583be3d28d65e3830eab6ddd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-11-28T07:59:14.556Z",
  "text": "`pm.sample(n)` will also do the initialization for you",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/darribas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/417363?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/417363?v=4&s=60",
   "displayName": "Dani Arribas-Bel",
   "gv": "4",
   "id": "559d402c15522ed4b3e3a6a4",
   "url": "/darribas",
   "username": "darribas",
   "v": 24
  },
  "html": "I see, that&#39;s very good to know",
  "id": "583be3d973abd79c55a59e37",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-11-28T07:59:21.287Z",
  "text": "I see, that's very good to know",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "at least when you run current master branch (not on rc2 yet)",
  "id": "583be3e31dec193f14fb4104",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-11-28T07:59:31.492Z",
  "text": "at least when you run current master branch (not on rc2 yet)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/ct2034",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6976069?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6976069?v=3&s=60",
   "displayName": "Christian Henkel",
   "gv": "3",
   "id": "57906f8dc2f0db084a23f89c",
   "url": "/ct2034",
   "username": "ct2034",
   "v": 1
  },
  "html": "Hi.",
  "id": "583dc2b789d179bf4dddbfba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2016-11-29T18:02:31.177Z",
  "text": "Hi.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/ct2034",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6976069?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6976069?v=3&s=60",
   "displayName": "Christian Henkel",
   "gv": "3",
   "id": "57906f8dc2f0db084a23f89c",
   "url": "/ct2034",
   "username": "ct2034",
   "v": 1
  },
  "html": "<p>Is it possible to incrementally update a model in pyMC3. I can currently find no information on this. All documentation is always working with a priori known data.</p><p>But in my understanding, a Bayesian model also means being able to update a belief. Is this possible in pyMC3? Where can I find info in this?</p><p>Thank you :)</p>",
  "id": "583dc2b989d179bf4dddbfcb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2016-11-29T18:02:33.823Z",
  "text": "Is it possible to incrementally update a model in pyMC3. I can currently find no information on this. All documentation is always working with a priori known data.\n\nBut in my understanding, a Bayesian model also means being able to update a belief. Is this possible in pyMC3? Where can I find info in this?\n\nThank you :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/ct2034",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6976069?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6976069?v=3&s=60",
   "displayName": "Christian Henkel",
   "gv": "3",
   "id": "57906f8dc2f0db084a23f89c",
   "url": "/ct2034",
   "username": "ct2034",
   "v": 1
  },
  "html": "(I asked this here as well: <a href=\"https://stackoverflow.com/questions/40870840/incremental-model-update-pymc3\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://stackoverflow.com/questions/40870840/incremental-model-update-pymc3</a>)",
  "id": "583dc2cc8255fe6b76e30804",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-11-29T18:02:52.832Z",
  "text": "(I asked this here as well: https://stackoverflow.com/questions/40870840/incremental-model-update-pymc3)",
  "unread": false,
  "urls": [
   {
    "url": "https://stackoverflow.com/questions/40870840/incremental-model-update-pymc3"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "can you give a concrete example of what you are trying to do?",
  "id": "583e3b438d65e3830eb90eed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-11-30T02:36:51.872Z",
  "text": "can you give a concrete example of what you are trying to do?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/ct2034",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6976069?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6976069?v=3&s=60",
   "displayName": "Christian Henkel",
   "gv": "3",
   "id": "57906f8dc2f0db084a23f89c",
   "url": "/ct2034",
   "username": "ct2034",
   "v": 1
  },
  "html": "I want to build a modle that predicts when certain events are happening. Whenever an actual event occurs I want to update my belief. Can I do this in pymc3? As far as I understood the library mostly supports MCMC and therefore does not really work with simple Bayesian updates or is it? I basically was trying to use the library because I can build complex models where for example multiple of my events share certain knowledge.",
  "id": "583e6a49444b3778767335e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2016-11-30T05:57:29.987Z",
  "text": "I want to build a modle that predicts when certain events are happening. Whenever an actual event occurs I want to update my belief. Can I do this in pymc3? As far as I understood the library mostly supports MCMC and therefore does not really work with simple Bayesian updates or is it? I basically was trying to use the library because I can build complex models where for example multiple of my events share certain knowledge.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "it&#39;s called Bayesian updating or online learning, which you can&#39;t do with PyMC3 currently. there are some particle samplers that try to do that",
  "id": "583e8a898d65e3830eba829a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2016-11-30T08:15:05.163Z",
  "text": "it's called Bayesian updating or online learning, which you can't do with PyMC3 currently. there are some particle samplers that try to do that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/ct2034",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6976069?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6976069?v=3&s=60",
   "displayName": "Christian Henkel",
   "gv": "3",
   "id": "57906f8dc2f0db084a23f89c",
   "url": "/ct2034",
   "username": "ct2034",
   "v": 1
  },
  "html": "Yes it is. Do you have any recommendation for an implementation to use?",
  "id": "583ea4db8255fe6b76e7bb00",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2016-11-30T10:07:23.896Z",
  "text": "Yes it is. Do you have any recommendation for an implementation to use?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "I would like to implement circular statistics (mean, sd, etc)  and eventually plots for circular variables. Functions like <code>traceplot</code> and <code>df_summary</code> only have access to the variable names (strings). Any tip/pointer on how to easily check if a variable is circular? (for example checking if they belong to the VonMises class)...",
  "id": "58402f08444b3778767cea41",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-12-01T14:09:12.238Z",
  "text": "I would like to implement circular statistics (mean, sd, etc)  and eventually plots for circular variables. Functions like `traceplot` and `df_summary` only have access to the variable names (strings). Any tip/pointer on how to easily check if a variable is circular? (for example checking if they belong to the VonMises class)...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ct2034\" class=\"mention\">@ct2034</span> unfortunately not, you&#39;d have to implement something",
  "id": "58403af789d179bf4debac75",
  "issues": [],
  "mentions": [
   {
    "screenName": "ct2034",
    "userId": "57906f8dc2f0db084a23f89c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2016-12-01T15:00:07.402Z",
  "text": "@ct2034 unfortunately not, you'd have to implement something",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"aloctavodia\" class=\"mention\">@aloctavodia</span> don&#39;t know",
  "id": "5840409989d179bf4debd057",
  "issues": [],
  "mentions": [
   {
    "screenName": "aloctavodia",
    "userId": "54314cd8163965c9bc208e0f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2016-12-01T15:24:09.209Z",
  "text": "@aloctavodia don't know",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> OK thanks anyway. I will try to explore some solutions ASAP.",
  "id": "584048da8d65e3830ec4ccda",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2016-12-01T15:59:22.888Z",
  "text": "@twiecki OK thanks anyway. I will try to explore some solutions ASAP.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "<a href=\"http://andymiller.github.io/2016/11/23/vb.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://andymiller.github.io/2016/11/23/vb.html</a>",
  "id": "5840be811dec193f14173e32",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2016-12-02T00:21:21.687Z",
  "text": "http://andymiller.github.io/2016/11/23/vb.html",
  "unread": false,
  "urls": [
   {
    "url": "http://andymiller.github.io/2016/11/23/vb.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "interesting read related to some of the normalizing flow work that <span data-link-type=\"mention\" data-screen-name=\"taku-y\" class=\"mention\">@taku-y</span> has been implementing",
  "id": "5840be9b444b37787680439d",
  "issues": [],
  "mentions": [
   {
    "screenName": "taku-y",
    "userId": "57497d60c43b8c6019756ee7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2016-12-02T00:21:47.549Z",
  "text": "interesting read related to some of the normalizing flow work that @taku-y has been implementing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that&#39;s really cool",
  "id": "5841958273abd79c55c5995f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2016-12-02T15:38:42.566Z",
  "text": "that's really cool",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/taku-y",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4969395?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4969395?v=3&s=60",
   "displayName": "Taku Yoshioka",
   "gv": "3",
   "id": "57497d60c43b8c6019756ee7",
   "url": "/taku-y",
   "username": "taku-y",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AustinRochford_twitter\" class=\"mention\">@AustinRochford_twitter</span> thanks for letting m know",
  "id": "584244200da034021b607b94",
  "issues": [],
  "mentions": [
   {
    "screenName": "AustinRochford_twitter",
    "userId": "58166bbcd73408ce4f31e2f7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2016-12-03T04:03:44.562Z",
  "text": "@AustinRochford_twitter thanks for letting m know",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/weitzenfeld_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9_bigger.jpeg",
   "displayName": "Daniel Weitzenfeld",
   "id": "578e947ac2f0db084a23bde6",
   "url": "/weitzenfeld_twitter",
   "username": "weitzenfeld_twitter"
  },
  "html": "I&#39;m trying to implement a model similar to the one in 23.4 of Doing Bayesian Data Analysis - an ordinal predicted variable, metric predictor - and I&#39;m getting an error that I suspect is related to me doing something stupid with <code>pm.Categorical</code>.  Here&#39;s a gist to reproduce the error: <a href=\"https://gist.github.com/DanielWeitzenfeld/91feb45b0a71dec0dbceddabafe23817\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/DanielWeitzenfeld/91feb45b0a71dec0dbceddabafe23817</a>  Thanks in advance for any guidance.",
  "id": "58434a840da034021b65105f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-12-03T22:43:16.771Z",
  "text": "I'm trying to implement a model similar to the one in 23.4 of Doing Bayesian Data Analysis - an ordinal predicted variable, metric predictor - and I'm getting an error that I suspect is related to me doing something stupid with `pm.Categorical`.  Here's a gist to reproduce the error: https://gist.github.com/DanielWeitzenfeld/91feb45b0a71dec0dbceddabafe23817  Thanks in advance for any guidance.",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/DanielWeitzenfeld/91feb45b0a71dec0dbceddabafe23817"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "To streamline releases, I\u2019ve created a <a href=\"https://github.com/pymc-devs/pymc3/wiki/PyMC3-Release-Checklist\" rel=\"nofollow\" target=\"_blank\" class=\"link\">wiki of release guidelines</a> on GitHub, for my own reference if nothing else. Please review and edit.",
  "id": "5844a0f41eb3d64869571bb5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-12-04T23:04:20.562Z",
  "text": "To streamline releases, I\u2019ve created a [wiki of release guidelines](https://github.com/pymc-devs/pymc3/wiki/PyMC3-Release-Checklist) on GitHub, for my own reference if nothing else. Please review and edit.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/wiki/PyMC3-Release-Checklist"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "We now have a <a href=\"https://github.com/pymc-devs/pymc3/releases/tag/v3.0.rc4\" rel=\"nofollow\" target=\"_blank\" class=\"link\">Release Candidate 4</a> that is available. Please take some time to kick the tires: install on various machines and try running the tests or your favorite models. Let us know if it does not work as expected.  ",
  "id": "5844a31744f3e83528da318a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-12-04T23:13:27.348Z",
  "text": "We now have a [Release Candidate 4](https://github.com/pymc-devs/pymc3/releases/tag/v3.0.rc4) that is available. Please take some time to kick the tires: install on various machines and try running the tests or your favorite models. Let us know if it does not work as expected.  ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/releases/tag/v3.0.rc4"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"weitzenfeld_twitter\" class=\"mention\">@weitzenfeld_twitter</span> i have some ideas about how to implement that model without a custom theano op, which should make it easier to debug.  will see what i can work up in the next few days",
  "id": "5844d540b4ffd59e38e6e1db",
  "issues": [],
  "mentions": [
   {
    "screenName": "weitzenfeld_twitter",
    "userId": "578e947ac2f0db084a23bde6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2016-12-05T02:47:28.653Z",
  "text": "@weitzenfeld_twitter i have some ideas about how to implement that model without a custom theano op, which should make it easier to debug.  will see what i can work up in the next few days",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/weitzenfeld_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9_bigger.jpeg",
   "displayName": "Daniel Weitzenfeld",
   "id": "578e947ac2f0db084a23bde6",
   "url": "/weitzenfeld_twitter",
   "username": "weitzenfeld_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AustinRochford_twitter\" class=\"mention\">@AustinRochford_twitter</span> awesome.  I got the custom theano op to work in the case without any predictors - ie the model in DBDA 23.2.2 - gist here: <a href=\"https://gist.github.com/DanielWeitzenfeld/d9ac64f76281e6c1d29217af76449664\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/DanielWeitzenfeld/d9ac64f76281e6c1d29217af76449664</a>  I&#39;m struggling with the transition to each observation having it&#39;s own categorical distribution.  But I&#39;d definitely be curious to see how you&#39;d do it without the custom theano op. ",
  "id": "58457ab46b32e870498b92db",
  "issues": [],
  "mentions": [
   {
    "screenName": "AustinRochford_twitter",
    "userId": "58166bbcd73408ce4f31e2f7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2016-12-05T14:33:24.478Z",
  "text": "@AustinRochford_twitter awesome.  I got the custom theano op to work in the case without any predictors - ie the model in DBDA 23.2.2 - gist here: https://gist.github.com/DanielWeitzenfeld/d9ac64f76281e6c1d29217af76449664  I'm struggling with the transition to each observation having it's own categorical distribution.  But I'd definitely be curious to see how you'd do it without the custom theano op. ",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/DanielWeitzenfeld/d9ac64f76281e6c1d29217af76449664"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/yanurai",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/24410820?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/24410820?v=3&s=60",
   "displayName": "yanurai",
   "gv": "3",
   "id": "5846aea7d73408ce4f3b1964",
   "url": "/yanurai",
   "username": "yanurai",
   "v": 15
  },
  "html": "Hey there! I&#39;m really new to PyMC3 and having worked through the first tutorial I wonder how I can specify the start values of my parameters on my own. Maybe you can point me in the right direction. Thanks",
  "id": "5846b00a1eb3d6486962add9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-12-06T12:33:14.913Z",
  "text": "Hey there! I'm really new to PyMC3 and having worked through the first tutorial I wonder how I can specify the start values of my parameters on my own. Maybe you can point me in the right direction. Thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"yanurai\" class=\"mention\">@yanurai</span> you can either pass them in a dictionary to the <code>start</code> argument for <code>sample</code>, or set individual <code>testval</code> arguments when specifying variables. See the users guide. ",
  "id": "5846b0b6bc32453c28997733",
  "issues": [],
  "mentions": [
   {
    "screenName": "yanurai",
    "userId": "5846aea7d73408ce4f3b1964",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2016-12-06T12:36:06.044Z",
  "text": "@yanurai you can either pass them in a dictionary to the `start` argument for `sample`, or set individual `testval` arguments when specifying variables. See the users guide. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/weitzenfeld_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9_bigger.jpeg",
   "displayName": "Daniel Weitzenfeld",
   "id": "578e947ac2f0db084a23bde6",
   "url": "/weitzenfeld_twitter",
   "username": "weitzenfeld_twitter"
  },
  "html": "I think I solved my own problem  ^^^ - I just needed to change <code>otypes=[T.dvector]</code> to <code>otypes=[T.dmatrix]</code>",
  "id": "584a1718c29531ac5d3c9e6d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-12-09T02:29:44.321Z",
  "text": "I think I solved my own problem  ^^^ - I just needed to change `otypes=[T.dvector]` to `otypes=[T.dmatrix]`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"weitzenfeld_twitter\" class=\"mention\">@weitzenfeld_twitter</span> glad it&#39;s working, those types can be confusing",
  "id": "584a61f2be9d43bc633a1373",
  "issues": [],
  "mentions": [
   {
    "screenName": "weitzenfeld_twitter",
    "userId": "578e947ac2f0db084a23bde6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2016-12-09T07:49:06.006Z",
  "text": "@weitzenfeld_twitter glad it's working, those types can be confusing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/dcuevasr",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13169803?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13169803?v=3&s=60",
   "displayName": "dcuevasr",
   "gv": "3",
   "id": "58500d67d73408ce4f3cc8ef",
   "url": "/dcuevasr",
   "username": "dcuevasr",
   "v": 1
  },
  "html": "As a follow-up question to  <span data-link-type=\"mention\" data-screen-name=\"weitzenfeld_twitter\" class=\"mention\">@weitzenfeld_twitter</span> , I would like to ask how would one go about implementing this as an op with a grad() method. Following his example, say that I already have an Op whose <strong>init</strong> can take a variable Mu which can either be a single number, for using with a single data point, or a vector, for using with a set of data points (each with its own Mu). These values are stored in self and used in perform() to return either a vector, for a single datapoint/mu, or a matrix, for a set of datapoints/mu. This works well enough now, but I don&#39;t know what pymc3 expects out of the grad() method for multiple data points. More specifically, what if the gradient depends on the value of Mu? ",
  "id": "58500eec0da034021ba48096",
  "issues": [],
  "mentions": [
   {
    "screenName": "weitzenfeld_twitter",
    "userId": "578e947ac2f0db084a23bde6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-12-13T15:08:28.397Z",
  "text": "As a follow-up question to  @weitzenfeld_twitter , I would like to ask how would one go about implementing this as an op with a grad() method. Following his example, say that I already have an Op whose __init__ can take a variable Mu which can either be a single number, for using with a single data point, or a vector, for using with a set of data points (each with its own Mu). These values are stored in self and used in perform() to return either a vector, for a single datapoint/mu, or a matrix, for a set of datapoints/mu. This works well enough now, but I don't know what pymc3 expects out of the grad() method for multiple data points. More specifically, what if the gradient depends on the value of Mu? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/colindcarroll_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/651589666622283776/7RDq-dl6.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/651589666622283776/7RDq-dl6_bigger.jpg",
   "displayName": "Colin Carroll",
   "id": "58472e46d73408ce4f3b3733",
   "url": "/colindcarroll_twitter",
   "username": "colindcarroll_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"dcuevasr\" class=\"mention\">@dcuevasr</span>  looks like you can&#39;t use <code>@as_op</code> in this case, you&#39;d need to actually implement a new theano Op (<a href=\"http://deeplearning.net/software/theano_versions/dev/extending/extending_theano.html#as-op\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://deeplearning.net/software/theano_versions/dev/extending/extending_theano.html#as-op</a>)",
  "id": "585017057a58ca605548f09d",
  "issues": [],
  "mentions": [
   {
    "screenName": "dcuevasr",
    "userId": "58500d67d73408ce4f3cc8ef",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-12-13T15:43:01.018Z",
  "text": "@dcuevasr  looks like you can't use `@as_op` in this case, you'd need to actually implement a new theano Op (http://deeplearning.net/software/theano_versions/dev/extending/extending_theano.html#as-op)",
  "unread": false,
  "urls": [
   {
    "url": "http://deeplearning.net/software/theano_versions/dev/extending/extending_theano.html#as-op"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/colindcarroll_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/651589666622283776/7RDq-dl6.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/651589666622283776/7RDq-dl6_bigger.jpg",
   "displayName": "Colin Carroll",
   "id": "58472e46d73408ce4f3b3733",
   "url": "/colindcarroll_twitter",
   "username": "colindcarroll_twitter"
  },
  "html": "in particular, the &quot;As no grad is defined, this means you won\u2019t be able to differentiate paths that include this op.&quot;",
  "id": "5850171ab4ffd59e3822bdd0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-12-13T15:43:22.983Z",
  "text": "in particular, the \"As no grad is defined, this means you won\u2019t be able to differentiate paths that include this op.\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/dcuevasr",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13169803?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13169803?v=3&s=60",
   "displayName": "dcuevasr",
   "gv": "3",
   "id": "58500d67d73408ce4f3cc8ef",
   "url": "/dcuevasr",
   "username": "dcuevasr",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"colindcarroll_twitter\" class=\"mention\">@colindcarroll_twitter</span> Yes, I have already implemented this as a theano op (subclass of theano.gof.Op). If I have only one condition (one value for Mu), I already have everything necessary, up to and including the grad() method that returns the right stuff. I&#39;m trying to move from this to a &#39;vectorized&#39; version, which can take a different value of Mu for every data point that I have.",
  "id": "585017887a58ca605548f50b",
  "issues": [],
  "mentions": [
   {
    "screenName": "colindcarroll_twitter",
    "userId": "58472e46d73408ce4f3b3733",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-12-13T15:45:12.213Z",
  "text": "@colindcarroll_twitter Yes, I have already implemented this as a theano op (subclass of theano.gof.Op). If I have only one condition (one value for Mu), I already have everything necessary, up to and including the grad() method that returns the right stuff. I'm trying to move from this to a 'vectorized' version, which can take a different value of Mu for every data point that I have.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/dcuevasr",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13169803?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13169803?v=3&s=60",
   "displayName": "dcuevasr",
   "gv": "3",
   "id": "58500d67d73408ce4f3cc8ef",
   "url": "/dcuevasr",
   "username": "dcuevasr",
   "v": 1
  },
  "html": "Seems like I found the solution, and it&#39;s mathematically obvious. One just needs to calculate the Jacobian of the whole output matrix, which contains now a row for every value of Mu (and data), multiplied by the rows that your original Op&#39;s output has. So I put my single-Mu gradient implementation into a function, and then used theano.scan to go through all of them and just concatenate at the end. My biggest (mental) problem was that theano doesn&#39;t have a documented way of calculating a grad() method for multiple outputs; they suggest flattening all your outputs into a vector, and so I did. Then I &#39;de-flattened&#39; in my pymc3 distribution&#39;s logp. This is what got me confused, as I thought that for some reason pymc3 was trying to calculate the gradient of the de-flattened version instead.",
  "id": "58579968c5a4e0233ba1dad7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-12-19T08:25:12.078Z",
  "text": "Seems like I found the solution, and it's mathematically obvious. One just needs to calculate the Jacobian of the whole output matrix, which contains now a row for every value of Mu (and data), multiplied by the rows that your original Op's output has. So I put my single-Mu gradient implementation into a function, and then used theano.scan to go through all of them and just concatenate at the end. My biggest (mental) problem was that theano doesn't have a documented way of calculating a grad() method for multiple outputs; they suggest flattening all your outputs into a vector, and so I did. Then I 'de-flattened' in my pymc3 distribution's logp. This is what got me confused, as I thought that for some reason pymc3 was trying to calculate the gradient of the de-flattened version instead.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "glad you figured it out",
  "id": "58582288c02c1a3959892180",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-12-19T18:10:16.201Z",
  "text": "glad you figured it out",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/usptact",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1818325?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1818325?v=3&s=60",
   "displayName": "Vladislavs Dovgalecs",
   "gv": "3",
   "id": "5858a134d73408ce4f3e2bb9",
   "url": "/usptact",
   "username": "usptact",
   "v": 6
  },
  "html": "Hi, I am making my first independent steps to built custom models. I am struggling to build a model which (1) learns a regression model and (2) a matrix with pairwise constraints. In nutshell, the idea is to learn a regression model which given two feature vectors, can rank one of the vectors higher than the other. In addition to features, a set of matrices with noisy pairwise 1-0 preferences are given.  The secondary task is also to learn jointly one de-noised 1-0 preference matrix. I&#39;ve come up with a model but failed pull all pieces together. Some modeling advices would be highly appreciated!",
  "id": "5858a32aaf6b364a29d39286",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-12-20T03:19:06.391Z",
  "text": "Hi, I am making my first independent steps to built custom models. I am struggling to build a model which (1) learns a regression model and (2) a matrix with pairwise constraints. In nutshell, the idea is to learn a regression model which given two feature vectors, can rank one of the vectors higher than the other. In addition to features, a set of matrices with noisy pairwise 1-0 preferences are given.  The secondary task is also to learn jointly one de-noised 1-0 preference matrix. I've come up with a model but failed pull all pieces together. Some modeling advices would be highly appreciated!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/usptact",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1818325?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1818325?v=3&s=60",
   "displayName": "Vladislavs Dovgalecs",
   "gv": "3",
   "id": "5858a134d73408ce4f3e2bb9",
   "url": "/usptact",
   "username": "usptact",
   "v": 6
  },
  "html": "I tried to formalize the input data here: <a href=\"http://stats.stackexchange.com/questions/252480/learning-ranking-model-leveraging-multiple-noisy-pairwise-constraints\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://stats.stackexchange.com/questions/252480/learning-ranking-model-leveraging-multiple-noisy-pairwise-constraints</a>",
  "id": "5858a90e7a3f79ef5d79dd85",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-12-20T03:44:14.740Z",
  "text": "I tried to formalize the input data here: http://stats.stackexchange.com/questions/252480/learning-ranking-model-leveraging-multiple-noisy-pairwise-constraints",
  "unread": false,
  "urls": [
   {
    "url": "http://stats.stackexchange.com/questions/252480/learning-ranking-model-leveraging-multiple-noisy-pairwise-constraints"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/usptact",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1818325?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1818325?v=3&s=60",
   "displayName": "Vladislavs Dovgalecs",
   "gv": "3",
   "id": "5858a134d73408ce4f3e2bb9",
   "url": "/usptact",
   "username": "usptact",
   "v": 6
  },
  "html": "I can also post my data + current code upon request.",
  "id": "5858a91ae7bdfe4e29765d93",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-12-20T03:44:26.744Z",
  "text": "I can also post my data + current code upon request.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mindlessbrain",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17765738?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17765738?v=3&s=60",
   "displayName": "Daniel Lima",
   "gv": "3",
   "id": "585ac700d73408ce4f3e8ece",
   "url": "/mindlessbrain",
   "username": "mindlessbrain",
   "v": 2
  },
  "html": "<p>Hi, I am new with pymc3 and MCMC, and I am trying to understand the better way to work with it.</p><p>I am following the Getting started with PyMC3 tutorial, and trying the example for a linear regression (calculating alpha and beta).<br>When I use NUTS my code runs in 1+ minute of execution time but when I use the Slice method it executes in 30 secs.</p><p>My question is: Should I consider other variables them the time for execution?</p>",
  "id": "585ac75d058ca96737769528",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-12-21T18:18:05.001Z",
  "text": "Hi, I am new with pymc3 and MCMC, and I am trying to understand the better way to work with it.\n\nI am following the Getting started with PyMC3 tutorial, and trying the example for a linear regression (calculating alpha and beta).\nWhen I use NUTS my code runs in 1+ minute of execution time but when I use the Slice method it executes in 30 secs.\n\nMy question is: Should I consider other variables them the time for execution?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "NUTS will always be slower, but with complex models give less auto-correlated samples, so the effective sample rate can be much higher",
  "id": "585ae000c895451b75060140",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-12-21T20:03:12.852Z",
  "text": "NUTS will always be slower, but with complex models give less auto-correlated samples, so the effective sample rate can be much higher",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mindlessbrain",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17765738?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17765738?v=3&s=60",
   "displayName": "Daniel Lima",
   "gv": "3",
   "id": "585ac700d73408ce4f3e8ece",
   "url": "/mindlessbrain",
   "username": "mindlessbrain",
   "v": 2
  },
  "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> !<br>I am doing a project were I have to compute the regression for two time series with multiple windows, I wanna know how and if regression parameters change in time. So I have to compute the regression thousands of times, each time with 40 - 60 different samples. This takes hours in my current implementation. I ran a python profiler and the pymc3 takes almost 95% of the time. Do you guys have any suggestion for me?",
  "id": "585b1514058ca96737783d62",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-12-21T23:49:40.564Z",
  "text": "Thanks @twiecki !\nI am doing a project were I have to compute the regression for two time series with multiple windows, I wanna know how and if regression parameters change in time. So I have to compute the regression thousands of times, each time with 40 - 60 different samples. This takes hours in my current implementation. I ran a python profiler and the pymc3 takes almost 95% of the time. Do you guys have any suggestion for me?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "can&#39;t you build one model for that? something along the lines of <a href=\"http://pymc-devs.github.io/pymc3/notebooks/GLM-rolling-regression.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://pymc-devs.github.io/pymc3/notebooks/GLM-rolling-regression.html</a>",
  "id": "585b8d4de7bdfe4e2985837d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-12-22T08:22:37.826Z",
  "text": "can't you build one model for that? something along the lines of http://pymc-devs.github.io/pymc3/notebooks/GLM-rolling-regression.html",
  "unread": false,
  "urls": [
   {
    "url": "http://pymc-devs.github.io/pymc3/notebooks/GLM-rolling-regression.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mindlessbrain",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17765738?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17765738?v=3&s=60",
   "displayName": "Daniel Lima",
   "gv": "3",
   "id": "585ac700d73408ce4f3e8ece",
   "url": "/mindlessbrain",
   "username": "mindlessbrain",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> thanks again, it was very helpful!!",
  "id": "585bc2c5e7bdfe4e29869d73",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-12-22T12:10:45.706Z",
  "text": "@twiecki thanks again, it was very helpful!!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "I&#39;m having a hard time getting my head around the notion of a &quot;replacement&quot; in Maxim&#39;s new API. Is this graph theory jargon that I am not familiar with, or something simpler?",
  "id": "585c418faf6b364a29e6d6ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-12-22T21:11:43.451Z",
  "text": "I'm having a hard time getting my head around the notion of a \"replacement\" in Maxim's new API. Is this graph theory jargon that I am not familiar with, or something simpler?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/taku-y",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4969395?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4969395?v=3&s=60",
   "displayName": "Taku Yoshioka",
   "gv": "3",
   "id": "57497d60c43b8c6019756ee7",
   "url": "/taku-y",
   "username": "taku-y",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span>  &quot;replacement&quot; means replacing nodes of RVs, in the theano graph of the probabilistic model, with random samples of variational posterior. ",
  "id": "585f30e7c02c1a3959ad0b2d",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-12-25T02:37:27.000Z",
  "text": "@fonnesbeck  \"replacement\" means replacing nodes of RVs, in the theano graph of the probabilistic model, with random samples of variational posterior. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/usptact",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1818325?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1818325?v=3&s=60",
   "displayName": "Vladislavs Dovgalecs",
   "gv": "3",
   "id": "5858a134d73408ce4f3e2bb9",
   "url": "/usptact",
   "username": "usptact",
   "v": 6
  },
  "html": "I am building a model where some variables in a Logistic Regression model (conveniently implemented in glm module) are dependent/influencing some other random variables. In other words, I need to have access to random variables in the glm for inference. Is this possible? Or should I re-implement in my case Logistic Regression explicitly?",
  "id": "5864cc38058ca96737a2da5f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-12-29T08:41:28.491Z",
  "text": "I am building a model where some variables in a Logistic Regression model (conveniently implemented in glm module) are dependent/influencing some other random variables. In other words, I need to have access to random variables in the glm for inference. Is this possible? Or should I re-implement in my case Logistic Regression explicitly?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "does the glm function not return it? it might not",
  "id": "5864df7c0730ce6937207c75",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-12-29T10:03:40.022Z",
  "text": "does the glm function not return it? it might not",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "you can also access them via <code>model.free_RVs</code>",
  "id": "5864df85c895451b75322235",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-12-29T10:03:49.271Z",
  "text": "you can also access them via `model.free_RVs`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "A few weeks back I started a wiki page outlining a <a href=\"https://github.com/pymc-devs/pymc3/wiki/PyMC3-Release-Checklist\" rel=\"nofollow\" target=\"_blank\" class=\"link\">PyMC3 release checklist</a>, as much for my own reference as anything. Please feel free to suggest edits and provide feedback. Hopefully it will aid smooth releases!",
  "id": "5866c1490730ce6937294ef2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-12-30T20:19:21.265Z",
  "text": "A few weeks back I started a wiki page outlining a [PyMC3 release checklist](https://github.com/pymc-devs/pymc3/wiki/PyMC3-Release-Checklist), as much for my own reference as anything. Please feel free to suggest edits and provide feedback. Hopefully it will aid smooth releases!",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/wiki/PyMC3-Release-Checklist"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/Springcoil_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/378800000036035294/cbf7c04c7d6714e4017364296850059f.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/378800000036035294/cbf7c04c7d6714e4017364296850059f_bigger.jpeg",
   "displayName": "Peadar Coyle \ud83d\udcce",
   "id": "58699a0ad73408ce4f408dc2",
   "url": "/Springcoil_twitter",
   "username": "Springcoil_twitter"
  },
  "html": "Is anyone around?",
  "id": "58699aba9d4cc4fc53666098",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-01-02T00:11:38.414Z",
  "text": "Is anyone around?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Somewhat but AFK for he next hour or so. ",
  "id": "5869a1d79e6f00e74ae73c2e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-01-02T00:41:59.850Z",
  "text": "Somewhat but AFK for he next hour or so. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Happy new year all:)",
  "id": "586a3a53c02c1a3959da9aa4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-01-02T11:32:35.281Z",
  "text": "Happy new year all:)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": "Happy new year!",
  "id": "586a3abbc895451b75477e90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-01-02T11:34:19.049Z",
  "text": "Happy new year!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "happy new year :)",
  "id": "586a3acf058ca96737b9e2a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-01-02T11:34:39.114Z",
  "text": "happy new year :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I just tested #PyMC3 for the bug present in stan (<span data-link-type=\"issue\" data-issue=\"2178\" data-issue-repo=\"stan-dev/stan\" class=\"issue\">stan-dev/stan#2178</span>) and it seems to work fine",
  "id": "586b4c55af6b364a2924f8ce",
  "issues": [
   {
    "number": "2178",
    "repo": "stan-dev/stan"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-01-03T07:01:41.814Z",
  "text": "I just tested #PyMC3 for the bug present in stan (https://github.com/stan-dev/stan/issues/2178) and it seems to work fine",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "Release candidate 6 is out on pip and conda-forge. please help by testing that version and reporting any problems on the github issue tracker",
  "id": "586cd8a6c02c1a3959e6a28b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-01-04T11:12:38.082Z",
  "text": "Release candidate 6 is out on pip and conda-forge. please help by testing that version and reporting any problems on the github issue tracker",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "if no bugs are found, this will become version 3.0",
  "id": "586cd8b7aa6be0472f06a66f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-01-04T11:12:55.314Z",
  "text": "if no bugs are found, this will become version 3.0",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> Perhaps a weekend release if there are no issues?",
  "id": "586ecdd6c02c1a3959f04e60",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2017-01-05T22:51:02.438Z",
  "text": "@twiecki Perhaps a weekend release if there are no issues?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "What about adding population keyword for observed random variables? It gives autoscaling and minibatch methods out of the box",
  "id": "586f671caa6be0472f14fe7b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-01-06T09:45:00.464Z",
  "text": "What about adding population keyword for observed random variables? It gives autoscaling and minibatch methods out of the box",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> yes!! the one fix by <span data-link-type=\"mention\" data-screen-name=\"aloctavodia\" class=\"mention\">@aloctavodia</span> should be in there but otherwise will be great to get that out",
  "id": "586f69837a3f79ef5de227df",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   },
   {
    "screenName": "aloctavodia",
    "userId": "54314cd8163965c9bc208e0f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-06T09:55:15.296Z",
  "text": "@fonnesbeck yes!! the one fix by @aloctavodia should be in there but otherwise will be great to get that out",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "however, we should also set aside some time to drum up excitement, posting to mailing lists and news aggregators",
  "id": "586f6995aa6be0472f150a75",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-01-06T09:55:33.609Z",
  "text": "however, we should also set aside some time to drum up excitement, posting to mailing lists and news aggregators",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ferrine\" class=\"mention\">@ferrine</span> that&#39;s a great idea. how would the API look like exactly?",
  "id": "586f69acaa6be0472f150ad3",
  "issues": [],
  "mentions": [
   {
    "screenName": "ferrine",
    "userId": "581e3155d73408ce4f33e027",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2017-01-06T09:55:56.994Z",
  "text": "@ferrine that's a great idea. how would the API look like exactly?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I suppose one could pass a generator as an observed?",
  "id": "586f69c27a3f79ef5de22a19",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-06T09:56:18.496Z",
  "text": "I suppose one could pass a generator as an observed?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Just new kwarg, that&#39;s all",
  "id": "586f69c4da229f8d5bee78df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-06T09:56:20.796Z",
  "text": "Just new kwarg, that's all",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<code>pm.Normal(..., observed=data, population=?)</code> ",
  "id": "586f69e59e6f00e74a02375d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-06T09:56:53.807Z",
  "text": "`pm.Normal(..., observed=data, population=?)` ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Yes",
  "id": "586f69f0da229f8d5bee7a02",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-06T09:57:04.119Z",
  "text": "Yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "what is <code>?</code>",
  "id": "586f69f6af6b364a2938cb47",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-01-06T09:57:10.251Z",
  "text": "what is `?`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "an int?",
  "id": "586f69f89d4cc4fc538147a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-01-06T09:57:12.137Z",
  "text": "an int?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "and <code>data</code> could be a generator?",
  "id": "586f6a15aa6be0472f150d38",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-01-06T09:57:41.882Z",
  "text": "and `data` could be a generator?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Shape[0] of population. It came be a scalar tensor ",
  "id": "586f6a1f7a3f79ef5de22c43",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-01-06T09:57:51.167Z",
  "text": "Shape[0] of population. It came be a scalar tensor ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "because that I think would be awesome",
  "id": "586f6a29da229f8d5bee7b27",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-06T09:58:01.731Z",
  "text": "because that I think would be awesome",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I thought about shared data",
  "id": "586f6a2caa6be0472f150d83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-06T09:58:04.409Z",
  "text": "I thought about shared data",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Generator is hard I think ",
  "id": "586f6a457a3f79ef5de22cd8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-06T09:58:29.160Z",
  "text": "Generator is hard I think ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Needs time to think it over",
  "id": "586f6a5a9e6f00e74a02395e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-06T09:58:50.054Z",
  "text": "Needs time to think it over",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "so <code>data</code> would be a <code>theano.shared</code>?",
  "id": "586f6a5b7a3f79ef5de22d23",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-06T09:58:51.024Z",
  "text": "so `data` would be a `theano.shared`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Yes",
  "id": "586f6a62c02c1a3959f2e9b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-06T09:58:58.072Z",
  "text": "Yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "where would it be set to the mini-batches?",
  "id": "586f6a6caa6be0472f150ee2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-06T09:59:08.036Z",
  "text": "where would it be set to the mini-batches?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "In simplest case",
  "id": "586f6a729e6f00e74a023a48",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-01-06T09:59:14.884Z",
  "text": "In simplest case",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Callbacks in advi can change data",
  "id": "586f6a8eda229f8d5bee7d1e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-01-06T09:59:42.121Z",
  "text": "Callbacks in advi can change data",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "New advi*",
  "id": "586f6a9caf6b364a2938cd9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-01-06T09:59:56.522Z",
  "text": "New advi*",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "so I would pass in an updator function to advi?",
  "id": "586f6aab7a3f79ef5de22ece",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-01-06T10:00:11.319Z",
  "text": "so I would pass in an updator function to advi?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<code>pm.Normal(..., observed=shared_placeholder, population=(10000,))</code>",
  "id": "586f6ac6c02c1a3959f2eb9b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-01-06T10:00:38.174Z",
  "text": "`pm.Normal(..., observed=shared_placeholder, population=(10000,))`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I did so in my experiments",
  "id": "586f6ac99d4cc4fc53814dab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-01-06T10:00:41.162Z",
  "text": "I did so in my experiments",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Shape[0] is scalar, not tuple ",
  "id": "586f6af07a3f79ef5de22fdc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-01-06T10:01:20.118Z",
  "text": "Shape[0] is scalar, not tuple ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<code>pm.variational.advi(callback={&#39;obs&#39;: lambda x: x.set_values(current_minibatch)})</code> ?",
  "id": "586f6af79d4cc4fc53814e54",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-01-06T10:01:27.836Z",
  "text": "`pm.variational.advi(callback={'obs': lambda x: x.set_values(current_minibatch)})` ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "ok",
  "id": "586f6af9c02c1a3959f2ece7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-01-06T10:01:29.370Z",
  "text": "ok",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I think generator can be implemented with custom Operations",
  "id": "586f6b145ffdeea72312543b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-01-06T10:01:56.750Z",
  "text": "I think generator can be implemented with custom Operations",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Op",
  "id": "586f6b1ac02c1a3959f2ed46",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-06T10:02:02.361Z",
  "text": "Op",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "generator would be quite elegant I think",
  "id": "586f6b269d4cc4fc53814f70",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-06T10:02:14.372Z",
  "text": "generator would be quite elegant I think",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "the callbacks seem a bit cumbersome for API",
  "id": "586f6b365ffdeea7231255b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-06T10:02:30.054Z",
  "text": "the callbacks seem a bit cumbersome for API",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "generator passed to <code>observed</code> I mean",
  "id": "586f6b40da229f8d5bee815e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-06T10:02:40.004Z",
  "text": "generator passed to `observed` I mean",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Sure. How it will affect step methods?",
  "id": "586f6b46aa6be0472f151286",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-06T10:02:46.323Z",
  "text": "Sure. How it will affect step methods?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "they throw an exception if you do that: <code>Mini-batches are not supported for NUTS, pass data directly to observed</code>",
  "id": "586f6b6eaa6be0472f15135f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-01-06T10:03:26.155Z",
  "text": "they throw an exception if you do that: `Mini-batches are not supported for NUTS, pass data directly to observed`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "There will be high variance in joint density ",
  "id": "586f6b6e5ffdeea7231256b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-01-06T10:03:26.319Z",
  "text": "There will be high variance in joint density ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "but some samplers do support it",
  "id": "586f6b809e6f00e74a023f1e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-01-06T10:03:44.704Z",
  "text": "but some samplers do support it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "like SGLD",
  "id": "586f6b8c9e6f00e74a023f32",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-01-06T10:03:56.385Z",
  "text": "like SGLD",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "we don&#39;t have them yet but could add them easily",
  "id": "586f6b999d4cc4fc538150fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-01-06T10:04:09.142Z",
  "text": "we don't have them yet but could add them easily",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Let&#39;s implement it?",
  "id": "586f6b9ac02c1a3959f2ef12",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-01-06T10:04:10.709Z",
  "text": "Let's implement it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yeah, <span data-link-type=\"mention\" data-screen-name=\"jsalvatier\" class=\"mention\">@jsalvatier</span> had some ideas about it",
  "id": "586f6ba5c02c1a3959f2ef4f",
  "issues": [],
  "mentions": [
   {
    "screenName": "jsalvatier",
    "userId": "5419c8f9163965c9bc20529d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-01-06T10:04:21.802Z",
  "text": "yeah, @jsalvatier had some ideas about it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "it shouldn&#39;t be too hard to implement",
  "id": "586f6bbb9d4cc4fc5381515d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-01-06T10:04:43.638Z",
  "text": "it shouldn't be too hard to implement",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I have that idea for a long time without having that time",
  "id": "586f6bc97a3f79ef5de2331a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-01-06T10:04:57.703Z",
  "text": "I have that idea for a long time without having that time",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "but it just goes to say that mini-batches are not a property of VI, and updating should thus not be implemented at that level",
  "id": "586f6bd77a3f79ef5de23370",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-01-06T10:05:11.242Z",
  "text": "but it just goes to say that mini-batches are not a property of VI, and updating should thus not be implemented at that level",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "so I really like that proposal of generator to <code>observed</code> + population kwarg",
  "id": "586f6bf4da229f8d5bee831c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-01-06T10:05:40.255Z",
  "text": "so I really like that proposal of generator to `observed` + population kwarg",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "There was a paper on nips variance reduction in sgld",
  "id": "586f6bffaf6b364a2938d462",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-01-06T10:05:51.193Z",
  "text": "There was a paper on nips variance reduction in sgld",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yeah I saw that, there&#39;s quite some interest in these methods",
  "id": "586f6c159e6f00e74a024214",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-01-06T10:06:13.364Z",
  "text": "yeah I saw that, there's quite some interest in these methods",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "there&#39;s also SGHMC, although Michael Betancourt says it&#39;s impossible: ",
  "id": "586f6c7aaf6b364a2938d6c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-01-06T10:07:54.488Z",
  "text": "there's also SGHMC, although Michael Betancourt says it's impossible: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Is it a problem that logp is stochastic with generator?",
  "id": "586f6ca2da229f8d5bee862c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-01-06T10:08:34.836Z",
  "text": "Is it a problem that logp is stochastic with generator?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<a href=\"http://andrewgelman.com/2016/12/09/fundamental-incompatibility-scalable-hamiltonian-monte-carlo-naive-data-subsampling/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://andrewgelman.com/2016/12/09/fundamental-incompatibility-scalable-hamiltonian-monte-carlo-naive-data-subsampling/</a>",
  "id": "586f6cdf5ffdeea723125daf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-01-06T10:09:35.073Z",
  "text": "http://andrewgelman.com/2016/12/09/fundamental-incompatibility-scalable-hamiltonian-monte-carlo-naive-data-subsampling/",
  "unread": false,
  "urls": [
   {
    "url": "http://andrewgelman.com/2016/12/09/fundamental-incompatibility-scalable-hamiltonian-monte-carlo-naive-data-subsampling/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ferrine\" class=\"mention\">@ferrine</span> I think that&#39;s the nature of SGD, no?",
  "id": "586f6cefda229f8d5bee8826",
  "issues": [],
  "mentions": [
   {
    "screenName": "ferrine",
    "userId": "581e3155d73408ce4f33e027",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-01-06T10:09:51.753Z",
  "text": "@ferrine I think that's the nature of SGD, no?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "as I said, it wouldn&#39;t be supported for all samplers, but mini-batch ADVI would be able to work with the API this way, no?",
  "id": "586f6d11af6b364a2938d98e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-01-06T10:10:25.530Z",
  "text": "as I said, it wouldn't be supported for all samplers, but mini-batch ADVI would be able to work with the API this way, no?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I mean the case when logp is used not for sgd",
  "id": "586f6d1caa6be0472f151b27",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-01-06T10:10:36.098Z",
  "text": "I mean the case when logp is used not for sgd",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "we&#39;d raise an exception in that case",
  "id": "586f6d267a3f79ef5de239b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-01-06T10:10:46.853Z",
  "text": "we'd raise an exception in that case",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "what&#39;s also cool is that the user would not even have to specificy <code>advi_minibatch</code>, it would just infer that from the model",
  "id": "586f6d4b7a3f79ef5de23a1c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-01-06T10:11:23.476Z",
  "text": "what's also cool is that the user would not even have to specificy `advi_minibatch`, it would just infer that from the model",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "curious what <span data-link-type=\"mention\" data-screen-name=\"taku-y\" class=\"mention\">@taku-y</span> thinks about this",
  "id": "586f6d52af6b364a2938daa2",
  "issues": [],
  "mentions": [
   {
    "screenName": "taku-y",
    "userId": "57497d60c43b8c6019756ee7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-01-06T10:11:30.346Z",
  "text": "curious what @taku-y thinks about this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Missing values in generator are a problem",
  "id": "586f6ea3af6b364a2938df6e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-01-06T10:17:07.240Z",
  "text": "Missing values in generator are a problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "do we currently support that for mini-batch ADVI?",
  "id": "586f6ebfc02c1a3959f2fd29",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-01-06T10:17:35.067Z",
  "text": "do we currently support that for mini-batch ADVI?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "perhaps that also raises an exception",
  "id": "586f6ec65ffdeea7231266d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-01-06T10:17:42.432Z",
  "text": "perhaps that also raises an exception",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Do you have an idea how to handle them?",
  "id": "586f6ec79d4cc4fc53815e67",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-01-06T10:17:43.075Z",
  "text": "Do you have an idea how to handle them?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "We do",
  "id": "586f6ed2af6b364a2938e073",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-01-06T10:17:54.242Z",
  "text": "We do",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Or not?",
  "id": "586f6edfc02c1a3959f2fd83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-01-06T10:18:07.116Z",
  "text": "Or not?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Hmm",
  "id": "586f6ee4af6b364a2938e096",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-01-06T10:18:12.963Z",
  "text": "Hmm",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I&#39;m not sure how that&#39;d be possible, but I could be wrong",
  "id": "586f6eea5ffdeea72312672c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-01-06T10:18:18.823Z",
  "text": "I'm not sure how that'd be possible, but I could be wrong",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "It is impossible as we should know all missings in advance ",
  "id": "586f6f247a3f79ef5de24245",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-01-06T10:19:16.140Z",
  "text": "It is impossible as we should know all missings in advance ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "but we just pass in a theano.shared I think",
  "id": "586f6f425ffdeea7231268d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-01-06T10:19:46.236Z",
  "text": "but we just pass in a theano.shared I think",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that wouldn&#39;t even support missing values to begin with",
  "id": "586f6f4ac02c1a3959f2ff00",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-06T10:19:54.226Z",
  "text": "that wouldn't even support missing values to begin with",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Missings are updated too ",
  "id": "586f6f62c02c1a3959f2ffc8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-06T10:20:18.522Z",
  "text": "Missings are updated too ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "They are like free vars",
  "id": "586f6f8baa6be0472f1525de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-06T10:20:59.811Z",
  "text": "They are like free vars",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "but they are not known at model construction time if you pass in a theano.shared I think",
  "id": "586f6facc02c1a3959f300df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-06T10:21:32.396Z",
  "text": "but they are not known at model construction time if you pass in a theano.shared I think",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Yes",
  "id": "586f6fc2c02c1a3959f30119",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-06T10:21:54.661Z",
  "text": "Yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "So it seems to be not supported",
  "id": "586f6fd65ffdeea723126af4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-06T10:22:14.792Z",
  "text": "So it seems to be not supported",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"1125\" data-issue-repo=\"pymc-devs/pymc3\" class=\"issue\">pymc-devs/pymc3#1125</span>",
  "id": "586f7105aa6be0472f152cfe",
  "issues": [
   {
    "number": "1125",
    "repo": "pymc-devs/pymc3"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-06T10:27:17.683Z",
  "text": "https://github.com/pymc-devs/pymc3/pull/1125",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Will it be possible to have dynamic shape?",
  "id": "586f7121c02c1a3959f3079c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-06T10:27:45.347Z",
  "text": "Will it be possible to have dynamic shape?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "BTW if generator will be implemented, then we can do symbolic sampling from distributions",
  "id": "586f72a0aa6be0472f1533a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-06T10:34:08.903Z",
  "text": "BTW if generator will be implemented, then we can do symbolic sampling from distributions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "thanks for checking.<br>symbolic sampling?",
  "id": "586f72cd9e6f00e74a025e97",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-06T10:34:53.336Z",
  "text": "thanks for checking. \nsymbolic sampling?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yes, I think that will be possible, you could ask on that PR to make sure",
  "id": "586f72dc9e6f00e74a025f0a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-06T10:35:08.690Z",
  "text": "yes, I think that will be possible, you could ask on that PR to make sure",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I asked",
  "id": "586f730baf6b364a2938f346",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-06T10:35:55.296Z",
  "text": "I asked",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Thanks ",
  "id": "586f732caa6be0472f1536d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-06T10:36:28.894Z",
  "text": "Thanks ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I feel like it&#39;s OK to not support missing values for mini-batches",
  "id": "586f7370af6b364a2938f665",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-06T10:37:36.115Z",
  "text": "I feel like it's OK to not support missing values for mini-batches",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "and since we currently don&#39;t, it should influence API discussion",
  "id": "586f7382c02c1a3959f314c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-06T10:37:54.227Z",
  "text": "and since we currently don't, it should influence API discussion",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/Springcoil_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/378800000036035294/cbf7c04c7d6714e4017364296850059f.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/378800000036035294/cbf7c04c7d6714e4017364296850059f_bigger.jpeg",
   "displayName": "Peadar Coyle \ud83d\udcce",
   "id": "58699a0ad73408ce4f408dc2",
   "url": "/Springcoil_twitter",
   "username": "Springcoil_twitter"
  },
  "html": "Hey",
  "id": "586ffb4b5ffdeea72315b5e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-06T20:17:15.358Z",
  "text": "Hey",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/Springcoil_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/378800000036035294/cbf7c04c7d6714e4017364296850059f.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/378800000036035294/cbf7c04c7d6714e4017364296850059f_bigger.jpeg",
   "displayName": "Peadar Coyle \ud83d\udcce",
   "id": "58699a0ad73408ce4f408dc2",
   "url": "/Springcoil_twitter",
   "username": "Springcoil_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ColCarroll\" class=\"mention\">@ColCarroll</span> Hi",
  "id": "586ffb5e7a3f79ef5de54594",
  "issues": [],
  "mentions": [
   {
    "screenName": "ColCarroll",
    "userId": "54500a31db8155e6700cf3d3",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2017-01-06T20:17:34.697Z",
  "text": "@ColCarroll Hi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> when should we pull the trigger on 3.0?",
  "id": "58722e835ffdeea7231f9ae9",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2017-01-08T12:20:19.373Z",
  "text": "@fonnesbeck when should we pull the trigger on 3.0?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "We could do that today. Haven&#39;t heard any trouble with the current RC. ",
  "id": "587268bd61fac5a03dafd3c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-01-08T16:28:45.671Z",
  "text": "We could do that today. Haven't heard any trouble with the current RC. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Perhaps just merge <span data-link-type=\"issue\" data-issue=\"1637\" class=\"issue\">#1637</span> once it passes, and we are good to go.",
  "id": "5872751d64d5fd7e16912d2c",
  "issues": [
   {
    "number": "1637"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-01-08T17:21:33.987Z",
  "text": "Perhaps just merge #1637 once it passes, and we are good to go.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "(We should really move these conversations over to pymc3 so that the issue/PR references work!)",
  "id": "5872754f61fac5a03db0130e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-01-08T17:22:23.412Z",
  "text": "(We should really move these conversations over to pymc3 so that the issue/PR references work!)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/bsmith89",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/711411?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/711411?v=4&s=60",
   "displayName": "Byron Smith",
   "gv": "4",
   "id": "58728192d73408ce4f4218cd",
   "url": "/bsmith89",
   "username": "bsmith89",
   "v": 4
  },
  "html": "Can anyone point me towards a way to modify a model after it has already been specified in PyMC3?  For instance: I&#39;d like to be able to take a model with a single hyperparameter and substitute in a different distribution for the prior on that parameter.  I would use this to compare the original model with the slightly modified version.  Of course, I could just specify my model twice with any changes, but this violates DRY and makes it hard to automate these comparisons.",
  "id": "587283ad873d96e16d4096a0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-08T18:23:41.728Z",
  "text": "Can anyone point me towards a way to modify a model after it has already been specified in PyMC3?  For instance: I'd like to be able to take a model with a single hyperparameter and substitute in a different distribution for the prior on that parameter.  I would use this to compare the original model with the slightly modified version.  Of course, I could just specify my model twice with any changes, but this violates DRY and makes it hard to automate these comparisons.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/bsmith89",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/711411?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/711411?v=4&s=60",
   "displayName": "Byron Smith",
   "gv": "4",
   "id": "58728192d73408ce4f4218cd",
   "url": "/bsmith89",
   "username": "bsmith89",
   "v": 4
  },
  "html": "It would also be nice if an interface to do this treated models as immutable, returning a brand-new model reflecting the modification.",
  "id": "587284206c1635643c003dff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-08T18:25:36.841Z",
  "text": "It would also be nice if an interface to do this treated models as immutable, returning a brand-new model reflecting the modification.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "hi",
  "id": "58728449300f220a66c0ffcb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-08T18:26:17.466Z",
  "text": "hi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Have you tried functional approach? It does not work with ready model but still abstracts all except your hyperparameter. As far as I know there is no way to change the model after it is specified",
  "id": "587284b5300f220a66c101b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-08T18:28:05.837Z",
  "text": "Have you tried functional approach? It does not work with ready model but still abstracts all except your hyperparameter. As far as I know there is no way to change the model after it is specified",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/bsmith89",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/711411?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/711411?v=4&s=60",
   "displayName": "Byron Smith",
   "gv": "4",
   "id": "58728192d73408ce4f4218cd",
   "url": "/bsmith89",
   "username": "bsmith89",
   "v": 4
  },
  "html": "Could you explain what you mean by a functional approach?  That phrasing would describe what I have in mind, but I don&#39;t know what features you&#39;re talking about in PyMC3.",
  "id": "58729222074f7be763a69792",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-08T19:25:22.229Z",
  "text": "Could you explain what you mean by a functional approach?  That phrasing would describe what I have in mind, but I don't know what features you're talking about in PyMC3.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I mean that you can define a function that returns a model. This function will take your parameters, possibly priors, etc",
  "id": "5872a110074f7be763a6e952",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-01-08T20:29:04.590Z",
  "text": "I mean that you can define a function that returns a model. This function will take your parameters, possibly priors, etc",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that&#39;s what I&#39;d suggest too",
  "id": "5872a5f6873d96e16d41413c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-01-08T20:49:58.021Z",
  "text": "that's what I'd suggest too",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/bsmith89",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/711411?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/711411?v=4&s=60",
   "displayName": "Byron Smith",
   "gv": "4",
   "id": "58728192d73408ce4f4218cd",
   "url": "/bsmith89",
   "username": "bsmith89",
   "v": 4
  },
  "html": "Ah, yes, this is pretty much what I&#39;m doing now.",
  "id": "5872a62bdec171b811c18df0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-01-08T20:50:51.282Z",
  "text": "Ah, yes, this is pretty much what I'm doing now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "doesn&#39;t seem to violate DRY",
  "id": "5872a640cbcb281770431139",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-01-08T20:51:12.808Z",
  "text": "doesn't seem to violate DRY",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/bsmith89",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/711411?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/711411?v=4&s=60",
   "displayName": "Byron Smith",
   "gv": "4",
   "id": "58728192d73408ce4f4218cd",
   "url": "/bsmith89",
   "username": "bsmith89",
   "v": 4
  },
  "html": "I don&#39;t completely understand the internals of model objects in PyMC3, but here&#39;s what I think is going on (let me know how wrong I am):  When I add nodes to my model they&#39;re stored implicitly in the Theano graph of my likelihood function, but <em>not</em> as a graph of PyMC3 distribution objects.",
  "id": "5872a691074f7be763a709e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-01-08T20:52:33.975Z",
  "text": "I don't completely understand the internals of model objects in PyMC3, but here's what I think is going on (let me know how wrong I am):  When I add nodes to my model they're stored implicitly in the Theano graph of my likelihood function, but _not_ as a graph of PyMC3 distribution objects.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "correct",
  "id": "5872a6a861fac5a03db125ff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-01-08T20:52:56.591Z",
  "text": "correct",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "there is no such graph",
  "id": "5872a6b2cbcb281770431365",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-01-08T20:53:06.912Z",
  "text": "there is no such graph",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/bsmith89",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/711411?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/711411?v=4&s=60",
   "displayName": "Byron Smith",
   "gv": "4",
   "id": "58728192d73408ce4f4218cd",
   "url": "/bsmith89",
   "username": "bsmith89",
   "v": 4
  },
  "html": "In my ideal world, I guess, that would exist and I&#39;d be able to modify individual nodes.  I.e., the theano graph would be regenerated when I actually need to calculate my likelihood.",
  "id": "5872a70f61fac5a03db127fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-01-08T20:54:39.106Z",
  "text": "In my ideal world, I guess, that would exist and I'd be able to modify individual nodes.  I.e., the theano graph would be regenerated when I actually need to calculate my likelihood.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/bsmith89",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/711411?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/711411?v=4&s=60",
   "displayName": "Byron Smith",
   "gv": "4",
   "id": "58728192d73408ce4f4218cd",
   "url": "/bsmith89",
   "username": "bsmith89",
   "v": 4
  },
  "html": "I assume that would be far from trivial to implement...",
  "id": "5872a721cbcb28177043156b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-01-08T20:54:57.034Z",
  "text": "I assume that would be far from trivial to implement...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "indeed, and I don&#39;t really see the need since what you&#39;re doing now should work just fine",
  "id": "5872a757873d96e16d41489c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-01-08T20:55:51.355Z",
  "text": "indeed, and I don't really see the need since what you're doing now should work just fine",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "theano does support replacing nodes I think with <code>theano.clone</code> but I wouldn&#39;t recommend that here",
  "id": "5872a798dec171b811c19859",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-01-08T20:56:56.503Z",
  "text": "theano does support replacing nodes I think with `theano.clone` but I wouldn't recommend that here",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/bsmith89",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/711411?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/711411?v=4&s=60",
   "displayName": "Byron Smith",
   "gv": "4",
   "id": "58728192d73408ce4f4218cd",
   "url": "/bsmith89",
   "username": "bsmith89",
   "v": 4
  },
  "html": "I think I&#39;m imagining functional transformations of extant models, and what you&#39;re suggesting is that I write a function which produces variations on a meta-model based on input parameters.",
  "id": "5872a824074f7be763a712e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-01-08T20:59:16.924Z",
  "text": "I think I'm imagining functional transformations of extant models, and what you're suggesting is that I write a function which produces variations on a meta-model based on input parameters.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I understand, we just don&#39;t support it",
  "id": "5872a8a564d5fd7e16923a88",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-01-08T21:01:25.501Z",
  "text": "I understand, we just don't support it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/bsmith89",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/711411?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/711411?v=4&s=60",
   "displayName": "Byron Smith",
   "gv": "4",
   "id": "58728192d73408ce4f4218cd",
   "url": "/bsmith89",
   "username": "bsmith89",
   "v": 4
  },
  "html": "Model transformations would presumably compose, but I&#39;m not sure if I actually need that for any of my use cases.  Thanks for the feedback.",
  "id": "5872a8a7cbcb281770431c10",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-01-08T21:01:27.817Z",
  "text": "Model transformations would presumably compose, but I'm not sure if I actually need that for any of my use cases.  Thanks for the feedback.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/bsmith89",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/711411?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/711411?v=4&s=60",
   "displayName": "Byron Smith",
   "gv": "4",
   "id": "58728192d73408ce4f4218cd",
   "url": "/bsmith89",
   "username": "bsmith89",
   "v": 4
  },
  "html": "And thanks for your time.",
  "id": "5872a8b7873d96e16d414f24",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-01-08T21:01:43.724Z",
  "text": "And thanks for your time.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "np",
  "id": "5872a8dbcbcb281770431cb2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-01-08T21:02:19.512Z",
  "text": "np",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> I will do a release tomorrow (Monday). Exciting times.",
  "id": "587308b0cbcb28177044dca4",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2017-01-09T03:51:12.353Z",
  "text": "@twiecki I will do a release tomorrow (Monday). Exciting times.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> I might do a quick blog post on the release, unless you already have one ready to go.",
  "id": "58739cb361fac5a03db62aa2",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2017-01-09T14:22:43.483Z",
  "text": "@twiecki I might do a quick blog post on the release, unless you already have one ready to go.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> I do not, but that&#39;s a great idea",
  "id": "58739ccd873d96e16d461251",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2017-01-09T14:23:09.582Z",
  "text": "@fonnesbeck I do not, but that's a great idea",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> do you have it up?",
  "id": "5873afa8873d96e16d468b8c",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 24,
  "sent": "2017-01-09T15:43:36.925Z",
  "text": "@fonnesbeck do you have it up?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "I&#39;m not that fast. ",
  "id": "5873afe061fac5a03db6ae83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-01-09T15:44:32.591Z",
  "text": "I'm not that fast. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "My &quot;quick&quot; I meant today sometime. I&#39;m an academic, don&#39;t forget. ",
  "id": "5873b00bdec171b811c717aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-01-09T15:45:15.817Z",
  "text": "My \"quick\" I meant today sometime. I'm an academic, don't forget. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "hahaha",
  "id": "5873b090873d96e16d46922e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-01-09T15:47:28.973Z",
  "text": "hahaha",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-01-09T15:47:56.046Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"groupmention\" data-group-name=\"all\" class=\"groupmention\">@/all</span> We released #PyMC3 3.0 today! <a href=\"https://github.com/pymc-devs/pymc3/blob/master/RELEASE-NOTES.md#pymc3-30-january-9-2017\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/blob/master/RELEASE-NOTES.md#pymc3-30-january-9-2017</a>",
  "id": "5873b0a46c1635643c06671f",
  "issues": [],
  "mentions": [
   {
    "announcement": true,
    "group": true,
    "screenName": "all",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 50,
  "sent": "2017-01-09T15:47:48.706Z",
  "text": "@/all We released #PyMC3 3.0 today! https://github.com/pymc-devs/pymc3/blob/master/RELEASE-NOTES.md#pymc3-30-january-9-2017",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/blob/master/RELEASE-NOTES.md#pymc3-30-january-9-2017"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "make some noise! :)",
  "id": "5873b301dec171b811c72a60",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-01-09T15:57:53.720Z",
  "text": "make some noise! :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ocramz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5902760?v=4&s=60",
   "displayName": "Marco Zocca",
   "gv": "4",
   "id": "54413309db8155e6700cc708",
   "url": "/ocramz",
   "username": "ocramz",
   "v": 25
  },
  "html": ":tada: :tada: :tada: ",
  "id": "5873b40d64d5fd7e1697d0cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-01-09T16:02:21.150Z",
  "text": ":tada: :tada: :tada: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "posted to hackernews and datatau, please upvote :)",
  "id": "5873b74c6c1635643c06948b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-01-09T16:16:12.729Z",
  "text": "posted to hackernews and datatau, please upvote :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> I have some problems with generator Op, I have no idea of how to implement it. What about you?",
  "id": "5873f892300f220a66c8ccfd",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 24,
  "sent": "2017-01-09T20:54:42.674Z",
  "text": "@twiecki I have some problems with generator Op, I have no idea of how to implement it. What about you?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ferrine\" class=\"mention\">@ferrine</span> why does it need an Op? couldn&#39;t you just write a python function that creates a shared and sets the value by what is retrieved from the generator?",
  "id": "58740dd2074f7be763ae81fe",
  "issues": [],
  "mentions": [
   {
    "screenName": "ferrine",
    "userId": "581e3155d73408ce4f33e027",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 24,
  "sent": "2017-01-09T22:25:22.768Z",
  "text": "@ferrine why does it need an Op? couldn't you just write a python function that creates a shared and sets the value by what is retrieved from the generator?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "e.g. <code>pm.Normal(..., observed=python_generator, population_size=n)</code>, then, inside the Distribution: <code>if isinstance(observed, generator): self.observed_shared = theano.shared</code>, then, inside the varitional update: <code>likelihood.observed_shared.set_value(generator.next())</code>",
  "id": "58740e3e64d5fd7e169a1bb4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-01-09T22:27:10.644Z",
  "text": "e.g. `pm.Normal(..., observed=python_generator, population_size=n)`, then, inside the Distribution: `if isinstance(observed, generator): self.observed_shared = theano.shared`, then, inside the varitional update: `likelihood.observed_shared.set_value(generator.next())`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "mostly pseudo code of course, just to hatch out an idea. it&#39;s far from perfect of course",
  "id": "58740e51cbcb2817704acf3e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-01-09T22:27:29.063Z",
  "text": "mostly pseudo code of course, just to hatch out an idea. it's far from perfect of course",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "or you could monkey-patch the generator to theano.shared() object, and add something like <code>observed_shared.set_value_generator()</code>",
  "id": "58749a1861fac5a03dbbc1ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-01-10T08:23:52.914Z",
  "text": "or you could monkey-patch the generator to theano.shared() object, and add something like `observed_shared.set_value_generator()`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Hi all. Have a peek at the draft blog post announcing the release. Let me know if you see any edits that need to happen before sending it around: <a href=\"http://stronginference.com\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://stronginference.com</a>",
  "id": "587581de300f220a66d13bb7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-01-11T00:52:46.173Z",
  "text": "Hi all. Have a peek at the draft blog post announcing the release. Let me know if you see any edits that need to happen before sending it around: http://stronginference.com",
  "unread": false,
  "urls": [
   {
    "url": "http://stronginference.com"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "looks great! &quot;In particular, Alp Kucukelbir and colleagues&#39; introduction of Automatic Differentiation Variational Inference (ADVI) two years ago, combined with the ability of Theano to provide automatic differentiation of Python models, made VI relatively easy to apply to arbitrary models (again, assuming the model variables are continuous).&quot; that sentence could be improved in flow",
  "id": "5875e655cbcb28177054dff9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-01-11T08:01:25.579Z",
  "text": "looks great! \"In particular, Alp Kucukelbir and colleagues' introduction of Automatic Differentiation Variational Inference (ADVI) two years ago, combined with the ability of Theano to provide automatic differentiation of Python models, made VI relatively easy to apply to arbitrary models (again, assuming the model variables are continuous).\" that sentence could be improved in flow",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "otherwise, this is awesome!",
  "id": "5875e70c873d96e16d52c1ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-01-11T08:04:28.657Z",
  "text": "otherwise, this is awesome!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Great, done. Feel free to pass it around.",
  "id": "58762f79074f7be763b98b49",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-01-11T13:13:29.789Z",
  "text": "Great, done. Feel free to pass it around.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<a href=\"http://blog.fastforwardlabs.com/post/155718521293/thomas-wiecki-on-probabilistic-programming-with\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://blog.fastforwardlabs.com/post/155718521293/thomas-wiecki-on-probabilistic-programming-with</a>",
  "id": "58764471cbcb281770570362",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-01-11T14:42:57.162Z",
  "text": "http://blog.fastforwardlabs.com/post/155718521293/thomas-wiecki-on-probabilistic-programming-with",
  "unread": false,
  "urls": [
   {
    "url": "http://blog.fastforwardlabs.com/post/155718521293/thomas-wiecki-on-probabilistic-programming-with"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> Generator Op seems to work potentially",
  "id": "58765a80300f220a66d5757a",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2017-01-11T16:17:04.167Z",
  "text": "@twiecki Generator Op seems to work potentially",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I&#39;ve tested integers generator:)",
  "id": "58765ac9e836bf70102e1dd4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-01-11T16:18:17.961Z",
  "text": "I've tested integers generator:)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ferrine\" class=\"mention\">@ferrine</span> nice!",
  "id": "58765fb7dec171b811d6a64a",
  "issues": [],
  "mentions": [
   {
    "screenName": "ferrine",
    "userId": "581e3155d73408ce4f33e027",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2017-01-11T16:39:19.889Z",
  "text": "@ferrine nice!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "ndim case also works",
  "id": "58765fc9873d96e16d559395",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-01-11T16:39:37.028Z",
  "text": "ndim case also works",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that would make for such amazing API",
  "id": "58765fe7074f7be763bac253",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-01-11T16:40:07.683Z",
  "text": "that would make for such amazing API",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Hopefully it will allow faster minibatch performance as shared.set_value step will be ommited",
  "id": "5876601a6c1635643c1662d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-01-11T16:40:58.275Z",
  "text": "Hopefully it will allow faster minibatch performance as shared.set_value step will be ommited",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "does that prohibit the case of using a shared to later run the model on test-data?",
  "id": "5876609f11e7a7f61d824103",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-01-11T16:43:11.188Z",
  "text": "does that prohibit the case of using a shared to later run the model on test-data?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "hmmm",
  "id": "587660b1074f7be763bac7d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-01-11T16:43:29.152Z",
  "text": "hmmm",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "theano.clone(...)",
  "id": "587660bf074f7be763bac81c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-01-11T16:43:43.943Z",
  "text": "theano.clone(...)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that&#39;s probably an OK price to pay",
  "id": "587660d6cbcb28177057d9f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-01-11T16:44:06.729Z",
  "text": "that's probably an OK price to pay",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I infer data type when init, replasing shoul work. But I&#39;ll add a test",
  "id": "587660fce836bf70102e4b6b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-11T16:44:44.824Z",
  "text": "I infer data type when init, replasing shoul work. But I'll add a test",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "test works",
  "id": "587661eae836bf70102e5194",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-11T16:48:42.710Z",
  "text": "test works",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "there is one problem",
  "id": "58767f19e836bf70102f2e3a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-01-11T18:53:13.329Z",
  "text": "there is one problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "pure generator in python dies when any exception is raised",
  "id": "58767f456c1635643c1741d2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-01-11T18:53:57.045Z",
  "text": "pure generator in python dies when any exception is raised",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "thus theano function will die",
  "id": "58767f51dec171b811d7867f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-01-11T18:54:09.519Z",
  "text": "thus theano function will die",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "user will need to create class based generator with state",
  "id": "58767fab6c1635643c174400",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-01-11T18:55:39.369Z",
  "text": "user will need to create class based generator with state",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "it can be difficult",
  "id": "58767fbae836bf70102f31f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-01-11T18:55:54.681Z",
  "text": "it can be difficult",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Great point raised by Aki on Twitter -- we should probably be running at least one chain by default, and with dispersed inits ",
  "id": "587687b2cbcb28177058e8c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-01-11T19:29:54.543Z",
  "text": "Great point raised by Aki on Twitter -- we should probably be running at least one chain by default, and with dispersed inits ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "agreed",
  "id": "587699f5e836bf70102fe860",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-11T20:47:49.612Z",
  "text": "agreed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "maybe just multiply ADVI variance * 2?",
  "id": "587699ffe836bf70102fe8c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-01-11T20:47:59.311Z",
  "text": "maybe just multiply ADVI variance * 2?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> just read the fastforward interview. Pretty cool!",
  "id": "5876ea5de836bf701031b07e",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2017-01-12T02:30:53.243Z",
  "text": "@twiecki just read the fastforward interview. Pretty cool!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> thanks! ",
  "id": "58774145300f220a66da0da1",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2017-01-12T08:41:41.277Z",
  "text": "@fonnesbeck thanks! ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/lezorich",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4015880?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4015880?v=3&s=60",
   "displayName": "Lukas Zorich",
   "gv": "3",
   "id": "54f4b54215522ed4b3dcb159",
   "url": "/lezorich",
   "username": "lezorich",
   "v": 1
  },
  "html": "Hi guys, does anybody knows if there is a way to use a posterior as a prior for another model? I have two models, I want to run the 1st one to get a posterior of the parameters. After the first one finishes, I want to run my 2nd model, and use the posterior of the 1st model as it&#39;s prior. Is this possible?",
  "id": "58777c1811e7a7f61d8842fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-01-12T12:52:40.411Z",
  "text": "Hi guys, does anybody knows if there is a way to use a posterior as a prior for another model? I have two models, I want to run the 1st one to get a posterior of the parameters. After the first one finishes, I want to run my 2nd model, and use the posterior of the 1st model as it's prior. Is this possible?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-01-12T12:59:17.670Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/lezorich",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4015880?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4015880?v=3&s=60",
   "displayName": "Lukas Zorich",
   "gv": "3",
   "id": "54f4b54215522ed4b3dcb159",
   "url": "/lezorich",
   "username": "lezorich",
   "v": 1
  },
  "html": "I found <a href=\"http://stackoverflow.com/questions/27292216/sequential-updating-in-pymc?rq=1\" rel=\"nofollow\" target=\"_blank\" class=\"link\">this</a> but the answer does not work for me because my model is more complex than that",
  "id": "58777ce5dec171b811dcde15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-01-12T12:56:05.458Z",
  "text": "I found [this](http://stackoverflow.com/questions/27292216/sequential-updating-in-pymc?rq=1) but the answer does not work for me because my model is more complex than that",
  "unread": false,
  "urls": [
   {
    "url": "http://stackoverflow.com/questions/27292216/sequential-updating-in-pymc?rq=1"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "the easiest is to fit a distribution to the posterior (e.g. normal) and use that",
  "id": "5877888111e7a7f61d8885a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-01-12T13:45:37.601Z",
  "text": "the easiest is to fit a distribution to the posterior (e.g. normal) and use that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/lezorich",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4015880?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4015880?v=3&s=60",
   "displayName": "Lukas Zorich",
   "gv": "3",
   "id": "54f4b54215522ed4b3dcb159",
   "url": "/lezorich",
   "username": "lezorich",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> but I should fit the same distribution as the prior? for example, if my model uses a dirichlet and a normal as the prior for some parameters, the parameter with a dirichlet prior I fit a dirichlet, and the parameter with the normal prior I fit the normal right?",
  "id": "58780930873d96e16d5ef77a",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2017-01-12T22:54:40.405Z",
  "text": "@twiecki but I should fit the same distribution as the prior? for example, if my model uses a dirichlet and a normal as the prior for some parameters, the parameter with a dirichlet prior I fit a dirichlet, and the parameter with the normal prior I fit the normal right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "not necessarily. prior and posterior must not match, in fact, they rarely do",
  "id": "58788cf7cbcb28177063bb30",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-01-13T08:16:55.484Z",
  "text": "not necessarily. prior and posterior must not match, in fact, they rarely do",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/kain88-de",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=60",
   "displayName": "Max Linke",
   "gv": "4",
   "id": "5631a05416b6c7089cb8a849",
   "url": "/kain88-de",
   "username": "kain88-de",
   "v": 10
  },
  "html": "Hi. Is there a mailing list for pymc?",
  "id": "587a4a7a074f7be763ce610a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-01-14T15:57:46.855Z",
  "text": "Hi. Is there a mailing list for pymc?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kain88-de\" class=\"mention\">@kain88-de</span> no, just gitter and stackoverflow",
  "id": "587a5027e836bf70104354f4",
  "issues": [],
  "mentions": [
   {
    "screenName": "kain88-de",
    "userId": "5631a05416b6c7089cb8a849",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2017-01-14T16:21:59.753Z",
  "text": "@kain88-de no, just gitter and stackoverflow",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/kain88-de",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=60",
   "displayName": "Max Linke",
   "gv": "4",
   "id": "5631a05416b6c7089cb8a849",
   "url": "/kain88-de",
   "username": "kain88-de",
   "v": 10
  },
  "html": "OK. I&#39;m the numFOCUS GSoC admin this year and I&#39;m just looking how to contact all numFOCUS projects to ask them if they want to take part in GSoC this year. I will then use github to tell you more details in the next few days.",
  "id": "587a50eacbcb2817706c48b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-01-14T16:25:14.566Z",
  "text": "OK. I'm the numFOCUS GSoC admin this year and I'm just looking how to contact all numFOCUS projects to ask them if they want to take part in GSoC this year. I will then use github to tell you more details in the next few days.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "thanks for getting in touch, that&#39;s a great idea and I think it&#39;s likely we&#39;d like to be a part",
  "id": "587a511b6c1635643c2af231",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-01-14T16:26:03.263Z",
  "text": "thanks for getting in touch, that's a great idea and I think it's likely we'd like to be a part",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "Dear all, is there something similar to shinystan for PyMC3?",
  "id": "587c903f873d96e16d73b78d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-01-16T09:19:59.151Z",
  "text": "Dear all, is there something similar to shinystan for PyMC3?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"junpenglao\" class=\"mention\">@junpenglao</span> not yet!",
  "id": "587c9943cbcb281770761828",
  "issues": [],
  "mentions": [
   {
    "screenName": "junpenglao",
    "userId": "56e8df4685d51f252ab907f1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2017-01-16T09:58:27.900Z",
  "text": "@junpenglao not yet!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "but would be great to build something on top of bokeh",
  "id": "587c9ed5873d96e16d740678",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-01-16T10:22:13.911Z",
  "text": "but would be great to build something on top of bokeh",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "Too bad Theano doesnt have something similar to Tensorboard, otherwise i suppose it would be quite easy to implement. ",
  "id": "587ca8076c1635643c357240",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-01-16T11:01:27.544Z",
  "text": "Too bad Theano doesnt have something similar to Tensorboard, otherwise i suppose it would be quite easy to implement. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/AvijitGhosh82",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3848733?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3848733?v=4&s=60",
   "displayName": "Avijit Ghosh",
   "gv": "4",
   "id": "56c53952e610378809c20306",
   "url": "/AvijitGhosh82",
   "username": "AvijitGhosh82",
   "v": 8
  },
  "html": "Ping!",
  "id": "5882bc81dcb66e4f768e32a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-01-21T01:42:25.430Z",
  "text": "Ping!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/AvijitGhosh82",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3848733?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3848733?v=4&s=60",
   "displayName": "Avijit Ghosh",
   "gv": "4",
   "id": "56c53952e610378809c20306",
   "url": "/AvijitGhosh82",
   "username": "AvijitGhosh82",
   "v": 8
  },
  "html": "I&#39;m coming from the Numfocus github page. I&#39;m a student of financial engineering (who is also a huge code fanatic). I&#39;m pretty interested in statistics and Pymc3 interests me because of it&#39;s applications in Bayesian Modeling. ",
  "id": "5882bd0f074f7be763f97a79",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-01-21T01:44:47.730Z",
  "text": "I'm coming from the Numfocus github page. I'm a student of financial engineering (who is also a huge code fanatic). I'm pretty interested in statistics and Pymc3 interests me because of it's applications in Bayesian Modeling. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/AvijitGhosh82",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3848733?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3848733?v=4&s=60",
   "displayName": "Avijit Ghosh",
   "gv": "4",
   "id": "56c53952e610378809c20306",
   "url": "/AvijitGhosh82",
   "username": "AvijitGhosh82",
   "v": 8
  },
  "html": "Is there a GsoC ideas page from where I can get started? Gracias!",
  "id": "5882bd34519afee26b91f5c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-01-21T01:45:24.026Z",
  "text": "Is there a GsoC ideas page from where I can get started? Gracias!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<a href=\"https://github.com/pymc-devs/pymc3/wiki/GSoC-2017-projects\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/wiki/GSoC-2017-projects</a>",
  "id": "58832bfb300f220a66155410",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-01-21T09:38:03.881Z",
  "text": "https://github.com/pymc-devs/pymc3/wiki/GSoC-2017-projects",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/wiki/GSoC-2017-projects"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<a href=\"https://github.com/pymc-devs/pymc3/wiki/PyMC-3-Wish-List\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/wiki/PyMC-3-Wish-List</a>",
  "id": "58832c03dcb66e4f768fbc78",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-01-21T09:38:11.567Z",
  "text": "https://github.com/pymc-devs/pymc3/wiki/PyMC-3-Wish-List",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/wiki/PyMC-3-Wish-List"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "So, it looks like our nice new conda pymc3 release does not work with the conda theano. I get illegal hardware instruction errors every time I try to use it. Updating to the current github master fixes the issue. Anyone else get this?",
  "id": "5883c036e836bf701073ed14",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-01-21T20:10:30.558Z",
  "text": "So, it looks like our nice new conda pymc3 release does not work with the conda theano. I get illegal hardware instruction errors every time I try to use it. Updating to the current github master fixes the issue. Anyone else get this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Actually, it looks like you need the PyMC3 release from pip to make it work. Pretty annoying. Users should be able to install a working version from conda.",
  "id": "5883c579dcb66e4f769298df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-01-21T20:32:57.684Z",
  "text": "Actually, it looks like you need the PyMC3 release from pip to make it work. Pretty annoying. Users should be able to install a working version from conda.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/kain88-de",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=60",
   "displayName": "Max Linke",
   "gv": "4",
   "id": "5631a05416b6c7089cb8a849",
   "url": "/kain88-de",
   "username": "kain88-de",
   "v": 10
  },
  "html": "Did you inform the continuum folks about that? They respond quickly on the anaconda mailing list normally.",
  "id": "58849014e836bf701077398b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-01-22T10:57:24.564Z",
  "text": "Did you inform the continuum folks about that? They respond quickly on the anaconda mailing list normally.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "perhaps need to add dev version of theano to conda-forge",
  "id": "5885be20c0de6f017fdc85e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-01-23T08:26:08.813Z",
  "text": "perhaps need to add dev version of theano to conda-forge",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "Is there any divergence warning output in pymc3 like in Stan? Michael Betancourt in his paper on HMC (and his talk in StanCon) was quite serious about it.",
  "id": "5885ffbec0de6f017fddf668",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-01-23T13:06:06.128Z",
  "text": "Is there any divergence warning output in pymc3 like in Stan? Michael Betancourt in his paper on HMC (and his talk in StanCon) was quite serious about it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "divergence from what?",
  "id": "58861a5511e7a7f61dd3853f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-01-23T14:59:33.905Z",
  "text": "divergence from what?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "the divergence of the numerical trajectories of HMC <a href=\"https://arxiv.org/abs/1701.02434\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://arxiv.org/abs/1701.02434</a>",
  "id": "588626a0c0de6f017fdeed7e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-01-23T15:52:00.473Z",
  "text": "the divergence of the numerical trajectories of HMC https://arxiv.org/abs/1701.02434",
  "unread": false,
  "urls": [
   {
    "url": "https://arxiv.org/abs/1701.02434"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/kain88-de",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=60",
   "displayName": "Max Linke",
   "gv": "4",
   "id": "5631a05416b6c7089cb8a849",
   "url": "/kain88-de",
   "username": "kain88-de",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> do you have time to work on the pymc3 ideas list. It is important that you improve your list. Google mainly judges projects by their ideas list and they would like to see the level of information we outline in our skeleton.  A simple bullet-point list could be a reason not to accept us for them.",
  "id": "588f0bb9fba5bfea06a63334",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 25,
  "sent": "2017-01-30T09:47:37.023Z",
  "text": "@twiecki do you have time to work on the pymc3 ideas list. It is important that you improve your list. Google mainly judges projects by their ideas list and they would like to see the level of information we outline in our skeleton.  A simple bullet-point list could be a reason not to accept us for them.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kain88-de\" class=\"mention\">@kain88-de</span> certainly. what&#39;s the deadline again?",
  "id": "588f142c4c04e9a44e4a1b70",
  "issues": [],
  "mentions": [
   {
    "screenName": "kain88-de",
    "userId": "5631a05416b6c7089cb8a849",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 25,
  "sent": "2017-01-30T10:23:40.429Z",
  "text": "@kain88-de certainly. what's the deadline again?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/kain88-de",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=60",
   "displayName": "Max Linke",
   "gv": "4",
   "id": "5631a05416b6c7089cb8a849",
   "url": "/kain88-de",
   "username": "kain88-de",
   "v": 10
  },
  "html": "Thanks the deadline is Februar 9.  ",
  "id": "588f14605309d6b35885e99b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-01-30T10:24:32.860Z",
  "text": "Thanks the deadline is Februar 9.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "ok, we&#39;ll get hopping",
  "id": "588f14741e4d4bd962aeb6ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-01-30T10:24:52.323Z",
  "text": "ok, we'll get hopping",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> we are using this page for the list, correct? <a href=\"https://github.com/pymc-devs/pymc3/wiki/GSoC-2017-projects\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/wiki/GSoC-2017-projects</a>",
  "id": "588f4770dcb66e4f76cbb4bf",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-01-30T14:02:24.013Z",
  "text": "@twiecki we are using this page for the list, correct? https://github.com/pymc-devs/pymc3/wiki/GSoC-2017-projects",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/wiki/GSoC-2017-projects"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yes",
  "id": "588f478a4c04e9a44e4b46c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-01-30T14:02:50.978Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kain88-de\" class=\"mention\">@kain88-de</span> we made some additions: <a href=\"https://github.com/pymc-devs/pymc3/wiki/GSoC-2017-projects\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/wiki/GSoC-2017-projects</a> can you let us know how much more detailed you think this should be?",
  "id": "588fc184dcb66e4f76ceb420",
  "issues": [],
  "mentions": [
   {
    "screenName": "kain88-de",
    "userId": "5631a05416b6c7089cb8a849",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 25,
  "sent": "2017-01-30T22:43:16.418Z",
  "text": "@kain88-de we made some additions: https://github.com/pymc-devs/pymc3/wiki/GSoC-2017-projects can you let us know how much more detailed you think this should be?",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/wiki/GSoC-2017-projects"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/kain88-de",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=60",
   "displayName": "Max Linke",
   "gv": "4",
   "id": "5631a05416b6c7089cb8a849",
   "url": "/kain88-de",
   "username": "kain88-de",
   "v": 10
  },
  "html": "thanks for the update looks a lot better now. It would be nice if you could also say how difficult you estimate the project to be and give a 1-2 sentence description of useful knowledge to tackle the problem. If you know possible mentors for the projects you can also add them to the project.",
  "id": "58904afee836bf7010b1f9c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-01-31T08:29:50.017Z",
  "text": "thanks for the update looks a lot better now. It would be nice if you could also say how difficult you estimate the project to be and give a 1-2 sentence description of useful knowledge to tackle the problem. If you know possible mentors for the projects you can also add them to the project.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/kain88-de",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=60",
   "displayName": "Max Linke",
   "gv": "4",
   "id": "5631a05416b6c7089cb8a849",
   "url": "/kain88-de",
   "username": "kain88-de",
   "v": 10
  },
  "html": "If you like I can also link to your new developer guides page, if you have it, on the numfocus GSoC page",
  "id": "58904b79e836bf7010b1fb34",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-01-31T08:31:53.383Z",
  "text": "If you like I can also link to your new developer guides page, if you have it, on the numfocus GSoC page",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kain88-de\" class=\"mention\">@kain88-de</span> I added possible mentors, will add notes on difficulties. do we need to do more or is that page enough for the application?",
  "id": "58931019dcb66e4f76dfa3f1",
  "issues": [],
  "mentions": [
   {
    "screenName": "kain88-de",
    "userId": "5631a05416b6c7089cb8a849",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2017-02-02T10:55:21.750Z",
  "text": "@kain88-de I added possible mentors, will add notes on difficulties. do we need to do more or is that page enough for the application?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/kain88-de",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=60",
   "displayName": "Max Linke",
   "gv": "4",
   "id": "5631a05416b6c7089cb8a849",
   "url": "/kain88-de",
   "username": "kain88-de",
   "v": 10
  },
  "html": "Should be enough.  Adding the github handle of the mentors would be a good last addition if you have the time that makes it easier for students to ping mentors in the numfocus/gsoc issue board to discuss the projects.  I planned to go over all application idea pages on the weekend and make them look uniform. ",
  "id": "589311891e4d4bd962c52f61",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-02-02T11:01:29.094Z",
  "text": "Should be enough.  Adding the github handle of the mentors would be a good last addition if you have the time that makes it easier for students to ping mentors in the numfocus/gsoc issue board to discuss the projects.  I planned to go over all application idea pages on the weekend and make them look uniform. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kain88-de\" class=\"mention\">@kain88-de</span> talking to interested contributors probably only makes sense once we know how many slots we get, no?",
  "id": "5893134a4c04e9a44e5f876d",
  "issues": [],
  "mentions": [
   {
    "screenName": "kain88-de",
    "userId": "5631a05416b6c7089cb8a849",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2017-02-02T11:08:58.003Z",
  "text": "@kain88-de talking to interested contributors probably only makes sense once we know how many slots we get, no?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/kain88-de",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=60",
   "displayName": "Max Linke",
   "gv": "4",
   "id": "5631a05416b6c7089cb8a849",
   "url": "/kain88-de",
   "username": "kain88-de",
   "v": 10
  },
  "html": "I find it useful before already.  You can always offer interested students to mentor them without the google stipend as well if your mentors are interested in that",
  "id": "5893138ae836bf7010c050ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-02-02T11:10:02.659Z",
  "text": "I find it useful before already.  You can always offer interested students to mentor them without the google stipend as well if your mentors are interested in that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/kain88-de",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=60",
   "displayName": "Max Linke",
   "gv": "4",
   "id": "5631a05416b6c7089cb8a849",
   "url": "/kain88-de",
   "username": "kain88-de",
   "v": 10
  },
  "html": "my main goal of GSoC is to find long term contributors for the project. So we try to talk to all new students who show up and get them involved. This is what I have done at Mixxx and MDAnalysis. This year we got 2 prospective students who are already actively fixing bugs",
  "id": "589313c3dcb66e4f76dfb821",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-02-02T11:10:59.759Z",
  "text": "my main goal of GSoC is to find long term contributors for the project. So we try to talk to all new students who show up and get them involved. This is what I have done at Mixxx and MDAnalysis. This year we got 2 prospective students who are already actively fixing bugs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I see. and does numfocus get the slots and distributes them or do individual projects get them directly?",
  "id": "589313cf4c04e9a44e5f896b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-02-02T11:11:11.861Z",
  "text": "I see. and does numfocus get the slots and distributes them or do individual projects get them directly?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "cool, makes sense",
  "id": "589313d31e4d4bd962c53bef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-02-02T11:11:15.191Z",
  "text": "cool, makes sense",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/kain88-de",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=60",
   "displayName": "Max Linke",
   "gv": "4",
   "id": "5631a05416b6c7089cb8a849",
   "url": "/kain88-de",
   "username": "kain88-de",
   "v": 10
  },
  "html": "Numfocus gets slots and distributes them. I&#39;ll write you more about this when we are accepted. ",
  "id": "589315935309d6b3589b63c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-02-02T11:18:43.846Z",
  "text": "Numfocus gets slots and distributes them. I'll write you more about this when we are accepted. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/kain88-de",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=60",
   "displayName": "Max Linke",
   "gv": "4",
   "id": "5631a05416b6c7089cb8a849",
   "url": "/kain88-de",
   "username": "kain88-de",
   "v": 10
  },
  "html": "About approaching students. I usually give them a short guide how to get started using/compiling MDANALYSIS and a quick bug for beginners. Then I wait and see if there is any feedback from the student. ",
  "id": "589315d6dcb66e4f76dfc1f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-02-02T11:19:50.845Z",
  "text": "About approaching students. I usually give them a short guide how to get started using/compiling MDANALYSIS and a quick bug for beginners. Then I wait and see if there is any feedback from the student. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/calogerol",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20437837?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20437837?v=3&s=60",
   "displayName": "Lee",
   "gv": "3",
   "id": "58989227d73408ce4f4871ad",
   "url": "/calogerol",
   "username": "calogerol"
  },
  "html": "Hi guys!",
  "id": "5898923a00c00c3d4f01e62b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-02-06T15:11:54.520Z",
  "text": "Hi guys!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "hey lee",
  "id": "5898925300c00c3d4f01e670",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-02-06T15:12:19.212Z",
  "text": "hey lee",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/calogerol",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20437837?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20437837?v=3&s=60",
   "displayName": "Lee",
   "gv": "3",
   "id": "58989227d73408ce4f4871ad",
   "url": "/calogerol",
   "username": "calogerol"
  },
  "html": "I just started using PyMC and I have got some experience with RStan. I am going trough the example on PyMC3 on Gaussian Processes. However, I can&#39;t load the required module and I don&#39;t understand why.",
  "id": "589892c0aa800ee52c5c5f66",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-02-06T15:14:08.757Z",
  "text": "I just started using PyMC and I have got some experience with RStan. I am going trough the example on PyMC3 on Gaussian Processes. However, I can't load the required module and I don't understand why.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/calogerol",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20437837?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20437837?v=3&s=60",
   "displayName": "Lee",
   "gv": "3",
   "id": "58989227d73408ce4f4871ad",
   "url": "/calogerol",
   "username": "calogerol"
  },
  "html": "cov = s2_f_true * pm.gp.cov.ExpQuad(1, l_true)",
  "id": "589892c31465c46a562bcee7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-02-06T15:14:11.376Z",
  "text": "cov = s2_f_true * pm.gp.cov.ExpQuad(1, l_true)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/calogerol",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20437837?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20437837?v=3&s=60",
   "displayName": "Lee",
   "gv": "3",
   "id": "58989227d73408ce4f4871ad",
   "url": "/calogerol",
   "username": "calogerol"
  },
  "html": "Results in ...",
  "id": "589892c7de5049082293390f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-02-06T15:14:15.580Z",
  "text": "Results in ...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/calogerol",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20437837?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20437837?v=3&s=60",
   "displayName": "Lee",
   "gv": "3",
   "id": "58989227d73408ce4f4871ad",
   "url": "/calogerol",
   "username": "calogerol"
  },
  "html": "&#39;module&#39; object has no attribute &#39;gp&#39;",
  "id": "589892d121d548df2cd29148",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-02-06T15:14:25.557Z",
  "text": "'module' object has no attribute 'gp'",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/calogerol",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20437837?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20437837?v=3&s=60",
   "displayName": "Lee",
   "gv": "3",
   "id": "58989227d73408ce4f4871ad",
   "url": "/calogerol",
   "username": "calogerol"
  },
  "html": "Any ideas?",
  "id": "589892f100c00c3d4f01eac6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-02-06T15:14:57.241Z",
  "text": "Any ideas?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "did you install pymc3 master?",
  "id": "58989344de50490822933bf6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-02-06T15:16:20.160Z",
  "text": "did you install pymc3 master?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/calogerol",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20437837?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20437837?v=3&s=60",
   "displayName": "Lee",
   "gv": "3",
   "id": "58989227d73408ce4f4871ad",
   "url": "/calogerol",
   "username": "calogerol"
  },
  "html": "I did not install the latest as I usually use pip to install modules.",
  "id": "5898937400c00c3d4f01ef4f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-02-06T15:17:08.160Z",
  "text": "I did not install the latest as I usually use pip to install modules.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<code>pip install git+https://github.com/pymc-devs/pymc3</code>",
  "id": "58989382f045df0a221257a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-02-06T15:17:22.847Z",
  "text": "`pip install git+https://github.com/pymc-devs/pymc3`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/calogerol",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20437837?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20437837?v=3&s=60",
   "displayName": "Lee",
   "gv": "3",
   "id": "58989227d73408ce4f4871ad",
   "url": "/calogerol",
   "username": "calogerol"
  },
  "html": "Hm ... OK.  Thanks. I will try that. ...",
  "id": "589893cb6018ccd652793b97",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-02-06T15:18:35.203Z",
  "text": "Hm ... OK.  Thanks. I will try that. ...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/calogerol",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20437837?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20437837?v=3&s=60",
   "displayName": "Lee",
   "gv": "3",
   "id": "58989227d73408ce4f4871ad",
   "url": "/calogerol",
   "username": "calogerol"
  },
  "html": "It is not working. Frustrating.",
  "id": "589898ee1465c46a562bf4e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-02-06T15:40:30.272Z",
  "text": "It is not working. Frustrating.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "perhaps the old installation is still lingering around?",
  "id": "589996186b2d8dd5521089e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-02-07T09:40:40.356Z",
  "text": "perhaps the old installation is still lingering around?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kris-singh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11256139?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11256139?v=4&s=60",
   "displayName": "Kris Singh",
   "gv": "4",
   "id": "57422546c43b8c6019745a6a",
   "url": "/kris-singh",
   "username": "kris-singh",
   "v": 13
  },
  "html": "hi i am interested in GSOC 2k17 i was intrested in two topics 1. Implement non-parameteric Bayesian methods<br>2.Riemann manifold Langevin and Hamiltonian Monte Carlo methods how should i go about it. Are there any existing issue that i should solve for getting familiar with code base thanks",
  "id": "589aed7cde504908229fba8d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-02-08T10:05:48.219Z",
  "text": "hi i am interested in GSOC 2k17 i was intrested in two topics 1. Implement non-parameteric Bayesian methods\n2.Riemann manifold Langevin and Hamiltonian Monte Carlo methods how should i go about it. Are there any existing issue that i should solve for getting familiar with code base thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kris-singh\" class=\"mention\">@kris-singh</span> fantastic. I think reading the HMC code is a good start. stochastic gradient HMC is also a very interesting avenue to explore",
  "id": "589aeed6de504908229fc0ab",
  "issues": [],
  "mentions": [
   {
    "screenName": "kris-singh",
    "userId": "57422546c43b8c6019745a6a",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-02-08T10:11:34.517Z",
  "text": "@kris-singh fantastic. I think reading the HMC code is a good start. stochastic gradient HMC is also a very interesting avenue to explore",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I have just browsed the issues list but not found good intro fixes, will need to think some more",
  "id": "589aeee61465c46a56391f22",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-02-08T10:11:50.218Z",
  "text": "I have just browsed the issues list but not found good intro fixes, will need to think some more",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "this one perhaps: <span data-link-type=\"issue\" data-issue=\"1491\" data-issue-repo=\"pymc-devs/pymc3\" class=\"issue\">pymc-devs/pymc3#1491</span>",
  "id": "589aeef9de504908229fc1d7",
  "issues": [
   {
    "number": "1491",
    "repo": "pymc-devs/pymc3"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-02-08T10:12:09.905Z",
  "text": "this one perhaps: https://github.com/pymc-devs/pymc3/issues/1491",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kris-singh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11256139?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11256139?v=4&s=60",
   "displayName": "Kris Singh",
   "gv": "4",
   "id": "57422546c43b8c6019745a6a",
   "url": "/kris-singh",
   "username": "kris-singh",
   "v": 13
  },
  "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span>  i will go through the paper and let you know if i face any diffculties. Also is there any resource for reading upon non parametric bayes.",
  "id": "589af072de504908229fca22",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-02-08T10:18:26.135Z",
  "text": "Thanks @twiecki  i will go through the paper and let you know if i face any diffculties. Also is there any resource for reading upon non parametric bayes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kris-singh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11256139?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11256139?v=4&s=60",
   "displayName": "Kris Singh",
   "gv": "4",
   "id": "57422546c43b8c6019745a6a",
   "url": "/kris-singh",
   "username": "kris-singh",
   "v": 13
  },
  "html": "also is there any developer guides for pymc3",
  "id": "589af1a61465c46a56392daa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-02-08T10:23:34.691Z",
  "text": "also is there any developer guides for pymc3",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "if you&#39;re looking for a theoretical introduction, I found Erik Sudderth&#39;s PhD thesis a great read",
  "id": "589af1d0aa800ee52c69acc7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-02-08T10:24:16.971Z",
  "text": "if you're looking for a theoretical introduction, I found Erik Sudderth's PhD thesis a great read",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "no written down developer guidelines but it&#39;s pretty straight forward: pep8, unit-tests, CI, docs",
  "id": "589af200f045df0a221f1939",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-02-08T10:25:04.772Z",
  "text": "no written down developer guidelines but it's pretty straight forward: pep8, unit-tests, CI, docs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "also reading through the examples on our homepage is a good place to start",
  "id": "589af21e1465c46a56393005",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-02-08T10:25:34.221Z",
  "text": "also reading through the examples on our homepage is a good place to start",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kris-singh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11256139?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11256139?v=4&s=60",
   "displayName": "Kris Singh",
   "gv": "4",
   "id": "57422546c43b8c6019745a6a",
   "url": "/kris-singh",
   "username": "kris-singh",
   "v": 13
  },
  "html": "while running the garch example i am getting a TypeError  &#39;isinf&#39; not supported for input types. which branch should i use.",
  "id": "589c214500c00c3d4f15b82a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-02-09T07:59:01.940Z",
  "text": "while running the garch example i am getting a TypeError  'isinf' not supported for input types. which branch should i use.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "due to the interest in low-hanging fruit and beginner projects, I added a new label: <a href=\"https://github.com/pymc-devs/pymc3/labels/beginner_friendly\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/labels/beginner_friendly</a>",
  "id": "58a1a5ab00c00c3d4f313105",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-02-13T12:25:15.514Z",
  "text": "due to the interest in low-hanging fruit and beginner projects, I added a new label: https://github.com/pymc-devs/pymc3/labels/beginner_friendly",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/labels/beginner_friendly"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/souravsingh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4314261?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4314261?v=4&s=60",
   "displayName": "Sourav Singh",
   "gv": "4",
   "id": "5506544215522ed4b3dd4fec",
   "url": "/souravsingh",
   "username": "souravsingh",
   "v": 54
  },
  "html": "Thanks a lot <span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> ",
  "id": "58a1d87ede50490822c1c378",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-02-13T16:02:06.524Z",
  "text": "Thanks a lot @twiecki ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/bhargavvader",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8374816?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8374816?v=4&s=60",
   "displayName": "Bhargav Srinivasa",
   "gv": "4",
   "id": "57430fe4c43b8c60197476d9",
   "url": "/bhargavvader",
   "username": "bhargavvader",
   "v": 14
  },
  "html": "Had some questions about running test after making changes -",
  "id": "58a56ecd21d548df2c17c4c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-02-16T09:20:13.921Z",
  "text": "Had some questions about running test after making changes -",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/bhargavvader",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8374816?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8374816?v=4&s=60",
   "displayName": "Bhargav Srinivasa",
   "gv": "4",
   "id": "57430fe4c43b8c60197476d9",
   "url": "/bhargavvader",
   "username": "bhargavvader",
   "v": 14
  },
  "html": "So far, I&#39;ve done this -<br>1) Make changes to code base<br>2) run <code>python setup.py install</code><br>3) after pymc3 is installed, from the pymc3 directory I run <code>python pymc3/tests/test_to_run</code>",
  "id": "58a56f611465c46a5670d425",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-02-16T09:22:41.157Z",
  "text": "So far, I've done this - \n1) Make changes to code base\n2) run `python setup.py install`\n3) after pymc3 is installed, from the pymc3 directory I run `python pymc3/tests/test_to_run`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/bhargavvader",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8374816?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8374816?v=4&s=60",
   "displayName": "Bhargav Srinivasa",
   "gv": "4",
   "id": "57430fe4c43b8c60197476d9",
   "url": "/bhargavvader",
   "username": "bhargavvader",
   "v": 14
  },
  "html": "Is this the correct way to run tests locally? Or is there a test suite or something? Right now when I do this, I get the following error message - <code>Traceback (most recent call last):\n  File &quot;pymc3/tests/test_distributions.py&quot;, line 4, in &lt;module&gt;\n    from .helpers import SeededTest\nValueError: Attempted relative import in non-package</code>",
  "id": "58a56f92aa800ee52ca1ac53",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-02-16T09:23:30.560Z",
  "text": "Is this the correct way to run tests locally? Or is there a test suite or something? Right now when I do this, I get the following error message - ```Traceback (most recent call last):\n  File \"pymc3/tests/test_distributions.py\", line 4, in <module>\n    from .helpers import SeededTest\nValueError: Attempted relative import in non-package```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/bhargavvader",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8374816?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8374816?v=4&s=60",
   "displayName": "Bhargav Srinivasa",
   "gv": "4",
   "id": "57430fe4c43b8c60197476d9",
   "url": "/bhargavvader",
   "username": "bhargavvader",
   "v": 14
  },
  "html": "On that note - if I&#39;ve installed pymc3 by cloning and running <code>python setup.py install</code> or <code>python setup.py develop</code>, how do I then uninstall that version?",
  "id": "58a57229872fc8ce6241f383",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-02-16T09:34:33.329Z",
  "text": "On that note - if I've installed pymc3 by cloning and running `python setup.py install` or `python setup.py develop`, how do I then uninstall that version?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/bhargavvader",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8374816?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8374816?v=4&s=60",
   "displayName": "Bhargav Srinivasa",
   "gv": "4",
   "id": "57430fe4c43b8c60197476d9",
   "url": "/bhargavvader",
   "username": "bhargavvader",
   "v": 14
  },
  "html": "Or would I have to use the docker for testing any local development? Basically wanted to know if there&#39;s any quick way to test changes",
  "id": "58a57ab2872fc8ce624226f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-02-16T10:10:58.355Z",
  "text": "Or would I have to use the docker for testing any local development? Basically wanted to know if there's any quick way to test changes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "what I do is this: not install pymc3 (if you did, remove it from site-packages dir) and run <code>conda develop .</code> in the pymc3 root dir (definitely use anaconda). then you can just run <code>nosetests pymc3/tests</code>",
  "id": "58a580e61465c46a56713753",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-02-16T10:37:26.149Z",
  "text": "what I do is this: not install pymc3 (if you did, remove it from site-packages dir) and run `conda develop .` in the pymc3 root dir (definitely use anaconda). then you can just run `nosetests pymc3/tests`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/bhargavvader",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8374816?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8374816?v=4&s=60",
   "displayName": "Bhargav Srinivasa",
   "gv": "4",
   "id": "57430fe4c43b8c60197476d9",
   "url": "/bhargavvader",
   "username": "bhargavvader",
   "v": 14
  },
  "html": "I use virtualenv instead of conda - would you recommend switching? And if I am not using conda, what would I run instead of <code>conda develop .</code>?",
  "id": "58a58bdb1465c46a567175b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-02-16T11:24:11.683Z",
  "text": "I use virtualenv instead of conda - would you recommend switching? And if I am not using conda, what would I run instead of `conda develop .`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "setup.py develop",
  "id": "58a58cf10ad50ac31522d692",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-02-16T11:28:49.667Z",
  "text": "setup.py develop",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I do recommend switching",
  "id": "58a58cf70ad50ac31522d69b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-02-16T11:28:55.067Z",
  "text": "I do recommend switching",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pstjohn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=60",
   "displayName": "Peter St. John",
   "gv": "4",
   "id": "57976c7440f3a6eec05c88a5",
   "url": "/pstjohn",
   "username": "pstjohn",
   "v": 12
  },
  "html": "Is there a pymc3 users group or mailing list? Where would the best place to direct usage questions be?",
  "id": "58a638b79eb1bd81481d19d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-02-16T23:41:43.938Z",
  "text": "Is there a pymc3 users group or mailing list? Where would the best place to direct usage questions be?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"pstjohn\" class=\"mention\">@pstjohn</span> best place is here, there is no mailing list",
  "id": "58a6b632f045df0a225bba0f",
  "issues": [],
  "mentions": [
   {
    "screenName": "pstjohn",
    "userId": "57976c7440f3a6eec05c88a5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 24,
  "sent": "2017-02-17T08:37:06.567Z",
  "text": "@pstjohn best place is here, there is no mailing list",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "maybe we should create one though",
  "id": "58a6b63b0ad50ac31529589a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-02-17T08:37:15.529Z",
  "text": "maybe we should create one though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/kain88-de",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=60",
   "displayName": "Max Linke",
   "gv": "4",
   "id": "5631a05416b6c7089cb8a849",
   "url": "/kain88-de",
   "username": "kain88-de",
   "v": 10
  },
  "html": "It would be nice if your homepage/github page had a section about your preferred communication channels. We had a some questions to the numfocus org how to contact you.",
  "id": "58a6c3c3f045df0a225c011d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-02-17T09:34:59.156Z",
  "text": "It would be nice if your homepage/github page had a section about your preferred communication channels. We had a some questions to the numfocus org how to contact you.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/kain88-de",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=60",
   "displayName": "Max Linke",
   "gv": "4",
   "id": "5631a05416b6c7089cb8a849",
   "url": "/kain88-de",
   "username": "kain88-de",
   "v": 10
  },
  "html": "At <a href=\"http://www.mdanalysis.org\" rel=\"nofollow\" target=\"_blank\" class=\"link\">www.mdanalysis.org</a> our landing page shows directly how we can be contacted.  Would be a small change to help people contact you",
  "id": "58a6c40b00c00c3d4f4ea2b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-02-17T09:36:11.591Z",
  "text": "At www.mdanalysis.org our landing page shows directly how we can be contacted.  Would be a small change to help people contact you",
  "unread": false,
  "urls": [
   {
    "url": "http://www.mdanalysis.org"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "good point, should really add that",
  "id": "58a6ca1221d548df2c1f7dd0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-02-17T10:01:54.683Z",
  "text": "good point, should really add that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "I am updating our README now.",
  "id": "58a6ff160ad50ac3152af2b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-02-17T13:48:06.994Z",
  "text": "I am updating our README now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/ColCarroll",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2295568?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2295568?v=4&s=60",
   "displayName": "Colin",
   "gv": "4",
   "id": "54500a31db8155e6700cf3d3",
   "url": "/ColCarroll",
   "username": "ColCarroll",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"bhargavvader\" class=\"mention\">@bhargavvader</span> happy to help you set up docker for local development",
  "id": "58a702de21d548df2c20c014",
  "issues": [],
  "mentions": [
   {
    "screenName": "bhargavvader",
    "userId": "57430fe4c43b8c60197476d9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 25,
  "sent": "2017-02-17T14:04:14.887Z",
  "text": "@bhargavvader happy to help you set up docker for local development",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/ColCarroll",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2295568?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2295568?v=4&s=60",
   "displayName": "Colin",
   "gv": "4",
   "id": "54500a31db8155e6700cf3d3",
   "url": "/ColCarroll",
   "username": "ColCarroll",
   "v": 5
  },
  "html": "we should probably also have a script to update the docker image (i still haven&#39;t bumped it from 3.5.2 to 3.6), but it makes iterating pretty fast",
  "id": "58a70323872fc8ce624ab4c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-02-17T14:05:23.378Z",
  "text": "we should probably also have a script to update the docker image (i still haven't bumped it from 3.5.2 to 3.6), but it makes iterating pretty fast",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "we also have a continuously built docker container on dockerhub: <a href=\"https://hub.docker.com/r/pymc/pymc3/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://hub.docker.com/r/pymc/pymc3/</a>",
  "id": "58a70446de50490822ddfaf0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-02-17T14:10:14.701Z",
  "text": "we also have a continuously built docker container on dockerhub: https://hub.docker.com/r/pymc/pymc3/",
  "unread": false,
  "urls": [
   {
    "url": "https://hub.docker.com/r/pymc/pymc3/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<code>docker pull pymc/pymc3</code>and you&#39;re in business",
  "id": "58a70456f045df0a225d6685",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-02-17T14:10:30.927Z",
  "text": "`docker pull pymc/pymc3`and you're in business",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/ColCarroll",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2295568?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2295568?v=4&s=60",
   "displayName": "Colin",
   "gv": "4",
   "id": "54500a31db8155e6700cf3d3",
   "url": "/ColCarroll",
   "username": "ColCarroll",
   "v": 5
  },
  "html": "ah, awesome!",
  "id": "58a7061f21d548df2c20d3fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-02-17T14:18:07.001Z",
  "text": "ah, awesome!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "not sure if it works for branches though",
  "id": "58a7079e0ad50ac3152b2551",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-02-17T14:24:30.019Z",
  "text": "not sure if it works for branches though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/ColCarroll",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2295568?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2295568?v=4&s=60",
   "displayName": "Colin",
   "gv": "4",
   "id": "54500a31db8155e6700cf3d3",
   "url": "/ColCarroll",
   "username": "ColCarroll",
   "v": 5
  },
  "html": "ah, miniconda3 still points to 3.5.2 anyways",
  "id": "58a70d1000c00c3d4f5050df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-02-17T14:47:44.697Z",
  "text": "ah, miniconda3 still points to 3.5.2 anyways",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/ColCarroll",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2295568?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2295568?v=4&s=60",
   "displayName": "Colin",
   "gv": "4",
   "id": "54500a31db8155e6700cf3d3",
   "url": "/ColCarroll",
   "username": "ColCarroll",
   "v": 5
  },
  "html": "can&#39;t find an issue/timeline for when that will update",
  "id": "58a70d170ad50ac3152b4998",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-02-17T14:47:51.844Z",
  "text": "can't find an issue/timeline for when that will update",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/ColCarroll",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2295568?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2295568?v=4&s=60",
   "displayName": "Colin",
   "gv": "4",
   "id": "54500a31db8155e6700cf3d3",
   "url": "/ColCarroll",
   "username": "ColCarroll",
   "v": 5
  },
  "html": "<a href=\"https://conda.io/miniconda.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://conda.io/miniconda.html</a>",
  "id": "58a70d1900c00c3d4f50510b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-02-17T14:47:53.340Z",
  "text": "https://conda.io/miniconda.html",
  "unread": false,
  "urls": [
   {
    "url": "https://conda.io/miniconda.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kain88-de\" class=\"mention\">@kain88-de</span> Max, we now have links to all of our channels of communication on the GitHub repo README file that displays when you visit the project.",
  "id": "58a71657de50490822de6aa0",
  "issues": [],
  "mentions": [
   {
    "screenName": "kain88-de",
    "userId": "5631a05416b6c7089cb8a849",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2017-02-17T15:27:19.067Z",
  "text": "@kain88-de Max, we now have links to all of our channels of communication on the GitHub repo README file that displays when you visit the project.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/kain88-de",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=60",
   "displayName": "Max Linke",
   "gv": "4",
   "id": "5631a05416b6c7089cb8a849",
   "url": "/kain88-de",
   "username": "kain88-de",
   "v": 10
  },
  "html": "Will they also how up on read",
  "id": "58a71685aa800ee52cab2615",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-02-17T15:28:05.104Z",
  "text": "Will they also how up on read",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/kain88-de",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=60",
   "displayName": "Max Linke",
   "gv": "4",
   "id": "5631a05416b6c7089cb8a849",
   "url": "/kain88-de",
   "username": "kain88-de",
   "v": 10
  },
  "html": "The docs?",
  "id": "58a7168c1465c46a567a4c3c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-02-17T15:28:12.995Z",
  "text": "The docs?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/kain88-de",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=60",
   "displayName": "Max Linke",
   "gv": "4",
   "id": "5631a05416b6c7089cb8a849",
   "url": "/kain88-de",
   "username": "kain88-de",
   "v": 10
  },
  "html": "Also thanks",
  "id": "58a71690f045df0a225ddfa0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-02-17T15:28:16.190Z",
  "text": "Also thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<a href=\"https://github.com/pymc-devs/pymc3\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3</a>",
  "id": "58a716a2de50490822de6cbb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-02-17T15:28:34.688Z",
  "text": "https://github.com/pymc-devs/pymc3",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Should show up in the docs the next time they are generated, yes.",
  "id": "58a716d4f045df0a225de11f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-02-17T15:29:24.787Z",
  "text": "Should show up in the docs the next time they are generated, yes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/kain88-de",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=60",
   "displayName": "Max Linke",
   "gv": "4",
   "id": "5631a05416b6c7089cb8a849",
   "url": "/kain88-de",
   "username": "kain88-de",
   "v": 10
  },
  "html": "The gmail feature with +pymc is cool. I didn&#39;t know about that. ",
  "id": "58a71a2f1465c46a567a6787",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-02-17T15:43:43.441Z",
  "text": "The gmail feature with +pymc is cool. I didn't know about that. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-02-18T02:54:51.845Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "Hi folks! Does someone knows if this <a href=\"http://stackoverflow.com/questions/38289257/issues-installing-pymc3-on-windows-64-bit-anaconda-install\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://stackoverflow.com/questions/38289257/issues-installing-pymc3-on-windows-64-bit-anaconda-install</a> is a general issue? I have been contacted by someone. I do not use Windows so I am unsure about how to help him. Could <code>conda install -c conda-forge pymc3</code> works better?",
  "id": "58a7b75b00c00c3d4f53f864",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-02-18T02:54:19.131Z",
  "text": "Hi folks! Does someone knows if this http://stackoverflow.com/questions/38289257/issues-installing-pymc3-on-windows-64-bit-anaconda-install is a general issue? I have been contacted by someone. I do not use Windows so I am unsure about how to help him. Could `conda install -c conda-forge pymc3` works better?",
  "unread": false,
  "urls": [
   {
    "url": "http://stackoverflow.com/questions/38289257/issues-installing-pymc3-on-windows-64-bit-anaconda-install"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "it should, yes",
  "id": "58a86de4aa800ee52cb180cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-02-18T15:53:08.532Z",
  "text": "it should, yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": ":-)",
  "id": "58a8e486872fc8ce6253bc7c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-02-19T00:19:18.621Z",
  "text": ":-)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/kain88-de",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=60",
   "displayName": "Max Linke",
   "gv": "4",
   "id": "5631a05416b6c7089cb8a849",
   "url": "/kain88-de",
   "username": "kain88-de",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> do you have a email address I can reach you on for GSoC?",
  "id": "58ab45f81465c46a568e805d",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2017-02-20T19:39:36.578Z",
  "text": "@twiecki do you have a email address I can reach you on for GSoC?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kain88-de\" class=\"mention\">@kain88-de</span> <a href=\"mailto:firstname.lastname@gmail.com\" rel=\"nofollow\">firstname.lastname@gmail.com</a>",
  "id": "58ab465f21d548df2c357c17",
  "issues": [],
  "mentions": [
   {
    "screenName": "kain88-de",
    "userId": "5631a05416b6c7089cb8a849",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2017-02-20T19:41:19.676Z",
  "text": "@kain88-de firstname.lastname@gmail.com",
  "unread": false,
  "urls": [
   {
    "url": "mailto:firstname.lastname@gmail.com"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/thomastanck",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/829070?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/829070?v=3&s=60",
   "displayName": "Thomas Tan",
   "gv": "3",
   "id": "58ad875bd73408ce4f4c2129",
   "url": "/thomastanck",
   "username": "thomastanck",
   "v": 1
  },
  "html": "Does PyMC3 or MCMC in general have an issue with using many variables? I&#39;m trying to model pairwise relationships between 131 latent variables and have 1500 observed vars/8515 pairings... I didn&#39;t think PyMC would gobble up over 50GB of memory after 3 hours of sitting around",
  "id": "58ad8c2e872fc8ce626c5196",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-02-22T13:03:42.736Z",
  "text": "Does PyMC3 or MCMC in general have an issue with using many variables? I'm trying to model pairwise relationships between 131 latent variables and have 1500 observed vars/8515 pairings... I didn't think PyMC would gobble up over 50GB of memory after 3 hours of sitting around",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "it matters a lot whether you vectorize the model or create a large number of individual RVs",
  "id": "58ad98621465c46a569bb4de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-02-22T13:55:46.389Z",
  "text": "it matters a lot whether you vectorize the model or create a large number of individual RVs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "the dimensionality is the same but theano seems to treat them quite differently",
  "id": "58ad986e00c00c3d4f71d325",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-02-22T13:55:58.350Z",
  "text": "the dimensionality is the same but theano seems to treat them quite differently",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "HMC is pretty much the only thing that works in high dimensions",
  "id": "58ad9891aa800ee52ccc5b93",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-02-22T13:56:33.146Z",
  "text": "HMC is pretty much the only thing that works in high dimensions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/thomastanck",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/829070?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/829070?v=3&s=60",
   "displayName": "Thomas Tan",
   "gv": "3",
   "id": "58ad875bd73408ce4f4c2129",
   "url": "/thomastanck",
   "username": "thomastanck",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> Thank you very much! I fiddled with the settings endlessly (for 2.7h) and it&#39;s now churning away happily and will continue for the next 2 hours. Perhaps it might be a good idea to write some basic vectorisation tutorials/examples for noobs like me ^^",
  "id": "58adc042aa800ee52ccd89fa",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2017-02-22T16:45:54.864Z",
  "text": "@twiecki Thank you very much! I fiddled with the settings endlessly (for 2.7h) and it's now churning away happily and will continue for the next 2 hours. Perhaps it might be a good idea to write some basic vectorisation tutorials/examples for noobs like me ^^",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yes, that point trips up a lot of people",
  "id": "58adc14e7ceae5376a24ff3d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-02-22T16:50:22.548Z",
  "text": "yes, that point trips up a lot of people",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/yanurai",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/24410820?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/24410820?v=3&s=60",
   "displayName": "yanurai",
   "gv": "3",
   "id": "5846aea7d73408ce4f3b1964",
   "url": "/yanurai",
   "username": "yanurai",
   "v": 15
  },
  "html": "<p>Hey there!</p><p>The following lines are throwing an error I really do not understand here:</p><p>TruncatedNormal = Bound(Normal, lower=0.0, upper=float(&#39;Inf&#39;))<br>mu_1 = TruncatedNormal(&#39;mu_1&#39;, mu=17.5, tau=pow(5,-2))</p><p>-&gt; AttributeError: &#39;bool&#39; object has no attribute &#39;any&#39;</p><p>Does somebody know what I am doing wrong?</p>",
  "id": "58aff4fdf1a33b6275424b00",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-02-24T08:55:25.474Z",
  "text": "Hey there!\n\nThe following lines are throwing an error I really do not understand here:\n\nTruncatedNormal = Bound(Normal, lower=0.0, upper=float('Inf'))\nmu_1 = TruncatedNormal('mu_1', mu=17.5, tau=pow(5,-2))\n\n-> AttributeError: 'bool' object has no attribute 'any'\n\nDoes somebody know what I am doing wrong?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Looks like a bug",
  "id": "58aff5a100c00c3d4f7f625e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-02-24T08:58:09.208Z",
  "text": "Looks like a bug",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/yanurai",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/24410820?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/24410820?v=3&s=60",
   "displayName": "yanurai",
   "gv": "3",
   "id": "5846aea7d73408ce4f3b1964",
   "url": "/yanurai",
   "username": "yanurai",
   "v": 15
  },
  "html": "Another thing I am wondering about is how pymc handles my model with 2 observed nodes. Are the respective likelihoods just internally multiplied?",
  "id": "58b02fdde961e53c7f5fc91d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-02-24T13:06:37.463Z",
  "text": "Another thing I am wondering about is how pymc handles my model with 2 observed nodes. Are the respective likelihoods just internally multiplied?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yes",
  "id": "58b037d121d548df2c520088",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-02-24T13:40:33.737Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/yanurai",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/24410820?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/24410820?v=3&s=60",
   "displayName": "yanurai",
   "gv": "3",
   "id": "5846aea7d73408ce4f3b1964",
   "url": "/yanurai",
   "username": "yanurai",
   "v": 15
  },
  "html": "Thanks!",
  "id": "58b05bc600c00c3d4f81ecc9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-02-24T16:13:58.771Z",
  "text": "Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/kain88-de",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=60",
   "displayName": "Max Linke",
   "gv": "4",
   "id": "5631a05416b6c7089cb8a849",
   "url": "/kain88-de",
   "username": "kain88-de",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> can you please tell me the names and email addresses of all your GSoC mentors? I would like to sign them  up with google.",
  "id": "58b5904a21d548df2c6e42c2",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-02-28T14:59:22.488Z",
  "text": "@twiecki can you please tell me the names and email addresses of all your GSoC mentors? I would like to sign them  up with google.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/souravsingh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4314261?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4314261?v=4&s=60",
   "displayName": "Sourav Singh",
   "gv": "4",
   "id": "5506544215522ed4b3dd4fec",
   "url": "/souravsingh",
   "username": "souravsingh",
   "v": 54
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> <span data-link-type=\"mention\" data-screen-name=\"kain88-de\" class=\"mention\">@kain88-de</span> I have written a draft proposal on the project-&quot; Add non-parameteric Bayesian Methods&quot;. Should I send a PR for review? ",
  "id": "58b5c00ce961e53c7f7da9b1",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   },
   {
    "screenName": "kain88-de",
    "userId": "5631a05416b6c7089cb8a849",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-02-28T18:23:07.948Z",
  "text": "@twiecki @kain88-de I have written a draft proposal on the project-\" Add non-parameteric Bayesian Methods\". Should I send a PR for review? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/MridulS",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5363860?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5363860?v=4&s=60",
   "displayName": "Mridul Seth",
   "gv": "4",
   "id": "53f1f08a107e137846bab1c2",
   "url": "/MridulS",
   "username": "MridulS",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"souravsingh\" class=\"mention\">@souravsingh</span> Yeah! Do make sure that you have gone through <a href=\"https://github.com/numfocus/gsoc/blob/master/PULL_REQUEST_TEMPLATE\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/numfocus/gsoc/blob/master/PULL_REQUEST_TEMPLATE</a> :)",
  "id": "58b5c0ce21d548df2c6fb6fb",
  "issues": [],
  "mentions": [
   {
    "screenName": "souravsingh",
    "userId": "5506544215522ed4b3dd4fec",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-02-28T18:26:22.330Z",
  "text": "@souravsingh Yeah! Do make sure that you have gone through https://github.com/numfocus/gsoc/blob/master/PULL_REQUEST_TEMPLATE :)",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numfocus/gsoc/blob/master/PULL_REQUEST_TEMPLATE"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/souravsingh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4314261?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4314261?v=4&s=60",
   "displayName": "Sourav Singh",
   "gv": "4",
   "id": "5506544215522ed4b3dd4fec",
   "url": "/souravsingh",
   "username": "souravsingh",
   "v": 54
  },
  "html": "Alright, I have sent the draft proposal as a PR.",
  "id": "58b5c421872fc8ce6298b6f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-02-28T18:40:33.036Z",
  "text": "Alright, I have sent the draft proposal as a PR.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/u/agent-jay",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/9467554?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/9467554?v=3&s=60",
   "displayName": "agentJay",
   "id": "58b6a1d4d73408ce4f4da6fa",
   "url": "/agent-jay",
   "username": "agent-jay"
  },
  "html": "Hi! I&#39;m a grad student interested in Machine Learning, Neural Networks and Probabilistic Programming Languages. I&#39;d like to work on extending support for Variational Inference methods (or non-MCMC methods) in PyMC3 as part of GSoC. I&#39;d appreciate any info on background I need as well as what the right forum is for discussing the proposal. Thanks",
  "id": "58b6a8e0e961e53c7f82ed1c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-01T10:56:32.121Z",
  "text": "Hi! I'm a grad student interested in Machine Learning, Neural Networks and Probabilistic Programming Languages. I'd like to work on extending support for Variational Inference methods (or non-MCMC methods) in PyMC3 as part of GSoC. I'd appreciate any info on background I need as well as what the right forum is for discussing the proposal. Thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/u/agent-jay",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/9467554?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/9467554?v=3&s=60",
   "displayName": "agentJay",
   "id": "58b6a1d4d73408ce4f4da6fa",
   "url": "/agent-jay",
   "username": "agent-jay"
  },
  "html": "Also,  is there any interest in making bindings from probabilistic programming language like ANGLICAN or Church to PyMC? They have a rich set of inference methods and there might be some value in bringing that to a language with better support for data science-y things like dataframes, numerical computing libraries, plotting, etc. I&#39;m thinking of something like Keras, a high level API that works with multiple backends.",
  "id": "58b74745f1a33b62756980ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-01T22:12:21.321Z",
  "text": "Also,  is there any interest in making bindings from probabilistic programming language like ANGLICAN or Church to PyMC? They have a rich set of inference methods and there might be some value in bringing that to a language with better support for data science-y things like dataframes, numerical computing libraries, plotting, etc. I'm thinking of something like Keras, a high level API that works with multiple backends.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"agent-jay\" class=\"mention\">@agent-jay</span>, we are always open to alternative backends. We already have links to emcee and Edward, which we keep in a <code>external</code> submodule. These are essentially optional extensions, since everybody does not need/use them. Perhaps add this project to our wiki: <a href=\"https://github.com/pymc-devs/pymc3/wiki/GSoC-2017-projects/_edit\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/wiki/GSoC-2017-projects/_edit</a>",
  "id": "58b748be21d548df2c798c2f",
  "issues": [],
  "mentions": [
   {
    "screenName": "agent-jay",
    "userId": "58b6a1d4d73408ce4f4da6fa",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-01T22:18:38.604Z",
  "text": "Hi @agent-jay, we are always open to alternative backends. We already have links to emcee and Edward, which we keep in a `external` submodule. These are essentially optional extensions, since everybody does not need/use them. Perhaps add this project to our wiki: https://github.com/pymc-devs/pymc3/wiki/GSoC-2017-projects/_edit",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/wiki/GSoC-2017-projects/_edit"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"agent-jay\" class=\"mention\">@agent-jay</span> our GSoC entries are being managed via NumFOCUS, and <span data-link-type=\"mention\" data-screen-name=\"kain88-de\" class=\"mention\">@kain88-de</span> is the admin for that, so he may be able to answer any specific questions.",
  "id": "58b749271465c46a56d24e61",
  "issues": [],
  "mentions": [
   {
    "screenName": "agent-jay",
    "userId": "58b6a1d4d73408ce4f4da6fa",
    "userIds": []
   },
   {
    "screenName": "kain88-de",
    "userId": "5631a05416b6c7089cb8a849",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-01T22:20:23.618Z",
  "text": "@agent-jay our GSoC entries are being managed via NumFOCUS, and @kain88-de is the admin for that, so he may be able to answer any specific questions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/kain88-de",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4302678?v=4&s=60",
   "displayName": "Max Linke",
   "gv": "4",
   "id": "5631a05416b6c7089cb8a849",
   "url": "/kain88-de",
   "username": "kain88-de",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"agent-jay\" class=\"mention\">@agent-jay</span>  NumFOCUS is OK with all projects an organization suggests as long as it has at least 2 mentors and consists largely of writing code. ",
  "id": "58b74ceef1a33b627569a3e7",
  "issues": [],
  "mentions": [
   {
    "screenName": "agent-jay",
    "userId": "58b6a1d4d73408ce4f4da6fa",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-01T22:36:30.255Z",
  "text": "@agent-jay  NumFOCUS is OK with all projects an organization suggests as long as it has at least 2 mentors and consists largely of writing code. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/altairmn",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6061564?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6061564?v=4&s=60",
   "displayName": "Sahil Manocha",
   "gv": "4",
   "id": "57585116c2f0db084a1cd643",
   "url": "/altairmn",
   "username": "altairmn",
   "v": 16
  },
  "html": "Hey is blackbox variational inference (with rao blackwellization) a part of pymc3?",
  "id": "58b7a75721d548df2c7b7aa4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-02T05:02:15.016Z",
  "text": "Hey is blackbox variational inference (with rao blackwellization) a part of pymc3?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "Hi, has anyone experience using WBIC (Widelly Applicable Bayesian Information Criterion)? And how it compares with WAIC/LOO?",
  "id": "58b80bd77ceae5376a5eba60",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-02T12:11:03.807Z",
  "text": "Hi, has anyone experience using WBIC (Widelly Applicable Bayesian Information Criterion)? And how it compares with WAIC/LOO?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"altairmn\" class=\"mention\">@altairmn</span> not yet",
  "id": "58b97745872fc8ce62af4e80",
  "issues": [],
  "mentions": [
   {
    "screenName": "altairmn",
    "userId": "57585116c2f0db084a1cd643",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-03T14:01:41.933Z",
  "text": "@altairmn not yet",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/wagglefoot",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5817673?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5817673?v=4&s=60",
   "displayName": "nd308",
   "gv": "4",
   "id": "587fec84d73408ce4f4476b1",
   "url": "/wagglefoot",
   "username": "wagglefoot",
   "v": 297
  },
  "html": "Could anyone point to an example where <code>MvNormal</code> is used as  as the likelihood? I can only find examples of <code>Normal</code> or where they sample parameters from an MVN inside each model.",
  "id": "58bae9367ceae5376a6e99de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-03-04T16:20:06.618Z",
  "text": "Could anyone point to an example where `MvNormal` is used as  as the likelihood? I can only find examples of `Normal` or where they sample parameters from an MVN inside each model.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"wagglefoot\" class=\"mention\">@wagglefoot</span> from the examples folder:<pre><code><span class=\"tag\">with</span> <span class=\"tag\">pm</span><span class=\"class\">.Model</span>() <span class=\"tag\">as</span> <span class=\"rule\"><span class=\"attribute\">model</span>:<span class=\"value\">\n\n    mu = pm.<span class=\"function\">Normal</span>(<span class=\"string\">'mu'</span>, mu=<span class=\"number\">0</span>, sd=<span class=\"number\">1</span>, shape=n_var)\n\n    # We can specify separate priors for sigma and the correlation matrix:\n    sigma = pm.<span class=\"function\">Uniform</span>(<span class=\"string\">'sigma'</span>, shape=n_var)\n    corr_triangle = pm.<span class=\"function\">LKJCorr</span>(<span class=\"string\">'corr'</span>, n=<span class=\"number\">1</span>, p=n_var)\n    corr_matrix = corr_triangle[tri_index]\n    corr_matrix = tt.<span class=\"function\">fill_diagonal</span>(corr_matrix, <span class=\"number\">1</span>)\n\n    cov_matrix = tt.<span class=\"function\">diag</span>(sigma).<span class=\"function\">dot</span>(corr_matrix.<span class=\"function\">dot</span>(tt.<span class=\"function\">diag</span>(sigma)))\n\n    like = pm.<span class=\"function\">MvNormal</span>(<span class=\"string\">'likelihood'</span>, mu=mu, cov=cov_matrix, observed=dataset)</span></span></code></pre>",
  "id": "58bae9a5de50490822456207",
  "issues": [],
  "mentions": [
   {
    "screenName": "wagglefoot",
    "userId": "587fec84d73408ce4f4476b1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-04T16:21:57.108Z",
  "text": "@wagglefoot from the examples folder:\n\n```\nwith pm.Model() as model:\n\n    mu = pm.Normal('mu', mu=0, sd=1, shape=n_var)\n\n    # We can specify separate priors for sigma and the correlation matrix:\n    sigma = pm.Uniform('sigma', shape=n_var)\n    corr_triangle = pm.LKJCorr('corr', n=1, p=n_var)\n    corr_matrix = corr_triangle[tri_index]\n    corr_matrix = tt.fill_diagonal(corr_matrix, 1)\n\n    cov_matrix = tt.diag(sigma).dot(corr_matrix.dot(tt.diag(sigma)))\n\n    like = pm.MvNormal('likelihood', mu=mu, cov=cov_matrix, observed=dataset)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/wagglefoot",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5817673?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5817673?v=4&s=60",
   "displayName": "nd308",
   "gv": "4",
   "id": "587fec84d73408ce4f4476b1",
   "url": "/wagglefoot",
   "username": "wagglefoot",
   "v": 297
  },
  "html": "well shit. My apologies. I am blind.",
  "id": "58bae9bcde504908224562a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-04T16:22:20.947Z",
  "text": "well shit. My apologies. I am blind.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "No prob!",
  "id": "58bae9cade504908224562be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-04T16:22:34.736Z",
  "text": "No prob!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Its not one of the notebooks, its an actual .py file",
  "id": "58bae9d9f1a33b62757cb2ff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-04T16:22:49.899Z",
  "text": "Its not one of the notebooks, its an actual .py file",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/wagglefoot",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5817673?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5817673?v=4&s=60",
   "displayName": "nd308",
   "gv": "4",
   "id": "587fec84d73408ce4f4476b1",
   "url": "/wagglefoot",
   "username": "wagglefoot",
   "v": 297
  },
  "html": "Yeah maybe that&#39;s why I passed it over",
  "id": "58bae9ea21d548df2c8db6b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-04T16:23:06.729Z",
  "text": "Yeah maybe that's why I passed it over",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "There should be one in the <code>gaussian_process.ipynb</code> notebook, though. Check and see.",
  "id": "58baea0d1465c46a56e68d3f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-04T16:23:41.680Z",
  "text": "There should be one in the `gaussian_process.ipynb` notebook, though. Check and see.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/jonsjoberg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11414302?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11414302?v=3&s=60",
   "displayName": "jonsjoberg",
   "gv": "3",
   "id": "5765175ec2f0db084a1e94d2",
   "url": "/jonsjoberg",
   "username": "jonsjoberg",
   "v": 6
  },
  "html": "I&#39;m having issues with the survival analysis posted  here <a href=\"https://pymc-devs.github.io/pymc3/notebooks/survival_analysis.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://pymc-devs.github.io/pymc3/notebooks/survival_analysis.html</a>, whenever I try to sample from the model my Python kernel crashes (With the quite unhelpful &quot;OMP: Error <span data-link-type=\"issue\" data-issue=\"100\" class=\"issue\">#100</span>: Fatal system error detected.<br>OMP: System error <span data-link-type=\"issue\" data-issue=\"22\" class=\"issue\">#22</span>: Invalid argument&quot;). I&#39;m using the latest version  (from github) of Pymc3 and theano and I&#39;m running python in windows subsystem for linux. Simpler models, like a basic linear regressions, samples just fine.",
  "id": "58baed6ce961e53c7f9bd65f",
  "issues": [
   {
    "number": "100"
   },
   {
    "number": "22"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-04T16:38:04.970Z",
  "text": "I'm having issues with the survival analysis posted  here https://pymc-devs.github.io/pymc3/notebooks/survival_analysis.html, whenever I try to sample from the model my Python kernel crashes (With the quite unhelpful \"OMP: Error #100: Fatal system error detected.\nOMP: System error #22: Invalid argument\"). I'm using the latest version  (from github) of Pymc3 and theano and I'm running python in windows subsystem for linux. Simpler models, like a basic linear regressions, samples just fine.",
  "unread": false,
  "urls": [
   {
    "url": "https://pymc-devs.github.io/pymc3/notebooks/survival_analysis.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/altairmn",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6061564?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6061564?v=4&s=60",
   "displayName": "Sahil Manocha",
   "gv": "4",
   "id": "57585116c2f0db084a1cd643",
   "url": "/altairmn",
   "username": "altairmn",
   "v": 16
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> Is it something then that would qualify under the &quot;Extend Variational Inference support&quot; GSoC topic?",
  "id": "58baf8fd00c00c3d4fbcb3d8",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-04T17:27:25.866Z",
  "text": "@twiecki Is it something then that would qualify under the \"Extend Variational Inference support\" GSoC topic?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"altairmn\" class=\"mention\">@altairmn</span> certainly",
  "id": "58bc1aec872fc8ce62bb7e83",
  "issues": [],
  "mentions": [
   {
    "screenName": "altairmn",
    "userId": "57585116c2f0db084a1cd643",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-05T14:04:28.419Z",
  "text": "@altairmn certainly",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-03-06T18:05:36.796Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pstjohn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=60",
   "displayName": "Peter St. John",
   "gv": "4",
   "id": "57976c7440f3a6eec05c88a5",
   "url": "/pstjohn",
   "username": "pstjohn",
   "v": 12
  },
  "html": "Are there theoretical reasons why <code>Average ELBO</code> should be reported over something more robust, like median?<br>For instance, the following reports <code>-inf</code> for the entire process:<pre><code class=\"python\"><span class=\"keyword\">with</span> pm.Model() <span class=\"keyword\">as</span> model:\n\n    a = pm.Normal(<span class=\"string\">'a'</span>, mu=<span class=\"number\">0</span>, sd=<span class=\"number\">1.</span>)\n    obs = pm.Uniform(<span class=\"string\">'obs'</span>, lower=-<span class=\"number\">10</span>, upper=<span class=\"number\">0</span>, observed=a)\n    trace = pm.sample(<span class=\"number\">10000</span>, step=<span class=\"keyword\">None</span>, random_seed=<span class=\"number\">123</span>, progressbar=<span class=\"keyword\">True</span>)</code></pre><pre><code><span class=\"variable\">Auto</span>-assigning <span class=\"variable\">NUTS</span> sampler...\n<span class=\"variable\">Initializing</span> <span class=\"variable\">NUTS</span> using advi...\n<span class=\"variable\">Average</span> <span class=\"variable\">ELBO</span> = -inf: <span class=\"number\">100</span><span class=\"comment\">%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 200000/200000 [00:16&lt;00:00, 11855.41it/s]</span>\n<span class=\"variable\">Finished</span> [<span class=\"number\">100</span><span class=\"comment\">%]: Average ELBO = -inf</span>\n<span class=\"number\">100</span><span class=\"comment\">%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 10000/10000 [00:39&lt;00:00, 250.94it/s]</span></code></pre>",
  "id": "58bda472fef1d2de52ac5d80",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-03-06T18:03:30.216Z",
  "text": "Are there theoretical reasons why `Average ELBO` should be reported over something more robust, like median?\nFor instance, the following reports `-inf` for the entire process:\n```python\nwith pm.Model() as model:\n    \n    a = pm.Normal('a', mu=0, sd=1.)\n    obs = pm.Uniform('obs', lower=-10, upper=0, observed=a)\n    trace = pm.sample(10000, step=None, random_seed=123, progressbar=True)\n```\n\n```\nAuto-assigning NUTS sampler...\nInitializing NUTS using advi...\nAverage ELBO = -inf: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 200000/200000 [00:16<00:00, 11855.41it/s]\nFinished [100%]: Average ELBO = -inf\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 10000/10000 [00:39<00:00, 250.94it/s]\n```",
  "unread": false,
  "urls": [],
  "v": 5
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pstjohn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=60",
   "displayName": "Peter St. John",
   "gv": "4",
   "id": "57976c7440f3a6eec05c88a5",
   "url": "/pstjohn",
   "username": "pstjohn",
   "v": 12
  },
  "html": "Also, would there be any reason to use NUTS for a model with a flat gradient (i.e., uniform)?",
  "id": "58bda713567b0fc8138f80ff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-06T18:14:43.309Z",
  "text": "Also, would there be any reason to use NUTS for a model with a flat gradient (i.e., uniform)?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"pstjohn\" class=\"mention\">@pstjohn</span> you have a stochastic node as the <code>observed</code> argument in the likelihood. <code>observed</code> should be fixed data only. We should probably prevent this specification from running at all.",
  "id": "58bdac06e961e53c7fa98aeb",
  "issues": [],
  "mentions": [
   {
    "screenName": "pstjohn",
    "userId": "57976c7440f3a6eec05c88a5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-06T18:35:50.823Z",
  "text": "@pstjohn you have a stochastic node as the `observed` argument in the likelihood. `observed` should be fixed data only. We should probably prevent this specification from running at all.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pstjohn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=60",
   "displayName": "Peter St. John",
   "gv": "4",
   "id": "57976c7440f3a6eec05c88a5",
   "url": "/pstjohn",
   "username": "pstjohn",
   "v": 12
  },
  "html": "<p>Fair enough, that seems like a separate question though. I could re-cast it </p><pre><code class=\"python\">    obs = pm.Uniform(<span class=\"string\">'obs'</span>, lower=a, upper=<span class=\"number\">10</span>, observed=<span class=\"number\">0</span>)</code></pre><p>with the same results</p>",
  "id": "58bdad21fef1d2de52ac5e6b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-06T18:40:33.088Z",
  "text": "Fair enough, that seems like a separate question though. I could re-cast it \n```python\n    obs = pm.Uniform('obs', lower=a, upper=10, observed=0)\n```\nwith the same results",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/altairmn",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6061564?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6061564?v=4&s=60",
   "displayName": "Sahil Manocha",
   "gv": "4",
   "id": "57585116c2f0db084a1cd643",
   "url": "/altairmn",
   "username": "altairmn",
   "v": 16
  },
  "html": "Hey. ADVI paper describes transformation of support but I can&#39;t find the relevant code section. I&#39;m looking at <code>pymc3/variational/advi.py</code>",
  "id": "58bdae27f1a33b62758a0a9f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-06T18:44:55.046Z",
  "text": "Hey. ADVI paper describes transformation of support but I can't find the relevant code section. I'm looking at `pymc3/variational/advi.py`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"pstjohn\" class=\"mention\">@pstjohn</span> I don&#39;t think it will make much difference if your optimization is working at all. In my experience the -inf values disappear pretty quickly. Happy to accept a pull request to change it though.",
  "id": "58bdaf3400c00c3d4fca6dc5",
  "issues": [],
  "mentions": [
   {
    "screenName": "pstjohn",
    "userId": "57976c7440f3a6eec05c88a5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-06T18:49:24.271Z",
  "text": "@pstjohn I don't think it will make much difference if your optimization is working at all. In my experience the -inf values disappear pretty quickly. Happy to accept a pull request to change it though.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> Having an stochastic node as the observed argument in the likelihood should be useful to model measurement error explicitly, right?",
  "id": "58bdb1a2872fc8ce62c450fc",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-06T18:59:46.535Z",
  "text": "@fonnesbeck Having an stochastic node as the observed argument in the likelihood should be useful to model measurement error explicitly, right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"aloctavodia\" class=\"mention\">@aloctavodia</span> no, the observed argument should only be fixed data. I&#39;ve just submitted a PR that guarantees this. You have to build the measurement error model explicitly. ",
  "id": "58bdb22f00c00c3d4fca8309",
  "issues": [],
  "mentions": [
   {
    "screenName": "aloctavodia",
    "userId": "54314cd8163965c9bc208e0f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-06T19:02:07.914Z",
  "text": "@aloctavodia no, the observed argument should only be fixed data. I've just submitted a PR that guarantees this. You have to build the measurement error model explicitly. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "I have to check, but I think McElreath has a measurement error model in his book were we just do this... It sounds intuitive to me.  ",
  "id": "58bdb3107ceae5376a7cd822",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-06T19:05:52.273Z",
  "text": "I have to check, but I think McElreath has a measurement error model in his book were we just do this... It sounds intuitive to me.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "For a measurement error model, you would pass the model of the expected value as one of the parameters of the sampling error model (e.g. the mean of a Gaussian), a parameter representing the observation error as another parameter (e.g. the sd of a Gaussian), and <code>observed</code> should be actual data (can have missing values, via a masked array).",
  "id": "58bdb3aaf1a33b62758a329a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-06T19:08:26.899Z",
  "text": "For a measurement error model, you would pass the model of the expected value as one of the parameters of the sampling error model (e.g. the mean of a Gaussian), a parameter representing the observation error as another parameter (e.g. the sd of a Gaussian), and `observed` should be actual data (can have missing values, via a masked array).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> ",
  "id": "58bdb4c100c00c3d4fca96bd",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-06T19:13:05.467Z",
  "text": "@fonnesbeck ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I wanted to use this trick to try bayesian batch normalization. ",
  "id": "58bdb501de5049082252fbe4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-06T19:14:09.288Z",
  "text": "I wanted to use this trick to try bayesian batch normalization. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "Yeah, that&#39;s what I normally do. But in section 14.1 (I just checked) McElreath defines <code>observed ~ N(mean, sd)</code>, where mean is a vector of mean observed values and sd is the estimated error for each data point.",
  "id": "58bdb51500c00c3d4fca9995",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-06T19:14:29.548Z",
  "text": "Yeah, that's what I normally do. But in section 14.1 (I just checked) McElreath defines `observed ~ N(mean, sd)`, where mean is a vector of mean observed values and sd is the estimated error for each data point.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"aloctavodia\" class=\"mention\">@aloctavodia</span> That&#39;s fine, it just gets implemented differently in PyMC3.",
  "id": "58bdb55700c00c3d4fca9b9c",
  "issues": [],
  "mentions": [
   {
    "screenName": "aloctavodia",
    "userId": "54314cd8163965c9bc208e0f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-06T19:15:35.436Z",
  "text": "@aloctavodia That's fine, it just gets implemented differently in PyMC3.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "The <code>observed</code> parameter represents a quantity that conditions the model, so it should not change during sampling. ",
  "id": "58bdb598e961e53c7fa9cd5d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-06T19:16:40.859Z",
  "text": "The `observed` parameter represents a quantity that conditions the model, so it should not change during sampling. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ferrine\" class=\"mention\">@ferrine</span> you mean passing a random variable to <code>observed</code>? How so?",
  "id": "58bdb5c7e961e53c7fa9cefc",
  "issues": [],
  "mentions": [
   {
    "screenName": "ferrine",
    "userId": "581e3155d73408ce4f33e027",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-06T19:17:27.735Z",
  "text": "@ferrine you mean passing a random variable to `observed`? How so?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Passing layer output through standard normal. Somehow catching that it should be standard normal",
  "id": "58bdb60c872fc8ce62c4723a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-06T19:18:36.812Z",
  "text": "Passing layer output through standard normal. Somehow catching that it should be standard normal",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I have no clear design how to do it right yet",
  "id": "58bdb635de504908225304aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-06T19:19:17.944Z",
  "text": "I have no clear design how to do it right yet",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "I&#39;m not opposed to overloading the behavior to do useful things if it makes model specification easier, but in general its an easy mistake to specify your data with a random variable, and I want to catch this.",
  "id": "58bdb694e961e53c7fa9d714",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-06T19:20:52.474Z",
  "text": "I'm not opposed to overloading the behavior to do useful things if it makes model specification easier, but in general its an easy mistake to specify your data with a random variable, and I want to catch this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> So, if I try to reproduce McElreath result (defining the data as a random variable) I will get the wrong results? Or is just that you think is a bad practice (or error-prone) and you want to enforce &quot;better-practices&quot;.  Sorry to insist with this, but I just want to get things right and also it will be crucial to properly port that model from R/Stan to PyMC3.",
  "id": "58bdb7ccde50490822530e9d",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-06T19:26:04.238Z",
  "text": "@fonnesbeck So, if I try to reproduce McElreath result (defining the data as a random variable) I will get the wrong results? Or is just that you think is a bad practice (or error-prone) and you want to enforce \"better-practices\".  Sorry to insist with this, but I just want to get things right and also it will be crucial to properly port that model from R/Stan to PyMC3.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "You will get the wrong answer. Can you point me to the example? I can give you the corresponding PyMC specification.",
  "id": "58bdb80de961e53c7fa9e1a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-06T19:27:09.960Z",
  "text": "You will get the wrong answer. Can you point me to the example? I can give you the corresponding PyMC specification.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "If you have access to the book is section 14.1",
  "id": "58bdb85af1a33b62758a54f4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-06T19:28:26.077Z",
  "text": "If you have access to the book is section 14.1",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "I don&#39;t have the book, unfortunately. Can you send me a scan of the appropriate page(s)? Or the Stan model.",
  "id": "58bdb885872fc8ce62c4824b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-06T19:29:09.675Z",
  "text": "I don't have the book, unfortunately. Can you send me a scan of the appropriate page(s)? Or the Stan model.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "If you have a situation where your data are partly a function of a random variable, that&#39;s where you want to use a factor potential (<code>Potential</code> class).",
  "id": "58bdb95500c00c3d4fcabbd3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-03-06T19:32:37.464Z",
  "text": "If you have a situation where your data are partly a function of a random variable, that's where you want to use a factor potential (`Potential` class).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "I have used  a factor potential but not in this context . Thanks for the input. Check your e-mail for the section of the book, and thanks for that too!",
  "id": "58bdbc707ceae5376a7d18df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 32,
  "sent": "2017-03-06T19:45:52.349Z",
  "text": "I have used  a factor potential but not in this context . Thanks for the input. Check your e-mail for the section of the book, and thanks for that too!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/u/schluedj",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2218369?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2218369?v=3&s=60",
   "displayName": "David",
   "id": "58bdc0b3d73408ce4f4ece24",
   "url": "/schluedj",
   "username": "schluedj"
  },
  "html": "<p>Hi Everyone,<br>I&#39;ve been recently trying to apply the normalizing flows framework in <a href=\"https://gist.github.com/springcoil/4fda94fcde0934b04fc34967e0c952de\" rel=\"nofollow\" target=\"_blank\" class=\"link\">this notebook</a> (awesome stuff btw!) to some survival models with varying degrees of success (Exponential, Weibull, and Piecewise exponential are looking pretty good). </p><p>I&#39;ve successfully implemented minibatch advi to the models, but using the workflow present in the <a href=\"https://pymc-devs.github.io/pymc3/notebooks/GLM-hierarchical-advi-minibatch.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">hierarchical GLM w/ ADVI</a> ( i.e. define separate tensors to populate with sampled data using a generator). It&#39;s not clear to me how </p><pre><code>vparams = pm<span class=\"class\">.variational</span><span class=\"class\">.advi_minibatch</span>(n=<span class=\"number\">10000</span>, \n                   optimizer=adam, minibatch_tensors=[],\n                   minibatches=[], observed_RVs=<span class=\"function\"><span class=\"title\">OrderedDict</span><span class=\"params\">({x: <span class=\"number\">1</span>})</span></span>, \n                   local_RVs=<span class=\"function\"><span class=\"title\">OrderedDict</span><span class=\"params\">()</span></span>, global_NFs=nfs)</code></pre><p>accomplishes minibatch. How would one go about including the nfs in a minibatch workflow like in the GLM example? </p>",
  "id": "58bdd23a872fc8ce62c54f96",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 33,
  "sent": "2017-03-06T21:18:50.909Z",
  "text": "Hi Everyone, \nI've been recently trying to apply the normalizing flows framework in [this notebook](https://gist.github.com/springcoil/4fda94fcde0934b04fc34967e0c952de) (awesome stuff btw!) to some survival models with varying degrees of success (Exponential, Weibull, and Piecewise exponential are looking pretty good). \n\nI've successfully implemented minibatch advi to the models, but using the workflow present in the [hierarchical GLM w/ ADVI](https://pymc-devs.github.io/pymc3/notebooks/GLM-hierarchical-advi-minibatch.html ) ( i.e. define separate tensors to populate with sampled data using a generator). It's not clear to me how \n```\nvparams = pm.variational.advi_minibatch(n=10000, \n                   optimizer=adam, minibatch_tensors=[],\n                   minibatches=[], observed_RVs=OrderedDict({x: 1}), \n                   local_RVs=OrderedDict(), global_NFs=nfs)\n```\naccomplishes minibatch. How would one go about including the nfs in a minibatch workflow like in the GLM example? \n\n",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/springcoil/4fda94fcde0934b04fc34967e0c952de"
   },
   {
    "url": "https://pymc-devs.github.io/pymc3/notebooks/GLM-hierarchical-advi-minibatch.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"schluedj\" class=\"mention\">@schluedj</span> that&#39;s very experimental, I&#39;m afraid you&#39;re on your own figuring that out (although maybe <span data-link-type=\"mention\" data-screen-name=\"taku-y\" class=\"mention\">@taku-y</span> might have ideas), but it would be a great contribution",
  "id": "58bec35d7ceae5376a832f99",
  "issues": [],
  "mentions": [
   {
    "screenName": "schluedj",
    "userId": "58bdc0b3d73408ce4f4ece24",
    "userIds": []
   },
   {
    "screenName": "taku-y",
    "userId": "57497d60c43b8c6019756ee7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 32,
  "sent": "2017-03-07T14:27:41.453Z",
  "text": "@schluedj that's very experimental, I'm afraid you're on your own figuring that out (although maybe @taku-y might have ideas), but it would be a great contribution",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Just for some context, David is a PhD student here at Vanderbilt, and is looking to use normalizing flows for some pretty cool survival modeling using GPs. We opted to look at the version implemented in Paedar&#39;s notebook rather than the new interface that <span data-link-type=\"mention\" data-screen-name=\"ferrine\" class=\"mention\">@ferrine</span> is working on just to get things rolling, with an eye to moving it to the new interface when it is ready. ",
  "id": "58bec496e961e53c7fb01767",
  "issues": [],
  "mentions": [
   {
    "screenName": "ferrine",
    "userId": "581e3155d73408ce4f33e027",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 33,
  "sent": "2017-03-07T14:32:54.860Z",
  "text": "Just for some context, David is a PhD student here at Vanderbilt, and is looking to use normalizing flows for some pretty cool survival modeling using GPs. We opted to look at the version implemented in Paedar's notebook rather than the new interface that @ferrine is working on just to get things rolling, with an eye to moving it to the new interface when it is ready. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "In any case, it will be nice to have a real-world application to test this stuff out on as we roll it out.",
  "id": "58bec5731465c46a56fafe12",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 33,
  "sent": "2017-03-07T14:36:35.356Z",
  "text": "In any case, it will be nice to have a real-world application to test this stuff out on as we roll it out.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/taku-y",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4969395?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4969395?v=3&s=60",
   "displayName": "Taku Yoshioka",
   "gv": "3",
   "id": "57497d60c43b8c6019756ee7",
   "url": "/taku-y",
   "username": "taku-y",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"schluedj\" class=\"mention\">@schluedj</span> Thanks for your interests in the NF example. But I&#39;m sorry I need some time to recall how you pass a minibatch with NF. I want to restart working on it. ",
  "id": "58bed23b1465c46a56fb5ac0",
  "issues": [],
  "mentions": [
   {
    "screenName": "schluedj",
    "userId": "58bdc0b3d73408ce4f4ece24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 33,
  "sent": "2017-03-07T15:31:07.301Z",
  "text": "@schluedj Thanks for your interests in the NF example. But I'm sorry I need some time to recall how you pass a minibatch with NF. I want to restart working on it. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/u/schluedj",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2218369?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2218369?v=3&s=60",
   "displayName": "David",
   "id": "58bdc0b3d73408ce4f4ece24",
   "url": "/schluedj",
   "username": "schluedj"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> <span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> <span data-link-type=\"mention\" data-screen-name=\"taku-y\" class=\"mention\">@taku-y</span> thanks so much for the responses. I&#39;ll keep hacking. It&#39;s looking great with some relatively complicated models and is playing very nicely with models that use DensityDist so I&#39;m optimistic. Putting together a notebook to share ",
  "id": "58c0046821d548df2ca9b32c",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   },
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   },
   {
    "screenName": "taku-y",
    "userId": "57497d60c43b8c6019756ee7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 34,
  "sent": "2017-03-08T13:17:28.669Z",
  "text": "@twiecki @fonnesbeck @taku-y thanks so much for the responses. I'll keep hacking. It's looking great with some relatively complicated models and is playing very nicely with models that use DensityDist so I'm optimistic. Putting together a notebook to share ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pstjohn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=60",
   "displayName": "Peter St. John",
   "gv": "4",
   "id": "57976c7440f3a6eec05c88a5",
   "url": "/pstjohn",
   "username": "pstjohn",
   "v": 12
  },
  "html": "Is there a good example for multivariate linear regression that specifies priors on the regressor\u2019s covariance matrix? The <code>glm</code> class seems to use individual Normal distributions for each variable.",
  "id": "58c2dac54150746b15165689",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-03-10T16:56:37.565Z",
  "text": "Is there a good example for multivariate linear regression that specifies priors on the regressor\u2019s covariance matrix? The `glm` class seems to use individual Normal distributions for each variable.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yeah, only individual priors, unfortunately",
  "id": "58c5f7ed21d548df2ccb7201",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-13T01:37:49.593Z",
  "text": "yeah, only individual priors, unfortunately",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "it&#39;s a design mistake, wouldn&#39;t be too hard to fix though",
  "id": "58c5f7fedd08b4b859c0bbac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-13T01:38:06.754Z",
  "text": "it's a design mistake, wouldn't be too hard to fix though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pstjohn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=60",
   "displayName": "Peter St. John",
   "gv": "4",
   "id": "57976c7440f3a6eec05c88a5",
   "url": "/pstjohn",
   "username": "pstjohn",
   "v": 12
  },
  "html": "Would you implement something like this? it\u2019s super slow to sample on my laptop even for something fairly basic..<pre><code class=\"python\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np\n<span class=\"keyword\">import</span> pymc3 <span class=\"keyword\">as</span> pm\n<span class=\"keyword\">import</span> theano.tensor <span class=\"keyword\">as</span> T\n\nxs = np.random.rand(<span class=\"number\">20</span>, <span class=\"number\">3</span>) * np.random.rand(<span class=\"number\">3</span>) + (<span class=\"number\">2</span> * np.random.rand(<span class=\"number\">3</span>))\n\ntrue_coeffs = np.array([<span class=\"number\">3</span>, <span class=\"number\">4.5</span>, -<span class=\"number\">2</span>])\ntrue_intercept = <span class=\"number\">10</span>\n\nys = xs <span class=\"decorator\">@ true_coeffs + true_intercept</span>\n\n<span class=\"keyword\">with</span> pm.Model() <span class=\"keyword\">as</span> model:\n\n    betas = pm.MvNormal(<span class=\"string\">'beta'</span>, mu=<span class=\"number\">0.</span>, cov=<span class=\"number\">1E6</span> * np.eye(<span class=\"number\">3</span>), shape=<span class=\"number\">3</span>)\n    intercept = pm.Normal(<span class=\"string\">'intercept'</span>, mu=<span class=\"number\">0.</span>, sd=<span class=\"number\">1E6</span>)\n\n    means = T.dot(xs, betas) + intercept\n\n    error = pm.Uniform(<span class=\"string\">'error'</span>, lower=<span class=\"number\">0</span>, upper=<span class=\"number\">100</span>)\n    cov = error * np.eye(len(ys))\n\n    y = pm.MvNormal(<span class=\"string\">'y'</span>, mu=means, cov=cov, observed=ys, shape=len(ys))\n\n    pm.sample(<span class=\"number\">5000</span>, random_seed=<span class=\"number\">123</span>)</code></pre>",
  "id": "58c6c3539eb1bd81481f9a59",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-13T16:05:39.551Z",
  "text": "Would you implement something like this? it\u2019s super slow to sample on my laptop even for something fairly basic..\n```python\nimport numpy as np\nimport pymc3 as pm\nimport theano.tensor as T\n\nxs = np.random.rand(20, 3) * np.random.rand(3) + (2 * np.random.rand(3))\n\ntrue_coeffs = np.array([3, 4.5, -2])\ntrue_intercept = 10\n\nys = xs @ true_coeffs + true_intercept\n\nwith pm.Model() as model:\n    \n    betas = pm.MvNormal('beta', mu=0., cov=1E6 * np.eye(3), shape=3)\n    intercept = pm.Normal('intercept', mu=0., sd=1E6)\n    \n    means = T.dot(xs, betas) + intercept\n    \n    error = pm.Uniform('error', lower=0, upper=100)\n    cov = error * np.eye(len(ys))\n    \n    y = pm.MvNormal('y', mu=means, cov=cov, observed=ys, shape=len(ys))\n    \n    pm.sample(5000, random_seed=123)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "how slow is slow? a model that simple should be super fast",
  "id": "58c6c49300c00c3d4fff0e8b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-13T16:10:59.146Z",
  "text": "how slow is slow? a model that simple should be super fast",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-03-13T16:33:38.505Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pstjohn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=60",
   "displayName": "Peter St. John",
   "gv": "4",
   "id": "57976c7440f3a6eec05c88a5",
   "url": "/pstjohn",
   "username": "pstjohn",
   "v": 12
  },
  "html": "more than 10 hrs<pre><code><span class=\"variable\">Auto</span>-assigning <span class=\"variable\">NUTS</span> sampler...\n<span class=\"variable\">Initializing</span> <span class=\"variable\">NUTS</span> using advi...\n<span class=\"variable\">Average</span> <span class=\"variable\">ELBO</span> = -<span class=\"number\">57.44</span>: <span class=\"number\">100</span><span class=\"comment\">%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 200000/200000 [00:42&lt;00:00, 4698.31it/s]</span>\n<span class=\"variable\">Finished</span> [<span class=\"number\">100</span><span class=\"comment\">%]: Average ELBO = -56.132</span>\n  <span class=\"number\">3</span><span class=\"comment\">%|\u2588\u258a                                                       | 156/5000 [06:06&lt;14:18:11, 10.63s/it]</span></code></pre>",
  "id": "58c6c9d69eb1bd81481f9b50",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-13T16:33:26.915Z",
  "text": "more than 10 hrs\n```\nAuto-assigning NUTS sampler...\nInitializing NUTS using advi...\nAverage ELBO = -57.44: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 200000/200000 [00:42<00:00, 4698.31it/s]\nFinished [100%]: Average ELBO = -56.132\n  3%|\u2588\u258a                                                       | 156/5000 [06:06<14:18:11, 10.63s/it]\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "something is very wrong here",
  "id": "58c6ca7021d548df2cd04bed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-13T16:36:00.434Z",
  "text": "something is very wrong here",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I don&#39;t think you need the shape for the observed",
  "id": "58c6ca8509e7ba8510bd3d8e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-13T16:36:21.868Z",
  "text": "I don't think you need the shape for the observed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pstjohn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=60",
   "displayName": "Peter St. John",
   "gv": "4",
   "id": "57976c7440f3a6eec05c88a5",
   "url": "/pstjohn",
   "username": "pstjohn",
   "v": 12
  },
  "html": "yeah you\u2019re right, that was me debugging getting the input right.. still seems slow without it though",
  "id": "58c6cb1a567b0fc813902e08",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-13T16:38:50.902Z",
  "text": "yeah you\u2019re right, that was me debugging getting the input right.. still seems slow without it though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "dear <span data-link-type=\"mention\" data-screen-name=\"dev\" class=\"mention\">@dev</span>: is <code>pm.gp.GP</code> still developing to for example include builtin feature to pass a non-gaussian likelihood?",
  "id": "58c6cc0c872fc8ce62f94e53",
  "issues": [],
  "mentions": [
   {
    "screenName": "dev",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-13T16:42:52.419Z",
  "text": "dear @dev: is `pm.gp.GP` still developing to for example include builtin feature to pass a non-gaussian likelihood?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "something like  <code>pm.gp.GP(&#39;y_obs&#39;, cov_func=f_cov, sigma=s2_n, lik=pm.Poisson(),observed={&#39;X&#39;:X, &#39;Y&#39;:ymu})</code>",
  "id": "58c6cc9e872fc8ce62f95178",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-13T16:45:18.915Z",
  "text": "something like  `pm.gp.GP('y_obs', cov_func=f_cov, sigma=s2_n, lik=pm.Poisson(),observed={'X':X, 'Y':ymu})`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pstjohn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=60",
   "displayName": "Peter St. John",
   "gv": "4",
   "id": "57976c7440f3a6eec05c88a5",
   "url": "/pstjohn",
   "username": "pstjohn",
   "v": 12
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span>, I put in a github issue <span data-link-type=\"issue\" data-issue=\"1892\" class=\"issue\">#1892</span> to breakout from the gitter",
  "id": "58c6cff2567b0fc813902ea8",
  "issues": [
   {
    "number": "1892"
   }
  ],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-13T16:59:30.751Z",
  "text": "@twiecki, I put in a github issue #1892 to breakout from the gitter",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"junpenglao\" class=\"mention\">@junpenglao</span> We have not added that, no. For now you would have to manually evaluate the covariance function and use a <code>MvNormal</code> in addition to the Poisson. For example:<pre><code>\u03b8 = <span class=\"function\"><span class=\"title\">MvNormal</span><span class=\"params\">(<span class=\"string\">'\u03b8'</span>, mu=<span class=\"number\">0</span>, cov=K(np.arange(monthly_rows-<span class=\"number\">2</span>)</span></span>.<span class=\"function\"><span class=\"title\">reshape</span><span class=\"params\">(-<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span></span>),\n                            shape=(monthly_rows-<span class=\"number\">2</span>,))</code></pre>",
  "id": "58c97995b809ca5f4a481d34",
  "issues": [],
  "mentions": [
   {
    "screenName": "junpenglao",
    "userId": "56e8df4685d51f252ab907f1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-15T17:27:49.208Z",
  "text": "@junpenglao We have not added that, no. For now you would have to manually evaluate the covariance function and use a `MvNormal` in addition to the Poisson. For example:\n\n```\n\u03b8 = MvNormal('\u03b8', mu=0, cov=K(np.arange(monthly_rows-2).reshape(-1,1)),\n                            shape=(monthly_rows-2,))\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "then feed theta into the Poisson.",
  "id": "58c9799e590d72c864cdef9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-15T17:27:58.905Z",
  "text": "then feed theta into the Poisson.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "What we should allow is just a <code>observed={&#39;X&#39;:X}</code> argument, which would then allow the GP to be used as the parent of whatever likelihood you want.",
  "id": "58c979e1747ce617592f4e4c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-15T17:29:05.104Z",
  "text": "What we should allow is just a `observed={'X':X}` argument, which would then allow the GP to be used as the parent of whatever likelihood you want.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> thanks! that&#39;s what I am doing now. ",
  "id": "58c99a0d05a31d5a4a5eb7a2",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-15T19:46:21.823Z",
  "text": "@fonnesbeck thanks! that's what I am doing now. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/usptact",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1818325?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1818325?v=3&s=60",
   "displayName": "Vladislavs Dovgalecs",
   "gv": "3",
   "id": "5858a134d73408ce4f3e2bb9",
   "url": "/usptact",
   "username": "usptact",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"pstjohn\" class=\"mention\">@pstjohn</span> Yes, I also get super slow NUTS sampling on your example. ADVI initialization took ~1min but NUTS wants to sample 5hrs! I removed the &quot;shape&quot; parameter in the observed variable. Could this be an issue with symmetry? bad parameter choice? may be the model needs to be reparametrized?",
  "id": "58ca4374ac314c8a1a547be6",
  "issues": [],
  "mentions": [
   {
    "screenName": "pstjohn",
    "userId": "57976c7440f3a6eec05c88a5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-16T07:49:08.046Z",
  "text": "@pstjohn Yes, I also get super slow NUTS sampling on your example. ADVI initialization took ~1min but NUTS wants to sample 5hrs! I removed the \"shape\" parameter in the observed variable. Could this be an issue with symmetry? bad parameter choice? may be the model needs to be reparametrized?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/usptact",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1818325?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1818325?v=3&s=60",
   "displayName": "Vladislavs Dovgalecs",
   "gv": "3",
   "id": "5858a134d73408ce4f3e2bb9",
   "url": "/usptact",
   "username": "usptact",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"pstjohn\" class=\"mention\">@pstjohn</span> It looks like setting a test value for betas helped to escape the all-zero starting value. I used testval=np.array([0.1,0.3,0.4]) and NUTS ran blazingly fast.",
  "id": "58ca487105a31d5a4a620f33",
  "issues": [],
  "mentions": [
   {
    "screenName": "pstjohn",
    "userId": "57976c7440f3a6eec05c88a5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-16T08:10:25.991Z",
  "text": "@pstjohn It looks like setting a test value for betas helped to escape the all-zero starting value. I used testval=np.array([0.1,0.3,0.4]) and NUTS ran blazingly fast.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "initialization can be difficult and ADVI won&#39;t always find a good one.",
  "id": "58ca54171c040b8e0400f284",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-16T09:00:07.427Z",
  "text": "initialization can be difficult and ADVI won't always find a good one.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> is there any tips for efficient sampling using <code>MvNormal</code>? I am running some simulation using <code>MvNormal</code> prior for Poisson (as <span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> suggested) but it is so slow in NUTS for &gt;20 datapoints",
  "id": "58ca6a1cfe6a638b1acf68e7",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   },
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-16T10:34:04.036Z",
  "text": "@twiecki is there any tips for efficient sampling using `MvNormal`? I am running some simulation using `MvNormal` prior for Poisson (as @fonnesbeck suggested) but it is so slow in NUTS for >20 datapoints",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "Something seems to be up with MvNormal... we&#39;re working on a cholesky decomposed version which should make things much faster, but that&#39;s not implemented yet",
  "id": "58ca6c796d7eb18404d2c186",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-16T10:44:09.956Z",
  "text": "Something seems to be up with MvNormal... we're working on a cholesky decomposed version which should make things much faster, but that's not implemented yet",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "maybe <span data-link-type=\"mention\" data-screen-name=\"aseyboldt\" class=\"mention\">@aseyboldt</span> has an idea",
  "id": "58ca6c827b3f37e75401f9cc",
  "issues": [],
  "mentions": [
   {
    "screenName": "aseyboldt",
    "userId": "52a510b4ed5ab0b3bf04ffe2",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-16T10:44:18.893Z",
  "text": "maybe @aseyboldt has an idea",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"junpenglao\" class=\"mention\">@junpenglao</span> how about using ADVI?",
  "id": "58caaac56d7eb18404d4322a",
  "issues": [],
  "mentions": [
   {
    "screenName": "junpenglao",
    "userId": "56e8df4685d51f252ab907f1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-16T15:09:57.365Z",
  "text": "@junpenglao how about using ADVI?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-03-16T17:38:36.457Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> Just tried the new ADVI api, works much better (it was returning divergent warning before). Sampling is quite fast as well. However, it sometimes returns quite different result compare to GPflow using HMC. If you are interested you can have a look on <a href=\"https://gist.github.com/junpenglao/9c850bc9fc11085f844e8c19b500c173\" rel=\"nofollow\" target=\"_blank\" class=\"link\">Gist</a>",
  "id": "58cacd65b809ca5f4a4f9d86",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-16T17:37:41.073Z",
  "text": "@fonnesbeck Just tried the new ADVI api, works much better (it was returning divergent warning before). Sampling is quite fast as well. However, it sometimes returns quite different result compare to GPflow using HMC. If you are interested you can have a look on [Gist](https://gist.github.com/junpenglao/9c850bc9fc11085f844e8c19b500c173)",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/junpenglao/9c850bc9fc11085f844e8c19b500c173"
   }
  ],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Looks really great. HMC gives more accurate results though. ",
  "id": "58cae6caa84f611959b19674",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-16T19:26:02.700Z",
  "text": "Looks really great. HMC gives more accurate results though. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"junpenglao\" class=\"mention\">@junpenglao</span> could you try out full rank advi on this problem? You can initialize FullRankADVI.from_advi(inference) and then fit it",
  "id": "58cae751590d72c864d5ec7c",
  "issues": [],
  "mentions": [
   {
    "screenName": "junpenglao",
    "userId": "56e8df4685d51f252ab907f1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-16T19:28:17.019Z",
  "text": "@junpenglao could you try out full rank advi on this problem? You can initialize FullRankADVI.from_advi(inference) and then fit it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-03-16T21:30:17.371Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aseyboldt",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1882397?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1882397?v=4&s=60",
   "displayName": "Adrian Seyboldt",
   "gv": "4",
   "id": "52a510b4ed5ab0b3bf04ffe2",
   "url": "/aseyboldt",
   "username": "aseyboldt",
   "v": 6
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"junpenglao\" class=\"mention\">@junpenglao</span> You could try to reparametrize theta using a cholesky decomposition of the covariance matrix. Something along the lines of</p><pre><code>theta_raw = pm.<span class=\"function\"><span class=\"title\">Normal</span><span class=\"params\">(<span class=\"string\">'theta_raw'</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, shape=...)</span></span>\ntheta = tt.<span class=\"function\"><span class=\"title\">dot</span><span class=\"params\">(tt.slinalg.cholesky(cov)</span></span>, theta_raw)</code></pre><p>If the entries of the covariance matrix itself are the problem, and your cov follows an LKJCorr prior (does it?), you could also try the <strong>experimental</strong> branch <span data-link-type=\"issue\" data-issue=\"1898\" class=\"issue\">#1898</span>.</p>",
  "id": "58cb03162215a08f049457de",
  "issues": [
   {
    "number": "1898"
   }
  ],
  "mentions": [
   {
    "screenName": "junpenglao",
    "userId": "56e8df4685d51f252ab907f1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-16T21:26:46.900Z",
  "text": "@junpenglao You could try to reparametrize theta using a cholesky decomposition of the covariance matrix. Something along the lines of\n```\ntheta_raw = pm.Normal('theta_raw', 0, 1, shape=...)\ntheta = tt.dot(tt.slinalg.cholesky(cov), theta_raw)\n```\nIf the entries of the covariance matrix itself are the problem, and your cov follows an LKJCorr prior (does it?), you could also try the **experimental** branch #1898.",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ferrine\" class=\"mention\">@ferrine</span> tried FullRankADVI but the result is the same as ADVI for this example.",
  "id": "58cb06587b3f37e75405731e",
  "issues": [],
  "mentions": [
   {
    "screenName": "ferrine",
    "userId": "581e3155d73408ce4f33e027",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-16T21:40:40.252Z",
  "text": "@ferrine tried FullRankADVI but the result is the same as ADVI for this example.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"aseyboldt\" class=\"mention\">@aseyboldt</span> i am using the cov function from <code>pm.gp</code> so the prior is placed on the length scale and variance etc - but i will tried to reparameterize it tomorrow.",
  "id": "58cb06c905a31d5a4a666bc7",
  "issues": [],
  "mentions": [
   {
    "screenName": "aseyboldt",
    "userId": "52a510b4ed5ab0b3bf04ffe2",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-16T21:42:33.629Z",
  "text": "@aseyboldt i am using the cov function from `pm.gp` so the prior is placed on the length scale and variance etc - but i will tried to reparameterize it tomorrow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ferrine\" class=\"mention\">@ferrine</span> I am getting <code>LinAlgError: SVD did not converge</code> if i increase the data points to 100 - should I open an issue for this?",
  "id": "58cb84277b3f37e7540740cf",
  "issues": [],
  "mentions": [
   {
    "screenName": "ferrine",
    "userId": "581e3155d73408ce4f33e027",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-17T06:37:27.743Z",
  "text": "@ferrine I am getting `LinAlgError: SVD did not converge` if i increase the data points to 100 - should I open an issue for this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "That&#39;s math problems. ",
  "id": "58cb8e926d7eb18404d8474e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-17T07:21:54.106Z",
  "text": "That's math problems. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ferrine\" class=\"mention\">@ferrine</span> Yeah but it happened during the call to <code>inference.fit</code>. But i can not reproduce the problem in Linux... only happened on my mac... ",
  "id": "58cb9af36d7eb18404d87fe2",
  "issues": [],
  "mentions": [
   {
    "screenName": "ferrine",
    "userId": "581e3155d73408ce4f33e027",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-17T08:14:43.889Z",
  "text": "@ferrine Yeah but it happened during the call to `inference.fit`. But i can not reproduce the problem in Linux... only happened on my mac... ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Full rank advi requires inversion of covariance matrix. On large scale or very nontrivial cases it can be unstable and slow. ",
  "id": "58cba29cb809ca5f4a533797",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-17T08:47:24.225Z",
  "text": "Full rank advi requires inversion of covariance matrix. On large scale or very nontrivial cases it can be unstable and slow. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "What about minibatches?",
  "id": "58cba30bf7f7d48104277c83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-17T08:49:15.223Z",
  "text": "What about minibatches?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "Thanks for the advice -  will try that and keep you posted.",
  "id": "58cba5ca7b3f37e75407d31b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-17T09:00:58.604Z",
  "text": "Thanks for the advice -  will try that and keep you posted.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ssequeira",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=60",
   "displayName": "Shannon Sequeira",
   "gv": "4",
   "id": "58b46af0d73408ce4f4d3f2c",
   "url": "/ssequeira",
   "username": "ssequeira",
   "v": 7
  },
  "html": "Hi everyone,  I&#39;m going to enrol for my MS in statistics in September, so I wanted to contribute to get some coding experience. I&#39;m interested in Bayesian inference, so working on pymc3 at GSoC seemed like a fantastic opportunity. Ideally, I&#39;d like to work on extending VI support, implementing BNP methods or Riemannian HMC. Does anyone have any advice on how to make a competitive proposal?",
  "id": "58cbce1aac314c8a1a5c12d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-17T11:52:58.956Z",
  "text": "Hi everyone,  I'm going to enrol for my MS in statistics in September, so I wanted to contribute to get some coding experience. I'm interested in Bayesian inference, so working on pymc3 at GSoC seemed like a fantastic opportunity. Ideally, I'd like to work on extending VI support, implementing BNP methods or Riemannian HMC. Does anyone have any advice on how to make a competitive proposal?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bwengals",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=60",
   "displayName": "Bill Engels",
   "gv": "3",
   "id": "58c71e0cd73408ce4f5064f5",
   "url": "/bwengals",
   "username": "bwengals",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"junpenglao\" class=\"mention\">@junpenglao</span> you could try adding more of a white noise diagonal term to the covariance matrix before an inversion is done.  Have you tried HMC on the latent function? ",
  "id": "58cc5f8705a31d5a4a6c753c",
  "issues": [],
  "mentions": [
   {
    "screenName": "junpenglao",
    "userId": "56e8df4685d51f252ab907f1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-17T22:13:27.588Z",
  "text": "@junpenglao you could try adding more of a white noise diagonal term to the covariance matrix before an inversion is done.  Have you tried HMC on the latent function? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-03-17T22:14:55.224Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bwengals",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=60",
   "displayName": "Bill Engels",
   "gv": "3",
   "id": "58c71e0cd73408ce4f5064f5",
   "url": "/bwengals",
   "username": "bwengals",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span>  Do you mean adding <code>observed = {&quot;X&quot;: X}</code> to <code>MvNormal</code>?",
  "id": "58cc5fcd6701410e584c959a",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-17T22:14:37.733Z",
  "text": "@fonnesbeck  Do you mean adding `observed = {\"X\": X}` to `MvNormal`?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"bwengals\" class=\"mention\">@bwengals</span> no, to <code>GP</code>. When you want to specify a grid to evaluate the GP over, but the likelihood is evaluated elsewhere.",
  "id": "58cc6e8af7f7d481042b8629",
  "issues": [],
  "mentions": [
   {
    "screenName": "bwengals",
    "userId": "58c71e0cd73408ce4f5064f5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-17T23:17:30.082Z",
  "text": "@bwengals no, to `GP`. When you want to specify a grid to evaluate the GP over, but the likelihood is evaluated elsewhere.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bwengals",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=60",
   "displayName": "Bill Engels",
   "gv": "3",
   "id": "58c71e0cd73408ce4f5064f5",
   "url": "/bwengals",
   "username": "bwengals",
   "v": 5
  },
  "html": "ahh, gotcha",
  "id": "58cc72a21c040b8e040b386e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-17T23:34:58.421Z",
  "text": "ahh, gotcha",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"bwengals\" class=\"mention\">@bwengals</span> thanks - do you mean <code>Sigma = f_cov(X) + tt.eye(n)*s2_n**2</code> like in the <code>GP</code>?  ",
  "id": "58ccdae3b809ca5f4a587153",
  "issues": [],
  "mentions": [
   {
    "screenName": "bwengals",
    "userId": "58c71e0cd73408ce4f5064f5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-18T06:59:47.857Z",
  "text": "@bwengals thanks - do you mean `Sigma = f_cov(X) + tt.eye(n)*s2_n**2` like in the `GP`?  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ferrine\" class=\"mention\">@ferrine</span> FYI no more SVD problem with minibatches",
  "id": "58ccec83fe6a638b1ada9fac",
  "issues": [],
  "mentions": [
   {
    "screenName": "ferrine",
    "userId": "581e3155d73408ce4f33e027",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-18T08:14:59.477Z",
  "text": "@ferrine FYI no more SVD problem with minibatches",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bwengals",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=60",
   "displayName": "Bill Engels",
   "gv": "3",
   "id": "58c71e0cd73408ce4f5064f5",
   "url": "/bwengals",
   "username": "bwengals",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"junpenglao\" class=\"mention\">@junpenglao</span> oh i missed the link to your gist! disregard what i said.  i will be able to look it over tomorrow and will try to give you a better answer",
  "id": "58ccf029fe6a638b1adaacd2",
  "issues": [],
  "mentions": [
   {
    "screenName": "junpenglao",
    "userId": "56e8df4685d51f252ab907f1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-18T08:30:33.378Z",
  "text": "@junpenglao oh i missed the link to your gist! disregard what i said.  i will be able to look it over tomorrow and will try to give you a better answer",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> besides adding <code>observed = {&quot;X&quot;: X}</code> to <code>GP</code>, it would be great to also add the possibility to pass <code>total_size</code> to <code>logp</code> in <code>GP</code> for minibatchs",
  "id": "58cd11f505a31d5a4a6ec243",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-18T10:54:45.962Z",
  "text": "@fonnesbeck besides adding `observed = {\"X\": X}` to `GP`, it would be great to also add the possibility to pass `total_size` to `logp` in `GP` for minibatchs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "It not possible now? I thought it is available for all distributions",
  "id": "58cd13c205a31d5a4a6ecbb9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-18T11:02:26.145Z",
  "text": "It not possible now? I thought it is available for all distributions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "total_size",
  "id": "58cd13ccfe6a638b1adb2b78",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-18T11:02:36.293Z",
  "text": "total_size",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "seems not <a href=\"https://github.com/pymc-devs/pymc3/blob/master/pymc3/gp/gp.py#L76\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/blob/master/pymc3/gp/gp.py#L76</a>",
  "id": "58cd1f732215a08f049cd000",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-18T11:52:19.298Z",
  "text": "seems not https://github.com/pymc-devs/pymc3/blob/master/pymc3/gp/gp.py#L76",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/blob/master/pymc3/gp/gp.py#L76"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "it is ok",
  "id": "58cd20d3ac314c8a1a615a30",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-18T11:58:11.782Z",
  "text": "it is ok",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "<a href=\"https://github.com/pymc-devs/pymc3/blob/master/pymc3/model.py#L176\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/blob/master/pymc3/model.py#L176</a>",
  "id": "58cd20f96d7eb18404dec1bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-18T11:58:49.398Z",
  "text": "https://github.com/pymc-devs/pymc3/blob/master/pymc3/model.py#L176",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/blob/master/pymc3/model.py#L176"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "<a href=\"https://github.com/pymc-devs/pymc3/blob/master/pymc3/model.py#L889\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/blob/master/pymc3/model.py#L889</a>",
  "id": "58cd219e2215a08f049cd993",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-18T12:01:34.765Z",
  "text": "https://github.com/pymc-devs/pymc3/blob/master/pymc3/model.py#L889",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/blob/master/pymc3/model.py#L889"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "I am getting error at <a href=\"https://github.com/pymc-devs/pymc3/blob/master/pymc3/model.py#L929\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/blob/master/pymc3/model.py#L929</a>",
  "id": "58cd2521a84f611959bac675",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-03-18T12:16:33.539Z",
  "text": "I am getting error at https://github.com/pymc-devs/pymc3/blob/master/pymc3/model.py#L929",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/blob/master/pymc3/model.py#L929"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2017-03-18T12:22:44.295Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "below is the full message<pre><code>---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n&lt;ipython-input-<span class=\"number\">20</span>-be2f47f890d0&gt; <span class=\"keyword\">in</span> &lt;module&gt;()\n     <span class=\"number\">27</span>                      sigma=s2_n,\n     <span class=\"number\">28</span>                      observed={<span class=\"string\">'X'</span>:minibatch_x, <span class=\"string\">'Y'</span>:minibatch_x},\n---&gt; <span class=\"number\">29</span>                      total_size=n)\n\n<span class=\"regexp\">/Library/</span>Frameworks<span class=\"regexp\">/Python.framework/</span>Versions<span class=\"regexp\">/3.5/</span>lib<span class=\"regexp\">/python3.5/</span>site-packages<span class=\"regexp\">/pymc3/</span>distributions/distribution.py <span class=\"keyword\">in</span> __new__(cls, name, *args, **kwargs)\n     <span class=\"number\">35</span>             total_size = kwargs.pop(<span class=\"string\">'total_size'</span>, None)\n     <span class=\"number\">36</span>             dist = cls.dist(*args, **kwargs)\n---&gt; <span class=\"number\">37</span>             <span class=\"keyword\">return</span> model.Var(name, dist, data, total_size)\n     <span class=\"number\">38</span>         <span class=\"string\">else:</span>\n     <span class=\"number\">39</span>             raise TypeError(<span class=\"string\">\"Name needs to be a string but got: {}\"</span>.format(name))\n\n<span class=\"regexp\">/Library/</span>Frameworks<span class=\"regexp\">/Python.framework/</span>Versions<span class=\"regexp\">/3.5/</span>lib<span class=\"regexp\">/python3.5/</span>site-packages<span class=\"regexp\">/pymc3/</span>model.py <span class=\"keyword\">in</span> Var(self, name, dist, data, total_size)\n    <span class=\"number\">522</span>         elif isinstance(data, dict):\n    <span class=\"number\">523</span>             var = MultiObservedRV(name=name, data=data, distribution=dist,\n--&gt; <span class=\"number\">524</span>                                   total_size=total_size, model=self)\n    <span class=\"number\">525</span>             self.observed_RVs.append(var)\n    <span class=\"number\">526</span>             <span class=\"keyword\">if</span> var.<span class=\"string\">missing_values:</span>\n\n<span class=\"regexp\">/Library/</span>Frameworks<span class=\"regexp\">/Python.framework/</span>Versions<span class=\"regexp\">/3.5/</span>lib<span class=\"regexp\">/python3.5/</span>site-packages<span class=\"regexp\">/pymc3/</span>model.py <span class=\"keyword\">in</span> __init__(self, name, data, distribution, total_size, model)\n    <span class=\"number\">927</span>         self.missing_values = [datum.missing_values <span class=\"keyword\">for</span> datum <span class=\"keyword\">in</span> self.data.values()\n    <span class=\"number\">928</span>                                <span class=\"keyword\">if</span> datum.missing_values is not None]\n--&gt; <span class=\"number\">929</span>         self.logp_elemwiset = distribution.logp(**self.data)\n    <span class=\"number\">930</span>         self.total_size = total_size\n    <span class=\"number\">931</span>         self.model = model\n\n<span class=\"regexp\">/Library/</span>Frameworks<span class=\"regexp\">/Python.framework/</span>Versions<span class=\"regexp\">/3.5/</span>lib<span class=\"regexp\">/python3.5/</span>site-packages<span class=\"regexp\">/pymc3/</span>gp/gp.py <span class=\"keyword\">in</span> logp(self, Y, X)\n     <span class=\"number\">74</span>         Sigma = self.K(X) + tt.eye(X.shape[<span class=\"number\">0</span>])*self.sigma**<span class=\"number\">2</span>\n     <span class=\"number\">75</span> \n---&gt; <span class=\"number\">76</span>         <span class=\"keyword\">return</span> MvNormal.dist(mu, Sigma).logp(Y)\n     <span class=\"number\">77</span> \n     <span class=\"number\">78</span> \n\n<span class=\"regexp\">/Library/</span>Frameworks<span class=\"regexp\">/Python.framework/</span>Versions<span class=\"regexp\">/3.5/</span>lib<span class=\"regexp\">/python3.5/</span>site-packages<span class=\"regexp\">/pymc3/</span>distributions/multivariate.py <span class=\"keyword\">in</span> logp(self, value)\n    <span class=\"number\">130</span>         <span class=\"string\">else:</span>\n    <span class=\"number\">131</span>             result -= logdet(tau)\n--&gt; <span class=\"number\">132</span>         result += (tt.dot(delta, tau) * delta).sum(axis=delta.ndim - <span class=\"number\">1</span>)\n    <span class=\"number\">133</span>         <span class=\"keyword\">return</span> -<span class=\"number\">1</span> / <span class=\"number\">2.</span> * result\n    <span class=\"number\">134</span> \n\n<span class=\"regexp\">/Library/</span>Frameworks<span class=\"regexp\">/Python.framework/</span>Versions<span class=\"regexp\">/3.5/</span>lib<span class=\"regexp\">/python3.5/</span>site-packages<span class=\"regexp\">/theano/</span>tensor/basic.py <span class=\"keyword\">in</span> dot(a, b)\n   <span class=\"number\">5616</span>         <span class=\"keyword\">return</span> tensordot(a, b, [[a.ndim - <span class=\"number\">1</span>], [numpy.maximum(<span class=\"number\">0</span>, b.ndim - <span class=\"number\">2</span>)]])\n   <span class=\"number\">5617</span>     <span class=\"string\">else:</span>\n-&gt; <span class=\"number\">5618</span>         <span class=\"keyword\">return</span> _dot(a, b)\n   <span class=\"number\">5619</span> \n   <span class=\"number\">5620</span> \n\n<span class=\"regexp\">/Library/</span>Frameworks<span class=\"regexp\">/Python.framework/</span>Versions<span class=\"regexp\">/3.5/</span>lib<span class=\"regexp\">/python3.5/</span>site-packages<span class=\"regexp\">/theano/</span>gof/op.py <span class=\"keyword\">in</span> __call__(self, *inputs, **kwargs)\n    <span class=\"number\">666</span>                 thunk.outputs = [storage_map[v] <span class=\"keyword\">for</span> v <span class=\"keyword\">in</span> node.outputs]\n    <span class=\"number\">667</span> \n--&gt; <span class=\"number\">668</span>                 required = thunk()\n    <span class=\"number\">669</span>                 <span class=\"keyword\">assert</span> not required  # We provided all inputs\n    <span class=\"number\">670</span> \n\n<span class=\"regexp\">/Library/</span>Frameworks<span class=\"regexp\">/Python.framework/</span>Versions<span class=\"regexp\">/3.5/</span>lib<span class=\"regexp\">/python3.5/</span>site-packages<span class=\"regexp\">/theano/</span>gof/op.py <span class=\"keyword\">in</span> rval(p, i, o, n)\n    <span class=\"number\">910</span>             # <span class=\"keyword\">default</span> arguments are stored <span class=\"keyword\">in</span> the closure of `rval`\n    <span class=\"number\">911</span>             <span class=\"keyword\">def</span> rval(p=p, i=node_input_storage, o=node_output_storage, n=node):\n--&gt; <span class=\"number\">912</span>                 r = p(n, [x[<span class=\"number\">0</span>] <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> i], o)\n    <span class=\"number\">913</span>                 <span class=\"keyword\">for</span> o <span class=\"keyword\">in</span> node.<span class=\"string\">outputs:</span>\n    <span class=\"number\">914</span>                     compute_map[o][<span class=\"number\">0</span>] = True\n\n<span class=\"regexp\">/Library/</span>Frameworks<span class=\"regexp\">/Python.framework/</span>Versions<span class=\"regexp\">/3.5/</span>lib<span class=\"regexp\">/python3.5/</span>site-packages<span class=\"regexp\">/theano/</span>tensor/basic.py <span class=\"keyword\">in</span> perform(self, node, inp, out)\n   <span class=\"number\">5434</span>         # gives a numpy <span class=\"typename\">float</span> object but we need to <span class=\"keyword\">return</span> a <span class=\"number\">0</span>d\n   <span class=\"number\">5435</span>         # ndarray\n-&gt; <span class=\"number\">5436</span>         z[<span class=\"number\">0</span>] = numpy.asarray(numpy.dot(x, y))\n   <span class=\"number\">5437</span> \n   <span class=\"number\">5438</span>     <span class=\"keyword\">def</span> grad(self, inp, grads):\n<span class=\"label\">\nValueError:</span> shapes (<span class=\"number\">25</span>,<span class=\"number\">1</span>) and (<span class=\"number\">25</span>,<span class=\"number\">25</span>) not <span class=\"string\">aligned:</span> <span class=\"number\">1</span> (dim <span class=\"number\">1</span>) != <span class=\"number\">25</span> (dim <span class=\"number\">0</span>)</code></pre>",
  "id": "58cd25f3fe6a638b1adb72f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-03-18T12:20:03.981Z",
  "text": "below is the full message\n```\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-20-be2f47f890d0> in <module>()\n     27                      sigma=s2_n,\n     28                      observed={'X':minibatch_x, 'Y':minibatch_x},\n---> 29                      total_size=n)\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymc3/distributions/distribution.py in __new__(cls, name, *args, **kwargs)\n     35             total_size = kwargs.pop('total_size', None)\n     36             dist = cls.dist(*args, **kwargs)\n---> 37             return model.Var(name, dist, data, total_size)\n     38         else:\n     39             raise TypeError(\"Name needs to be a string but got: {}\".format(name))\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymc3/model.py in Var(self, name, dist, data, total_size)\n    522         elif isinstance(data, dict):\n    523             var = MultiObservedRV(name=name, data=data, distribution=dist,\n--> 524                                   total_size=total_size, model=self)\n    525             self.observed_RVs.append(var)\n    526             if var.missing_values:\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymc3/model.py in __init__(self, name, data, distribution, total_size, model)\n    927         self.missing_values = [datum.missing_values for datum in self.data.values()\n    928                                if datum.missing_values is not None]\n--> 929         self.logp_elemwiset = distribution.logp(**self.data)\n    930         self.total_size = total_size\n    931         self.model = model\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymc3/gp/gp.py in logp(self, Y, X)\n     74         Sigma = self.K(X) + tt.eye(X.shape[0])*self.sigma**2\n     75 \n---> 76         return MvNormal.dist(mu, Sigma).logp(Y)\n     77 \n     78 \n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymc3/distributions/multivariate.py in logp(self, value)\n    130         else:\n    131             result -= logdet(tau)\n--> 132         result += (tt.dot(delta, tau) * delta).sum(axis=delta.ndim - 1)\n    133         return -1 / 2. * result\n    134 \n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/theano/tensor/basic.py in dot(a, b)\n   5616         return tensordot(a, b, [[a.ndim - 1], [numpy.maximum(0, b.ndim - 2)]])\n   5617     else:\n-> 5618         return _dot(a, b)\n   5619 \n   5620 \n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/theano/gof/op.py in __call__(self, *inputs, **kwargs)\n    666                 thunk.outputs = [storage_map[v] for v in node.outputs]\n    667 \n--> 668                 required = thunk()\n    669                 assert not required  # We provided all inputs\n    670 \n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/theano/gof/op.py in rval(p, i, o, n)\n    910             # default arguments are stored in the closure of `rval`\n    911             def rval(p=p, i=node_input_storage, o=node_output_storage, n=node):\n--> 912                 r = p(n, [x[0] for x in i], o)\n    913                 for o in node.outputs:\n    914                     compute_map[o][0] = True\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/theano/tensor/basic.py in perform(self, node, inp, out)\n   5434         # gives a numpy float object but we need to return a 0d\n   5435         # ndarray\n-> 5436         z[0] = numpy.asarray(numpy.dot(x, y))\n   5437 \n   5438     def grad(self, inp, grads):\n\nValueError: shapes (25,1) and (25,25) not aligned: 1 (dim 1) != 25 (dim 0)\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2017-03-18T12:22:30.228Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<p>not sure if it&#39;s me doing anything wrong... but with  </p><pre><code>Sigma = <span class=\"function\"><span class=\"title\">f_cov</span><span class=\"params\">(minibatch_x)</span></span> + tt.<span class=\"function\"><span class=\"title\">eye</span><span class=\"params\">(batchsize)</span></span>*s2_n**<span class=\"number\">2</span>\ny_mu = pm.<span class=\"function\"><span class=\"title\">MvNormal</span><span class=\"params\">(<span class=\"string\">'y_mu'</span>, mu=intercept, cov=Sigma, observed=minibatch_y, total_size=n)</span></span></code></pre><p>it&#39;s fine</p>",
  "id": "58cd264ca84f611959baca92",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2017-03-18T12:21:32.387Z",
  "text": "not sure if it's me doing anything wrong... but with  \n```\nSigma = f_cov(minibatch_x) + tt.eye(batchsize)*s2_n**2\ny_mu = pm.MvNormal('y_mu', mu=intercept, cov=Sigma, observed=minibatch_y, total_size=n)\n```   \nit's fine",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Looks like a bug",
  "id": "58cd27296d7eb18404ded8fb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2017-03-18T12:25:13.566Z",
  "text": "Looks like a bug",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Can you open an issue with minimal failing example?",
  "id": "58cd44ec6701410e584f7a54",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 33,
  "sent": "2017-03-18T14:32:12.887Z",
  "text": "Can you open an issue with minimal failing example?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "sure - i @ you.",
  "id": "58cd48afb809ca5f4a59f378",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 33,
  "sent": "2017-03-18T14:48:15.360Z",
  "text": "sure - i @ you.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bwengals",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=60",
   "displayName": "Bill Engels",
   "gv": "3",
   "id": "58c71e0cd73408ce4f5064f5",
   "url": "/bwengals",
   "username": "bwengals",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"junpenglao\" class=\"mention\">@junpenglao</span> Finally got that your model to work, check out this <a href=\"https://gist.github.com/bwengals/c3396c2d5e3127ec4a9969fd69ec5a3f\" rel=\"nofollow\" target=\"_blank\" class=\"link\">gist</a>",
  "id": "58ce59fc7b3f37e754122fa8",
  "issues": [],
  "mentions": [
   {
    "screenName": "junpenglao",
    "userId": "56e8df4685d51f252ab907f1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 33,
  "sent": "2017-03-19T10:14:20.442Z",
  "text": "@junpenglao Finally got that your model to work, check out this [gist](https://gist.github.com/bwengals/c3396c2d5e3127ec4a9969fd69ec5a3f)",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/bwengals/c3396c2d5e3127ec4a9969fd69ec5a3f"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bwengals",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=60",
   "displayName": "Bill Engels",
   "gv": "3",
   "id": "58c71e0cd73408ce4f5064f5",
   "url": "/bwengals",
   "username": "bwengals",
   "v": 5
  },
  "html": "let me know if you have any questions, I ended up implementing it a bit differently",
  "id": "58ce5a2aa84f611959bee13d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 34,
  "sent": "2017-03-19T10:15:06.296Z",
  "text": "let me know if you have any questions, I ended up implementing it a bit differently",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"bwengals\" class=\"mention\">@bwengals</span> thats awesome!!! Thank you!",
  "id": "58ce72166701410e585350ec",
  "issues": [],
  "mentions": [
   {
    "screenName": "bwengals",
    "userId": "58c71e0cd73408ce4f5064f5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 34,
  "sent": "2017-03-19T11:57:10.130Z",
  "text": "@bwengals thats awesome!!! Thank you!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bwengals",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=60",
   "displayName": "Bill Engels",
   "gv": "3",
   "id": "58c71e0cd73408ce4f5064f5",
   "url": "/bwengals",
   "username": "bwengals",
   "v": 5
  },
  "html": "yw! itl be good to have non-gaussian likelihood gp&#39;s.  I couldn&#39;t figure out what specifically in the original model wasn&#39;t working... looks alright now i think",
  "id": "58cf032a58ad4eb028303fd7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 33,
  "sent": "2017-03-19T22:16:10.550Z",
  "text": "yw! itl be good to have non-gaussian likelihood gp's.  I couldn't figure out what specifically in the original model wasn't working... looks alright now i think",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "Well, <img src=\"http://i.imgur.com/YsbKHg1.jpg\" alt=\"alt\" rel=\"nofollow\">",
  "id": "58cf711dac314c8a1a692fcb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 33,
  "sent": "2017-03-20T06:05:17.130Z",
  "text": "Well, ![alt](http://i.imgur.com/YsbKHg1.jpg)",
  "unread": false,
  "urls": [
   {
    "url": "http://i.imgur.com/YsbKHg1.jpg"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bwengals",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=60",
   "displayName": "Bill Engels",
   "gv": "3",
   "id": "58c71e0cd73408ce4f5064f5",
   "url": "/bwengals",
   "username": "bwengals",
   "v": 5
  },
  "html": "hahah! i guess so ",
  "id": "58d058a3590d72c864eaf621",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-03-20T22:33:07.699Z",
  "text": "hahah! i guess so ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/krishnanj",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12413015?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12413015?v=4&s=60",
   "displayName": "Jeyashree Krishnan",
   "gv": "4",
   "id": "56951f3916b6c7089cc234df",
   "url": "/krishnanj",
   "username": "krishnanj",
   "v": 3
  },
  "html": "<p>Hi,</p><p>Can one use PyMC for MC sampling of Ising states? Basically here you start with some initial configuration of lattice, flip spins randomly, have some acceptance criteria based on some thermodynamic variable you compute, then accept or reject the next state and you do this progressively. So each state is discrete and so are other parameters and I am not sure how to pipe in PyMC into my simulation i.e. what the \u2018model\u2019 is, or what the priors are. I thought for large lattice sizes using optimized libraries such as yours would make the simulations faster, hence the interest. </p>",
  "id": "58d11b232215a08f04abc728",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-03-21T12:22:59.911Z",
  "text": "Hi,\n\nCan one use PyMC for MC sampling of Ising states? Basically here you start with some initial configuration of lattice, flip spins randomly, have some acceptance criteria based on some thermodynamic variable you compute, then accept or reject the next state and you do this progressively. So each state is discrete and so are other parameters and I am not sure how to pipe in PyMC into my simulation i.e. what the \u2018model\u2019 is, or what the priors are. I thought for large lattice sizes using optimized libraries such as yours would make the simulations faster, hence the interest. \n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I don&#39;t think pymc3 is the right tool for that. it might work, but the main focus is on continuous models",
  "id": "58d11bd67b3f37e7541d1aa6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-03-21T12:25:58.322Z",
  "text": "I don't think pymc3 is the right tool for that. it might work, but the main focus is on continuous models",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/krishnanj",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12413015?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12413015?v=4&s=60",
   "displayName": "Jeyashree Krishnan",
   "gv": "4",
   "id": "56951f3916b6c7089cc234df",
   "url": "/krishnanj",
   "username": "krishnanj",
   "v": 3
  },
  "html": "okay I found that there are also many other inbuilt python packages like stan, emcee etc.",
  "id": "58d11c4c58ad4eb0283894ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-03-21T12:27:56.847Z",
  "text": "okay I found that there are also many other inbuilt python packages like stan, emcee etc.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/krishnanj",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12413015?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12413015?v=4&s=60",
   "displayName": "Jeyashree Krishnan",
   "gv": "4",
   "id": "56951f3916b6c7089cc234df",
   "url": "/krishnanj",
   "username": "krishnanj",
   "v": 3
  },
  "html": "I suppose then there are no tools for discrete models right?",
  "id": "58d11c57f7f7d481043d34be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-03-21T12:28:07.123Z",
  "text": "I suppose then there are no tools for discrete models right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "right",
  "id": "58d11e8a5917e26076ba5d28",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-03-21T12:37:30.718Z",
  "text": "right",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/krishnanj",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12413015?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12413015?v=4&s=60",
   "displayName": "Jeyashree Krishnan",
   "gv": "4",
   "id": "56951f3916b6c7089cc234df",
   "url": "/krishnanj",
   "username": "krishnanj",
   "v": 3
  },
  "html": "last question, can I ask why? is it because the use cases are few?",
  "id": "58d11fa6a84f611959c9fbff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-03-21T12:42:14.025Z",
  "text": "last question, can I ask why? is it because the use cases are few?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that&#39;s my sense, but I could be wrong",
  "id": "58d11fe35917e26076ba64c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-03-21T12:43:15.559Z",
  "text": "that's my sense, but I could be wrong",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/krishnanj",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12413015?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12413015?v=4&s=60",
   "displayName": "Jeyashree Krishnan",
   "gv": "4",
   "id": "56951f3916b6c7089cc234df",
   "url": "/krishnanj",
   "username": "krishnanj",
   "v": 3
  },
  "html": "cool thanks for the time!",
  "id": "58d12133fe6a638b1aea95ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-03-21T12:48:51.681Z",
  "text": "cool thanks for the time!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aseyboldt",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1882397?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1882397?v=4&s=60",
   "displayName": "Adrian Seyboldt",
   "gv": "4",
   "id": "52a510b4ed5ab0b3bf04ffe2",
   "url": "/aseyboldt",
   "username": "aseyboldt",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"krishnanj\" class=\"mention\">@krishnanj</span> I guess another reason is that the additional structure for continuous problems (a meaningful topology and with that limits, derivatives...) often makes it easier to solve those problems. It might be less about software support, than the availability of good algorithms.",
  "id": "58d13287590d72c864ee43c2",
  "issues": [],
  "mentions": [
   {
    "screenName": "krishnanj",
    "userId": "56951f3916b6c7089cc234df",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 30,
  "sent": "2017-03-21T14:02:47.358Z",
  "text": "@krishnanj I guess another reason is that the additional structure for continuous problems (a meaningful topology and with that limits, derivatives...) often makes it easier to solve those problems. It might be less about software support, than the availability of good algorithms.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "good point",
  "id": "58d1335f7b3f37e7541d9b97",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-03-21T14:06:23.114Z",
  "text": "good point",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/krishnanj",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12413015?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12413015?v=4&s=60",
   "displayName": "Jeyashree Krishnan",
   "gv": "4",
   "id": "56951f3916b6c7089cc234df",
   "url": "/krishnanj",
   "username": "krishnanj",
   "v": 3
  },
  "html": "that makes sense, thanks for pointing that out!",
  "id": "58d141dd7b3f37e7541deb1b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-03-21T15:08:13.250Z",
  "text": "that makes sense, thanks for pointing that out!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "Is there a build-in function transferring between correlation matrix and covariance matrix?",
  "id": "58d39da0590d72c864f8c0f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-03-23T10:04:16.666Z",
  "text": "Is there a build-in function transferring between correlation matrix and covariance matrix?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I don&#39;t think so.<br>```python",
  "id": "58d3a015caf143ab66518882",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-03-23T10:14:45.275Z",
  "text": "I don't think so.\n```python",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<pre><code class=\"python\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cov2cor</span><span class=\"params\">(X)</span>:</span>\n    D = np.zeros_like(X)\n    d = np.sqrt(np.diag(X))\n    np.fill_diagonal(D, d)\n    DInv = np.linalg.inv(D)\n    R = np.dot(np.dot(DInv, X), DInv)\n    <span class=\"keyword\">return</span> R</code></pre>",
  "id": "58d3a0256d7eb18404f96e08",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-03-23T10:15:01.370Z",
  "text": "```python\ndef cov2cor(X):\n    D = np.zeros_like(X)\n    d = np.sqrt(np.diag(X))\n    np.fill_diagonal(D, d)\n    DInv = np.linalg.inv(D)\n    R = np.dot(np.dot(DInv, X), DInv)\n    return R\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Let&#39;s add it to dist_math with backward variant ",
  "id": "58d3a08d2215a08f04b6d389",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-03-23T10:16:45.744Z",
  "text": "Let's add it to dist_math with backward variant ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/dhirschfeld",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/881019?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/881019?v=4&s=60",
   "displayName": "Dave Hirschfeld",
   "gv": "4",
   "id": "533187555e986b0712effbbd",
   "url": "/dhirschfeld",
   "username": "dhirschfeld",
   "v": 26
  },
  "html": "A slightly faster variant is:<pre><code class=\"python\">In [<span class=\"number\">42</span>]: n = <span class=\"number\">10</span>\n    ...: cov = rand(n, n)\n    ...: cov = cov <span class=\"decorator\">@ cov.T</span>\n    ...: cov += n*np.eye(n)\n\nIn [<span class=\"number\">43</span>]: cov2cor2 = <span class=\"keyword\">lambda</span> cov: cov/np.outer(*[np.sqrt(cov.diagonal())]*<span class=\"number\">2</span>)\n\nIn [<span class=\"number\">44</span>]: %timeit cov2cor(cov)\nThe slowest run took <span class=\"number\">14.88</span> times longer than the fastest. This could mean that an intermediate result <span class=\"keyword\">is</span> being cached.\n<span class=\"number\">10000</span> loops, best of <span class=\"number\">3</span>: <span class=\"number\">25</span> \u00b5s per loop\n\nIn [<span class=\"number\">45</span>]: %timeit cov2cor2(cov)\nThe slowest run took <span class=\"number\">10.97</span> times longer than the fastest. This could mean that an intermediate result <span class=\"keyword\">is</span> being cached.\n<span class=\"number\">100000</span> loops, best of <span class=\"number\">3</span>: <span class=\"number\">5.59</span> \u00b5s per loop\n\nIn [<span class=\"number\">46</span>]: np.allclose(cov2cor(cov), cov2cor2(cov))\nOut[<span class=\"number\">46</span>]: <span class=\"keyword\">True</span></code></pre>",
  "id": "58d3a57e7b3f37e754287657",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-23T10:37:50.434Z",
  "text": "A slightly faster variant is:\n```python\nIn [42]: n = 10\n    ...: cov = rand(n, n)\n    ...: cov = cov @ cov.T\n    ...: cov += n*np.eye(n)\n\nIn [43]: cov2cor2 = lambda cov: cov/np.outer(*[np.sqrt(cov.diagonal())]*2)\n\nIn [44]: %timeit cov2cor(cov)\nThe slowest run took 14.88 times longer than the fastest. This could mean that an intermediate result is being cached.\n10000 loops, best of 3: 25 \u00b5s per loop\n\nIn [45]: %timeit cov2cor2(cov)\nThe slowest run took 10.97 times longer than the fastest. This could mean that an intermediate result is being cached.\n100000 loops, best of 3: 5.59 \u00b5s per loop\n\nIn [46]: np.allclose(cov2cor(cov), cov2cor2(cov))\nOut[46]: True\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "nice!",
  "id": "58d3a59f590d72c864f8e63f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-23T10:38:23.102Z",
  "text": "nice!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aseyboldt",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1882397?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1882397?v=4&s=60",
   "displayName": "Adrian Seyboldt",
   "gv": "4",
   "id": "52a510b4ed5ab0b3bf04ffe2",
   "url": "/aseyboldt",
   "username": "aseyboldt",
   "v": 6
  },
  "html": "Still a bit faster (avoiding allocations and divisions):<pre><code class=\"python\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cov2cor3</span><span class=\"params\">(cov)</span>:</span>\n    inv_stds = np.sqrt(cov.diagonal())\n    inv_stds[:] = <span class=\"number\">1</span> / inv_stds\n    corr = cov.copy()\n    corr *= inv_stds\n    corr *= inv_stds[:, <span class=\"keyword\">None</span>]\n    <span class=\"keyword\">return</span> corr</code></pre>",
  "id": "58d3ba7858ad4eb028440d73",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-23T12:07:20.595Z",
  "text": "Still a bit faster (avoiding allocations and divisions):\n```python\ndef cov2cor3(cov):\n    inv_stds = np.sqrt(cov.diagonal())\n    inv_stds[:] = 1 / inv_stds\n    corr = cov.copy()\n    corr *= inv_stds\n    corr *= inv_stds[:, None]\n    return corr\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-03-23T14:02:37.060Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "Hi all me again: is there a way to create a n x k <code>pm.MvNormal</code> RV with a k x k covariance matrix yet? I remember there is a discussion long time ago <span data-link-type=\"issue\" data-issue=\"535\" class=\"issue\">#535</span>. I tried playing around with the <code>shape</code> argument but it doesn&#39;t seems to work.",
  "id": "58d3d53ca84f611959d627da",
  "issues": [
   {
    "number": "535"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-23T14:01:32.502Z",
  "text": "Hi all me again: is there a way to create a n x k `pm.MvNormal` RV with a k x k covariance matrix yet? I remember there is a discussion long time ago #535. I tried playing around with the `shape` argument but it doesn't seems to work.",
  "unread": false,
  "urls": [],
  "v": 5
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aseyboldt",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1882397?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1882397?v=4&s=60",
   "displayName": "Adrian Seyboldt",
   "gv": "4",
   "id": "52a510b4ed5ab0b3bf04ffe2",
   "url": "/aseyboldt",
   "username": "aseyboldt",
   "v": 6
  },
  "html": "What&#39;s wrong with this? Seems to work fine for me.<pre><code class=\"python\">mu = np.zeros(k)\nvals = pm.MvNormal(<span class=\"string\">'vals'</span>, mu=mu, cov=cov, shape=(n, k))</code></pre>",
  "id": "58d3dd41590d72c864f9eaf9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-23T14:35:45.481Z",
  "text": "What's wrong with this? Seems to work fine for me.\n```python\nmu = np.zeros(k)\nvals = pm.MvNormal('vals', mu=mu, cov=cov, shape=(n, k))\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "lol you are right it is fine, thanks!!!",
  "id": "58d3e2f9b809ca5f4a74fb40",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-23T15:00:09.024Z",
  "text": "lol you are right it is fine, thanks!!!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/dhirschfeld",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/881019?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/881019?v=4&s=60",
   "displayName": "Dave Hirschfeld",
   "gv": "4",
   "id": "533187555e986b0712effbbd",
   "url": "/dhirschfeld",
   "username": "dhirschfeld",
   "v": 26
  },
  "html": "I can&#39;t resist a challenge so I eked out a little bit more performance using the <code>np.outer</code> trick, but only for larger matrices (which may not be seen in practice?)<pre><code class=\"python\">In [<span class=\"number\">35</span>]: <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cov2cor4</span><span class=\"params\">(cov)</span>:</span>\n    ...:     inv_stds = np.sqrt(cov.diagonal())\n    ...:     inv_stds[:] = <span class=\"number\">1</span> / inv_stds\n    ...:     corr = np.outer(inv_stds, inv_stds)\n    ...:     corr *= cov\n    ...:     <span class=\"keyword\">return</span> corr\n\nIn [<span class=\"number\">36</span>]: <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> [<span class=\"number\">10</span>, <span class=\"number\">100</span>, <span class=\"number\">1000</span>]:\n    ...:     print(n)\n    ...:     cov = make_cov(n)\n    ...:     %timeit cov2cor3(cov)\n    ...:     %timeit cov2cor4(cov)\n    ...:     print()\n<span class=\"number\">10</span>\n<span class=\"number\">100000</span> loops, best of <span class=\"number\">3</span>: <span class=\"number\">15.5</span> \u00b5s per loop\n<span class=\"number\">100000</span> loops, best of <span class=\"number\">3</span>: <span class=\"number\">16.5</span> \u00b5s per loop\n\n<span class=\"number\">100</span>\n<span class=\"number\">10000</span> loops, best of <span class=\"number\">3</span>: <span class=\"number\">50.1</span> \u00b5s per loop\n<span class=\"number\">10000</span> loops, best of <span class=\"number\">3</span>: <span class=\"number\">50</span> \u00b5s per loop\n\n<span class=\"number\">1000</span>\n<span class=\"number\">100</span> loops, best of <span class=\"number\">3</span>: <span class=\"number\">5.79</span> ms per loop\n<span class=\"number\">100</span> loops, best of <span class=\"number\">3</span>: <span class=\"number\">4.58</span> ms per loop</code></pre>",
  "id": "58d45b9858ad4eb02847268d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-23T23:34:48.788Z",
  "text": "I can't resist a challenge so I eked out a little bit more performance using the `np.outer` trick, but only for larger matrices (which may not be seen in practice?)\n```python\nIn [35]: def cov2cor4(cov):\n    ...:     inv_stds = np.sqrt(cov.diagonal())\n    ...:     inv_stds[:] = 1 / inv_stds\n    ...:     corr = np.outer(inv_stds, inv_stds)\n    ...:     corr *= cov\n    ...:     return corr\n\nIn [36]: for n in [10, 100, 1000]:\n    ...:     print(n)\n    ...:     cov = make_cov(n)\n    ...:     %timeit cov2cor3(cov)\n    ...:     %timeit cov2cor4(cov)\n    ...:     print()\n10\n100000 loops, best of 3: 15.5 \u00b5s per loop\n100000 loops, best of 3: 16.5 \u00b5s per loop\n\n100\n10000 loops, best of 3: 50.1 \u00b5s per loop\n10000 loops, best of 3: 50 \u00b5s per loop\n\n1000\n100 loops, best of 3: 5.79 ms per loop\n100 loops, best of 3: 4.58 ms per loop\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/dhirschfeld",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/881019?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/881019?v=4&s=60",
   "displayName": "Dave Hirschfeld",
   "gv": "4",
   "id": "533187555e986b0712effbbd",
   "url": "/dhirschfeld",
   "username": "dhirschfeld",
   "v": 26
  },
  "html": "It&#39;s an interesting optimisation problem as it highlights the necessity to avoid allocations and also the benefits of vectorization (but only when the arrays are big enough)",
  "id": "58d45c2b5917e26076c929be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-03-23T23:37:15.327Z",
  "text": "It's an interesting optimisation problem as it highlights the necessity to avoid allocations and also the benefits of vectorization (but only when the arrays are big enough)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aseyboldt",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1882397?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1882397?v=4&s=60",
   "displayName": "Adrian Seyboldt",
   "gv": "4",
   "id": "52a510b4ed5ab0b3bf04ffe2",
   "url": "/aseyboldt",
   "username": "aseyboldt",
   "v": 6
  },
  "html": "Nice idea to use outer for the allocation. :smile: ",
  "id": "58d45cc6f7f7d481044c354b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2017-03-23T23:39:50.460Z",
  "text": "Nice idea to use outer for the allocation. :smile: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aseyboldt",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1882397?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1882397?v=4&s=60",
   "displayName": "Adrian Seyboldt",
   "gv": "4",
   "id": "52a510b4ed5ab0b3bf04ffe2",
   "url": "/aseyboldt",
   "username": "aseyboldt",
   "v": 6
  },
  "html": "Challenge accepted. If the matrix gets larger, it seems recomputing values gets faster than suffering though cache misses. Not sure where the cutoff should be. I experimented a bit with blocked access, but did not have much luck with it.<pre><code class=\"python\"><span class=\"decorator\">@numba.jit(nopython=True)</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cov2cor5</span><span class=\"params\">(cov)</span>:</span>\n    diag = np.sqrt(np.diag(cov))\n    inv_stds = <span class=\"number\">1.</span> / diag\n    cor = np.empty_like(cov)\n    n, m = cov.shape\n    <span class=\"keyword\">assert</span> n == m\n    <span class=\"keyword\">if</span> n &lt; <span class=\"number\">200</span>:\n        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(n):\n            <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(i, m):\n                val = cov[i, j] * inv_stds[i] * inv_stds[j]\n                cor[i, j] = val\n                cor[j, i] = val\n    <span class=\"keyword\">else</span>:\n        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(n):\n            <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(m):\n                cor[i, j] = cov[i, j] * inv_stds[i] * inv_stds[j]\n    <span class=\"keyword\">return</span> cor</code></pre><pre><code><span class=\"number\">10</span>\n<span class=\"number\">100000</span> loops, best <span class=\"keyword\">of</span> <span class=\"number\">3</span>: <span class=\"number\">10.9</span> \u00b5s per <span class=\"keyword\">loop</span>\n<span class=\"number\">1000000</span> loops, best <span class=\"keyword\">of</span> <span class=\"number\">3</span>: <span class=\"number\">1.22</span> \u00b5s per <span class=\"keyword\">loop</span>\n\n<span class=\"number\">100</span>\n<span class=\"number\">10000</span> loops, best <span class=\"keyword\">of</span> <span class=\"number\">3</span>: <span class=\"number\">29.9</span> \u00b5s per <span class=\"keyword\">loop</span>\n<span class=\"number\">100000</span> loops, best <span class=\"keyword\">of</span> <span class=\"number\">3</span>: <span class=\"number\">12.8</span> \u00b5s per <span class=\"keyword\">loop</span>\n\n<span class=\"number\">1000</span>\n<span class=\"number\">100</span> loops, best <span class=\"keyword\">of</span> <span class=\"number\">3</span>: <span class=\"number\">2.69</span> ms per <span class=\"keyword\">loop</span>\n<span class=\"number\">1000</span> loops, best <span class=\"keyword\">of</span> <span class=\"number\">3</span>: <span class=\"number\">1.28</span> ms per <span class=\"keyword\">loop</span>\n\n<span class=\"number\">5000</span>\n<span class=\"number\">10</span> loops, best <span class=\"keyword\">of</span> <span class=\"number\">3</span>: <span class=\"number\">78</span> ms per <span class=\"keyword\">loop</span>\n<span class=\"number\">10</span> loops, best <span class=\"keyword\">of</span> <span class=\"number\">3</span>: <span class=\"number\">37.4</span> ms per <span class=\"keyword\">loop</span></code></pre>",
  "id": "58d4674b8fa16339540df0a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2017-03-24T00:24:43.236Z",
  "text": "Challenge accepted. If the matrix gets larger, it seems recomputing values gets faster than suffering though cache misses. Not sure where the cutoff should be. I experimented a bit with blocked access, but did not have much luck with it.\n```python\n@numba.jit(nopython=True)\ndef cov2cor5(cov):\n    diag = np.sqrt(np.diag(cov))\n    inv_stds = 1. / diag\n    cor = np.empty_like(cov)\n    n, m = cov.shape\n    assert n == m\n    if n < 200:\n        for i in range(n):\n            for j in range(i, m):\n                val = cov[i, j] * inv_stds[i] * inv_stds[j]\n                cor[i, j] = val\n                cor[j, i] = val\n    else:\n        for i in range(n):\n            for j in range(m):\n                cor[i, j] = cov[i, j] * inv_stds[i] * inv_stds[j]\n    return cor\n```\n\n```\n10\n100000 loops, best of 3: 10.9 \u00b5s per loop\n1000000 loops, best of 3: 1.22 \u00b5s per loop\n\n100\n10000 loops, best of 3: 29.9 \u00b5s per loop\n100000 loops, best of 3: 12.8 \u00b5s per loop\n\n1000\n100 loops, best of 3: 2.69 ms per loop\n1000 loops, best of 3: 1.28 ms per loop\n\n5000\n10 loops, best of 3: 78 ms per loop\n10 loops, best of 3: 37.4 ms per loop\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/souravsingh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4314261?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4314261?v=4&s=60",
   "displayName": "Sourav Singh",
   "gv": "4",
   "id": "5506544215522ed4b3dd4fec",
   "url": "/souravsingh",
   "username": "souravsingh",
   "v": 54
  },
  "html": "Hello <span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> Is it possible to work on the non-parameteric Bayesian Method as a side-project?",
  "id": "58d95b128fcce56b20a30985",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-27T18:33:54.852Z",
  "text": "Hello @twiecki Is it possible to work on the non-parameteric Bayesian Method as a side-project?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/souravsingh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4314261?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4314261?v=4&s=60",
   "displayName": "Sourav Singh",
   "gv": "4",
   "id": "5506544215522ed4b3dd4fec",
   "url": "/souravsingh",
   "username": "souravsingh",
   "v": 54
  },
  "html": "Since I am seeing my chances for selection in GSoC under PyMC3 to be very bleak",
  "id": "58d95b4a08c00c092a1f8537",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-27T18:34:50.721Z",
  "text": "Since I am seeing my chances for selection in GSoC under PyMC3 to be very bleak",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"souravsingh\" class=\"mention\">@souravsingh</span> absolutely",
  "id": "58d95cf0b52518ed4db23645",
  "issues": [],
  "mentions": [
   {
    "screenName": "souravsingh",
    "userId": "5506544215522ed4b3dd4fec",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-27T18:41:52.322Z",
  "text": "@souravsingh absolutely",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "Do observations automatically force a shape parameter in <code>pm.Deterministic()</code>s? ",
  "id": "58da69aef22385553de52718",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-28T13:48:30.279Z",
  "text": "Do observations automatically force a shape parameter in `pm.Deterministic()`s? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "for example: ",
  "id": "58da69b24cb8d09173356de0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-28T13:48:34.805Z",
  "text": "for example: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-03-28T13:56:55.829Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "<pre><code class=\"python\"><span class=\"keyword\">with</span> pm.Model() <span class=\"keyword\">as</span> model:\n\n<span class=\"comment\"># Weld Parameters</span>\n    <span class=\"comment\">#length \"l\"</span>\n    mu_l = pm.Uniform(<span class=\"string\">'mu_l'</span>, lower=<span class=\"number\">8.3</span>*<span class=\"number\">1e-3</span>, upper=<span class=\"number\">8.6</span>*<span class=\"number\">1e-3</span>)\n    sd_l = pm.Uniform(<span class=\"string\">'sd_l'</span>, lower=<span class=\"number\">0.2</span>*<span class=\"number\">1e-3</span>, upper=<span class=\"number\">0.7</span>*<span class=\"number\">1e-3</span>)\n    l = pm.Normal(<span class=\"string\">'l'</span>, mu=mu_l, sd=sd_l, observed=synth[<span class=\"string\">'l'</span>].values.reshape((-<span class=\"number\">1</span>,<span class=\"number\">1</span>)))\n\n    <span class=\"comment\">#height \"h\"</span>\n    mu_h = pm.Uniform(<span class=\"string\">'mu_h'</span>, <span class=\"number\">2.5</span>*<span class=\"number\">1e-3</span>, <span class=\"number\">2.8</span>*<span class=\"number\">1e-3</span>)\n    sd_h = pm.Uniform(<span class=\"string\">'sd_h'</span>, <span class=\"number\">0.3</span>*<span class=\"number\">1e-3</span>, <span class=\"number\">0.6</span>*<span class=\"number\">1e-3</span>)\n    h = pm.Normal(<span class=\"string\">'h'</span>, mu_h, sd=sd_h, observed=synth[<span class=\"string\">'h'</span>].values.reshape((-<span class=\"number\">1</span>,<span class=\"number\">1</span>)))\n\n    <span class=\"comment\">#escape \"e\"  # ???</span>\n    mu_e = pm.Uniform(<span class=\"string\">'mu_e'</span>, <span class=\"number\">10.</span>*<span class=\"number\">1e-3</span>, <span class=\"number\">13.</span>*<span class=\"number\">1e-3</span>)\n    sd_e = pm.Uniform(<span class=\"string\">'sd_e'</span>, <span class=\"number\">0.8</span>*<span class=\"number\">1e-3</span>, <span class=\"number\">1.3</span>*<span class=\"number\">1e-3</span>)\n    e = pm.Normal(<span class=\"string\">'e'</span>, mu_e, sd=sd_e, observed=synth[<span class=\"string\">'e'</span>].values.reshape((-<span class=\"number\">1</span>,<span class=\"number\">1</span>)))\n\n    len_w = pm.Normal(<span class=\"string\">'L'</span>, <span class=\"number\">500.</span>*<span class=\"number\">1e-3</span>, sd=<span class=\"number\">10.</span>*<span class=\"number\">1e-3</span>)  <span class=\"comment\"># Length of Weld \"L\"</span>\n    g = pm.Normal(<span class=\"string\">'g'</span>, <span class=\"number\">2.</span>*<span class=\"number\">1e-3</span>, sd=<span class=\"number\">0.1</span>*<span class=\"number\">1e-3</span>)  <span class=\"comment\"># girth \"g\" ?</span>\n    t = pm.Normal(<span class=\"string\">'t'</span>, <span class=\"number\">15.</span>*<span class=\"number\">1e-3</span>, sd=<span class=\"number\">0.5</span>*<span class=\"number\">1e-3</span>)  <span class=\"comment\"># plate thickness \"t\"</span>\n\n    vol = len_w*((<span class=\"number\">3.</span>/<span class=\"number\">4.</span>)*l*h + g*t + (l-g)*(t-e)/<span class=\"number\">2.</span>) <span class=\"comment\"># Volume, mm^3</span>\n    <span class=\"comment\">#no mult. by len_w ? </span>\n\n<span class=\"comment\"># Welding Process</span>\n    rho = pm.Normal(<span class=\"string\">'Density'</span>, <span class=\"number\">8238.</span>, sd=<span class=\"number\">10.</span>)  <span class=\"comment\"># kg/m^3</span>\n    heat = pm.Normal(<span class=\"string\">'H'</span>, <span class=\"number\">270</span>*<span class=\"number\">1e3</span>, sd=<span class=\"number\">3</span>*<span class=\"number\">1e3</span>)  <span class=\"comment\"># latent heat </span>\n    h_cap = pm.Normal(<span class=\"string\">'C_p'</span>, <span class=\"number\">500.</span>, sd=<span class=\"number\">5.</span>)  <span class=\"comment\"># heat capacity</span>\n    t_i = pm.Normal(<span class=\"string\">'T_i'</span>, <span class=\"number\">303.</span>, sd=<span class=\"number\">0.3</span>)  <span class=\"comment\"># initial temp</span>\n    t_f = pm.Normal(<span class=\"string\">'T_f'</span>, <span class=\"number\">1628.</span>, sd=<span class=\"number\">10.</span>)  <span class=\"comment\"># final temp</span>\n\n\n    nrg = pm.Deterministic(<span class=\"string\">'Energy'</span>, rho*(h_cap*(t_f-t_i) + heat)*vol)</code></pre>",
  "id": "58da69da8fcce56b20a76a76",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-28T13:49:14.328Z",
  "text": "```python\nwith pm.Model() as model:\n\n# Weld Parameters\n    #length \"l\"\n    mu_l = pm.Uniform('mu_l', lower=8.3*1e-3, upper=8.6*1e-3)\n    sd_l = pm.Uniform('sd_l', lower=0.2*1e-3, upper=0.7*1e-3)\n    l = pm.Normal('l', mu=mu_l, sd=sd_l, observed=synth['l'].values.reshape((-1,1)))\n    \n    #height \"h\"\n    mu_h = pm.Uniform('mu_h', 2.5*1e-3, 2.8*1e-3)\n    sd_h = pm.Uniform('sd_h', 0.3*1e-3, 0.6*1e-3)\n    h = pm.Normal('h', mu_h, sd=sd_h, observed=synth['h'].values.reshape((-1,1)))\n    \n    #escape \"e\"  # ???\n    mu_e = pm.Uniform('mu_e', 10.*1e-3, 13.*1e-3)\n    sd_e = pm.Uniform('sd_e', 0.8*1e-3, 1.3*1e-3)\n    e = pm.Normal('e', mu_e, sd=sd_e, observed=synth['e'].values.reshape((-1,1)))\n    \n    len_w = pm.Normal('L', 500.*1e-3, sd=10.*1e-3)  # Length of Weld \"L\"\n    g = pm.Normal('g', 2.*1e-3, sd=0.1*1e-3)  # girth \"g\" ?\n    t = pm.Normal('t', 15.*1e-3, sd=0.5*1e-3)  # plate thickness \"t\"\n\n    vol = len_w*((3./4.)*l*h + g*t + (l-g)*(t-e)/2.) # Volume, mm^3\n    #no mult. by len_w ? \n\n# Welding Process\n    rho = pm.Normal('Density', 8238., sd=10.)  # kg/m^3\n    heat = pm.Normal('H', 270*1e3, sd=3*1e3)  # latent heat \n    h_cap = pm.Normal('C_p', 500., sd=5.)  # heat capacity\n    t_i = pm.Normal('T_i', 303., sd=0.3)  # initial temp\n    t_f = pm.Normal('T_f', 1628., sd=10.)  # final temp\n    \n\n    nrg = pm.Deterministic('Energy', rho*(h_cap*(t_f-t_i) + heat)*vol)\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "This is a bayes net for a welding process, where the weld &quot;shape&quot; is observed after the fact, and these dimensions are supposed to update the posterior of the energy consumption after the fact. ",
  "id": "58da6a26f22385553de52956",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-28T13:50:30.781Z",
  "text": "This is a bayes net for a welding process, where the weld \"shape\" is observed after the fact, and these dimensions are supposed to update the posterior of the energy consumption after the fact. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "however, unlike when I use an actual RV for ",
  "id": "58da6a3c08c00c092a23dfd4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-28T13:50:52.813Z",
  "text": "however, unlike when I use an actual RV for ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "&#39;Energy&#39; and set the internal equation as the location parameter (e.g. mu), the deterministic splits during sampling into as many traces as there are observation instances",
  "id": "58da6a76b52518ed4db6a4ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-28T13:51:50.711Z",
  "text": "'Energy' and set the internal equation as the location parameter (e.g. mu), the deterministic splits during sampling into as many traces as there are observation instances",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "So, doing <code>pm.traceplot()</code>, for example, after sampling shows <code>Energy_1, Energy_2....Energy_n</code> where <code>n</code> is the length of those observed vectors. I even tried reshaping to 2D as seen above, just to make sure. The only thing I got to work was calling <code>theano.tensor.mean()</code> around the deterministic function definition, but should this be necessary? Shouldn&#39;t each be an instance of a deterministic calculation, not an entire sampling chain?",
  "id": "58da6b0d8fcce56b20a7719c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-28T13:54:21.969Z",
  "text": "So, doing `pm.traceplot()`, for example, after sampling shows `Energy_1, Energy_2....Energy_n` where `n` is the length of those observed vectors. I even tried reshaping to 2D as seen above, just to make sure. The only thing I got to work was calling `theano.tensor.mean()` around the deterministic function definition, but should this be necessary? Shouldn't each be an instance of a deterministic calculation, not an entire sampling chain?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "In addition, doing things in a more &quot;bayes&quot; way by modeling the likelihood like ",
  "id": "58da888408c00c092a2491f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-28T16:00:04.730Z",
  "text": "In addition, doing things in a more \"bayes\" way by modeling the likelihood like ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "<pre><code class=\"python\">eps = pm.HalfCauchy(<span class=\"string\">'eps'</span>, <span class=\"number\">5</span>)\n<span class=\"comment\">#     nrg = pm.Deterministic('Energy', rho*(h_cap*(t_f-t_i) + heat)*vol)</span>\nnrg = pm.Normal(<span class=\"string\">'Energy'</span>, mu=rho*(h_cap*(t_f-t_i) + heat)*vol, sd=eps)</code></pre>gives the TypeError<pre><code><span class=\"attribute\">TypeError</span>: <span class=\"string\">For compute_test_value, one input test value does not have the requested type.</span>\n\n<span class=\"applescript\">The <span class=\"keyword\">error</span> when converting <span class=\"keyword\">the</span> test value <span class=\"keyword\">to</span> <span class=\"keyword\">that</span> variable type:\nWrong <span class=\"type\">number</span> <span class=\"keyword\">of</span> dimensions: expected <span class=\"number\">0</span>, got <span class=\"number\">2</span> <span class=\"keyword\">with</span> shape (<span class=\"number\">1000</span>L, <span class=\"number\">1</span>L).</span></code></pre>",
  "id": "58da88d98e4b63533d715a63",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-28T16:01:29.178Z",
  "text": "```python\neps = pm.HalfCauchy('eps', 5)\n#     nrg = pm.Deterministic('Energy', rho*(h_cap*(t_f-t_i) + heat)*vol)\nnrg = pm.Normal('Energy', mu=rho*(h_cap*(t_f-t_i) + heat)*vol, sd=eps)\n```\ngives the TypeError\n```\nTypeError: For compute_test_value, one input test value does not have the requested type.\n\nThe error when converting the test value to that variable type:\nWrong number of dimensions: expected 0, got 2 with shape (1000L, 1L).\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "Is there a way to keep the ADVI Initializing with missing value in the observed? ",
  "id": "58db9a85ad849bcf422e4f2b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-29T11:29:09.889Z",
  "text": "Is there a way to keep the ADVI Initializing with missing value in the observed? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"junpenglao\" class=\"mention\">@junpenglao</span> to my knowledge there&#39;s not a very elegant way to do it, but a possible approach you can try is to make the observations a theano shared variable, remove the missing observations for the initialization and add them back for sampling",
  "id": "58dba98a408f90be6669dc61",
  "issues": [],
  "mentions": [
   {
    "screenName": "junpenglao",
    "userId": "56e8df4685d51f252ab907f1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-29T12:33:14.400Z",
  "text": "@junpenglao to my knowledge there's not a very elegant way to do it, but a possible approach you can try is to make the observations a theano shared variable, remove the missing observations for the initialization and add them back for sampling",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "thanks <span data-link-type=\"mention\" data-screen-name=\"AustinRochford_twitter\" class=\"mention\">@AustinRochford_twitter</span> , is there a code snippet somewhere I can steal? ",
  "id": "58dbaaf408c00c092a297172",
  "issues": [],
  "mentions": [
   {
    "screenName": "AustinRochford_twitter",
    "userId": "58166bbcd73408ce4f31e2f7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-29T12:39:16.322Z",
  "text": "thanks @AustinRochford_twitter , is there a code snippet somewhere I can steal? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "i don\u2019t have one unfortunately",
  "id": "58dbab058fcce56b20acca24",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-29T12:39:33.359Z",
  "text": "i don\u2019t have one unfortunately",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "np - thanks for the advise",
  "id": "58dbab1df22385553deaa2a0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-29T12:39:57.683Z",
  "text": "np - thanks for the advise",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "hm, but there is no statistical reason we couldn&#39;t support missing values with ADVI, right?",
  "id": "58dbab1f8fcce56b20acca4c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-29T12:39:59.657Z",
  "text": "hm, but there is no statistical reason we couldn't support missing values with ADVI, right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "seems like a bug almost",
  "id": "58dbab248bb56c2d11550cc4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-29T12:40:04.818Z",
  "text": "seems like a bug almost",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-03-29T12:45:06.808Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "My observed RV is a binomial, so ADVI can not sample for the masked value (i got <code>ValueError: Model can not include discrete RVs for ADVI.</code>)",
  "id": "58dbac44b402a53211c469c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-29T12:44:52.410Z",
  "text": "My observed RV is a binomial, so ADVI can not sample for the masked value (i got `ValueError: Model can not include discrete RVs for ADVI.`)",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "For it to work the sampling for the masked value need to be done separately i guess",
  "id": "58dbac7f08c00c092a2977f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-03-29T12:45:51.366Z",
  "text": "For it to work the sampling for the masked value need to be done separately i guess",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "What is the best way to have a stochastic node in the model but not update while sampling? I think I saw it somewhere but i cant find it anymore... ",
  "id": "58dcca79ad849bcf42335b35",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-03-30T09:06:01.991Z",
  "text": "What is the best way to have a stochastic node in the model but not update while sampling? I think I saw it somewhere but i cant find it anymore... ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "something like <code>tau = pm.Uniform(&#39;tau&#39;, lower=0, upper=1, update=False)</code>",
  "id": "58dccaa008c00c092a2e390c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-03-30T09:06:40.845Z",
  "text": "something like `tau = pm.Uniform('tau', lower=0, upper=1, update=False)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "we used to have a constant step-method but removed it. I think we should re-add it, though",
  "id": "58dcdb8908c00c092a2e8056",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-03-30T10:18:49.436Z",
  "text": "we used to have a constant step-method but removed it. I think we should re-add it, though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<a href=\"https://github.com/pymc-devs/pymc3/pull/1495/files#diff-c3a37ae48fe27252dc6e4893129cc8b2L167\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/pull/1495/files#diff-c3a37ae48fe27252dc6e4893129cc8b2L167</a>",
  "id": "58dcdbd208c00c092a2e8132",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-03-30T10:20:02.679Z",
  "text": "https://github.com/pymc-devs/pymc3/pull/1495/files#diff-c3a37ae48fe27252dc6e4893129cc8b2L167",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/pull/1495/files#diff-c3a37ae48fe27252dc6e4893129cc8b2L167"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "a PR re-adding that would be much appreciated",
  "id": "58dcdbddad849bcf4233a9a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-30T10:20:13.528Z",
  "text": "a PR re-adding that would be much appreciated",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "What&#39;s the benefit to having a constant node? Why not just use data (which are just constants).",
  "id": "58dcf92e8fcce56b20b23a57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-30T12:25:18.781Z",
  "text": "What's the benefit to having a constant node? Why not just use data (which are just constants).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"junpenglao\" class=\"mention\">@junpenglao</span> if you have missing discrete data you are stuck, in terms of using gradient-based methods. The only trick that sometimes works (when data are missing completely at random) is to use a <code>RandomStream</code> and just sample binomials.",
  "id": "58dcfa2d8e4b63533d7bb276",
  "issues": [],
  "mentions": [
   {
    "screenName": "junpenglao",
    "userId": "56e8df4685d51f252ab907f1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-30T12:29:33.336Z",
  "text": "@junpenglao if you have missing discrete data you are stuck, in terms of using gradient-based methods. The only trick that sometimes works (when data are missing completely at random) is to use a `RandomStream` and just sample binomials.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-03-30T12:35:15.844Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<p>thanks for the reply -  actually i didnt express clearly, i am trying to reparameterized a<br><code>z=pm.Bernoulli(&#39;z&#39;, p=p)</code><br>into something ADVI can work with, so I am trying to do </p><pre><code>z_ = pm.<span class=\"function\"><span class=\"title\">Uniform</span><span class=\"params\">(<span class=\"string\">'z_'</span>, lower=<span class=\"number\">0</span>, upper=<span class=\"number\">1</span>)</span></span>\nz = pm.<span class=\"function\"><span class=\"title\">Deterministic</span><span class=\"params\">(<span class=\"string\">'z'</span>, tt.lt(z_, p)</span></span>)</code></pre><p>with <code>z_</code> not converging to any particular value. Doing <code>z_=np.random.rand()</code> seems to work but the result is a bit weird.</p>",
  "id": "58dcfb4a8fcce56b20b244b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-30T12:34:18.062Z",
  "text": "thanks for the reply -  actually i didnt express clearly, i am trying to reparameterized a \n`z=pm.Bernoulli('z', p=p)` \ninto something ADVI can work with, so I am trying to do \n```\nz_ = pm.Uniform('z_', lower=0, upper=1)\nz = pm.Deterministic('z', tt.lt(z_, p))\n``` \nwith `z_` not converging to any particular value. Doing `z_=np.random.rand()` seems to work but the result is a bit weird.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "So I was wondering if there is a canonical way to do it",
  "id": "58dcfcc1ad849bcf4234397b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-30T12:40:33.873Z",
  "text": "So I was wondering if there is a canonical way to do it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "I have used the following to do trivial multinomial draws (splitting an annual number into monthly):<pre><code>    rng = tt<span class=\"class\">.shared_randomstreams</span><span class=\"class\">.RandomStreams</span>()\n    monthly_births = rng.<span class=\"function\"><span class=\"title\">multinomial</span><span class=\"params\">(n=births, pvals=p_birth_month.values, size=(len(births)</span></span>,))</code></pre>",
  "id": "58dd0beb408f90be666fcd28",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-30T13:45:15.702Z",
  "text": "I have used the following to do trivial multinomial draws (splitting an annual number into monthly):\n```\n    rng = tt.shared_randomstreams.RandomStreams()\n    monthly_births = rng.multinomial(n=births, pvals=p_birth_month.values, size=(len(births),))\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "thanks Chris, how do you then use <code>monthly_births</code>? do you have the full code i could have a look?",
  "id": "58dd0d98b402a53211ca68dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-30T13:52:24.887Z",
  "text": "thanks Chris, how do you then use `monthly_births`? do you have the full code i could have a look?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "So you want to sample a value at each iteration (in order to be able to get a new value for z), you just don&#39;t want to save that sampled value?",
  "id": "58dd1874b402a53211ca9da4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-03-30T14:38:44.676Z",
  "text": "So you want to sample a value at each iteration (in order to be able to get a new value for z), you just don't want to save that sampled value?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Sorry, ignore that. Posted to the wrong place. ",
  "id": "58dd190b8fcce56b20b2d307",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-30T14:41:15.709Z",
  "text": "Sorry, ignore that. Posted to the wrong place. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-03-31T09:13:37.278Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> I can&#39;t get it to work with your solution, but for me the one option works the best in my case is:<pre><code class=\"python\">z_ = pm.Uniform.dist(lower=<span class=\"number\">0</span>, upper=<span class=\"number\">1</span>)\nz = pm.Deterministic(<span class=\"string\">'z'</span>, tt.lt(z_.random(), p))</code></pre>",
  "id": "58de1db7ad849bcf42391056",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 24,
  "sent": "2017-03-31T09:13:27.781Z",
  "text": "@fonnesbeck I can't get it to work with your solution, but for me the one option works the best in my case is:\n```python\nz_ = pm.Uniform.dist(lower=0, upper=1)\nz = pm.Deterministic('z', tt.lt(z_.random(), p))\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "<code>z_.random()</code> is not symbolic and executed only once. It it what you expect?",
  "id": "58de2107b402a53211cee4b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-03-31T09:27:35.425Z",
  "text": "`z_.random()` is not symbolic and executed only once. It it what you expect?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-03-31T10:04:09.483Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"ferrine\" class=\"mention\">@ferrine</span> really! ok it must be that one time it return good fitting... if i do instead </p><pre><code>z_ = np<span class=\"class\">.random</span><span class=\"class\">.rand</span>()\nz = pm.<span class=\"function\"><span class=\"title\">Deterministic</span><span class=\"params\">(<span class=\"string\">'z'</span>, tt.lt(z_, p)</span></span>)</code></pre><p>it would not executed at each sample as well right?</p>",
  "id": "58de29548bb56c2d115fa3a4",
  "issues": [],
  "mentions": [
   {
    "screenName": "ferrine",
    "userId": "581e3155d73408ce4f33e027",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 25,
  "sent": "2017-03-31T10:03:00.297Z",
  "text": "@ferrine really! ok it must be that one time it return good fitting... if i do instead \n```\nz_ = np.random.rand()\nz = pm.Deterministic('z', tt.lt(z_, p))\n```\nit would not executed at each sample as well right?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2017-03-31T10:08:22.831Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "If you want random generator to be executed each time while sampling you should consider using  <code>pm.theanof.tt_rng().uniform(size=size)</code> (it is a shortcut to theano MRG_RandomStreams) that pymc3 package level random generator",
  "id": "58de2a72408f90be6674885e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-03-31T10:07:46.225Z",
  "text": "If you want random generator to be executed each time while sampling you should consider using  `pm.theanof.tt_rng().uniform(size=size)` (it is a shortcut to theano MRG_RandomStreams) that pymc3 package level random generator",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ferrine\" class=\"mention\">@ferrine</span> ok i will try that, thanks!",
  "id": "58de2b057ea420cc42239358",
  "issues": [],
  "mentions": [
   {
    "screenName": "ferrine",
    "userId": "581e3155d73408ce4f33e027",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-31T10:10:13.451Z",
  "text": "@ferrine ok i will try that, thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ferrine\" class=\"mention\">@ferrine</span> using <code>pm.theanof.tt_rng().uniform(size=size)</code> works nicely. Thanks again!",
  "id": "58de4b51f22385553df5ce0f",
  "issues": [],
  "mentions": [
   {
    "screenName": "ferrine",
    "userId": "581e3155d73408ce4f33e027",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-31T12:28:01.811Z",
  "text": "@ferrine using `pm.theanof.tt_rng().uniform(size=size)` works nicely. Thanks again!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/vals",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/668803?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/668803?v=3&s=60",
   "displayName": "Valentine Svensson",
   "gv": "3",
   "id": "56fbcc0f85d51f252abb999b",
   "url": "/vals",
   "username": "vals",
   "v": 10
  },
  "html": "Hey, just noticed PyMC3 has mini-batch ADVI! However, the documentation doesn&#39;t really show an increase in speed? Is there a plot of inference time vs data size comparing ADVI and mini-batch ADVI somewhere?",
  "id": "58de5aa6408f90be667566c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-31T13:33:26.426Z",
  "text": "Hey, just noticed PyMC3 has mini-batch ADVI! However, the documentation doesn't really show an increase in speed? Is there a plot of inference time vs data size comparing ADVI and mini-batch ADVI somewhere?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"vals\" class=\"mention\">@vals</span> Not yet, but we&#39;d welcome such a comparison. You can have a peek at some of the examples in the notebooks directory for usage, but there are not formal benchmark comparisons right now.",
  "id": "58de5ec5f22385553df62a5f",
  "issues": [],
  "mentions": [
   {
    "screenName": "vals",
    "userId": "56fbcc0f85d51f252abb999b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-31T13:51:01.820Z",
  "text": "@vals Not yet, but we'd welcome such a comparison. You can have a peek at some of the examples in the notebooks directory for usage, but there are not formal benchmark comparisons right now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/yanurai",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/24410820?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/24410820?v=3&s=60",
   "displayName": "yanurai",
   "gv": "3",
   "id": "5846aea7d73408ce4f3b1964",
   "url": "/yanurai",
   "username": "yanurai",
   "v": 15
  },
  "html": "I&#39;m employing Bayesian inference to evaluate a cognitive model for my thesis. For the deterministic version of the model everything works well. But I would like to approximate some quantities the deterministic model is based on. The approximation includes sampling itself and is probabilistic. The structure of the model is the same as the deterministic one, but the traceplots are really looking awkward in the sense that there is not much updating and no proper burn-in. Are there any common problems known to evaluating probabilistic models with PyMC?",
  "id": "58de61384cb8d0917346421f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-31T14:01:28.900Z",
  "text": "I'm employing Bayesian inference to evaluate a cognitive model for my thesis. For the deterministic version of the model everything works well. But I would like to approximate some quantities the deterministic model is based on. The approximation includes sampling itself and is probabilistic. The structure of the model is the same as the deterministic one, but the traceplots are really looking awkward in the sense that there is not much updating and no proper burn-in. Are there any common problems known to evaluating probabilistic models with PyMC?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aseyboldt",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1882397?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1882397?v=4&s=60",
   "displayName": "Adrian Seyboldt",
   "gv": "4",
   "id": "52a510b4ed5ab0b3bf04ffe2",
   "url": "/aseyboldt",
   "username": "aseyboldt",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"yanurai\" class=\"mention\">@yanurai</span> Not sure I understand correctly. So you doing some deterministic computation, and you are trying to estimate parameters this computation depends on?",
  "id": "58de6380b402a53211d021f4",
  "issues": [],
  "mentions": [
   {
    "screenName": "yanurai",
    "userId": "5846aea7d73408ce4f3b1964",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-31T14:11:12.111Z",
  "text": "@yanurai Not sure I understand correctly. So you doing some deterministic computation, and you are trying to estimate parameters this computation depends on?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aseyboldt",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1882397?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1882397?v=4&s=60",
   "displayName": "Adrian Seyboldt",
   "gv": "4",
   "id": "52a510b4ed5ab0b3bf04ffe2",
   "url": "/aseyboldt",
   "username": "aseyboldt",
   "v": 6
  },
  "html": "What do you mean by &quot;the approximation includes sampling itself&quot;?",
  "id": "58de63c37ea420cc42248ea0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-31T14:12:19.082Z",
  "text": "What do you mean by \"the approximation includes sampling itself\"?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/vals",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/668803?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/668803?v=3&s=60",
   "displayName": "Valentine Svensson",
   "gv": "3",
   "id": "56fbcc0f85d51f252abb999b",
   "url": "/vals",
   "username": "vals",
   "v": 10
  },
  "html": "<a href=\"https://files.gitter.im/pymc-devs/pymc/4hRM/blob\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/pymc-devs/pymc/4hRM/thumb/blob.png\" alt=\"blob\" rel=\"nofollow\"></a>",
  "id": "58de80f08e4b63533d826882",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-31T16:16:48.375Z",
  "text": "[![blob](https://files.gitter.im/pymc-devs/pymc/4hRM/thumb/blob.png)](https://files.gitter.im/pymc-devs/pymc/4hRM/blob)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/4hRM/thumb/blob.png"
   },
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/4hRM/blob"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/vals",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/668803?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/668803?v=3&s=60",
   "displayName": "Valentine Svensson",
   "gv": "3",
   "id": "56fbcc0f85d51f252abb999b",
   "url": "/vals",
   "username": "vals",
   "v": 10
  },
  "html": "Thanks Chris! I made this quick comparison. Maybe I used an overly simple problem, but results are quite nice.",
  "id": "58de8110b402a53211d0b812",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-03-31T16:17:20.078Z",
  "text": "Thanks Chris! I made this quick comparison. Maybe I used an overly simple problem, but results are quite nice.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/yanurai",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/24410820?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/24410820?v=3&s=60",
   "displayName": "yanurai",
   "gv": "3",
   "id": "5846aea7d73408ce4f3b1964",
   "url": "/yanurai",
   "username": "yanurai",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"aseyboldt\" class=\"mention\">@aseyboldt</span> Let variable v_i be elements of [0,1]. The deterministic model computes terms depending on v_i, e.g. a sum over v_i/(1-v_i). I would like to do the same operation with an estimation of v_i. The estimation is based on sampling: ^v_i = Binomial(n=32,p=0.6)/32 for an underlying v_i=0.6. I have behavioral data from human subjects and would like to infer which n does explain the data best.",
  "id": "58de9c8a08c00c092a3653e4",
  "issues": [],
  "mentions": [
   {
    "screenName": "aseyboldt",
    "userId": "52a510b4ed5ab0b3bf04ffe2",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-31T18:14:34.449Z",
  "text": "@aseyboldt Let variable v_i be elements of [0,1]. The deterministic model computes terms depending on v_i, e.g. a sum over v_i/(1-v_i). I would like to do the same operation with an estimation of v_i. The estimation is based on sampling: ^v_i = Binomial(n=32,p=0.6)/32 for an underlying v_i=0.6. I have behavioral data from human subjects and would like to infer which n does explain the data best.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/yanurai",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/24410820?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/24410820?v=3&s=60",
   "displayName": "yanurai",
   "gv": "3",
   "id": "5846aea7d73408ce4f3b1964",
   "url": "/yanurai",
   "username": "yanurai",
   "v": 15
  },
  "html": "But the traces for n are not updated properly. In the extreme case n stays the same for over 10k samples after burn-in...",
  "id": "58de9d1808c00c092a365812",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-31T18:16:56.532Z",
  "text": "But the traces for n are not updated properly. In the extreme case n stays the same for over 10k samples after burn-in...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aseyboldt",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1882397?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1882397?v=4&s=60",
   "displayName": "Adrian Seyboldt",
   "gv": "4",
   "id": "52a510b4ed5ab0b3bf04ffe2",
   "url": "/aseyboldt",
   "username": "aseyboldt",
   "v": 6
  },
  "html": "Is n a discrete parameter? Could you maybe post a gist with some code I could look at, that would make it easier. I won&#39;t have time now, but I can have a look tomorrow.",
  "id": "58de9d77ad849bcf423b7ca2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-31T18:18:31.687Z",
  "text": "Is n a discrete parameter? Could you maybe post a gist with some code I could look at, that would make it easier. I won't have time now, but I can have a look tomorrow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/yanurai",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/24410820?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/24410820?v=3&s=60",
   "displayName": "yanurai",
   "gv": "3",
   "id": "5846aea7d73408ce4f3b1964",
   "url": "/yanurai",
   "username": "yanurai",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"aseyboldt\" class=\"mention\">@aseyboldt</span> I&#39;ll write you a private message. Thanks for your help!",
  "id": "58dfa2fe0e4137042ad1fbaa",
  "issues": [],
  "mentions": [
   {
    "screenName": "aseyboldt",
    "userId": "52a510b4ed5ab0b3bf04ffe2",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-01T12:54:22.371Z",
  "text": "@aseyboldt I'll write you a private message. Thanks for your help!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/u/ivan-bocharov",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/706421?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/706421?v=3&s=60",
   "displayName": "Ivan Bocharov",
   "id": "58c7b1b1d73408ce4f507bd3",
   "url": "/ivan-bocharov",
   "username": "ivan-bocharov"
  },
  "html": "<p>Hi all!</p><p>I&#39;m trying to fit a very corner-case model where the GP is unobserved with ADVI. It works well on small datasets (~2500 samples). Is there a way to scale the learning to a dataset at least one order of magnitude larger (let&#39;s say, 20000 observations)? Will the PyMC3 minibatch implementation work properly in that case? I have a concern since you have to explicitly specify a grid of points at which you want your GP to be evaluated and they won&#39;t change with a minibatch change (or is there a way to do so?).</p>",
  "id": "58e3a91b408f90be668952c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-04-04T14:09:30.999Z",
  "text": "Hi all!\n\nI'm trying to fit a very corner-case model where the GP is unobserved with ADVI. It works well on small datasets (~2500 samples). Is there a way to scale the learning to a dataset at least one order of magnitude larger (let's say, 20000 observations)? Will the PyMC3 minibatch implementation work properly in that case? I have a concern since you have to explicitly specify a grid of points at which you want your GP to be evaluated and they won't change with a minibatch change (or is there a way to do so?).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "You dont necessary need to to specify a grid for GP to evaluate - most kernel is only parameterize with a length scale.",
  "id": "58e3bc7a08c00c092a4992d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-04-04T15:32:10.099Z",
  "text": "You dont necessary need to to specify a grid for GP to evaluate - most kernel is only parameterize with a length scale.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-04-04T16:14:18.836Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/u/ivan-bocharov",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/706421?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/706421?v=3&s=60",
   "displayName": "Ivan Bocharov",
   "id": "58c7b1b1d73408ce4f507bd3",
   "url": "/ivan-bocharov",
   "username": "ivan-bocharov"
  },
  "html": "<p>Thank you for your reply.</p><p>Are you sure about that? The GP docs explicitly say that if the GP variable is unobservable <code>X</code> is a required argument:</p><p><a href=\"https://github.com/pymc-devs/pymc3/blob/master/pymc3/gp/gp.py#L25\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/blob/master/pymc3/gp/gp.py#L25</a></p>",
  "id": "58e3c5de0e4137042ae1df35",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-04-04T16:12:14.204Z",
  "text": "Thank you for your reply.\n\nAre you sure about that? The GP docs explicitly say that if the GP variable is unobservable `X` is a required argument:\n\nhttps://github.com/pymc-devs/pymc3/blob/master/pymc3/gp/gp.py#L25",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/blob/master/pymc3/gp/gp.py#L25"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "hmmm, i <a href=\"https://gist.github.com/junpenglao/9c850bc9fc11085f844e8c19b500c173\" rel=\"nofollow\" target=\"_blank\" class=\"link\">tried the mini batch</a> and it seems to works fine - not sure exactly what the &quot;grid of points&quot; here means but in theory if the selected minibatch X is more or less spread out it should be fine.",
  "id": "58e3e9694cb8d091735b2d4b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-04-04T18:43:53.005Z",
  "text": "hmmm, i [tried the mini batch](https://gist.github.com/junpenglao/9c850bc9fc11085f844e8c19b500c173) and it seems to works fine - not sure exactly what the \"grid of points\" here means but in theory if the selected minibatch X is more or less spread out it should be fine.",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/junpenglao/9c850bc9fc11085f844e8c19b500c173"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/martin-hahn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/23242456?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/23242456?v=3&s=60",
   "displayName": "martin-hahn",
   "gv": "3",
   "id": "58dff66ad73408ce4f5568ec",
   "url": "/martin-hahn",
   "username": "martin-hahn"
  },
  "html": "Hi, is advi minibatch fast enough to do a hierarchical poisson regression on about 7 Million rows of input data (around 1000 - 10000 parameters).  A rough estimate is enough (10minutes, 1 hour, 5hours, 1day). ",
  "id": "58e3f21f68bee3091f0da748",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-04-04T19:21:03.221Z",
  "text": "Hi, is advi minibatch fast enough to do a hierarchical poisson regression on about 7 Million rows of input data (around 1000 - 10000 parameters).  A rough estimate is enough (10minutes, 1 hour, 5hours, 1day). ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"martin-hahn\" class=\"mention\">@martin-hahn</span> did you tried run",
  "id": "58e3fbf84cb8d091735b89b4",
  "issues": [],
  "mentions": [
   {
    "screenName": "martin-hahn",
    "userId": "58dff66ad73408ce4f5568ec",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2017-04-04T20:03:04.265Z",
  "text": "@martin-hahn did you tried run",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Running minibatch advi on gpu?",
  "id": "58e3fc4e408f90be668afeba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-04-04T20:04:30.902Z",
  "text": "Running minibatch advi on gpu?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/martin-hahn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/23242456?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/23242456?v=3&s=60",
   "displayName": "martin-hahn",
   "gv": "3",
   "id": "58dff66ad73408ce4f5568ec",
   "url": "/martin-hahn",
   "username": "martin-hahn"
  },
  "html": "No, at the moment i just try to set up a model on a smaller scale. But if you guys already know that it will take hours, my motivation would go down a bit",
  "id": "58e3fc74f22385553d0bbf90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-04-04T20:05:08.127Z",
  "text": "No, at the moment i just try to set up a model on a smaller scale. But if you guys already know that it will take hours, my motivation would go down a bit",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Minibatch will definitely increase speed ",
  "id": "58e3fc81ad849bcf424fdc48",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-04-04T20:05:21.089Z",
  "text": "Minibatch will definitely increase speed ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/martin-hahn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/23242456?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/23242456?v=3&s=60",
   "displayName": "martin-hahn",
   "gv": "3",
   "id": "58dff66ad73408ce4f5568ec",
   "url": "/martin-hahn",
   "username": "martin-hahn"
  },
  "html": "No, not on gpu at the moment. ",
  "id": "58e3fc99f22385553d0bc043",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-04-04T20:05:45.189Z",
  "text": "No, not on gpu at the moment. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/martin-hahn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/23242456?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/23242456?v=3&s=60",
   "displayName": "martin-hahn",
   "gv": "3",
   "id": "58dff66ad73408ce4f5568ec",
   "url": "/martin-hahn",
   "username": "martin-hahn"
  },
  "html": "I want to beat our productive algo at work, which is fast ...",
  "id": "58e3fcbf7ea420cc423a3c86",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-04-04T20:06:23.441Z",
  "text": "I want to beat our productive algo at work, which is fast ...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "The main reason is that logp is computed for small batches ",
  "id": "58e3fcc2b52518ed4ddccdd5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-04-04T20:06:26.939Z",
  "text": "The main reason is that logp is computed for small batches ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-04-04T20:07:19.721Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Do you use advi at work too?",
  "id": "58e3fce50e4137042ae2fac4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-04-04T20:07:01.361Z",
  "text": "Do you use advi at work too?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/martin-hahn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/23242456?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/23242456?v=3&s=60",
   "displayName": "martin-hahn",
   "gv": "3",
   "id": "58dff66ad73408ce4f5568ec",
   "url": "/martin-hahn",
   "username": "martin-hahn"
  },
  "html": "No, at work we use a boosting algo, not a probabilistic one",
  "id": "58e3fd0c8bb56c2d11760294",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-04-04T20:07:40.371Z",
  "text": "No, at work we use a boosting algo, not a probabilistic one",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/martin-hahn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/23242456?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/23242456?v=3&s=60",
   "displayName": "martin-hahn",
   "gv": "3",
   "id": "58dff66ad73408ce4f5568ec",
   "url": "/martin-hahn",
   "username": "martin-hahn"
  },
  "html": "If i have a hierarchical struture in my data, e.g. products and locations and days, would it make sense to use this info for the minibatches ? ",
  "id": "58e3fd6768bee3091f0de20f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-04-04T20:09:11.100Z",
  "text": "If i have a hierarchical struture in my data, e.g. products and locations and days, would it make sense to use this info for the minibatches ? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/u/ivan-bocharov",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/706421?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/706421?v=3&s=60",
   "displayName": "Ivan Bocharov",
   "id": "58c7b1b1d73408ce4f507bd3",
   "url": "/ivan-bocharov",
   "username": "ivan-bocharov"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"junpenglao\" class=\"mention\">@junpenglao</span> I see, you&#39;re not using the <code>GP</code> variable in your scripts (at least it&#39;s commented out in the gist). I&#39;ll try  the same thing for the model I&#39;m currently working on.",
  "id": "58e3fd998e4b63533d977426",
  "issues": [],
  "mentions": [
   {
    "screenName": "junpenglao",
    "userId": "56e8df4685d51f252ab907f1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-04-04T20:10:01.351Z",
  "text": "@junpenglao I see, you're not using the `GP` variable in your scripts (at least it's commented out in the gist). I'll try  the same thing for the model I'm currently working on.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/martin-hahn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/23242456?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/23242456?v=3&s=60",
   "displayName": "martin-hahn",
   "gv": "3",
   "id": "58dff66ad73408ce4f5568ec",
   "url": "/martin-hahn",
   "username": "martin-hahn"
  },
  "html": "Ok, i think i just have to try it out to get certain answers. By the way, when i use CPU, does theano use threads or process parallelism ?",
  "id": "58e3fe110e4137042ae2fffc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-04-04T20:12:01.624Z",
  "text": "Ok, i think i just have to try it out to get certain answers. By the way, when i use CPU, does theano use threads or process parallelism ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-04-04T20:14:35.257Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Default optimizer is adam so it takes expectations over gradients and adopts learning rate. It makes sense if some variables do not participate in loss sometimes. How difficult is the structure?",
  "id": "58e3fe45b52518ed4ddcd558",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-04-04T20:12:53.653Z",
  "text": "Default optimizer is adam so it takes expectations over gradients and adopts learning rate. It makes sense if some variables do not participate in loss sometimes. How difficult is the structure?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/martin-hahn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/23242456?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/23242456?v=3&s=60",
   "displayName": "martin-hahn",
   "gv": "3",
   "id": "58dff66ad73408ce4f5568ec",
   "url": "/martin-hahn",
   "username": "martin-hahn"
  },
  "html": "I want to start with a hierarchical linear model with a design matrix and do negative binomial regression, i need the mean and the variance of the distribution for our application",
  "id": "58e3fef28e4b63533d977c62",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-04-04T20:15:46.107Z",
  "text": "I want to start with a hierarchical linear model with a design matrix and do negative binomial regression, i need the mean and the variance of the distribution for our application",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I think if you use appropriate batch size it will be okay ",
  "id": "58e3ff3768bee3091f0de9e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-04-04T20:16:55.399Z",
  "text": "I think if you use appropriate batch size it will be okay ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "It will be a good idea to vectorize the model if it is not done yet. ",
  "id": "58e3ff8a4cb8d091735b9b62",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-04-04T20:18:18.272Z",
  "text": "It will be a good idea to vectorize the model if it is not done yet. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/martin-hahn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/23242456?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/23242456?v=3&s=60",
   "displayName": "martin-hahn",
   "gv": "3",
   "id": "58dff66ad73408ce4f5568ec",
   "url": "/martin-hahn",
   "username": "martin-hahn"
  },
  "html": "ok, i wanted to use the radon example as a template. Is it enough to use the array notation for the hierarchical parameters or do you mean something else by vectorize ?",
  "id": "58e4002808c00c092a4ae9f5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-04-04T20:20:56.627Z",
  "text": "ok, i wanted to use the radon example as a template. Is it enough to use the array notation for the hierarchical parameters or do you mean something else by vectorize ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Yes, exactly ",
  "id": "58e401767ea420cc423a5668",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-04T20:26:30.326Z",
  "text": "Yes, exactly ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/martin-hahn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/23242456?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/23242456?v=3&s=60",
   "displayName": "martin-hahn",
   "gv": "3",
   "id": "58dff66ad73408ce4f5568ec",
   "url": "/martin-hahn",
   "username": "martin-hahn"
  },
  "html": "Laplace could not be used with ADVI i suppose, i would like to get something like Lasso, a sparse model ...",
  "id": "58e40470b52518ed4ddcf712",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-04T20:39:12.537Z",
  "text": "Laplace could not be used with ADVI i suppose, i would like to get something like Lasso, a sparse model ...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Laplace prior is lasso",
  "id": "58e404c808c00c092a4afe63",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-04T20:40:40.083Z",
  "text": "Laplace prior is lasso",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Hmm",
  "id": "58e404dc68bee3091f0e04c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-04T20:41:00.585Z",
  "text": "Hmm",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/martin-hahn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/23242456?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/23242456?v=3&s=60",
   "displayName": "martin-hahn",
   "gv": "3",
   "id": "58dff66ad73408ce4f5568ec",
   "url": "/martin-hahn",
   "username": "martin-hahn"
  },
  "html": "i know, but i got diverging results ... I found only one example where METROPOLIS was used, therfore i ask ...",
  "id": "58e4055af22385553d0bea65",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-04T20:43:06.760Z",
  "text": "i know, but i got diverging results ... I found only one example where METROPOLIS was used, therfore i ask ...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "With the new <code>DataSampler</code> class for minibatches, how does it work when your data includes both outcomes (for the likelihood) and predictors? I assume you can&#39;t index them out ...",
  "id": "58e405698fcce56b20cdb783",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-04-04T20:43:21.657Z",
  "text": "With the new `DataSampler` class for minibatches, how does it work when your data includes both outcomes (for the likelihood) and predictors? I assume you can't index them out ...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "They get the same numpy seeds ",
  "id": "58e4059f8fcce56b20cdb940",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-04-04T20:44:15.566Z",
  "text": "They get the same numpy seeds ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Ah, so instantiate one for each group of data, and they will receive the same indices?",
  "id": "58e405c3f22385553d0bebb5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-04-04T20:44:51.797Z",
  "text": "Ah, so instantiate one for each group of data, and they will receive the same indices?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Yes",
  "id": "58e405eb0e4137042ae32362",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-04-04T20:45:31.749Z",
  "text": "Yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Generators became very handy I see",
  "id": "58e4065aad849bcf42500e9d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-04-04T20:47:22.273Z",
  "text": "Generators became very handy I see",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Bug is still left:(",
  "id": "58e406698bb56c2d1176348c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-04-04T20:47:37.487Z",
  "text": "Bug is still left:(",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/u/ivan-bocharov",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/706421?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/706421?v=3&s=60",
   "displayName": "Ivan Bocharov",
   "id": "58c7b1b1d73408ce4f507bd3",
   "url": "/ivan-bocharov",
   "username": "ivan-bocharov"
  },
  "html": "<p>A random note after going through one of the ADVI minibatch <a href=\"https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/GLM-hierarchical-advi-minibatch.ipynb\" rel=\"nofollow\" target=\"_blank\" class=\"link\">notebooks</a>:</p><p>In the proposed minibatch generator you use <code>rng.randint(len(data), size=batchsize)</code>. Shouldn&#39;t it be <code>np.random.choice(len(data), batchsize, replace=False)</code> instead? The <code>choice</code> function will give you an array of indices without repetition, while the <code>randint</code>-generated array might have repetitions:</p><pre><code>Python <span class=\"number\">3.5</span>.<span class=\"number\">1</span> (default, Jan <span class=\"number\">22</span> <span class=\"number\">2016</span>, <span class=\"number\">08</span>:<span class=\"number\">54</span>:<span class=\"number\">32</span>)\nType <span class=\"string\">\"help\"</span>, <span class=\"string\">\"copyright\"</span>, <span class=\"string\">\"credits\"</span> or <span class=\"string\">\"license\"</span> <span class=\"keyword\">for</span> more information.\n&gt;&gt;&gt; import numpy as np\n&gt;&gt;&gt; <span class=\"tag\">a</span> = np<span class=\"class\">.random</span><span class=\"class\">.randint</span>(<span class=\"number\">100</span>, size=<span class=\"number\">50</span>)\n&gt;&gt;&gt; <span class=\"tag\">b</span> = np<span class=\"class\">.random</span><span class=\"class\">.choice</span>(<span class=\"number\">100</span>, <span class=\"number\">50</span>, replace=False)\n&gt;&gt;&gt; <span class=\"function\"><span class=\"title\">len</span><span class=\"params\">(np.unique(a)</span></span>)\n<span class=\"number\">42</span>\n&gt;&gt;&gt; <span class=\"function\"><span class=\"title\">len</span><span class=\"params\">(np.unique(b)</span></span>)\n<span class=\"number\">50</span></code></pre>",
  "id": "58e5268cb52518ed4de1b07c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-05T17:17:00.930Z",
  "text": "A random note after going through one of the ADVI minibatch [notebooks](https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/GLM-hierarchical-advi-minibatch.ipynb):\n\nIn the proposed minibatch generator you use `rng.randint(len(data), size=batchsize)`. Shouldn't it be `np.random.choice(len(data), batchsize, replace=False)` instead? The `choice` function will give you an array of indices without repetition, while the `randint`-generated array might have repetitions:\n\n```\nPython 3.5.1 (default, Jan 22 2016, 08:54:32)\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import numpy as np\n>>> a = np.random.randint(100, size=50)\n>>> b = np.random.choice(100, 50, replace=False)\n>>> len(np.unique(a))\n42\n>>> len(np.unique(b))\n50\n```\n",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/GLM-hierarchical-advi-minibatch.ipynb"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "In my minibatch generator I allow replacements so data becames idd",
  "id": "58e52718f22385553d10a07f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-05T17:19:20.414Z",
  "text": "In my minibatch generator I allow replacements so data becames idd",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "what about a bug with generators, let\u2019s just wait I\u2019ve opened an issue <span data-link-type=\"issue\" data-issue=\"5809\" data-issue-repo=\"Theano/Theano\" class=\"issue\">Theano/Theano#5809</span>",
  "id": "58e5279fad849bcf4254ecc9",
  "issues": [
   {
    "number": "5809",
    "repo": "Theano/Theano"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-05T17:21:35.979Z",
  "text": "what about a bug with generators, let\u2019s just wait I\u2019ve opened an issue https://github.com/Theano/Theano/issues/5809",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Wow. Guys I&#39;ve managed to implement delayed creation for pymc random variables. Before created, nearly any tensor operation is valid for instances. Last execution step is <strong>call</strong> method with shape and name as arguments. All that stuff is focused on complex priors for neural networks. See it in next gelato development version <a href=\"https://github.com/ferrine/gelato\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/ferrine/gelato</a>",
  "id": "58e52f51408f90be669019c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-05T17:54:25.953Z",
  "text": "Wow. Guys I've managed to implement delayed creation for pymc random variables. Before created, nearly any tensor operation is valid for instances. Last execution step is __call__ method with shape and name as arguments. All that stuff is focused on complex priors for neural networks. See it in next gelato development version https://github.com/ferrine/gelato",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/ferrine/gelato"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ferrine\" class=\"mention\">@ferrine</span> like a placeholder?",
  "id": "58e54e588e4b63533d9d2bf3",
  "issues": [],
  "mentions": [
   {
    "screenName": "ferrine",
    "userId": "581e3155d73408ce4f33e027",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 24,
  "sent": "2017-04-05T20:06:48.176Z",
  "text": "@ferrine like a placeholder?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "No It has a lot of differences",
  "id": "58e54e744cb8d09173611770",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-04-05T20:07:16.358Z",
  "text": "No It has a lot of differences",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "by now it has many bugs but general idea is illustrated in this small example",
  "id": "58e5553bad849bcf4255c3ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-04-05T20:36:11.885Z",
  "text": "by now it has many bugs but general idea is illustrated in this small example",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "<pre><code class=\"python\"><span class=\"keyword\">from</span> gelato <span class=\"keyword\">import</span> *\n<span class=\"keyword\">import</span> pymc3 <span class=\"keyword\">as</span> pm\nexpr = (NormalSpec() + LaplaceSpec()) / NormalSpec()\n<span class=\"keyword\">with</span> pm.Model() <span class=\"keyword\">as</span> model:\n    result = expr((<span class=\"number\">3</span>, <span class=\"number\">2</span>), name=<span class=\"string\">'expression'</span>)\nprint(model.vars)\nprint(result.tag.test_value)\n<span class=\"comment\"># \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014</span>\n[expression.0, expression:<span class=\"number\">2.0</span>, expression:<span class=\"number\">2</span>:<span class=\"number\">5</span>]\n[[  <span class=\"number\">0.79829788</span>  -<span class=\"number\">0.32463938</span>]\n [  <span class=\"number\">0.07646911</span>  <span class=\"number\">17.06553078</span>]\n [  <span class=\"number\">3.39293814</span>  -<span class=\"number\">0.07418957</span>]]</code></pre>",
  "id": "58e5555268bee3091f13af9a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-04-05T20:36:34.011Z",
  "text": "```python\nfrom gelato import *\nimport pymc3 as pm\nexpr = (NormalSpec() + LaplaceSpec()) / NormalSpec()\nwith pm.Model() as model:\n    result = expr((3, 2), name='expression')\nprint(model.vars)\nprint(result.tag.test_value)\n# \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n[expression.0, expression:2.0, expression:2:5]\n[[  0.79829788  -0.32463938]\n [  0.07646911  17.06553078]\n [  3.39293814  -0.07418957]]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "there are a lot of problems with operations by the moment",
  "id": "58e55573f22385553d118874",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-04-05T20:37:07.694Z",
  "text": "there are a lot of problems with operations by the moment",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "for example expression like <code>(NormalSpec() + LaplaceSpec()) + 1</code> are not valid yet",
  "id": "58e555ef0e4137042ae8c515",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-04-05T20:39:11.741Z",
  "text": "for example expression like `(NormalSpec() + LaplaceSpec()) + 1 ` are not valid yet",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "what does N + L represent? combination of priors?",
  "id": "58e556258e4b63533d9d4c74",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-04-05T20:40:05.852Z",
  "text": "what does N + L represent? combination of priors?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"vals\" class=\"mention\">@vals</span> that&#39;s a really nice benchmark, do you have the NB?",
  "id": "58e5564a408f90be6690d30e",
  "issues": [],
  "mentions": [
   {
    "screenName": "vals",
    "userId": "56fbcc0f85d51f252abb999b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-05T20:40:42.087Z",
  "text": "@vals that's a really nice benchmark, do you have the NB?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Yes, there is a combination of priors (elemwice yet)",
  "id": "58e556b78bb56c2d117bdcba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-04-05T20:42:31.732Z",
  "text": "Yes, there is a combination of priors (elemwice yet)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "so composability of probability distributions?",
  "id": "58e556d78bb56c2d117bddab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-04-05T20:43:03.287Z",
  "text": "so composability of probability distributions?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "<pre><code class=\"python\"><span class=\"keyword\">from</span> gelato <span class=\"keyword\">import</span> *\n<span class=\"keyword\">import</span> pymc3 <span class=\"keyword\">as</span> pm\nU = NormalSpec()\nV = UniformSpec()\nV = V / V.norm(<span class=\"number\">2</span>)\nW = U*V\n<span class=\"keyword\">with</span> pm.Model() <span class=\"keyword\">as</span> model:\n    result = W((<span class=\"number\">3</span>, <span class=\"number\">2</span>), name=<span class=\"string\">'weight_normalization'</span>)\nprint(model.vars)\nprint(result.tag.test_value)</code></pre>",
  "id": "58e5577408c00c092a50a6c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-04-05T20:45:40.948Z",
  "text": "```python\nfrom gelato import *\nimport pymc3 as pm\nU = NormalSpec()\nV = UniformSpec()\nV = V / V.norm(2)\nW = U*V\nwith pm.Model() as model:\n    result = W((3, 2), name='weight_normalization')\nprint(model.vars)\nprint(result.tag.test_value)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "If I\u2019m not mistaken it\u2019s exactly weightnorm",
  "id": "58e557998fcce56b20d35ebb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-05T20:46:17.096Z",
  "text": "If I\u2019m not mistaken it\u2019s exactly weightnorm",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "interesting",
  "id": "58e557b20e4137042ae8cd90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-05T20:46:42.544Z",
  "text": "interesting",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "but I get 3 RV",
  "id": "58e557cbad849bcf4255d3a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-05T20:47:07.017Z",
  "text": "but I get 3 RV",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "that\u2019s strange",
  "id": "58e557d1b52518ed4de2a407",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-05T20:47:13.063Z",
  "text": "that\u2019s strange",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "i think that tree structure is poor now and I should take care of called instances",
  "id": "58e558528bb56c2d117be828",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-05T20:49:22.462Z",
  "text": "i think that tree structure is poor now and I should take care of called instances",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "<pre><code>[weight_normalization.0, weight_normalization:<span class=\"number\">2.0</span>_interval_]\n[[ -<span class=\"number\">9.49282403e-05</span>  -<span class=\"number\">3.44297051e-01</span>]\n [  <span class=\"number\">1.55618027e-01</span>  -<span class=\"number\">2.43710101e-01</span>]\n [  <span class=\"number\">1.36428148e-01</span>  -<span class=\"number\">5.13185784e-02</span>]]</code></pre>",
  "id": "58e55a75408f90be6690e715",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-04-05T20:58:29.632Z",
  "text": "```\n[weight_normalization.0, weight_normalization:2.0_interval_]\n[[ -9.49282403e-05  -3.44297051e-01]\n [  1.55618027e-01  -2.43710101e-01]\n [  1.36428148e-01  -5.13185784e-02]]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "that\u2019s much better but maid idea is to reuse that specs(",
  "id": "58e55ab9408f90be6690e80a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-04-05T20:59:37.831Z",
  "text": "that\u2019s much better but maid idea is to reuse that specs(",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Maybe a kind of memo should be used ",
  "id": "58e55bdcad849bcf4255e893",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-04-05T21:04:28.669Z",
  "text": "Maybe a kind of memo should be used ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "memoization works",
  "id": "58e5606e0e4137042ae8f50d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-04-05T21:23:58.518Z",
  "text": "memoization works",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I hope that will be very good api for complex and maybe hierarchical initializations",
  "id": "58e560c4408f90be6691043b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-04-05T21:25:24.276Z",
  "text": "I hope that will be very good api for complex and maybe hierarchical initializations",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/vals",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/668803?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/668803?v=3&s=60",
   "displayName": "Valentine Svensson",
   "gv": "3",
   "id": "56fbcc0f85d51f252abb999b",
   "url": "/vals",
   "username": "vals",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> Thanks! Sure, it&#39;s available here: <a href=\"https://github.com/Teichlab/RCA/blob/master/PyMC3%20Version.ipynb\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/Teichlab/RCA/blob/master/PyMC3%20Version.ipynb</a> (sorry the notebook is misnamed, I forgot to change the name.)",
  "id": "58e56685f22385553d11d47a",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-05T21:49:57.466Z",
  "text": "@twiecki Thanks! Sure, it's available here: https://github.com/Teichlab/RCA/blob/master/PyMC3%20Version.ipynb (sorry the notebook is misnamed, I forgot to change the name.)",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/Teichlab/RCA/blob/master/PyMC3%20Version.ipynb"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "<pre><code class=\"python\"><span class=\"keyword\">with</span> pm.Model() <span class=\"keyword\">as</span> model:\n    v = as_spec_op(tt.nlinalg.matrix_inverse)((NormalSpec() + LaplaceSpec()) + <span class=\"number\">42</span>)((<span class=\"number\">4</span>, <span class=\"number\">4</span>))\nprint(v.tag.test_value)\nprint(model.free_RVs)\n\u2014\u2014\u2014\u2014\n[[ <span class=\"number\">1.96577561</span> -<span class=\"number\">0.17531009</span> -<span class=\"number\">1.12418199</span> -<span class=\"number\">0.6551345</span> ]\n [-<span class=\"number\">1.50344872</span>  <span class=\"number\">0.18900482</span>  <span class=\"number\">1.18953824</span>  <span class=\"number\">0.13029179</span>]\n [-<span class=\"number\">1.60464728</span> -<span class=\"number\">0.50956863</span>  <span class=\"number\">1.29275799</span>  <span class=\"number\">0.81728578</span>]\n [ <span class=\"number\">1.24229813</span>  <span class=\"number\">0.50696456</span> -<span class=\"number\">1.42536271</span> -<span class=\"number\">0.31209537</span>]]\n[auto_26, auto_29]</code></pre>",
  "id": "58e568578fcce56b20d3a731",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-04-05T21:57:43.039Z",
  "text": "```python\nwith pm.Model() as model:\n    v = as_spec_op(tt.nlinalg.matrix_inverse)((NormalSpec() + LaplaceSpec()) + 42)((4, 4))\nprint(v.tag.test_value)\nprint(model.free_RVs)\n\u2014\u2014\u2014\u2014\n[[ 1.96577561 -0.17531009 -1.12418199 -0.6551345 ]\n [-1.50344872  0.18900482  1.18953824  0.13029179]\n [-1.60464728 -0.50956863  1.29275799  0.81728578]\n [ 1.24229813  0.50696456 -1.42536271 -0.31209537]]\n[auto_26, auto_29]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "shape manipulations are left",
  "id": "58e5688cb52518ed4de2edfa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-04-05T21:58:36.194Z",
  "text": "shape manipulations are left",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aplamhden",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10165750?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10165750?v=3&s=60",
   "displayName": "Nikos Koudounas",
   "gv": "3",
   "id": "58e38965d73408ce4f55fc53",
   "url": "/aplamhden",
   "username": "aplamhden",
   "v": 2
  },
  "html": "Hi. Is there a way of use thining with NUTS or Metropolis algorithms by default?",
  "id": "58e7a1b508c00c092a59f806",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-07T14:27:01.090Z",
  "text": "Hi. Is there a way of use thining with NUTS or Metropolis algorithms by default?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-04-07T14:51:31.622Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "just thin directly on the trace, e.g. <code>trace[::5]</code>. there&#39;s almost never a reason to thin, however, unless you&#39;re low on RAM",
  "id": "58e7a76968bee3091f1d1d8e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-04-07T14:51:21.269Z",
  "text": "just thin directly on the trace, e.g. `trace[::5]`. there's almost never a reason to thin, however, unless you're low on RAM",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2017-04-07T15:00:05.481Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aplamhden",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10165750?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10165750?v=3&s=60",
   "displayName": "Nikos Koudounas",
   "gv": "3",
   "id": "58e38965d73408ce4f55fc53",
   "url": "/aplamhden",
   "username": "aplamhden",
   "v": 2
  },
  "html": "Y maybe i need to change model or sampler. But if i have  a low lag acorr maybe it will work.  U think maybe i need more samples? <span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> ",
  "id": "58e7a9480e4137042af21a01",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 24,
  "sent": "2017-04-07T14:59:20.984Z",
  "text": "Y maybe i need to change model or sampler. But if i have  a low lag acorr maybe it will work.  U think maybe i need more samples? @twiecki ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I would run NUTS with good initialization, autocorrelation should be low, or there could be other problems lurking",
  "id": "58e7aafa8e4b63533da6bdb6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-04-07T15:06:34.936Z",
  "text": "I would run NUTS with good initialization, autocorrelation should be low, or there could be other problems lurking",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aplamhden",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10165750?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10165750?v=3&s=60",
   "displayName": "Nikos Koudounas",
   "gv": "3",
   "id": "58e38965d73408ce4f55fc53",
   "url": "/aplamhden",
   "username": "aplamhden",
   "v": 2
  },
  "html": "This is what i am doing. I run NUTS with advi and advi_map and sample 2k values( took 20+ min. 5k samples will go to 1 hour).  I was thinking using Metropolis with thining to avoid the loss of time :fire:, but i have too many parameters + acorr. Maybe more RAM is my solution. Thnx <span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> ",
  "id": "58e7b06d08c00c092a5a4632",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 24,
  "sent": "2017-04-07T15:29:49.536Z",
  "text": "This is what i am doing. I run NUTS with advi and advi_map and sample 2k values( took 20+ min. 5k samples will go to 1 hour).  I was thinking using Metropolis with thining to avoid the loss of time :fire:, but i have too many parameters + acorr. Maybe more RAM is my solution. Thnx @twiecki ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I would not recommend metropolis",
  "id": "58e7b54f4cb8d091736adfd7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-04-07T15:50:39.740Z",
  "text": "I would not recommend metropolis",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "if the model is complex, can certainly take a little while",
  "id": "58e7b55d7ea420cc4249cfd1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-04-07T15:50:53.023Z",
  "text": "if the model is complex, can certainly take a little while",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Yes, thinning will not help you. The effective sample size of a thinned and an unthinned trace will be the same. ",
  "id": "58e7bf8cf22385553d1b6e13",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-04-07T16:34:20.586Z",
  "text": "Yes, thinning will not help you. The effective sample size of a thinned and an unthinned trace will be the same. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "You can try reparameterizing the model in places where this is possible, but NUTS will generally be more efficient than Metropolis and require fewer samples overall.",
  "id": "58e7bfb48e4b63533da7267b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-04-07T16:35:00.339Z",
  "text": "You can try reparameterizing the model in places where this is possible, but NUTS will generally be more efficient than Metropolis and require fewer samples overall.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ssequeira",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=60",
   "displayName": "Shannon Sequeira",
   "gv": "4",
   "id": "58b46af0d73408ce4f4d3f2c",
   "url": "/ssequeira",
   "username": "ssequeira",
   "v": 7
  },
  "html": "If I understand correctly, NUTS can&#39;t sample from a discrete distribution very effectively.",
  "id": "58e7d8f1ad849bcf4260477c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-07T18:22:41.642Z",
  "text": "If I understand correctly, NUTS can't sample from a discrete distribution very effectively.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ssequeira",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=60",
   "displayName": "Shannon Sequeira",
   "gv": "4",
   "id": "58b46af0d73408ce4f4d3f2c",
   "url": "/ssequeira",
   "username": "ssequeira",
   "v": 7
  },
  "html": "Or at all.",
  "id": "58e7d9778fcce56b20ddb3cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-04-07T18:24:55.284Z",
  "text": "Or at all.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ssequeira",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=60",
   "displayName": "Shannon Sequeira",
   "gv": "4",
   "id": "58b46af0d73408ce4f4d3f2c",
   "url": "/ssequeira",
   "username": "ssequeira",
   "v": 7
  },
  "html": "So in implementing my GSoC proposal, I&#39;ve been thinking of using the Gibbs sampler from Ishwaran and James 2001 for stick-breaking priors in general, and then for the specific DPMM case, implement variational inference or something else.",
  "id": "58e7d9f508c00c092a5b176b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-04-07T18:27:01.919Z",
  "text": "So in implementing my GSoC proposal, I've been thinking of using the Gibbs sampler from Ishwaran and James 2001 for stick-breaking priors in general, and then for the specific DPMM case, implement variational inference or something else.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aplamhden",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10165750?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10165750?v=3&s=60",
   "displayName": "Nikos Koudounas",
   "gv": "3",
   "id": "58e38965d73408ce4f55fc53",
   "url": "/aplamhden",
   "username": "aplamhden",
   "v": 2
  },
  "html": "For random variables that are undifferentiable (namely, discrete variables) NUTS cannot be used, but it may<br>still be used on the differentiable variables in a model that contains undifferentiable variables. <span data-link-type=\"mention\" data-screen-name=\"ssequeira\" class=\"mention\">@ssequeira</span> ",
  "id": "58e7dae58e4b63533da7a512",
  "issues": [],
  "mentions": [
   {
    "screenName": "ssequeira",
    "userId": "58b46af0d73408ce4f4d3f2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2017-04-07T18:31:01.588Z",
  "text": "For random variables that are undifferentiable (namely, discrete variables) NUTS cannot be used, but it may\nstill be used on the differentiable variables in a model that contains undifferentiable variables. @ssequeira ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/gsmafra",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11797341?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11797341?v=4&s=60",
   "displayName": "Gustavo Sena Mafra",
   "gv": "4",
   "id": "55366f4c15522ed4b3df5040",
   "url": "/gsmafra",
   "username": "gsmafra",
   "v": 9
  },
  "html": "Hi, I&#39;m a beginner with pymc3 and I&#39;m reading this &quot;Bayesian Methods for Hackers&quot; book. I&#39;m a bit confused because the author constantly mixes the observation sample size with model itself (&quot;Unsupervised Clustering using a Mixture Model&quot; in Chater 3 for example) by declaring some random variables with the shape parameter equals the sample size (shape=data.shape[0]). Is this a normal pattern in pymc3 or Bayesian modeling or why is this necessary?",
  "id": "58e97b3b68bee3091f23b64c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-04-09T00:07:23.636Z",
  "text": "Hi, I'm a beginner with pymc3 and I'm reading this \"Bayesian Methods for Hackers\" book. I'm a bit confused because the author constantly mixes the observation sample size with model itself (\"Unsupervised Clustering using a Mixture Model\" in Chater 3 for example) by declaring some random variables with the shape parameter equals the sample size (shape=data.shape[0]). Is this a normal pattern in pymc3 or Bayesian modeling or why is this necessary?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/gsmafra",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11797341?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11797341?v=4&s=60",
   "displayName": "Gustavo Sena Mafra",
   "gv": "4",
   "id": "55366f4c15522ed4b3df5040",
   "url": "/gsmafra",
   "username": "gsmafra",
   "v": 9
  },
  "html": "Another thing I was wondering if it would be possible to add some deterministic observable variables to a model, like saying there are two hidden random variables being drawn from a normal distribution and an observable third one which is the sum of those two.",
  "id": "58e97be27ea420cc42503e70",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-04-09T00:10:10.758Z",
  "text": "Another thing I was wondering if it would be possible to add some deterministic observable variables to a model, like saying there are two hidden random variables being drawn from a normal distribution and an observable third one which is the sum of those two.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"gsmafra\" class=\"mention\">@gsmafra</span> by &quot;observable&quot; do you mean &quot;observed&quot;? You can&#39;t add an <code>observed</code> tag to a Deterministic because it is simply a transformation of its arguments. For what you are proposing, you would want to use a factor potential (<code>Potential</code> object), which would apply a log-probability to arbitrary inputs.",
  "id": "58e97e2fad849bcf426610cb",
  "issues": [],
  "mentions": [
   {
    "screenName": "gsmafra",
    "userId": "55366f4c15522ed4b3df5040",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2017-04-09T00:19:59.333Z",
  "text": "@gsmafra by \"observable\" do you mean \"observed\"? You can't add an `observed` tag to a Deterministic because it is simply a transformation of its arguments. For what you are proposing, you would want to use a factor potential (`Potential` object), which would apply a log-probability to arbitrary inputs.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/gsmafra",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11797341?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11797341?v=4&s=60",
   "displayName": "Gustavo Sena Mafra",
   "gv": "4",
   "id": "55366f4c15522ed4b3df5040",
   "url": "/gsmafra",
   "username": "gsmafra",
   "v": 9
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> yes that is what I wanted to say. Where can I find some documentation on the Potential object?",
  "id": "58e97f6c08c00c092a60f4a9",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-09T00:25:16.933Z",
  "text": "@fonnesbeck yes that is what I wanted to say. Where can I find some documentation on the Potential object?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"gsmafra\" class=\"mention\">@gsmafra</span> There is some info in the PyMC2 documentation. A good PyMC3 example is the Gaussian mixture model notebook: <a href=\"https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/gaussian_mixture_model.ipynb\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/gaussian_mixture_model.ipynb</a>",
  "id": "58e987ce4cb8d091737164c7",
  "issues": [],
  "mentions": [
   {
    "screenName": "gsmafra",
    "userId": "55366f4c15522ed4b3df5040",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-09T01:01:02.872Z",
  "text": "@gsmafra There is some info in the PyMC2 documentation. A good PyMC3 example is the Gaussian mixture model notebook: https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/gaussian_mixture_model.ipynb",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/gaussian_mixture_model.ipynb"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/gsmafra",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11797341?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11797341?v=4&s=60",
   "displayName": "Gustavo Sena Mafra",
   "gv": "4",
   "id": "55366f4c15522ed4b3df5040",
   "url": "/gsmafra",
   "username": "gsmafra",
   "v": 9
  },
  "html": "Thanks  <span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> . Do you have anything on that first thing I said about mixing sample size of the observation and the dimension of the observation? Is there even a logical separation of those two in pymc?",
  "id": "58e98b3e4cb8d09173716cfa",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-09T01:15:42.156Z",
  "text": "Thanks  @fonnesbeck . Do you have anything on that first thing I said about mixing sample size of the observation and the dimension of the observation? Is there even a logical separation of those two in pymc?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "The <code>shape</code> argument just allows you to be explicit about the dimension of the variable. Sometimes it is obvious based on the arguments, but sometimes not. Has nothing to do with sample size, otherwise. ",
  "id": "58e99c198fcce56b20e3b5e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-09T02:27:37.325Z",
  "text": "The `shape` argument just allows you to be explicit about the dimension of the variable. Sometimes it is obvious based on the arguments, but sometimes not. Has nothing to do with sample size, otherwise. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/gsmafra",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11797341?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11797341?v=4&s=60",
   "displayName": "Gustavo Sena Mafra",
   "gv": "4",
   "id": "55366f4c15522ed4b3df5040",
   "url": "/gsmafra",
   "username": "gsmafra",
   "v": 9
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> just to be clear what I mean by sample size is the number of observed data points, not the number of samples drawn from the MCMC trace. If you look into that GMM notebook you sent here there is this line:</p><p><code>category = pm.Categorical(&#39;category&#39;, p=p, shape=ndata)</code></p><p><code>ndata</code> here is the sample size (500), not the dimension of the observations (3). Conceptually these two are different, but it seems that we have to mix them in just one thing when writing pymc models.</p>",
  "id": "58e99eee7ea420cc4250a163",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-09T02:39:42.301Z",
  "text": "@fonnesbeck just to be clear what I mean by sample size is the number of observed data points, not the number of samples drawn from the MCMC trace. If you look into that GMM notebook you sent here there is this line:\n\n`category = pm.Categorical('category', p=p, shape=ndata)`\n\n`ndata` here is the sample size (500), not the dimension of the observations (3). Conceptually these two are different, but it seems that we have to mix them in just one thing when writing pymc models.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/asross",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1022564?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1022564?v=3&s=60",
   "displayName": "Andrew Ross",
   "gv": "3",
   "id": "58ea4f30d73408ce4f572b5c",
   "url": "/asross",
   "username": "asross"
  },
  "html": "hey, i have a pretty dumb/basic question. i&#39;m trying to use pymc3 to test out different sampling methods for a 3d distribution whose log density i know exactly. there&#39;s no observed data, no parameters to fit whatsoever, i just want to get multidimensional [(x,y,z)...] samples by using Metropolis, NUTS, etc, based purely on my density. i&#39;ve expressed it as a <code>DensityDist</code> with a theano-differentiable log density function, but when I go to sample from it, I only get individual, 1D values out. so I am confused",
  "id": "58ea4fedf22385553d24198e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2017-04-09T15:14:53.067Z",
  "text": "hey, i have a pretty dumb/basic question. i'm trying to use pymc3 to test out different sampling methods for a 3d distribution whose log density i know exactly. there's no observed data, no parameters to fit whatsoever, i just want to get multidimensional [(x,y,z)...] samples by using Metropolis, NUTS, etc, based purely on my density. i've expressed it as a `DensityDist` with a theano-differentiable log density function, but when I go to sample from it, I only get individual, 1D values out. so I am confused",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/asross",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1022564?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1022564?v=3&s=60",
   "displayName": "Andrew Ross",
   "gv": "3",
   "id": "58ea4f30d73408ce4f572b5c",
   "url": "/asross",
   "username": "asross"
  },
  "html": "anyone know what i&#39;m doing wrong?",
  "id": "58ea4ff7a0e4856242e90bb9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2017-04-09T15:15:03.330Z",
  "text": "anyone know what i'm doing wrong?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/asross",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1022564?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1022564?v=3&s=60",
   "displayName": "Andrew Ross",
   "gv": "3",
   "id": "58ea4f30d73408ce4f572b5c",
   "url": "/asross",
   "username": "asross"
  },
  "html": "gah, nevermind, as i was typing this i realized the problem -- i needed to pass a shape variable and to make sure that the arity of my log density function was correct",
  "id": "58ea50b98fcce56b20e5f37d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2017-04-09T15:18:17.494Z",
  "text": "gah, nevermind, as i was typing this i realized the problem -- i needed to pass a shape variable and to make sure that the arity of my log density function was correct",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/dseuss",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5870291?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5870291?v=4&s=60",
   "displayName": "Daniel Suess",
   "gv": "4",
   "id": "57050238187bb6f0eade218b",
   "url": "/dseuss",
   "username": "dseuss",
   "v": 5
  },
  "html": "<p>hi! Is it possible to use a custom distribution without specifying the <code>logp</code> function?</p><p>More specifically, I want to use a Haar-Random prior distribution (uniform on the d-dimensional unit sphere). It&#39;s easy to sample from this distribution, but it has a singular density in R^d.</p>",
  "id": "58eb4c294cb8d0917377297a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-04-10T09:11:05.399Z",
  "text": "hi! Is it possible to use a custom distribution without specifying the `logp` function?\n\nMore specifically, I want to use a Haar-Random prior distribution (uniform on the d-dimensional unit sphere). It's easy to sample from this distribution, but it has a singular density in R^d.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "just sampling won&#39;t do you much good (unless you estimate logp based on samples), you need to be able to compute the likelihood analytically",
  "id": "58eb5137bdf4acc112450d43",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-04-10T09:32:39.674Z",
  "text": "just sampling won't do you much good (unless you estimate logp based on samples), you need to be able to compute the likelihood analytically",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "otherwise you&#39;re going into ABC (approximate bayesian computation) territory",
  "id": "58eb5149b52518ed4df8c22c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-04-10T09:32:57.351Z",
  "text": "otherwise you're going into ABC (approximate bayesian computation) territory",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"gsmafra\" class=\"mention\">@gsmafra</span> in the GMM example, <code>k</code> is the dimension of the categorical parameter (the number of categories). You still need to specify how large that node is, which is a function of the size of the data. I have in the past argued for defining &quot;shape&quot; and &quot;size&quot; distinctly and explicitly for every distribution, but I lost that argument.",
  "id": "58eb8bffad849bcf426d2268",
  "issues": [],
  "mentions": [
   {
    "screenName": "gsmafra",
    "userId": "55366f4c15522ed4b3df5040",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-10T13:43:27.636Z",
  "text": "@gsmafra in the GMM example, `k` is the dimension of the categorical parameter (the number of categories). You still need to specify how large that node is, which is a function of the size of the data. I have in the past argued for defining \"shape\" and \"size\" distinctly and explicitly for every distribution, but I lost that argument.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pstjohn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=60",
   "displayName": "Peter St. John",
   "gv": "4",
   "id": "57976c7440f3a6eec05c88a5",
   "url": "/pstjohn",
   "username": "pstjohn",
   "v": 12
  },
  "html": "I\u2019m having some issues with ADVI sampling / PPC checks and uniform distributions: Do you think someone could check to see if this is expected behavior? : <a href=\"https://gist.github.com/pstjohn/f72a489cd61dffe8067f3b87acbefef5\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/pstjohn/f72a489cd61dffe8067f3b87acbefef5</a>",
  "id": "58ed2396d7ab15e81724bddc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-04-11T18:42:30.001Z",
  "text": "I\u2019m having some issues with ADVI sampling / PPC checks and uniform distributions: Do you think someone could check to see if this is expected behavior? : https://gist.github.com/pstjohn/f72a489cd61dffe8067f3b87acbefef5",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/pstjohn/f72a489cd61dffe8067f3b87acbefef5"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pstjohn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=60",
   "displayName": "Peter St. John",
   "gv": "4",
   "id": "57976c7440f3a6eec05c88a5",
   "url": "/pstjohn",
   "username": "pstjohn",
   "v": 12
  },
  "html": "Specifically, why does <code>sd_interval_</code> not appear on the trace from <code>sample_vp</code>, and why would the subsequent PPC predictions have such a different standard deviation? ",
  "id": "58ed23d0e3700b1461c90a8d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-11T18:43:28.502Z",
  "text": "Specifically, why does `sd_interval_` not appear on the trace from `sample_vp`, and why would the subsequent PPC predictions have such a different standard deviation? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pstjohn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=60",
   "displayName": "Peter St. John",
   "gv": "4",
   "id": "57976c7440f3a6eec05c88a5",
   "url": "/pstjohn",
   "username": "pstjohn",
   "v": 12
  },
  "html": "Nevermind, <code>advi_trace = pm.sample_vp(v_params, 5000, hide_transformed=False)</code> gives the correct behavior. Would you guys be amenable to a PR that changes the default behavior for <code>hide_transformed</code>?",
  "id": "58ed257d01d449152eb56dd2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-11T18:50:37.035Z",
  "text": "Nevermind, `advi_trace = pm.sample_vp(v_params, 5000, hide_transformed=False)` gives the correct behavior. Would you guys be amenable to a PR that changes the default behavior for `hide_transformed`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/dseuss",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5870291?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5870291?v=4&s=60",
   "displayName": "Daniel Suess",
   "gv": "4",
   "id": "57050238187bb6f0eade218b",
   "url": "/dseuss",
   "username": "dseuss",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> OK, thanks, I have gotten around it using spherical coordinates: <a href=\"https://gist.github.com/dseuss/ad46faa1a7b461ba4b1aa9f96185584c\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/dseuss/ad46faa1a7b461ba4b1aa9f96185584c</a>",
  "id": "58ed706dad849bcf4275b70c",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2017-04-12T00:10:21.477Z",
  "text": "@twiecki OK, thanks, I have gotten around it using spherical coordinates: https://gist.github.com/dseuss/ad46faa1a7b461ba4b1aa9f96185584c",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/dseuss/ad46faa1a7b461ba4b1aa9f96185584c"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/jhale",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2894451?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2894451?v=3&s=60",
   "displayName": "Jack S. Hale",
   "gv": "3",
   "id": "58ede97ad73408ce4f57d37b",
   "url": "/jhale",
   "username": "jhale"
  },
  "html": "hi everyone! I&#39;m on the steering council of another NumFOCUS project for finite element models called FEniCS. I&#39;m interested in Bayesian inference problems in applied mechanics where the natural setting are the structure from infinite dimensional Banach spaces, e.g. Andrew Stuart&#39;s papers. I saw someone started working in pymc3 on gaussian process regression and I&#39;m kind of interested in lurking and seeing what&#39;s happening in pymc3 on this front.",
  "id": "58edeaac8bb56c2d119d5c03",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-04-12T08:51:56.103Z",
  "text": "hi everyone! I'm on the steering council of another NumFOCUS project for finite element models called FEniCS. I'm interested in Bayesian inference problems in applied mechanics where the natural setting are the structure from infinite dimensional Banach spaces, e.g. Andrew Stuart's papers. I saw someone started working in pymc3 on gaussian process regression and I'm kind of interested in lurking and seeing what's happening in pymc3 on this front.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jhale\" class=\"mention\">@jhale</span> sounds great, welcome",
  "id": "58eded2569a692963ea1b9e3",
  "issues": [],
  "mentions": [
   {
    "screenName": "jhale",
    "userId": "58ede97ad73408ce4f57d37b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2017-04-12T09:02:29.848Z",
  "text": "@jhale sounds great, welcome",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "Any idea why (different from pymc2) observations up-stream forcibly change the shape of deterministics? ",
  "id": "58ee8788bdf4acc112533006",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-04-12T20:01:12.914Z",
  "text": "Any idea why (different from pymc2) observations up-stream forcibly change the shape of deterministics? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "For some reason, setting observations on, say, x=pm.Normal(), and having another node like y=pm.Deterministic(f(x)) makes y have shape(n) where n is the number of observations of x",
  "id": "58ee87f98bb56c2d11a05426",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-04-12T20:03:05.437Z",
  "text": "For some reason, setting observations on, say, x=pm.Normal(), and having another node like y=pm.Deterministic(f(x)) makes y have shape(n) where n is the number of observations of x",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "I have a version of this in pymc2 that doesn&#39;t display this behavior. I can look at trace.get_values[&#39;y&#39;] as a single chain, not n chains",
  "id": "58ee883208c00c092a7512f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-04-12T20:04:02.719Z",
  "text": "I have a version of this in pymc2 that doesn't display this behavior. I can look at trace.get_values['y'] as a single chain, not n chains",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-04-12T20:20:35.129Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "My solution right now has been to use <code>y=pm.Deterministic(theano.tensor.mean(f(x)))</code> but this is rather clunky. ",
  "id": "58ee8bec8bb56c2d11a065ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-04-12T20:19:56.969Z",
  "text": "My solution right now has been to use `y=pm.Deterministic(theano.tensor.mean(f(x)))` but this is rather clunky. ",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "not sure what you mean, can you provide a minimal example?",
  "id": "58ef1e9769a692963ea6eaf8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-13T06:45:43.200Z",
  "text": "not sure what you mean, can you provide a minimal example?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "<pre><code class=\"python\"><span class=\"keyword\">from</span> pymc3.math <span class=\"keyword\">import</span> sin, cos, sqrt\n<span class=\"comment\">#synthetic test throws</span>\nnp.random.seed(<span class=\"number\">19806</span>) <span class=\"comment\">#random.org</span>\nv_obsv = np.random.normal(loc=<span class=\"number\">28.</span>, scale=<span class=\"number\">1.</span>, size=<span class=\"number\">10.</span>)  <span class=\"comment\"># m/s</span>\n\n<span class=\"comment\">#gravity</span>\ng = <span class=\"number\">9.81</span>  <span class=\"comment\"># m/s**2</span>\n\n<span class=\"keyword\">with</span> pm.Model() <span class=\"keyword\">as</span> projectile_model:\n    th = pm.Uniform(<span class=\"string\">'theta'</span>, np.pi/<span class=\"number\">4.</span>-.<span class=\"number\">2</span>, np.pi/<span class=\"number\">4.</span>+.<span class=\"number\">2</span>) <span class=\"comment\"># close to 45deg</span>\n    y_0 = pm.Uniform(<span class=\"string\">'height'</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>)  <span class=\"comment\"># about man-height</span>\n\n    v_mu = pm.Uniform(<span class=\"string\">'v_mean'</span>, <span class=\"number\">1</span>, <span class=\"number\">30</span>) <span class=\"comment\"># from slow to best known </span>\n    v_sd = pm.HalfCauchy(<span class=\"string\">'v_sd'</span>, <span class=\"number\">5.</span>)\n    v = pm.Normal(<span class=\"string\">'velocity'</span>, v_mu, v_sd, observed = v_obsv)\n\n    <span class=\"comment\"># known trajectory equation</span>\n    d = pm.Deterministic(<span class=\"string\">'distance'</span>, v*cos(th)*\\\n                         (v*sin(th) + sqrt((v*sin(th))**<span class=\"number\">2</span>+<span class=\"number\">2</span>*g*y_0))/g)\n<span class=\"keyword\">with</span> projectile_model:\n    step=pm.Metropolis()\n    proj_trace=pm.sample(<span class=\"number\">2000</span>, step=step)\n\npm.traceplot(proj_trace[<span class=\"number\">1000</span>:]);</code></pre>",
  "id": "58efd9b78e4b63533dc76c30",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-13T20:04:07.742Z",
  "text": "```python\nfrom pymc3.math import sin, cos, sqrt\n#synthetic test throws\nnp.random.seed(19806) #random.org\nv_obsv = np.random.normal(loc=28., scale=1., size=10.)  # m/s\n\n#gravity\ng = 9.81  # m/s**2\n\nwith pm.Model() as projectile_model:\n    th = pm.Uniform('theta', np.pi/4.-.2, np.pi/4.+.2) # close to 45deg\n    y_0 = pm.Uniform('height', 1, 2)  # about man-height\n    \n    v_mu = pm.Uniform('v_mean', 1, 30) # from slow to best known \n    v_sd = pm.HalfCauchy('v_sd', 5.)\n    v = pm.Normal('velocity', v_mu, v_sd, observed = v_obsv)\n    \n    # known trajectory equation\n    d = pm.Deterministic('distance', v*cos(th)*\\\n                         (v*sin(th) + sqrt((v*sin(th))**2+2*g*y_0))/g)\nwith projectile_model:\n    step=pm.Metropolis()\n    proj_trace=pm.sample(2000, step=step)\n    \npm.traceplot(proj_trace[1000:]);\n    \n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "Say I want to estimate the spread of a thrower&#39;s distance, but I only have a radar gun aimed at the location the ball leaves his hand. ",
  "id": "58efd9e6b52518ed4d0c4041",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-13T20:04:54.906Z",
  "text": "Say I want to estimate the spread of a thrower's distance, but I only have a radar gun aimed at the location the ball leaves his hand. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "I have some reasonable assumptions for aleatory things like his height, the angle he throws at to maximize distance, etc. I place priors on the loc/scale of his velocity distribution, and set the observations (10 of them). Then I calculate the distance deterministically from the variables. ",
  "id": "58efda8408c00c092a7aaee9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-13T20:07:32.991Z",
  "text": "I have some reasonable assumptions for aleatory things like his height, the angle he throws at to maximize distance, etc. I place priors on the loc/scale of his velocity distribution, and set the observations (10 of them). Then I calculate the distance deterministically from the variables. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "Except here, you will get 10 traces for &#39;distance&#39;",
  "id": "58efda988e4b63533dc76f9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-13T20:07:52.143Z",
  "text": "Except here, you will get 10 traces for 'distance'",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "That behavior didn&#39;t exist in pymc2 as far as I can tell. ",
  "id": "58efdaa84cb8d091738aa4c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-13T20:08:08.989Z",
  "text": "That behavior didn't exist in pymc2 as far as I can tell. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "I <em>can</em> use <code>mean(v*cos(th)*\\\n                         (v*sin(th) + sqrt((v*sin(th))**2+2*g*y_0))/g)</code> from <code>theano.tensor.mean</code>, but I want to model the distance itself, not its mean. ",
  "id": "58efdb39ad849bcf42803aa5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-13T20:10:33.427Z",
  "text": "I *can* use `mean(v*cos(th)*\\\n                         (v*sin(th) + sqrt((v*sin(th))**2+2*g*y_0))/g)` from `theano.tensor.mean`, but I want to model the distance itself, not its mean. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> Also, if I try to assign some sort of distribution on <code>d</code>, say, a normal (which doesn&#39;t make sense due to the cut-off at max throw dist), I get a TypeError: <pre><code class=\"python\">TypeError: For compute_test_value, one input test value does <span class=\"keyword\">not</span> have the requested type.\n\nThe error when converting the test value to that variable type:\nWrong number of dimensions: expected <span class=\"number\">0</span>, got <span class=\"number\">1</span> <span class=\"keyword\">with</span> shape (<span class=\"number\">10L</span>,).</code></pre>",
  "id": "58efdc3f8e4b63533dc776af",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-13T20:14:55.017Z",
  "text": "@twiecki Also, if I try to assign some sort of distribution on `d`, say, a normal (which doesn't make sense due to the cut-off at max throw dist), I get a TypeError: \n```python\nTypeError: For compute_test_value, one input test value does not have the requested type.\n\nThe error when converting the test value to that variable type:\nWrong number of dimensions: expected 0, got 1 with shape (10L,).\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "if you want to model the distance itself, you should do d = <code>pm.Deterministic(&#39;distance&#39;, v_mu*cos(th)*\\\n                         (v_mu*sin(th) + sqrt((v_mu*sin(th))**2+2*g*y_0))/g)</code>,  as <code>v_mu</code> is kind of like the <em>true</em> underly velocity.",
  "id": "58efe9d78fcce56b20fd2737",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-04-13T21:12:55.455Z",
  "text": "if you want to model the distance itself, you should do d = `pm.Deterministic('distance', v_mu*cos(th)*\\\n                         (v_mu*sin(th) + sqrt((v_mu*sin(th))**2+2*g*y_0))/g)`,  as `v_mu ` is kind of like the *true* underly velocity.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "Interesting. Of course, that works perfectly; however, what is the motivation behind that from a baysian sense? Any refs/reading I can do to see this in action elsewhere? I&#39;ve seen graphics from bayes-net papers call things like <code>v_mu</code> and <code>v_sd</code> &quot;callibration parameters&quot;, and they feed into a child node (which then feeds into some deterministic node).",
  "id": "58efecb2a0e485624200e6c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-04-13T21:25:06.753Z",
  "text": "Interesting. Of course, that works perfectly; however, what is the motivation behind that from a baysian sense? Any refs/reading I can do to see this in action elsewhere? I've seen graphics from bayes-net papers call things like `v_mu` and `v_sd` \"callibration parameters\", and they feed into a child node (which then feeds into some deterministic node).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "Also, does that mean that I should <em>always</em> have observed nodes as &quot;leaves&quot; of the graph? Let some up-stream &quot;true underlying&quot; variable be the thing passed down-stream? ",
  "id": "58efed45b52518ed4d0c90a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-04-13T21:27:33.959Z",
  "text": "Also, does that mean that I should *always* have observed nodes as \"leaves\" of the graph? Let some up-stream \"true underlying\" variable be the thing passed down-stream? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "I can imagine a scenario where (for example, theta or y_0 in the above) I wouldn&#39;t place a prior on the upper/lower bounds, but may still have observations of these &quot;root&quot; nodes. ",
  "id": "58efefc308c00c092a7b00c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-04-13T21:38:11.027Z",
  "text": "I can imagine a scenario where (for example, theta or y_0 in the above) I wouldn't place a prior on the upper/lower bounds, but may still have observations of these \"root\" nodes. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/yonidonner",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/682754?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/682754?v=3&s=60",
   "displayName": "yonidonner",
   "gv": "3",
   "id": "58f003b1d73408ce4f584041",
   "url": "/yonidonner",
   "username": "yonidonner"
  },
  "html": "Is it still recommended practice to initialize NUTS (starting point and scaling) using ADVI? If so, how does that work with the new ADVI API? I failed to find an example anywhere. Thanks!",
  "id": "58f0043c408f90be66bafdbc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 32,
  "sent": "2017-04-13T23:05:32.704Z",
  "text": "Is it still recommended practice to initialize NUTS (starting point and scaling) using ADVI? If so, how does that work with the new ADVI API? I failed to find an example anywhere. Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I&#39;m currently working on this. ",
  "id": "58f0068b8e4b63533dc81b33",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 32,
  "sent": "2017-04-13T23:15:23.484Z",
  "text": "I'm currently working on this. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"tbsexton\" class=\"mention\">@tbsexton</span><br>From my understanding, observed variables/node are not uncertain, so when you do </p><pre><code>d = pm.<span class=\"function\"><span class=\"title\">Deterministic</span><span class=\"params\">(<span class=\"string\">'distance'</span>, v*cos(th)</span></span>*\\\n                     (v*<span class=\"function\"><span class=\"title\">sin</span><span class=\"params\">(th)</span></span> + <span class=\"function\"><span class=\"title\">sqrt</span><span class=\"params\">((v*sin(th)</span></span>)**<span class=\"number\">2</span>+<span class=\"number\">2</span>*g*y_0))/g)</code></pre><p>it&#39;s as if you are doing </p><pre><code>d = v_obsv *<span class=\"function\"><span class=\"title\">cos</span><span class=\"params\">(th)</span></span>*(v_obsv *<span class=\"function\"><span class=\"title\">sin</span><span class=\"params\">(th)</span></span> + <span class=\"function\"><span class=\"title\">sqrt</span><span class=\"params\">((v_obsv *sin(th)</span></span>)**<span class=\"number\">2</span>+<span class=\"number\">2</span>*g*y_0))/g</code></pre><p>The uncertainty is from the other unobserved node.<br>In general, you used observation to reduce uncertainty. So in your graph, any node with observed but no prior it just becomes a constant in the loglikelihood . If you want to inference it you need to represent the parameter as a node.</p>",
  "id": "58f0774fa0e485624202bd31",
  "issues": [],
  "mentions": [
   {
    "screenName": "tbsexton",
    "userId": "55e53ed50fc9f982beaf3f4f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 33,
  "sent": "2017-04-14T07:16:31.186Z",
  "text": "@tbsexton \nFrom my understanding, observed variables/node are not uncertain, so when you do \n```\nd = pm.Deterministic('distance', v*cos(th)*\\\n                     (v*sin(th) + sqrt((v*sin(th))**2+2*g*y_0))/g)\n```\nit's as if you are doing \n```\nd = v_obsv *cos(th)*(v_obsv *sin(th) + sqrt((v_obsv *sin(th))**2+2*g*y_0))/g\n```\nThe uncertainty is from the other unobserved node.\nIn general, you used observation to reduce uncertainty. So in your graph, any node with observed but no prior it just becomes a constant in the loglikelihood . If you want to inference it you need to represent the parameter as a node.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/jonsjoberg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11414302?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11414302?v=3&s=60",
   "displayName": "jonsjoberg",
   "gv": "3",
   "id": "5765175ec2f0db084a1e94d2",
   "url": "/jonsjoberg",
   "username": "jonsjoberg",
   "v": 6
  },
  "html": "Have I understood it correctly, that the advi that is used in PyMC3 is using mean-field gaussian approximation? Is it possible to use full-rank instead? ",
  "id": "58f497b58bb56c2d11b5f272",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 32,
  "sent": "2017-04-17T10:23:49.809Z",
  "text": "Have I understood it correctly, that the advi that is used in PyMC3 is using mean-field gaussian approximation? Is it possible to use full-rank instead? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jonsjoberg\" class=\"mention\">@jonsjoberg</span> correct, we do have full-rank but it&#39;s still experimental",
  "id": "58f49926d32c6f2f0912ea61",
  "issues": [],
  "mentions": [
   {
    "screenName": "jonsjoberg",
    "userId": "5765175ec2f0db084a1e94d2",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 32,
  "sent": "2017-04-17T10:29:58.080Z",
  "text": "@jonsjoberg correct, we do have full-rank but it's still experimental",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ferrine\" class=\"mention\">@ferrine</span> can probably post some example code",
  "id": "58f499308bb56c2d11b5f84d",
  "issues": [],
  "mentions": [
   {
    "screenName": "ferrine",
    "userId": "581e3155d73408ce4f33e027",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 32,
  "sent": "2017-04-17T10:30:08.472Z",
  "text": "@ferrine can probably post some example code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-04-17T21:23:14.017Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jonsjoberg\" class=\"mention\">@jonsjoberg</span> The only difference in code is calling <code>FullRankADVI</code> instead of  just <code>ADVI</code>. It will be much slower on large models.",
  "id": "58f5320ef22385553d4e1311",
  "issues": [],
  "mentions": [
   {
    "screenName": "jonsjoberg",
    "userId": "5765175ec2f0db084a1e94d2",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 31,
  "sent": "2017-04-17T21:22:22.687Z",
  "text": "@jonsjoberg The only difference in code is calling `FullRankADVI` instead of  just `ADVI`. It will be much slower on large models.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/jonsjoberg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11414302?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11414302?v=3&s=60",
   "displayName": "jonsjoberg",
   "gv": "3",
   "id": "5765175ec2f0db084a1e94d2",
   "url": "/jonsjoberg",
   "username": "jonsjoberg",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ferrine\" class=\"mention\">@ferrine</span> Cool, have you done any speed comparisons against NUTS(/other mcmc)?  ",
  "id": "58f5b4fa8bb56c2d11ba5e3a",
  "issues": [],
  "mentions": [
   {
    "screenName": "ferrine",
    "userId": "581e3155d73408ce4f33e027",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 30,
  "sent": "2017-04-18T06:40:58.434Z",
  "text": "@ferrine Cool, have you done any speed comparisons against NUTS(/other mcmc)?  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jonsjoberg\" class=\"mention\">@jonsjoberg</span> I was experimenting on neural networks. NUTS doesn&#39;t work well there. I considered that ADVI &gt;FullRankADVI&gt;SVGD for such problems. If comparing speed ofc.",
  "id": "58f722dc881b89e10164ee90",
  "issues": [],
  "mentions": [
   {
    "screenName": "jonsjoberg",
    "userId": "5765175ec2f0db084a1e94d2",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 30,
  "sent": "2017-04-19T08:42:04.608Z",
  "text": "@jonsjoberg I was experimenting on neural networks. NUTS doesn't work well there. I considered that ADVI >FullRankADVI>SVGD for such problems. If comparing speed ofc.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "Is there a quick way to add constrain on the model logp such as Jacobian Adjustment from transformed parameters? I am doing it via creating a custom logp now, wondering if there is something similar to increment_log_prob in STAN",
  "id": "58fe0fd86aea30763d398891",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-04-24T14:46:48.404Z",
  "text": "Is there a quick way to add constrain on the model logp such as Jacobian Adjustment from transformed parameters? I am doing it via creating a custom logp now, wondering if there is something similar to increment_log_prob in STAN",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "pm.Potential?",
  "id": "58fe1011881b89e1017f0bf2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-04-24T14:47:45.309Z",
  "text": "pm.Potential?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> seems to work <a href=\"https://gist.github.com/junpenglao/e2b272b877068eba7525d1d21a6e618d\" rel=\"nofollow\" target=\"_blank\" class=\"link\">Gist</a>. Is it kind of the intended use case for <code>pm.Potential</code>? I havent quite figure it out.",
  "id": "58fe1a35cfec9192726dae69",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2017-04-24T15:31:01.988Z",
  "text": "@twiecki seems to work [Gist](https://gist.github.com/junpenglao/e2b272b877068eba7525d1d21a6e618d). Is it kind of the intended use case for `pm.Potential`? I havent quite figure it out.",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/junpenglao/e2b272b877068eba7525d1d21a6e618d"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"junpenglao\" class=\"mention\">@junpenglao</span> yes, it is for adding arbitrary log-prob terms to the model. Usually constraints. ",
  "id": "58fe3599d32c6f2f0937a180",
  "issues": [],
  "mentions": [
   {
    "screenName": "junpenglao",
    "userId": "56e8df4685d51f252ab907f1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2017-04-24T17:27:53.384Z",
  "text": "@junpenglao yes, it is for adding arbitrary log-prob terms to the model. Usually constraints. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> thanks! ",
  "id": "58fe3cd908c00c092aafc5c8",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2017-04-24T17:58:49.912Z",
  "text": "@fonnesbeck thanks! ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/hawk31",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6875576?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6875576?v=4&s=60",
   "displayName": "Jos\u00e9 Jim\u00e9nez",
   "gv": "4",
   "id": "58ff4ca9d73408ce4f5adf05",
   "url": "/hawk31",
   "username": "hawk31",
   "v": 3
  },
  "html": "Hi everyone! I&#39;ve developed a very basic Python package for Bayesian Optimization that uses pyMC3 for both building  and inference of Gaussian Processes. Feel free to check it out!<br> <a href=\"https://github.com/hawk31/pyGPGO\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/hawk31/pyGPGO</a>",
  "id": "58ff4dfbd32c6f2f093bebce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-04-25T13:24:11.473Z",
  "text": "Hi everyone! I've developed a very basic Python package for Bayesian Optimization that uses pyMC3 for both building  and inference of Gaussian Processes. Feel free to check it out!\n https://github.com/hawk31/pyGPGO",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/hawk31/pyGPGO"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "nice!",
  "id": "58ff9d3508c00c092ab571e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-04-25T19:02:13.807Z",
  "text": "nice!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-04-25T23:33:27.234Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "looks neat <span data-link-type=\"mention\" data-screen-name=\"hawk31\" class=\"mention\">@hawk31</span> ",
  "id": "58ffdcc308c00c092ab6840b",
  "issues": [],
  "mentions": [
   {
    "screenName": "hawk31",
    "userId": "58ff4ca9d73408ce4f5adf05",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-04-25T23:33:23.636Z",
  "text": "looks neat @hawk31 ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "Hello.   ",
  "id": "590067b3c1d3b50154203188",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-26T09:26:11.632Z",
  "text": "Hello.   ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "hi",
  "id": "590067c0881b89e10188b3b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-04-26T09:26:24.501Z",
  "text": "hi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-04-26T09:30:05.217Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "in Stan I define a priori for the parameter <code>Fc</code> as follows<br> <code>for (i in 1:nn) {\n        for (j in 1:nn) {\n            if (i&gt;=j) {   \n                FC[i, j] ~ gamma(fc_a, fc_b); \n            }\n        }\n    }</code>",
  "id": "590067d8c1d3b501542031f5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-04-26T09:26:48.739Z",
  "text": "in Stan I define a priori for the parameter `Fc` as follows\n ```for (i in 1:nn) {\n        for (j in 1:nn) {\n            if (i>=j) {   \n                FC[i, j] ~ gamma(fc_a, fc_b); \n            }\n        }\n    }```",
  "unread": false,
  "urls": [],
  "v": 5
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "I wonder what is equivalent in PYMC3?",
  "id": "59006806cfec919272773ea8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-04-26T09:27:34.996Z",
  "text": "I wonder what is equivalent in PYMC3?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Is Fc just a square matrix with independent elements?",
  "id": "5900689fd32c6f2f09408903",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-04-26T09:30:07.011Z",
  "text": "Is Fc just a square matrix with independent elements?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-04-26T09:31:14.446Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "yes it has dimension <code>(nn,nn)</code> ",
  "id": "590068c9c1d3b5015420370b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-26T09:30:49.864Z",
  "text": "yes it has dimension `(nn,nn)` ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "<code>pm.Gamma(\u2018Fc\u2019, fc_a, fc_b, shape=(nn, nn))</code> should work",
  "id": "590068dbc1d3b50154203790",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-26T09:31:07.705Z",
  "text": "`pm.Gamma(\u2018Fc\u2019, fc_a, fc_b, shape=(nn, nn))` should work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "Thanks Maxim. In fact I used this but I doubt to it due to my results.",
  "id": "590069208e4b63533d05cef0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-26T09:32:16.637Z",
  "text": "Thanks Maxim. In fact I used this but I doubt to it due to my results.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "hm, what was wrong?",
  "id": "5900693bc1d3b50154203b26",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-26T09:32:43.179Z",
  "text": "hm, what was wrong?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "becuse in Stan I define that for  <code>if (i&gt;=j)</code>,  but in pymc3 I can not define the <code>FC</code>,  element by element",
  "id": "5900697c587a245e244cc5e3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-26T09:33:48.864Z",
  "text": "becuse in Stan I define that for  `if (i>=j)`,  but in pymc3 I can not define the `FC`,  element by element",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "So it is triangular",
  "id": "59006997881b89e10188be37",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-26T09:34:15.462Z",
  "text": "So it is triangular",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "yes. for the lower triangular, I define something else",
  "id": "590069afc1d3b50154203f16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-04-26T09:34:39.559Z",
  "text": "yes. for the lower triangular, I define something else",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "you can create packed triangular vector and use this func <a href=\"https://github.com/pymc-devs/pymc3/blob/master/pymc3/math.py#L90\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/blob/master/pymc3/math.py#L90</a>",
  "id": "59006a2c6aea30763d432ded",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-04-26T09:36:44.626Z",
  "text": "you can create packed triangular vector and use this func https://github.com/pymc-devs/pymc3/blob/master/pymc3/math.py#L90",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/blob/master/pymc3/math.py#L90"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ferrine\" class=\"mention\">@ferrine</span> : thanks a lot",
  "id": "59006af4881b89e10188c4d6",
  "issues": [],
  "mentions": [
   {
    "screenName": "ferrine",
    "userId": "581e3155d73408ce4f33e027",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-04-26T09:40:04.771Z",
  "text": "@ferrine : thanks a lot",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-04-26T09:55:04.955Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "My  Stan code to  define <code>Fc</code> priori is <pre><code><span class=\"keyword\">for</span> (i <span class=\"keyword\">in</span> <span class=\"number\">1</span>:nn) {\n        <span class=\"keyword\">for</span> (j <span class=\"keyword\">in</span> <span class=\"number\">1</span>:nn) {\n            <span class=\"keyword\">if</span> (i&gt;=j) {\n                <span class=\"keyword\">if</span> ((i==j) || (SC[i, j]==<span class=\"number\">0.0</span>)) { \n                    u &lt;- <span class=\"number\">1</span>e-<span class=\"number\">6</span>;\n                    v &lt;- <span class=\"number\">1</span>e-<span class=\"number\">3</span>;\n                } <span class=\"keyword\">else</span> {\n                    u &lt;- SC[i, j]; \n                    v &lt;- u * SC_var;\n                }\n                <span class=\"built_in\">fc</span>_a &lt;- JJ(u, v); <span class=\"comment\"># JJ(u,v) is (u*sqrt(u * u + 4 * v) + u * u + 2 * v) / (2 * v);</span>\n                <span class=\"built_in\">fc</span>_b &lt;- JJ(<span class=\"built_in\">fc</span>_a, u);\n                FC[i, j] ~ gamma(<span class=\"built_in\">fc</span>_a, <span class=\"built_in\">fc</span>_b);   \n            }\n        }\n    }</code></pre>",
  "id": "59006c9f587a245e244cd4fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-04-26T09:47:11.738Z",
  "text": "My  Stan code to  define `Fc` priori is \n```\nfor (i in 1:nn) {\n        for (j in 1:nn) {\n            if (i>=j) {\n                if ((i==j) || (SC[i, j]==0.0)) { \n                    u <- 1e-6;\n                    v <- 1e-3;\n                } else {\n                    u <- SC[i, j]; \n                    v <- u * SC_var;\n                }\n                fc_a <- JJ(u, v); # JJ(u,v) is (u*sqrt(u * u + 4 * v) + u * u + 2 * v) / (2 * v);\n                fc_b <- JJ(fc_a, u);\n                FC[i, j] ~ gamma(fc_a, fc_b);   \n            }\n        }\n    }```",
  "unread": false,
  "urls": [],
  "v": 7
 },
 {
  "editedAt": "2017-04-26T09:57:21.081Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "this is the  equivalent in pymc3? <pre><code><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(nn): \n         <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(nn): \n            <span class=\"keyword\">if</span> (i&gt;=j): \n                <span class=\"keyword\">if</span> ((i==j) | (SC[i, j]==<span class=\"number\">0.0</span>)): \n                     u = <span class=\"number\">1</span>e-<span class=\"number\">6</span>\n                     v = <span class=\"number\">1</span>e-<span class=\"number\">3</span>\n                <span class=\"keyword\">else</span>: \n                     u =SC[i, j]\n                     v = u * SC_var                              \n                <span class=\"built_in\">fc</span>_a = JJ(u, v)\n                <span class=\"built_in\">fc</span>_b = JJ(<span class=\"built_in\">fc</span>_a, u)\n FC= pm.Gamma(<span class=\"string\">'FC'</span>, <span class=\"built_in\">fc</span>_a, <span class=\"built_in\">fc</span>_b, shape=(nn,nn))</code></pre>",
  "id": "59006d21587a245e244cd6a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-04-26T09:49:21.771Z",
  "text": "this is the  equivalent in pymc3? \n``` \nfor i in range(nn): \n         for j in range(nn): \n            if (i>=j): \n                if ((i==j) | (SC[i, j]==0.0)): \n                     u = 1e-6\n                     v = 1e-3\n                else: \n                     u =SC[i, j]\n                     v = u * SC_var                              \n                fc_a = JJ(u, v)\n                fc_b = JJ(fc_a, u)\n FC= pm.Gamma('FC', fc_a, fc_b, shape=(nn,nn))\n    ``` ",
  "unread": false,
  "urls": [],
  "v": 6
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "Thank you so much in advance for your help.",
  "id": "59006ebc8fcce56b203a9dfd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-04-26T09:56:12.536Z",
  "text": "Thank you so much in advance for your help.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "that\u2019s not equivalent",
  "id": "59006ee708c00c092ab8c7bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-04-26T09:56:55.899Z",
  "text": "that\u2019s not equivalent",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "where I made mistake?",
  "id": "59006f128fcce56b203aa07e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-04-26T09:57:38.290Z",
  "text": "where I made mistake?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "line -2 and -3, they do nothing most of the time",
  "id": "59006f328fcce56b203aa101",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-04-26T09:58:10.810Z",
  "text": "line -2 and -3, they do nothing most of the time",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "in the pymc code or both stan and pymc code?!",
  "id": "59006f858e4b63533d05ed34",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-04-26T09:59:33.765Z",
  "text": "in the pymc code or both stan and pymc code?!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "pymc3",
  "id": "59006f93881b89e10188d8b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-04-26T09:59:47.241Z",
  "text": "pymc3",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "if I understood well, you mean the problem is <code>fc_a</code> and <code>fc_b</code> ?",
  "id": "590070d18fcce56b203aa8e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-26T10:05:05.949Z",
  "text": "if I understood well, you mean the problem is ` fc_a` and ` fc_b` ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I have little free time to dive in, maybe you can reference to my code where I set up diagonal elements for cholesky matrix<br><a href=\"https://github.com/pymc-devs/pymc3/blob/master/pymc3/variational/approximations.py#L199\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/blob/master/pymc3/variational/approximations.py#L199</a>",
  "id": "59007106cfec919272776749",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-26T10:05:58.795Z",
  "text": "I have little free time to dive in, maybe you can reference to my code where I set up diagonal elements for cholesky matrix\nhttps://github.com/pymc-devs/pymc3/blob/master/pymc3/variational/approximations.py#L199",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/blob/master/pymc3/variational/approximations.py#L199"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "thank you.",
  "id": "5900712a8fcce56b203aab54",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-26T10:06:34.578Z",
  "text": "thank you.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "keep in mind that np.tril_indices is very powerful. You should separatly define non diagonal elements and diagonal, than pack them all at once",
  "id": "59007179881b89e10188e0f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-26T10:07:53.793Z",
  "text": "keep in mind that np.tril_indices is very powerful. You should separatly define non diagonal elements and diagonal, than pack them all at once",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "tha main problem is to keep track of indices",
  "id": "5900719312d24099359d250b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-26T10:08:19.050Z",
  "text": "tha main problem is to keep track of indices",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "thanks",
  "id": "590072168bb56c2d11e41d96",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-26T10:10:30.966Z",
  "text": "thanks\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-04-26T16:47:07.873Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "Hi again! In order to make a truncated gamma distribution as follows, I got an error!",
  "id": "5900ce8a8fcce56b203c8098",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-26T16:44:58.372Z",
  "text": "Hi again! In order to make a truncated gamma distribution as follows, I got an error!",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2017-04-26T16:50:09.978Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "<pre><code>with pm.<span class=\"function\"><span class=\"title\">Model</span><span class=\"params\">()</span></span> as model:\n     BoundedGamma = pm.<span class=\"function\"><span class=\"title\">Bound</span><span class=\"params\">(pm.Gamma, lower=<span class=\"number\">1.0</span>, upper=<span class=\"number\">10.0</span>)</span></span>\n     Kh = <span class=\"function\"><span class=\"title\">BoundedGamma</span><span class=\"params\">(<span class=\"string\">'Kh'</span>, alpha=<span class=\"number\">5</span>, beta=<span class=\"number\">1</span>, testval=<span class=\"number\">1</span>)</span></span></code></pre>",
  "id": "5900ce9e08c00c092abaac9e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-26T16:45:18.326Z",
  "text": "```\nwith pm.Model() as model:\n     BoundedGamma = pm.Bound(pm.Gamma, lower=1.0, upper=10.0)\n     Kh = BoundedGamma('Kh', alpha=5, beta=1, testval=1)\n```\n\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "<code>AttributeError: &#39;bool&#39; object has no attribute &#39;any&#39;</code>",
  "id": "5900cec012d24099359f04f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-26T16:45:52.147Z",
  "text": "`AttributeError: 'bool' object has no attribute 'any'`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-04-26T16:50:40.058Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "I think my problem is with <code>testval</code> no?! What is the solution? Thanks in advance.",
  "id": "5900cee4cfec919272795d47",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-26T16:46:28.699Z",
  "text": "I think my problem is with `testval` no?! What is the solution? Thanks in advance.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "You need to use <code>pm.Bound</code> differently, see <a href=\"https://github.com/pymc-devs/pymc3/issues/1858#issuecomment-284160333\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/issues/1858#issuecomment-284160333</a>",
  "id": "5900deb28e4b63533d083435",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-04-26T17:53:54.885Z",
  "text": "You need to use `pm.Bound` differently, see https://github.com/pymc-devs/pymc3/issues/1858#issuecomment-284160333",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/issues/1858#issuecomment-284160333"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"junpenglao\" class=\"mention\">@junpenglao</span> ",
  "id": "5901cdfe6aea30763d49276b",
  "issues": [],
  "mentions": [
   {
    "screenName": "junpenglao",
    "userId": "56e8df4685d51f252ab907f1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-27T10:54:54.528Z",
  "text": "Thanks @junpenglao ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-04-27T10:56:20.082Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "However with the following code, I get the same error!  ",
  "id": "5901ce26cfec9192727d6306",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-27T10:55:34.704Z",
  "text": "However with the following code, I get the same error!  ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "<pre><code>PositiveNormal = pm.<span class=\"function\"><span class=\"title\">Bound</span><span class=\"params\">(pm.Normal, lower=<span class=\"number\">0.0</span>, upper=np.inf)</span></span>\n\nwith pm.<span class=\"function\"><span class=\"title\">Model</span><span class=\"params\">()</span></span> as model:\n\n    l = <span class=\"function\"><span class=\"title\">PositiveNormal</span><span class=\"params\">(<span class=\"string\">\"l\"</span>, mu=<span class=\"number\">1</span>, sd=<span class=\"number\">5.0</span>)</span></span></code></pre>",
  "id": "5901ce358fcce56b204073f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-27T10:55:49.414Z",
  "text": "```\nPositiveNormal = pm.Bound(pm.Normal, lower=0.0, upper=np.inf)\n\nwith pm.Model() as model:\n    \n    l = PositiveNormal(\"l\", mu=1, sd=5.0)\n```\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "I used version 3.0",
  "id": "5901d05d12d2409935a31093",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-27T11:05:01.229Z",
  "text": "I used version 3.0",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "there is also pm.HalfNormal() not sure if it allows mu though. or LogNormal",
  "id": "5901d1c5f22385553d7fe615",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-27T11:11:01.224Z",
  "text": "there is also pm.HalfNormal() not sure if it allows mu though. or LogNormal",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mhashemi0873\" class=\"mention\">@mhashemi0873</span> can you upgarde to master?",
  "id": "5901d1cf6aea30763d493753",
  "issues": [],
  "mentions": [
   {
    "screenName": "mhashemi0873",
    "userId": "585011ced73408ce4f3cc9bb",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-27T11:11:11.866Z",
  "text": "@mhashemi0873 can you upgarde to master?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "yes.",
  "id": "5901d453587a245e24531d34",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-04-27T11:21:55.470Z",
  "text": "yes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-04-27T14:36:09.464Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "it works. Thanks a lot. ",
  "id": "590201bfcfec9192727e555f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-27T14:35:43.533Z",
  "text": "it works. Thanks a lot. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "<a href=\"http://stackoverflow.com/questions/32643549/how-to-make-a-truncated-normal-prior-converting-pymc2-to-pymc3/43660737#43660737\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://stackoverflow.com/questions/32643549/how-to-make-a-truncated-normal-prior-converting-pymc2-to-pymc3/43660737#43660737</a>",
  "id": "590201c58bb56c2d11eb078f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-27T14:35:49.152Z",
  "text": "http://stackoverflow.com/questions/32643549/how-to-make-a-truncated-normal-prior-converting-pymc2-to-pymc3/43660737#43660737",
  "unread": false,
  "urls": [
   {
    "url": "http://stackoverflow.com/questions/32643549/how-to-make-a-truncated-normal-prior-converting-pymc2-to-pymc3/43660737#43660737"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "I made a sort of wrapper using NetworkX and some Sympy magic to allow rapid prototyping and instantiation of bayes-nets using pymc3. check out some examples: <a href=\"https://github.com/usnistgov/pmml_pymcBN/blob/master/NX_pymc3_BayesNets.ipynb\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/usnistgov/pmml_pymcBN/blob/master/NX_pymc3_BayesNets.ipynb</a> ",
  "id": "5902580c08c00c092ac1527b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-04-27T20:43:56.871Z",
  "text": "I made a sort of wrapper using NetworkX and some Sympy magic to allow rapid prototyping and instantiation of bayes-nets using pymc3. check out some examples: https://github.com/usnistgov/pmml_pymcBN/blob/master/NX_pymc3_BayesNets.ipynb ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/usnistgov/pmml_pymcBN/blob/master/NX_pymc3_BayesNets.ipynb"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "This lets the graph-object be a middle-man between PyMC3 and any other potential formats for bayes-nets. ",
  "id": "59025830f22385553d828524",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-27T20:44:32.415Z",
  "text": "This lets the graph-object be a middle-man between PyMC3 and any other potential formats for bayes-nets. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "For a more complicated version (and what this was built for), see this welding model: <a href=\"https://github.com/usnistgov/pmml_pymcBN/blob/master/PMML_Weld_example.ipynb\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/usnistgov/pmml_pymcBN/blob/master/PMML_Weld_example.ipynb</a>",
  "id": "59025867881b89e101919048",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-27T20:45:27.979Z",
  "text": "For a more complicated version (and what this was built for), see this welding model: https://github.com/usnistgov/pmml_pymcBN/blob/master/PMML_Weld_example.ipynb",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/usnistgov/pmml_pymcBN/blob/master/PMML_Weld_example.ipynb"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "Still a WIP, so feel free to test it out or comment on functionality. ",
  "id": "590259f8d32c6f2f0949032b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-27T20:52:08.001Z",
  "text": "Still a WIP, so feel free to test it out or comment on functionality. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that looks great",
  "id": "59026387587a245e2455dce8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-04-27T21:32:55.828Z",
  "text": "that looks great",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-04-30T23:56:49.169Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/weitzenfeld_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9_bigger.jpeg",
   "displayName": "Daniel Weitzenfeld",
   "id": "578e947ac2f0db084a23bde6",
   "url": "/weitzenfeld_twitter",
   "username": "weitzenfeld_twitter"
  },
  "html": "Hi everybody... Michael Betancourt tweeted this yesterday (<a href=\"https://twitter.com/betanalpha/status/858502082403414017\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://twitter.com/betanalpha/status/858502082403414017</a>)",
  "id": "5906795c12d2409935b3d577",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-04-30T23:55:08.384Z",
  "text": "Hi everybody... Michael Betancourt tweeted this yesterday (https://twitter.com/betanalpha/status/858502082403414017)",
  "unread": false,
  "urls": [
   {
    "url": "https://twitter.com/betanalpha/status/858502082403414017"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/weitzenfeld_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9_bigger.jpeg",
   "displayName": "Daniel Weitzenfeld",
   "id": "578e947ac2f0db084a23bde6",
   "url": "/weitzenfeld_twitter",
   "username": "weitzenfeld_twitter"
  },
  "html": "<a href=\"https://twitter.com/betanalpha/status/858502320409149440\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://twitter.com/betanalpha/status/858502320409149440</a>",
  "id": "5906796c12d2409935b3d5aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-04-30T23:55:24.803Z",
  "text": "https://twitter.com/betanalpha/status/858502320409149440",
  "unread": false,
  "urls": [
   {
    "url": "https://twitter.com/betanalpha/status/858502320409149440"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/weitzenfeld_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9_bigger.jpeg",
   "displayName": "Daniel Weitzenfeld",
   "id": "578e947ac2f0db084a23bde6",
   "url": "/weitzenfeld_twitter",
   "username": "weitzenfeld_twitter"
  },
  "html": "I&#39;m trying to understand what he means... and if there&#39;s anything I, as a user of pymc3, need to beware of based on it",
  "id": "5906798ac1d3b5015437aace",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-04-30T23:55:54.350Z",
  "text": "I'm trying to understand what he means... and if there's anything I, as a user of pymc3, need to beware of based on it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "I think that&#39;s a pretty hyperbolic comment. Expecting users to learn a compiled language in order to specify &quot;valid probabilistic models&quot; is neither reasonable nor realistic. Most people should be using high-level languages, full stop. ",
  "id": "5906911ad32c6f2f09576b91",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-01T01:36:26.693Z",
  "text": "I think that's a pretty hyperbolic comment. Expecting users to learn a compiled language in order to specify \"valid probabilistic models\" is neither reasonable nor realistic. Most people should be using high-level languages, full stop. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Python is strongly typed, justification he cites is not a good one. Python&#39;s typing is dynamic, but its strong. ",
  "id": "590692506aea30763d5a6f1a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-01T01:41:36.702Z",
  "text": "Python is strongly typed, justification he cites is not a good one. Python's typing is dynamic, but its strong. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/weitzenfeld_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9_bigger.jpeg",
   "displayName": "Daniel Weitzenfeld",
   "id": "578e947ac2f0db084a23bde6",
   "url": "/weitzenfeld_twitter",
   "username": "weitzenfeld_twitter"
  },
  "html": "thanks Chris... i don&#39;t understand the specific link between typing and probabilistic programming",
  "id": "590695b3881b89e101a00038",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-01T01:56:03.104Z",
  "text": "thanks Chris... i don't understand the specific link between typing and probabilistic programming",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/weitzenfeld_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9_bigger.jpeg",
   "displayName": "Daniel Weitzenfeld",
   "id": "578e947ac2f0db084a23bde6",
   "url": "/weitzenfeld_twitter",
   "username": "weitzenfeld_twitter"
  },
  "html": "i.e., what is it about probabilistic programming that (according to him) requires strong typing",
  "id": "590695e48e4b63533d1d456e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-05-01T01:56:52.049Z",
  "text": "i.e., what is it about probabilistic programming that (according to him) requires strong typing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "I don&#39;t know. I&#39;ve never heard that claim before.",
  "id": "590696c0587a245e246470fb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-05-01T02:00:32.436Z",
  "text": "I don't know. I've never heard that claim before.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "The tweet was posted at 9pm on a Saturday, so he and Daniel may have been drinking cocktails.",
  "id": "590696fc6aea30763d5a7ba2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-05-01T02:01:32.656Z",
  "text": "The tweet was posted at 9pm on a Saturday, so he and Daniel may have been drinking cocktails.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/weitzenfeld_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9_bigger.jpeg",
   "displayName": "Daniel Weitzenfeld",
   "id": "578e947ac2f0db084a23bde6",
   "url": "/weitzenfeld_twitter",
   "username": "weitzenfeld_twitter"
  },
  "html": "hah",
  "id": "5906976512d2409935b42ba7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-05-01T02:03:17.408Z",
  "text": "hah",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "agree with Chris. a better statement would be: &quot;Unfortunately, Stan does not have an explicit representation of the model compute graph which makes it terrible for probabilistic programming&quot; ;)",
  "id": "59071e4c8bb56c2d11fd3d7d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-05-01T11:38:52.315Z",
  "text": "agree with Chris. a better statement would be: \"Unfortunately, Stan does not have an explicit representation of the model compute graph which makes it terrible for probabilistic programming\" ;)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "the compute graph gives pymc3 simplifications, computational re-expressions for more numerical accuracy, symbolic autodiff, smart caching, and GPU support",
  "id": "59071ec38e4b63533d1efb0b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-05-01T11:40:51.608Z",
  "text": "the compute graph gives pymc3 simplifications, computational re-expressions for more numerical accuracy, symbolic autodiff, smart caching, and GPU support",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/weitzenfeld_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/477182606224551936/pB3FBaC9_bigger.jpeg",
   "displayName": "Daniel Weitzenfeld",
   "id": "578e947ac2f0db084a23bde6",
   "url": "/weitzenfeld_twitter",
   "username": "weitzenfeld_twitter"
  },
  "html": ":thumbsup: ",
  "id": "590739a2d32c6f2f0959a556",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-05-01T13:35:30.095Z",
  "text": ":thumbsup: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pwl",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/72500?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/72500?v=4&s=60",
   "displayName": "Pawe\u0142 Biernat",
   "gv": "4",
   "id": "576d2be0c2f0db084a1fb47f",
   "url": "/pwl",
   "username": "pwl",
   "v": 7
  },
  "html": "Hi! How can I access the docs from the master branch?",
  "id": "5908a053881b89e101a7d500",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-05-02T15:05:55.842Z",
  "text": "Hi! How can I access the docs from the master branch?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pwl",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/72500?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/72500?v=4&s=60",
   "displayName": "Pawe\u0142 Biernat",
   "gv": "4",
   "id": "576d2be0c2f0db084a1fb47f",
   "url": "/pwl",
   "username": "pwl",
   "v": 7
  },
  "html": "I can only get to the 3.0 release docs when I follow the link in README.md",
  "id": "5908a0716aea30763d627c81",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-05-02T15:06:25.735Z",
  "text": "I can only get to the 3.0 release docs when I follow the link in README.md",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pwl",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/72500?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/72500?v=4&s=60",
   "displayName": "Pawe\u0142 Biernat",
   "gv": "4",
   "id": "576d2be0c2f0db084a1fb47f",
   "url": "/pwl",
   "username": "pwl",
   "v": 7
  },
  "html": "I have some trouble understanding the <code>total_size</code> parameter and there is no mention of it in the docs.  From the examples I have seen so far the parameter should be set to the total size of the training data when doing mini-batch training.  This is simple to interpret if the data is just a 1d array but what should I use if I&#39;m training a model on views of 2d data (subsampling in both dimensions)?  Should I then use <code>total_size=data.shape[0]*data.shape[1]</code>?",
  "id": "590b44fddbeff5647319edbd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-04T15:13:01.568Z",
  "text": "I have some trouble understanding the `total_size` parameter and there is no mention of it in the docs.  From the examples I have seen so far the parameter should be set to the total size of the training data when doing mini-batch training.  This is simple to interpret if the data is just a 1d array but what should I use if I'm training a model on views of 2d data (subsampling in both dimensions)?  Should I then use `total_size=data.shape[0]*data.shape[1]`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "hm, good question. <span data-link-type=\"mention\" data-screen-name=\"ferrine\" class=\"mention\">@ferrine</span> or <span data-link-type=\"mention\" data-screen-name=\"taku-y\" class=\"mention\">@taku-y</span> would know",
  "id": "590b4677734cd4454d1c67ec",
  "issues": [],
  "mentions": [
   {
    "screenName": "ferrine",
    "userId": "581e3155d73408ce4f33e027",
    "userIds": []
   },
   {
    "screenName": "taku-y",
    "userId": "57497d60c43b8c6019756ee7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 25,
  "sent": "2017-05-04T15:19:19.747Z",
  "text": "hm, good question. @ferrine or @taku-y would know",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "total_size takes shape[0]",
  "id": "590b476cbedc54b621c9500d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-05-04T15:23:24.286Z",
  "text": "total_size takes shape[0]",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pwl",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/72500?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/72500?v=4&s=60",
   "displayName": "Pawe\u0142 Biernat",
   "gv": "4",
   "id": "576d2be0c2f0db084a1fb47f",
   "url": "/pwl",
   "username": "pwl",
   "v": 7
  },
  "html": "what if I&#39;m subsampling data along the second dimension?",
  "id": "590b47fcd346fab721bac709",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-04T15:25:48.912Z",
  "text": "what if I'm subsampling data along the second dimension?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pwl",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/72500?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/72500?v=4&s=60",
   "displayName": "Pawe\u0142 Biernat",
   "gv": "4",
   "id": "576d2be0c2f0db084a1fb47f",
   "url": "/pwl",
   "username": "pwl",
   "v": 7
  },
  "html": "(I&#39;m working on a matrix factorization model and I figured I should subsample in both dimensions, as the model is symmetric w.r.t. transposition of the data)",
  "id": "590b4841e1b61e93281184d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-04T15:26:57.264Z",
  "text": "(I'm working on a matrix factorization model and I figured I should subsample in both dimensions, as the model is symmetric w.r.t. transposition of the data)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "interesting case",
  "id": "590b4900e1b61e93281187f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-05-04T15:30:08.949Z",
  "text": "interesting case",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-05-04T15:31:27.872Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I wonder if we can add list of ints for dimensions",
  "id": "590b4946e3b0d4e353bf5acf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-04T15:31:18.737Z",
  "text": "I wonder if we can add list of ints for dimensions",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pwl",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/72500?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/72500?v=4&s=60",
   "displayName": "Pawe\u0142 Biernat",
   "gv": "4",
   "id": "576d2be0c2f0db084a1fb47f",
   "url": "/pwl",
   "username": "pwl",
   "v": 7
  },
  "html": "Should I post it as a documentation issue?",
  "id": "590b494ee3b0d4e353bf5af1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-05-04T15:31:26.104Z",
  "text": "Should I post it as a documentation issue?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-05-04T15:34:13.937Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "You can propose the following feature: <pre><code class=\"python\">total_size = int <span class=\"comment\"># for shape[0] subsampling</span>\ntotal_size = [int, <span class=\"keyword\">None</span>, int] <span class=\"comment\"># for subsampling [shape[0], shape[2]]</span>\ntotal_size = [int, <span class=\"built_in\">Ellipsis</span>, int] <span class=\"comment\"># for subsampling [shape[0], shape[-1]]</span></code></pre>",
  "id": "590b49d610a6a16673e0fc6e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-04T15:33:42.341Z",
  "text": "You can propose the following feature: \n```python\ntotal_size = int # for shape[0] subsampling\ntotal_size = [int, None, int] # for subsampling [shape[0], shape[2]]\ntotal_size = [int, Ellipsis, int] # for subsampling [shape[0], shape[-1]]\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I hope it can cover all use cases",
  "id": "590b4a054d51a79e643c04fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-04T15:34:29.349Z",
  "text": "I hope it can cover all use cases",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "your case for total size will look like<pre><code><span class=\"keyword\">total_size</span> =<span class=\"sqbracket\"> [tot1, tot2]</span></code></pre>",
  "id": "590b4a47e3b0d4e353bf5ed6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-04T15:35:35.169Z",
  "text": "your case for total size will look like\n```\ntotal_size = [tot1, tot2]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pwl",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/72500?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/72500?v=4&s=60",
   "displayName": "Pawe\u0142 Biernat",
   "gv": "4",
   "id": "576d2be0c2f0db084a1fb47f",
   "url": "/pwl",
   "username": "pwl",
   "v": 7
  },
  "html": "thanks!  I added an issue",
  "id": "590b4ab7e3b0d4e353bf6240",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-05-04T15:37:27.006Z",
  "text": "thanks!  I added an issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pwl",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/72500?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/72500?v=4&s=60",
   "displayName": "Pawe\u0142 Biernat",
   "gv": "4",
   "id": "576d2be0c2f0db084a1fb47f",
   "url": "/pwl",
   "username": "pwl",
   "v": 7
  },
  "html": "does it mean that for the time being I should only sample my data in one dimension?",
  "id": "590b4ace594c95a5642e66c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-05-04T15:37:50.931Z",
  "text": "does it mean that for the time being I should only sample my data in one dimension?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "yes",
  "id": "590b4aded346fab721bad35c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-04T15:38:06.219Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "other cases are yet uncovered",
  "id": "590b4aece1b61e932811946d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-04T15:38:20.153Z",
  "text": "other cases are yet uncovered",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "if it is possible to reformulate model to 1d it will work",
  "id": "590b4b0ae3b0d4e353bf63e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-04T15:38:50.585Z",
  "text": "if it is possible to reformulate model to 1d it will work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pwl",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/72500?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/72500?v=4&s=60",
   "displayName": "Pawe\u0142 Biernat",
   "gv": "4",
   "id": "576d2be0c2f0db084a1fb47f",
   "url": "/pwl",
   "username": "pwl",
   "v": 7
  },
  "html": "I&#39;ll do that, thanks again",
  "id": "590b4b8710a6a16673e10510",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-04T15:40:55.051Z",
  "text": "I'll do that, thanks again",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"tbsexton\" class=\"mention\">@tbsexton</span> any reason why you created a new API on top?",
  "id": "590ba2c85c89dc5361780f94",
  "issues": [],
  "mentions": [
   {
    "screenName": "tbsexton",
    "userId": "55e53ed50fc9f982beaf3f4f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 25,
  "sent": "2017-05-04T21:53:12.618Z",
  "text": "@tbsexton any reason why you created a new API on top?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/u/schluedj",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2218369?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2218369?v=3&s=60",
   "displayName": "David",
   "id": "58bdc0b3d73408ce4f4ece24",
   "url": "/schluedj",
   "username": "schluedj"
  },
  "html": "<p>Hi Everyone, I have a question about using the DataSampler generator in a loop. I&#39;ve got a model for which I&#39;d like to use full rank advi with minibatch in a simulation. I&#39;m stuck on how to properly define a shared variable for the portion of the model that takes in the minibatches. If I were just putting in new data, I would just update a pre defined shared variable outside of the loop using set_value. However, since my model&#39;s observed variable is dependent on a generator, I&#39;m not sure how to update the mini batches with each new simulation. My code is in the following format currently:</p><pre><code class=\"python\">X_full = theano.shared(X, borrow=<span class=\"keyword\">True</span>)\nY_full = theano.shared(Y, borrow=<span class=\"keyword\">True</span>)`\n\nX_minibatch = pm.DataSampler(X_full.get_value())\nY_minibatch = pm.DataSampler(Y_full.get_value())\n\n<span class=\"keyword\">with</span> pm.Model() <span class=\"keyword\">as</span> model:\n     <span class=\"comment\"># model here ...</span>\n    ...\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">logp</span><span class=\"params\">(Y, X)</span>:</span>\n        <span class=\"comment\"># Whatever function of X and Y and params </span>\n        <span class=\"keyword\">return</span>(likelihood)\n    like = pm.DensityDist(<span class=\"string\">'like'</span>, logp, observed={<span class=\"string\">'Y'</span>: minibatch_Y, <span class=\"string\">'X'</span>: minibatch_X})\n<span class=\"comment\"># Could normally do pm.fit here, but I'd like to put it in a loop</span>\n<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">200</span>):\n    X_full.set_value(new_X)\n    Y_full.set_value(new_Y)\n     <span class=\"comment\">## Once I've set the new values in Y_full and X_full,</span>\n     <span class=\"comment\">## how do I make it so that X_minibatch and Y_minibatch update with minibatches from</span>\n     <span class=\"comment\">## new_X and new_Y?</span>\n    <span class=\"keyword\">with</span> model:\n        approx = pm.fit(<span class=\"number\">40000</span>, method = <span class=\"string\">\"fullrank_advi\"</span>)</code></pre><p>I&#39;d like to know what I ought to put in the loop with respect to minibatch_Y and minibatch_X parts of the model so that they update with samples from new_X and new_Y. </p><p>Thanks! </p>",
  "id": "590cca6bc4d73f445a79b9a0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-05-05T18:54:35.447Z",
  "text": "Hi Everyone, I have a question about using the DataSampler generator in a loop. I've got a model for which I'd like to use full rank advi with minibatch in a simulation. I'm stuck on how to properly define a shared variable for the portion of the model that takes in the minibatches. If I were just putting in new data, I would just update a pre defined shared variable outside of the loop using set_value. However, since my model's observed variable is dependent on a generator, I'm not sure how to update the mini batches with each new simulation. My code is in the following format currently:\n\n```python\nX_full = theano.shared(X, borrow=True)\nY_full = theano.shared(Y, borrow=True)`\n\nX_minibatch = pm.DataSampler(X_full.get_value())\nY_minibatch = pm.DataSampler(Y_full.get_value())\n\nwith pm.Model() as model:\n     # model here ...\n    ...\n    def logp(Y, X):\n        # Whatever function of X and Y and params \n        return(likelihood)\n    like = pm.DensityDist('like', logp, observed={'Y': minibatch_Y, 'X': minibatch_X})\n# Could normally do pm.fit here, but I'd like to put it in a loop\nfor i in range(200):\n    X_full.set_value(new_X)\n    Y_full.set_value(new_Y)\n     ## Once I've set the new values in Y_full and X_full,\n     ## how do I make it so that X_minibatch and Y_minibatch update with minibatches from\n     ## new_X and new_Y?\n    with model:\n        approx = pm.fit(40000, method = \"fullrank_advi\")\n```\nI'd like to know what I ought to put in the loop with respect to minibatch_Y and minibatch_X parts of the model so that they update with samples from new_X and new_Y. \n\nThanks! \n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/u/schluedj",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2218369?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2218369?v=3&s=60",
   "displayName": "David",
   "id": "58bdc0b3d73408ce4f4ece24",
   "url": "/schluedj",
   "username": "schluedj"
  },
  "html": "Hey all, adding the DataSampler in the model specification and just updating with new data through set_value does the trick. So nevermind everything&#39;s good",
  "id": "590d15f65c89dc53617dd586",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-05-06T00:16:54.759Z",
  "text": "Hey all, adding the DataSampler in the model specification and just updating with new data through set_value does the trick. So nevermind everything's good",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Gelato release v0.1.0, bayesian convolutional MNIST example <a href=\"https://twitter.com/ferrine96/status/861572233969487872\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://twitter.com/ferrine96/status/861572233969487872</a>",
  "id": "59108b7b2b926f8a6733f3e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-05-08T15:15:07.430Z",
  "text": "Gelato release v0.1.0, bayesian convolutional MNIST example https://twitter.com/ferrine96/status/861572233969487872",
  "unread": false,
  "urls": [
   {
    "url": "https://twitter.com/ferrine96/status/861572233969487872"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "good morning. anyone around?",
  "id": "59109cd08a05641b1160a006",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-05-08T16:29:04.489Z",
  "text": "good morning. anyone around?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "hey abe, long time no see",
  "id": "59109dc8c89bb14b5ae195cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-05-08T16:33:12.772Z",
  "text": "hey abe, long time no see",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": ":)",
  "id": "59109e94631b8e4e61b5526c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-08T16:36:36.328Z",
  "text": ":)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "true, true.  i&#39;ve been away from MCMC for so long.  sad",
  "id": "59109ea283cb5db0730e5be0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-08T16:36:50.715Z",
  "text": "true, true.  i've been away from MCMC for so long.  sad",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "i&#39;ve got a little time to play this morning, though, and it looks like pymc3 is really solid these days!  nice work!",
  "id": "59109ec05c89dc53618a4aba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-08T16:37:20.387Z",
  "text": "i've got a little time to play this morning, though, and it looks like pymc3 is really solid these days!  nice work!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "can you help me find the way to calculate the prior and likelihood for a model at a given point?  i bet it is in your docs and code somewhere, but i have not found it yet.",
  "id": "59109ef89d90dc7a1c5a8fc8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-08T16:38:16.993Z",
  "text": "can you help me find the way to calculate the prior and likelihood for a model at a given point?  i bet it is in your docs and code somewhere, but i have not found it yet.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "thanks! definitely install the recent version, 3.0 is a bit broken by now. ",
  "id": "59109f02631b8e4e61b5542a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-08T16:38:26.725Z",
  "text": "thanks! definitely install the recent version, 3.0 is a bit broken by now. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<code>model.logp({&#39;x&#39;: 0.3})</code>",
  "id": "59109f15c89bb14b5ae19b6a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-08T16:38:45.658Z",
  "text": "`model.logp({'x': 0.3})`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "or separately?",
  "id": "59109f179d90dc7a1c5a9062",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-08T16:38:47.780Z",
  "text": "or separately?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "separately, if possible",
  "id": "59109faa0a783b6c0a78db1c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-08T16:41:14.204Z",
  "text": "separately, if possible",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "you can also do that for every RV: <code>x.logp(.3)</code>",
  "id": "59109fd8c89bb14b5ae19ec3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-08T16:42:00.015Z",
  "text": "you can also do that for every RV: `x.logp(.3)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "cool, that&#39;s what i need.  is there also an easy way to get a list of vars in the model?  <code>model.vars</code> or <code>model.freeRVs</code>, perhaps?",
  "id": "5910a0b233e9ee771c875a97",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-08T16:45:38.955Z",
  "text": "cool, that's what i need.  is there also an easy way to get a list of vars in the model?  `model.vars` or `model.freeRVs`, perhaps?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yes, exactly",
  "id": "5910a0c983cb5db0730e6605",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-08T16:46:01.035Z",
  "text": "yes, exactly",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "is one of those options preferred? ",
  "id": "5910a1002b926f8a673461c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-08T16:46:56.860Z",
  "text": "is one of those options preferred? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<a href=\"https://github.com/pymc-devs/pymc3/blob/master/pymc3/model.py#L456\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/blob/master/pymc3/model.py#L456</a>",
  "id": "5910a11dc4d73f445a87463b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-08T16:47:25.254Z",
  "text": "https://github.com/pymc-devs/pymc3/blob/master/pymc3/model.py#L456",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/blob/master/pymc3/model.py#L456"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "if you replace basic_RVs with free_RVs you&#39;ll get the prior, if you replace it with observed_RVs you&#39;ll get likelihood",
  "id": "5910a1559d90dc7a1c5a9af4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-08T16:48:21.896Z",
  "text": "if you replace basic_RVs with free_RVs you'll get the prior, if you replace it with observed_RVs you'll get likelihood",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "what do you need this for?",
  "id": "5910a160ac693c532ad1e34e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-08T16:48:32.655Z",
  "text": "what do you need this for?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "I&#39;m calculating &quot;power-posteriors&quot;,<br><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi><mo>(</mo><mi>\u03b8</mi><mo>\u2223</mo><mi>y</mi><mo separator=\"true\">,</mo><mi>t</mi><mo>)</mo><mo>=</mo><mfrac><mrow><mi>p</mi><mo>(</mo><mi>y</mi><mo>\u2223</mo><mi>\u03b8</mi><msup><mo>)</mo><mi>t</mi></msup><mi>p</mi><mo>(</mo><mi>\u03b8</mi><mo>)</mo></mrow><mrow><msub><mrow><mi mathvariant=\"script\">Z</mi></mrow><mi>t</mi></msub><mo>(</mo><mi>y</mi><mo>)</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\np(\\theta\\mid y,t) = \\frac{p(y\\mid \\theta)^t p(\\theta)}{\\mathcal{Z}_t(y)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:1.04664em;\"></span><span class=\"strut bottom\" style=\"height:1.56664em;vertical-align:-0.52em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">p</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">\u03b8</span><span class=\"mrel\">\u2223</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mord mathit\">t</span><span class=\"mclose\">)</span><span class=\"mrel\">=</span><span class=\"mord reset-textstyle textstyle uncramped\"><span class=\"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist\"><span style=\"top:0.34500000000000003em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathcal\" style=\"margin-right:0.07944em;\">Z</span></span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.07142857142857144em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-scriptstyle scriptscriptstyle cramped\"><span class=\"mord mathit\">t</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span><span style=\"top:-0.22999999999999998em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle textstyle uncramped frac-line\"></span></span><span style=\"top:-0.485em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord mathit\">p</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"mrel\">\u2223</span><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">\u03b8</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.07142857142857144em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-scriptstyle scriptscriptstyle uncramped\"><span class=\"mord mathit\">t</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mord mathit\">p</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">\u03b8</span><span class=\"mclose\">)</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter\"></span></span></span></span></span>",
  "id": "5910a1a05c89dc53618a54ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-08T16:49:36.711Z",
  "text": "I'm calculating \"power-posteriors\", \n$$\np(\\theta\\mid y,t) = \\frac{p(y\\mid \\theta)^t p(\\theta)}{\\mathcal{Z}_t(y)}\n$$",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "they are supposed to be good for model comparison",
  "id": "5910a1ba0a783b6c0a78e345",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-08T16:50:02.538Z",
  "text": "they are supposed to be good for model comparison",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "never heard of them",
  "id": "5910a1c5c4d73f445a8748ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-08T16:50:13.712Z",
  "text": "never heard of them",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "they might be cool, i&#39;ll let you know what i find out!",
  "id": "5910a1df8a05641b1160b697",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-08T16:50:39.182Z",
  "text": "they might be cool, i'll let you know what i find out!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "sounds great",
  "id": "5910a1e9ac693c532ad1e4b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-08T16:50:49.737Z",
  "text": "sounds great",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "for now, i&#39;m thinking of it as simulated annealing for MCMC",
  "id": "5910a1efd1a7716a0aa60363",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-08T16:50:55.337Z",
  "text": "for now, i'm thinking of it as simulated annealing for MCMC",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "does t change as sampling goes on?",
  "id": "5910a1fbd1a7716a0aa6040e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-08T16:51:07.446Z",
  "text": "does t change as sampling goes on?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ssequeira",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=60",
   "displayName": "Shannon Sequeira",
   "gv": "4",
   "id": "58b46af0d73408ce4f4d3f2c",
   "url": "/ssequeira",
   "username": "ssequeira",
   "v": 7
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"2149\" data-issue-repo=\"pymc-devs/pymc3\" class=\"issue\">pymc-devs/pymc3#2149</span>",
  "id": "5910a2b7631b8e4e61b5638b",
  "issues": [
   {
    "number": "2149",
    "repo": "pymc-devs/pymc3"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-08T16:54:15.879Z",
  "text": "https://github.com/pymc-devs/pymc3/pull/2149",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ssequeira",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=60",
   "displayName": "Shannon Sequeira",
   "gv": "4",
   "id": "58b46af0d73408ce4f4d3f2c",
   "url": "/ssequeira",
   "username": "ssequeira",
   "v": 7
  },
  "html": "Can someone merge that? It&#39;s a trivial change to the readme.",
  "id": "5910a2c09d90dc7a1c5aa206",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-08T16:54:24.671Z",
  "text": "Can someone merge that? It's a trivial change to the readme.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "depends, but if i&#39;ve understood correctly, the current fashion is to choose a &quot;cooling schedule&quot;, meaning a sequence of t values, such as $t = (i/N)^5, i=0, 1, ..., N$, and do MCMC simultaneously for each $i$, ",
  "id": "5910a2d9ac693c532ad1e9d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-08T16:54:49.966Z",
  "text": "depends, but if i've understood correctly, the current fashion is to choose a \"cooling schedule\", meaning a sequence of t values, such as $t = (i/N)^5, i=0, 1, ..., N$, and do MCMC simultaneously for each $i$, ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "with swaps between randomly chosen levels $i$ and $i+1$",
  "id": "5910a3089d90dc7a1c5aa32a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-08T16:55:36.662Z",
  "text": "with swaps between randomly chosen levels $i$ and $i+1$",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "do i need to worry about scaling?<pre><code>    <span class=\"decorator\">@property</span>\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">logpt</span><span class=\"params\">(self)</span>:</span>\n        <span class=\"string\">\"\"\"Theano scalar of log-probability of the model\"\"\"</span>\n        <span class=\"keyword\">if</span> getattr(self, <span class=\"string\">'total_size'</span>, <span class=\"keyword\">None</span>) <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"keyword\">None</span>:\n            <span class=\"keyword\">return</span> tt.sum(self.logp_elemwiset) * self.scaling\n        <span class=\"keyword\">else</span>:\n            <span class=\"keyword\">return</span> tt.sum(self.logp_elemwiset)</code></pre>",
  "id": "5910a441c89bb14b5ae1b28a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-08T17:00:49.307Z",
  "text": "do i need to worry about scaling?\n```\n    @property\n    def logpt(self):\n        \"\"\"Theano scalar of log-probability of the model\"\"\"\n        if getattr(self, 'total_size', None) is not None:\n            return tt.sum(self.logp_elemwiset) * self.scaling\n        else:\n            return tt.sum(self.logp_elemwiset)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "no",
  "id": "5910a44f0a783b6c0a78f101",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-08T17:01:03.836Z",
  "text": "no",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that&#39;s just for data subsampling",
  "id": "5910a458ac693c532ad1f03f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-08T17:01:12.134Z",
  "text": "that's just for data subsampling",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ssequeira",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=60",
   "displayName": "Shannon Sequeira",
   "gv": "4",
   "id": "58b46af0d73408ce4f4d3f2c",
   "url": "/ssequeira",
   "username": "ssequeira",
   "v": 7
  },
  "html": "is there anyone working on adding support for tensorflow?",
  "id": "5910a57033e9ee771c8771ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-08T17:05:52.432Z",
  "text": "is there anyone working on adding support for tensorflow?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I think that\u2019s nearly impossible. We use a lot of theano specific magic",
  "id": "5910a59b631b8e4e61b5727a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-08T17:06:35.483Z",
  "text": "I think that\u2019s nearly impossible. We use a lot of theano specific magic",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ssequeira",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=60",
   "displayName": "Shannon Sequeira",
   "gv": "4",
   "id": "58b46af0d73408ce4f4d3f2c",
   "url": "/ssequeira",
   "username": "ssequeira",
   "v": 7
  },
  "html": "you cannot abstract out the theano specific functions?",
  "id": "5910a5e25c89dc53618a68db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-08T17:07:46.400Z",
  "text": "you cannot abstract out the theano specific functions?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "theano clone is one of the things that TF weakly supports",
  "id": "5910a6030a783b6c0a78f908",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-08T17:08:19.148Z",
  "text": "theano clone is one of the things that TF weakly supports",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ssequeira\" class=\"mention\">@ssequeira</span> I think pytorch is more promising",
  "id": "5910a62f8a05641b1160c85a",
  "issues": [],
  "mentions": [
   {
    "screenName": "ssequeira",
    "userId": "58b46af0d73408ce4f4d3f2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-08T17:09:03.099Z",
  "text": "@ssequeira I think pytorch is more promising",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Heavy plus for pytorch",
  "id": "5910a63d5c89dc53618a6b65",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-08T17:09:17.354Z",
  "text": "Heavy plus for pytorch",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I want to learn it)",
  "id": "5910a6452b926f8a67347a7f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-08T17:09:25.484Z",
  "text": "I want to learn it)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ssequeira",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=60",
   "displayName": "Shannon Sequeira",
   "gv": "4",
   "id": "58b46af0d73408ce4f4d3f2c",
   "url": "/ssequeira",
   "username": "ssequeira",
   "v": 7
  },
  "html": "Isn&#39;t tensorflow taking over?",
  "id": "5910a6469d90dc7a1c5ab296",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-08T17:09:26.001Z",
  "text": "Isn't tensorflow taking over?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "pytorch was only released recently and has unique advantages, hard to say what will happen",
  "id": "5910a6612b926f8a67347ade",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-08T17:09:53.680Z",
  "text": "pytorch was only released recently and has unique advantages, hard to say what will happen",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I think happy co-existence for quite a while",
  "id": "5910a66733e9ee771c8777e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-08T17:09:59.989Z",
  "text": "I think happy co-existence for quite a while",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "inlcuding theano",
  "id": "5910a66cd1a7716a0aa61ba6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-08T17:10:04.090Z",
  "text": "inlcuding theano",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ssequeira",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=60",
   "displayName": "Shannon Sequeira",
   "gv": "4",
   "id": "58b46af0d73408ce4f4d3f2c",
   "url": "/ssequeira",
   "username": "ssequeira",
   "v": 7
  },
  "html": "fair enough.",
  "id": "5910a67483cb5db0730e7e4c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-08T17:10:12.849Z",
  "text": "fair enough.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bwengals",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=60",
   "displayName": "Bill Engels",
   "gv": "3",
   "id": "58c71e0cd73408ce4f5064f5",
   "url": "/bwengals",
   "username": "bwengals",
   "v": 5
  },
  "html": "No compute graph compilation step for pytorch.  Easier to add code to it.  Feels more like using numpy+autograd",
  "id": "5910aa1ad1a7716a0aa62d9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-08T17:25:46.567Z",
  "text": "No compute graph compilation step for pytorch.  Easier to add code to it.  Feels more like using numpy+autograd",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "model can be changed on the fly",
  "id": "5910abd783cb5db0730e957a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-08T17:33:11.530Z",
  "text": "model can be changed on the fly",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I wonder if there is a speed penalty",
  "id": "5910abead1a7716a0aa636bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-08T17:33:30.439Z",
  "text": "I wonder if there is a speed penalty",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "sounds like pymc4",
  "id": "5910abf5ac693c532ad214d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-08T17:33:41.632Z",
  "text": "sounds like pymc4",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "maybe not, the same graph still gets constructed, just dynamically",
  "id": "5910abf78a05641b1160e12d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-05-08T17:33:43.794Z",
  "text": "maybe not, the same graph still gets constructed, just dynamically",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ferrine\" class=\"mention\">@ferrine</span> very much so",
  "id": "5910abfdac693c532ad2151f",
  "issues": [],
  "mentions": [
   {
    "screenName": "ferrine",
    "userId": "581e3155d73408ce4f33e027",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2017-05-08T17:33:49.005Z",
  "text": "@ferrine very much so",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I\u2019ll defenitely learn pytorch on summer=)",
  "id": "5910ac352b926f8a673495a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-05-08T17:34:45.693Z",
  "text": "I\u2019ll defenitely learn pytorch on summer=)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ferrine\" class=\"mention\">@ferrine</span> pytorch is quite cool and easy to learn, they will soon merge the lgamma support which give possibility to implement lots of probability functions <span data-link-type=\"issue\" data-issue=\"1315\" data-issue-repo=\"pytorch/pytorch\" class=\"issue\">pytorch/pytorch#1315</span> ",
  "id": "5910cd37c4d73f445a882036",
  "issues": [
   {
    "number": "1315",
    "repo": "pytorch/pytorch"
   }
  ],
  "mentions": [
   {
    "screenName": "ferrine",
    "userId": "581e3155d73408ce4f33e027",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-05-08T19:55:35.117Z",
  "text": "@ferrine pytorch is quite cool and easy to learn, they will soon merge the lgamma support which give possibility to implement lots of probability functions https://github.com/pytorch/pytorch/pull/1315 ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Seems they don\u2019t have a derivative for this",
  "id": "5910ceb70a783b6c0a79ce90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-05-08T20:01:59.679Z",
  "text": "Seems they don\u2019t have a derivative for this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "<p>Ok, another silly question.  I have copied the <code>model.logp</code> pattern to create <code>logprior</code> and <code>loglike</code>.  What is the cool way to include a temperature parameter in a <code>logpowerp</code> function?  I&#39;ve tried this, but it does not work:</p><pre><code><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">logpowerpt</span><span class=\"params\">(self, t)</span>:</span>\n    <span class=\"keyword\">return</span> t*loglike(self) + logprior(self)\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">logpowerp</span><span class=\"params\">(self, t)</span>:</span>\n    <span class=\"keyword\">return</span> self.model.fn(logpowerpt(self, t))\n\nlogpowerp(basic_model, <span class=\"number\">0</span>)(vals)</code></pre><p>it has error </p><pre><code>TypeError: unsupported operand <span class=\"function\"><span class=\"title\">type</span><span class=\"params\">(s)</span></span> <span class=\"keyword\">for</span> *: <span class=\"string\">'int'</span> and <span class=\"string\">'LoosePointFunc'</span></code></pre>",
  "id": "5910d21a9d90dc7a1c5b8d9d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-05-08T20:16:25.997Z",
  "text": "Ok, another silly question.  I have copied the `model.logp` pattern to create `logprior` and `loglike`.  What is the cool way to include a temperature parameter in a `logpowerp` function?  I've tried this, but it does not work:\n```\ndef logpowerpt(self, t):\n    return t*loglike(self) + logprior(self)\ndef logpowerp(self, t):\n    return self.model.fn(logpowerpt(self, t))\n\nlogpowerp(basic_model, 0)(vals)\n```\nit has error \n```\nTypeError: unsupported operand type(s) for *: 'int' and 'LoosePointFunc'\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "bbiab, and thanks for all help with this!",
  "id": "5910d22bac693c532ad2d4a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-05-08T20:16:43.882Z",
  "text": "bbiab, and thanks for all help with this!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Hi Abe. How come you are calling <code>loglike</code> and <code>logprior</code> with <code>self</code>? ",
  "id": "5910dedf9d90dc7a1c5bcbdc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-05-08T21:10:55.178Z",
  "text": "Hi Abe. How come you are calling `loglike` and `logprior` with `self`? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "At any rate, you need to call the <code>LoosePointFunc</code> with a dict of parameter values.",
  "id": "5910e1768a05641b1161ddd9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-05-08T21:21:58.495Z",
  "text": "At any rate, you need to call the `LoosePointFunc` with a dict of parameter values.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "oh, that <code>self</code> name is a bit naughty... mostly because i copied from a member function, but also in case you fancy a PR to add these to models",
  "id": "5910e4870a783b6c0a7a3597",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-05-08T21:35:03.632Z",
  "text": "oh, that `self` name is a bit naughty... mostly because i copied from a member function, but also in case you fancy a PR to add these to models",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> : can you give me some more hints?  i can&#39;t figure out where to use the <code>LoosePointFunc</code>.  I wrote up enough details on what I&#39;ve done so far that you can get the error I&#39;m generating yourself: <a href=\"http://healthyalgorithms.com?p=3298&amp;shareadraft=5910ed23c97f7\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://healthyalgorithms.com?p=3298&amp;shareadraft=5910ed23c97f7</a>",
  "id": "5910edebac693c532ad347e0",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 24,
  "sent": "2017-05-08T22:15:07.441Z",
  "text": "@fonnesbeck : can you give me some more hints?  i can't figure out where to use the `LoosePointFunc`.  I wrote up enough details on what I've done so far that you can get the error I'm generating yourself: http://healthyalgorithms.com?p=3298&shareadraft=5910ed23c97f7",
  "unread": false,
  "urls": [
   {
    "url": "http://healthyalgorithms.com?p=3298&amp;shareadraft=5910ed23c97f7"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "<p>this works:</p><pre><code><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">logpowerpt</span><span class=\"params\">(self, t)</span>:</span>\n    <span class=\"keyword\">return</span> tt.constant(t)*logliket(self) + logpriort(self)\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">logpowerp</span><span class=\"params\">(self, t)</span>:</span>\n    <span class=\"keyword\">return</span> self.model.fn(logpowerpt(self, t))\n\nvals = {<span class=\"string\">'alpha'</span>:<span class=\"number\">1</span>,\n        <span class=\"string\">'beta'</span>:[<span class=\"number\">1</span>,<span class=\"number\">1</span>],\n        <span class=\"string\">'sigma_log_'</span>:<span class=\"number\">0</span>}\nlogpowerp(basic_model, <span class=\"number\">0</span>)(vals), logpowerp(basic_model, <span class=\"number\">1</span>)(vals)</code></pre><p>is it pymc-thonic?</p>",
  "id": "591149c55c89dc53618d0860",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-05-09T04:47:01.578Z",
  "text": "this works:\n```\ndef logpowerpt(self, t):\n    return tt.constant(t)*logliket(self) + logpriort(self)\ndef logpowerp(self, t):\n    return self.model.fn(logpowerpt(self, t))\n \nvals = {'alpha':1,\n        'beta':[1,1],\n        'sigma_log_':0}\nlogpowerp(basic_model, 0)(vals), logpowerp(basic_model, 1)(vals)\n```\nis it pymc-thonic?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ssequeira",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=60",
   "displayName": "Shannon Sequeira",
   "gv": "4",
   "id": "58b46af0d73408ce4f4d3f2c",
   "url": "/ssequeira",
   "username": "ssequeira",
   "v": 7
  },
  "html": "I&#39;m working on implementing CSPs in pymc3. If I&#39;ve understood correctly, ADVI can&#39;t be used in models with  CSPs. Is there any general purpose inference that I can implement? Everything seems to be specifically meant for DPMMs or PY mixtures.",
  "id": "5911543ec4d73f445a8a1a21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-05-09T05:31:42.246Z",
  "text": "I'm working on implementing CSPs in pymc3. If I've understood correctly, ADVI can't be used in models with  CSPs. Is there any general purpose inference that I can implement? Everything seems to be specifically meant for DPMMs or PY mixtures.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "Why ADVI can&#39;t be used in CSPs?",
  "id": "5911561e2b926f8a67375564",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-05-09T05:39:42.871Z",
  "text": "Why ADVI can't be used in CSPs?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "There is no categorical RV in CSP-DP.",
  "id": "5911564c83cb5db073112d2f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-05-09T05:40:28.198Z",
  "text": "There is no categorical RV in CSP-DP.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ssequeira",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=60",
   "displayName": "Shannon Sequeira",
   "gv": "4",
   "id": "58b46af0d73408ce4f4d3f2c",
   "url": "/ssequeira",
   "username": "ssequeira",
   "v": 7
  },
  "html": "Isn&#39;t a draw from the DP essentially discrete?",
  "id": "59115a71d1a7716a0aa8f294",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-05-09T05:58:09.036Z",
  "text": "Isn't a draw from the DP essentially discrete?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "Not really. you can see an example here: <a href=\"https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/dp_mix.ipynb\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/dp_mix.ipynb</a>",
  "id": "59115b25631b8e4e61b85089",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-05-09T06:01:09.962Z",
  "text": "Not really. you can see an example here: https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/dp_mix.ipynb",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/dp_mix.ipynb"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "The important distinction to draw is that while draws from a Dirichlet process are (almost surely) discrete, draws from a Dirichlet process mixture of continuous distributions are continuous.  In general I would favor the DP mixture whenever possible for this reason.",
  "id": "5911b59fd1a7716a0aaa8e37",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-05-09T12:27:11.076Z",
  "text": "The important distinction to draw is that while draws from a Dirichlet process are (almost surely) discrete, draws from a Dirichlet process mixture of continuous distributions are continuous.  In general I would favor the DP mixture whenever possible for this reason.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ssequeira",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=60",
   "displayName": "Shannon Sequeira",
   "gv": "4",
   "id": "58b46af0d73408ce4f4d3f2c",
   "url": "/ssequeira",
   "username": "ssequeira",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AustinRochford_twitter\" class=\"mention\">@AustinRochford_twitter</span> Fair enough, but don&#39;t we also want to support discrete models?",
  "id": "5911d70433e9ee771c8c80f6",
  "issues": [],
  "mentions": [
   {
    "screenName": "AustinRochford_twitter",
    "userId": "58166bbcd73408ce4f31e2f7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2017-05-09T14:49:40.164Z",
  "text": "@AustinRochford_twitter Fair enough, but don't we also want to support discrete models?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "Yup but in that case nuts is of the table anyway",
  "id": "5911d73cc89bb14b5ae6a82c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-05-09T14:50:36.202Z",
  "text": "Yup but in that case nuts is of the table anyway",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "usually there are better ways to deal with discrete variables (like integration) than using a discrete sampler",
  "id": "5911d7d633e9ee771c8c8880",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-05-09T14:53:10.402Z",
  "text": "usually there are better ways to deal with discrete variables (like integration) than using a discrete sampler",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "yes. always try hard to marginalize over them if possible",
  "id": "5911d9705c89dc53618f91b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-05-09T15:00:00.074Z",
  "text": "yes. always try hard to marginalize over them if possible",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "the stan user guide provide a couple of good examples of this",
  "id": "5911ef172b926f8a673a3550",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-05-09T16:32:23.899Z",
  "text": "the stan user guide provide a couple of good examples of this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "<a href=\"http://mc-stan.org/documentation/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://mc-stan.org/documentation/</a>",
  "id": "5911f0a4631b8e4e61bb2e73",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-05-09T16:39:00.034Z",
  "text": "http://mc-stan.org/documentation/",
  "unread": false,
  "urls": [
   {
    "url": "http://mc-stan.org/documentation/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "section 14.1, specifically",
  "id": "5911f24833e9ee771c8d0e23",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-09T16:46:00.042Z",
  "text": "section 14.1, specifically",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "question: is there a way to sample parameter values from a model <em>prior</em>?",
  "id": "591201ee0a783b6c0a7eef51",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-09T17:52:46.445Z",
  "text": "question: is there a way to sample parameter values from a model *prior*?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "I&#39;ve got some code that almost does the trick:<pre><code>vals = {}\n\n<span class=\"keyword\">for</span> <span class=\"variable\"><span class=\"keyword\">var</span> in model.free_RVs</span>:\n    vals[<span class=\"variable\"><span class=\"keyword\">var</span>.name]</span> = <span class=\"variable\"><span class=\"keyword\">var</span>.random()\n\nvals</span></code></pre>",
  "id": "5912025cc4d73f445a8d41df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-09T17:54:36.230Z",
  "text": "I've got some code that almost does the trick:\n```\nvals = {}\n\nfor var in model.free_RVs:\n    vals[var.name] = var.random()\n    \nvals\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "but this fails when the model contains a transformed variable.",
  "id": "5912026f8a05641b11669031",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-05-09T17:54:55.965Z",
  "text": "but this fails when the model contains a transformed variable.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "It may be possible to modify <code>sample_ppc</code> to do something like this",
  "id": "5912081f0a783b6c0a7f0d04",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-09T18:19:11.623Z",
  "text": "It may be possible to modify `sample_ppc` to do something like this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "<a href=\"https://github.com/pymc-devs/pymc3/blob/master/pymc3/sampling.py#L518\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/blob/master/pymc3/sampling.py#L518</a>",
  "id": "59120820c4d73f445a8d5d56",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-09T18:19:12.953Z",
  "text": "https://github.com/pymc-devs/pymc3/blob/master/pymc3/sampling.py#L518",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/blob/master/pymc3/sampling.py#L518"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "perhaps try <code>var.distribution.random()</code>?",
  "id": "5912082833e9ee771c8d7631",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-09T18:19:20.004Z",
  "text": "perhaps try `var.distribution.random()`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "nevermind, that doesn\u2019t work",
  "id": "591208aa8a05641b1166b1da",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-05-09T18:21:30.037Z",
  "text": "nevermind, that doesn\u2019t work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "ooh, helpful to compare",
  "id": "591209512b926f8a673ab482",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-05-09T18:24:17.067Z",
  "text": "ooh, helpful to compare",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "While I agree with the general approach of integrating out discrete nodes, I have several epidemiology models that have multiple discrete variables which are non-trivial to integrate out. I think we should continue to support discrete sampling methods. Its one of the things that we do that Stan does not.",
  "id": "591209b3c4d73f445a8d652c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-05-09T18:25:55.622Z",
  "text": "While I agree with the general approach of integrating out discrete nodes, I have several epidemiology models that have multiple discrete variables which are non-trivial to integrate out. I think we should continue to support discrete sampling methods. Its one of the things that we do that Stan does not.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "when should I use <code>var.random()</code> vs <code>var.distribution.random()</code>?",
  "id": "59120a605c89dc5361908b2e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-05-09T18:28:48.245Z",
  "text": "when should I use `var.random()` vs `var.distribution.random()`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"aflaxman\" class=\"mention\">@aflaxman</span> &lt;3 discrete sampling methods",
  "id": "59120a790a783b6c0a7f1729",
  "issues": [],
  "mentions": [
   {
    "screenName": "aflaxman",
    "userId": "54314cd3163965c9bc208e0d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2017-05-09T18:29:13.015Z",
  "status": true,
  "text": "@aflaxman <3 discrete sampling methods",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"aflaxman\" class=\"mention\">@aflaxman</span> not every var will have a <code>distribution</code> attribute:<pre><code>with <span class=\"function\"><span class=\"title\">Model</span><span class=\"params\">()</span></span> as model:\n\n    <span class=\"tag\">p</span> = <span class=\"function\"><span class=\"title\">Beta</span><span class=\"params\">(<span class=\"string\">'p'</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>)</span></span>\n\n<span class=\"tag\">p</span><span class=\"class\">.distribution</span>\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n&lt;ipython-input-<span class=\"number\">7</span>-<span class=\"number\">088</span>bad0d3053&gt; <span class=\"keyword\">in</span> &lt;module&gt;()\n----&gt; <span class=\"number\">1</span> <span class=\"tag\">p</span><span class=\"class\">.distribution</span>\n\nAttributeError: <span class=\"string\">'TransformedRV'</span> <span class=\"tag\">object</span> has no attribute <span class=\"string\">'distribution'</span></code></pre>",
  "id": "59120b9a8a05641b1166bf20",
  "issues": [],
  "mentions": [
   {
    "screenName": "aflaxman",
    "userId": "54314cd3163965c9bc208e0d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2017-05-09T18:34:02.441Z",
  "text": "@aflaxman not every var will have a `distribution` attribute:\n\n```\nwith Model() as model:\n    \n    p = Beta('p', 1, 1)\n\np.distribution\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-7-088bad0d3053> in <module>()\n----> 1 p.distribution\n\nAttributeError: 'TransformedRV' object has no attribute 'distribution'\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"aflaxman\" class=\"mention\">@aflaxman</span> <code>ObservedRV</code> and <code>FreeRV</code> will, but not <code>TransformedRV</code>",
  "id": "59120cc733e9ee771c8d8b85",
  "issues": [],
  "mentions": [
   {
    "screenName": "aflaxman",
    "userId": "54314cd3163965c9bc208e0d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-09T18:39:03.701Z",
  "text": "@aflaxman `ObservedRV` and `FreeRV` will, but not `TransformedRV`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "ahh, maybe <code>var.distribution.random()</code> is just what I was looking for, then",
  "id": "59120ccd83cb5db073148a20",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-09T18:39:09.162Z",
  "text": "ahh, maybe `var.distribution.random()` is just what I was looking for, then",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "do TransformedRVs have them?",
  "id": "59120cd533e9ee771c8d8bd2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-09T18:39:17.035Z",
  "text": "do TransformedRVs have them?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "/them/that/?",
  "id": "59120cdec4d73f445a8d73db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-09T18:39:26.919Z",
  "text": "/them/that/?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> 100% agree that we should continue to support discrete sampling as marginalization is not always possible/easy",
  "id": "59120d3e8a05641b1166c767",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2017-05-09T18:41:02.312Z",
  "text": "@fonnesbeck 100% agree that we should continue to support discrete sampling as marginalization is not always possible/easy",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AustinRochford_twitter\" class=\"mention\">@AustinRochford_twitter</span> the <code>TransformedRV</code> is really just a deterministic; the stochastic variable has been transformed to the real line, and it has the <code>distribution</code> attribute.",
  "id": "59120d9b8a05641b1166c8c4",
  "issues": [],
  "mentions": [
   {
    "screenName": "AustinRochford_twitter",
    "userId": "58166bbcd73408ce4f31e2f7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2017-05-09T18:42:35.175Z",
  "text": "@AustinRochford_twitter the `TransformedRV` is really just a deterministic; the stochastic variable has been transformed to the real line, and it has the `distribution` attribute.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "(Sorry meant to send that to <span data-link-type=\"mention\" data-screen-name=\"aflaxman\" class=\"mention\">@aflaxman</span>, not <span data-link-type=\"mention\" data-screen-name=\"AustinRochford_twitter\" class=\"mention\">@AustinRochford_twitter</span> )",
  "id": "59120db02b926f8a673ac858",
  "issues": [],
  "mentions": [
   {
    "screenName": "aflaxman",
    "userId": "54314cd3163965c9bc208e0d",
    "userIds": []
   },
   {
    "screenName": "AustinRochford_twitter",
    "userId": "58166bbcd73408ce4f31e2f7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2017-05-09T18:42:56.027Z",
  "text": "(Sorry meant to send that to @aflaxman, not @AustinRochford_twitter )\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "no problem :)",
  "id": "59120db8d1a7716a0aac4cd6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-05-09T18:43:04.792Z",
  "text": "no problem :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"aflaxman\" class=\"mention\">@aflaxman</span> so in my example above, <code>p_logodds__</code> will have a <code>distribution</code>",
  "id": "59120dcbd1a7716a0aac4d0e",
  "issues": [],
  "mentions": [
   {
    "screenName": "aflaxman",
    "userId": "54314cd3163965c9bc208e0d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2017-05-09T18:43:23.188Z",
  "text": "@aflaxman so in my example above, `p_logodds__` will have a `distribution`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "ahh, but that distribution will <em>not</em> have a <code>.random</code>",
  "id": "59120e7dc4d73f445a8d7b18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-05-09T18:46:21.723Z",
  "text": "ahh, but that distribution will *not* have a `.random`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Correct.",
  "id": "59120eb7ac693c532ad800b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-05-09T18:47:19.453Z",
  "text": "Correct.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Nobody wants samples from a logodds-transformed Beta, presumably, since the transformation is just a convenience for sampling.",
  "id": "59120eded1a7716a0aac52b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-05-09T18:47:58.469Z",
  "text": "Nobody wants samples from a logodds-transformed Beta, presumably, since the transformation is just a convenience for sampling.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "where does your model store the untransformed variable?  is there an approved way to access that?",
  "id": "59120f029d90dc7a1c60e73a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-05-09T18:48:34.313Z",
  "text": "where does your model store the untransformed variable?  is there an approved way to access that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "It gets tallied as a <code>Deterministic</code> once it it back-transformed.",
  "id": "59120f2fd1a7716a0aac5542",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-05-09T18:49:19.964Z",
  "text": "It gets tallied as a `Deterministic` once it it back-transformed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> it would be quite easy to add .random() to transformations",
  "id": "59120f4a83cb5db0731495e8",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 30,
  "sent": "2017-05-09T18:49:46.655Z",
  "text": "@fonnesbeck it would be quite easy to add .random() to transformations",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "thanks, found it there in <code>model.deterministics</code>",
  "id": "5912100633e9ee771c8d9b81",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-05-09T18:52:54.174Z",
  "text": "thanks, found it there in `model.deterministics`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> : my use-case is sampling points from the <em>prior</em> distribution of the model, for importance sampling",
  "id": "5912103e83cb5db073149a93",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 31,
  "sent": "2017-05-09T18:53:50.947Z",
  "text": "@twiecki : my use-case is sampling points from the *prior* distribution of the model, for importance sampling",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aflaxman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51236?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51236?v=3&s=60",
   "displayName": "Abraham Flaxman",
   "gv": "3",
   "id": "54314cd3163965c9bc208e0d",
   "url": "/aflaxman",
   "username": "aflaxman",
   "v": 5
  },
  "html": "(which is not much good for my purposes, so not a very important use-case)",
  "id": "59121052631b8e4e61bbbf5a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2017-05-09T18:54:10.791Z",
  "text": "(which is not much good for my purposes, so not a very important use-case)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/Pflip",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15339494?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15339494?v=3&s=60",
   "displayName": "Pflip",
   "gv": "3",
   "id": "591442c0d73408ce4f5ebb42",
   "url": "/Pflip",
   "username": "Pflip",
   "v": 1
  },
  "html": "<p>Hi there, I am confused about the new changes in API:<br>When creating a variational autoencoder, I used to pass my arguments to the ADVI minibatch method using Lasagne in the following manner: </p><pre><code>with model:\n    v_params = pm<span class=\"class\">.variational</span><span class=\"class\">.advi_minibatch</span>(\n        n=<span class=\"number\">20000</span>, minibatch_tensors=minibatch_tensors, minibatches=minibatches,\n        local_RVs=local_RVs, observed_RVs=observed_RVs,\n        encoder_params=(nn<span class=\"class\">.layers</span><span class=\"class\">.get_all_params</span>(l_enc_mu, trainable=True) + nn<span class=\"class\">.layers</span><span class=\"class\">.get_all_params</span>(l_enc_lstds, trainable=True) + nn<span class=\"class\">.layers</span><span class=\"class\">.get_all_params</span>(l_dec_out, trainable=True)),\n        optimizer = rmsprop\n    )</code></pre><p>How can I pass observed_RVs, encoder_params and optimizer arguments to the new API? </p>",
  "id": "591446fa92217cca5865ee3d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-05-11T11:11:54.482Z",
  "text": "Hi there, I am confused about the new changes in API: \nWhen creating a variational autoencoder, I used to pass my arguments to the ADVI minibatch method using Lasagne in the following manner: \n\n```\nwith model:\n    v_params = pm.variational.advi_minibatch(\n        n=20000, minibatch_tensors=minibatch_tensors, minibatches=minibatches,\n        local_RVs=local_RVs, observed_RVs=observed_RVs,\n        encoder_params=(nn.layers.get_all_params(l_enc_mu, trainable=True) + nn.layers.get_all_params(l_enc_lstds, trainable=True) + nn.layers.get_all_params(l_dec_out, trainable=True)),\n        optimizer = rmsprop\n    )\n```\n\nHow can I pass observed_RVs, encoder_params and optimizer arguments to the new API? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "encoder params -&gt; more_obj_params<br>observed_Rv argument is no more needed assuming you have scaled likelihood with total_size",
  "id": "5914682f92217cca58668ed8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-05-11T13:33:35.501Z",
  "text": "encoder params -> more_obj_params\nobserved_Rv argument is no more needed assuming you have scaled likelihood with total_size",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/Pflip",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15339494?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15339494?v=3&s=60",
   "displayName": "Pflip",
   "gv": "3",
   "id": "591442c0d73408ce4f5ebb42",
   "url": "/Pflip",
   "username": "Pflip",
   "v": 1
  },
  "html": "Ok thank you very much! ",
  "id": "5914824300efc2bb3e58b029",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-05-11T15:24:51.954Z",
  "text": "Ok thank you very much! ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/usptact",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1818325?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1818325?v=3&s=60",
   "displayName": "Vladislavs Dovgalecs",
   "gv": "3",
   "id": "5858a134d73408ce4f3e2bb9",
   "url": "/usptact",
   "username": "usptact",
   "v": 6
  },
  "html": "Hey, devs! What do you think about having a Atlassian JIRA for issue tracking, planning and other ticketing beauties?",
  "id": "5916b65192217cca586ff89b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-05-13T07:31:29.815Z",
  "text": "Hey, devs! What do you think about having a Atlassian JIRA for issue tracking, planning and other ticketing beauties?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"usptact\" class=\"mention\">@usptact</span> what would that provide which is not provided by github issues?",
  "id": "5916dfca9f4f4ab05bbd6275",
  "issues": [],
  "mentions": [
   {
    "screenName": "usptact",
    "userId": "5858a134d73408ce4f3e2bb9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-13T10:28:26.972Z",
  "text": "@usptact what would that provide which is not provided by github issues?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/usptact",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1818325?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1818325?v=3&s=60",
   "displayName": "Vladislavs Dovgalecs",
   "gv": "3",
   "id": "5858a134d73408ce4f3e2bb9",
   "url": "/usptact",
   "username": "usptact",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> The workflows and management of work items is great in JIRA! There are plethora of features in JIRA but I like to point out the nice possibility of linking issues, cloning, blocking etc etc.",
  "id": "5917d8f42b926f8a6752551d",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-14T04:11:32.317Z",
  "text": "@twiecki The workflows and management of work items is great in JIRA! There are plethora of features in JIRA but I like to point out the nice possibility of linking issues, cloning, blocking etc etc.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/usptact",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1818325?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1818325?v=3&s=60",
   "displayName": "Vladislavs Dovgalecs",
   "gv": "3",
   "id": "5858a134d73408ce4f3e2bb9",
   "url": "/usptact",
   "username": "usptact",
   "v": 6
  },
  "html": "There are various dashboards to track the issues, backlogs and make the issues, features flowing.",
  "id": "5917d93e8a05641b117dada2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-14T04:12:46.491Z",
  "text": "There are various dashboards to track the issues, backlogs and make the issues, features flowing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "sounds neat, I think the convenience of having everything on github trumps these features, though.",
  "id": "5918a3498a05641b118054de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-14T18:34:49.207Z",
  "text": "sounds neat, I think the convenience of having everything on github trumps these features, though.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/usptact",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1818325?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1818325?v=3&s=60",
   "displayName": "Vladislavs Dovgalecs",
   "gv": "3",
   "id": "5858a134d73408ce4f3e2bb9",
   "url": "/usptact",
   "username": "usptact",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> I agree!",
  "id": "59190ddd9f4f4ab05bc4d4e3",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-15T02:09:33.831Z",
  "text": "@twiecki I agree!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> Not quite sure I understand the question. The syntax used in the examples are pretty much identical to the NetworkX syntax for graph-creation, which seemed more natural for complex nets (like the welding example).  </p><p>Though, having had a chance to play with Dask in the last week or so, I wonder if there is a better way to delay the theano graph compilation. I&#39;m jerry-rigging it with node-references that get rather messy (i.e. defining inheritance using <code>D.node[RV][eqn]</code> instead of <code>eqn</code> directly, which lets me store  un-compiled RV&#39;s for later. </p>",
  "id": "5919ae4ed1a7716a0aca81da",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 24,
  "sent": "2017-05-15T13:34:06.153Z",
  "text": "@twiecki Not quite sure I understand the question. The syntax used in the examples are pretty much identical to the NetworkX syntax for graph-creation, which seemed more natural for complex nets (like the welding example).  \n\nThough, having had a chance to play with Dask in the last week or so, I wonder if there is a better way to delay the theano graph compilation. I'm jerry-rigging it with node-references that get rather messy (i.e. defining inheritance using `D.node[RV][eqn]` instead of `eqn` directly, which lets me store  un-compiled RV's for later. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"tbsexton\" class=\"mention\">@tbsexton</span> could you please provide usecase? I don\u2019t have a clear view on that you want",
  "id": "5919af600a783b6c0a9d9e22",
  "issues": [],
  "mentions": [
   {
    "screenName": "tbsexton",
    "userId": "55e53ed50fc9f982beaf3f4f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 24,
  "sent": "2017-05-15T13:38:40.725Z",
  "text": "@tbsexton could you please provide usecase? I don\u2019t have a clear view on that you want",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "Sure. ",
  "id": "5919af788a05641b11844996",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-05-15T13:39:04.652Z",
  "text": "Sure. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "The idea was to have a defined model, without the need to compile a compute graph. ",
  "id": "5919b11b83cb5db073328573",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-05-15T13:46:03.749Z",
  "text": "The idea was to have a defined model, without the need to compile a compute graph. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "this defined model could then be parsed into other languages/schema, like PMML",
  "id": "5919b13792217cca587aa24e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-05-15T13:46:31.280Z",
  "text": "this defined model could then be parsed into other languages/schema, like PMML",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "example here :<a href=\"https://github.com/usnistgov/pmml_pymcBN/blob/master/PMML_Weld_example.ipynb\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/usnistgov/pmml_pymcBN/blob/master/PMML_Weld_example.ipynb</a>",
  "id": "5919b1432b926f8a67592273",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-05-15T13:46:43.201Z",
  "text": "example here :https://github.com/usnistgov/pmml_pymcBN/blob/master/PMML_Weld_example.ipynb",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/usnistgov/pmml_pymcBN/blob/master/PMML_Weld_example.ipynb"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2017-05-15T13:48:10.894Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "if one uses something more untrivial rather than basic operations it will be a trouble",
  "id": "5919b19283cb5db0733287f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-05-15T13:48:02.602Z",
  "text": "if one uses something more untrivial rather than basic operations it will be a trouble",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "The way this is set up, what is essentially a dict lookup reads in the RV names/distributions/params, and only compiles the compute graph at runtime",
  "id": "5919b19a92217cca587aa57b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-05-15T13:48:10.900Z",
  "text": "The way this is set up, what is essentially a dict lookup reads in the RV names/distributions/params, and only compiles the compute graph at runtime",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "right. This system is limited to essentially anything readable by sympy and/or functions in pymc3.math",
  "id": "5919b1d02b926f8a675925c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-05-15T13:49:04.622Z",
  "text": "right. This system is limited to essentially anything readable by sympy and/or functions in pymc3.math",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "The problem is with how I&#39;ve had to set up sympy when parsing equations without node references....compare the last example <a href=\"https://github.com/usnistgov/pmml_pymcBN/blob/master/NX_pymc3_BayesNets.ipynb\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a> with the ones preceding it.  ",
  "id": "5919b237f3001cd342230588",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-05-15T13:50:47.518Z",
  "text": "The problem is with how I've had to set up sympy when parsing equations without node references....compare the last example [here](https://github.com/usnistgov/pmml_pymcBN/blob/master/NX_pymc3_BayesNets.ipynb) with the ones preceding it.  ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/usnistgov/pmml_pymcBN/blob/master/NX_pymc3_BayesNets.ipynb"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "underneath its using regex to <em>add</em> node refs (instead of RV refs) to the original equation string the user input, and <code>eval()</code> to actually instantiate the graph. It&#39;s an awful hack and breaks my primary rule of python (no <code>eval()</code> )",
  "id": "5919b2f083cb5db073329008",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-05-15T13:53:52.563Z",
  "text": "underneath its using regex to *add* node refs (instead of RV refs) to the original equation string the user input, and `eval()` to actually instantiate the graph. It's an awful hack and breaks my primary rule of python (no `eval()` )",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tbsexton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12550525?v=4&s=60",
   "displayName": "Thurston Sexton",
   "gv": "4",
   "id": "55e53ed50fc9f982beaf3f4f",
   "url": "/tbsexton",
   "username": "tbsexton",
   "v": 7
  },
  "html": "But I don&#39;t see an alternative at the moment if smooth parsing of a pymc3 model is the end goal. ",
  "id": "5919b3202b926f8a67592b8a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-05-15T13:54:40.232Z",
  "text": "But I don't see an alternative at the moment if smooth parsing of a pymc3 model is the end goal. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I thought about some other thing",
  "id": "5919b5e983cb5db073329d59",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-05-15T14:06:33.488Z",
  "text": "I thought about some other thing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "How do we feel about a &quot;random&quot; init for <code>sample</code>? Since MAP is often not in the typical set, it would be nice to be able to get decent arbitrary starting values if we don&#39;t want to use ADVI. Simply setting them with a random draw from priors could do this.",
  "id": "5919c93300efc2bb3e6cf913",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-05-15T15:28:51.687Z",
  "text": "How do we feel about a \"random\" init for `sample`? Since MAP is often not in the typical set, it would be nice to be able to get decent arbitrary starting values if we don't want to use ADVI. Simply setting them with a random draw from priors could do this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I like that",
  "id": "5919ca9d83cb5db0733309b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-15T15:34:53.833Z",
  "text": "I like that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "How hard would it be to drop in a recurrent NN into the Bayesian NN example that we already have? Asking for a friend.",
  "id": "5919e21e92217cca587bbaaa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-05-15T17:15:10.944Z",
  "text": "How hard would it be to drop in a recurrent NN into the Bayesian NN example that we already have? Asking for a friend.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "someone asked about that recently",
  "id": "5919e237f3001cd342241112",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-05-15T17:15:35.939Z",
  "text": "someone asked about that recently",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"2176\" data-issue-repo=\"pymc-devs/pymc3\" class=\"issue\">pymc-devs/pymc3#2176</span>",
  "id": "5919e24c0a783b6c0a9ea8f7",
  "issues": [
   {
    "number": "2176",
    "repo": "pymc-devs/pymc3"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-05-15T17:15:56.702Z",
  "text": "https://github.com/pymc-devs/pymc3/issues/2176",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/usptact",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1818325?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1818325?v=3&s=60",
   "displayName": "Vladislavs Dovgalecs",
   "gv": "3",
   "id": "5858a134d73408ce4f3e2bb9",
   "url": "/usptact",
   "username": "usptact",
   "v": 6
  },
  "html": "Recurrent NN in Bayesian setting would be interesting in NLP, for tasks such as Part of Speech tagging and Named Entity Recognition.",
  "id": "591a19369f4f4ab05bc9720e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-05-15T21:10:14.963Z",
  "text": "Recurrent NN in Bayesian setting would be interesting in NLP, for tasks such as Part of Speech tagging and Named Entity Recognition.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ssequeira",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=60",
   "displayName": "Shannon Sequeira",
   "gv": "4",
   "id": "58b46af0d73408ce4f4d3f2c",
   "url": "/ssequeira",
   "username": "ssequeira",
   "v": 7
  },
  "html": "Is there a reference on how ADVI and NUTS interact in pymc3?",
  "id": "591a9a58d1a7716a0ace9766",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-16T06:21:12.707Z",
  "text": "Is there a reference on how ADVI and NUTS interact in pymc3?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ssequeira",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=60",
   "displayName": "Shannon Sequeira",
   "gv": "4",
   "id": "58b46af0d73408ce4f4d3f2c",
   "url": "/ssequeira",
   "username": "ssequeira",
   "v": 7
  },
  "html": "my understanding is that ADVI is used to form some approximate posterior which NUTS improves upon to sample from.",
  "id": "591a9a7300efc2bb3e706931",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-16T06:21:39.067Z",
  "text": "my understanding is that ADVI is used to form some approximate posterior which NUTS improves upon to sample from.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ssequeira",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=60",
   "displayName": "Shannon Sequeira",
   "gv": "4",
   "id": "58b46af0d73408ce4f4d3f2c",
   "url": "/ssequeira",
   "username": "ssequeira",
   "v": 7
  },
  "html": "But that may be way off.",
  "id": "591a9a7c631b8e4e61ddd22f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-16T06:21:48.117Z",
  "text": "But that may be way off.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ssequeira\" class=\"mention\">@ssequeira</span> that&#39;s exactly right. we use ADVI to estimate the mass matrix of NUTS",
  "id": "591a9f8f8a05641b118853db",
  "issues": [],
  "mentions": [
   {
    "screenName": "ssequeira",
    "userId": "58b46af0d73408ce4f4d3f2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-05-16T06:43:27.772Z",
  "text": "@ssequeira that's exactly right. we use ADVI to estimate the mass matrix of NUTS",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ssequeira",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=60",
   "displayName": "Shannon Sequeira",
   "gv": "4",
   "id": "58b46af0d73408ce4f4d3f2c",
   "url": "/ssequeira",
   "username": "ssequeira",
   "v": 7
  },
  "html": "Interesting.",
  "id": "591aa55b33e9ee771cafbb09",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-05-16T07:08:11.965Z",
  "text": "Interesting.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ssequeira",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=60",
   "displayName": "Shannon Sequeira",
   "gv": "4",
   "id": "58b46af0d73408ce4f4d3f2c",
   "url": "/ssequeira",
   "username": "ssequeira",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> Can we have some sort of documentation on all of this?",
  "id": "591aa56d00efc2bb3e709925",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2017-05-16T07:08:29.247Z",
  "text": "@twiecki Can we have some sort of documentation on all of this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ssequeira",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=60",
   "displayName": "Shannon Sequeira",
   "gv": "4",
   "id": "58b46af0d73408ce4f4d3f2c",
   "url": "/ssequeira",
   "username": "ssequeira",
   "v": 7
  },
  "html": "Ideally, we should hold a docs day where we put all of this down. Borrowing from Haskell, maybe ideally make something like this? <a href=\"https://ghc.haskell.org/trac/ghc/wiki/Commentary\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ghc.haskell.org/trac/ghc/wiki/Commentary</a>",
  "id": "591aa5cd2b926f8a675d4a03",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-05-16T07:10:05.333Z",
  "text": "Ideally, we should hold a docs day where we put all of this down. Borrowing from Haskell, maybe ideally make something like this? https://ghc.haskell.org/trac/ghc/wiki/Commentary",
  "unread": false,
  "urls": [
   {
    "url": "https://ghc.haskell.org/trac/ghc/wiki/Commentary"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ssequeira\" class=\"mention\">@ssequeira</span> that&#39;s a great idea, a docathon!",
  "id": "591aa707f3001cd342272512",
  "issues": [],
  "mentions": [
   {
    "screenName": "ssequeira",
    "userId": "58b46af0d73408ce4f4d3f2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 30,
  "sent": "2017-05-16T07:15:19.814Z",
  "text": "@ssequeira that's a great idea, a docathon!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ssequeira",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10168627?v=4&s=60",
   "displayName": "Shannon Sequeira",
   "gv": "4",
   "id": "58b46af0d73408ce4f4d3f2c",
   "url": "/ssequeira",
   "username": "ssequeira",
   "v": 7
  },
  "html": "Yeah, something that&#39;ll explain the internal design and architecture choices.",
  "id": "591afffcf3001cd34228dca0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-05-16T13:34:52.570Z",
  "text": "Yeah, something that'll explain the internal design and architecture choices.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/griosd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21106076?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21106076?v=3&s=60",
   "displayName": "griosd",
   "gv": "3",
   "id": "591b2e04d73408ce4f5ffb4f",
   "url": "/griosd",
   "username": "griosd"
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span> mi name is Gonzalo Rios, i&#39;m from Universidad de Chile and i have a project that use pymc3, i was reading about the project Edward and i want to know if the two libraries are compatible with each other",
  "id": "591b2fa6f3001cd34229d9b9",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2017-05-16T16:58:14.372Z",
  "text": "Hi @twiecki mi name is Gonzalo Rios, i'm from Universidad de Chile and i have a project that use pymc3, i was reading about the project Edward and i want to know if the two libraries are compatible with each other",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "you used to able to use a pymc3 model from edward, but after the recent update of tensorflow and edward this feature is currently broken. in general, edward and pymc3 are two different libraries with quite distinctive design and usage. i wont say they are compatible with each other.",
  "id": "591b3f680a783b6c0aa4eb4c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-05-16T18:05:28.739Z",
  "text": "you used to able to use a pymc3 model from edward, but after the recent update of tensorflow and edward this feature is currently broken. in general, edward and pymc3 are two different libraries with quite distinctive design and usage. i wont say they are compatible with each other.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jeti182",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16053195?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16053195?v=3&s=60",
   "displayName": "jeti182",
   "gv": "3",
   "id": "591cdde2d73408ce4f6053fc",
   "url": "/jeti182",
   "username": "jeti182"
  },
  "html": "Hi all, I was wondering whether (and how) it is possible to rerun pymc3 models without recompiling? I&#39;m interested in Bayesian power analysis, where multiple runs on simulated data a performed and recompiling the model really make the very slow",
  "id": "591cde8e2b926f8a6767573a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-05-17T23:36:46.830Z",
  "text": "Hi all, I was wondering whether (and how) it is possible to rerun pymc3 models without recompiling? I'm interested in Bayesian power analysis, where multiple runs on simulated data a performed and recompiling the model really make the very slow",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jeti182\" class=\"mention\">@jeti182</span> did you try to store data in shared?",
  "id": "591cdece0a783b6c0aac1ae1",
  "issues": [],
  "mentions": [
   {
    "screenName": "jeti182",
    "userId": "591cdde2d73408ce4f6053fc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2017-05-17T23:37:50.809Z",
  "text": "@jeti182 did you try to store data in shared?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jeti182",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16053195?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16053195?v=3&s=60",
   "displayName": "jeti182",
   "gv": "3",
   "id": "591cdde2d73408ce4f6053fc",
   "url": "/jeti182",
   "username": "jeti182"
  },
  "html": "Hmm I guess no, what does it mean? ",
  "id": "591cdefe5e34568d5e65b1b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2017-05-17T23:38:38.425Z",
  "text": "Hmm I guess no, what does it mean? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jeti182",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16053195?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16053195?v=3&s=60",
   "displayName": "jeti182",
   "gv": "3",
   "id": "591cdde2d73408ce4f6053fc",
   "url": "/jeti182",
   "username": "jeti182"
  },
  "html": "I found some documentation in the context of PPCs... doe not understand it, yet. However, note that for the power estimation I need to rerun the estimation on  different simulated data sets... ",
  "id": "591ce0675e34568d5e65b581",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 32,
  "sent": "2017-05-17T23:44:39.436Z",
  "text": "I found some documentation in the context of PPCs... doe not understand it, yet. However, note that for the power estimation I need to rerun the estimation on  different simulated data sets... ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/fonnesbeck",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/81476?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/81476?v=3&s=60",
   "displayName": "Chris Fonnesbeck",
   "gv": "3",
   "id": "5419c8f8163965c9bc20529b",
   "url": "/fonnesbeck",
   "username": "fonnesbeck",
   "v": 23
  },
  "html": "Any idea how to silence lock refresh warnings in Theano?",
  "id": "591d1c0633e9ee771cbac60e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2017-05-18T03:59:02.704Z",
  "text": "Any idea how to silence lock refresh warnings in Theano?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jeti182\" class=\"mention\">@jeti182</span> <a href=\"https://gist.github.com/twiecki/972496588bf69fbfbd98ed6b01a3c8a8\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gist.github.com/twiecki/972496588bf69fbfbd98ed6b01a3c8a8</a> maybe that is helpful",
  "id": "591d5d3ff3001cd342331686",
  "issues": [],
  "mentions": [
   {
    "screenName": "jeti182",
    "userId": "591cdde2d73408ce4f6053fc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 32,
  "sent": "2017-05-18T08:37:19.293Z",
  "text": "@jeti182 https://gist.github.com/twiecki/972496588bf69fbfbd98ed6b01a3c8a8 maybe that is helpful",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/twiecki/972496588bf69fbfbd98ed6b01a3c8a8"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/AustinRochford_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/791083866882727937/d7G1NpaG_bigger.jpg",
   "displayName": "Austin Rochford",
   "id": "58166bbcd73408ce4f31e2f7",
   "url": "/AustinRochford_twitter",
   "username": "AustinRochford_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fonnesbeck\" class=\"mention\">@fonnesbeck</span> <code>warnings.filterwarnings</code>?",
  "id": "591d76fe9f4f4ab05bd7b3b4",
  "issues": [],
  "mentions": [
   {
    "screenName": "fonnesbeck",
    "userId": "5419c8f8163965c9bc20529b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 31,
  "sent": "2017-05-18T10:27:10.244Z",
  "text": "@fonnesbeck `warnings.filterwarnings`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jeti182",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16053195?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16053195?v=3&s=60",
   "displayName": "jeti182",
   "gv": "3",
   "id": "591cdde2d73408ce4f6053fc",
   "url": "/jeti182",
   "username": "jeti182"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span>, yes this looks like what I need. Thanks!",
  "id": "591e1f6b631b8e4e61edb582",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 32,
  "sent": "2017-05-18T22:25:47.774Z",
  "text": "@twiecki, yes this looks like what I need. Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/jeti182",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16053195?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16053195?v=3&s=60",
   "displayName": "jeti182",
   "gv": "3",
   "id": "591cdde2d73408ce4f6053fc",
   "url": "/jeti182",
   "username": "jeti182"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"twiecki\" class=\"mention\">@twiecki</span>: Hmm. I see how the model and sampler are kept (or reinitialized)  but I don&#39;t fully understand what the shared_vars are. Do they take the observed data (via the **inputs)... can I think of the shared vars like a pointer to the values (which I then can change for subsequent runs?) ",
  "id": "591e220c0a783b6c0ab19e31",
  "issues": [],
  "mentions": [
   {
    "screenName": "twiecki",
    "userId": "529c6deeed5ab0b3bf04dd11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 32,
  "sent": "2017-05-18T22:37:00.546Z",
  "text": "@twiecki: Hmm. I see how the model and sampler are kept (or reinitialized)  but I don't fully understand what the shared_vars are. Do they take the observed data (via the **inputs)... can I think of the shared vars like a pointer to the values (which I then can change for subsequent runs?) ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yes, shared vars are pointers. ",
  "id": "591e99950a783b6c0ab332d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 32,
  "sent": "2017-05-19T07:07:01.975Z",
  "text": "yes, shared vars are pointers. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "that&#39;s what allows you to change data in the model",
  "id": "591e99a6f3001cd342383cca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 33,
  "sent": "2017-05-19T07:07:18.136Z",
  "text": "that's what allows you to change data in the model",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "it&#39;s a placeholder",
  "id": "591e99a85e34568d5e6cc34c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 33,
  "sent": "2017-05-19T07:07:20.632Z",
  "text": "it's a placeholder",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pstjohn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=60",
   "displayName": "Peter St. John",
   "gv": "4",
   "id": "57976c7440f3a6eec05c88a5",
   "url": "/pstjohn",
   "username": "pstjohn",
   "v": 12
  },
  "html": "Is there a good place to find out more about the new ADVI interface? My old <code>sample_vp</code> code seems to have broken",
  "id": "59231af521759a6a0166936f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 36,
  "sent": "2017-05-22T17:08:05.114Z",
  "text": "Is there a good place to find out more about the new ADVI interface? My old `sample_vp` code seems to have broken",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "maybe the best way to start is here: <a href=\"https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/bayesian_neural_network_opvi-advi.ipynb\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/bayesian_neural_network_opvi-advi.ipynb</a>",
  "id": "592320c300efc2bb3e930605",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 39,
  "sent": "2017-05-22T17:32:51.590Z",
  "text": "maybe the best way to start is here: https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/bayesian_neural_network_opvi-advi.ipynb",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/bayesian_neural_network_opvi-advi.ipynb"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2017-05-22T18:22:14.994Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pstjohn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=60",
   "displayName": "Peter St. John",
   "gv": "4",
   "id": "57976c7440f3a6eec05c88a5",
   "url": "/pstjohn",
   "username": "pstjohn",
   "v": 12
  },
  "html": ":thumbsup:  Thanks for the link!",
  "id": "59232c4521759a6a01669468",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 40,
  "sent": "2017-05-22T18:21:57.684Z",
  "text": ":thumbsup:  Thanks for the link!",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pstjohn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=60",
   "displayName": "Peter St. John",
   "gv": "4",
   "id": "57976c7440f3a6eec05c88a5",
   "url": "/pstjohn",
   "username": "pstjohn",
   "v": 12
  },
  "html": "aside from <code>cost_part_grad_scale</code>, are there any other arguments that can be used to tune the new ADVI optimizers?",
  "id": "59233bd3331deef464699186",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 40,
  "sent": "2017-05-22T19:28:19.281Z",
  "text": "aside from `cost_part_grad_scale`, are there any other arguments that can be used to tune the new ADVI optimizers?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ferrine\" class=\"mention\">@ferrine</span> ^",
  "id": "59233bfefa63ba2f766bc6f0",
  "issues": [],
  "mentions": [
   {
    "screenName": "ferrine",
    "userId": "581e3155d73408ce4f33e027",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 40,
  "sent": "2017-05-22T19:29:02.403Z",
  "text": "@ferrine ^",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-05-22T19:30:13.972Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pstjohn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=60",
   "displayName": "Peter St. John",
   "gv": "4",
   "id": "57976c7440f3a6eec05c88a5",
   "url": "/pstjohn",
   "username": "pstjohn",
   "v": 12
  },
  "html": "Having better luck with the old ADVI adamax optimizer:<pre><code class=\"python\"><span class=\"keyword\">with</span> pymc_model_minibatch:\n    approx = pm.fit(n=<span class=\"number\">50000</span>, method=<span class=\"string\">'advi'</span>)\n\n<span class=\"keyword\">with</span> pymc_model_minibatch:\n    v_params = pm.advi(n=<span class=\"number\">50000</span>)\n\nplt.semilogy(inference.hist)\nplt.semilogy(-v_params.elbo_vals)\nplt.ylabel(<span class=\"string\">'ELBO'</span>)\nplt.xlabel(<span class=\"string\">'iteration'</span>)</code></pre>",
  "id": "59233c3064a70be11ad3304f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 42,
  "sent": "2017-05-22T19:29:52.774Z",
  "text": "Having better luck with the old ADVI adamax optimizer:\n```python\nwith pymc_model_minibatch:\n    approx = pm.fit(n=50000, method='advi')\n\nwith pymc_model_minibatch:\n    v_params = pm.advi(n=50000)\n\nplt.semilogy(inference.hist)\nplt.semilogy(-v_params.elbo_vals)\nplt.ylabel('ELBO')\nplt.xlabel('iteration')\n\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pstjohn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=60",
   "displayName": "Peter St. John",
   "gv": "4",
   "id": "57976c7440f3a6eec05c88a5",
   "url": "/pstjohn",
   "username": "pstjohn",
   "v": 12
  },
  "html": "<a href=\"https://files.gitter.im/pymc-devs/pymc/6ucf/elbo_example.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/pymc-devs/pymc/6ucf/thumb/elbo_example.png\" alt=\"elbo_example.png\" rel=\"nofollow\"></a>",
  "id": "59233d35331deef464699199",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 41,
  "sent": "2017-05-22T19:34:13.273Z",
  "text": "[![elbo_example.png](https://files.gitter.im/pymc-devs/pymc/6ucf/thumb/elbo_example.png)](https://files.gitter.im/pymc-devs/pymc/6ucf/elbo_example.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/6ucf/thumb/elbo_example.png"
   },
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/6ucf/elbo_example.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "can you upgarde to master and try again? <span data-link-type=\"issue\" data-issue=\"2203\" data-issue-repo=\"pymc-devs/pymc3\" class=\"issue\">pymc-devs/pymc3#2203</span> should help",
  "id": "59233fc505e3326c67fad937",
  "issues": [
   {
    "number": "2203",
    "repo": "pymc-devs/pymc3"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 40,
  "sent": "2017-05-22T19:45:09.720Z",
  "text": "can you upgarde to master and try again? https://github.com/pymc-devs/pymc3/pull/2203 should help",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "you might have to set <code>obj_optimizer=pm.adagrad_window</code>, not quite sure",
  "id": "59233fe60a783b6c0ac47f80",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 40,
  "sent": "2017-05-22T19:45:42.717Z",
  "text": "you might have to set `obj_optimizer=pm.adagrad_window`, not quite sure",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pstjohn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=60",
   "displayName": "Peter St. John",
   "gv": "4",
   "id": "57976c7440f3a6eec05c88a5",
   "url": "/pstjohn",
   "username": "pstjohn",
   "v": 12
  },
  "html": "the <code>obj_optimizer=pm.adagrad_window</code> did it, I was on the most recent master (<code>fab6938</code>).",
  "id": "5923433f74105630128366c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 41,
  "sent": "2017-05-22T19:59:59.069Z",
  "text": "the `obj_optimizer=pm.adagrad_window` did it, I was on the most recent master (`fab6938`).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "ok, we should probably set that as the default",
  "id": "59234351c4d73f445ad27b2f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 41,
  "sent": "2017-05-22T20:00:17.435Z",
  "text": "ok, we should probably set that as the default",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pstjohn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=60",
   "displayName": "Peter St. John",
   "gv": "4",
   "id": "57976c7440f3a6eec05c88a5",
   "url": "/pstjohn",
   "username": "pstjohn",
   "v": 12
  },
  "html": "<a href=\"https://files.gitter.im/pymc-devs/pymc/Ja7z/elbo_example_2.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/pymc-devs/pymc/Ja7z/thumb/elbo_example_2.png\" alt=\"elbo_example_2.png\" rel=\"nofollow\"></a>",
  "id": "5923436274105630128366c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 43,
  "sent": "2017-05-22T20:00:34.257Z",
  "text": "[![elbo_example_2.png](https://files.gitter.im/pymc-devs/pymc/Ja7z/thumb/elbo_example_2.png)](https://files.gitter.im/pymc-devs/pymc/Ja7z/elbo_example_2.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/Ja7z/thumb/elbo_example_2.png"
   },
   {
    "url": "https://files.gitter.im/pymc-devs/pymc/Ja7z/elbo_example_2.png"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2017-05-22T20:01:28.148Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pstjohn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=60",
   "displayName": "Peter St. John",
   "gv": "4",
   "id": "57976c7440f3a6eec05c88a5",
   "url": "/pstjohn",
   "username": "pstjohn",
   "v": 12
  },
  "html": "\u00af\\<em>(\u30c4)</em>/\u00af, not sure how universal those results would be.",
  "id": "592343900de3eb3e19a79cb3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 43,
  "sent": "2017-05-22T20:01:20.937Z",
  "text": "\u00af\\\\_(\u30c4)_/\u00af, not sure how universal those results would be.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pstjohn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=60",
   "displayName": "Peter St. John",
   "gv": "4",
   "id": "57976c7440f3a6eec05c88a5",
   "url": "/pstjohn",
   "username": "pstjohn",
   "v": 12
  },
  "html": "Thanks for the help!",
  "id": "592343aa0de3eb3e19a79cb5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 43,
  "sent": "2017-05-22T20:01:46.485Z",
  "text": "Thanks for the help!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "I&#39;ve seen that a bunch before",
  "id": "592344c8f3001cd3424a1abf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 42,
  "sent": "2017-05-22T20:06:32.628Z",
  "text": "I've seen that a bunch before",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "agree with setting adagrad_window as default. At least it match the prior performance.",
  "id": "59234ee55e34568d5e7e8836",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 42,
  "sent": "2017-05-22T20:49:41.645Z",
  "text": "agree with setting adagrad_window as default. At least it match the prior performance.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-05-22T21:12:42.843Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Authors also mension that it works when distributions are not very different there",
  "id": "5923542c631b8e4e610136d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 42,
  "sent": "2017-05-22T21:12:12.641Z",
  "text": "Authors also mension that it works when distributions are not very different there",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "There was something wrong with my gitter. ^ message is about <code>Cost part grad scale</code>. One previous message did not appear. I said that this coef is for fine tuning purposes and should be zero near optima.",
  "id": "5923e7440a783b6c0ac6ef2e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 42,
  "sent": "2017-05-23T07:39:48.282Z",
  "text": "There was something wrong with my gitter. ^ message is about `Cost part grad scale`. One previous message did not appear. I said that this coef is for fine tuning purposes and should be zero near optima.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pstjohn",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2576846?v=4&s=60",
   "displayName": "Peter St. John",
   "gv": "4",
   "id": "57976c7440f3a6eec05c88a5",
   "url": "/pstjohn",
   "username": "pstjohn",
   "v": 12
  },
  "html": "Does <code>pm.generator</code> work with masked array values?",
  "id": "5935c0e0df471bc51c369af4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 32,
  "sent": "2017-06-05T20:36:48.038Z",
  "text": "Does `pm.generator` work with masked array values?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "Hello, I have a conceptual question! Using ADVI, I fit some data time series in order to estimate the model parameter values.  Here is my problem: For different runs, with same ELBO value,  I obtain different posterior distributions for  parameters. This happens because I use advi? if I use NUTS, this should not happen or there are some other reasons such correlation between parameters?",
  "id": "5936aa226462d8493ce631b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-06-06T13:12:02.830Z",
  "text": "Hello, I have a conceptual question! Using ADVI, I fit some data time series in order to estimate the model parameter values.  Here is my problem: For different runs, with same ELBO value,  I obtain different posterior distributions for  parameters. This happens because I use advi? if I use NUTS, this should not happen or there are some other reasons such correlation between parameters?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Generators and minibatches can&#39;t work with masked. ",
  "id": "59390122142826e97294d142",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-06-08T07:47:46.488Z",
  "text": "Generators and minibatches can't work with masked. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Different ADVI solutions can happen because of local optimums. Did you try different optimization setups?",
  "id": "59390186e531dbc905c10d8d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-06-08T07:49:26.465Z",
  "text": "Different ADVI solutions can happen because of local optimums. Did you try different optimization setups?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhashemi0873",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22961747?v=3&s=60",
   "displayName": "mhashemi0873",
   "gv": "3",
   "id": "585011ced73408ce4f3cc9bb",
   "url": "/mhashemi0873",
   "username": "mhashemi0873",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ferrine\" class=\"mention\">@ferrine</span> Thanks for the hint. Yes sounds there are many local optimums. But for different optimums I should obtain different ELBO values no? my problem is by same values for ELBO, I obtain different parameter values. ",
  "id": "5939182731f589c64f87e849",
  "issues": [],
  "mentions": [
   {
    "screenName": "ferrine",
    "userId": "581e3155d73408ce4f33e027",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2017-06-08T09:25:59.264Z",
  "text": "@ferrine Thanks for the hint. Yes sounds there are many local optimums. But for different optimums I should obtain different ELBO values no? my problem is by same values for ELBO, I obtain different parameter values. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Whithout having a look at the model it is diffucult to say what else can go wrong.",
  "id": "593918adca6d4ae80cf27630",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-06-08T09:28:13.202Z",
  "text": "Whithout having a look at the model it is diffucult to say what else can go wrong.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I had sime experience with TS. Initial testval matters",
  "id": "593918c36462d8493cf07d61",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-06-08T09:28:35.765Z",
  "text": "I had sime experience with TS. Initial testval matters",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "But there was the case when you have some unobserved in time",
  "id": "593918f902c480e6722375e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-06-08T09:29:29.436Z",
  "text": "But there was the case when you have some unobserved in time",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/omenrust_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/784594385791049728/a0gY_R5D.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/784594385791049728/a0gY_R5D_bigger.jpg",
   "displayName": "Florf",
   "id": "593ad1fad73408ce4f66195b",
   "url": "/omenrust_twitter",
   "username": "omenrust_twitter"
  },
  "html": "Hi, I&#39;m new to PYMC3 and I was wondering if someone could help me figure out why it&#39;s running so slow; even before any sampling has started. My model has ~4000 groups (each with their own  observations and parameters) and I&#39;m trying to model the groups as a mixture of 2 populations. I have a loop where I create lists with the individual parameters and Likelihoods for all the groups. But even this construction is very slow.",
  "id": "593ad35c02c480e6722aadb9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-06-09T16:57:00.352Z",
  "text": "Hi, I'm new to PYMC3 and I was wondering if someone could help me figure out why it's running so slow; even before any sampling has started. My model has ~4000 groups (each with their own  observations and parameters) and I'm trying to model the groups as a mixture of 2 populations. I have a loop where I create lists with the individual parameters and Likelihoods for all the groups. But even this construction is very slow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "hi",
  "id": "593ad3ae31f589c64f8f3bd1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-06-09T16:58:22.411Z",
  "text": "hi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I think vectorization can help",
  "id": "593ad3c9f31c8ced0c1cf7e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-06-09T16:58:49.075Z",
  "text": "I think vectorization can help",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/omenrust_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/784594385791049728/a0gY_R5D.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/784594385791049728/a0gY_R5D_bigger.jpg",
   "displayName": "Florf",
   "id": "593ad1fad73408ce4f66195b",
   "url": "/omenrust_twitter",
   "username": "omenrust_twitter"
  },
  "html": "This is a snippet of the code if that helps:<a href=\"https://pastebin.com/D6e7VL73\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://pastebin.com/D6e7VL73</a>",
  "id": "593ad4037503e2b70628df69",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-06-09T16:59:47.585Z",
  "text": "This is a snippet of the code if that helps:https://pastebin.com/D6e7VL73",
  "unread": false,
  "urls": [
   {
    "url": "https://pastebin.com/D6e7VL73"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "You can try this approach <a href=\"https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/GLM-hierarchical.ipynb\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/GLM-hierarchical.ipynb</a>",
  "id": "593ad40ee531dbc905c8c124",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-06-09T16:59:58.178Z",
  "text": "You can try this approach https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/GLM-hierarchical.ipynb",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/GLM-hierarchical.ipynb"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2017-06-09T17:02:10.036Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "You can create grouped priors in vector notation",
  "id": "593ad4756549436c7d30ae0c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-06-09T17:01:41.017Z",
  "text": "You can create grouped priors in vector notation",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/omenrust_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/784594385791049728/a0gY_R5D.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/784594385791049728/a0gY_R5D_bigger.jpg",
   "displayName": "Florf",
   "id": "593ad1fad73408ce4f66195b",
   "url": "/omenrust_twitter",
   "username": "omenrust_twitter"
  },
  "html": "So instead of looping for each ~4000 group, I can create priors with shape=~4000 you mean?",
  "id": "593ad4abcf9c13503c6d9233",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-06-09T17:02:35.040Z",
  "text": "So instead of looping for each ~4000 group, I can create priors with shape=~4000 you mean?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "yes and pass appropriate hyperparams to them",
  "id": "593ad4d1f31c8ced0c1cffef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-06-09T17:03:13.415Z",
  "text": "yes and pass appropriate hyperparams to them",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-09T17:04:17.874Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "logp is computed elemwise so hyper parameters should match one to one in rows (shape[0])",
  "id": "593ad504f31c8ced0c1d00d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-06-09T17:04:04.930Z",
  "text": "logp is computed elemwise so hyper parameters should match one to one in rows (shape[0])",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "then for likelihood you can do the thing as in notebook <code>radon_est = a[county_idx] + b[county_idx] * data.floor.values</code>",
  "id": "593ad54cf6a78eab483217af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-06-09T17:05:16.363Z",
  "text": "then for likelihood you can do the thing as in notebook `radon_est = a[county_idx] + b[county_idx] * data.floor.values`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "concat all data and remember group id",
  "id": "593ad569f6a78eab48321846",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-06-09T17:05:45.119Z",
  "text": "concat all data and remember group id",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-09T17:08:39.288Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I see you don&#39;t use hyperparams that depend on group. So this case is right the same as Hierarchical GLM in implementation",
  "id": "593ad6106462d8493cf7d405",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-06-09T17:08:32.969Z",
  "text": "I see you don't use hyperparams that depend on group. So this case is right the same as Hierarchical GLM in implementation",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "<pre><code> Z = pm.<span class=\"function\"><span class=\"title\">Categorical</span><span class=\"params\">(\u2018Z\u2019,  tt.stack([<span class=\"number\">1.0</span>-w1,w1])</span></span>, shape=n_groups)\n MU = pm.<span class=\"function\"><span class=\"title\">Normal</span><span class=\"params\">(\u2018mu\u2019, H1_mu[Z], H1_precision[Z], shape=n_groups)</span></span>\n ALPHA = pm.<span class=\"function\"><span class=\"title\">Gamma</span><span class=\"params\">(<span class=\"string\">'alpha'</span>, alpha=H1_alpha[Z], beta=H1_beta[Z], shape=n_groups)</span></span></code></pre>",
  "id": "593ad6bbe531dbc905c8cd10",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-06-09T17:11:23.413Z",
  "text": "```\n Z = pm.Categorical(\u2018Z\u2019,  tt.stack([1.0-w1,w1]), shape=n_groups)\n MU = pm.Normal(\u2018mu\u2019, H1_mu[Z], H1_precision[Z], shape=n_groups)\n ALPHA = pm.Gamma('alpha', alpha=H1_alpha[Z], beta=H1_beta[Z], shape=n_groups)\n ```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "loop can be rewritten in this way",
  "id": "593ad6daca6d4ae80cf9c915",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-06-09T17:11:54.945Z",
  "text": "loop can be rewritten in this way",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/omenrust_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/784594385791049728/a0gY_R5D.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/784594385791049728/a0gY_R5D_bigger.jpg",
   "displayName": "Florf",
   "id": "593ad1fad73408ce4f66195b",
   "url": "/omenrust_twitter",
   "username": "omenrust_twitter"
  },
  "html": "Thanks! Not ignoring you by the way, was reading the notebook :) it helps alot. I think I can get it from here",
  "id": "593ad71a02c480e6722ac0af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-06-09T17:12:58.207Z",
  "text": "Thanks! Not ignoring you by the way, was reading the notebook :) it helps alot. I think I can get it from here",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/omenrust_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/784594385791049728/a0gY_R5D.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/784594385791049728/a0gY_R5D_bigger.jpg",
   "displayName": "Florf",
   "id": "593ad1fad73408ce4f66195b",
   "url": "/omenrust_twitter",
   "username": "omenrust_twitter"
  },
  "html": "Also, is there a way to specify starting values? For pymc2 I think it was value=xxx but doesn&#39;t seem to work for v3",
  "id": "593ad77931f589c64f8f4d18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-06-09T17:14:33.960Z",
  "text": "Also, is there a way to specify starting values? For pymc2 I think it was value=xxx but doesn't seem to work for v3",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "you can provide starting value by adding  <code>testval=.5</code> etc, for example <code>MU = pm.Normal(\u2018mu\u2019, H1_mu[Z], H1_precision[Z], shape=n_groups, testval=np.ones(n_groups))</code>",
  "id": "593afd4ef6a78eab4832ba8c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-06-09T19:55:58.278Z",
  "text": "you can provide starting value by adding  `testval=.5` etc, for example `MU = pm.Normal(\u2018mu\u2019, H1_mu[Z], H1_precision[Z], shape=n_groups, testval=np.ones(n_groups))`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/omenrust_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/784594385791049728/a0gY_R5D.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/784594385791049728/a0gY_R5D_bigger.jpg",
   "displayName": "Florf",
   "id": "593ad1fad73408ce4f66195b",
   "url": "/omenrust_twitter",
   "username": "omenrust_twitter"
  },
  "html": "thanks!",
  "id": "593afe186462d8493cf877b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-06-09T19:59:20.375Z",
  "text": "thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aplamhden",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10165750?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10165750?v=3&s=60",
   "displayName": "Nikos Koudounas",
   "gv": "3",
   "id": "58e38965d73408ce4f55fc53",
   "url": "/aplamhden",
   "username": "aplamhden",
   "v": 2
  },
  "html": "Hello,I would like to know if sample_ppc()  is working with the new ADVI interface?",
  "id": "593c243031f589c64f93bf05",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-06-10T16:54:08.745Z",
  "text": "Hello,I would like to know if sample_ppc()  is working with the new ADVI interface?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Yes, you should create a variational trace with <code>pm.sample_approx</code>",
  "id": "593c26f602c480e6722f43b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-06-10T17:05:58.467Z",
  "text": "Yes, you should create a variational trace with `pm.sample_approx`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-10T17:09:37.557Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aplamhden",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10165750?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10165750?v=3&s=60",
   "displayName": "Nikos Koudounas",
   "gv": "3",
   "id": "58e38965d73408ce4f55fc53",
   "url": "/aplamhden",
   "username": "aplamhden",
   "v": 2
  },
  "html": "I create my trace with this:   trace=approx.sample(500) and then ppc = pm.sample_ppc(trace, model=basic_model, samples=500, progressbar=False) then i have an error : TypeError: object of type &#39;TensorVariable&#39; has no len()",
  "id": "593c27a1ca6d4ae80cfe46bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-06-10T17:08:49.454Z",
  "text": "I create my trace with this:   trace=approx.sample(500) and then ppc = pm.sample_ppc(trace, model=basic_model, samples=500, progressbar=False) then i have an error : TypeError: object of type 'TensorVariable' has no len()",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "What is full traceback?",
  "id": "593c27fd31f589c64f93cda4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-06-10T17:10:21.085Z",
  "text": "What is full traceback?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aplamhden",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10165750?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10165750?v=3&s=60",
   "displayName": "Nikos Koudounas",
   "gv": "3",
   "id": "58e38965d73408ce4f55fc53",
   "url": "/aplamhden",
   "username": "aplamhden",
   "v": 2
  },
  "html": "what u mean with full traceback?",
  "id": "593c28b4e531dbc905cd5443",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-06-10T17:13:24.172Z",
  "text": "what u mean with full traceback?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "just copy-paste of full error",
  "id": "593c28c9e531dbc905cd5492",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-06-10T17:13:45.614Z",
  "text": "just copy-paste of full error",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "with functions calls",
  "id": "593c28d06549436c7d3530d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-06-10T17:13:52.263Z",
  "text": "with functions calls",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "so I can see where is this error",
  "id": "593c28ddcf9c13503c721fe2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-06-10T17:14:05.930Z",
  "text": "so I can see where is this error",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aplamhden",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10165750?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10165750?v=3&s=60",
   "displayName": "Nikos Koudounas",
   "gv": "3",
   "id": "58e38965d73408ce4f55fc53",
   "url": "/aplamhden",
   "username": "aplamhden",
   "v": 2
  },
  "html": "<p>Yeah i saw the term Traceback and i got what u mean. Here is the error                                             ---------------------------------------------------------------------------<br>TypeError                                 Traceback (most recent call last)</p><p>&lt;ipython-input-51-67616625ebc1&gt; in &lt;module&gt;()<br>      1 ann_input.set_value(X_test)<br>      2 ann_output.set_value(Y_test)<br>----&gt; 3 ppc = pm.sample_ppc(trace, model=basic_model, samples=500, progressbar=False)<br>      4<br>      5 # Use probability of &gt; 0.5 to assume prediction of class 1</p><p>C:\\Users\\Nikos\\Documents\\Lasagne\\python-3.4.4.amd64\\lib\\site-packages\\pymc3\\sampling.py in sample_ppc(trace, samples, model, vars, size, random_seed, progressbar)<br>    526         for var in vars:<br>    527             ppc[var.name].append(var.distribution.random(point=param,<br>--&gt; 528                                                          size=size))<br>    529<br>    530     return {k: np.asarray(v) for k, v in ppc.items()}</p><p>C:\\Users\\Nikos\\Documents\\Lasagne\\python-3.4.4.amd64\\lib\\site-packages\\pymc3\\distributions\\continuous.py in random(self, point, size, repeat)<br>    219     def random(self, point=None, size=None, repeat=None):<br>    220         mu, tau, _ = draw_values([self.mu, self.tau, self.sd],<br>--&gt; 221                                  point=point)<br>    222         return generate_samples(stats.norm.rvs, loc=mu, scale=tau**-0.5,<br>    223                                 dist_shape=self.shape,</p><p>C:\\Users\\Nikos\\Documents\\Lasagne\\python-3.4.4.amd64\\lib\\site-packages\\pymc3\\distributions\\distribution.py in draw_values(params, point)<br>    183                 if not isinstance(node, (tt.sharedvar.TensorSharedVariable,<br>    184                                          tt.TensorConstant)):<br>--&gt; 185                     givens[name] = (node, draw<em>value(node, point=point))<br>    186     values = [None for </em> in params]<br>    187     for i, param in enumerate(params):</p><p>C:\\Users\\Nikos\\Documents\\Lasagne\\python-3.4.4.amd64\\lib\\site-packages\\pymc3\\distributions\\distribution.py in draw_value(param, point, givens)<br>    251         except:<br>    252             shape = param.shape<br>--&gt; 253         if len(shape) == 0 and len(value) == 1:<br>    254             value = value[0]<br>    255     return value</p><p>TypeError: object of type &#39;TensorVariable&#39; has no len()                                              </p>",
  "id": "593c2925e531dbc905cd55aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-06-10T17:15:17.235Z",
  "text": "Yeah i saw the term Traceback and i got what u mean. Here is the error                                             ---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-51-67616625ebc1> in <module>()\n      1 ann_input.set_value(X_test)\n      2 ann_output.set_value(Y_test)\n----> 3 ppc = pm.sample_ppc(trace, model=basic_model, samples=500, progressbar=False)\n      4 \n      5 # Use probability of > 0.5 to assume prediction of class 1\n\nC:\\Users\\Nikos\\Documents\\Lasagne\\python-3.4.4.amd64\\lib\\site-packages\\pymc3\\sampling.py in sample_ppc(trace, samples, model, vars, size, random_seed, progressbar)\n    526         for var in vars:\n    527             ppc[var.name].append(var.distribution.random(point=param,\n--> 528                                                          size=size))\n    529 \n    530     return {k: np.asarray(v) for k, v in ppc.items()}\n\nC:\\Users\\Nikos\\Documents\\Lasagne\\python-3.4.4.amd64\\lib\\site-packages\\pymc3\\distributions\\continuous.py in random(self, point, size, repeat)\n    219     def random(self, point=None, size=None, repeat=None):\n    220         mu, tau, _ = draw_values([self.mu, self.tau, self.sd],\n--> 221                                  point=point)\n    222         return generate_samples(stats.norm.rvs, loc=mu, scale=tau**-0.5,\n    223                                 dist_shape=self.shape,\n\nC:\\Users\\Nikos\\Documents\\Lasagne\\python-3.4.4.amd64\\lib\\site-packages\\pymc3\\distributions\\distribution.py in draw_values(params, point)\n    183                 if not isinstance(node, (tt.sharedvar.TensorSharedVariable,\n    184                                          tt.TensorConstant)):\n--> 185                     givens[name] = (node, draw_value(node, point=point))\n    186     values = [None for _ in params]\n    187     for i, param in enumerate(params):\n\nC:\\Users\\Nikos\\Documents\\Lasagne\\python-3.4.4.amd64\\lib\\site-packages\\pymc3\\distributions\\distribution.py in draw_value(param, point, givens)\n    251         except:\n    252             shape = param.shape\n--> 253         if len(shape) == 0 and len(value) == 1:\n    254             value = value[0]\n    255     return value\n\nTypeError: object of type 'TensorVariable' has no len()                                              ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Seems that it\u2019s not ADVI failuture",
  "id": "593c2950ca6d4ae80cfe4e18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 33,
  "sent": "2017-06-10T17:16:00.630Z",
  "text": "Seems that it\u2019s not ADVI failuture",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Something is wrong in draw values",
  "id": "593c29b26462d8493cfc5640",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 33,
  "sent": "2017-06-10T17:17:38.878Z",
  "text": "Something is wrong in draw values",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Do you reproduce the error with non-advi trace?",
  "id": "593c29c76462d8493cfc567b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 33,
  "sent": "2017-06-10T17:17:59.835Z",
  "text": "Do you reproduce the error with non-advi trace?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-10T17:18:26.260Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aplamhden",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10165750?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10165750?v=3&s=60",
   "displayName": "Nikos Koudounas",
   "gv": "3",
   "id": "58e38965d73408ce4f55fc53",
   "url": "/aplamhden",
   "username": "aplamhden",
   "v": 2
  },
  "html": "i had the same error while i was trying to run the code from the original ipynb <a href=\"https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/bayesian_neural_network_opvi-advi.ipynb\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/bayesian_neural_network_opvi-advi.ipynb</a>      Yes i had the same error with NUTS and Metropolis",
  "id": "593c29cd02c480e6722f4a47",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 33,
  "sent": "2017-06-10T17:18:05.719Z",
  "text": "i had the same error while i was trying to run the code from the original ipynb https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/bayesian_neural_network_opvi-advi.ipynb      Yes i had the same error with NUTS and Metropolis",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/bayesian_neural_network_opvi-advi.ipynb"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Try passing include_transformed=True to approx.sample",
  "id": "593c29f56549436c7d35351b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 33,
  "sent": "2017-06-10T17:18:45.320Z",
  "text": "Try passing include_transformed=True to approx.sample",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I remember some changes there",
  "id": "593c2a1cf31c8ced0c21a715",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 33,
  "sent": "2017-06-10T17:19:24.372Z",
  "text": "I remember some changes there",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aplamhden",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10165750?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10165750?v=3&s=60",
   "displayName": "Nikos Koudounas",
   "gv": "3",
   "id": "58e38965d73408ce4f55fc53",
   "url": "/aplamhden",
   "username": "aplamhden",
   "v": 2
  },
  "html": "The same error again. ",
  "id": "593c2ac102c480e6722f4cb0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 33,
  "sent": "2017-06-10T17:22:09.851Z",
  "text": "The same error again. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "So opening an issue is the only way now.",
  "id": "593c2b0eca6d4ae80cfe5422",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 33,
  "sent": "2017-06-10T17:23:26.048Z",
  "text": "So opening an issue is the only way now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "We\u2019ll try to solve the problem before release",
  "id": "593c2b2b31f589c64f93d805",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 34,
  "sent": "2017-06-10T17:23:55.707Z",
  "text": "We\u2019ll try to solve the problem before release",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "If it is possible, could you please provide minimal failing example?",
  "id": "593c2b4431f589c64f93d81c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 34,
  "sent": "2017-06-10T17:24:20.335Z",
  "text": "If it is possible, could you please provide minimal failing example?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aplamhden",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10165750?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10165750?v=3&s=60",
   "displayName": "Nikos Koudounas",
   "gv": "3",
   "id": "58e38965d73408ce4f55fc53",
   "url": "/aplamhden",
   "username": "aplamhden",
   "v": 2
  },
  "html": "Sure, i am doing it atm. ",
  "id": "593c2b84e531dbc905cd5e15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 34,
  "sent": "2017-06-10T17:25:24.127Z",
  "text": "Sure, i am doing it atm. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/aplamhden",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10165750?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10165750?v=3&s=60",
   "displayName": "Nikos Koudounas",
   "gv": "3",
   "id": "58e38965d73408ce4f55fc53",
   "url": "/aplamhden",
   "username": "aplamhden",
   "v": 2
  },
  "html": "I opened an issue. Thnx for help <span data-link-type=\"mention\" data-screen-name=\"ferrine\" class=\"mention\">@ferrine</span> ",
  "id": "593c2fb26549436c7d3547d3",
  "issues": [],
  "mentions": [
   {
    "screenName": "ferrine",
    "userId": "581e3155d73408ce4f33e027",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 34,
  "sent": "2017-06-10T17:43:14.589Z",
  "text": "I opened an issue. Thnx for help @ferrine ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/rlouf",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3885044?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3885044?v=3&s=60",
   "displayName": "R\u00e9mi Louf",
   "gv": "3",
   "id": "555dc31f15522ed4b3e0b8ff",
   "url": "/rlouf",
   "username": "rlouf",
   "v": 3
  },
  "html": "Hi, I am new to PyMC3 and find the project amazing! I was wondering if there were ways someone like me could start contributing to the project? I would like to become more fluent in Python and learn more about probabilistic programming at the same time :smile: ",
  "id": "593fdd5fcf9c13503c7ff827",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 33,
  "sent": "2017-06-13T12:41:03.964Z",
  "text": "Hi, I am new to PyMC3 and find the project amazing! I was wondering if there were ways someone like me could start contributing to the project? I would like to become more fluent in Python and learn more about probabilistic programming at the same time :smile: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "hi <span data-link-type=\"mention\" data-screen-name=\"rlouf\" class=\"mention\">@rlouf</span> , welcome! I think a great starting point is to run the notebooks in <a href=\"https://github.com/pymc-devs/pymc3/tree/master/docs/source/notebooks\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/tree/master/docs/source/notebooks</a> and try to fix/report the errors - we always need hands to maintain the notebooks as we are doing it mostly by hand currently. And our API changes quite a bit in the pass few months so something might be broken and we have not realized yet.",
  "id": "593fe08fca6d4ae80c0c8655",
  "issues": [],
  "mentions": [
   {
    "screenName": "rlouf",
    "userId": "555dc31f15522ed4b3e0b8ff",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 33,
  "sent": "2017-06-13T12:54:39.174Z",
  "text": "hi @rlouf , welcome! I think a great starting point is to run the notebooks in https://github.com/pymc-devs/pymc3/tree/master/docs/source/notebooks and try to fix/report the errors - we always need hands to maintain the notebooks as we are doing it mostly by hand currently. And our API changes quite a bit in the pass few months so something might be broken and we have not realized yet.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/tree/master/docs/source/notebooks"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "I think this is a great way also to learn python and bayesian statistics at the same time. ",
  "id": "593fe0ae6549436c7d42ed56",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 34,
  "sent": "2017-06-13T12:55:10.801Z",
  "text": "I think this is a great way also to learn python and bayesian statistics at the same time. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "There are also notebooks need some explanations and background information, for example <a href=\"https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/cox_model.ipynb\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/cox_model.ipynb</a> which would be a great starting point for contribution as well. ",
  "id": "593fe0f531f589c64fa1cc92",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 35,
  "sent": "2017-06-13T12:56:21.895Z",
  "text": "There are also notebooks need some explanations and background information, for example https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/cox_model.ipynb which would be a great starting point for contribution as well. ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/cox_model.ipynb"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/rlouf",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3885044?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3885044?v=3&s=60",
   "displayName": "R\u00e9mi Louf",
   "gv": "3",
   "id": "555dc31f15522ed4b3e0b8ff",
   "url": "/rlouf",
   "username": "rlouf",
   "v": 3
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"junpenglao\" class=\"mention\">@junpenglao</span> ! Thank you for the pointers, it indeed looks like an interesting way to get to know PyMC3 and learn a bit more about bayesian statistics. I&#39;ll come back when my homework is done :) I might also add a comprehensive notebook on bayesian A/B testing (with hierarchical models and all)--unless you feel there is no need for it.",
  "id": "593ff0766462d8493c0abf3d",
  "issues": [],
  "mentions": [
   {
    "screenName": "junpenglao",
    "userId": "56e8df4685d51f252ab907f1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 36,
  "sent": "2017-06-13T14:02:30.907Z",
  "text": "Hi @junpenglao ! Thank you for the pointers, it indeed looks like an interesting way to get to know PyMC3 and learn a bit more about bayesian statistics. I'll come back when my homework is done :) I might also add a comprehensive notebook on bayesian A/B testing (with hierarchical models and all)--unless you feel there is no need for it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "It would be a great addition! ;-)",
  "id": "59400052c59bd9c464110ade",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 39,
  "sent": "2017-06-13T15:10:10.687Z",
  "text": "It would be a great addition! ;-)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-13T15:11:43.577Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "We just set up our discourse forum, for longer discussion please move to <a href=\"https://discourse.pymc.io/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://discourse.pymc.io/</a>",
  "id": "5940008bf6a78eab4844ff97",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 39,
  "sent": "2017-06-13T15:11:07.723Z",
  "text": "We just set up our discourse forum, for longer discussion please move to https://discourse.pymc.io/",
  "unread": false,
  "urls": [
   {
    "url": "https://discourse.pymc.io/"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": ":+1: ",
  "id": "5941eef4f6a78eab484ceb0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 41,
  "sent": "2017-06-15T02:20:36.060Z",
  "text": ":+1: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/samuelklee",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11076296?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11076296?v=3&s=60",
   "displayName": "samuelklee",
   "gv": "3",
   "id": "58ee9f32d73408ce4f57fdc1",
   "url": "/samuelklee",
   "username": "samuelklee",
   "v": 4
  },
  "html": "Hi all!  I&#39;ve been using the ADVI in PyMC3 to fit a Poisson latent Gaussian model with ARD.  In testing on simulated data, I&#39;ve gotten good results with the old ADVI interface (in that the number of simulated relevant components is correctly recovered), but switching over to the new ADVI interface sometimes gives me inconsistent results.  Should I expect these results to be roughly equivalent if I set <code>obj_optimizer=pm.adagrad_window(learning_rate)</code>, or are there other parameters I need to set appropriately?",
  "id": "59427fa2e531dbc905e6c2b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 39,
  "sent": "2017-06-15T12:37:54.997Z",
  "text": "Hi all!  I've been using the ADVI in PyMC3 to fit a Poisson latent Gaussian model with ARD.  In testing on simulated data, I've gotten good results with the old ADVI interface (in that the number of simulated relevant components is correctly recovered), but switching over to the new ADVI interface sometimes gives me inconsistent results.  Should I expect these results to be roughly equivalent if I set `obj_optimizer=pm.adagrad_window(learning_rate)`, or are there other parameters I need to set appropriately?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Hi",
  "id": "594285a6caf4d68d6f38c6b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 40,
  "sent": "2017-06-15T13:03:34.784Z",
  "text": "Hi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "Could you please post the issue to our discourse?",
  "id": "594287f9d83c50560c0ed067",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 41,
  "sent": "2017-06-15T13:13:29.365Z",
  "text": "Could you please post the issue to our discourse?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-15T13:15:02.641Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/ferrine",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11705326?v=3&s=60",
   "displayName": "Maxim Kochurov",
   "gv": "3",
   "id": "581e3155d73408ce4f33e027",
   "url": "/ferrine",
   "username": "ferrine",
   "v": 3
  },
  "html": "I would recommend checking loss convergence first. Did it converge?",
  "id": "5942884dd83c50560c0ed309",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 42,
  "sent": "2017-06-15T13:14:53.925Z",
  "text": "I would recommend checking loss convergence first. Did it converge?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/samuelklee",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11076296?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11076296?v=3&s=60",
   "displayName": "samuelklee",
   "gv": "3",
   "id": "58ee9f32d73408ce4f57fdc1",
   "url": "/samuelklee",
   "username": "samuelklee",
   "v": 4
  },
  "html": "Yes, convergence looks reasonable.  I&#39;ll try to put together a discourse post later today.  Just curious if I should expect the underlying ADVI implementation to have changed, as I haven&#39;t looked at the relevant code in detail yet.",
  "id": "59428b64f6a78eab484f6bf9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 42,
  "sent": "2017-06-15T13:28:04.684Z",
  "text": "Yes, convergence looks reasonable.  I'll try to put together a discourse post later today.  Just curious if I should expect the underlying ADVI implementation to have changed, as I haven't looked at the relevant code in detail yet.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "hey guys, we are thinking about closing the Gitter channel and move everything to Discourse, as it is easier for discussion and search. What do you think?",
  "id": "5942f01bf31c8ced0c3d17c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 42,
  "sent": "2017-06-15T20:37:47.312Z",
  "text": "hey guys, we are thinking about closing the Gitter channel and move everything to Discourse, as it is easier for discussion and search. What do you think?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"junpenglao\" class=\"mention\">@junpenglao</span>  I think the lack of response for the last two days is a very clear answer ;-) ",
  "id": "5944efc2ca6d4ae80c213743",
  "issues": [],
  "mentions": [
   {
    "screenName": "junpenglao",
    "userId": "56e8df4685d51f252ab907f1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 41,
  "sent": "2017-06-17T09:00:50.336Z",
  "text": "@junpenglao  I think the lack of response for the last two days is a very clear answer ;-) ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aloctavodia",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1338958?v=4&s=60",
   "displayName": "Osvaldo Martin",
   "gv": "4",
   "id": "54314cd8163965c9bc208e0f",
   "url": "/aloctavodia",
   "username": "aloctavodia",
   "v": 14
  },
  "html": "Great! I see you have already done a PR",
  "id": "5944f03631f589c64fb6c024",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 41,
  "sent": "2017-06-17T09:02:46.559Z",
  "text": "Great! I see you have already done a PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "The gitter channel will remain open for light conversation ;-)",
  "id": "5944ff6c142826e972c3c3c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 41,
  "sent": "2017-06-17T10:07:40.512Z",
  "text": "The gitter channel will remain open for light conversation ;-)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/paddyhoran",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5733408?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5733408?v=3&s=60",
   "displayName": "Paddy Horan",
   "gv": "3",
   "id": "573a8a4ac43b8c6019734e27",
   "url": "/paddyhoran",
   "username": "paddyhoran",
   "v": 4
  },
  "html": "Does anyone have an example of multidimensional input in Gaussian process regression? So x shape = (num records, p) and y shape = (num records) where p &gt; 1. Thanks",
  "id": "59529d728dae4250315d97a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 33,
  "sent": "2017-06-27T18:01:22.368Z",
  "text": "Does anyone have an example of multidimensional input in Gaussian process regression? So x shape = (num records, p) and y shape = (num records) where p > 1. Thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bwengals",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=60",
   "displayName": "Bill Engels",
   "gv": "3",
   "id": "58c71e0cd73408ce4f5064f5",
   "url": "/bwengals",
   "username": "bwengals",
   "v": 5
  },
  "html": "Set the input dimension arg:  cov = pm.gp.cov.Matern52(p, lengthscales)",
  "id": "5952f14376a757f808b1e21f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 35,
  "sent": "2017-06-27T23:58:59.633Z",
  "text": "Set the input dimension arg:  cov = pm.gp.cov.Matern52(p, lengthscales)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/paddyhoran",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5733408?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5733408?v=3&s=60",
   "displayName": "Paddy Horan",
   "gv": "3",
   "id": "573a8a4ac43b8c6019734e27",
   "url": "/paddyhoran",
   "username": "paddyhoran",
   "v": 4
  },
  "html": "Thanks Bill. I did that, I thought I had everything setup correctly but when I pass in x as observed I get an error. A shape mismatch error, input[0].shape[1] = Num records, but input[1].shape[1] = p.  That&#39;s why I was looking for an example to study...  if I have the model setup correctly I should be able to pass the 2d ndarray directly to observed right? I was thinking maybe it was a theano issue that.",
  "id": "5952f747ad9c781843a90594",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 35,
  "sent": "2017-06-28T00:24:39.260Z",
  "text": "Thanks Bill. I did that, I thought I had everything setup correctly but when I pass in x as observed I get an error. A shape mismatch error, input[0].shape[1] = Num records, but input[1].shape[1] = p.  That's why I was looking for an example to study...  if I have the model setup correctly I should be able to pass the 2d ndarray directly to observed right? I was thinking maybe it was a theano issue that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/paddyhoran",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5733408?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5733408?v=3&s=60",
   "displayName": "Paddy Horan",
   "gv": "3",
   "id": "573a8a4ac43b8c6019734e27",
   "url": "/paddyhoran",
   "username": "paddyhoran",
   "v": 4
  },
  "html": "My example works for the 1d case but fails for p&gt;1. So I&#39;m wondering if I need to wrap the 2d x in a theano object maybe?",
  "id": "5952f7b011755ab0562ccf56",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 37,
  "sent": "2017-06-28T00:26:24.273Z",
  "text": "My example works for the 1d case but fails for p>1. So I'm wondering if I need to wrap the 2d x in a theano object maybe?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bwengals",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=60",
   "displayName": "Bill Engels",
   "gv": "3",
   "id": "58c71e0cd73408ce4f5064f5",
   "url": "/bwengals",
   "username": "bwengals",
   "v": 5
  },
  "html": "Oh i see, sorry about that.  the gp library is will be changing a fair bit soon, so these things should be smoothed out in the future",
  "id": "5952fa78ceb5bef82eba0ed8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 38,
  "sent": "2017-06-28T00:38:16.290Z",
  "text": "Oh i see, sorry about that.  the gp library is will be changing a fair bit soon, so these things should be smoothed out in the future",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bwengals",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=60",
   "displayName": "Bill Engels",
   "gv": "3",
   "id": "58c71e0cd73408ce4f5064f5",
   "url": "/bwengals",
   "username": "bwengals",
   "v": 5
  },
  "html": "try this:",
  "id": "5952fa7d8dae4250315f40b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 39,
  "sent": "2017-06-28T00:38:21.847Z",
  "text": "try this:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-28T00:38:53.718Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bwengals",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=60",
   "displayName": "Bill Engels",
   "gv": "3",
   "id": "58c71e0cd73408ce4f5064f5",
   "url": "/bwengals",
   "username": "bwengals",
   "v": 5
  },
  "html": "gp = pm.gp.GP(&quot;gp&quot;, cov_func=cov, X=X, sigma=sn, observed=y)",
  "id": "5952fa7fbf7e6af22c7e6dd8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 39,
  "sent": "2017-06-28T00:38:23.341Z",
  "text": "gp = pm.gp.GP(\"gp\", cov_func=cov, X=X, sigma=sn, observed=y)",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bwengals",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=60",
   "displayName": "Bill Engels",
   "gv": "3",
   "id": "58c71e0cd73408ce4f5064f5",
   "url": "/bwengals",
   "username": "bwengals",
   "v": 5
  },
  "html": "setting X as an argument",
  "id": "5952fa84ad9c781843a91086",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 40,
  "sent": "2017-06-28T00:38:28.023Z",
  "text": "setting X as an argument",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bwengals",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=60",
   "displayName": "Bill Engels",
   "gv": "3",
   "id": "58c71e0cd73408ce4f5064f5",
   "url": "/bwengals",
   "username": "bwengals",
   "v": 5
  },
  "html": "also, were trying to move questions like this over to <a href=\"https://discourse.pymc.io/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://discourse.pymc.io/</a> .   You&#39;ll probably get a quicker response there next time :)",
  "id": "5952fb1f8dae4250315f42e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 40,
  "sent": "2017-06-28T00:41:03.276Z",
  "text": "also, were trying to move questions like this over to https://discourse.pymc.io/ .   You'll probably get a quicker response there next time :)",
  "unread": false,
  "urls": [
   {
    "url": "https://discourse.pymc.io/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/paddyhoran",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5733408?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5733408?v=3&s=60",
   "displayName": "Paddy Horan",
   "gv": "3",
   "id": "573a8a4ac43b8c6019734e27",
   "url": "/paddyhoran",
   "username": "paddyhoran",
   "v": 4
  },
  "html": "I actually just joined discourse. I&#39;ll get a concrete example and post there.  Thanks very much Bill, much appreciated.",
  "id": "5953029b8dae4250315f59c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 40,
  "sent": "2017-06-28T01:12:59.150Z",
  "text": "I actually just joined discourse. I'll get a concrete example and post there.  Thanks very much Bill, much appreciated.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/bwengals",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6325473?v=3&s=60",
   "displayName": "Bill Engels",
   "gv": "3",
   "id": "58c71e0cd73408ce4f5064f5",
   "url": "/bwengals",
   "username": "bwengals",
   "v": 5
  },
  "html": "thanks! see u over there",
  "id": "595309c076a757f808b23653",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 42,
  "sent": "2017-06-28T01:43:28.245Z",
  "text": "thanks! see u over there",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/darribas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/417363?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/417363?v=4&s=60",
   "displayName": "Dani Arribas-Bel",
   "gv": "4",
   "id": "559d402c15522ed4b3e3a6a4",
   "url": "/darribas",
   "username": "darribas",
   "v": 24
  },
  "html": "hello, I have a hierarchical model which was working fine in PyMC 3.0 and, when I upgraded to 3.1 today, I get the <code>FloatingPointError: NaN occurred in optimization.</code> error on the first ADVI iteration. All the parameters I set for the model (priors, etc.) have not changed, I&#39;ve only changed the API to access ADVI to <code>pm.fit</code>. Am I missing something obvious with the upgrade?",
  "id": "5967489af5b3458e30411f9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 40,
  "sent": "2017-07-13T10:16:58.965Z",
  "text": "hello, I have a hierarchical model which was working fine in PyMC 3.0 and, when I upgraded to 3.1 today, I get the `FloatingPointError: NaN occurred in optimization.` error on the first ADVI iteration. All the parameters I set for the model (priors, etc.) have not changed, I've only changed the API to access ADVI to `pm.fit`. Am I missing something obvious with the upgrade?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"darribas\" class=\"mention\">@darribas</span> you might find the discussion on discourse <a href=\"https://discourse.pymc.io/t/nan-occurred-in-optimization-with-nuts/39\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://discourse.pymc.io/t/nan-occurred-in-optimization-with-nuts/39</a> and <a href=\"https://discourse.pymc.io/t/get-nan-or-inf-from-model-logp-model-test-point-is-an-attestation-of-incorrectly-configured-model/111\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://discourse.pymc.io/t/get-nan-or-inf-from-model-logp-model-test-point-is-an-attestation-of-incorrectly-configured-model/111</a> helpful.",
  "id": "596a3d972723db8d5e1388ef",
  "issues": [],
  "mentions": [
   {
    "screenName": "darribas",
    "userId": "559d402c15522ed4b3e3a6a4",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 42,
  "sent": "2017-07-15T16:06:47.855Z",
  "text": "@darribas you might find the discussion on discourse https://discourse.pymc.io/t/nan-occurred-in-optimization-with-nuts/39 and https://discourse.pymc.io/t/get-nan-or-inf-from-model-logp-model-test-point-is-an-attestation-of-incorrectly-configured-model/111 helpful.",
  "unread": false,
  "urls": [
   {
    "url": "https://discourse.pymc.io/t/nan-occurred-in-optimization-with-nuts/39"
   },
   {
    "url": "https://discourse.pymc.io/t/get-nan-or-inf-from-model-logp-model-test-point-is-an-attestation-of-incorrectly-configured-model/111"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/junpenglao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12952641?v=4&s=60",
   "displayName": "Junpeng Lao",
   "gv": "4",
   "id": "56e8df4685d51f252ab907f1",
   "url": "/junpenglao",
   "username": "junpenglao",
   "v": 17
  },
  "html": "Short answer is there might be some hidden problem in your initial model,  if the above posts did not solve your problem, please open a discussion on discourse with your code and (simulated) data",
  "id": "596a3df00de4d2545e2e327f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 42,
  "sent": "2017-07-15T16:08:16.503Z",
  "text": "Short answer is there might be some hidden problem in your initial model,  if the above posts did not solve your problem, please open a discussion on discourse with your code and (simulated) data",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/darribas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/417363?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/417363?v=4&s=60",
   "displayName": "Dani Arribas-Bel",
   "gv": "4",
   "id": "559d402c15522ed4b3e3a6a4",
   "url": "/darribas",
   "username": "darribas",
   "v": 24
  },
  "html": ":+1: Excellent! thank you very much <span data-link-type=\"mention\" data-screen-name=\"junpenglao\" class=\"mention\">@junpenglao</span> !",
  "id": "596b851bf5b3458e3050f499",
  "issues": [],
  "mentions": [
   {
    "screenName": "junpenglao",
    "userId": "56e8df4685d51f252ab907f1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 42,
  "sent": "2017-07-16T15:24:11.702Z",
  "text": ":+1: Excellent! thank you very much @junpenglao !",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/tsdlovell",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16540200?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16540200?v=4&s=60",
   "displayName": "tsdlovell",
   "gv": "4",
   "id": "572a009cc43b8c6019711ce2",
   "url": "/tsdlovell",
   "username": "tsdlovell",
   "v": 2
  },
  "html": "is there a Contributor License Agreement  for pymc3?",
  "id": "598390841c8697534a86fd41",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 39,
  "sent": "2017-08-03T21:07:16.306Z",
  "text": "is there a Contributor License Agreement  for pymc3?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/majidaldo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=60",
   "displayName": "Majid alDosari",
   "gv": "4",
   "id": "57ebe54640f3a6eec067d81a",
   "url": "/majidaldo",
   "username": "majidaldo",
   "v": 5
  },
  "html": "to revive the tensorflow discussion, the main advantage to using tensorflow is proper multiple gpu support",
  "id": "59bfd1ce7b7d98d30d0d557a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 35,
  "sent": "2017-09-18T14:01:50.286Z",
  "text": "to revive the tensorflow discussion, the main advantage to using tensorflow is proper multiple gpu support",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/majidaldo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3588248?v=4&s=60",
   "displayName": "Majid alDosari",
   "gv": "4",
   "id": "57ebe54640f3a6eec067d81a",
   "url": "/majidaldo",
   "username": "majidaldo",
   "v": 5
  },
  "html": "oh  is discourse being used now?",
  "id": "59bfd21c210ac269204718b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 35,
  "sent": "2017-09-18T14:03:08.782Z",
  "text": "oh  is discourse being used now?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/twiecki",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/674200?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/674200?v=4&s=60",
   "displayName": "Thomas Wiecki",
   "gv": "4",
   "id": "529c6deeed5ab0b3bf04dd11",
   "url": "/twiecki",
   "username": "twiecki",
   "v": 13
  },
  "html": "yes, this channel isn&#39;t really watched anymore, everyone move to discourse",
  "id": "59db4cc8614889d47590ddaa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 35,
  "sent": "2017-10-09T10:17:44.586Z",
  "text": "yes, this channel isn't really watched anymore, everyone move to discourse",
  "unread": false,
  "urls": [],
  "v": 1
 }
]