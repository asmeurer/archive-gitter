[
 {
  "editedAt": "2017-05-13T16:50:44.860Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I have implemented <code>rubi_match()</code> for matching Rubi patterns. Please give your feedback: <span data-link-type=\"issue\" data-issue=\"12636\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#12636</span>",
  "id": "5917395d92217cca5871d60a",
  "issues": [
   {
    "number": "12636",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-13T16:50:37.513Z",
  "text": "I have implemented `rubi_match()` for matching Rubi patterns. Please give your feedback: sympy/sympy#12636\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<a href=\"https://github.com/HPAC/matchpy\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/HPAC/matchpy</a>",
  "id": "5918b88492217cca5876f36c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-14T20:05:24.657Z",
  "text": "https://github.com/HPAC/matchpy",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/HPAC/matchpy"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "This library looks very interesting. Its license is compatible. I will try to further examine it in the following days.",
  "id": "5918b90a92217cca5876f538",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-14T20:07:38.511Z",
  "text": "This library looks very interesting. Its license is compatible. I will try to further examine it in the following days.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I was thinking if we could split the work and set deadlines as early as possible so I and <span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span> can start working. I am primarily interested in implementing pattern matcher but I am willing to work on other part of the project too.",
  "id": "5918c0d783cb5db0732eed2b",
  "issues": [],
  "mentions": [
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-14T20:40:54.997Z",
  "text": "I was thinking if we could split the work and set deadlines as early as possible so I and @Abdullahjavednesar can start working. I am primarily interested in implementing pattern matcher but I am willing to work on other part of the project too.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> if we can import that code into SymPy, we can save a lot of time.",
  "id": "5918c1582b926f8a67558509",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-14T20:43:04.807Z",
  "text": "@parsoyaarihant if we can import that code into SymPy, we can save a lot of time.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Yes, just to be clear, we only require one-to-one matching for our purpose right? I skimmed through their code few days back. Should I attempt to use their code to implement <code>syntactic</code> pattern matching in SymPy?",
  "id": "5918c4e22b926f8a67559079",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-14T20:58:10.905Z",
  "text": "Yes, just to be clear, we only require one-to-one matching for our purpose right? I skimmed through their code few days back. Should I attempt to use their code to implement `syntactic` pattern matching in SymPy?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I think that we require the many-to-one matching, if I have understood correctly what they mean.",
  "id": "5918cf4533e9ee771ca82dc9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-14T21:42:29.073Z",
  "text": "I think that we require the many-to-one matching, if I have understood correctly what they mean.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "I am comfortable with implementation of rubi rules but we need to make sure that we  synchronise our work accordingly. ",
  "id": "5919753683cb5db073317087",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-15T09:30:30.589Z",
  "text": "I am comfortable with implementation of rubi rules but we need to make sure that we  synchronise our work accordingly. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<p>Synchronization has to be carefully made. This project could be split into two parts:</p><ul>\n<li>pattern matcher</li>\n<li>RUBI rules</li>\n</ul>\n<p>One of you could try to deal with the pattern matcher, while the other could deal with the importation of the rules into SymPy. If you have any other ideas on how to split the workload, feel free to suggest.</p>",
  "id": "5919b70b33e9ee771cabbe6e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-15T14:11:23.079Z",
  "text": "Synchronization has to be carefully made. This project could be split into two parts:\n* pattern matcher\n* RUBI rules\n\nOne of you could try to deal with the pattern matcher, while the other could deal with the importation of the rules into SymPy. If you have any other ideas on how to split the workload, feel free to suggest.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I am now trying to evaluate whether MatchPy is suitable for the RUBI rules. In case it is, I would suggest to import the code into SymPy. Unfortunately MatchPy is being developed for Python 3.6 and has characteristics very specific to Python 3.6 (I tried to run it with Python 3.5, but it does not work). In case we decide to import MatchPy into SymPy, we will need a back-translation into Python 2.7 code.",
  "id": "5919b7892b926f8a67594245",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-15T14:13:29.954Z",
  "text": "I am now trying to evaluate whether MatchPy is suitable for the RUBI rules. In case it is, I would suggest to import the code into SymPy. Unfortunately MatchPy is being developed for Python 3.6 and has characteristics very specific to Python 3.6 (I tried to run it with Python 3.5, but it does not work). In case we decide to import MatchPy into SymPy, we will need a back-translation into Python 2.7 code.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I got a reply from the MatchPy author, he thinks that MatchPy is capable of matching RUBI.",
  "id": "591a190100efc2bb3e6e88ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-15T21:09:21.728Z",
  "text": "I got a reply from the MatchPy author, he thinks that MatchPy is capable of matching RUBI.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "He even suggested some untested snippet:",
  "id": "591a19260a783b6c0a9fcae9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-15T21:09:58.873Z",
  "text": "He even suggested some untested snippet:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<pre><code>a_ = Wildcard.<span class=\"function\"><span class=\"title\">dot</span><span class=\"params\">(<span class=\"string\">'a'</span>)</span></span>\nb_ = Wildcard.<span class=\"function\"><span class=\"title\">dot</span><span class=\"params\">(<span class=\"string\">'b'</span>)</span></span>\nm_ = Wildcard.<span class=\"function\"><span class=\"title\">dot</span><span class=\"params\">(<span class=\"string\">'m'</span>)</span></span>\nx_ = Wildcard.<span class=\"function\"><span class=\"title\">symbol</span><span class=\"params\">(<span class=\"string\">'x'</span>)</span></span>\n\na_free = <span class=\"function\"><span class=\"title\">CustomConstraint</span><span class=\"params\">(lambda a, x: x not in a)</span></span>\nb_free = <span class=\"function\"><span class=\"title\">CustomConstraint</span><span class=\"params\">(lambda b, x: x not in b)</span></span>\nm_free = <span class=\"function\"><span class=\"title\">CustomConstraint</span><span class=\"params\">(lambda m, x: x not in m)</span></span>\nm_plus_one_nonzero = <span class=\"function\"><span class=\"title\">CustomConstraint</span><span class=\"params\">(lambda m: Plus(m, <span class=\"number\">1</span>)</span></span> != <span class=\"number\">0</span>)\n\nexpr = <span class=\"function\"><span class=\"title\">Int</span><span class=\"params\">(Pow(Plus(a_, Mul(b_, x_)</span></span>), m_), x_)\npattern = <span class=\"function\"><span class=\"title\">Pattern</span><span class=\"params\">(expr, a_free, b_free, m_free, m_plus_one_nonzero)</span></span>\nrule = <span class=\"function\"><span class=\"title\">ReplacementRule</span><span class=\"params\">(pattern, lambda a, b, m, x: Div(Pow(Plus(a, Mul(b, x)</span></span>), <span class=\"function\"><span class=\"title\">Plus</span><span class=\"params\">(m, <span class=\"number\">1</span>)</span></span>), <span class=\"function\"><span class=\"title\">Mul</span><span class=\"params\">(b, Plus(m, <span class=\"number\">1</span>)</span></span>)))</code></pre>",
  "id": "591a19372b926f8a675b40a0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-15T21:10:15.940Z",
  "text": "```\na_ = Wildcard.dot('a')\nb_ = Wildcard.dot('b')\nm_ = Wildcard.dot('m')\nx_ = Wildcard.symbol('x')\n\na_free = CustomConstraint(lambda a, x: x not in a)\nb_free = CustomConstraint(lambda b, x: x not in b)\nm_free = CustomConstraint(lambda m, x: x not in m)\nm_plus_one_nonzero = CustomConstraint(lambda m: Plus(m, 1) != 0)\n\nexpr = Int(Pow(Plus(a_, Mul(b_, x_)), m_), x_)\npattern = Pattern(expr, a_free, b_free, m_free, m_plus_one_nonzero)\nrule = ReplacementRule(pattern, lambda a, b, m, x: Div(Pow(Plus(a, Mul(b, x)), Plus(m, 1)), Mul(b, Plus(m, 1))))\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I believe that the nodes would be defined as:",
  "id": "591a195dd1a7716a0accb449",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-15T21:10:53.869Z",
  "text": "I believe that the nodes would be defined as:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<code>Mul = Operation.new(&quot;*&quot;, Arity.variadic, &quot;Mul&quot;, associative=True)</code>",
  "id": "591a1976631b8e4e61dc0100",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-15T21:11:18.896Z",
  "text": "```Mul = Operation.new(\"*\", Arity.variadic, \"Mul\", associative=True)```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "same for <code>Int</code>",
  "id": "591a198783cb5db073349ce0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-15T21:11:35.520Z",
  "text": "same for `Int`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "There are some examples here:",
  "id": "591a19a18a05641b1186668b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-15T21:12:01.550Z",
  "text": "There are some examples here:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<a href=\"http://matchpy.readthedocs.io/en/latest/example.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://matchpy.readthedocs.io/en/latest/example.html</a>",
  "id": "591a19a292217cca587cce54",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-15T21:12:02.749Z",
  "text": "http://matchpy.readthedocs.io/en/latest/example.html",
  "unread": false,
  "urls": [
   {
    "url": "http://matchpy.readthedocs.io/en/latest/example.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Could any of you try to see whether he is able to write some working RUBI rules with MatchPy?",
  "id": "591a19ee0a783b6c0a9fcecd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-15T21:13:18.796Z",
  "text": "Could any of you try to see whether he is able to write some working RUBI rules with MatchPy?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "(remember that MatchPy only supports Python 3.6)",
  "id": "591a19fbd1a7716a0accb720",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-15T21:13:31.296Z",
  "text": "(remember that MatchPy only supports Python 3.6)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Yes, I will try.",
  "id": "591a80f4631b8e4e61dd6fcd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-16T04:32:52.593Z",
  "text": "Yes, I will try.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<p>I have implemented two rules here:</p><p><a href=\"https://gist.github.com/parsoyaarihant/0ac51309b1b1f6eced756f3e327e88ce\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gist.github.com/parsoyaarihant/0ac51309b1b1f6eced756f3e327e88ce</a></p><p>There were some issues while implementing the rules which I have commented below the Gist.</p>",
  "id": "591b52b78a05641b118bd8cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-16T19:27:51.508Z",
  "text": "I have implemented two rules here:\n\nhttps://gist.github.com/parsoyaarihant/0ac51309b1b1f6eced756f3e327e88ce\n\nThere were some issues while implementing the rules which I have commented below the Gist.",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/parsoyaarihant/0ac51309b1b1f6eced756f3e327e88ce"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<p>I have been trying to parse rules in matchpy. I am worried that the matchpy will not be able to support most conditions on the patterns since it does not support mathematical operations on its symbols.</p><p>For Example:</p><pre><code class=\"mathematica\"> Int[(c_.+d_.*x_)^m_.*<span class=\"keyword\">Sinh</span>[e_.+f_.*x_],x_Symbol] :=\n  (c+d*x)^m*<span class=\"keyword\">Cosh</span>[e+f*x]/f - \n  d*m/f*Int[(c+d*x)^(m-<span class=\"number\">1</span>)*<span class=\"keyword\">Cosh</span>[e+f*x],x] /;\n<span class=\"keyword\">FreeQ</span>[<span class=\"list\">{c,d,e,f}</span>,x] &amp;&amp; RationalQ[m] &amp;&amp; m&gt;<span class=\"number\">0</span></code></pre><p>In the above rule, we need to check if <code>RationalQ[m] &amp;&amp; m&gt;0</code>, we will need to implement these functions in matchpy iteslf if we are using matchpy as external library.</p>",
  "id": "5921167b5e34568d5e75fdcf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-21T04:24:27.463Z",
  "text": "I have been trying to parse rules in matchpy. I am worried that the matchpy will not be able to support most conditions on the patterns since it does not support mathematical operations on its symbols.\n\nFor Example:\n```mathematica\n Int[(c_.+d_.*x_)^m_.*Sinh[e_.+f_.*x_],x_Symbol] :=\n  (c+d*x)^m*Cosh[e+f*x]/f - \n  d*m/f*Int[(c+d*x)^(m-1)*Cosh[e+f*x],x] /;\nFreeQ[{c,d,e,f},x] && RationalQ[m] && m>0\n```\n\nIn the above rule, we need to check if `RationalQ[m] && m>0`, we will need to implement these functions in matchpy iteslf if we are using matchpy as external library.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I am wondering if we can implement the same pattern matching capabilities in sympy using sympy <code>symbols</code>. ",
  "id": "59211cf7fa63ba2f76634770",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-21T04:52:07.387Z",
  "text": "I am wondering if we can implement the same pattern matching capabilities in sympy using sympy `symbols`. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-05-21T08:01:44.266Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "We could use a dictionary a corresponding symbols to convert MatchPy and SymPy expressions. I should check whether it is feasible.",
  "id": "592148039f4f4ab05be5f891",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-21T07:55:47.511Z",
  "text": "We could use a dictionary a corresponding symbols to convert MatchPy and SymPy expressions. I should check whether it is feasible.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2017-05-21T08:02:02.166Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<pre><code>RationalQ[u__] := <span class=\"keyword\">Catch</span>[<span class=\"keyword\">Scan</span>[<span class=\"keyword\">Function</span>[<span class=\"keyword\">If</span>[<span class=\"keyword\">IntegerQ</span>[#] || <span class=\"keyword\">Head</span>[#]===<span class=\"keyword\">Rational</span>,<span class=\"keyword\">Null</span>,<span class=\"keyword\">Throw</span>[<span class=\"keyword\">False</span>]]],<span class=\"list\">{u}</span>]; <span class=\"keyword\">True</span>]</code></pre>this is the definition of <code>RationalQ</code> in <code>Integration Utility Functions.m</code>. It&#39;s simply a function that checks if the arguments are all rational numbers. I believe this could be re-implemented for MatchPy.",
  "id": "5921495b0a783b6c0abcd4aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-21T08:01:31.202Z",
  "text": "```\nRationalQ[u__] := Catch[Scan[Function[If[IntegerQ[#] || Head[#]===Rational,Null,Throw[False]]],{u}]; True]\n```\nthis is the definition of `RationalQ` in `Integration Utility Functions.m`. It's simply a function that checks if the arguments are all rational numbers. I believe this could be re-implemented for MatchPy.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2017-05-21T09:56:58.224Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I opened issue about constraint in matchpy: <span data-link-type=\"issue\" data-issue=\"3\" data-issue-repo=\"HPAC/matchpy\" class=\"issue\">HPAC/matchpy#3</span>",
  "id": "592164449f4f4ab05be6546d",
  "issues": [
   {
    "number": "3",
    "repo": "HPAC/matchpy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-21T09:56:20.559Z",
  "text": "I opened issue about constraint in matchpy: https://github.com/HPAC/matchpy/issues/3",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Matchpy does not support mathematical operations, hence I am facing problems implementing constraints which needs calculations(example: <code>NonzeroQ</code>). Here is mathematica implementation of <code>NonzeroQ</code>:<pre><code class=\"mathematica\"><span class=\"comment\">(* ZeroQ[u1,u2,...] returns True if u1, u2, ... are all 0; else it returns False. *)</span>\nZeroQ[u_] := <span class=\"keyword\">Quiet</span>[<span class=\"keyword\">PossibleZeroQ</span>[u]]\n\nZeroQ[u__] := <span class=\"keyword\">Catch</span>[<span class=\"keyword\">Scan</span>[<span class=\"keyword\">Function</span>[<span class=\"keyword\">If</span>[ZeroQ[#],<span class=\"keyword\">Null</span>,<span class=\"keyword\">Throw</span>[<span class=\"keyword\">False</span>]]],<span class=\"list\">{u}</span>];<span class=\"keyword\">True</span>]\n\nNonzeroQ[u_] := <span class=\"keyword\">Not</span>[ZeroQ[u]]</code></pre>",
  "id": "592580b49f4f4ab05bf74e93",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-24T12:46:44.685Z",
  "text": "Matchpy does not support mathematical operations, hence I am facing problems implementing constraints which needs calculations(example: `NonzeroQ `). Here is mathematica implementation of `NonzeroQ`:\n```mathematica\n(* ZeroQ[u1,u2,...] returns True if u1, u2, ... are all 0; else it returns False. *)\nZeroQ[u_] := Quiet[PossibleZeroQ[u]]\n\nZeroQ[u__] := Catch[Scan[Function[If[ZeroQ[#],Null,Throw[False]]],{u}];True]\n\nNonzeroQ[u_] := Not[ZeroQ[u]]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> have you try to put SymPy&#39;s objects into MatchPy&#39;s Symbol object?",
  "id": "59258cb1eec422e415e47b2a",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-24T13:37:53.372Z",
  "text": "@parsoyaarihant have you try to put SymPy's objects into MatchPy's Symbol object?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "How are <code>ZeroQ</code> and <code>NonzeroQ</code> used in RUBI? Do they  just check if the object is zero? In that case, you wouldn&#39;t need mathematical operations.",
  "id": "59258d1f05e3326c6704bd6a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-24T13:39:43.669Z",
  "text": "How are `ZeroQ` and `NonzeroQ` used in RUBI? Do they  just check if the object is zero? In that case, you wouldn't need mathematical operations.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Concerning the workflow, what about a code generator from the discrimination network to Python code?",
  "id": "59258d4e2b926f8a678a54f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-24T13:40:30.611Z",
  "text": "Concerning the workflow, what about a code generator from the discrimination network to Python code?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I mean... MatchPy uses the discrimination network for the many-to-one pattern matching. I believe we could write a code generator, once the discrimination network is defined, and generate the Python code.",
  "id": "59258d7bfcbbe1891c3e0c0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-24T13:41:15.744Z",
  "text": "I mean... MatchPy uses the discrimination network for the many-to-one pattern matching. I believe we could write a code generator, once the discrimination network is defined, and generate the Python code.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "This would solve the fact that MatchPy only supports Python 3.6.",
  "id": "59258d89c4d73f445adc633c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-24T13:41:29.269Z",
  "text": "This would solve the fact that MatchPy only supports Python 3.6.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<p>Manuel Krebber have used MatchPy with SymPy expressions: </p><p><a href=\"https://gist.github.com/parsoyaarihant/0ac51309b1b1f6eced756f3e327e88ce#gistcomment-2102542\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gist.github.com/parsoyaarihant/0ac51309b1b1f6eced756f3e327e88ce#gistcomment-2102542</a></p>",
  "id": "5925c787c4d73f445add9906",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-24T17:48:55.613Z",
  "text": "Manuel Krebber have used MatchPy with SymPy expressions: \n\nhttps://gist.github.com/parsoyaarihant/0ac51309b1b1f6eced756f3e327e88ce#gistcomment-2102542",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/parsoyaarihant/0ac51309b1b1f6eced756f3e327e88ce#gistcomment-2102542"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<code>ZeroQ</code> checks if the expression is equal to zero. Example:<pre><code class=\"mathematica\">Int[<span class=\"number\">1</span>/((a_+b_.*x_)*(c_+d_.*x_)),x_Symbol] :=\n  Int[<span class=\"number\">1</span>/(a*c+b*d*x^<span class=\"number\">2</span>),x] /;\n<span class=\"keyword\">FreeQ</span>[<span class=\"list\">{a,b,c,d}</span>,x] &amp;&amp; ZeroQ[b*c+a*d]</code></pre>",
  "id": "5925c81a631b8e4e610c06b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-24T17:51:22.543Z",
  "text": "`ZeroQ` checks if the expression is equal to zero. Example:\n```mathematica\nInt[1/((a_+b_.*x_)*(c_+d_.*x_)),x_Symbol] :=\n  Int[1/(a*c+b*d*x^2),x] /;\nFreeQ[{a,b,c,d},x] && ZeroQ[b*c+a*d]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I think we want, eventually, these conditions like ZeroQ to split the answer into a Piecewise ",
  "id": "5925cf8e331deef46469b0f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-24T18:23:10.214Z",
  "text": "I think we want, eventually, these conditions like ZeroQ to split the answer into a Piecewise ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-05-25T07:18:29.115Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "A workaround would be to <code>sympify</code> the expression and so calculations:<pre><code class=\"python\">&gt;&gt;&gt; from matchpy import *\n&gt;&gt;&gt; from sympy import sympify\n&gt;&gt;&gt; Add = Operation.new('+', Arity.variadic, 'Add', associative=True, commutative=True, one_identity=True, infix=True)\n&gt;&gt;&gt; Mul = Operation.new('*', Arity.variadic, 'Mul', associative=True, commutative=True, one_identity=True, infix=True)\n&gt;&gt;&gt; class ConstantSymbol(Symbol):\n...     def __init__(self, value):\n...         super().__init__(str(value))\n...         self.value = value\n...\n&gt;&gt;&gt; one = ConstantSymbol(1)\n&gt;&gt;&gt; m_one = ConstantSymbol(-1)\n&gt;&gt;&gt; a = Symbol('a')\n&gt;&gt;&gt; b = Symbol('b')\n&gt;&gt;&gt; expr = Add(a, b)\n&gt;&gt;&gt; type(sympify(str(expr)))\n&lt;class 'sympy.core.add.Add'&gt;\n&gt;&gt;&gt; sympify(str(Add(one, m_one)))\n0</code></pre>",
  "id": "59268524fcbbe1891c4293bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-25T07:17:56.551Z",
  "text": "A workaround would be to `sympify` the expression and so calculations:\n```python\n>>> from matchpy import *\n>>> from sympy import sympify\n>>> Add = Operation.new('+', Arity.variadic, 'Add', associative=True, commutative=True, one_identity=True, infix=True)\n>>> Mul = Operation.new('*', Arity.variadic, 'Mul', associative=True, commutative=True, one_identity=True, infix=True)\n>>> class ConstantSymbol(Symbol):\n...     def __init__(self, value):\n...         super().__init__(str(value))\n...         self.value = value\n...\n>>> one = ConstantSymbol(1)\n>>> m_one = ConstantSymbol(-1)\n>>> a = Symbol('a')\n>>> b = Symbol('b')\n>>> expr = Add(a, b)\n>>> type(sympify(str(expr)))\n<class 'sympy.core.add.Add'>\n>>> sympify(str(Add(one, m_one)))\n0\n```\n",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "and do** calculations.",
  "id": "592687a02b926f8a678edb83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-25T07:28:32.572Z",
  "text": "and do** calculations.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "That can work as a temporary workaround.",
  "id": "5926a5182b926f8a678f57bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-25T09:34:16.437Z",
  "text": "That can work as a temporary workaround.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "It would be idea to also have a reverse conversion function",
  "id": "5926a53b5e34568d5e8cc0ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-25T09:34:51.817Z",
  "text": "It would be idea to also have a reverse conversion function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "MatchPy does not support default values for Wild variables. Manuel Krebber suggested to use multiple patterns to solve this issue. <span data-link-type=\"issue\" data-issue=\"2\" data-issue-repo=\"HPAC/matchpy\" class=\"issue\">HPAC/matchpy#2</span> ",
  "id": "5927b3b79f4f4ab05b00ae49",
  "issues": [
   {
    "number": "2",
    "repo": "HPAC/matchpy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-26T04:48:55.015Z",
  "text": "MatchPy does not support default values for Wild variables. Manuel Krebber suggested to use multiple patterns to solve this issue. https://github.com/HPAC/matchpy/issues/2 ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> , can you elaborate more about code generation from discrimination network? I am unable to understand what will be the form of generated python code.",
  "id": "5927b98e2b926f8a6793bde4",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-26T05:13:50.281Z",
  "text": "@Upabjojr , can you elaborate more about code generation from discrimination network? I am unable to understand what will be the form of generated python code.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> apparently the many-to-one matcher of MatchPy creates this data structure called <em>discrimination net</em>, apparently it&#39;s a supporting data structure to allow for fast matching of many patterns at the same time. From what I&#39;ve understood, MatchPy has an algorithm that confronts the expression to be matched with the <em>discrimination net</em>. Given a discrimination net, such an algorithm could be made into a decision tree.",
  "id": "5927f3462b926f8a67949cb6",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-26T09:20:06.298Z",
  "text": "@parsoyaarihant apparently the many-to-one matcher of MatchPy creates this data structure called _discrimination net_, apparently it's a supporting data structure to allow for fast matching of many patterns at the same time. From what I've understood, MatchPy has an algorithm that confronts the expression to be matched with the _discrimination net_. Given a discrimination net, such an algorithm could be made into a decision tree.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Remember the description: <a href=\"https://arxiv.org/pdf/1705.00907.pdf\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://arxiv.org/pdf/1705.00907.pdf</a>",
  "id": "5927f35900efc2bb3ea7d33a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-26T09:20:25.206Z",
  "text": "Remember the description: https://arxiv.org/pdf/1705.00907.pdf",
  "unread": false,
  "urls": [
   {
    "url": "https://arxiv.org/pdf/1705.00907.pdf"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Yes, I ment to ask about <code>code generation</code> part. It would be better if you could give a <code>code generation</code> example of any other structure(such as BST).",
  "id": "592811a0cb83ba6a41ff44bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-26T11:29:36.328Z",
  "text": "Yes, I ment to ask about `code generation` part. It would be better if you could give a `code generation` example of any other structure(such as BST).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "The code generation could actually be quite a hard task. One would need to understand how MatchPy stores the discrimination net, debug it, understand it and ultimately write a code generation routine. I cannot really define how hard it is. The creators of MatchPy suggested me that it might indeed be quite hard.",
  "id": "5928275fc4d73f445ae77caf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-26T13:02:23.028Z",
  "text": "The code generation could actually be quite a hard task. One would need to understand how MatchPy stores the discrimination net, debug it, understand it and ultimately write a code generation routine. I cannot really define how hard it is. The creators of MatchPy suggested me that it might indeed be quite hard.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "The form of the generated Python code should be something similar to a decision tree (given an input expression, get which pattern matches it).",
  "id": "592827abfa63ba2f76816cf3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-26T13:03:39.088Z",
  "text": "The form of the generated Python code should be something similar to a decision tree (given an input expression, get which pattern matches it).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> we could actually already test it: you have rewritten the rules for two patterns. If you try to put the into the many-to-one mode, one could explore which kind of data structure is being created and then see how to generate a decision tree for this simple case.",
  "id": "5928327b0ba4d59763e2ee4f",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-26T13:49:47.798Z",
  "text": "@parsoyaarihant we could actually already test it: you have rewritten the rules for two patterns. If you try to put the into the many-to-one mode, one could explore which kind of data structure is being created and then see how to generate a decision tree for this simple case.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "it sounds like using matchpy would involve a lot of hacking around things. Since we are starting from scratch, it seems it would be better to reimplement or modify the matchpy code to more closely work with SymPy&#39;s data types ",
  "id": "59287636331deef46469ca7c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-26T18:38:46.163Z",
  "text": "it sounds like using matchpy would involve a lot of hacking around things. Since we are starting from scratch, it seems it would be better to reimplement or modify the matchpy code to more closely work with SymPy's data types ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> , I have implemented two rules using MatchPy&#39;s <code>ManyToOneReplacer</code> <a href=\"https://github.com/parsoyaarihant/Rubi-MatchPy/blob/master/Rubi/patterns.py\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a>(code for <code>Constraint</code> and <code>Operators</code> is in the same file).",
  "id": "59297be3eec422e415f3ec64",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-27T13:15:15.874Z",
  "text": "@Upabjojr , I have implemented two rules using MatchPy's `ManyToOneReplacer` [here](https://github.com/parsoyaarihant/Rubi-MatchPy/blob/master/Rubi/patterns.py)(code for `Constraint ` and `Operators` is in the same file).",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/parsoyaarihant/Rubi-MatchPy/blob/master/Rubi/patterns.py"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2017-05-29T10:41:44.071Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> , can you suggest a project timeline so we can divide our work and start coding? I think it would be better to reimplement <code>matchpy</code> using SymPy&#39;s <code>Symbols</code>  and <code>expressions</code> so we can also solve the problem of python 3.6. However, MatchPy does not currently support <a href=\"https://reference.wolfram.com/language/tutorial/OptionalAndDefaultArguments.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">default values</a> for Wild variables.",
  "id": "592bfac900efc2bb3eb5c0c8",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-29T10:41:13.730Z",
  "text": "@Upabjojr , can you suggest a project timeline so we can divide our work and start coding? I think it would be better to reimplement `matchpy` using SymPy's `Symbols`  and `expressions` so we can also solve the problem of python 3.6. However, MatchPy does not currently support [default values](https://reference.wolfram.com/language/tutorial/OptionalAndDefaultArguments.html) for Wild variables.",
  "unread": false,
  "urls": [
   {
    "url": "https://reference.wolfram.com/language/tutorial/OptionalAndDefaultArguments.html"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> <span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span> What about:<ul>\n<li>1st person: translates the code of MatchPy.</li>\n<li>2nd person: creates a translator for the RUBI rules (first to MatchPy, then to the new code that person 1 will develop).</li>\n</ul>\n",
  "id": "592c13d4eec422e415fca430",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   },
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-29T12:28:04.069Z",
  "text": "@parsoyaarihant @Abdullahjavednesar What about:\n* 1st person: translates the code of MatchPy.\n* 2nd person: creates a translator for the RUBI rules (first to MatchPy, then to the new code that person 1 will develop).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "The easiest solution for the default values is to implement the rule twice.",
  "id": "592c13fecb83ba6a410d1b6a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-29T12:28:46.766Z",
  "text": "The easiest solution for the default values is to implement the rule twice.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> can you please elaborate 2nd person&#39;s work ",
  "id": "592c27fffcbbe1891c5722d5",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-29T13:54:07.082Z",
  "text": "@Upabjojr can you please elaborate 2nd person's work ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "We have the down values of the <a href=\"https://raw.githubusercontent.com/Upabjojr/RUBI_integration_rules/master/RUBI_DownValues_FullForm.txt\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">RUBI rules</a>. The 2nd person would (in my proposal) prepare a translator to transform that file into a MatchPy syntax (at first), when the 1st person is ready, this translator could be adapted to the new format.",
  "id": "592c28f9631b8e4e6123c187",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-29T13:58:17.350Z",
  "text": "We have the down values of the [RUBI rules](https://raw.githubusercontent.com/Upabjojr/RUBI_integration_rules/master/RUBI_DownValues_FullForm.txt). The 2nd person would (in my proposal) prepare a translator to transform that file into a MatchPy syntax (at first), when the 1st person is ready, this translator could be adapted to the new format.",
  "unread": false,
  "urls": [
   {
    "url": "https://raw.githubusercontent.com/Upabjojr/RUBI_integration_rules/master/RUBI_DownValues_FullForm.txt"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Can anyone prepare some utilities to translate SymPy &lt;===&gt; MatchPy, it should be easy to prepare (<code>sympy2matchpy</code> could be a recurrent function developing on the expression tree).",
  "id": "592c2946cb83ba6a410d7c81",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-29T13:59:34.655Z",
  "text": "Can anyone prepare some utilities to translate SymPy <===> MatchPy, it should be easy to prepare (`sympy2matchpy` could be a recurrent function developing on the expression tree).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "In addition to translating of rules from <code>DownValues</code>, we will also be required to implement Rubi constraints in MatchPy as I have done <a href=\"https://github.com/parsoyaarihant/Rubi-MatchPy/blob/master/Rubi/constraint.py\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a>.",
  "id": "592c36b1f3001cd3426d3421",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-29T14:56:49.966Z",
  "text": "In addition to translating of rules from `DownValues`, we will also be required to implement Rubi constraints in MatchPy as I have done [here](https://github.com/parsoyaarihant/Rubi-MatchPy/blob/master/Rubi/constraint.py).",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/parsoyaarihant/Rubi-MatchPy/blob/master/Rubi/constraint.py"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2017-05-29T15:02:58.463Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Then we should be able to use MatchPy for Rubi. I can work on translating rubi tests as we translate rules.",
  "id": "592c36e9fa63ba2f768f7f19",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-29T14:57:45.912Z",
  "text": "Then we should be able to use MatchPy for Rubi. I can work on translating rubi tests as we translate rules.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I have used <a href=\"https://bitbucket.org/amentajo/lib3to2\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">3to2</a> to convert matchpy to python2 syntax. I am unable to convert all matchpy tests but I have tested <code>ManyToOneReplacer</code> in the converted code.",
  "id": "592e53e2631b8e4e612c89fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-31T05:25:54.466Z",
  "text": "I have used [3to2](https://bitbucket.org/amentajo/lib3to2) to convert matchpy to python2 syntax. I am unable to convert all matchpy tests but I have tested `ManyToOneReplacer` in the converted code.",
  "unread": false,
  "urls": [
   {
    "url": "https://bitbucket.org/amentajo/lib3to2"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Nice idea, where is the code?",
  "id": "592e9e2ffcbbe1891c614805",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-31T10:42:55.603Z",
  "text": "Nice idea, where is the code?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Here: <a href=\"https://github.com/parsoyaarihant/matchpy-python2/tree/master\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/parsoyaarihant/matchpy-python2/tree/master</a>",
  "id": "592ea5c7fcbbe1891c6166a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-31T11:15:19.698Z",
  "text": "Here: https://github.com/parsoyaarihant/matchpy-python2/tree/master",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/parsoyaarihant/matchpy-python2/tree/master"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I have added <code>test.py</code> to which have some tests for MatchPy <code>expressions</code>",
  "id": "592ea5f12b926f8a67ad9511",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-31T11:16:01.298Z",
  "text": "I have added `test.py` to which have some tests for MatchPy `expressions`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Some libraries such as <code>typing</code> are only available for Python3 but I have used <a href=\"https://github.com/python/typing\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">this</a> which contains backport version on <code>typing</code>.",
  "id": "592ea727f3001cd34277664e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-31T11:21:11.907Z",
  "text": "Some libraries such as `typing` are only available for Python3 but I have used [this](https://github.com/python/typing) which contains backport version on `typing`.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/python/typing"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "OK, which tests are not working on the 3to2&#39;ed version? Do you think it&#39;s fine for our purposes?",
  "id": "592ebdd4fcbbe1891c61d8fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-31T12:57:56.727Z",
  "text": "OK, which tests are not working on the 3to2'ed version? Do you think it's fine for our purposes?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<code>3to2</code> is not able to convert tests written for MatchPy due to syntax issues. I am re-writing those tests and they are working fine.",
  "id": "592ec99b5e34568d5eabc7fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-31T13:48:11.861Z",
  "text": "`3to2` is not able to convert tests written for MatchPy due to syntax issues. I am re-writing those tests and they are working fine.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-05-31T13:52:38.010Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Currently the code is only working for python2(because <code>3to2</code> added few python2 functions), but I am trying to make it work for python3 also.",
  "id": "592eca6f0ba4d59763fae00c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-31T13:51:43.805Z",
  "text": "Currently the code is only working for python2(because `3to2` added few python2 functions), but I am trying to make it work for python3 also.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "+1",
  "id": "592ecda238b37b982841d8db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-31T14:05:22.746Z",
  "text": "+1",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/certik",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20568?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20568?v=4&s=60",
   "displayName": "Ond\u0159ej \u010cert\u00edk",
   "gv": "4",
   "id": "529d5946ed5ab0b3bf04e5d0",
   "url": "/certik",
   "username": "certik",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> I sent you an email, but I don&#39;t know if you got it. Did you setup a blog on planet-sympy?",
  "id": "592ee62c00efc2bb3ec234b0",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-31T15:50:04.627Z",
  "text": "@parsoyaarihant I sent you an email, but I don't know if you got it. Did you setup a blog on planet-sympy?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"certik\" class=\"mention\">@certik</span> , I will setup the blog by tonight.",
  "id": "592ef476631b8e4e612f9a8b",
  "issues": [],
  "mentions": [
   {
    "screenName": "certik",
    "userId": "529d5946ed5ab0b3bf04e5d0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-31T16:51:02.049Z",
  "text": "@certik , I will setup the blog by tonight.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"certik\" class=\"mention\">@certik</span> , I have submitted my PR on planet-sympy.",
  "id": "592ef8822b926f8a67af48f5",
  "issues": [],
  "mentions": [
   {
    "screenName": "certik",
    "userId": "529d5946ed5ab0b3bf04e5d0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-31T17:08:18.078Z",
  "text": "@certik , I have submitted my PR on planet-sympy.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-01T07:07:46.245Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "For sympy to matchpy converter, can <a href=\"https://stackoverflow.com/a/7719486/6687281\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">this</a> be helpful?",
  "id": "592fbd33631b8e4e6132b2a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-01T07:07:31.788Z",
  "text": "For sympy to matchpy converter, can [this](https://stackoverflow.com/a/7719486/6687281) be helpful?",
  "unread": false,
  "urls": [
   {
    "url": "https://stackoverflow.com/a/7719486/6687281"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I have used external modules (such as <a href=\"https://github.com/python/typing/tree/master/python2\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">typing</a>(backport version of <code>typing</code>) and <a href=\"https://github.com/aliles/funcsigs\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">funcsigs</a>(backport version of <code>inspect</code>)) in order to make MatchPy&#39;s code work in python2.",
  "id": "5930fdc5f2dd2dba065f9836",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-02T05:55:17.443Z",
  "text": "I have used external modules (such as [typing](https://github.com/python/typing/tree/master/python2)(backport version of `typing`) and [funcsigs](https://github.com/aliles/funcsigs)(backport version of `inspect`)) in order to make MatchPy's code work in python2.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/python/typing/tree/master/python2"
   },
   {
    "url": "https://github.com/aliles/funcsigs"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I am planning to implement those modules in sympy.",
  "id": "5930ffa8142826e97275ddde",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-02T06:03:20.431Z",
  "text": "I am planning to implement those modules in sympy.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> , I have submitted a PR <span data-link-type=\"issue\" data-issue=\"12702\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#12702</span> for MatchPy. However the tests are not passing since the module currently have external dependencies.",
  "id": "59313521cf9c13503c472f65",
  "issues": [
   {
    "number": "12702",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-02T09:51:29.807Z",
  "text": "@Upabjojr , I have submitted a PR https://github.com/sympy/sympy/pull/12702 for MatchPy. However the tests are not passing since the module currently have external dependencies.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/certik",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20568?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20568?v=4&s=60",
   "displayName": "Ond\u0159ej \u010cert\u00edk",
   "gv": "4",
   "id": "529d5946ed5ab0b3bf04e5d0",
   "url": "/certik",
   "username": "certik",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span>, <span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span>  please don&#39;t forget to write a blog post today",
  "id": "59317bcf6549436c7d0cdecf",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   },
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-02T14:53:03.326Z",
  "text": "@parsoyaarihant, @Abdullahjavednesar  please don't forget to write a blog post today",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"certik\" class=\"mention\">@certik</span> I have updated my blog on WordPress don&#39;t know why it didn&#39;t get synced with Planet-sympy ",
  "id": "5931a989f2dd2dba06628f9d",
  "issues": [],
  "mentions": [
   {
    "screenName": "certik",
    "userId": "529d5946ed5ab0b3bf04e5d0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-02T18:08:09.154Z",
  "text": "@certik I have updated my blog on WordPress don't know why it didn't get synced with Planet-sympy ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "Okay! it&#39;s showing now. ",
  "id": "5931aa21f2dd2dba06629291",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-02T18:10:41.746Z",
  "text": "Okay! it's showing now. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> from your email  it looks that you don&#39;t have a clear idea on how to implement <code>sympy2matchpy( )</code>. I believe it is simple, just create a recursive function that keep calling itself on all <code>.args</code> of the current node, until it reaches an atom.",
  "id": "5931af0dca6d4ae80cd61319",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-02T18:31:41.928Z",
  "text": "@parsoyaarihant from your email  it looks that you don't have a clear idea on how to implement `sympy2matchpy( )`. I believe it is simple, just create a recursive function that keep calling itself on all `.args` of the current node, until it reaches an atom.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<pre><code class=\"python\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sympy2matchpy</span><span class=\"params\">(expr)</span>:</span>\n    <span class=\"keyword\">if</span> expr <span class=\"keyword\">is</span> an atom <span class=\"keyword\">or</span> has no args:\n        <span class=\"keyword\">return</span> matchpy.Symbol(expr)\n    matchpy_node = get_matchpy_node(type(expr))\n    args = [sympy2matchpy(i) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> expr.args]\n    <span class=\"keyword\">return</span> matchpy_node(*args)   <span class=\"comment\"># or whatever syntax needed.</span></code></pre>",
  "id": "5931afc202c480e6720781c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-02T18:34:42.473Z",
  "text": "```python\ndef sympy2matchpy(expr):\n    if expr is an atom or has no args:\n        return matchpy.Symbol(expr)\n    matchpy_node = get_matchpy_node(type(expr))\n    args = [sympy2matchpy(i) for i in expr.args]\n    return matchpy_node(*args)   # or whatever syntax needed.\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> , thanks.",
  "id": "5931b4ecf31c8ced0cf940d5",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-02T18:56:44.968Z",
  "text": "@Upabjojr , thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Remember that <a href=\"https://gist.github.com/Upabjojr/bc07c49262944f9c1eb0\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">fullform2sympy</a> might have some useful tools to parse the rules in full-form mode.",
  "id": "5931b6836549436c7d0debe8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-02T19:03:31.267Z",
  "text": "Remember that [fullform2sympy](https://gist.github.com/Upabjojr/bc07c49262944f9c1eb0) might have some useful tools to parse the rules in full-form mode.",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/Upabjojr/bc07c49262944f9c1eb0"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Yes, I used it to convert few rules into MatchPy syntax. I haven&#39;t posted my code yet.",
  "id": "5931b6d502c480e67207a043",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-02T19:04:53.992Z",
  "text": "Yes, I used it to convert few rules into MatchPy syntax. I haven't posted my code yet.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I think we are yet to decide a weekly meeting schedule. I am available throughout the week.",
  "id": "5931b73802c480e67207a25b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-02T19:06:32.507Z",
  "text": "I think we are yet to decide a weekly meeting schedule. I am available throughout the week.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> <span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span> Are you by chance able to work together initially on a tool to import the rules into MatchPy? I would prefer to start by having some working code as soon as possible, once this is done, we can switch to importing it into SymPy.",
  "id": "5932dccbcf9c13503c4d82b9",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   },
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-03T15:59:07.709Z",
  "text": "@parsoyaarihant @Abdullahjavednesar Are you by chance able to work together initially on a tool to import the rules into MatchPy? I would prefer to start by having some working code as soon as possible, once this is done, we can switch to importing it into SymPy.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/certik",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20568?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20568?v=4&s=60",
   "displayName": "Ond\u0159ej \u010cert\u00edk",
   "gv": "4",
   "id": "529d5946ed5ab0b3bf04e5d0",
   "url": "/certik",
   "username": "certik",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span>, <span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span>  when will sympy drop Python 2.7? Perhaps it&#39;s not needed to reimplement matchpy, just because it doesn&#39;t support 2.7.",
  "id": "5932faf8ca6d4ae80cda64bf",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   },
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-03T18:07:52.986Z",
  "text": "@Upabjojr, @asmeurer  when will sympy drop Python 2.7? Perhaps it's not needed to reimplement matchpy, just because it doesn't support 2.7.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/certik",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20568?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20568?v=4&s=60",
   "displayName": "Ond\u0159ej \u010cert\u00edk",
   "gv": "4",
   "id": "529d5946ed5ab0b3bf04e5d0",
   "url": "/certik",
   "username": "certik",
   "v": 17
  },
  "html": "In his blog post <a href=\"https://parsoyaarihant.github.io/blog/gsoc/2017/06/02/Coding-period-starts.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://parsoyaarihant.github.io/blog/gsoc/2017/06/02/Coding-period-starts.html</a>, <span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> wrote that he is not very familiar with the algorithms in matchpy, etc. I wonder if it&#39;s not better to simply use matchpy, and simply depend on Python 3.6 (or whatever version is needed) for this Rubi integration module. And simply deliver on the project first. If all is good, then perhaps we can think if it makes sense to port something to sympy itself.",
  "id": "5932fbb57503e2b70609b700",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-03T18:11:01.809Z",
  "text": "In his blog post https://parsoyaarihant.github.io/blog/gsoc/2017/06/02/Coding-period-starts.html, @parsoyaarihant wrote that he is not very familiar with the algorithms in matchpy, etc. I wonder if it's not better to simply use matchpy, and simply depend on Python 3.6 (or whatever version is needed) for this Rubi integration module. And simply deliver on the project first. If all is good, then perhaps we can think if it makes sense to port something to sympy itself.",
  "unread": false,
  "urls": [
   {
    "url": "https://parsoyaarihant.github.io/blog/gsoc/2017/06/02/Coding-period-starts.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/certik",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20568?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20568?v=4&s=60",
   "displayName": "Ond\u0159ej \u010cert\u00edk",
   "gv": "4",
   "id": "529d5946ed5ab0b3bf04e5d0",
   "url": "/certik",
   "username": "certik",
   "v": 17
  },
  "html": "I don&#39;t want to spend the whole summer just porting matchpy to make it Python 2 / 3 compatible. ",
  "id": "5932fc2ff2dd2dba06670cd0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-03T18:13:03.043Z",
  "text": "I don't want to spend the whole summer just porting matchpy to make it Python 2 / 3 compatible. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> , I and Abdullah were discussing about it earlier today. We are preparing a schedule to implement Rubi. I will share the schedule here once it is completed(hopefully by tomorrow). </p><p>Along with importing rules, we also need to add rubi &#39;utility functions&#39; and &#39;constraints&#39;(which I am handeling). Abdullah is working on parsing rules from <code>Downvalues[]</code>.</p><p>I have implemented <code>sympy2matchpy</code>  function also. </p>",
  "id": "59330127167d046a7d65fa1f",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-03T18:34:15.014Z",
  "text": "@Upabjojr , I and Abdullah were discussing about it earlier today. We are preparing a schedule to implement Rubi. I will share the schedule here once it is completed(hopefully by tomorrow). \n\nAlong with importing rules, we also need to add rubi 'utility functions' and 'constraints'(which I am handeling). Abdullah is working on parsing rules from `Downvalues[]`.\n\nI have implemented `sympy2matchpy`  function also. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span> if the tree parsing tool turns out to be too complicated to used, you can also think about using regular expressions as an alternative methods (to parse the DownValues of RUBI).",
  "id": "59333795f2dd2dba0667dfbf",
  "issues": [],
  "mentions": [
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-03T22:26:29.431Z",
  "text": "@Abdullahjavednesar if the tree parsing tool turns out to be too complicated to used, you can also think about using regular expressions as an alternative methods (to parse the DownValues of RUBI).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "The best thing to do if you need my support is to share the code and ask. Commenting the code is far better.",
  "id": "593337c0167d046a7d66b8bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-03T22:27:11.999Z",
  "text": "The best thing to do if you need my support is to share the code and ask. Commenting the code is far better.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> I am trying to using regular expressions, I had a discussion with <span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span>  I think we are almost successful porting a part of algebraic rules to MatchPy. Regarding the schedule, we tried preparing a rough patch of it, Arihant will be sharing it soon. ",
  "id": "5934d9d4ca6d4ae80ce086cc",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   },
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-05T04:11:00.456Z",
  "text": "@Upabjojr I am trying to using regular expressions, I had a discussion with @parsoyaarihant  I think we are almost successful porting a part of algebraic rules to MatchPy. Regarding the schedule, we tried preparing a rough patch of it, Arihant will be sharing it soon. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "If you want, I can try to give you the down values of a subset of rules.",
  "id": "59357704cf9c13503c567f7c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-05T15:21:40.656Z",
  "text": "If you want, I can try to give you the down values of a subset of rules.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "the plan is to drop 2.7 support in 2020, when core Python does ",
  "id": "5935baf9a50653265180a98a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-05T20:11:37.182Z",
  "text": "the plan is to drop 2.7 support in 2020, when core Python does ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I personally would rather see matchpy just reimplemented for sympy. it sounds like there are already a lot of hacks that are needed to make it work with sympy anyway, so why not implement it in a way that doesn&#39;t require hacks?",
  "id": "5935bb267fffd02163b866d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-05T20:12:22.757Z",
  "text": "I personally would rather see matchpy just reimplemented for sympy. it sounds like there are already a lot of hacks that are needed to make it work with sympy anyway, so why not implement it in a way that doesn't require hacks?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "since we are starting from scratch ",
  "id": "5935bb2e3072d89a693f6203",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-05T20:12:30.321Z",
  "text": "since we are starting from scratch ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> our first aim is to make RUBI work on MatchPy, then we can proceed to perform a translation. Personally, I would like to see a decision tree generator, but maybe that can be discussed with the MatchPy developers.",
  "id": "5935df2bcf9c13503c58769b",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-05T22:46:03.651Z",
  "text": "@asmeurer our first aim is to make RUBI work on MatchPy, then we can proceed to perform a translation. Personally, I would like to see a decision tree generator, but maybe that can be discussed with the MatchPy developers.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> , I can obtain DownValues of rules locally using Mathematica or Mathics.</p><p>I and <span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span> are trying to implement all algebriac rules first. We need to implement ~55 Rubi utility functions in. Hopefully, by the end of this week, we will be able to run Rubi test suit for all Algebriac rules.</p><p>I will send the link the repo we are working on by tomorrow(the code is a bit messy right now).</p>",
  "id": "5936ad3d31f589c64f7d7a5e",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   },
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-06T13:25:17.803Z",
  "text": "@Upabjojr , I can obtain DownValues of rules locally using Mathematica or Mathics.\n\nI and @Abdullahjavednesar are trying to implement all algebriac rules first. We need to implement ~55 Rubi utility functions in. Hopefully, by the end of this week, we will be able to run Rubi test suit for all Algebriac rules.\n\nI will send the link the repo we are working on by tomorrow(the code is a bit messy right now).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span>, <span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span>, <span data-link-type=\"mention\" data-screen-name=\"certik\" class=\"mention\">@certik</span>, Can anyone help me out with the definitions of these Utility Functions ExpandIntegrand(), TogetherSimplify(), RemoveContent() and what exactly does the third argument mean in Coefficient().",
  "id": "5937b177e531dbc905bb84d1",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   },
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   },
   {
    "screenName": "certik",
    "userId": "529d5946ed5ab0b3bf04e5d0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-07T07:55:35.242Z",
  "text": "@Upabjojr, @asmeurer, @certik, Can anyone help me out with the definitions of these Utility Functions ExpandIntegrand(), TogetherSimplify(), RemoveContent() and what exactly does the third argument mean in Coefficient().",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<p>Here is our progress so far:</p><p><a href=\"https://github.com/parsoyaarihant/sympy/tree/rubi4/sympy/rubi\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/parsoyaarihant/sympy/tree/rubi4/sympy/rubi</a></p><p>I am working on adding new patterns(since MatchPy does not default arguments) and Abdullah is working on adding Utility functions. I have not added many rules since we haven&#39;t implemented many utility functions which the rules are using.</p>",
  "id": "5938356ce531dbc905be01ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-07T17:18:36.639Z",
  "text": "Here is our progress so far:\n\nhttps://github.com/parsoyaarihant/sympy/tree/rubi4/sympy/rubi\n\nI am working on adding new patterns(since MatchPy does not default arguments) and Abdullah is working on adding Utility functions. I have not added many rules since we haven't implemented many utility functions which the rules are using.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/parsoyaarihant/sympy/tree/rubi4/sympy/rubi"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2017-06-07T17:36:02.189Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span> I had a quick look at those functions, what I got is:</p><ul>\n<li><code>ExpandIntegrand</code>has a quite complicated definition, the name suggests that it may perform the expansion of the integrand expression.</li>\n<li><code>TogetherSimplify</code> performs a composition of together, a simplify and then a together, if the time range is within a certain limit, otherwise it&#39;s got a fallback.</li>\n<li><code>RemoveContent[u, x]</code> returns <code>u</code> with the content free of <code>x</code> removed. </li>\n</ul>\n<p>The best thing you can do is to load the definitions in Mathematica (or in Mathics if you don&#39;t have Mathematica) and try to verify their behavior.</p>",
  "id": "59383975f31c8ced0c127abc",
  "issues": [],
  "mentions": [
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-07T17:35:49.883Z",
  "text": "@Abdullahjavednesar I had a quick look at those functions, what I got is:\n* `ExpandIntegrand`has a quite complicated definition, the name suggests that it may perform the expansion of the integrand expression.\n* `TogetherSimplify` performs a composition of together, a simplify and then a together, if the time range is within a certain limit, otherwise it's got a fallback.\n* `RemoveContent[u, x]` returns `u` with the content free of `x` removed. \n\nThe best thing you can do is to load the definitions in Mathematica (or in Mathics if you don't have Mathematica) and try to verify their behavior.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "There are more two sets of tests I&#39;ve almost completed then we&#39;ll be done with the entire algebraic tests. ",
  "id": "593849b4f31c8ced0c12c863",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-07T18:45:08.305Z",
  "text": "There are more two sets of tests I've almost completed then we'll be done with the entire algebraic tests. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "It would be wise to keep showing your code, so that I can start commenting immediately",
  "id": "59385e37e531dbc905bed44b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-07T20:12:39.637Z",
  "text": "It would be wise to keep showing your code, so that I can start commenting immediately",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Last I tried you can use Mathematica online for free. I don&#39;t know what their free limits are ",
  "id": "593872ea3072d89a693f812e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-07T21:40:58.303Z",
  "text": "Last I tried you can use Mathematica online for free. I don't know what their free limits are ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "<a href=\"http://mathematica.wolframcloud.com/app/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://mathematica.wolframcloud.com/app/</a>",
  "id": "5938731aa857b02c47915082",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-07T21:41:46.098Z",
  "text": "http://mathematica.wolframcloud.com/app/",
  "unread": false,
  "urls": [
   {
    "url": "http://mathematica.wolframcloud.com/app/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Maybe that isn&#39;t the case anymore actually ",
  "id": "593873702315aeb90c97a82f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-07T21:43:12.244Z",
  "text": "Maybe that isn't the case anymore actually ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-09T17:40:36.734Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I have uploaded my code for parser here(code is in <code>parse.py</code> file):",
  "id": "593add0d6549436c7d30d3c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-09T17:38:21.156Z",
  "text": "I have uploaded my code for parser here(code is in `parse.py` file):",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<a href=\"https://github.com/parsoyaarihant/Rubi-Parse\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/parsoyaarihant/Rubi-Parse</a>",
  "id": "593add0de531dbc905c8e700",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-09T17:38:21.974Z",
  "text": "https://github.com/parsoyaarihant/Rubi-Parse",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/parsoyaarihant/Rubi-Parse"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "It substitutes all possible combinations of default values and generates new rules.",
  "id": "593add64142826e9729c8ac0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-09T17:39:48.468Z",
  "text": "It substitutes all possible combinations of default values and generates new rules.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "you can do <code>python parse.py</code> to print rules from <code>DownValues</code> present in the file.",
  "id": "593addcdca6d4ae80cf9e4a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-09T17:41:33.916Z",
  "text": "you can do `python parse.py` to print rules from `DownValues` present in the file.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> , I added all algebriac rules 1.2(~520 after adding new rules to account for <code>Optional Arguments</code>)  in MatchPy&#39;s <code>ManyToOneReplacer</code>. I tried very basic tests(such as <code>rubi_integrate(x**m, x)</code>) and they are running very slow. Previously, I added only ~90 rules, and the same test cases ran very fast compard to the current speed.",
  "id": "593eba6af6a78eab483faaf2",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-12T15:59:38.588Z",
  "text": "@Upabjojr , I added all algebriac rules 1.2(~520 after adding new rules to account for `Optional Arguments`)  in MatchPy's `ManyToOneReplacer`. I tried very basic tests(such as `rubi_integrate(x**m, x)`) and they are running very slow. Previously, I added only ~90 rules, and the same test cases ran very fast compard to the current speed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-12T16:02:19.942Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Tests: <a href=\"https://github.com/parsoyaarihant/sympy/blob/rubi4/sympy/rubi/tests/test_rubi_test_suit.py\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/parsoyaarihant/sympy/blob/rubi4/sympy/rubi/tests/test_rubi_test_suit.py</a>",
  "id": "593ebacc02c480e672387122",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-12T16:01:16.168Z",
  "text": "Tests: https://github.com/parsoyaarihant/sympy/blob/rubi4/sympy/rubi/tests/test_rubi_test_suit.py",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/parsoyaarihant/sympy/blob/rubi4/sympy/rubi/tests/test_rubi_test_suit.py"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Patterns: <a href=\"https://github.com/parsoyaarihant/sympy/blob/rubi4/sympy/rubi/patterns.py\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/parsoyaarihant/sympy/blob/rubi4/sympy/rubi/patterns.py</a>",
  "id": "593ebb03f6a78eab483fad2f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-12T16:02:11.091Z",
  "text": "Patterns: https://github.com/parsoyaarihant/sympy/blob/rubi4/sympy/rubi/patterns.py",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/parsoyaarihant/sympy/blob/rubi4/sympy/rubi/patterns.py"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "That is good news. Are the results correct?",
  "id": "593ec4a1d83c50560cff5f7b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-12T16:43:13.852Z",
  "text": "That is good news. Are the results correct?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "For the slowness of MatchPy, maybe you should ask its authors",
  "id": "593ec4c031f589c64f9d3c69",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-12T16:43:44.115Z",
  "text": "For the slowness of MatchPy, maybe you should ask its authors",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "There are more tests on RUBI&#39;s website, if it can be interesting: <a href=\"http://www.apmaths.uwo.ca/~arich/IntegrationProblems/MathematicaSyntaxFiles/MathematicaSyntaxFiles.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://www.apmaths.uwo.ca/~arich/IntegrationProblems/MathematicaSyntaxFiles/MathematicaSyntaxFiles.html</a>",
  "id": "593ec540f6a78eab483fdf14",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-12T16:45:52.219Z",
  "text": "There are more tests on RUBI's website, if it can be interesting: http://www.apmaths.uwo.ca/~arich/IntegrationProblems/MathematicaSyntaxFiles/MathematicaSyntaxFiles.html",
  "unread": false,
  "urls": [
   {
    "url": "http://www.apmaths.uwo.ca/~arich/IntegrationProblems/MathematicaSyntaxFiles/MathematicaSyntaxFiles.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> do you feel like going the code-generation way?",
  "id": "593ec7c5cf9c13503c7ba9a3",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-12T16:56:37.852Z",
  "text": "@parsoyaarihant do you feel like going the code-generation way?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> I have already translated the same test suite in Maple syntax",
  "id": "593ecc51e531dbc905d72656",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-12T17:16:01.345Z",
  "text": "@Upabjojr I have already translated the same test suite in Maple syntax",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "<a href=\"http://www.apmaths.uwo.ca/~arich/IntegrationProblems/MapleSyntaxFiles/MapleSyntaxFiles.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://www.apmaths.uwo.ca/~arich/IntegrationProblems/MapleSyntaxFiles/MapleSyntaxFiles.html</a>",
  "id": "593ecc55c59bd9c4640c09b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-12T17:16:05.876Z",
  "text": "http://www.apmaths.uwo.ca/~arich/IntegrationProblems/MapleSyntaxFiles/MapleSyntaxFiles.html",
  "unread": false,
  "urls": [
   {
    "url": "http://www.apmaths.uwo.ca/~arich/IntegrationProblems/MapleSyntaxFiles/MapleSyntaxFiles.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "but before that we need to get through the definitions of some utility functions, I and Arihant are working on that now.",
  "id": "593ecd14cf9c13503c7bc581",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-12T17:19:16.375Z",
  "text": "but before that we need to get through the definitions of some utility functions, I and Arihant are working on that now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "The results are correct. I was concerned that the matcher will get slower if we add more rules. I will consult Manuel Krebber for that.",
  "id": "593ee0cc31f589c64f9dcbb4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-12T18:43:24.748Z",
  "text": "The results are correct. I was concerned that the matcher will get slower if we add more rules. I will consult Manuel Krebber for that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I have had a look at the MatchPy data structure generated by your code. My first impression is that the variables are being repeated a lot of times in the data structures.",
  "id": "593f34c3c59bd9c4640db926",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-13T00:41:39.993Z",
  "text": "I have had a look at the MatchPy data structure generated by your code. My first impression is that the variables are being repeated a lot of times in the data structures.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Apparently you can visualize MatchPy&#39;s data structure by calling:<pre><code class=\"python\">rubi.matcher.as_graph()</code></pre>",
  "id": "593f352ccf9c13503c7d6c00",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-13T00:43:24.143Z",
  "text": "Apparently you can visualize MatchPy's data structure by calling:\n```python\nrubi.matcher.as_graph()\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Unfortunately all the loaded rules make it pretty slow",
  "id": "593f354cd83c50560c013e63",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-13T00:43:56.350Z",
  "text": "Unfortunately all the loaded rules make it pretty slow",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Manuel pointed out that <code>rubi_integrate()</code> function was compiling all rules everytime we call it. I have fixed the issue now and the tests are running at good speed.",
  "id": "593fcc1ad83c50560c03705c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-13T11:27:22.245Z",
  "text": "Manuel pointed out that `rubi_integrate()` function was compiling all rules everytime we call it. I have fixed the issue now and the tests are running at good speed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "OK good",
  "id": "5940053f31f589c64fa294f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-13T15:31:11.837Z",
  "text": "OK good",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-13T17:58:17.937Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I found a <a href=\"https://github.com/HPAC/matchpy/issues/9#issuecomment-308186023\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">bug</a> in MatchPy. Because of this, I am unable to add more tests in rubi test suit.",
  "id": "594027a76462d8493c0bcdaf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-13T17:57:59.925Z",
  "text": "I found a [bug](https://github.com/HPAC/matchpy/issues/9#issuecomment-308186023) in MatchPy. Because of this, I am unable to add more tests in rubi test suit.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/HPAC/matchpy/issues/9#issuecomment-308186023"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> prepare the generating code anyway, hopefully the MatchPy guys will have it fixed",
  "id": "59402815c59bd9c46411c37e",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-13T17:59:49.607Z",
  "text": "@parsoyaarihant prepare the generating code anyway, hopefully the MatchPy guys will have it fixed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Is it possible to get test suit for Rubi utility functions? I tried searching on the rubi website but couldn&#39;t find any. It will help us prepare utility functions the right way(because many utility functions are lacking documentation). So, far we are creating our own tests for utility functions. ",
  "id": "5940cf9b6462d8493c0e41ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-14T05:54:35.604Z",
  "text": "Is it possible to get test suit for Rubi utility functions? I tried searching on the rubi website but couldn't find any. It will help us prepare utility functions the right way(because many utility functions are lacking documentation). So, far we are creating our own tests for utility functions. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-14T12:27:11.936Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "How to implement function which has multiple definitions? Example:<pre><code class=\"mathematica\"><span class=\"comment\">(* ::Subsection::Closed:: *)</span>\n<span class=\"comment\">(*SqrtNumberQ[u]*)</span>\n\n\n<span class=\"comment\">(* SqrtNumberQ[u] returns True if u^2 is a rational number; else it returns False. *)</span>\nSqrtNumberQ[m_^n_] :=\n  <span class=\"keyword\">IntegerQ</span>[n] &amp;&amp; SqrtNumberQ[m] || <span class=\"keyword\">IntegerQ</span>[n-<span class=\"number\">1</span>/<span class=\"number\">2</span>] &amp;&amp; RationalQ[m]\n\n\nSqrtNumberQ[u_*v_] :=\n  SqrtNumberQ[u] &amp;&amp; SqrtNumberQ[v]\n\n\nSqrtNumberQ[u_] :=\n  RationalQ[u] || u===<span class=\"keyword\">I</span></code></pre>",
  "id": "59412b8ecf9c13503c857613",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-14T12:26:54.034Z",
  "text": "How to implement function which has multiple definitions? Example:\n```mathematica\n(* ::Subsection::Closed:: *)\n(*SqrtNumberQ[u]*)\n\n\n(* SqrtNumberQ[u] returns True if u^2 is a rational number; else it returns False. *)\nSqrtNumberQ[m_^n_] :=\n  IntegerQ[n] && SqrtNumberQ[m] || IntegerQ[n-1/2] && RationalQ[m]\n\n\nSqrtNumberQ[u_*v_] :=\n  SqrtNumberQ[u] && SqrtNumberQ[v]\n\n\nSqrtNumberQ[u_] :=\n  RationalQ[u] || u===I\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Well, it&#39;s defined through the pattern matcher :)",
  "id": "59414411f6a78eab484a14c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-14T14:11:29.134Z",
  "text": "Well, it's defined through the pattern matcher :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "in that case it&#39;s quite simple:<pre><code class=\"python\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">SqrtNumber</span><span class=\"params\">(expr)</span>:</span>\n    <span class=\"keyword\">if</span> expr.is_Pow:\n        m = expr.base, n = expr.exp\n        <span class=\"keyword\">return</span> ...\n    <span class=\"keyword\">if</span> expr.is_Mul:\n        m, n = expr.args\n        <span class=\"keyword\">return</span> ...\n    <span class=\"keyword\">return</span> ...</code></pre>",
  "id": "5941448931f589c64fa7cb39",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-14T14:13:29.880Z",
  "text": "in that case it's quite simple:\n```python\ndef SqrtNumber(expr):\n    if expr.is_Pow:\n        m = expr.base, n = expr.exp\n        return ...\n    if expr.is_Mul:\n        m, n = expr.args\n        return ...\n    return ...\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "In case you don&#39;t know how to translate it, you could actually try MatchPy itself",
  "id": "594144bdcf9c13503c85f559",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-14T14:14:21.763Z",
  "text": "In case you don't know how to translate it, you could actually try MatchPy itself",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "You probably work with MatchPy expressions, so you need to use the proper matches instead of <code>is_Pow</code> and <code>is_Mul</code> (these are SymPy functions).",
  "id": "594145a7ca6d4ae80c126f5a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-14T14:18:15.028Z",
  "text": "You probably work with MatchPy expressions, so you need to use the proper matches instead of `is_Pow` and `is_Mul` (these are SymPy functions).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Actually, these functions are used in <code>constraint</code>, for now I am <code>sympify</code>ing the <code>constraint</code> since MatchPy doesn&#39;t have modules for symbolic mathematics.  So, I am implementing these functions in SymPy itself.",
  "id": "594164fccf9c13503c86904d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-14T16:31:56.098Z",
  "text": "Actually, these functions are used in `constraint`, for now I am `sympify`ing the `constraint` since MatchPy doesn't have modules for symbolic mathematics.  So, I am implementing these functions in SymPy itself.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "what exactly does this line mean?<pre><code><span class=\"keyword\">MemberQ</span>[<span class=\"list\">{Sin,Cos,Tan,Cot,Sec,Csc}</span>,<span class=\"keyword\">If</span>[<span class=\"keyword\">AtomQ</span>[u],u,<span class=\"keyword\">Head</span>[u]]]</code></pre>",
  "id": "59422e556549436c7d4c52c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-15T06:51:01.464Z",
  "text": "what exactly does this line mean?\n```\nMemberQ[{Sin,Cos,Tan,Cot,Sec,Csc},If[AtomQ[u],u,Head[u]]]\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<a href=\"https://reference.wolfram.com/language/ref/MemberQ.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://reference.wolfram.com/language/ref/MemberQ.html</a>",
  "id": "59429629142826e972ba49a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-15T14:14:01.002Z",
  "text": "https://reference.wolfram.com/language/ref/MemberQ.html",
  "unread": false,
  "urls": [
   {
    "url": "https://reference.wolfram.com/language/ref/MemberQ.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "So <code>MemberQ</code> tests whether the second argument is in the first argument (which has to be a list)",
  "id": "5942964531f589c64fad548b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-15T14:14:29.775Z",
  "text": "So `MemberQ` tests whether the second argument is in the first argument (which has to be a list)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<code>MemberQ[b, a]</code> is like <code>a in b</code> in Python, if I&#39;m not wrong",
  "id": "59429669f6a78eab484f9f23",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-15T14:15:05.194Z",
  "text": "`MemberQ[b, a]` is like `a in b` in Python, if I'm not wrong",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the second argument is an <code>If</code>, which means that it replaces the expression",
  "id": "59429687142826e972ba4bb5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-15T14:15:35.858Z",
  "text": "the second argument is an `If`, which means that it replaces the expression",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "you could translate it into something like:",
  "id": "594296916462d8493c15efcc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-15T14:15:45.000Z",
  "text": "you could translate it into something like:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<pre><code class=\"python\"><span class=\"keyword\">if</span> AtomQ(u):  <span class=\"comment\"># this is the If expression</span>\n    x = u\n<span class=\"keyword\">else</span>:\n    x = Head(u)\n<span class=\"keyword\">return</span> (x <span class=\"keyword\">in</span> [Sin, Cos, Tan, Cot, Sec, Csc])  <span class=\"comment\"># this is the MemberQ instruction</span></code></pre>",
  "id": "594296e7142826e972ba4e12",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-15T14:17:11.956Z",
  "text": "```python\nif AtomQ(u):  # this is the If expression\n    x = u\nelse:\n    x = Head(u)\nreturn (x in [Sin, Cos, Tan, Cot, Sec, Csc])  # this is the MemberQ instruction\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "or more compactly<pre><code class=\"python\">(u <span class=\"keyword\">if</span> AtomQ(u) <span class=\"keyword\">else</span> Head(u)) <span class=\"keyword\">in</span> [Sin, Cos, Tan, Cot, Sec, Csc]</code></pre>",
  "id": "5942971b6462d8493c15f2d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-15T14:18:03.506Z",
  "text": "or more compactly\n```python\n(u if AtomQ(u) else Head(u)) in [Sin, Cos, Tan, Cot, Sec, Csc]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Unfortunately Python make the distinction between statements and expressions, where the expressions do not return any value",
  "id": "5942975d6549436c7d4e16e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-15T14:19:09.601Z",
  "text": "Unfortunately Python make the distinction between statements and expressions, where the expressions do not return any value",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<p>You cannot assign to a variable the return of an <code>if</code>:</p><pre><code class=\"python\">x = <span class=\"keyword\">if</span> Atom(Q):\n    ...</code></pre><p>in Mathematica everything returns a value, so even <code>If</code> returns a value that can be passed into the expression.</p>",
  "id": "594297b902c480e67248b470",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-15T14:20:41.583Z",
  "text": "You cannot assign to a variable the return of an `if`:\n```python\nx = if Atom(Q):\n    ...\n```\nin Mathematica everything returns a value, so even `If` returns a value that can be passed into the expression.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Manuel have fixed the issue in MatchPy.",
  "id": "5943a5356462d8493c1a4a43",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-16T09:30:29.163Z",
  "text": "Manuel have fixed the issue in MatchPy.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "What does <code>LE</code> in Mathematica mean? I couldnt find any documentation on mathematica website:<pre><code class=\"mathematica\">LE[-<span class=\"number\">1</span>,u,<span class=\"number\">1</span>]</code></pre>",
  "id": "5943d95302c480e6724de09e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-16T13:12:51.787Z",
  "text": "What does `LE` in Mathematica mean? I couldnt find any documentation on mathematica website:\n```mathematica\nLE[-1,u,1]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "It is used in:<pre><code class=\"mathematica\">RealQ[f_[u_]] :=\n  <span class=\"keyword\">If</span>[<span class=\"keyword\">MemberQ</span>[<span class=\"list\">{Sin,Cos,Tan,Cot,Sec,Csc,ArcTan,ArcCot,Erf}</span>,f],\n    RealQ[u],\n  <span class=\"keyword\">If</span>[<span class=\"keyword\">MemberQ</span>[<span class=\"list\">{ArcSin,ArcCos}</span>,f],\n    LE[-<span class=\"number\">1</span>,u,<span class=\"number\">1</span>],\n  <span class=\"keyword\">If</span>[f===<span class=\"keyword\">Log</span>,\n    PositiveOrZeroQ[u],\n  <span class=\"keyword\">False</span>]]]</code></pre>",
  "id": "5943d9ce31f589c64fb29b3d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-16T13:14:54.635Z",
  "text": "It is used in:\n```mathematica\nRealQ[f_[u_]] :=\n  If[MemberQ[{Sin,Cos,Tan,Cot,Sec,Csc,ArcTan,ArcCot,Erf},f],\n    RealQ[u],\n  If[MemberQ[{ArcSin,ArcCos},f],\n    LE[-1,u,1],\n  If[f===Log,\n    PositiveOrZeroQ[u],\n  False]]]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-16T13:40:58.392Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "For <code>ExpandIntegrand</code> there are multiple definitions each involving Optional arguments. Eg:<pre><code class=\"mathematica\">ExpandIntegrand[(c_.+d_.*u_^m_.+e_.*u_^p_)/(a_+b_.*u_^n_),x_Symbol] :=\n  <span class=\"keyword\">With</span>[<span class=\"list\">{r=Numerator[Rt[-a/b,n]],s=Denominator[Rt[-a/b,n]]}</span>,\n  <span class=\"keyword\">Module</span>[<span class=\"list\">{k}</span>,\n  <span class=\"keyword\">Sum</span>[(r*c+r*d*(r/s)^m*(-<span class=\"number\">1</span>)^(-<span class=\"number\">2</span>*k*m/n)+r*e*(r/s)^p*(-<span class=\"number\">1</span>)^(-<span class=\"number\">2</span>*k*p/n))/(a*n*(r-(-<span class=\"number\">1</span>)^(<span class=\"number\">2</span>*k/n)*s*u)),<span class=\"list\">{k,1,n}</span>]]] /;\n<span class=\"keyword\">FreeQ</span>[<span class=\"list\">{a,b,c,d,e}</span>,x] &amp;&amp; IntegersQ[m,n,p] &amp;&amp; <span class=\"number\">0</span>&lt;m&lt;p&lt;n\n\n\n<span class=\"comment\">(* ::Subsubsection::Closed:: *)</span>\n<span class=\"comment\">(*Basis: If (m|n,p,q)\\[Element]\\[DoubleStruckCapitalZ] \\[And] 0&lt;=m&lt;p&lt;q&lt;n, let r/s=(-(a/b))^(1/n), then  (c + d*z^m + e*z^p + f*z^q)/(a + b*z^n) == (r*Sum[(c + (d*(r/s)^m)/(-1)^(2*k*(m/n)) + (e*(r/s)^p)/(-1)^(2*k*(p/n)) + (f*(r/s)^q)/(-1)^(2*k*(q/n)))/(r - (-1)^(2*(k/n))*s*z), {k, 1, n}])/(a*n)*)</span>\n\n\nExpandIntegrand[(c_.+d_.*u_^m_.+e_.*u_^p_+f_.*u_^q_)/(a_+b_.*u_^n_),x_Symbol] :=\n  <span class=\"keyword\">With</span>[<span class=\"list\">{r=Numerator[Rt[-a/b,n]],s=Denominator[Rt[-a/b,n]]}</span>,\n  <span class=\"keyword\">Module</span>[<span class=\"list\">{k}</span>,\n  <span class=\"keyword\">Sum</span>[(r*c+r*d*(r/s)^m*(-<span class=\"number\">1</span>)^(-<span class=\"number\">2</span>*k*m/n)+r*e*(r/s)^p*(-<span class=\"number\">1</span>)^(-<span class=\"number\">2</span>*k*p/n)+r*f*(r/s)^q*(-<span class=\"number\">1</span>)^(-<span class=\"number\">2</span>*k*q/n))/(a*n*(r-(-<span class=\"number\">1</span>)^(<span class=\"number\">2</span>*k/n)*s*u)),<span class=\"list\">{k,1,n}</span>]]] /;\n<span class=\"keyword\">FreeQ</span>[<span class=\"list\">{a,b,c,d,e,f}</span>,x] &amp;&amp; IntegersQ[m,n,p,q] &amp;&amp; <span class=\"number\">0</span>&lt;m&lt;p&lt;q&lt;n</code></pre>",
  "id": "5943dfd902c480e6724e0197",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-16T13:40:41.918Z",
  "text": "For `ExpandIntegrand` there are multiple definitions each involving Optional arguments. Eg:\n```mathematica \nExpandIntegrand[(c_.+d_.*u_^m_.+e_.*u_^p_)/(a_+b_.*u_^n_),x_Symbol] :=\n  With[{r=Numerator[Rt[-a/b,n]],s=Denominator[Rt[-a/b,n]]},\n  Module[{k},\n  Sum[(r*c+r*d*(r/s)^m*(-1)^(-2*k*m/n)+r*e*(r/s)^p*(-1)^(-2*k*p/n))/(a*n*(r-(-1)^(2*k/n)*s*u)),{k,1,n}]]] /;\nFreeQ[{a,b,c,d,e},x] && IntegersQ[m,n,p] && 0<m<p<n\n\n\n(* ::Subsubsection::Closed:: *)\n(*Basis: If (m|n,p,q)\\[Element]\\[DoubleStruckCapitalZ] \\[And] 0<=m<p<q<n, let r/s=(-(a/b))^(1/n), then  (c + d*z^m + e*z^p + f*z^q)/(a + b*z^n) == (r*Sum[(c + (d*(r/s)^m)/(-1)^(2*k*(m/n)) + (e*(r/s)^p)/(-1)^(2*k*(p/n)) + (f*(r/s)^q)/(-1)^(2*k*(q/n)))/(r - (-1)^(2*(k/n))*s*z), {k, 1, n}])/(a*n)*)\n\n\nExpandIntegrand[(c_.+d_.*u_^m_.+e_.*u_^p_+f_.*u_^q_)/(a_+b_.*u_^n_),x_Symbol] :=\n  With[{r=Numerator[Rt[-a/b,n]],s=Denominator[Rt[-a/b,n]]},\n  Module[{k},\n  Sum[(r*c+r*d*(r/s)^m*(-1)^(-2*k*m/n)+r*e*(r/s)^p*(-1)^(-2*k*p/n)+r*f*(r/s)^q*(-1)^(-2*k*q/n))/(a*n*(r-(-1)^(2*k/n)*s*u)),{k,1,n}]]] /;\nFreeQ[{a,b,c,d,e,f},x] && IntegersQ[m,n,p,q] && 0<m<p<q<n\n```\n",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "editedAt": "2017-06-16T13:43:18.811Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Is there any efficient way to implement these functions? Due to presence of Optional arguments, we need to have &gt;100 conditions in <code>ExpandIntegrand</code>(since we need to add each possible combination of Optional argument)",
  "id": "5943e03c6549436c7d535a69",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-16T13:42:20.860Z",
  "text": "Is there any efficient way to implement these functions? Due to presence of Optional arguments, we need to have >100 conditions in `ExpandIntegrand`(since we need to add each possible combination of Optional argument)",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> Concerning <code>Optional</code> with default value, maybe you should try to show the MatchPy authors the solution that we have used and ask them if they would temporarily add this low-optimized method to MatchPy.",
  "id": "5943f0636549436c7d53aad0",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-16T14:51:15.133Z",
  "text": "@parsoyaarihant Concerning `Optional` with default value, maybe you should try to show the MatchPy authors the solution that we have used and ask them if they would temporarily add this low-optimized method to MatchPy.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "In the future, it may be further corrected.",
  "id": "5943f06ecaf4d68d6f3e9acd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-16T14:51:26.559Z",
  "text": "In the future, it may be further corrected.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Anyways, <code>LE</code> appears not to be defined anywhere. I can confirm that is not in Mathematica&#39;s built-ins (at least in Mathematica version 10.2.0)",
  "id": "5943f0efd83c50560c14b32c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-16T14:53:35.986Z",
  "text": "Anyways, `LE` appears not to be defined anywhere. I can confirm that is not in Mathematica's built-ins (at least in Mathematica version 10.2.0)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I have <a href=\"https://github.com/HPAC/matchpy/issues/2#issuecomment-309050175\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">asked</a> him. For now I will use <code>.match()</code> function which already exist in SymPy.",
  "id": "5943f376142826e972c000c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-16T15:04:22.947Z",
  "text": "I have [asked](https://github.com/HPAC/matchpy/issues/2#issuecomment-309050175) him. For now I will use `.match()` function which already exist in SymPy.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/HPAC/matchpy/issues/2#issuecomment-309050175"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "if it can help, I have added the down values to <code>ExpandIntegrand</code> to my repo:",
  "id": "5944061a02c480e6724eb274",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-16T16:23:54.718Z",
  "text": "if it can help, I have added the down values to `ExpandIntegrand` to my repo:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<a href=\"https://github.com/Upabjojr/RUBI_integration_rules/blob/master/ExpandIntegrand_DownValues_FullForm.txt\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/Upabjojr/RUBI_integration_rules/blob/master/ExpandIntegrand_DownValues_FullForm.txt</a>",
  "id": "5944061b142826e972c052d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-16T16:23:55.995Z",
  "text": "https://github.com/Upabjojr/RUBI_integration_rules/blob/master/ExpandIntegrand_DownValues_FullForm.txt",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/Upabjojr/RUBI_integration_rules/blob/master/ExpandIntegrand_DownValues_FullForm.txt"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Thanks, I will try to use it.",
  "id": "594406856549436c7d5413a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-16T16:25:41.741Z",
  "text": "Thanks, I will try to use it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "<pre><code>SimplerQ[u_,v_] :=\n  <span class=\"keyword\">If</span>[<span class=\"keyword\">IntegerQ</span>[u],\n    <span class=\"keyword\">If</span>[<span class=\"keyword\">IntegerQ</span>[v],\n      <span class=\"keyword\">If</span>[<span class=\"keyword\">Abs</span>[u]==<span class=\"keyword\">Abs</span>[v],\n        v&lt;<span class=\"number\">0</span>,\n      <span class=\"keyword\">Abs</span>[u]&lt;<span class=\"keyword\">Abs</span>[v]],\n    <span class=\"keyword\">True</span>],\n  <span class=\"keyword\">If</span>[<span class=\"keyword\">IntegerQ</span>[v],\n    <span class=\"keyword\">False</span>,\n  <span class=\"keyword\">If</span>[FractionQ[u],\n    <span class=\"keyword\">If</span>[FractionQ[v],\n      <span class=\"keyword\">If</span>[<span class=\"keyword\">Denominator</span>[u]==<span class=\"keyword\">Denominator</span>[v],\n        SimplerQ[<span class=\"keyword\">Numerator</span>[u],<span class=\"keyword\">Numerator</span>[v]],\n      <span class=\"keyword\">Denominator</span>[u]&lt;<span class=\"keyword\">Denominator</span>[v]],\n    <span class=\"keyword\">True</span>],</code></pre><span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span>, I am not very clear with the above lines, can you explain the above nested if statements?",
  "id": "5944fa98d83c50560c187069",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-17T09:47:04.249Z",
  "text": "```\nSimplerQ[u_,v_] :=\n  If[IntegerQ[u],\n    If[IntegerQ[v],\n      If[Abs[u]==Abs[v],\n        v<0,\n      Abs[u]<Abs[v]],\n    True],\n  If[IntegerQ[v],\n    False,\n  If[FractionQ[u],\n    If[FractionQ[v],\n      If[Denominator[u]==Denominator[v],\n        SimplerQ[Numerator[u],Numerator[v]],\n      Denominator[u]<Denominator[v]],\n    True],\n```\n@Upabjojr, I am not very clear with the above lines, can you explain the above nested if statements?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-17T09:49:12.378Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "These are the first few lines of <code>SimplerQ()</code> .",
  "id": "5944fb01ca6d4ae80c215a44",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-17T09:48:49.159Z",
  "text": "These are the first few lines of `SimplerQ()` .",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<a href=\"https://reference.wolfram.com/language/ref/If.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://reference.wolfram.com/language/ref/If.html</a>",
  "id": "59454a35142826e972c4cc15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-17T15:26:45.667Z",
  "text": "https://reference.wolfram.com/language/ref/If.html",
  "unread": false,
  "urls": [
   {
    "url": "https://reference.wolfram.com/language/ref/If.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<a href=\"https://reference.wolfram.com/language/ref/Denominator.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://reference.wolfram.com/language/ref/Denominator.html</a>",
  "id": "59454a526462d8493c208d7b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-17T15:27:14.974Z",
  "text": "https://reference.wolfram.com/language/ref/Denominator.html",
  "unread": false,
  "urls": [
   {
    "url": "https://reference.wolfram.com/language/ref/Denominator.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "You can actually transform Mathematica&#39;s <code>If[cond, t, f]</code> into <code>(t if cond else f)</code> in Python.",
  "id": "59454a96f31c8ced0c45f8bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-17T15:28:22.914Z",
  "text": "You can actually transform Mathematica's `If[cond, t, f]` into `(t if cond else f)` in Python.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "The code you posted looks like lots of nested ifs",
  "id": "59454adaf31c8ced0c45fa0e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-17T15:29:30.669Z",
  "text": "The code you posted looks like lots of nested ifs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "<pre><code>def <span class=\"function\"><span class=\"title\">SimplerQ</span><span class=\"params\">(u, v)</span></span>:\n    <span class=\"keyword\">if</span> <span class=\"function\"><span class=\"title\">IntegerQ</span><span class=\"params\">(u)</span></span>:\n        <span class=\"keyword\">if</span> <span class=\"function\"><span class=\"title\">IntegerQ</span><span class=\"params\">(v)</span></span>:\n            <span class=\"keyword\">if</span> <span class=\"function\"><span class=\"title\">Abs</span><span class=\"params\">(u)</span></span> == <span class=\"function\"><span class=\"title\">Abs</span><span class=\"params\">(v)</span></span>:\n                return v&lt;<span class=\"number\">0</span>\n            <span class=\"keyword\">else</span>:\n                return <span class=\"function\"><span class=\"title\">Abs</span><span class=\"params\">(u)</span></span>&lt;<span class=\"function\"><span class=\"title\">Abs</span><span class=\"params\">(v)</span></span>\n        <span class=\"keyword\">else</span>:\n            return True\n    elif not <span class=\"function\"><span class=\"title\">IntegerQ</span><span class=\"params\">(u)</span></span> and <span class=\"function\"><span class=\"title\">IntegerQ</span><span class=\"params\">(v)</span></span>:\n        return False\n    <span class=\"keyword\">if</span> <span class=\"function\"><span class=\"title\">FractionQ</span><span class=\"params\">(u)</span></span>:\n        <span class=\"keyword\">if</span> <span class=\"function\"><span class=\"title\">FractionQ</span><span class=\"params\">(v)</span></span>:\n            <span class=\"keyword\">if</span> <span class=\"function\"><span class=\"title\">Denominator</span><span class=\"params\">(u)</span></span> == <span class=\"function\"><span class=\"title\">Denominator</span><span class=\"params\">(v)</span></span>:\n                return <span class=\"function\"><span class=\"title\">SimplerQ</span><span class=\"params\">(Numerator(u)</span></span>, <span class=\"function\"><span class=\"title\">Numerator</span><span class=\"params\">(v)</span></span>)\n            <span class=\"keyword\">else</span>:\n                return <span class=\"function\"><span class=\"title\">Denominator</span><span class=\"params\">(u)</span></span>&lt;<span class=\"function\"><span class=\"title\">Denominator</span><span class=\"params\">(v)</span></span>:\n        <span class=\"keyword\">else</span>:\n            return True\n    elif not <span class=\"function\"><span class=\"title\">FractionQ</span><span class=\"params\">(u)</span></span> and <span class=\"function\"><span class=\"title\">FractionQ</span><span class=\"params\">(v)</span></span>\n        return False\n    <span class=\"keyword\">if</span> (<span class=\"function\"><span class=\"title\">re</span><span class=\"params\">(u)</span></span> == <span class=\"number\">0</span> or <span class=\"function\"><span class=\"title\">re</span><span class=\"params\">(u)</span></span> == <span class=\"number\">0.0</span>) and (<span class=\"function\"><span class=\"title\">re</span><span class=\"params\">(v)</span></span> == <span class=\"number\">0</span> or <span class=\"function\"><span class=\"title\">re</span><span class=\"params\">(v)</span></span> == <span class=\"number\">0.0</span>):\n        return <span class=\"function\"><span class=\"title\">SimplerQ</span><span class=\"params\">(im(u)</span></span>, <span class=\"function\"><span class=\"title\">im</span><span class=\"params\">(v)</span></span>)\n    <span class=\"keyword\">if</span> <span class=\"function\"><span class=\"title\">ComplexNumberQ</span><span class=\"params\">(u)</span></span>:\n        <span class=\"keyword\">if</span> <span class=\"function\"><span class=\"title\">ComplexNumberQ</span><span class=\"params\">(v)</span></span>:\n            <span class=\"keyword\">if</span> <span class=\"function\"><span class=\"title\">re</span><span class=\"params\">(u)</span></span> == <span class=\"function\"><span class=\"title\">re</span><span class=\"params\">(v)</span></span>:\n                return <span class=\"function\"><span class=\"title\">SimplerQ</span><span class=\"params\">(im(u)</span></span>, <span class=\"function\"><span class=\"title\">im</span><span class=\"params\">(v)</span></span>)\n            <span class=\"keyword\">else</span>:\n                return <span class=\"function\"><span class=\"title\">SimplerQ</span><span class=\"params\">(re(u)</span></span>, <span class=\"function\"><span class=\"title\">re</span><span class=\"params\">(v)</span></span>)\n        <span class=\"keyword\">else</span>:\n            return False\n    <span class=\"keyword\">if</span> <span class=\"function\"><span class=\"title\">NumberQ</span><span class=\"params\">(u)</span></span>:\n        <span class=\"keyword\">if</span> <span class=\"function\"><span class=\"title\">NumberQ</span><span class=\"params\">(v)</span></span>:\n            return <span class=\"function\"><span class=\"title\">OrderedQ</span><span class=\"params\">((u, v)</span></span>)\n        <span class=\"keyword\">else</span>:\n            return True\n    <span class=\"keyword\">if</span> not <span class=\"function\"><span class=\"title\">NumberQ</span><span class=\"params\">(u)</span></span> and <span class=\"function\"><span class=\"title\">NumberQ</span><span class=\"params\">(v)</span></span>:\n        return False\n    <span class=\"keyword\">if</span> <span class=\"function\"><span class=\"title\">AtomQ</span><span class=\"params\">(u)</span></span>:\n        <span class=\"keyword\">if</span> <span class=\"function\"><span class=\"title\">AtomQ</span><span class=\"params\">(v)</span></span>:\n            return <span class=\"function\"><span class=\"title\">OrderedQ</span><span class=\"params\">((u, v)</span></span>)\n        <span class=\"keyword\">else</span>:\n            return True\n    <span class=\"keyword\">if</span> not <span class=\"function\"><span class=\"title\">AtomQ</span><span class=\"params\">(u)</span></span> and <span class=\"function\"><span class=\"title\">AtomQ</span><span class=\"params\">(v)</span></span>:\n        return False\n    <span class=\"keyword\">if</span> <span class=\"function\"><span class=\"title\">Head</span><span class=\"params\">(u)</span></span> == <span class=\"function\"><span class=\"title\">Head</span><span class=\"params\">(v)</span></span>:\n        <span class=\"keyword\">if</span> <span class=\"function\"><span class=\"title\">Length</span><span class=\"params\">(u)</span></span> == <span class=\"function\"><span class=\"title\">Length</span><span class=\"params\">(v)</span></span>:\n            <span class=\"keyword\">for</span> <span class=\"tag\">i</span> <span class=\"keyword\">in</span> <span class=\"function\"><span class=\"title\">range</span><span class=\"params\">(<span class=\"number\">0</span>, len(u)</span></span>):\n                <span class=\"keyword\">if</span> not u[i] == v[i]:\n                    return <span class=\"function\"><span class=\"title\">SimplerQ</span><span class=\"params\">(u[i], v[i])</span></span>\n        <span class=\"keyword\">else</span>:\n         return <span class=\"function\"><span class=\"title\">Length</span><span class=\"params\">(u)</span></span>&lt;<span class=\"function\"><span class=\"title\">Length</span><span class=\"params\">(v)</span></span>\n    <span class=\"keyword\">if</span> <span class=\"function\"><span class=\"title\">LeafCount</span><span class=\"params\">(u)</span></span>&lt;<span class=\"function\"><span class=\"title\">LeafCount</span><span class=\"params\">(v)</span></span>:\n       return True\n    <span class=\"keyword\">if</span> <span class=\"function\"><span class=\"title\">LeafCount</span><span class=\"params\">(v)</span></span>&lt;<span class=\"function\"><span class=\"title\">LeafCount</span><span class=\"params\">(u)</span></span>:\n       return False\n    <span class=\"keyword\">else</span>:\n        return <span class=\"function\"><span class=\"title\">Not</span><span class=\"params\">(OrderedQ(v, u)</span></span>)</code></pre><span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> is the correct code for those nested ifs.",
  "id": "59457f9f02c480e67253e62f",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-17T19:14:39.762Z",
  "text": "```\ndef SimplerQ(u, v):\n    if IntegerQ(u):\n        if IntegerQ(v):\n            if Abs(u) == Abs(v):\n                return v<0\n            else:\n                return Abs(u)<Abs(v)\n        else:\n            return True\n    elif not IntegerQ(u) and IntegerQ(v):\n        return False\n    if FractionQ(u):\n        if FractionQ(v):\n            if Denominator(u) == Denominator(v):\n                return SimplerQ(Numerator(u), Numerator(v))\n            else:\n                return Denominator(u)<Denominator(v):\n        else:\n            return True\n    elif not FractionQ(u) and FractionQ(v)\n        return False\n    if (re(u) == 0 or re(u) == 0.0) and (re(v) == 0 or re(v) == 0.0):\n        return SimplerQ(im(u), im(v))\n    if ComplexNumberQ(u):\n        if ComplexNumberQ(v):\n            if re(u) == re(v):\n                return SimplerQ(im(u), im(v))\n            else:\n                return SimplerQ(re(u), re(v))\n        else:\n            return False\n    if NumberQ(u):\n        if NumberQ(v):\n            return OrderedQ((u, v))\n        else:\n            return True\n    if not NumberQ(u) and NumberQ(v):\n        return False\n    if AtomQ(u):\n        if AtomQ(v):\n            return OrderedQ((u, v))\n        else:\n            return True\n    if not AtomQ(u) and AtomQ(v):\n        return False\n    if Head(u) == Head(v):\n        if Length(u) == Length(v):\n            for i in range(0, len(u)):\n                if not u[i] == v[i]:\n                    return SimplerQ(u[i], v[i])\n        else:\n         return Length(u)<Length(v)\n    if LeafCount(u)<LeafCount(v):\n       return True\n    if LeafCount(v)<LeafCount(u):\n       return False\n    else:\n        return Not(OrderedQ(v, u))\n```\n@Upabjojr is the correct code for those nested ifs.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I think there is an incorrect nesting of the <code>if</code>s starting at the line <code>elif not IntegerQ(u) and IntegerQ(v):</code>",
  "id": "5945d193caf4d68d6f45538f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-18T01:04:19.485Z",
  "text": "I think there is an incorrect nesting of the `if`s starting at the line `elif not IntegerQ(u) and IntegerQ(v):`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I recommend that you convert the code to its <code>FullForm</code> and then you use some automatic tools to translate it into Python (like those by <span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> ).",
  "id": "5945d1d5cf9c13503c97b4a1",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-18T01:05:25.637Z",
  "text": "I recommend that you convert the code to its `FullForm` and then you use some automatic tools to translate it into Python (like those by @parsoyaarihant ).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "what should happen when we have end up having constraint which <code>is_Relational</code>(eg: <code>a &gt; 0</code>). Should we accept that the pattern is matched in that case?",
  "id": "594a3cdca44c60fa4c49b65d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-21T09:31:08.183Z",
  "text": "what should happen when we have end up having constraint which `is_Relational`(eg: `a > 0`). Should we accept that the pattern is matched in that case?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span> , <code>FullForm[]</code> of Mathics and Mathematica are not same everytime. So its better not to use Mathics for <code>FullForm</code>",
  "id": "594a7063bf1bfe6770d52399",
  "issues": [],
  "mentions": [
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-21T13:10:59.053Z",
  "text": "@Abdullahjavednesar , `FullForm[]` of Mathics and Mathematica are not same everytime. So its better not to use Mathics for `FullForm`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<p>if you have a condition on Mathematica like</p><pre><code><span class=\"setting\">f[x_] = <span class=\"value\">something /; x &gt; <span class=\"number\">0</span></span></span></code></pre><p>then this should match if <code>x &gt; 0</code> is <code>True</code>. I believe we can use Python relationals (SymPy relationals return an unevaluated relational if the truth of the expression is not easy to determine or undeterminate, otherwise they return True or False). I believe that in the pattern conditionals, <code>x &gt; 0</code> should always return a boolean, if not maybe we should consider it False.</p>",
  "id": "594a90a717a30666708afd48",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-21T15:28:39.342Z",
  "text": "if you have a condition on Mathematica like\n```\nf[x_] = something /; x > 0\n```\nthen this should match if `x > 0` is `True`. I believe we can use Python relationals (SymPy relationals return an unevaluated relational if the truth of the expression is not easy to determine or undeterminate, otherwise they return True or False). I believe that in the pattern conditionals, `x > 0` should always return a boolean, if not maybe we should consider it False.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-21T15:29:18.189Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "If anyone needs the <code>FullForm[]</code> of a Mathematica expression, just ask here.",
  "id": "594a90bee59e74be0aa0e6e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-21T15:29:02.011Z",
  "text": "If anyone needs the `FullForm[]` of a Mathematica expression, just ask here.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2017-06-21T19:43:45.486Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I ran the test suit for algebriac rules 1.2. Here is the report:<br>Total number of tests: 1480<br>time taken: 4967.428<br>Matched using matchpy: most of them( ~1470. I will try to get accurate number soon)<br>Passed: 130",
  "id": "594acad5bf1bfe6770d70909",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-21T19:36:53.551Z",
  "text": "I ran the test suit for algebriac rules 1.2. Here is the report:\nTotal number of tests: 1480\ntime taken: 4967.428\nMatched using matchpy: most of them( ~1470. I will try to get accurate number soon)\nPassed: 130",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<p>Almost all the tests were matched by matchpy but I havent been able to implement <code>ExpandIntegrand</code>(it is used by many rules) so far.</p><p>Patterns of length 3-4 were getting matched very soon (&lt;1sec in my PC) but patterns of length ~6 took ~3 seconds.</p>",
  "id": "594acbb0e265aa025ee75c67",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-21T19:40:32.645Z",
  "text": "Almost all the tests were matched by matchpy but I havent been able to implement `ExpandIntegrand`(it is used by many rules) so far.\n\nPatterns of length 3-4 were getting matched very soon (<1sec in my PC) but patterns of length ~6 took ~3 seconds.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "how did you implement <code>ExpandIntegrand</code>?",
  "id": "594b2e4f5bf0bef94cceb61f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-22T02:41:19.339Z",
  "text": "how did you implement `ExpandIntegrand`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "We could try a different implementation approach",
  "id": "594b2e8caf2cb444279c79a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-22T02:42:20.635Z",
  "text": "We could try a different implementation approach",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "<pre><code><span class=\"name\">SumSimplerAuxQ</span>[<span class=\"atom\">u_</span>,<span class=\"atom\">v_</span>] :=\n  (<span class=\"name\">RationalQ</span>[<span class=\"name\">First</span>[<span class=\"atom\">v</span>]] || <span class=\"name\">SumSimplerAuxQ</span>[<span class=\"atom\">u</span>,<span class=\"name\">First</span>[<span class=\"atom\">v</span>]]) &amp;&amp; \n  (<span class=\"name\">RationalQ</span>[<span class=\"name\">Rest</span>[<span class=\"atom\">v</span>]] || <span class=\"name\">SumSimplerAuxQ</span>[<span class=\"atom\">u</span>,<span class=\"name\">Rest</span>[<span class=\"atom\">v</span>]]) /;\n<span class=\"name\">SumQ</span>[<span class=\"atom\">v</span>]\n\n<span class=\"name\">SumSimplerAuxQ</span>[<span class=\"atom\">u_</span>,<span class=\"atom\">v_</span>] :=\n  <span class=\"name\">SumSimplerAuxQ</span>[<span class=\"name\">First</span>[<span class=\"atom\">u</span>],<span class=\"atom\">v</span>] || <span class=\"name\">SumSimplerAuxQ</span>[<span class=\"name\">Rest</span>[<span class=\"atom\">u</span>],<span class=\"atom\">v</span>] /;\n<span class=\"name\">SumQ</span>[<span class=\"atom\">u</span>]\n\n<span class=\"name\">SumSimplerAuxQ</span>[<span class=\"atom\">u_</span>,<span class=\"atom\">v_</span>] :=\n  <span class=\"atom\">v</span>=!=<span class=\"number\">0</span> &amp;&amp; \n  <span class=\"name\">NonnumericFactors</span>[<span class=\"atom\">u</span>]===<span class=\"name\">NonnumericFactors</span>[<span class=\"atom\">v</span>] &amp;&amp; \n  (<span class=\"name\">NumericFactor</span>[<span class=\"atom\">u</span>]/<span class=\"name\">NumericFactor</span>[<span class=\"atom\">v</span>]&lt;-<span class=\"number\">1</span>/<span class=\"number\">2</span> || <span class=\"name\">NumericFactor</span>[<span class=\"atom\">u</span>]/<span class=\"name\">NumericFactor</span>[<span class=\"atom\">v</span>]==-<span class=\"number\">1</span>/<span class=\"number\">2</span> &amp;&amp; <span class=\"name\">NumericFactor</span>[<span class=\"atom\">u</span>]&lt;<span class=\"number\">0</span>)</code></pre>How do we define SumSimplerAuxQ()?",
  "id": "594b830acf9c13503cb09a2b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-22T08:42:50.919Z",
  "text": "```\nSumSimplerAuxQ[u_,v_] :=\n  (RationalQ[First[v]] || SumSimplerAuxQ[u,First[v]]) && \n  (RationalQ[Rest[v]] || SumSimplerAuxQ[u,Rest[v]]) /;\nSumQ[v]\n\nSumSimplerAuxQ[u_,v_] :=\n  SumSimplerAuxQ[First[u],v] || SumSimplerAuxQ[Rest[u],v] /;\nSumQ[u]\n\nSumSimplerAuxQ[u_,v_] :=\n  v=!=0 && \n  NonnumericFactors[u]===NonnumericFactors[v] && \n  (NumericFactor[u]/NumericFactor[v]<-1/2 || NumericFactor[u]/NumericFactor[v]==-1/2 && NumericFactor[u]<0)  \n```\nHow do we define SumSimplerAuxQ()?\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span> look at the conditions after <code>/;</code> ",
  "id": "594be1515bf0bef94cd1f6f3",
  "issues": [],
  "mentions": [
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-22T15:25:05.699Z",
  "text": "@Abdullahjavednesar look at the conditions after `/;` ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "you can probably do something like this:<pre><code class=\"python\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">SumSimplerAuxQ</span><span class=\"params\">(u, v)</span>:</span>\n    <span class=\"keyword\">if</span> SumQ(v):\n        ... first definition ...\n    <span class=\"keyword\">elif</span> SumQ(u):\n        ... second definition ...\n    <span class=\"keyword\">else</span>:\n        ... last definition ...</code></pre>",
  "id": "594be2916462d8493c3cfbb6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-22T15:30:25.538Z",
  "text": "you can probably do something like this:\n```python\ndef SumSimplerAuxQ(u, v):\n    if SumQ(v):\n        ... first definition ...\n    elif SumQ(u):\n        ... second definition ...\n    else:\n        ... last definition ...\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> if <code>ExpandIntegrand</code> is still a problem, you could try to write an email to the RUBI developer and ask him directly.",
  "id": "594be548e59e74be0aa6e016",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-22T15:42:00.786Z",
  "text": "@parsoyaarihant if `ExpandIntegrand` is still a problem, you could try to write an email to the RUBI developer and ask him directly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I will do that.",
  "id": "594bfb1b7bf0f2951a2c90ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-22T17:15:07.078Z",
  "text": "I will do that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-23T04:22:06.029Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "some functions use <a href=\"https://reference.wolfram.com/language/ref/TimeConstrained.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">TimeConstrained</a>. Should I implement the function using <a href=\"https://stackoverflow.com/questions/25027122/break-the-function-after-certain-time\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">signal</a>",
  "id": "594c975c4bcd78af563776bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-23T04:21:48.691Z",
  "text": "some functions use [TimeConstrained](https://reference.wolfram.com/language/ref/TimeConstrained.html). Should I implement the function using [signal](https://stackoverflow.com/questions/25027122/break-the-function-after-certain-time)",
  "unread": false,
  "urls": [
   {
    "url": "https://reference.wolfram.com/language/ref/TimeConstrained.html"
   },
   {
    "url": "https://stackoverflow.com/questions/25027122/break-the-function-after-certain-time"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "?",
  "id": "594c9771e60ad24f3104e859",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-23T04:22:09.422Z",
  "text": "?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "That&#39;s a good question. Apparently the idea behind <code>TimeConstrained</code> is to execute a potential algorithm, if it taks too long, break the execution and go on some fallback.",
  "id": "594c9c9d3230e14f3ae67e1c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-23T04:44:13.838Z",
  "text": "That's a good question. Apparently the idea behind `TimeConstrained` is to execute a potential algorithm, if it taks too long, break the execution and go on some fallback.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I think we should try without that at first. If it turns out that we have cases that hang up during the tests, maybe we can introduce that later.",
  "id": "594c9ccde60ad24f3104fb35",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-23T04:45:01.956Z",
  "text": "I think we should try without that at first. If it turns out that we have cases that hang up during the tests, maybe we can introduce that later.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "okay.",
  "id": "594c9d6176a757f8089798db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-23T04:47:29.260Z",
  "text": "okay.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I am having problem in equating expressions which have float:<pre><code class=\"python\"><span class=\"prompt\">&gt;&gt;&gt; </span>expr = a*x**<span class=\"number\">3</span>/<span class=\"number\">3</span> + b*x**<span class=\"number\">4</span>/<span class=\"number\">4</span>\n<span class=\"prompt\">&gt;&gt;&gt; </span>expr\na*x**<span class=\"number\">3</span>/<span class=\"number\">3</span> + b*x**<span class=\"number\">4</span>/<span class=\"number\">4</span>\n<span class=\"prompt\">&gt;&gt;&gt; </span>expr == <span class=\"number\">0.333333333333333</span>*a*x**<span class=\"number\">3</span> + <span class=\"number\">0.25</span>*b*x**<span class=\"number\">4</span>\n<span class=\"keyword\">False</span></code></pre>",
  "id": "594e26b557a6e9f72ef35c44",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-24T08:45:41.528Z",
  "text": "I am having problem in equating expressions which have float:\n```python\n>>> expr = a*x**3/3 + b*x**4/4\n>>> expr\na*x**3/3 + b*x**4/4\n>>> expr == 0.333333333333333*a*x**3 + 0.25*b*x**4\nFalse\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I asked this question on SymPy gitter chat room. But it was not resolved.",
  "id": "594e270a76a757f8089de688",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-24T08:47:06.800Z",
  "text": "I asked this question on SymPy gitter chat room. But it was not resolved.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Kalevin said: <code>The fraction 8/3 is different from all floating point numbers. So it is probably impossible to satisfy that equality.</code>",
  "id": "594e277bad9c78184394c8ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-24T08:48:59.555Z",
  "text": "Kalevin said: `The fraction 8/3 is different from all floating point numbers. So it is probably impossible to satisfy that equality.`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-24T08:54:36.348Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "should I comment out those tests? But, there can be so many of them",
  "id": "594e278c11755ab05618d734",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-24T08:49:16.130Z",
  "text": "should I comment out those tests? But, there can be so many of them",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I have solved the above issue.",
  "id": "594e5956bf7e6af22c6ae64a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-24T12:21:42.072Z",
  "text": "I have solved the above issue.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "How did you solve it?",
  "id": "594e85646ae41d5d337db3e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-24T15:29:40.820Z",
  "text": "How did you solve it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I tried this(Does not work always):<pre><code class=\"python\"><span class=\"prompt\">&gt;&gt;&gt; </span>expr = <span class=\"number\">1</span>/<span class=\"number\">3</span> + a\n<span class=\"prompt\">&gt;&gt;&gt; </span>expr - expr.doit() == <span class=\"number\">0</span>\n<span class=\"keyword\">True</span></code></pre>",
  "id": "594ea9854bcd78af563fb02a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-24T18:03:49.405Z",
  "text": "I tried this(Does not work always):\n```python\n>>> expr = 1/3 + a\n>>> expr - expr.doit() == 0\nTrue\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<a href=\"https://github.com/parsoyaarihant/sympy/blob/rubi4/sympy/rubi/utility_function.py#L685\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a> is my implementation of <code>ExpandIntegrand</code>.",
  "id": "594ebb5a11755ab0561b2664",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-24T19:19:54.346Z",
  "text": "[here](https://github.com/parsoyaarihant/sympy/blob/rubi4/sympy/rubi/utility_function.py#L685) is my implementation of `ExpandIntegrand`.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/parsoyaarihant/sympy/blob/rubi4/sympy/rubi/utility_function.py#L685"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "There are total 37 definitions, I have only implemented 5 so far.",
  "id": "594ebb7b57a6e9f72ef5b208",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-24T19:20:27.778Z",
  "text": "There are total 37 definitions, I have only implemented 5 so far.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-24T19:25:18.483Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Yes, that is correct. <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mrow><mn>1</mn></mrow><mrow><mn>3</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{3}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.845108em;\"></span><span class=\"strut bottom\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord reset-textstyle textstyle uncramped\"><span class=\"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist\"><span style=\"top:0.345em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathrm\">3</span></span></span></span><span style=\"top:-0.22999999999999998em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle textstyle uncramped frac-line\"></span></span><span style=\"top:-0.394em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord mathrm\">1</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter\"></span></span></span></span></span> is not equal to <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>0</mn><mi mathvariant=\"normal\">.</mi><mn>3</mn><mn>3</mn><mn>3</mn><mn>3</mn><mn>3</mn><mn>3</mn><mn>3</mn><mn>3</mn><mn>3</mn><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">0.3333333333</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.64444em;\"></span><span class=\"strut bottom\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathrm\">0</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">3</span><span class=\"mord mathrm\">3</span><span class=\"mord mathrm\">3</span><span class=\"mord mathrm\">3</span><span class=\"mord mathrm\">3</span><span class=\"mord mathrm\">3</span><span class=\"mord mathrm\">3</span><span class=\"mord mathrm\">3</span><span class=\"mord mathrm\">3</span><span class=\"mord mathrm\">3</span></span></span></span>. It is equal to <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>0</mn><mi mathvariant=\"normal\">.</mi><mover accent=\"true\"><mrow><mn>3</mn></mrow><mo>\u00af</mo></mover><mo>=</mo><mn>0</mn><mi mathvariant=\"normal\">.</mi><mn>3</mn><mn>3</mn><mn>3</mn><mn>3</mn><mn>3</mn><mn>3</mn><mn>3</mn><mo>\u2026</mo></mrow><annotation encoding=\"application/x-tex\">0.\\bar{3}=0.3333333\\ldots</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.78122em;\"></span><span class=\"strut bottom\" style=\"height:0.78122em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathrm\">0</span><span class=\"mord mathrm\">.</span><span class=\"mord accent\"><span class=\"vlist\"><span style=\"top:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"mord textstyle cramped\"><span class=\"mord mathrm\">3</span></span></span><span style=\"top:-0.21344000000000002em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"accent-body\"><span>\u00af</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mrel\">=</span><span class=\"mord mathrm\">0</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">3</span><span class=\"mord mathrm\">3</span><span class=\"mord mathrm\">3</span><span class=\"mord mathrm\">3</span><span class=\"mord mathrm\">3</span><span class=\"mord mathrm\">3</span><span class=\"mord mathrm\">3</span><span class=\"minner\">\u2026</span></span></span></span>.",
  "id": "594ebc8f0cef4fed2eb6937d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-24T19:25:03.901Z",
  "text": "Yes, that is correct. $$\\frac{1}{3}$$ is not equal to $$0.3333333333$$. It is equal to $$0.\\bar{3}=0.3333333\\ldots$$.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> , is it possible to truncate all floats in an expression?",
  "id": "594fd7f0ceb5bef82eac22dc",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-25T15:34:08.352Z",
  "text": "@asmeurer , is it possible to truncate all floats in an expression?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> what about converting the floating points to rationals in the tests?",
  "id": "594fd83d8dae42503151292e",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-25T15:35:25.009Z",
  "text": "@parsoyaarihant what about converting the floating points to rationals in the tests?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "evalf truncates floats. But you should avoid floats for the most part. ",
  "id": "595000fc76a757f808a49502",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-25T18:29:16.461Z",
  "text": "evalf truncates floats. But you should avoid floats for the most part. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> how exactly did this problem arise? Are you trying to convert the tests?",
  "id": "59500132bf7e6af22c71002f",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-25T18:30:10.578Z",
  "text": "@parsoyaarihant how exactly did this problem arise? Are you trying to convert the tests?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I wouldn&#39;t spend too much time on the floating point numbers now",
  "id": "595001473230e14f3af35b43",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-25T18:30:31.956Z",
  "text": "I wouldn't spend too much time on the floating point numbers now",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would put higher priority on getting RUBI to work in SymPy",
  "id": "5950015c3230e14f3af35bbd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-25T18:30:52.263Z",
  "text": "I would put higher priority on getting RUBI to work in SymPy",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-26T05:55:00.516Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> , I am not trying to convert the tests. The sympy expression is automatically being converted to floating point.</p><pre><code class=\"python\"><span class=\"prompt\">&gt;&gt;&gt; </span><span class=\"keyword\">from</span> sympy <span class=\"keyword\">import</span> *\n<span class=\"prompt\">&gt;&gt;&gt; </span><span class=\"keyword\">from</span> sympy.abc <span class=\"keyword\">import</span> x\n<span class=\"prompt\">&gt;&gt;&gt; </span>x**(<span class=\"number\">1</span>/<span class=\"number\">3</span>)\nx**<span class=\"number\">0.333333333333333</span></code></pre><p>numbers in the tests are not sympified.</p>",
  "id": "5950a014c101bc4e3a1f6417",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-26T05:48:04.061Z",
  "text": "@Upabjojr , I am not trying to convert the tests. The sympy expression is automatically being converted to floating point.\n```python\n>>> from sympy import *\n>>> from sympy.abc import x\n>>> x**(1/3)\nx**0.333333333333333\n```\nnumbers in the tests are not sympified.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I am fixing that using <a href=\"http://docs.sympy.org/dev/gotchas.html#python-numbers-vs-sympy-numbers\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.sympy.org/dev/gotchas.html#python-numbers-vs-sympy-numbers</a>",
  "id": "5950a134ad9c7818439df62f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-26T05:52:52.833Z",
  "text": "I am fixing that using http://docs.sympy.org/dev/gotchas.html#python-numbers-vs-sympy-numbers",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.sympy.org/dev/gotchas.html#python-numbers-vs-sympy-numbers"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span> , is it possible to sympify the integers while parsing the tests?",
  "id": "5950a2a157a6e9f72efc9689",
  "issues": [],
  "mentions": [
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-26T05:58:57.979Z",
  "text": "@Abdullahjavednesar , is it possible to sympify the integers while parsing the tests?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "Yes may be I will see to it",
  "id": "5950a9da8dae425031544b65",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-26T06:29:46.770Z",
  "text": "Yes may be I will see to it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"certik\" class=\"mention\">@certik</span> how do we do for the evaluations? I can make it for <span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> ",
  "id": "59513f41ad9c781843a11b3d",
  "issues": [],
  "mentions": [
   {
    "screenName": "certik",
    "userId": "529d5946ed5ab0b3bf04e5d0",
    "userIds": []
   },
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-26T17:07:13.578Z",
  "text": "@certik how do we do for the evaluations? I can make it for @parsoyaarihant ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-27T12:15:01.896Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Manuel have <a href=\"https://github.com/HPAC/matchpy/issues/2#issuecomment-311323013\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">implemented</a> Optional argumentsin MatchPy",
  "id": "59524c34ceb5bef82eb6b733",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-27T12:14:44.007Z",
  "text": "Manuel have [implemented](https://github.com/HPAC/matchpy/issues/2#issuecomment-311323013) Optional argumentsin MatchPy",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/HPAC/matchpy/issues/2#issuecomment-311323013"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "That&#39;s good news",
  "id": "59525a026ae41d5d338d6042",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-27T13:13:38.058Z",
  "text": "That's good news",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "However his implementation is not a perfect solution for our problem. We cannot match the following pattern:<pre><code class=\"python\"><span class=\"prompt\">&gt;&gt;&gt; </span>rubi = ManyToOneReplacer()\n<span class=\"prompt\">&gt;&gt;&gt; </span>pattern1 = Pattern(Int(Pow(Add(Wildcard.optional(<span class=\"string\">'a'</span>, <span class=\"string\">'0'</span>), Mul(Wildcard.optional(<span class=\"string\">'b'</span>, <span class=\"string\">'1'</span>), x_)), m_), x_))\n<span class=\"prompt\">&gt;&gt;&gt; </span>rule1 = ReplacementRule(pattern1, <span class=\"keyword\">lambda</span> x, a, b, m : Mul(Pow(b, Integer(-<span class=\"number\">1</span>)), Pow(Add(a, Mul(b, x)), Add(m, Integer(<span class=\"number\">1</span>))), Pow(Add(m, Integer(<span class=\"number\">1</span>)), Integer(-<span class=\"number\">1</span>))))\n<span class=\"prompt\">&gt;&gt;&gt; </span>rubi.add(rule1)\n<span class=\"prompt\">&gt;&gt;&gt; </span>print(rubi.replace(Int(Pow(Mul(b, x), m), x)))\nInt(Pow(Mul(b, x), m), x)</code></pre>",
  "id": "595271bd703e565c334c497f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-27T14:54:53.529Z",
  "text": "However his implementation is not a perfect solution for our problem. We cannot match the following pattern:\n```python\n>>> rubi = ManyToOneReplacer()\n>>> pattern1 = Pattern(Int(Pow(Add(Wildcard.optional('a', '0'), Mul(Wildcard.optional('b', '1'), x_)), m_), x_))\n>>> rule1 = ReplacementRule(pattern1, lambda x, a, b, m : Mul(Pow(b, Integer(-1)), Pow(Add(a, Mul(b, x)), Add(m, Integer(1))), Pow(Add(m, Integer(1)), Integer(-1))))\n>>> rubi.add(rule1)\n>>> print(rubi.replace(Int(Pow(Mul(b, x), m), x)))\nInt(Pow(Mul(b, x), m), x)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "<pre><code>GeneralizedBinomialParts<span class=\"attr_selector\">[a_.*x_^q_.+b_.*x_^n_.,x_Symbol]</span> <span class=\"value\">:=\n  {a,b,n,q} /;</span>\nFreeQ<span class=\"attr_selector\">[{a,b,n,q},x]</span> &amp;&amp; PosQ<span class=\"attr_selector\">[n-q]</span></code></pre>In the above definition the condition <code>PosQ(n-q)</code>would always be false as the expressions always rearrange <pre><code>In [21]: x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>4+5<span class=\"keyword\">*</span>x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>5\nOut[21]: 5<span class=\"keyword\">*</span>x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>5 + x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>4\n\nIn [22]: x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>6+5<span class=\"keyword\">*</span>x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>5\nOut[22]: x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>6 + 5<span class=\"keyword\">*</span>x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>5\n\nIn [23]: 3<span class=\"keyword\">*</span>x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>3+5<span class=\"keyword\">*</span>x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>5\nOut[23]: 5<span class=\"keyword\">*</span>x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>5 + 3<span class=\"keyword\">*</span>x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>3</code></pre>",
  "id": "5953a531703e565c3351958a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-28T12:46:41.831Z",
  "text": "```\nGeneralizedBinomialParts[a_.*x_^q_.+b_.*x_^n_.,x_Symbol] :=\n  {a,b,n,q} /;\nFreeQ[{a,b,n,q},x] && PosQ[n-q]\n```\nIn the above definition the condition `PosQ(n-q)`would always be false as the expressions always rearrange \n```\nIn [21]: x**4+5*x**5\nOut[21]: 5*x**5 + x**4\n\nIn [22]: x**6+5*x**5\nOut[22]: x**6 + 5*x**5\n\nIn [23]: 3*x**3+5*x**5\nOut[23]: 5*x**5 + 3*x**3\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-28T12:51:37.324Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "The equivalent Python code:<pre><code>    <span class=\"built_in\">Match</span> = expr.match(a*x**q + b*x**n)\n    <span class=\"keyword\">if</span> <span class=\"built_in\">Match</span> and PosQ(<span class=\"built_in\">Match</span>[n] - <span class=\"built_in\">Match</span>[q]):\n        <span class=\"keyword\">return</span> [<span class=\"built_in\">Match</span>[a], <span class=\"built_in\">Match</span>[b], <span class=\"built_in\">Match</span>[n],<span class=\"built_in\">Match</span>[q]]</code></pre>",
  "id": "5953a62dc101bc4e3a2d1592",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-28T12:50:53.549Z",
  "text": "The equivalent Python code:\n```\n    Match = expr.match(a*x**q + b*x**n)\n    if Match and PosQ(Match[n] - Match[q]):\n        return [Match[a], Match[b], Match[n],Match[q]]\n```",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Don&#39;t confuse printing output with internal order. They don&#39;t always match",
  "id": "5953c7546ae41d5d3393ec12",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-28T15:12:20.502Z",
  "text": "Don't confuse printing output with internal order. They don't always match",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span> just sort the <code>{a, b, n, q}</code> properly.",
  "id": "5953df0376a757f808b5f742",
  "issues": [],
  "mentions": [
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-28T16:53:23.278Z",
  "text": "@Abdullahjavednesar just sort the `{a, b, n, q}` properly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "why does it matter if n is greater than q for that integral?",
  "id": "5953f16d19147ac32313258a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-28T18:11:57.858Z",
  "text": "why does it matter if n is greater than q for that integral?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span>, I don&#39;t think it really matters for that type of pattern. Don&#39;t know why they are using that condition? ",
  "id": "59565d738dae4250316e1253",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-30T14:17:23.647Z",
  "text": "@asmeurer, I don't think it really matters for that type of pattern. Don't know why they are using that condition? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "remember that we are translating from Mathematica, Mathematica has a different way of sorting polynomials",
  "id": "59566c0d703e565c335df0ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-30T15:19:41.694Z",
  "text": "remember that we are translating from Mathematica, Mathematica has a different way of sorting polynomials",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I believe that condition could just be there to make sure the terms are sorted in increasing order of the exponent of <code>x</code>",
  "id": "59566c3ac101bc4e3a3974b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-30T15:20:26.019Z",
  "text": "I believe that condition could just be there to make sure the terms are sorted in increasing order of the exponent of `x`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-07-01T04:16:48.749Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<p>In the test suit, sometimes we may get a different answer(than given in the test suit) but the right one. Example:</p><pre><code class=\"python\"><span class=\"prompt\">&gt;&gt;&gt; </span>r1 = -sqrt(a + b*x)/x - b*sqrt(a + b*x)*atanh(sqrt(<span class=\"number\">1</span> + b*x/a))/(a*sqrt(<span class=\"number\">1</span> + b*x/a)) <span class=\"comment\"># Rubi Output</span>\n<span class=\"prompt\">&gt;&gt;&gt; </span>r2 = - b*atanh(sqrt(a + b*x)/sqrt(a))/sqrt(a) - sqrt(a + b*x)/x <span class=\"comment\"># Optimal answer</span>\n<span class=\"prompt\">&gt;&gt;&gt; </span>r1 == r2\n<span class=\"keyword\">False</span></code></pre><p>Because of this, few tests are failing. I tried to <code>simplify()</code> the expression but it doesn&#39;t convert to the optimal antiderivative.</p>",
  "id": "595722243230e14f3a12471d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T04:16:36.579Z",
  "text": "In the test suit, sometimes we may get a different answer(than given in the test suit) but the right one. Example:\n```python\n>>> r1 = -sqrt(a + b*x)/x - b*sqrt(a + b*x)*atanh(sqrt(1 + b*x/a))/(a*sqrt(1 + b*x/a)) # Rubi Output\n>>> r2 = - b*atanh(sqrt(a + b*x)/sqrt(a))/sqrt(a) - sqrt(a + b*x)/x # Optimal answer\n>>> r1 == r2\nFalse\n```\nBecause of this, few tests are failing. I tried to `simplify()` the expression but it doesn't convert to the optimal antiderivative.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Is <code>a</code> positive there? Otherwise I think they may not be equivalent ",
  "id": "595746c551915d962af5a6ff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T06:52:53.236Z",
  "text": "Is `a` positive there? Otherwise I think they may not be equivalent ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I see. It is not actually.",
  "id": "595764d13230e14f3a131528",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T09:01:05.769Z",
  "text": "I see. It is not actually.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I have implemnted <code>matchpy2sympy</code>: <a href=\"https://github.com/parsoyaarihant/sympy/blob/rubi4/sympy/rubi/matchpy2sympy.py\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/parsoyaarihant/sympy/blob/rubi4/sympy/rubi/matchpy2sympy.py</a>",
  "id": "5957698b76a757f808c4d73a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T09:21:15.313Z",
  "text": "I have implemnted `matchpy2sympy`: https://github.com/parsoyaarihant/sympy/blob/rubi4/sympy/rubi/matchpy2sympy.py",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/parsoyaarihant/sympy/blob/rubi4/sympy/rubi/matchpy2sympy.py"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<a href=\"https://github.com/parsoyaarihant/sympy/blob/rubi4/sympy/rubi/tests/test_matchpy2sympy.py\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/parsoyaarihant/sympy/blob/rubi4/sympy/rubi/tests/test_matchpy2sympy.py</a>",
  "id": "59576994703e565c3361b51b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T09:21:24.824Z",
  "text": "https://github.com/parsoyaarihant/sympy/blob/rubi4/sympy/rubi/tests/test_matchpy2sympy.py",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/parsoyaarihant/sympy/blob/rubi4/sympy/rubi/tests/test_matchpy2sympy.py"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> I tried to plot those two values <code>r1</code> and <code>r2</code> for different values of <code>a</code> and <code>b</code>, the functions look exactly the same.",
  "id": "5957bd5976a757f808c61618",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T15:18:49.236Z",
  "text": "@parsoyaarihant I tried to plot those two values `r1` and `r2` for different values of `a` and `b`, the functions look exactly the same.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Ah, OK. I remember seeing some code that was parsing strings.",
  "id": "5957bd954bcd78af5665852a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T15:19:49.323Z",
  "text": "Ah, OK. I remember seeing some code that was parsing strings.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Concerning the <code>r1</code> and <code>r2</code>, remember that we have a very simple way to test if the integral is correct: just derive it.",
  "id": "5957be154bcd78af56658666",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T15:21:57.892Z",
  "text": "Concerning the `r1` and `r2`, remember that we have a very simple way to test if the integral is correct: just derive it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-07-01T16:31:34.228Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<code>Ah, OK. I remember seeing some code that was parsing strings.</code><br>I implemented <code>matchpy2sympy</code> today itself. Previously I was using <code>sympify</code>.",
  "id": "5957ccec76a757f808c64f58",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T16:25:16.156Z",
  "text": "`Ah, OK. I remember seeing some code that was parsing strings.`\nI implemented `matchpy2sympy` today itself. Previously I was using `sympify`.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Yeah, I wasn&#39;t very happy about using <code>sympify</code> because converting stuff to strings usually makes use lose the stacktrace",
  "id": "5957d4b5703e565c33633914",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T16:58:29.001Z",
  "text": "Yeah, I wasn't very happy about using `sympify` because converting stuff to strings usually makes use lose the stacktrace",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "so debugging becomes very difficult",
  "id": "5957d4c0329651f46e41dc60",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T16:58:40.994Z",
  "text": "so debugging becomes very difficult",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Yes. How to handle <code>r1</code> and <code>r2</code> issue?",
  "id": "5957d5ef5a1ab55f64452530",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T17:03:43.272Z",
  "text": "Yes. How to handle `r1` and `r2` issue?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-07-01T17:09:01.006Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I don&#39;t know how many tests, might be failing because of this. I am expanding the rubi output and simplifying <code>(rubi - optimal answer)</code>(==0) for the current test suit. Its making a lot of difference.",
  "id": "5957d6ff4bcd78af5665deac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T17:08:15.260Z",
  "text": "I don't know how many tests, might be failing because of this. I am expanding the rubi output and simplifying `(rubi - optimal answer)`(==0) for the current test suit. Its making a lot of difference.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<pre><code class=\"python\">In [<span class=\"number\">4</span>]: simplify(diff(r1, x))\nOut[<span class=\"number\">4</span>]: \n  _________\n\u2572\u2571 a + b\u22c5x \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n      <span class=\"number\">2</span>    \n     x     \n\nIn [<span class=\"number\">5</span>]: simplify(diff(r2, x))\nOut[<span class=\"number\">5</span>]: \n  _________\n\u2572\u2571 a + b\u22c5x \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n      <span class=\"number\">2</span>    \n     x</code></pre>",
  "id": "5957d8bfc101bc4e3a3ed036",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T17:15:43.332Z",
  "text": "```python\nIn [4]: simplify(diff(r1, x))\nOut[4]: \n  _________\n\u2572\u2571 a + b\u22c5x \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n      2    \n     x     \n\nIn [5]: simplify(diff(r2, x))\nOut[5]: \n  _________\n\u2572\u2571 a + b\u22c5x \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n      2    \n     x \n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would put a fallback that check if the dirivatives are the same",
  "id": "5957d8e876a757f808c67c9d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T17:16:24.294Z",
  "text": "I would put a fallback that check if the dirivatives are the same",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "okay",
  "id": "5957e5bb3230e14f3a14e2e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T18:11:07.453Z",
  "text": "okay",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "These tests are take lot of time to complete because of <code>ExpandIntegrand</code>, <code>Symplify</code> , etc. How will we handle them later on when we test for remaining modules?",
  "id": "5957e629703e565c33637b62",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T18:12:57.991Z",
  "text": "These tests are take lot of time to complete because of `ExpandIntegrand`, `Symplify` , etc. How will we handle them later on when we test for remaining modules?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "how is the speed compared to Mathematica?",
  "id": "5957e71c8dae42503173d095",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T18:17:00.877Z",
  "text": "how is the speed compared to Mathematica?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "how did you end up implementing <code>ExpandIntegrand</code>?",
  "id": "5957e84b3230e14f3a14ed05",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T18:22:03.374Z",
  "text": "how did you end up implementing `ExpandIntegrand`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "Tried few examples but couldn&#39;t exactly figure out what <code>DeleteCases(v, u, 1, 1)</code>mean?",
  "id": "5957feb35a1ab55f6445b96c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T19:57:39.859Z",
  "text": "Tried few examples but couldn't exactly figure out what `DeleteCases(v, u, 1, 1)`mean?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "<a href=\"http://reference.wolfram.com/language/ref/DeleteCases.html.en\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://reference.wolfram.com/language/ref/DeleteCases.html.en</a>",
  "id": "5957fecd6ae41d5d33a5a9a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T19:58:05.933Z",
  "text": "http://reference.wolfram.com/language/ref/DeleteCases.html.en",
  "unread": false,
  "urls": [
   {
    "url": "http://reference.wolfram.com/language/ref/DeleteCases.html.en"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> can give an example?",
  "id": "5957ff02ad9c781843be4b81",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T19:58:58.480Z",
  "text": "@Upabjojr can give an example?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "it looks like a filter",
  "id": "595824a73230e14f3a15c8e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T22:39:35.844Z",
  "text": "it looks like a filter",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "it looks for the first match of <code>u</code> in <code>v</code>",
  "id": "5958253276a757f808c79632",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T22:41:54.624Z",
  "text": "it looks for the first match of `u` in `v`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "and removes it",
  "id": "59582537703e565c336466b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T22:41:59.201Z",
  "text": "and removes it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<pre><code><span class=\"keyword\">In</span>[<span class=\"number\">1</span>]:= <span class=\"keyword\">DeleteCases</span>[<span class=\"list\">{a,b,2,3,x}</span>, _Integer, <span class=\"number\">1</span>, <span class=\"number\">1</span>]                                \n\n<span class=\"keyword\">Out</span>[<span class=\"number\">1</span>]= <span class=\"list\">{a, b, 3, x}</span>\n\n<span class=\"keyword\">In</span>[<span class=\"number\">2</span>]:= <span class=\"keyword\">DeleteCases</span>[<span class=\"list\">{a,b,2,3,x}</span>, _Integer]                                      \n\n<span class=\"keyword\">Out</span>[<span class=\"number\">2</span>]= <span class=\"list\">{a, b, x}</span></code></pre>",
  "id": "595826d2c101bc4e3a3fe78b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T22:48:50.603Z",
  "text": "```\nIn[1]:= DeleteCases[{a,b,2,3,x}, _Integer, 1, 1]                                \n\nOut[1]= {a, b, 3, x}\n\nIn[2]:= DeleteCases[{a,b,2,3,x}, _Integer]                                      \n\nOut[2]= {a, b, x}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "The first 1 is the level, the second 1 is for the first occurrence only",
  "id": "5958270a5a1ab55f6446482f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T22:49:46.420Z",
  "text": "The first 1 is the level, the second 1 is for the first occurrence only",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "so if <code>v</code> is an array or an expression with <code>.args</code>, remove the first match only",
  "id": "59582733ad9c781843bed6ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-01T22:50:27.515Z",
  "text": "so if `v` is an array or an expression with `.args`, remove the first match only",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I have <a href=\"https://github.com/parsoyaarihant/sympy/blob/rubi4/sympy/rubi/utility_function.py#L1486\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">implemented</a> <code>ExpandIntegrand</code> using <code>.match()</code> in SymPy. It linearly matches the expression with all patterns. ",
  "id": "5958bb24703e565c33661d89",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-02T09:21:40.644Z",
  "text": "I have [implemented](https://github.com/parsoyaarihant/sympy/blob/rubi4/sympy/rubi/utility_function.py#L1486) `ExpandIntegrand` using `.match()` in SymPy. It linearly matches the expression with all patterns. ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/parsoyaarihant/sympy/blob/rubi4/sympy/rubi/utility_function.py#L1486"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I have not run the test suit in mathematica yet. I will let you know how much time it takes on mathematica vs on python.",
  "id": "5958bf93bf7e6af22c95db1f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-02T09:40:35.647Z",
  "text": "I have not run the test suit in mathematica yet. I will let you know how much time it takes on mathematica vs on python.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Is there any SymPy function which can simplify expression like this:<pre><code class=\"mathematica\"><span class=\"comment\">(* Basis: If n is an integer, Tan[z]^n/(a+b*Tan[z]^n) == 1/(b+a*Cot[z]^n) *)</span>\nTrigSimplifyAux[u_.*tan[v_]^n_./(a_+b_.*tan[v_]^n_.)] := u/(b+a*<span class=\"keyword\">Cot</span>[v]^n) /; PositiveIntegerQ[n] &amp;&amp; NonsumQ[a]\n\n<span class=\"comment\">(* Basis: If n is an integer, Cot[z]^n/(a+b*Cot[z]^n) == 1/(b+a*Tan[z]^n) *)</span>\nTrigSimplifyAux[u_.*cot[v_]^n_./(a_+b_.*cot[v_]^n_.)] := u/(b+a*<span class=\"keyword\">Tan</span>[v]^n) /; PositiveIntegerQ[n] &amp;&amp; NonsumQ[a]\n\n<span class=\"comment\">(* Basis: If n is an integer, Sec[z]^n/(a+b*Sec[z]^n) == 1/(b+a*Cos[z]^n) *)</span>\nTrigSimplifyAux[u_.*sec[v_]^n_./(a_+b_.*sec[v_]^n_.)] := u/(b+a*<span class=\"keyword\">Cos</span>[v]^n) /; PositiveIntegerQ[n] &amp;&amp; NonsumQ[a]\n\n<span class=\"comment\">(* Basis: If n is an integer, Csc[z]^n/(a+b*Csc[z]^n) == 1/(b+a*Sin[z]^n) *)</span>\nTrigSimplifyAux[u_.*csc[v_]^n_./(a_+b_.*csc[v_]^n_.)] := u/(b+a*<span class=\"keyword\">Sin</span>[v]^n) /; PositiveIntegerQ[n] &amp;&amp; NonsumQ[a]</code></pre>",
  "id": "5958c0314bcd78af5668c068",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-02T09:43:13.358Z",
  "text": "Is there any SymPy function which can simplify expression like this:\n```mathematica\n(* Basis: If n is an integer, Tan[z]^n/(a+b*Tan[z]^n) == 1/(b+a*Cot[z]^n) *)\nTrigSimplifyAux[u_.*tan[v_]^n_./(a_+b_.*tan[v_]^n_.)] := u/(b+a*Cot[v]^n) /; PositiveIntegerQ[n] && NonsumQ[a]\n\n(* Basis: If n is an integer, Cot[z]^n/(a+b*Cot[z]^n) == 1/(b+a*Tan[z]^n) *)\nTrigSimplifyAux[u_.*cot[v_]^n_./(a_+b_.*cot[v_]^n_.)] := u/(b+a*Tan[v]^n) /; PositiveIntegerQ[n] && NonsumQ[a]\n\n(* Basis: If n is an integer, Sec[z]^n/(a+b*Sec[z]^n) == 1/(b+a*Cos[z]^n) *)\nTrigSimplifyAux[u_.*sec[v_]^n_./(a_+b_.*sec[v_]^n_.)] := u/(b+a*Cos[v]^n) /; PositiveIntegerQ[n] && NonsumQ[a]\n\n(* Basis: If n is an integer, Csc[z]^n/(a+b*Csc[z]^n) == 1/(b+a*Sin[z]^n) *)\nTrigSimplifyAux[u_.*csc[v_]^n_./(a_+b_.*csc[v_]^n_.)] := u/(b+a*Sin[v]^n) /; PositiveIntegerQ[n] && NonsumQ[a]\n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "There is trigsimp() and fu(), though I don&#39;t know whether they would match these conditions",
  "id": "5958f67c703e565c3366f1f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-02T13:34:52.785Z",
  "text": "There is trigsimp() and fu(), though I don't know whether they would match these conditions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "If you look at the source code of fu()",
  "id": "5958f68cc101bc4e3a427bb8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-02T13:35:08.936Z",
  "text": "If you look at the source code of fu()",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "There are lots of rewriting rules",
  "id": "5958f69cc101bc4e3a427be2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-02T13:35:24.756Z",
  "text": "There are lots of rewriting rules",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Maybe some of them can help",
  "id": "5958f6ab329651f46e458f20",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-02T13:35:39.417Z",
  "text": "Maybe some of them can help",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<code>trigsimp()</code>work for some patterns, but it does not support the above simplifications.",
  "id": "5958f71d329651f46e4590a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-02T13:37:33.175Z",
  "text": "`trigsimp()`work for some patterns, but it does not support the above simplifications.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<a href=\"https://github.com/sympy/sympy/blob/9670ff89dd8bff7878c6d636ec4f493b87d092df/sympy/simplify/fu.py#L12\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/blob/9670ff89dd8bff7878c6d636ec4f493b87d092df/sympy/simplify/fu.py#L12</a>",
  "id": "59591b326ae41d5d33a95dd4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-02T16:11:30.395Z",
  "text": "https://github.com/sympy/sympy/blob/9670ff89dd8bff7878c6d636ec4f493b87d092df/sympy/simplify/fu.py#L12",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/9670ff89dd8bff7878c6d636ec4f493b87d092df/sympy/simplify/fu.py#L12"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "maybe you can try to see if there is something useful in this list",
  "id": "59591b438dae42503177e44e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-02T16:11:47.138Z",
  "text": "maybe you can try to see if there is something useful in this list",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-07-03T18:45:09.067Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "<p>Code for <code>PseudoBinomialParts()</code></p><pre><code><span class=\"name\">PseudoBinomialParts</span>[<span class=\"atom\">u_</span>,<span class=\"atom\">x_Symbol</span>] :=\n  <span class=\"name\">If</span>[<span class=\"name\">PolynomialQ</span>[<span class=\"atom\">u</span>,<span class=\"atom\">x</span>] &amp;&amp; <span class=\"name\">Expon</span>[<span class=\"atom\">u</span>,<span class=\"atom\">x</span>]&gt;<span class=\"number\">2</span>,\n    <span class=\"name\">Module</span>[{<span class=\"atom\">a</span>,<span class=\"atom\">c</span>,<span class=\"atom\">d</span>,<span class=\"atom\">n</span>},\n    <span class=\"atom\">n</span>=<span class=\"name\">Expon</span>[<span class=\"atom\">u</span>,<span class=\"atom\">x</span>];\n    <span class=\"atom\">d</span>=<span class=\"name\">Rt</span>[<span class=\"name\">Coefficient</span>[<span class=\"atom\">u</span>,<span class=\"atom\">x</span>,<span class=\"atom\">n</span>],<span class=\"atom\">n</span>];\n    <span class=\"atom\">c</span>=<span class=\"name\">Coefficient</span>[<span class=\"atom\">u</span>,<span class=\"atom\">x</span>,<span class=\"atom\">n</span>-<span class=\"number\">1</span>]/(<span class=\"atom\">n</span>*<span class=\"atom\">d</span>^(<span class=\"atom\">n</span>-<span class=\"number\">1</span>));\n    <span class=\"atom\">a</span>=<span class=\"name\">Simplify</span>[<span class=\"atom\">u</span>-(<span class=\"atom\">c</span>+<span class=\"atom\">d</span>*<span class=\"atom\">x</span>)^<span class=\"atom\">n</span>];\n    <span class=\"name\">If</span>[<span class=\"name\">NonzeroQ</span>[<span class=\"atom\">a</span>] &amp;&amp; <span class=\"name\">FreeQ</span>[<span class=\"atom\">a</span>,<span class=\"atom\">x</span>],\n      {<span class=\"atom\">a</span>,<span class=\"number\">1</span>,<span class=\"atom\">c</span>,<span class=\"atom\">d</span>,<span class=\"atom\">n</span>},\n    <span class=\"name\">False</span>]],\n  <span class=\"name\">False</span>]</code></pre><p>but the definition says : If u is equivalent to a polynomial of the form a+b<em>(c+d</em>x)^n where n[Element][DoubleStruckCapitalZ] and n&gt;2,<br>    PseudoBinomialParts[u,x] returns the list {a,b,c,d,n}; else it returns False.<br>Will it returns <code>[a, b, c, d, n]</code> for the above code?<br>Or should I try matching?</p><pre><code><span class=\"tag\">In</span> <span class=\"attr_selector\">[157]</span>: (<span class=\"number\">2</span>+<span class=\"number\">3</span>*(<span class=\"number\">4</span>+<span class=\"number\">5</span>*x)**<span class=\"number\">6</span>)<span class=\"class\">.match</span>(a+b*(c+d*x)**n)\n<span class=\"tag\">Out</span><span class=\"attr_selector\">[157]</span>: {<span class=\"attribute\">n_</span>: <span class=\"number\">6</span>, <span class=\"attribute\">a_</span>: <span class=\"number\">2</span>, <span class=\"attribute\">b_</span>: <span class=\"number\">3</span>, <span class=\"attribute\">d_</span>: <span class=\"number\">5</span>, <span class=\"attribute\">c_</span>: <span class=\"number\">4</span>}</code></pre>",
  "id": "595a909f5a1ab55f644f376a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-03T18:44:46.961Z",
  "text": "Code for `PseudoBinomialParts()`\n```\nPseudoBinomialParts[u_,x_Symbol] :=\n  If[PolynomialQ[u,x] && Expon[u,x]>2,\n    Module[{a,c,d,n},\n    n=Expon[u,x];\n    d=Rt[Coefficient[u,x,n],n];\n    c=Coefficient[u,x,n-1]/(n*d^(n-1));\n    a=Simplify[u-(c+d*x)^n];\n    If[NonzeroQ[a] && FreeQ[a,x],\n      {a,1,c,d,n},\n    False]],\n  False]\n```\nbut the definition says : If u is equivalent to a polynomial of the form a+b*(c+d*x)^n where n\\[Element]\\[DoubleStruckCapitalZ] and n>2,\n\tPseudoBinomialParts[u,x] returns the list {a,b,c,d,n}; else it returns False. \nWill it returns `[a, b, c, d, n]` for the above code?\nOr should I try matching?\n```\nIn [157]: (2+3*(4+5*x)**6).match(a+b*(c+d*x)**n)\nOut[157]: {n_: 6, a_: 2, b_: 3, d_: 5, c_: 4}\n```\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2017-07-03T19:07:56.466Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span> , you can run the utility functions on Mathematica and check if your assumption is correct.",
  "id": "595a95f9ad9c781843c82b4e",
  "issues": [],
  "mentions": [
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-03T19:07:37.150Z",
  "text": "@Abdullahjavednesar , you can run the utility functions on Mathematica and check if your assumption is correct.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "yes, keep checking everything in Mathematica",
  "id": "595afbb26ae41d5d33b0e01e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-04T02:21:38.100Z",
  "text": "yes, keep checking everything in Mathematica",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "How to implement this pattern in SymPy:<pre><code class=\"mathematica\">  <span class=\"keyword\">MatchQ</span>[u,F_[G_[v_]] /; LinearQ[v,x] &amp;&amp; <span class=\"keyword\">MemberQ</span>[<span class=\"list\">{\n    {ArcTanh,Tanh}</span>,<span class=\"list\">{ArcTanh,Coth}</span>,<span class=\"list\">{ArcCoth,Coth}</span>,<span class=\"list\">{ArcCoth,Tanh}</span>,\n    <span class=\"list\">{ArcTan,Tan}</span>,<span class=\"list\">{ArcTan,Cot}</span>,<span class=\"list\">{ArcCot,Cot}</span>,<span class=\"list\">{ArcCot,Tan}</span>\n   },<span class=\"list\">{F,G}</span>]</code></pre>",
  "id": "59623fe3329651f46e6ccab6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-09T14:38:27.883Z",
  "text": "How to implement this pattern in SymPy:\n```mathematica\n  MatchQ[u,F_[G_[v_]] /; LinearQ[v,x] && MemberQ[{\n\t{ArcTanh,Tanh},{ArcTanh,Coth},{ArcCoth,Coth},{ArcCoth,Tanh},\n\t{ArcTan,Tan},{ArcTan,Cot},{ArcCot,Cot},{ArcCot,Tan}\n   },{F,G}]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Well, the pattern <code>F_[G_[v_]]</code> should match two nested functions of one parameter each",
  "id": "59625e49bc46472974d0ebd4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-09T16:48:09.470Z",
  "text": "Well, the pattern `F_[G_[v_]]` should match two nested functions of one parameter each",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "if the test expression is <code>expr</code>, you could have something like:<pre><code class=\"python\">F = type(expr)\nG = type(expr.args[<span class=\"number\">0</span>])\nv = expr.args[<span class=\"number\">0</span>].args[<span class=\"number\">0</span>]\n<span class=\"keyword\">assert</span> len(expr.args) == <span class=\"number\">1</span>\n<span class=\"keyword\">assert</span> len(expr.args[<span class=\"number\">0</span>].args) == <span class=\"number\">1</span></code></pre>",
  "id": "59625eac76a757f808f24690",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-09T16:49:48.314Z",
  "text": "if the test expression is `expr`, you could have something like:\n```python\nF = type(expr)\nG = type(expr.args[0])\nv = expr.args[0].args[0]\nassert len(expr.args) == 1\nassert len(expr.args[0].args) == 1\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I guess that piece of code identifies compositions of inverse trigonometric and trigonometric functions",
  "id": "59625efbf5b3458e302c1c5a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-09T16:51:07.152Z",
  "text": "I guess that piece of code identifies compositions of inverse trigonometric and trigonometric functions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Maybe instead of <code>type( ... )</code> it&#39;s better to use <code>F = expr.func</code>",
  "id": "59626164bf7e6af22cbe94a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-09T17:01:24.067Z",
  "text": "Maybe instead of `type( ... )` it's better to use `F = expr.func`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> , thanks",
  "id": "59632b65f5b3458e302eee8c",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-10T07:23:17.354Z",
  "text": "@Upabjojr , thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "This is the latest test results:<pre><code class=\"python\">total test:  <span class=\"number\">1567</span>\npassed:  <span class=\"number\">903</span>\nfailed:  <span class=\"number\">664</span>\ntime taken: <span class=\"number\">4169.407</span></code></pre>",
  "id": "59632b88f5b3458e302eeeda",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-10T07:23:52.608Z",
  "text": "This is the latest test results:\n```python\ntotal test:  1567\npassed:  903\nfailed:  664\ntime taken: 4169.407\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-07-10T07:34:19.584Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I am investigating the failed tests. Some expressions need more rules to intergate. Such as binomials. They should be fixed once we add all the rules into Rubi",
  "id": "59632bf0f5b3458e302ef090",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-10T07:25:36.538Z",
  "text": "I am investigating the failed tests. Some expressions need more rules to intergate. Such as binomials. They should be fixed once we add all the rules into Rubi",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<p>I am getting different results for <code>rubi_integrate((a + b*x)**(S(1)/3)/x**2, x)</code></p><pre><code class=\"python\"><span class=\"prompt\">&gt;&gt;&gt; </span>res <span class=\"comment\"># Rubi Output</span>\n-(a + b*x)**(<span class=\"number\">1</span>/<span class=\"number\">3</span>)/x - b*(a + b*x)**(<span class=\"number\">1</span>/<span class=\"number\">3</span>)*hyper((<span class=\"number\">1</span>, <span class=\"number\">1</span>/<span class=\"number\">3</span>), (<span class=\"number\">4</span>/<span class=\"number\">3</span>,), <span class=\"number\">1</span> + b*x/a)/a\n<span class=\"prompt\">&gt;&gt;&gt; </span>res1 <span class=\"comment\"># Optimal Output</span>\n-(a + b*x)**(<span class=\"number\">1</span>/<span class=\"number\">3</span>)/x - b*log(x)/(<span class=\"number\">6</span>*a**(<span class=\"number\">2</span>/<span class=\"number\">3</span>)) + b*log(a**(<span class=\"number\">1</span>/<span class=\"number\">3</span>) - (a + b*x)**(<span class=\"number\">1</span>/<span class=\"number\">3</span>))/(<span class=\"number\">2</span>*a**(<span class=\"number\">2</span>/<span class=\"number\">3</span>)) - sqrt(<span class=\"number\">3</span>)*b*atan(sqrt(<span class=\"number\">3</span>)*(a**(<span class=\"number\">1</span>/<span class=\"number\">3</span>) + <span class=\"number\">2</span>*(a + b*x)**(<span class=\"number\">1</span>/<span class=\"number\">3</span>))/(<span class=\"number\">3</span>*a**(<span class=\"number\">1</span>/<span class=\"number\">3</span>)))/(<span class=\"number\">3</span>*a**(<span class=\"number\">2</span>/<span class=\"number\">3</span>))</code></pre><p>I tried differentiating the expressions but couldn&#39;t equate them due to presence of <code>hyper</code>:</p><pre><code class=\"python\"><span class=\"prompt\">&gt;&gt;&gt; </span>res.diff(x) - res1.diff(x)\n-b**<span class=\"number\">2</span>*hyper((<span class=\"number\">1</span>, <span class=\"number\">1</span>/<span class=\"number\">3</span>), (<span class=\"number\">4</span>/<span class=\"number\">3</span>,), <span class=\"number\">1</span> + b*x/a)/(<span class=\"number\">3</span>*a*(a + b*x)**(<span class=\"number\">2</span>/<span class=\"number\">3</span>)) + <span class=\"number\">2</span>*b**<span class=\"number\">2</span>/(<span class=\"number\">9</span>*a*(<span class=\"number\">1</span> + (a**(<span class=\"number\">1</span>/<span class=\"number\">3</span>) + <span class=\"number\">2</span>*(a + b*x)**(<span class=\"number\">1</span>/<span class=\"number\">3</span>))**<span class=\"number\">2</span>/(<span class=\"number\">3</span>*a**(<span class=\"number\">2</span>/<span class=\"number\">3</span>)))*(a + b*x)**(<span class=\"number\">2</span>/<span class=\"number\">3</span>)) - b**<span class=\"number\">2</span>*(a + b*x)**(<span class=\"number\">1</span>/<span class=\"number\">3</span>)*hyper((<span class=\"number\">2</span>, <span class=\"number\">4</span>/<span class=\"number\">3</span>), (<span class=\"number\">7</span>/<span class=\"number\">3</span>,), <span class=\"number\">1</span> + b*x/a)/(<span class=\"number\">4</span>*a**<span class=\"number\">2</span>) + b**<span class=\"number\">2</span>/(<span class=\"number\">6</span>*a**(<span class=\"number\">2</span>/<span class=\"number\">3</span>)*(a**(<span class=\"number\">1</span>/<span class=\"number\">3</span>) - (a + b*x)**(<span class=\"number\">1</span>/<span class=\"number\">3</span>))*(a + b*x)**(<span class=\"number\">2</span>/<span class=\"number\">3</span>)) + b/(<span class=\"number\">6</span>*a**(<span class=\"number\">2</span>/<span class=\"number\">3</span>)*x)\n<span class=\"prompt\">&gt;&gt;&gt; </span>simplify(_)\n-b**<span class=\"number\">2</span>*hyper((<span class=\"number\">1</span>, <span class=\"number\">1</span>/<span class=\"number\">3</span>), (<span class=\"number\">4</span>/<span class=\"number\">3</span>,), <span class=\"number\">1</span> + b*x/a)/(<span class=\"number\">3</span>*a*(a + b*x)**(<span class=\"number\">2</span>/<span class=\"number\">3</span>)) + <span class=\"number\">2</span>*b**<span class=\"number\">2</span>/(<span class=\"number\">9</span>*a*(<span class=\"number\">1</span> + (a**(<span class=\"number\">1</span>/<span class=\"number\">3</span>) + <span class=\"number\">2</span>*(a + b*x)**(<span class=\"number\">1</span>/<span class=\"number\">3</span>))**<span class=\"number\">2</span>/(<span class=\"number\">3</span>*a**(<span class=\"number\">2</span>/<span class=\"number\">3</span>)))*(a + b*x)**(<span class=\"number\">2</span>/<span class=\"number\">3</span>)) - b**<span class=\"number\">2</span>*(a + b*x)**(<span class=\"number\">1</span>/<span class=\"number\">3</span>)*hyper((<span class=\"number\">2</span>, <span class=\"number\">4</span>/<span class=\"number\">3</span>), (<span class=\"number\">7</span>/<span class=\"number\">3</span>,), <span class=\"number\">1</span> + b*x/a)/(<span class=\"number\">4</span>*a**<span class=\"number\">2</span>) + b**<span class=\"number\">2</span>/(<span class=\"number\">6</span>*a**(<span class=\"number\">2</span>/<span class=\"number\">3</span>)*(a**(<span class=\"number\">1</span>/<span class=\"number\">3</span>) - (a + b*x)**(<span class=\"number\">1</span>/<span class=\"number\">3</span>))*(a + b*x)**(<span class=\"number\">2</span>/<span class=\"number\">3</span>)) + b/(<span class=\"number\">6</span>*a**(<span class=\"number\">2</span>/<span class=\"number\">3</span>)*x)</code></pre>",
  "id": "59634e032723db8d5ef6bead",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-10T09:50:59.832Z",
  "text": "I am getting different results for `rubi_integrate((a + b*x)**(S(1)/3)/x**2, x)`\n```python\n>>> res # Rubi Output\n-(a + b*x)**(1/3)/x - b*(a + b*x)**(1/3)*hyper((1, 1/3), (4/3,), 1 + b*x/a)/a\n>>> res1 # Optimal Output\n-(a + b*x)**(1/3)/x - b*log(x)/(6*a**(2/3)) + b*log(a**(1/3) - (a + b*x)**(1/3))/(2*a**(2/3)) - sqrt(3)*b*atan(sqrt(3)*(a**(1/3) + 2*(a + b*x)**(1/3))/(3*a**(1/3)))/(3*a**(2/3))\n```\nI tried differentiating the expressions but couldn't equate them due to presence of `hyper`:\n```python\n>>> res.diff(x) - res1.diff(x)\n-b**2*hyper((1, 1/3), (4/3,), 1 + b*x/a)/(3*a*(a + b*x)**(2/3)) + 2*b**2/(9*a*(1 + (a**(1/3) + 2*(a + b*x)**(1/3))**2/(3*a**(2/3)))*(a + b*x)**(2/3)) - b**2*(a + b*x)**(1/3)*hyper((2, 4/3), (7/3,), 1 + b*x/a)/(4*a**2) + b**2/(6*a**(2/3)*(a**(1/3) - (a + b*x)**(1/3))*(a + b*x)**(2/3)) + b/(6*a**(2/3)*x)\n>>> simplify(_)\n-b**2*hyper((1, 1/3), (4/3,), 1 + b*x/a)/(3*a*(a + b*x)**(2/3)) + 2*b**2/(9*a*(1 + (a**(1/3) + 2*(a + b*x)**(1/3))**2/(3*a**(2/3)))*(a + b*x)**(2/3)) - b**2*(a + b*x)**(1/3)*hyper((2, 4/3), (7/3,), 1 + b*x/a)/(4*a**2) + b**2/(6*a**(2/3)*(a**(1/3) - (a + b*x)**(1/3))*(a + b*x)**(2/3)) + b/(6*a**(2/3)*x)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<pre><code class=\"python\">In [<span class=\"number\">17</span>]: res.subs({x:<span class=\"number\">1</span>,a:<span class=\"number\">1</span>,b:<span class=\"number\">1</span>}).n()\nOut[<span class=\"number\">17</span>]: -<span class=\"number\">2.27419119572699</span> + <span class=\"number\">1.0471975511966</span>\u22c5\u2148\n\nIn [<span class=\"number\">18</span>]: res1.subs({x:<span class=\"number\">1</span>,a:<span class=\"number\">1</span>,b:<span class=\"number\">1</span>}).n()\nOut[<span class=\"number\">18</span>]: -<span class=\"number\">2.57649108976603</span> + <span class=\"number\">1.5707963267949</span>\u22c5\u2148\n\nIn [<span class=\"number\">19</span>]: res.subs({x:<span class=\"number\">2</span>,a:<span class=\"number\">1</span>,b:<span class=\"number\">1</span>}).n()\nOut[<span class=\"number\">19</span>]: -<span class=\"number\">1.60703213521787</span> + <span class=\"number\">1.0471975511966</span>\u22c5\u2148\n\nIn [<span class=\"number\">20</span>]: res1.subs({x:<span class=\"number\">2</span>,a:<span class=\"number\">1</span>,b:<span class=\"number\">1</span>}).n()\nOut[<span class=\"number\">20</span>]: -<span class=\"number\">1.90933202925691</span> + <span class=\"number\">1.5707963267949</span>\u22c5\u2148\n\nIn [<span class=\"number\">21</span>]: res.subs({x:<span class=\"number\">3</span>,a:<span class=\"number\">1</span>,b:<span class=\"number\">1</span>}).n()\nOut[<span class=\"number\">21</span>]: -<span class=\"number\">1.35580494039898</span> + <span class=\"number\">1.0471975511966</span>\u22c5\u2148\n\nIn [<span class=\"number\">22</span>]: res1.subs({x:<span class=\"number\">3</span>,a:<span class=\"number\">1</span>,b:<span class=\"number\">1</span>}).n()\nOut[<span class=\"number\">22</span>]: -<span class=\"number\">1.65810483443802</span> + <span class=\"number\">1.5707963267949</span>\u22c5\u2148\n\nIn [<span class=\"number\">23</span>]: Out[<span class=\"number\">22</span>]-Out[<span class=\"number\">21</span>], Out[<span class=\"number\">20</span>]-Out[<span class=\"number\">19</span>], Out[<span class=\"number\">18</span>]-Out[<span class=\"number\">17</span>]\nOut[<span class=\"number\">23</span>]: \n(-<span class=\"number\">0.302299894039036</span> + <span class=\"number\">0.523598775598299</span>\u22c5\u2148, -<span class=\"number\">0.302299894039036</span> + <span class=\"number\">0.523598775598</span>\n<span class=\"number\">299</span>\u22c5\u2148, -<span class=\"number\">0.302299894039036</span> + <span class=\"number\">0.523598775598299</span>\u22c5\u2148)</code></pre>",
  "id": "59639c6a4bcd78af56968cf3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-10T15:25:30.699Z",
  "text": "```python\nIn [17]: res.subs({x:1,a:1,b:1}).n()\nOut[17]: -2.27419119572699 + 1.0471975511966\u22c5\u2148\n\nIn [18]: res1.subs({x:1,a:1,b:1}).n()\nOut[18]: -2.57649108976603 + 1.5707963267949\u22c5\u2148\n\nIn [19]: res.subs({x:2,a:1,b:1}).n()\nOut[19]: -1.60703213521787 + 1.0471975511966\u22c5\u2148\n\nIn [20]: res1.subs({x:2,a:1,b:1}).n()\nOut[20]: -1.90933202925691 + 1.5707963267949\u22c5\u2148\n\nIn [21]: res.subs({x:3,a:1,b:1}).n()\nOut[21]: -1.35580494039898 + 1.0471975511966\u22c5\u2148\n\nIn [22]: res1.subs({x:3,a:1,b:1}).n()\nOut[22]: -1.65810483443802 + 1.5707963267949\u22c5\u2148\n\nIn [23]: Out[22]-Out[21], Out[20]-Out[19], Out[18]-Out[17]\nOut[23]: \n(-0.302299894039036 + 0.523598775598299\u22c5\u2148, -0.302299894039036 + 0.523598775598\n299\u22c5\u2148, -0.302299894039036 + 0.523598775598299\u22c5\u2148)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "and also",
  "id": "59639d14bc46472974d5f096",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-10T15:28:20.125Z",
  "text": "and also",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<pre><code class=\"python\">In [<span class=\"number\">25</span>]: <span class=\"keyword\">for</span> xv <span class=\"keyword\">in</span> range(<span class=\"number\">5</span>):\n    ...:     print((res1-res).subs({x:xv, a:<span class=\"number\">2</span>, b:-<span class=\"number\">1</span>}).n())\n    ...:     \nnan\n<span class=\"number\">0.190436999940386</span>\n<span class=\"number\">0.190436999940386</span>\n<span class=\"number\">0.190436999940386</span> - <span class=\"number\">1.38777878078145e-17</span>*I\n<span class=\"number\">0.190436999940386</span> + <span class=\"number\">2.77555756156289e-17</span>*I</code></pre>",
  "id": "59639d1af5b3458e303126e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-10T15:28:26.519Z",
  "text": "```python\nIn [25]: for xv in range(5):\n    ...:     print((res1-res).subs({x:xv, a:2, b:-1}).n())\n    ...:     \nnan\n0.190436999940386\n0.190436999940386\n0.190436999940386 - 1.38777878078145e-17*I\n0.190436999940386 + 2.77555756156289e-17*I\n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "They appear to be shifted by a constant factor",
  "id": "59639d264bcd78af569690b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-10T15:28:38.122Z",
  "text": "They appear to be shifted by a constant factor",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "which is OK, as the indefinite integral is defined up to a constant factor",
  "id": "59639d35bf7e6af22cc3ac33",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-10T15:28:53.545Z",
  "text": "which is OK, as the indefinite integral is defined up to a constant factor",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "if you try to experiment with the difference of the derivatives (call it <code>dres</code>):<pre><code class=\"python\">In [<span class=\"number\">4</span>]: dres.subs({x:<span class=\"number\">1</span>, a: <span class=\"number\">2</span>, b:<span class=\"number\">3</span>}).n()\nOut[<span class=\"number\">4</span>]: -<span class=\"number\">0.e-128</span> + <span class=\"number\">0.e-127</span>\u22c5\u2148\n\nIn [<span class=\"number\">5</span>]: dres.subs({x:<span class=\"number\">1</span>, a: <span class=\"number\">2</span>, b:<span class=\"number\">1</span>}).n()\nOut[<span class=\"number\">5</span>]: <span class=\"number\">0.e-129</span> + <span class=\"number\">0.e-131</span>\u22c5\u2148\n\nIn [<span class=\"number\">6</span>]: dres.subs({x:<span class=\"number\">2</span>, a: <span class=\"number\">2</span>, b:<span class=\"number\">1</span>}).n()\nOut[<span class=\"number\">6</span>]: -<span class=\"number\">0.e-127</span> - <span class=\"number\">0.e-129</span>\u22c5\u2148\n\nIn [<span class=\"number\">7</span>]: dres.subs({x:<span class=\"number\">2</span>, a: <span class=\"number\">2</span>, b:<span class=\"number\">1</span>}).n()\nOut[<span class=\"number\">7</span>]: -<span class=\"number\">0.e-127</span> - <span class=\"number\">0.e-129</span>\u22c5\u2148\n\nIn [<span class=\"number\">8</span>]: dres.subs({x:<span class=\"number\">2</span>, a: <span class=\"number\">1</span>, b:<span class=\"number\">1</span>}).n()\nOut[<span class=\"number\">8</span>]: <span class=\"number\">0.e-129</span> - <span class=\"number\">0.e-131</span>\u22c5\u2148\n\nIn [<span class=\"number\">9</span>]: dres.subs({x:<span class=\"number\">2</span>, a: <span class=\"number\">1</span>, b:-<span class=\"number\">1</span>}).n()\nOut[<span class=\"number\">9</span>]: <span class=\"number\">0.e-128</span> - <span class=\"number\">0.e-131</span>\u22c5\u2148</code></pre>",
  "id": "5963be19bf7e6af22cc452be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-10T17:49:13.701Z",
  "text": "if you try to experiment with the difference of the derivatives (call it `dres`):\n```python\nIn [4]: dres.subs({x:1, a: 2, b:3}).n()\nOut[4]: -0.e-128 + 0.e-127\u22c5\u2148\n\nIn [5]: dres.subs({x:1, a: 2, b:1}).n()\nOut[5]: 0.e-129 + 0.e-131\u22c5\u2148\n\nIn [6]: dres.subs({x:2, a: 2, b:1}).n()\nOut[6]: -0.e-127 - 0.e-129\u22c5\u2148\n\nIn [7]: dres.subs({x:2, a: 2, b:1}).n()\nOut[7]: -0.e-127 - 0.e-129\u22c5\u2148\n\nIn [8]: dres.subs({x:2, a: 1, b:1}).n()\nOut[8]: 0.e-129 - 0.e-131\u22c5\u2148\n\nIn [9]: dres.subs({x:2, a: 1, b:-1}).n()\nOut[9]: 0.e-128 - 0.e-131\u22c5\u2148\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "They look to be the same expression.",
  "id": "5963be2f329651f46e72e4d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-10T17:49:35.771Z",
  "text": "They look to be the same expression.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "<pre><code><span class=\"name\">GensymSubst</span>[<span class=\"atom\">u_</span>,<span class=\"atom\">x_Symbol</span>,<span class=\"atom\">alst_List</span>] :=\n  <span class=\"name\">If</span>[<span class=\"name\">AtomQ</span>[<span class=\"atom\">u</span>],\n    <span class=\"atom\">u</span>,\n  <span class=\"name\">If</span>[<span class=\"name\">IntegerPowerQ</span>[<span class=\"atom\">u</span>],\n    <span class=\"name\">GensymSubst</span>[<span class=\"atom\">u</span>[[<span class=\"number\">1</span>]],<span class=\"atom\">x</span>,<span class=\"atom\">alst</span>]^<span class=\"atom\">u</span>[[<span class=\"number\">2</span>]],\n  <span class=\"name\">If</span>[<span class=\"name\">ProductQ</span>[<span class=\"atom\">u</span>] || <span class=\"name\">SumQ</span>[<span class=\"atom\">u</span>],\n    <span class=\"name\">Map</span>[<span class=\"name\">Function</span>[<span class=\"name\">GensymSubst</span>[#,<span class=\"atom\">x</span>,<span class=\"atom\">alst</span>]],<span class=\"atom\">u</span>],\n  <span class=\"name\">If</span>[<span class=\"name\">FreeQ</span>[<span class=\"atom\">u</span>,<span class=\"atom\">x</span>],\n    <span class=\"name\">With</span>[{<span class=\"atom\">tmp</span>=<span class=\"name\">Select</span>[<span class=\"atom\">alst</span>,<span class=\"name\">Function</span>[#[[<span class=\"number\">2</span>]]===<span class=\"atom\">u</span>],<span class=\"number\">1</span>]},\n    <span class=\"name\">If</span>[<span class=\"atom\">tmp</span>==={},\n      <span class=\"atom\">u</span>,\n    <span class=\"atom\">tmp</span>[[<span class=\"number\">1</span>,<span class=\"number\">1</span>]]]],\n  <span class=\"atom\">u</span>]]]]</code></pre>Here, what does <code>Select[alst,Function[#[[2]]===u],1]</code> mean?<br>and if <code>tmp</code> is a <code>List</code>then what should <code>tmp[[1,1]]</code>be?",
  "id": "5963d98b2723db8d5ef96ee5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-10T19:46:19.671Z",
  "text": "```\nGensymSubst[u_,x_Symbol,alst_List] :=\n  If[AtomQ[u],\n    u,\n  If[IntegerPowerQ[u],\n    GensymSubst[u[[1]],x,alst]^u[[2]],\n  If[ProductQ[u] || SumQ[u],\n    Map[Function[GensymSubst[#,x,alst]],u],\n  If[FreeQ[u,x],\n    With[{tmp=Select[alst,Function[#[[2]]===u],1]},\n    If[tmp==={},\n      u,\n    tmp[[1,1]]]],\n  u]]]]\n\n```\nHere, what does `Select[alst,Function[#[[2]]===u],1]` mean?\nand if `tmp` is a `List`then what should `tmp[[1,1]]`be?\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<code>Select[alst,Function[#[[2]]===u],1]</code> this should return the first element in <code>alst</code> whose second argument is <code>u</code>",
  "id": "5963e221c101bc4e3a7021d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-10T20:22:57.208Z",
  "text": "`Select[alst,Function[#[[2]]===u],1]` this should return the first element in `alst` whose second argument is `u`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-07-10T20:24:12.909Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "In SymPy you could write something like:<pre><code class=\"python\"><span class=\"keyword\">for</span> a <span class=\"keyword\">in</span> alst:\n    <span class=\"keyword\">if</span> a.args[<span class=\"number\">1</span>] == u:\n        the result <span class=\"keyword\">is</span> ... a\n        <span class=\"keyword\">break</span></code></pre>",
  "id": "5963e23fbc46472974d73ee6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-10T20:23:27.283Z",
  "text": "In SymPy you could write something like:\n```python\nfor a in alst:\n    if a.args[1] == u:\n        the result is ... a\n        break\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<code>tmp[[1,1]]</code> accesses a list of list. It gets the first element, then accesses the first element of the first element",
  "id": "5963e3bb3230e14f3a46112f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-10T20:29:47.801Z",
  "text": "`tmp[[1,1]]` accesses a list of list. It gets the first element, then accesses the first element of the first element",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "remember that Mathematica has the same way to access lists and arguments.",
  "id": "5963e3cb3230e14f3a461171",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-10T20:30:03.511Z",
  "text": "remember that Mathematica has the same way to access lists and arguments.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "in SymPy you usually access a list by <code>a[0]</code>, while a generic tree expression object requires <code>a.args[0]</code>",
  "id": "5963e3f34bcd78af5697f150",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-10T20:30:43.760Z",
  "text": "in SymPy you usually access a list by `a[0]`, while a generic tree expression object requires `a.args[0]`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> , thanks.",
  "id": "59644e39bc46472974d8d632",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-11T04:04:09.005Z",
  "text": "@Upabjojr , thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "Got it. Thanks! ",
  "id": "596461bdbf7e6af22cc6da7f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-11T05:27:25.847Z",
  "text": "Got it. Thanks! ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "How to implement <code>CalculusQ()</code> and <code>HeldFormQ()</code>?<pre><code>CalculusQ[u_] :=\n  MemberQ[{D,Integrate,<span class=\"built_in\">Sum</span>,<span class=\"built_in\">Product</span>,<span class=\"built_in\">Int</span>,Dif,Subst},Head[u]]</code></pre><pre><code><span class=\"name\">HeldFormQ</span>[<span class=\"atom\">u_</span>] :=\n  <span class=\"name\">If</span>[<span class=\"name\">AtomQ</span>[<span class=\"name\">Head</span>[<span class=\"atom\">u</span>]],\n    <span class=\"name\">MemberQ</span>[{<span class=\"name\">Hold</span>,<span class=\"name\">HoldForm</span>,<span class=\"name\">Defer</span>,<span class=\"name\">Pattern</span>},<span class=\"name\">Head</span>[<span class=\"atom\">u</span>]],\n  <span class=\"name\">HeldFormQ</span>[<span class=\"name\">Head</span>[<span class=\"atom\">u</span>]]]</code></pre>",
  "id": "5964cbe33230e14f3a49be0b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-11T13:00:19.608Z",
  "text": "How to implement `CalculusQ()` and `HeldFormQ()`?\n```\nCalculusQ[u_] :=\n  MemberQ[{D,Integrate,Sum,Product,Int,Dif,Subst},Head[u]]\n```\n```\nHeldFormQ[u_] :=\n  If[AtomQ[Head[u]],\n    MemberQ[{Hold,HoldForm,Defer,Pattern},Head[u]],\n  HeldFormQ[Head[u]]]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> the expression simplifies if you call <code>hyperexpand</code> on it first ",
  "id": "5964d11342d2f610258751a4",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-11T13:22:27.795Z",
  "text": "@parsoyaarihant the expression simplifies if you call `hyperexpand` on it first ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span> <code>CalculusQ</code> appears to test whether the head of <code>u</code> is a member of that list of names",
  "id": "5964f8f3bc46472974dbd32d",
  "issues": [],
  "mentions": [
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-11T16:12:35.783Z",
  "text": "@Abdullahjavednesar `CalculusQ` appears to test whether the head of `u` is a member of that list of names",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I believe that it can be rendered with <code>isinstance(u, [Derivative, Integral, Sum, ...])</code> in Python",
  "id": "5964f916f5b3458e3037080c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-11T16:13:10.871Z",
  "text": "I believe that it can be rendered with `isinstance(u, [Derivative, Integral, Sum, ...])` in Python",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Hey guys, SymPy is now testing Python 3.6",
  "id": "5966762af5b3458e303dc6e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-12T19:19:06.568Z",
  "text": "Hey guys, SymPy is now testing Python 3.6",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "do you feel like starting merging your changes as a Python 3.6-only module?",
  "id": "5966763c4bcd78af56a34401",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-12T19:19:24.097Z",
  "text": "do you feel like starting merging your changes as a Python 3.6-only module?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-07-13T04:00:15.693Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "We will require to import MatchPy into SymPy first. We can start merging utility functions and sympy-matchpy converters.",
  "id": "5966f047c101bc4e3a7d30b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-13T04:00:07.694Z",
  "text": "We will require to import MatchPy into SymPy first. We can start merging utility functions and sympy-matchpy converters.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "OK, we should discuss on the forum about the dependency on MatchPy",
  "id": "5967721d89aea4761d94c269",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-13T13:14:05.528Z",
  "text": "OK, we should discuss on the forum about the dependency on MatchPy",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Maybe we could have a separate Travis test just for our module",
  "id": "59677259c101bc4e3a7f5171",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-13T13:15:05.856Z",
  "text": "Maybe we could have a separate Travis test just for our module",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<a href=\"https://groups.google.com/forum/m/#!topic/sympy/MyeWvJ8t7F8\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://groups.google.com/forum/m/#!topic/sympy/MyeWvJ8t7F8</a>",
  "id": "5967748d4bcd78af56a743ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-13T13:24:29.031Z",
  "text": "https://groups.google.com/forum/m/#!topic/sympy/MyeWvJ8t7F8",
  "unread": false,
  "urls": [
   {
    "url": "https://groups.google.com/forum/m/#!topic/sympy/MyeWvJ8t7F8"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> <span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span> Aaron is currently at a conference with Manuel, do you wish to ask <span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> to ask something to Manuel?",
  "id": "5967a67fbf7e6af22cd580d4",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   },
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   },
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-13T16:57:35.413Z",
  "text": "@parsoyaarihant @Abdullahjavednesar Aaron is currently at a conference with Manuel, do you wish to ask @asmeurer to ask something to Manuel?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I have replied on the mailing list. I think having optional arguments is also important in order to prevent adding thousands of new rules.",
  "id": "5967af1fc101bc4e3a809664",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-13T17:34:23.037Z",
  "text": "I have replied on the mailing list. I think having optional arguments is also important in order to prevent adding thousands of new rules.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wheerd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=60",
   "displayName": "Manuel Krebber",
   "gv": "4",
   "id": "57ef0193d73408ce4f2ae298",
   "url": "/wheerd",
   "username": "wheerd",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> I have not yet released a new version with the new integration features yet",
  "id": "596a29562723db8d5e133dc5",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-15T14:40:22.776Z",
  "text": "@parsoyaarihant I have not yet released a new version with the new integration features yet",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wheerd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=60",
   "displayName": "Manuel Krebber",
   "gv": "4",
   "id": "57ef0193d73408ce4f2ae298",
   "url": "/wheerd",
   "username": "wheerd",
   "v": 4
  },
  "html": "Here is a gist with what I am currently experimenting with: <a href=\"https://gist.github.com/wheerd/b57efd0dba2dbdba4bc10ff6e71cf5ab\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gist.github.com/wheerd/b57efd0dba2dbdba4bc10ff6e71cf5ab</a>",
  "id": "596a2a412723db8d5e1341ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-15T14:44:17.002Z",
  "text": "Here is a gist with what I am currently experimenting with: https://gist.github.com/wheerd/b57efd0dba2dbdba4bc10ff6e71cf5ab",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/wheerd/b57efd0dba2dbdba4bc10ff6e71cf5ab"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wheerd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=60",
   "displayName": "Manuel Krebber",
   "gv": "4",
   "id": "57ef0193d73408ce4f2ae298",
   "url": "/wheerd",
   "username": "wheerd",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> I just released version 0.4.1 that has those features as well as working optional wildcards with one_identity in in. There is also an abstract baseclass called OneIdentityOperation that you can use to register sympy operations.",
  "id": "596ad8b62723db8d5e1576db",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-16T03:08:38.632Z",
  "text": "@parsoyaarihant I just released version 0.4.1 that has those features as well as working optional wildcards with one_identity in in. There is also an abstract baseclass called OneIdentityOperation that you can use to register sympy operations.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-07-16T09:24:11.444Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"wheerd\" class=\"mention\">@wheerd</span>, I will try it out now and let you know.",
  "id": "596b30aa4bcd78af56b52840",
  "issues": [],
  "mentions": [
   {
    "screenName": "wheerd",
    "userId": "57ef0193d73408ce4f2ae298",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-16T09:23:54.207Z",
  "text": "Thanks @wheerd, I will try it out now and let you know.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wheerd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=60",
   "displayName": "Manuel Krebber",
   "gv": "4",
   "id": "57ef0193d73408ce4f2ae298",
   "url": "/wheerd",
   "username": "wheerd",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> I have been workin on some code generation for MatchPy. Some of the tests are still failing though. I will probably only get around to working on it on Thursday. But once that is finished you could try that out for the Rubi rules.",
  "id": "596cc05dbf7e6af22ce80f0d",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-17T13:49:17.157Z",
  "text": "@parsoyaarihant I have been workin on some code generation for MatchPy. Some of the tests are still failing though. I will probably only get around to working on it on Thursday. But once that is finished you could try that out for the Rubi rules.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"wheerd\" class=\"mention\">@wheerd</span> thanks. I think there is a bug in existing code. I have opened an issue <span data-link-type=\"issue\" data-issue=\"12\" data-issue-repo=\"HPAC/matchpy\" class=\"issue\">HPAC/matchpy#12</span>. ",
  "id": "596cd87976a757f8081c3c4c",
  "issues": [
   {
    "number": "12",
    "repo": "HPAC/matchpy"
   }
  ],
  "mentions": [
   {
    "screenName": "wheerd",
    "userId": "57ef0193d73408ce4f2ae298",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-17T15:32:09.464Z",
  "text": "@wheerd thanks. I think there is a bug in existing code. I have opened an issue [here](https://github.com/HPAC/matchpy/issues/12). ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "hi guys, what&#39;s the situation of the utility functions?",
  "id": "5973792fc101bc4e3aae2ece",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-22T16:11:27.163Z",
  "text": "hi guys, what's the situation of the utility functions?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I have almost completed my part (8-9 remaining). I am focusing on completing the test for algebriac rules for now since the incomplete functions are not being used in algebriac rules.",
  "id": "597382c24bcd78af56d6771b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-22T16:52:18.214Z",
  "text": "I have almost completed my part (8-9 remaining). I am focusing on completing the test for algebriac rules for now since the incomplete functions are not being used in algebriac rules.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "OK",
  "id": "59738393614889d475dd92a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-22T16:55:47.207Z",
  "text": "OK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "as a side part... remember to include the code generator into the PR",
  "id": "597383a13230e14f3a84636a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-22T16:56:01.519Z",
  "text": "as a side part... remember to include the code generator into the PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "so that we have every tool in SymPy",
  "id": "597383aac101bc4e3aae5387",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-22T16:56:10.638Z",
  "text": "so that we have every tool in SymPy",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Sure",
  "id": "5973865e3230e14f3a846c97",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-22T17:07:42.827Z",
  "text": "Sure",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "after the utility functions are finished, will we be able to import all other Rubi modules?",
  "id": "59738ace614889d475dda8d2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-22T17:26:38.224Z",
  "text": "after the utility functions are finished, will we be able to import all other Rubi modules?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "I have also completed my part just to add tests for the last set",
  "id": "59738b4b2723db8d5e382302",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-22T17:28:43.182Z",
  "text": "I have also completed my part just to add tests for the last set",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-07-22T19:16:59.029Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<code>after the utility functions are finished, will we be able to import all other Rubi modules?</code><br>Yes. For some utility functions we have used sympy functions like <code>trigsimp</code>, there can be some issues with that. Rest I should as expected. ",
  "id": "5973a49a89aea4761dc45cc1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-22T19:16:42.993Z",
  "text": "`after the utility functions are finished, will we be able to import all other Rubi modules?`\nYes. For some utility functions we have used sympy functions like `trigsimp`, there can be some issues with that. Rest I should as expected. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "There are some rules which use <code>Defer</code>:<pre><code class=\"mathematica\">Int[(a_.+c_.*x_^<span class=\"number\">2</span>)^p_*(d_.+e_.*x_+f_.*x_^<span class=\"number\">2</span>)^q_*(A_.+B_.*x_+C_.*x_^<span class=\"number\">2</span>),x_Symbol] :=\n  <span class=\"keyword\">Defer</span>[Int][(a+c*x^<span class=\"number\">2</span>)^p*(d+e*x+f*x^<span class=\"number\">2</span>)^q*(A+B*x+<span class=\"keyword\">C</span>*x^<span class=\"number\">2</span>),x] /;\n<span class=\"keyword\">FreeQ</span>[<span class=\"list\">{a,c,d,e,f,A,B,C,p,q}</span>,x]</code></pre>",
  "id": "5973a6234bcd78af56d6eecb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-22T19:23:15.054Z",
  "text": "There are some rules which use `Defer`:\n```mathematica\nInt[(a_.+c_.*x_^2)^p_*(d_.+e_.*x_+f_.*x_^2)^q_*(A_.+B_.*x_+C_.*x_^2),x_Symbol] :=\n  Defer[Int][(a+c*x^2)^p*(d+e*x+f*x^2)^q*(A+B*x+C*x^2),x] /;\nFreeQ[{a,c,d,e,f,A,B,C,p,q},x]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "The above rule returns the same expression. This means the expression could not be intgrated right?",
  "id": "5973a6aaf5b3458e30717d0c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-22T19:25:30.685Z",
  "text": "The above rule returns the same expression. This means the expression could not be intgrated right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<a href=\"http://reference.wolfram.com/language/ref/Defer.html.en\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://reference.wolfram.com/language/ref/Defer.html.en</a>",
  "id": "59777a95bc46472974247f01",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-25T17:06:29.567Z",
  "text": "http://reference.wolfram.com/language/ref/Defer.html.en",
  "unread": false,
  "urls": [
   {
    "url": "http://reference.wolfram.com/language/ref/Defer.html.en"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "it stops the evaluation apparently",
  "id": "59777aa9f5b3458e307fb62e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-25T17:06:49.141Z",
  "text": "it stops the evaluation apparently",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "(sorry for the late reply)",
  "id": "59777ab24bcd78af56e53727",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-25T17:06:58.422Z",
  "text": "(sorry for the late reply)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "We only have one month left, we need to make sure that all of RUBI is ported withing 2-3 weeks.",
  "id": "5980a66da7b406262d4cb319",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-01T16:03:57.136Z",
  "text": "We only have one month left, we need to make sure that all of RUBI is ported withing 2-3 weeks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would focus on Python 3.6 only, it is important that the code will be in a state easy to continue to work on",
  "id": "5980a6e6210ac2692044feca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-01T16:05:58.041Z",
  "text": "I would focus on Python 3.6 only, it is important that the code will be in a state easy to continue to work on",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Especially, if MatchPy will support code generation in the future, it would be nice to have  a code that can be easily switched to generate the expression tree.",
  "id": "5980a7162723db8d5e663479",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-01T16:06:46.834Z",
  "text": "Especially, if MatchPy will support code generation in the future, it would be nice to have  a code that can be easily switched to generate the expression tree.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<strong>What is important</strong>: extend the support as much as possible, make sure that the utility functions are properly tested (try to find any possible bug).",
  "id": "5980a73c2723db8d5e6634df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-01T16:07:24.485Z",
  "text": "**What is important**: extend the support as much as possible, make sure that the utility functions are properly tested (try to find any possible bug).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "The most important thing is to make sure the code gives the correct results, this is more important than compatibility.",
  "id": "5980a769bc46472974443d2e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-01T16:08:09.767Z",
  "text": "The most important thing is to make sure the code gives the correct results, this is more important than compatibility.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "It will be hard to find someone else to continue on your code, so make sure that the code is in a finished state.",
  "id": "5980a78d4bcd78af5604d8e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-01T16:08:45.076Z",
  "text": "It will be hard to find someone else to continue on your code, so make sure that the code is in a finished state.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wheerd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=60",
   "displayName": "Manuel Krebber",
   "gv": "4",
   "id": "57ef0193d73408ce4f2ae298",
   "url": "/wheerd",
   "username": "wheerd",
   "v": 4
  },
  "html": "The code generation is already working, but it still does not remove all dependencies on MatchPy. Specifically, the code for commutative matching is still needed as well as the <code>Substitution</code> class and the <code>multiset</code> dependency. I have not released a new version yet, but you can try it out from the master version. I can post an example gist tomorrow.",
  "id": "5980b674329651f46edfd38b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-01T17:12:20.970Z",
  "text": "The code generation is already working, but it still does not remove all dependencies on MatchPy. Specifically, the code for commutative matching is still needed as well as the `Substitution` class and the `multiset` dependency. I have not released a new version yet, but you can try it out from the master version. I can post an example gist tomorrow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"wheerd\" class=\"mention\">@wheerd</span> thanks a lot!",
  "id": "5980b953c101bc4e3adcb632",
  "issues": [],
  "mentions": [
   {
    "screenName": "wheerd",
    "userId": "57ef0193d73408ce4f2ae298",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-01T17:24:35.880Z",
  "text": "@wheerd thanks a lot!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wheerd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=60",
   "displayName": "Manuel Krebber",
   "gv": "4",
   "id": "57ef0193d73408ce4f2ae298",
   "url": "/wheerd",
   "username": "wheerd",
   "v": 4
  },
  "html": "Okay, here ist the promised gist: <a href=\"https://gist.github.com/wheerd/13ac5a0e9b560db6201d96136fa0bbcc\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gist.github.com/wheerd/13ac5a0e9b560db6201d96136fa0bbcc</a>",
  "id": "5981e6d9210ac2692049ad8b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-02T14:51:05.760Z",
  "text": "Okay, here ist the promised gist: https://gist.github.com/wheerd/13ac5a0e9b560db6201d96136fa0bbcc",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/wheerd/13ac5a0e9b560db6201d96136fa0bbcc"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wheerd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=60",
   "displayName": "Manuel Krebber",
   "gv": "4",
   "id": "57ef0193d73408ce4f2ae298",
   "url": "/wheerd",
   "username": "wheerd",
   "v": 4
  },
  "html": "I tried it with a single pattern and it works, but unfortunately executing the generated code for the full rubi pattern set crashes my Python interpreter.",
  "id": "5981e7144bcd78af5609943d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-02T14:52:04.401Z",
  "text": "I tried it with a single pattern and it works, but unfortunately executing the generated code for the full rubi pattern set crashes my Python interpreter.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I have encountered an issue while using SymPy with MatchPy: <a href=\"https://github.com/HPAC/matchpy/issues/13#issuecomment-319035302\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/HPAC/matchpy/issues/13#issuecomment-319035302</a>",
  "id": "5981ee172723db8d5e6b1845",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-02T15:21:59.646Z",
  "text": "I have encountered an issue while using SymPy with MatchPy: https://github.com/HPAC/matchpy/issues/13#issuecomment-319035302",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/HPAC/matchpy/issues/13#issuecomment-319035302"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wheerd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=60",
   "displayName": "Manuel Krebber",
   "gv": "4",
   "id": "57ef0193d73408ce4f2ae298",
   "url": "/wheerd",
   "username": "wheerd",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> See my reply to the issue",
  "id": "5981efa72723db8d5e6b1d68",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-02T15:28:39.956Z",
  "text": "@parsoyaarihant See my reply to the issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wheerd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=60",
   "displayName": "Manuel Krebber",
   "gv": "4",
   "id": "57ef0193d73408ce4f2ae298",
   "url": "/wheerd",
   "username": "wheerd",
   "v": 4
  },
  "html": "I don&#39;t really have time to dive deep into the problem with the code generation for the full set.",
  "id": "5981efd7bc46472974492665",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-02T15:29:27.305Z",
  "text": "I don't really have time to dive deep into the problem with the code generation for the full set.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay.",
  "id": "5981f64fc101bc4e3ae15aeb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-02T15:57:03.239Z",
  "text": "Okay.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> please focus on finishing porting the rules into SymPy and making sure that all integrals are correct.",
  "id": "5981f68af5b3458e30a4a364",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-02T15:58:02.669Z",
  "text": "@parsoyaarihant please focus on finishing porting the rules into SymPy and making sure that all integrals are correct.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "We first need to make sure that the integrals are correct, otherwise the code is useless.",
  "id": "5981f6b3329651f46ee487a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-02T15:58:43.087Z",
  "text": "We first need to make sure that the integrals are correct, otherwise the code is useless.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay.",
  "id": "5981f8a7210ac2692049febe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-02T16:07:03.321Z",
  "text": "Okay.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"wheerd\" class=\"mention\">@wheerd</span> , can you look into issue: <span data-link-type=\"issue\" data-issue=\"21\" data-issue-repo=\"HPAC/matchpy\" class=\"issue\">HPAC/matchpy#21</span>",
  "id": "5982008276a757f8086bb109",
  "issues": [
   {
    "number": "21",
    "repo": "HPAC/matchpy"
   }
  ],
  "mentions": [
   {
    "screenName": "wheerd",
    "userId": "57ef0193d73408ce4f2ae298",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-02T16:40:34.687Z",
  "text": "@wheerd , can you look into issue: https://github.com/HPAC/matchpy/issues/21?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wheerd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=60",
   "displayName": "Manuel Krebber",
   "gv": "4",
   "id": "57ef0193d73408ce4f2ae298",
   "url": "/wheerd",
   "username": "wheerd",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> Done",
  "id": "59822ef41c8697534a81da65",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-02T19:58:44.864Z",
  "text": "@parsoyaarihant Done",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> for the Appell F1 function, if you are trying to create it, please use a different branch",
  "id": "59823f73210ac269204b1ce2",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-02T21:09:07.111Z",
  "text": "@parsoyaarihant for the Appell F1 function, if you are trying to create it, please use a different branch",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "we can merge it immediately into master (as soon as it&#39;s ready)",
  "id": "59823f82210ac269204b1cf4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-02T21:09:22.689Z",
  "text": "we can merge it immediately into master (as soon as it's ready)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I&#39;d suggest <code>appellF1</code> or <code>appell_f1</code> as a name, SymPy tends to use lowercase for function names",
  "id": "59823fa1614889d47512b3db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-02T21:09:53.787Z",
  "text": "I'd suggest `appellF1` or `appell_f1` as a name, SymPy tends to use lowercase for function names",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "you should use appellf1, to match mpmath <a href=\"http://mpmath.org/doc/current/functions/hypergeometric.html?highlight=appell#mpmath.appellf1\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://mpmath.org/doc/current/functions/hypergeometric.html?highlight=appell#mpmath.appellf1</a>",
  "id": "59823fd151915d962af74039",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-02T21:10:41.453Z",
  "text": "you should use appellf1, to match mpmath http://mpmath.org/doc/current/functions/hypergeometric.html?highlight=appell#mpmath.appellf1",
  "unread": false,
  "urls": [
   {
    "url": "http://mpmath.org/doc/current/functions/hypergeometric.html?highlight=appell#mpmath.appellf1"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> , thanks, I will try to implement it by this weekend.",
  "id": "59833c66614889d475163db1",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-03T15:08:22.568Z",
  "text": "@asmeurer , thanks, I will try to implement it by this weekend.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wheerd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=60",
   "displayName": "Manuel Krebber",
   "gv": "4",
   "id": "57ef0193d73408ce4f2ae298",
   "url": "/wheerd",
   "username": "wheerd",
   "v": 4
  },
  "html": "Oh btw, the Python interpreter crashing seems to be only a problem on Windows. On Linux it works fine.",
  "id": "598379b51c8697534a86a201",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-03T19:29:57.695Z",
  "text": "Oh btw, the Python interpreter crashing seems to be only a problem on Windows. On Linux it works fine.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Alright",
  "id": "59837a4d614889d475173c52",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-03T19:32:29.106Z",
  "text": "Alright",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"wheerd\" class=\"mention\">@wheerd</span> , I have posted 2 new bugs I found: <span data-link-type=\"issue\" data-issue=\"24\" data-issue-repo=\"HPAC/matchpy\" class=\"issue\">HPAC/matchpy#24</span> and <span data-link-type=\"issue\" data-issue=\"23\" data-issue-repo=\"HPAC/matchpy\" class=\"issue\">HPAC/matchpy#23</span>",
  "id": "59837a744bcd78af560fa11e",
  "issues": [
   {
    "number": "24",
    "repo": "HPAC/matchpy"
   },
   {
    "number": "23",
    "repo": "HPAC/matchpy"
   }
  ],
  "mentions": [
   {
    "screenName": "wheerd",
    "userId": "57ef0193d73408ce4f2ae298",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-03T19:33:08.954Z",
  "text": "@wheerd , I have posted 2 new bugs I found: https://github.com/HPAC/matchpy/issues/24 and https://github.com/HPAC/matchpy/issues/23",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-03T19:34:52.888Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> , I have changed all the rules into SymPy format, I have removed sympy-matchpy converters and MatchPy operators. We don&#39;t have to define any new classes either.",
  "id": "59837aca4bcd78af560fa274",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-03T19:34:34.933Z",
  "text": "@Upabjojr , I have changed all the rules into SymPy format, I have removed sympy-matchpy converters and MatchPy operators. We don't have to define any new classes either.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "does MatchPy now support SymPy&#39;s expression trees?",
  "id": "59837b9a4bcd78af560fa502",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-03T19:38:02.528Z",
  "text": "does MatchPy now support SymPy's expression trees?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wheerd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=60",
   "displayName": "Manuel Krebber",
   "gv": "4",
   "id": "57ef0193d73408ce4f2ae298",
   "url": "/wheerd",
   "username": "wheerd",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> it should yes. I have not tested it extensively though. An there are some bugs that are caused by the changes.",
  "id": "59837bd245fc670746f15ed5",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-03T19:38:58.336Z",
  "text": "@Upabjojr it should yes. I have not tested it extensively though. An there are some bugs that are caused by the changes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "That&#39;s good news",
  "id": "59837be21c8697534a86a9f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-03T19:39:14.694Z",
  "text": "That's good news",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wheerd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=60",
   "displayName": "Manuel Krebber",
   "gv": "4",
   "id": "57ef0193d73408ce4f2ae298",
   "url": "/wheerd",
   "username": "wheerd",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> I fixed the two bugs. The rule from the second issue does not terminate though.",
  "id": "598382c01c8697534a86c65a",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-03T20:08:32.267Z",
  "text": "@parsoyaarihant I fixed the two bugs. The rule from the second issue does not terminate though.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"wheerd\" class=\"mention\">@wheerd</span> , thanks",
  "id": "5983e90fc101bc4e3ae8970b",
  "issues": [],
  "mentions": [
   {
    "screenName": "wheerd",
    "userId": "57ef0193d73408ce4f2ae298",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-04T03:25:03.792Z",
  "text": "@wheerd , thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span> , utility functions tests are not passing for <code>TrigToExp</code>, <code>ExpandTrigExpand</code>.",
  "id": "59855acaf5b3458e30b10326",
  "issues": [],
  "mentions": [
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-05T05:42:34.353Z",
  "text": "@Abdullahjavednesar , utility functions tests are not passing for `TrigToExp`, `ExpandTrigExpand`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Please fix them.",
  "id": "59855ad1329651f46ef0b3b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-05T05:42:41.625Z",
  "text": "Please fix them.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "update your branch before making changes.",
  "id": "59855affc101bc4e3aedb052",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-05T05:43:27.120Z",
  "text": "update your branch before making changes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<p>How does this rule work?:</p><pre><code class=\"mathematica\">Int[<span class=\"number\">1</span>/(a_+b_.*x_+c_.*x_^<span class=\"number\">2</span>),x_Symbol] :=\n  <span class=\"keyword\">With</span>[<span class=\"list\">{q=1-4*Simplify[a*c/b^2]}</span>,\n  -<span class=\"number\">2</span>/b*Subst[Int[<span class=\"number\">1</span>/(q-x^<span class=\"number\">2</span>),x],x,<span class=\"number\">1</span>+<span class=\"number\">2</span>*c*x/b] /;\n RationalQ[q] &amp;&amp; (EqQ[q^<span class=\"number\">2</span>,<span class=\"number\">1</span>] || <span class=\"keyword\">Not</span>[RationalQ[b^<span class=\"number\">2</span>-<span class=\"number\">4</span>*a*c]])] /;\n<span class=\"keyword\">FreeQ</span>[<span class=\"list\">{a,b,c}</span>,x] &amp;&amp; NonzeroQ[b^<span class=\"number\">2</span>-<span class=\"number\">4</span>*a*c]</code></pre><p>What happens when <code>RationalQ[q] &amp;&amp; (EqQ[q^2,1] || Not[RationalQ[b^2-4*a*c]])</code> condition is not satisfied?</p>",
  "id": "5985e4912723db8d5e7960a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-05T15:30:25.128Z",
  "text": "How does this rule work?:\n```mathematica\nInt[1/(a_+b_.*x_+c_.*x_^2),x_Symbol] :=\n  With[{q=1-4*Simplify[a*c/b^2]},\n  -2/b*Subst[Int[1/(q-x^2),x],x,1+2*c*x/b] /;\n RationalQ[q] && (EqQ[q^2,1] || Not[RationalQ[b^2-4*a*c]])] /;\nFreeQ[{a,b,c},x] && NonzeroQ[b^2-4*a*c]\n```\nWhat happens when `RationalQ[q] && (EqQ[q^2,1] || Not[RationalQ[b^2-4*a*c]])` condition is not satisfied?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I have made a simple experiment:",
  "id": "5985e9ae1c8697534a8ef1a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-05T15:52:14.568Z",
  "text": "I have made a simple experiment:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-05T15:52:49.835Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<pre><code><span class=\"name\">In</span>[<span class=\"number\">1</span>]:= <span class=\"atom\">f</span>[<span class=\"atom\">a_Integer</span>] := <span class=\"name\">With</span>[{<span class=\"atom\">q</span>=<span class=\"atom\">a</span>/<span class=\"number\">2</span>}, <span class=\"number\">14</span> /; <span class=\"name\">IntegerQ</span>[<span class=\"atom\">q</span>]]\n\n<span class=\"name\">In</span>[<span class=\"number\">2</span>]:= <span class=\"atom\">f</span>[<span class=\"number\">3</span>] \n\n<span class=\"name\">Out</span>[<span class=\"number\">2</span>]= <span class=\"atom\">f</span>[<span class=\"number\">3</span>]\n\n<span class=\"name\">In</span>[<span class=\"number\">3</span>]:= <span class=\"atom\">f</span>[<span class=\"number\">4</span>]  \n\n<span class=\"name\">Out</span>[<span class=\"number\">3</span>]= <span class=\"number\">14</span></code></pre>",
  "id": "5985e9b4210ac2692057f0f6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-05T15:52:20.139Z",
  "text": "```\nIn[1]:= f[a_Integer] := With[{q=a/2}, 14 /; IntegerQ[q]]\n\nIn[2]:= f[3] \n\nOut[2]= f[3]\n\nIn[3]:= f[4]  \n\nOut[3]= 14\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "It looks like the condition inside <code>With</code> gets passed to <code>f</code>",
  "id": "5985e9f9329651f46ef26647",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-05T15:53:29.109Z",
  "text": "It looks like the condition inside `With` gets passed to `f`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "So, basically, it appears that <code>/;</code> can be put in various locations, but the condition will be tested at the <code>Int</code> level.",
  "id": "5985ea2376a757f8087953cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-05T15:54:11.696Z",
  "text": "So, basically, it appears that `/;` can be put in various locations, but the condition will be tested at the `Int` level.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay",
  "id": "5985ea42210ac2692057f2fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-05T15:54:42.016Z",
  "text": "Okay",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would say that if the condition <code>RationalQ[q] &amp;&amp; (EqQ[q^2,1] || Not[RationalQ[b^2-4*a*c]])</code> is not met, it will simply not match that rule",
  "id": "5985ea64f5b3458e30b2aa4e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-05T15:55:16.602Z",
  "text": "I would say that if the condition `RationalQ[q] && (EqQ[q^2,1] || Not[RationalQ[b^2-4*a*c]])` is not met, it will simply not match that rule",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-05T15:57:49.340Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<p>Okay, so the modified rule would be:</p><pre><code class=\"mathematica\">Int[<span class=\"number\">1</span>/(a_+b_.*x_+c_.*x_^<span class=\"number\">2</span>),x_Symbol] :=\n  <span class=\"keyword\">With</span>[<span class=\"list\">{q=1-4*Simplify[a*c/b^2]}</span>,\n  -<span class=\"number\">2</span>/b*Subst[Int[<span class=\"number\">1</span>/(q-x^<span class=\"number\">2</span>),x],x,<span class=\"number\">1</span>+<span class=\"number\">2</span>*c*x/b] ] /;\n<span class=\"keyword\">FreeQ</span>[<span class=\"list\">{a,b,c}</span>,x] &amp;&amp; NonzeroQ[b^<span class=\"number\">2</span>-<span class=\"number\">4</span>*a*c] &amp;&amp; ( RationalQ[q] &amp;&amp; (EqQ[q^<span class=\"number\">2</span>,<span class=\"number\">1</span>] || <span class=\"keyword\">Not</span>[RationalQ[b^<span class=\"number\">2</span>-<span class=\"number\">4</span>*a*c]]))</code></pre><p>where <code>q = 1-4*Simplify[a*c/b^2]</code></p>",
  "id": "5985eaedbc46472974575092",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-05T15:57:33.208Z",
  "text": "Okay, so the modified rule would be:\n```mathematica\nInt[1/(a_+b_.*x_+c_.*x_^2),x_Symbol] :=\n  With[{q=1-4*Simplify[a*c/b^2]},\n  -2/b*Subst[Int[1/(q-x^2),x],x,1+2*c*x/b] ] /;\nFreeQ[{a,b,c},x] && NonzeroQ[b^2-4*a*c] && ( RationalQ[q] && (EqQ[q^2,1] || Not[RationalQ[b^2-4*a*c]])) \n```\nwhere `q = 1-4*Simplify[a*c/b^2]`\n",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I think so",
  "id": "5985eb10210ac2692057f60c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-05T15:58:08.447Z",
  "text": "I think so",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Travis test is stopping the test for test suit because it doesn&#39;t return anything till 10 minutes. How long can Travis run the test suit after adding <code>@slow</code> function decorator?",
  "id": "5985ff6ec101bc4e3aef9cca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-05T17:25:02.620Z",
  "text": "Travis test is stopping the test for test suit because it doesn't return anything till 10 minutes. How long can Travis run the test suit after adding `@slow` function decorator?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "okay I&#39;ll fix them soon",
  "id": "59861011210ac26920586c0b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-05T18:36:01.043Z",
  "text": "okay I'll fix them soon",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> I suggest to add to Travis only some sample tests",
  "id": "598643922723db8d5e7a82dd",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-05T22:15:46.410Z",
  "text": "@parsoyaarihant I suggest to add to Travis only some sample tests",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the rest of the tests should be kept separated",
  "id": "598643ab45fc670746fa9c7f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-05T22:16:11.899Z",
  "text": "the rest of the tests should be kept separated",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "we shouldn&#39;t slow down Travis too much",
  "id": "598643bbbc464729745869fd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-05T22:16:27.749Z",
  "text": "we shouldn't slow down Travis too much",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "You can skip really slow tests on Travis. ",
  "id": "5986539142d2f61025889de7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-05T23:24:01.993Z",
  "text": "You can skip really slow tests on Travis. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Search for <code>ON_TRAVIS</code> in the code ",
  "id": "598653a797cedeb0482778f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-05T23:24:23.629Z",
  "text": "Search for `ON_TRAVIS` in the code ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<p>While integrating <code>( a + b*x)^n * (c + d*x)^m</code>, the same rule gets matched everytime:</p><pre><code class=\"mathematica\">Int[(a_+b_.*x_)^m_*(c_+d_.*x_)^n_,x_Symbol] :=\n  (c+d*x)^FracPart[n]/((b/(b*c-a*d))^IntPart[n]*(b*(c+d*x)/(b*c-a*d))^FracPart[n])*\n    Int[(a+b*x)^m*(b*c/(b*c-a*d)+b*d*x/(b*c-a*d))^n,x] /;\n<span class=\"keyword\">FreeQ</span>[<span class=\"list\">{a,b,c,d,m,n}</span>,x] &amp;&amp; NonzeroQ[b*c-a*d] &amp;&amp; <span class=\"keyword\">Not</span>[<span class=\"keyword\">IntegerQ</span>[m]] &amp;&amp; <span class=\"keyword\">Not</span>[<span class=\"keyword\">IntegerQ</span>[n]] &amp;&amp; (RationalQ[m] || <span class=\"keyword\">Not</span>[SimplerQ[n+<span class=\"number\">1</span>,m+<span class=\"number\">1</span>]])</code></pre><p>But while running in mathematica, the same rule is not selected again even when the condition of the above rule is satisfied:</p>",
  "id": "598695d3210ac2692059bf46",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-06T04:06:43.877Z",
  "text": "While integrating `( a + b*x)^n * (c + d*x)^m`, the same rule gets matched everytime:\n```mathematica\nInt[(a_+b_.*x_)^m_*(c_+d_.*x_)^n_,x_Symbol] :=\n  (c+d*x)^FracPart[n]/((b/(b*c-a*d))^IntPart[n]*(b*(c+d*x)/(b*c-a*d))^FracPart[n])*\n    Int[(a+b*x)^m*(b*c/(b*c-a*d)+b*d*x/(b*c-a*d))^n,x] /;\nFreeQ[{a,b,c,d,m,n},x] && NonzeroQ[b*c-a*d] && Not[IntegerQ[m]] && Not[IntegerQ[n]] && (RationalQ[m] || Not[SimplerQ[n+1,m+1]])\n```\n\nBut while running in mathematica, the same rule is not selected again even when the condition of the above rule is satisfied:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<a href=\"https://files.gitter.im/sympy/Rubi-GSoC17/Z6On/Screen-Shot-2017-08-06-at-09.04.31.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/sympy/Rubi-GSoC17/Z6On/thumb/Screen-Shot-2017-08-06-at-09.04.31.png\" alt=\"Screen Shot 2017-08-06 at 09.04.31.png\" rel=\"nofollow\"></a>",
  "id": "598695e9ee5c9a4c5f94e8ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-06T04:07:05.118Z",
  "text": "[![Screen Shot 2017-08-06 at 09.04.31.png](https://files.gitter.im/sympy/Rubi-GSoC17/Z6On/thumb/Screen-Shot-2017-08-06-at-09.04.31.png)](https://files.gitter.im/sympy/Rubi-GSoC17/Z6On/Screen-Shot-2017-08-06-at-09.04.31.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/sympy/Rubi-GSoC17/Z6On/thumb/Screen-Shot-2017-08-06-at-09.04.31.png"
   },
   {
    "url": "https://files.gitter.im/sympy/Rubi-GSoC17/Z6On/Screen-Shot-2017-08-06-at-09.04.31.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> in the PNG you posted, I see the output of two different rules",
  "id": "59874fd9a7b406262d637f7f",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-06T17:20:25.983Z",
  "text": "@parsoyaarihant in the PNG you posted, I see the output of two different rules",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "could it be that there is one other rule that has the precedence in Mathematica?",
  "id": "59874febbc464729745b46b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-06T17:20:43.482Z",
  "text": "could it be that there is one other rule that has the precedence in Mathematica?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I mean... maybe MatchPy is shuffling the rule order in a different way than Mathematica?",
  "id": "5987502a4bcd78af561bc83d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-06T17:21:46.775Z",
  "text": "I mean... maybe MatchPy is shuffling the rule order in a different way than Mathematica?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Yes, mathematica is not chosing the first rule again. Whereas MatchPy is applying the same rule again and again.",
  "id": "59875e762723db8d5e7d87c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-06T18:22:46.049Z",
  "text": "Yes, mathematica is not chosing the first rule again. Whereas MatchPy is applying the same rule again and again.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "a possible stopgap solution: add a dispatcher inside the rule",
  "id": "59875f241c8697534a930a43",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-06T18:25:40.605Z",
  "text": "a possible stopgap solution: add a dispatcher inside the rule",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "that is, Rule 89 should check if the expression also matches Rule 88, in such case call Rule 88",
  "id": "59875f4abc464729745b7716",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-06T18:26:18.058Z",
  "text": "that is, Rule 89 should check if the expression also matches Rule 88, in such case call Rule 88",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "otherwise modify Rule 89 in order not to match the simplified form of Rule 88",
  "id": "59875f6b2723db8d5e7d8c58",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-06T18:26:51.215Z",
  "text": "otherwise modify Rule 89 in order not to match the simplified form of Rule 88",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay",
  "id": "5987640a76a757f8087d8ed9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-06T18:46:34.044Z",
  "text": "Okay",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-06T19:00:08.146Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"wheerd\" class=\"mention\">@wheerd</span> , can you release latest version of MatchPy? Travis test are still using old version of MatchPy.",
  "id": "5987672d4bcd78af561c0f9c",
  "issues": [],
  "mentions": [
   {
    "screenName": "wheerd",
    "userId": "57ef0193d73408ce4f2ae298",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-06T18:59:57.448Z",
  "text": "@wheerd , can you release latest version of MatchPy? Travis test are still using old version of MatchPy.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wheerd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=60",
   "displayName": "Manuel Krebber",
   "gv": "4",
   "id": "57ef0193d73408ce4f2ae298",
   "url": "/wheerd",
   "username": "wheerd",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> Done.",
  "id": "5987877cc101bc4e3af3f120",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-06T21:17:48.080Z",
  "text": "@parsoyaarihant Done.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wheerd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=60",
   "displayName": "Manuel Krebber",
   "gv": "4",
   "id": "57ef0193d73408ce4f2ae298",
   "url": "/wheerd",
   "username": "wheerd",
   "v": 4
  },
  "html": "And yes, the order in which rules are applied is not really deterministic. If you need a specific order between certain rules you could use multiple matchers.",
  "id": "598787c745fc670746fe294d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-06T21:19:03.925Z",
  "text": "And yes, the order in which rules are applied is not really deterministic. If you need a specific order between certain rules you could use multiple matchers.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"wheerd\" class=\"mention\">@wheerd</span> , thanks",
  "id": "5989c4e8bc464729746427a0",
  "issues": [],
  "mentions": [
   {
    "screenName": "wheerd",
    "userId": "57ef0193d73408ce4f2ae298",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-08T14:04:24.271Z",
  "text": "@wheerd , thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I&#39;ve noticed that you  are using <code>S(&#39;1&#39;)</code> convention in the rules list",
  "id": "598ca0e5bc464729746f8df6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:07:33.753Z",
  "text": "I've noticed that you  are using `S('1')` convention in the rules list",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I think the string is futile for integers",
  "id": "598ca0f1a7b406262d77c76f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:07:45.043Z",
  "text": "I think the string is futile for integers",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "you can pass the integer directly ",
  "id": "598ca0faee5c9a4c5fab52d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:07:54.964Z",
  "text": "you can pass the integer directly ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<code>S(1)</code>",
  "id": "598ca0fdbc464729746f8e39",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:07:57.911Z",
  "text": "`S(1)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<code>S(1) == S(&#39;1&#39;)</code>",
  "id": "598ca1102723db8d5e913fa8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:08:16.779Z",
  "text": "`S(1) == S('1')`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "We also need to take care for some differences between SymPy and Mathematica:<pre><code>In [<span class=\"number\">24</span>]: <span class=\"function\"><span class=\"title\">rubi_integrate</span><span class=\"params\">(x**n, x)</span></span>\nOut[<span class=\"number\">24</span>]: \n n + <span class=\"number\">1</span>\nx     \n\u2500\u2500\u2500\u2500\u2500\u2500\nn + <span class=\"number\">1</span> \n\nIn [<span class=\"number\">25</span>]: <span class=\"function\"><span class=\"title\">integrate</span><span class=\"params\">(x**n, x)</span></span>\nOut[<span class=\"number\">25</span>]: \n\u23a7<span class=\"function\"><span class=\"title\">log</span><span class=\"params\">(x)</span></span>  <span class=\"keyword\">for</span> n = -<span class=\"number\">1</span>\n\u23aa                  \n\u23aa n + <span class=\"number\">1</span>            \n\u23a8x                 \n\u23aa\u2500\u2500\u2500\u2500\u2500\u2500  otherwise \n\u23aan + <span class=\"number\">1</span>             \n\u23a9</code></pre>",
  "id": "598ca5a0ee5c9a4c5fab6731",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:27:44.720Z",
  "text": "We also need to take care for some differences between SymPy and Mathematica:\n```\nIn [24]: rubi_integrate(x**n, x)\nOut[24]: \n n + 1\nx     \n\u2500\u2500\u2500\u2500\u2500\u2500\nn + 1 \n\nIn [25]: integrate(x**n, x)\nOut[25]: \n\u23a7log(x)  for n = -1\n\u23aa                  \n\u23aa n + 1            \n\u23a8x                 \n\u23aa\u2500\u2500\u2500\u2500\u2500\u2500  otherwise \n\u23aan + 1             \n\u23a9 \n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "(consider this issue a very low priority one)",
  "id": "598ca5c4329651f46e0a6127",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:28:20.934Z",
  "text": "(consider this issue a very low priority one)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "isn&#39;t this sort of thing already embedded in the rules in the form of the conditions? ",
  "id": "598ca9d381cd9a5d7e9c5683",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:45:39.107Z",
  "text": "isn't this sort of thing already embedded in the rules in the form of the conditions? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "this is why I have said from the start that sympy should translate the rubi conditions into piecewise ",
  "id": "598ca9e781cd9a5d7e9c5685",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:45:59.846Z",
  "text": "this is why I have said from the start that sympy should translate the rubi conditions into piecewise ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Mathematica does not use <code>Piecewise</code> that often",
  "id": "598caa31a7b406262d77f013",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:47:13.025Z",
  "text": "Mathematica does not use `Piecewise` that often",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "it implicitly gives the most common form",
  "id": "598caa494bcd78af56302a52",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:47:37.213Z",
  "text": "it implicitly gives the most common form",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "that&#39;s a weakness",
  "id": "598caa4d80d90ca024e8aa02",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:47:41.185Z",
  "text": "that's a weakness",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "anyway, I don&#39;t see this as a problem",
  "id": "598caa5dbc464729746fb719",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:47:57.368Z",
  "text": "anyway, I don't see this as a problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "when we will connect <code>integrate</code> with <code>rubi_integrate</code>, it is likely that <code>rubi_integrate</code> will not be the first algorithm choice",
  "id": "598caa82329651f46e0a736e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:48:34.081Z",
  "text": "when we will connect `integrate` with `rubi_integrate`, it is likely that `rubi_integrate` will not be the first algorithm choice",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "it depends on where we end up placing rubi in the full <code>integrate</code> algorithm ",
  "id": "598caa8751915d962af7ae0e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:48:39.351Z",
  "text": "it depends on where we end up placing rubi in the full `integrate` algorithm ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "which itself depends on how fast it is, mainly ",
  "id": "598caa940cef4fed2eb8f3d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:48:52.481Z",
  "text": "which itself depends on how fast it is, mainly ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I see",
  "id": "598caa99ee5c9a4c5fab7a3b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:48:57.432Z",
  "text": "I see",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "if it is earlier, it would lead to regressions since integrate would stop giving the piecewise for any integral that rubi solves ",
  "id": "598caaad97cedeb04827b8ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:49:17.331Z",
  "text": "if it is earlier, it would lead to regressions since integrate would stop giving the piecewise for any integral that rubi solves ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the rules may be adjusted",
  "id": "598caadfa7b406262d77f490",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:50:07.107Z",
  "text": "the rules may be adjusted",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "OTOH if we put it later, like just before heurisch, it will be less of an issue ",
  "id": "598caae851915d962af7ae11",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:50:16.656Z",
  "text": "OTOH if we put it later, like just before heurisch, it will be less of an issue ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the priority now is to finish importing the rules",
  "id": "598cab02a7b406262d77f509",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:50:42.726Z",
  "text": "the priority now is to finish importing the rules",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "there are still lots of rules that need to be imported",
  "id": "598cab12bc464729746fbaf0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:50:58.963Z",
  "text": "there are still lots of rules that need to be imported",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "then there&#39;s the issue of the bugs in the utility functions",
  "id": "598cab1e4bcd78af56302e03",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:51:10.862Z",
  "text": "then there's the issue of the bugs in the utility functions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "how is the performance so far? Do you think it will end up being faster or slower than the existing algorithms? ",
  "id": "598cab3519147ac323154853",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:51:33.096Z",
  "text": "how is the performance so far? Do you think it will end up being faster or slower than the existing algorithms? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "it takes a lot of time to load the rules, but once the rules are loaded, it looks pretty fast",
  "id": "598cab58329651f46e0a7808",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:52:08.294Z",
  "text": "it takes a lot of time to load the rules, but once the rules are loaded, it looks pretty fast",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "if we add the code generation, it should be quite fast (hopefully!)",
  "id": "598cab66614889d47537b9f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:52:22.673Z",
  "text": "if we add the code generation, it should be quite fast (hopefully!)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "if we can call it before meijerg, at least for indefinite integrals, that would be great ",
  "id": "598cabb281cd9a5d7e9c569d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:53:38.697Z",
  "text": "if we can call it before meijerg, at least for indefinite integrals, that would be great ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "then we don&#39;t have to worry about meijerg giving a G-function that it doesn&#39;t know how to simplify but Rubi does ",
  "id": "598cabc819147ac323154855",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:54:00.330Z",
  "text": "then we don't have to worry about meijerg giving a G-function that it doesn't know how to simplify but Rubi does ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I haven&#39;t tried code generation of all the rules, but Manuel has warned that the file size would turn out to be very large.",
  "id": "598cabd7210ac269206ffa9d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:54:15.761Z",
  "text": "I haven't tried code generation of all the rules, but Manuel has warned that the file size would turn out to be very large.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> I see, I would suggest to just prepare the code generation tools",
  "id": "598cac131c8697534aa75c5a",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:55:15.856Z",
  "text": "@parsoyaarihant I see, I would suggest to just prepare the code generation tools",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I can try it after the GSoC is finished if there isn&#39;t enough time",
  "id": "598cac2ea7b406262d77faa3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:55:42.093Z",
  "text": "I can try it after the GSoC is finished if there isn't enough time",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "one concern is about bugs in MatchPy, if the generated rules are wrong",
  "id": "598cac8780d90ca024e8b2a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T18:57:11.785Z",
  "text": "one concern is about bugs in MatchPy, if the generated rules are wrong",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay, Manuel shared gist for code generation: <a href=\"https://gist.github.com/wheerd/13ac5a0e9b560db6201d96136fa0bbcc\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gist.github.com/wheerd/13ac5a0e9b560db6201d96136fa0bbcc</a> . This code require some changes since I have changed the structure of Rubi significantly by adding support for SymPy symbols in MatchPy.",
  "id": "598cb4cb4bcd78af56305675",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T19:32:27.334Z",
  "text": "Okay, Manuel shared gist for code generation: https://gist.github.com/wheerd/13ac5a0e9b560db6201d96136fa0bbcc . This code require some changes since I have changed the structure of Rubi significantly by adding support for SymPy symbols in MatchPy.\n",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/wheerd/13ac5a0e9b560db6201d96136fa0bbcc"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I think Manuel has added test for code generation in MatchPy repository. So, it is very less likely that the generated rules will be wrong. Anyway, I will generate code for small set of rules and verify before generating code for all the rules.",
  "id": "598cb56ac101bc4e3a0783ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T19:35:06.146Z",
  "text": "I think Manuel has added test for code generation in MatchPy repository. So, it is very less likely that the generated rules will be wrong. Anyway, I will generate code for small set of rules and verify before generating code for all the rules.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "OK, the code generation is needed to support versions of Python other than 3.6. If I understand correctly, there are still some 3.6 dependencies, but they should be easier to port to backward compatibility",
  "id": "598cbf41ee5c9a4c5fabd011",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T20:17:05.403Z",
  "text": "OK, the code generation is needed to support versions of Python other than 3.6. If I understand correctly, there are still some 3.6 dependencies, but they should be easier to port to backward compatibility",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> how long will it take before we have all rules in Python?",
  "id": "598ccf62bc464729747052e4",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-10T21:25:54.902Z",
  "text": "@parsoyaarihant how long will it take before we have all rules in Python?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> , I can add all the rules now, but it will take very long time to load. So, I am only adding the rules which I am testing.",
  "id": "598d4be8ee5c9a4c5fadaaf1",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-11T06:17:12.564Z",
  "text": "@Upabjojr , I can add all the rules now, but it will take very long time to load. So, I am only adding the rules which I am testing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-11T06:18:29.552Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Its very hard to test and debug bugs when it takes longer time to load locally.",
  "id": "598d4c2d4bcd78af563263c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-11T06:18:21.144Z",
  "text": "Its very hard to test and debug bugs when it takes longer time to load locally.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I can add all the rules now if you want.",
  "id": "598d61372723db8d5e93e08f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-11T07:48:07.174Z",
  "text": "I can add all the rules now if you want.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Can you keep then divided by groups?",
  "id": "598dbd4aee5c9a4c5faf5f42",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-11T14:20:58.696Z",
  "text": "Can you keep then divided by groups?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "That is, so that one can decide which group of rules to load?",
  "id": "598dbd6176a757f80895992b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-11T14:21:21.985Z",
  "text": "That is, so that one can decide which group of rules to load?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Yes, but it will not always work out correctly, since we may require rules from multiple modules during integration. Algebriac rules are needed in almost all integrations. Maybe I can divide remaining rules(other than algebriac) when loading.",
  "id": "598dd0732723db8d5e95a5f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-11T15:42:43.737Z",
  "text": "Yes, but it will not always work out correctly, since we may require rules from multiple modules during integration. Algebriac rules are needed in almost all integrations. Maybe I can divide remaining rules(other than algebriac) when loading.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Rubi has different files containing the rules",
  "id": "598dd0dd1c8697534aaba56b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-11T15:44:29.503Z",
  "text": "Rubi has different files containing the rules",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "can you keep that subdivision?",
  "id": "598dd0e4bc4647297474173b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-11T15:44:36.839Z",
  "text": "can you keep that subdivision?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<code>rubi_object()</code> has to be loaded outside <code>rubi_integrate()</code>, otherwise the rules will be loaded everytime.",
  "id": "598fe2fd2723db8d5e9bd257",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-13T05:26:21.695Z",
  "text": "`rubi_object()` has to be loaded outside `rubi_integrate()`, otherwise the rules will be loaded everytime.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "If we make subdivisions, then <code>rubi_object</code> will be loaded inside <code>rubi_integrate()</code>.",
  "id": "598fe3292723db8d5e9bd2ff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-13T05:27:05.411Z",
  "text": "If we make subdivisions, then `rubi_object` will be loaded inside `rubi_integrate()`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "What about some sub functions for the rule loading? So we can just comment the function call if we need to",
  "id": "59905c4c614889d47543b8d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-13T14:03:56.849Z",
  "text": "What about some sub functions for the rule loading? So we can just comment the function call if we need to",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Speed up the loading process",
  "id": "59905c694bcd78af563c42fb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-13T14:04:25.894Z",
  "text": "Speed up the loading process",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "We can do that.",
  "id": "599068ebbc464729747c0f25",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-13T14:57:47.400Z",
  "text": "We can do that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "thanks",
  "id": "59909a91a7b406262d84e84a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-13T18:29:37.662Z",
  "text": "thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I was considering the current rules",
  "id": "59947bca76a757f808af1657",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T17:07:22.596Z",
  "text": "I was considering the current rules",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "there are lots of <code>Mul</code>, <code>Add</code>, and <code>Pow</code> calls. Can you replace that with the proper operators <code>*</code>, <code>+</code>, <code>**</code>?",
  "id": "59947bf5578b44a046b6a258",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T17:08:05.428Z",
  "text": "there are lots of `Mul`, `Add`, and `Pow` calls. Can you replace that with the proper operators `*`, `+`, `**`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "it would make the code much more readable",
  "id": "59947c01a7b406262d9594d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T17:08:17.354Z",
  "text": "it would make the code much more readable",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "especially if we plan to make some adaptations in the future",
  "id": "59947c0d2723db8d5eae3e66",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T17:08:29.773Z",
  "text": "especially if we plan to make some adaptations in the future",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<p><strong>Point 2:</strong> I have written a function to get the position of the matching rule:</p><pre><code class=\"python\"><span class=\"keyword\">import</span> inspect\n<span class=\"keyword\">from</span> sympy.integrals.rubi <span class=\"keyword\">import</span> *\n\nmatcher = rubi.rubi.matcher\n\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_matching_rule_definition</span><span class=\"params\">(expr)</span>:</span>\n    miter = matcher.match(expr)\n    <span class=\"keyword\">for</span> fun, e <span class=\"keyword\">in</span> miter:\n        print(<span class=\"string\">\"Rule matching: \"</span>)\n        print(inspect.getsourcefile(fun))\n        code, lineno = inspect.getsourcelines(fun)\n        print(<span class=\"string\">\"On line: \"</span>, lineno)\n        print(<span class=\"string\">\"\\n\"</span>.join(code))\n        print()</code></pre><p>It can help for the maintenance of existing rules.</p>",
  "id": "59947d85bc464729748d6eb8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T17:14:45.516Z",
  "text": "**Point 2:** I have written a function to get the position of the matching rule:\n```python\nimport inspect\nfrom sympy.integrals.rubi import *\n\nmatcher = rubi.rubi.matcher\n\ndef get_matching_rule_definition(expr):\n    miter = matcher.match(expr)\n    for fun, e in miter:\n        print(\"Rule matching: \")\n        print(inspect.getsourcefile(fun))\n        code, lineno = inspect.getsourcelines(fun)\n        print(\"On line: \", lineno)\n        print(\"\\n\".join(code))\n        print()\n```\n\nIt can help for the maintenance of existing rules.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<strong>Point 3</strong>: can you make sure that all the tools that you&#39;re using to generate the rules are included in the PR?",
  "id": "5994806280d90ca024061d2b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T17:26:58.113Z",
  "text": "**Point 3**: can you make sure that all the tools that you're using to generate the rules are included in the PR?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Maybe you can create a subdir, such as <code>sympy/integrals/rubi/codetools/</code>",
  "id": "59948089162adb6d2e00e34b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T17:27:37.502Z",
  "text": "Maybe you can create a subdir, such as `sympy/integrals/rubi/codetools/`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "(or any better name)",
  "id": "59948098578b44a046b6bab9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T17:27:52.583Z",
  "text": "(or any better name)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "and put all tools needed to generate the current set of rules there",
  "id": "599480ab578b44a046b6bb13",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T17:28:11.388Z",
  "text": "and put all tools needed to generate the current set of rules there",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<strong>Point 1</strong>: concerning the expressions, I would simply check if Python&#39;s <code>str</code> or <code>repr</code> work to generate the simpler code:<pre><code class=\"python\">In [<span class=\"number\">77</span>]: expr = Mul(Pow(a, p), x)\n\nIn [<span class=\"number\">78</span>]: expr\nOut[<span class=\"number\">78</span>]: \n p  \na \u22c5x\n\nIn [<span class=\"number\">79</span>]: str(expr)\nOut[<span class=\"number\">79</span>]: <span class=\"string\">'a**p*x'</span></code></pre>",
  "id": "59948cfcc101bc4e3a24f531",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T18:20:44.501Z",
  "text": "**Point 1**: concerning the expressions, I would simply check if Python's `str` or `repr` work to generate the simpler code:\n```python\nIn [77]: expr = Mul(Pow(a, p), x)\n\nIn [78]: expr\nOut[78]: \n p  \na \u22c5x\n\nIn [79]: str(expr)\nOut[79]: 'a**p*x'\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Point 2: <span data-link-type=\"mention\" data-screen-name=\"wheerd\" class=\"mention\">@wheerd</span>  was also working on it: <span data-link-type=\"issue\" data-issue=\"10\" data-issue-repo=\"HPAC/matchpy\" class=\"issue\">HPAC/matchpy#10</span>",
  "id": "599498ada7b406262d9626dd",
  "issues": [
   {
    "number": "10",
    "repo": "HPAC/matchpy"
   }
  ],
  "mentions": [
   {
    "screenName": "wheerd",
    "userId": "57ef0193d73408ce4f2ae298",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T19:10:37.474Z",
  "text": "Point 2: @wheerd  was also working on it: https://github.com/HPAC/matchpy/issues/10",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "did <span data-link-type=\"mention\" data-screen-name=\"wheerd\" class=\"mention\">@wheerd</span> complete it? My function is a simple solution that suits our case",
  "id": "5994992bee5c9a4c5fc981ef",
  "issues": [],
  "mentions": [
   {
    "screenName": "wheerd",
    "userId": "57ef0193d73408ce4f2ae298",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T19:12:43.710Z",
  "text": "did @wheerd complete it? My function is a simple solution that suits our case",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I mean, it prints the line of code where the definition is",
  "id": "5994993f9acddb2407991763",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T19:13:03.968Z",
  "text": "I mean, it prints the line of code where the definition is",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I get often an error in <code>sympy/integrals/rubi/utility_function.py</code>, on line 2607:<pre><code class=\"python\"><span class=\"keyword\">if</span> Match <span class=\"keyword\">and</span> Match[n]&gt;<span class=\"number\">2</span> <span class=\"keyword\">and</span> Match[a] <span class=\"keyword\">and</span> Match[b] <span class=\"keyword\">and</span> Match[c] <span class=\"keyword\">and</span> Match[d] <span class=\"keyword\">and</span> Match[n]:</code></pre>",
  "id": "599499f3a7b406262d962cf2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T19:16:03.424Z",
  "text": "I get often an error in `sympy/integrals/rubi/utility_function.py`, on line 2607:\n```python\nif Match and Match[n]>2 and Match[a] and Match[b] and Match[c] and Match[d] and Match[n]:\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the <code>if</code> needs to know the boolean value of <code>Match[n] &gt; 2</code>",
  "id": "59949a0a210ac269208de2d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T19:16:26.299Z",
  "text": "the `if` needs to know the boolean value of `Match[n] > 2`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<p>Point 1: While parsing, there can be some issues while parsing using sympy&#39;s  printed output. Example:</p><pre><code class=\"python\"><span class=\"prompt\">&gt;&gt;&gt; </span>S(<span class=\"number\">1</span>)/S(<span class=\"number\">3</span>)\n<span class=\"number\">1</span>/<span class=\"number\">3</span></code></pre><p>if I use directly printed output, then we can get floating point problems. Like, <code>1/3</code> is interpreted as <code>0.3333...</code>.</p>",
  "id": "59949a17162adb6d2e016875",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T19:16:39.150Z",
  "text": "Point 1: While parsing, there can be some issues while parsing using sympy's  printed output. Example:\n```python\n>>> S(1)/S(3)\n1/3\n```\nif I use directly printed output, then we can get floating point problems. Like, `1/3` is interpreted as `0.3333...`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "if the element is a SymPy comparison, it is not possible to return a boolean",
  "id": "59949a2cc101bc4e3a253374",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T19:17:00.714Z",
  "text": "if the element is a SymPy comparison, it is not possible to return a boolean",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "if the first element is numeric, it should have <code>S(1)</code>",
  "id": "59949aa2a7b406262d9630a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T19:18:58.157Z",
  "text": "if the first element is numeric, it should have `S(1)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay, I will replace <code>Match[n]&gt;2</code> as <code>Greater(Match[n], 2)</code>, <code>Greater</code> will return <code>False</code> if the inequality turns out to be <code>relational</code>.",
  "id": "59949adaee5c9a4c5fc98a60",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T19:19:54.215Z",
  "text": "Okay, I will replace `Match[n]>2` as `Greater(Match[n], 2)`, `Greater` will return `False` if the inequality turns out to be `relational`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "or you can use something like <code>re.sub(r&quot;\\d+&quot;, r&quot;S(\\0)&quot;, string)</code> to surround number by <code>S</code>",
  "id": "59949adcc101bc4e3a2536d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T19:19:56.000Z",
  "text": "or you can use something like `re.sub(r\"\\d+\", r\"S(\\0)\", string)` to surround number by `S`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay, while parsing, we also need to add <code>WC</code> objects. I will check if thats possible.",
  "id": "59949b8a76a757f808afb2b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T19:22:50.428Z",
  "text": "Okay, while parsing, we also need to add `WC` objects. I will check if thats possible.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Point 3: Should I also add the rules? when I downloaded latest version of Rubi, some of the utility functions were renamed. I expect, some rules also might have been changed.  Since we are making some modifications to the original rules, it would be better to have all those rules in one place.",
  "id": "59949cd380d90ca02406be09",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T19:28:19.832Z",
  "text": "Point 3: Should I also add the rules? when I downloaded latest version of Rubi, some of the utility functions were renamed. I expect, some rules also might have been changed.  Since we are making some modifications to the original rules, it would be better to have all those rules in one place.\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Do you mean to include Rubi&#39;s source code?",
  "id": "5994a44376a757f808afdf57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T20:00:03.454Z",
  "text": "Do you mean to include Rubi's source code?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Maybe you should just write in the documentation which rubi Version you are including",
  "id": "5994a4cfc101bc4e3a25695f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T20:02:23.699Z",
  "text": "Maybe you should just write in the documentation which rubi Version you are including",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<strong>Point 4</strong>: Start thinking about how to handle Piecewise objects in the rules.",
  "id": "5994a6b7bc464729748e4ed7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T20:10:31.094Z",
  "text": "**Point 4**: Start thinking about how to handle Piecewise objects in the rules.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Mathematica&#39;s integrator makes some implicit assumptions, such as in <code>x**n</code> where <code>n</code> is assumed to be different from -1.",
  "id": "5994a718614889d47555fd04",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T20:12:08.488Z",
  "text": "Mathematica's integrator makes some implicit assumptions, such as in `x**n` where `n` is assumed to be different from -1.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "We need to make sure these cases are handled",
  "id": "5994a72d614889d47555fd18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T20:12:29.953Z",
  "text": "We need to make sure these cases are handled",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Though it might be enough to add a rule for Piecewise objects to the rule set.",
  "id": "5994a835210ac269208e2a9b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-16T20:16:53.296Z",
  "text": "Though it might be enough to add a rule for Piecewise objects to the rule set.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "For <code>Piecewise</code>, given a general expression <code>(a + b*x)**n*(c + d*x)**m</code>, there are multiple rules depending on the value of variables. Do we expect to merge all those rules into <code>Piecewise</code>? ",
  "id": "59954d52578b44a046ba5d14",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-17T08:01:22.561Z",
  "text": "For `Piecewise`, given a general expression `(a + b*x)**n*(c + d*x)**m`, there are multiple rules depending on the value of variables. Do we expect to merge all those rules into `Piecewise`? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "if the variable are symbolic, yes.",
  "id": "5995b4b82723db8d5eb3fbe5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-17T15:22:32.579Z",
  "text": "if the variable are symbolic, yes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Mathematica has the bad habit of giving as a result the integral disregarding the special cases",
  "id": "5995b4daa7b406262d9b4e7d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-17T15:23:06.162Z",
  "text": "Mathematica has the bad habit of giving as a result the integral disregarding the special cases",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "which could lead to wrong results, if the values of the symbols are special",
  "id": "5995b4f4210ac2692092e428",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-17T15:23:32.175Z",
  "text": "which could lead to wrong results, if the values of the symbols are special",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "ideally, the best would be getting an algorithm to generate all such cases",
  "id": "5995b7c9bc4647297493480a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-17T15:35:37.178Z",
  "text": "ideally, the best would be getting an algorithm to generate all such cases",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "but I&#39;m not so sure it&#39;s an easy task",
  "id": "5995b7d680d90ca0240bdb53",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-17T15:35:50.512Z",
  "text": "but I'm not so sure it's an easy task",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Some updates to the debugging functions:<pre><code class=\"python\"><span class=\"keyword\">import</span> inspect\n<span class=\"keyword\">import</span> re\n<span class=\"keyword\">from</span> sympy.integrals.rubi <span class=\"keyword\">import</span> rubi\n\nmatcher = rubi.rubi.matcher\n\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_matching_rule_definition</span><span class=\"params\">(expr)</span>:</span>\n    miter = matcher.match(expr)\n    <span class=\"keyword\">for</span> fun, e <span class=\"keyword\">in</span> miter:\n        print(<span class=\"string\">\"Rule matching: \"</span>)\n        print(inspect.getsourcefile(fun))\n        code, lineno = inspect.getsourcelines(fun)\n        print(<span class=\"string\">\"On line: \"</span>, lineno)\n        print(<span class=\"string\">\"\\n\"</span>.join(code))\n        print(<span class=\"string\">\"Pattern matching: \"</span>)\n        pattno = int(re.match(<span class=\"string\">r\"^\\s*rule(\\d+)\"</span>, code[<span class=\"number\">0</span>]).group(<span class=\"number\">1</span>))\n        print(matcher.patterns[pattno])\n        print(e)\n        print()</code></pre>",
  "id": "5995c536614889d4755b2800",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-17T16:32:54.409Z",
  "text": "Some updates to the debugging functions:\n```python\nimport inspect\nimport re\nfrom sympy.integrals.rubi import rubi\n\nmatcher = rubi.rubi.matcher\n\ndef get_matching_rule_definition(expr):\n    miter = matcher.match(expr)\n    for fun, e in miter:\n        print(\"Rule matching: \")\n        print(inspect.getsourcefile(fun))\n        code, lineno = inspect.getsourcelines(fun)\n        print(\"On line: \", lineno)\n        print(\"\\n\".join(code))\n        print(\"Pattern matching: \")\n        pattno = int(re.match(r\"^\\s*rule(\\d+)\", code[0]).group(1))\n        print(matcher.patterns[pattno])\n        print(e)\n        print()\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<a href=\"https://github.com/sympy/sympy/blob/master/sympy/integrals/heurisch.py#L98\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">heurisch_wrapper</a> tries checks for poles in the denominator of integrated expression and returns <code>Piecewise</code> by evaluating at those points. ",
  "id": "5995c640bc464729749391ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-17T16:37:20.457Z",
  "text": "[heurisch_wrapper](https://github.com/sympy/sympy/blob/master/sympy/integrals/heurisch.py#L98) tries checks for poles in the denominator of integrated expression and returns `Piecewise` by evaluating at those points. ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/master/sympy/integrals/heurisch.py#L98"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Another(most efficient) way to add Piecewise could be to add that functionality in code generation itself. I don&#39;t know how feasible that is. ",
  "id": "5995c708a7b406262d9baba2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-17T16:40:40.984Z",
  "text": "Another(most efficient) way to add Piecewise could be to add that functionality in code generation itself. I don't know how feasible that is. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I mean, we could try to edit manually the rules that need to return a <code>Piecewise</code>, there is a potential problem of disrupting rules dependent on those rules",
  "id": "5995c809c101bc4e3a2aac32",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-17T16:44:57.721Z",
  "text": "I mean, we could try to edit manually the rules that need to return a `Piecewise`, there is a potential problem of disrupting rules dependent on those rules",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I have added all the utility functions which were too large using MatchPy&#39;s <code>ManyToOneReplacer</code> (such as <code>TrigSimplify</code>and <code>SimplifyAntiderivative</code>). ",
  "id": "5995c9f9578b44a046bcdfcc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-17T16:53:13.791Z",
  "text": "I have added all the utility functions which were too large using MatchPy's `ManyToOneReplacer` (such as `TrigSimplify`and `SimplifyAntiderivative`). ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "sorry, what was the problem with those utility functions exactly?",
  "id": "5995ca4a162adb6d2e06f3c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-17T16:54:34.649Z",
  "text": "sorry, what was the problem with those utility functions exactly?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> I checked <code>heurisch_wrapper</code>, that&#39;s a good solution",
  "id": "5995ca9fbc4647297493a968",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-17T16:55:59.201Z",
  "text": "@parsoyaarihant I checked `heurisch_wrapper`, that's a good solution",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "There were multiple definitions of those functions (&gt;20), it would take lot of time to implement them by sympy&#39;s <code>.match()</code>. So, I used our existing parser to parse those rules as <code>ManyToOneReplacer</code>: <a href=\"https://github.com/sympy/sympy/pull/12978/files#diff-7155fe6e5fd15253f50ed2c086d5354aR6078\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/pull/12978/files#diff-7155fe6e5fd15253f50ed2c086d5354aR6078</a>",
  "id": "5995cabbc101bc4e3a2abac0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-17T16:56:27.124Z",
  "text": "There were multiple definitions of those functions (>20), it would take lot of time to implement them by sympy's `.match()`. So, I used our existing parser to parse those rules as `ManyToOneReplacer`: https://github.com/sympy/sympy/pull/12978/files#diff-7155fe6e5fd15253f50ed2c086d5354aR6078",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/12978/files#diff-7155fe6e5fd15253f50ed2c086d5354aR6078"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "OK",
  "id": "5995cada76a757f808b53b23",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-17T16:56:58.847Z",
  "text": "OK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "what about MatchPy&#39;s code generator? Did you test it?",
  "id": "5995caebc101bc4e3a2abb63",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-17T16:57:15.470Z",
  "text": "what about MatchPy's code generator? Did you test it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I haven&#39;t, I have asked Manuel regarding this: <a href=\"https://github.com/HPAC/matchpy/issues/13#issuecomment-322175122\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/HPAC/matchpy/issues/13#issuecomment-322175122</a>",
  "id": "5995ce28578b44a046bcf6d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-17T17:11:04.037Z",
  "text": "I haven't, I have asked Manuel regarding this: https://github.com/HPAC/matchpy/issues/13#issuecomment-322175122",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/HPAC/matchpy/issues/13#issuecomment-322175122"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Newly updated debugging function:<pre><code class=\"python\"><span class=\"keyword\">import</span> inspect\n<span class=\"keyword\">import</span> re\n<span class=\"keyword\">from</span> sympy.integrals.rubi <span class=\"keyword\">import</span> rubi\n\nmatcher = rubi.rubi.matcher\n\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_matching_rule_definition</span><span class=\"params\">(expr)</span>:</span>\n    miter = matcher.match(expr)\n    <span class=\"keyword\">for</span> fun, e <span class=\"keyword\">in</span> miter:\n        print(<span class=\"string\">\"Rule matching: \"</span>)\n        print(inspect.getsourcefile(fun))\n        code, lineno = inspect.getsourcelines(fun)\n        print(<span class=\"string\">\"On line: \"</span>, lineno)\n        print(<span class=\"string\">\"\\n\"</span>.join(code))\n        print(<span class=\"string\">\"Pattern matching: \"</span>)\n        pattno = int(re.match(<span class=\"string\">r\"^\\s*rule(\\d+)\"</span>, code[<span class=\"number\">0</span>]).group(<span class=\"number\">1</span>))\n        print(matcher.patterns[pattno-<span class=\"number\">1</span>])\n        print(e)\n        print()</code></pre>",
  "id": "5995d6b7210ac26920938722",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-17T17:47:35.074Z",
  "text": "Newly updated debugging function:\n```python\nimport inspect\nimport re\nfrom sympy.integrals.rubi import rubi\n\nmatcher = rubi.rubi.matcher\n\ndef get_matching_rule_definition(expr):\n    miter = matcher.match(expr)\n    for fun, e in miter:\n        print(\"Rule matching: \")\n        print(inspect.getsourcefile(fun))\n        code, lineno = inspect.getsourcelines(fun)\n        print(\"On line: \", lineno)\n        print(\"\\n\".join(code))\n        print(\"Pattern matching: \")\n        pattno = int(re.match(r\"^\\s*rule(\\d+)\", code[0]).group(1))\n        print(matcher.patterns[pattno-1])\n        print(e)\n        print()\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> , Thanks! I will add this soon. ",
  "id": "5995e329162adb6d2e076930",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-17T18:40:41.723Z",
  "text": "@Upabjojr , Thanks! I will add this soon. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the PR with the <code>Rational</code> printer has been merged into master",
  "id": "59970f1180d90ca02411f48b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-18T16:00:17.775Z",
  "text": "the PR with the `Rational` printer has been merged into master",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "does the printer have any other requirements to make the rules readable?",
  "id": "59970f29614889d475610135",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-18T16:00:41.421Z",
  "text": "does the printer have any other requirements to make the rules readable?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "No, I am updating the parser to accommodate for the changes. I will push the new rules by tomorrow. ",
  "id": "599720d5ee5c9a4c5fd535ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-18T17:16:05.175Z",
  "text": "No, I am updating the parser to accommodate for the changes. I will push the new rules by tomorrow. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "OK, as soon as you&#39;re finished, can you include the parsing tools into the branch?",
  "id": "5997275bee5c9a4c5fd55082",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-18T17:43:55.338Z",
  "text": "OK, as soon as you're finished, can you include the parsing tools into the branch?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "We need to have everything into SymPy in case someone else decides to go on in the future",
  "id": "5997277280d90ca0241267ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-18T17:44:18.527Z",
  "text": "We need to have everything into SymPy in case someone else decides to go on in the future",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Yes. I will add it by today.",
  "id": "5997e180ee5c9a4c5fd82d07",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-19T06:58:08.938Z",
  "text": "Yes. I will add it by today.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I have separated the rules into different files: <a href=\"https://github.com/sympy/sympy/pull/12978/files#diff-0a30e77123389b6cf497721afc19007dR118\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/pull/12978/files#diff-0a30e77123389b6cf497721afc19007dR118</a>",
  "id": "599c2e57614889d475757fd5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-22T13:15:03.048Z",
  "text": "I have separated the rules into different files: https://github.com/sympy/sympy/pull/12978/files#diff-0a30e77123389b6cf497721afc19007dR118",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/12978/files#diff-0a30e77123389b6cf497721afc19007dR118"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2017-08-22T13:15:43.153Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I will commit all the remaining rules by tomorrow.",
  "id": "599c2e6cbc46472974adff88",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-22T13:15:24.566Z",
  "text": "I will commit all the remaining rules by tomorrow.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "OK great",
  "id": "599c74a62723db8d5ed015cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-22T18:15:02.734Z",
  "text": "OK great",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "also remember to add some instruction on how to go on with the work",
  "id": "599c74bc578b44a046d8dc9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-22T18:15:24.899Z",
  "text": "also remember to add some instruction on how to go on with the work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "probably someone else will finish the job",
  "id": "599c74cb162adb6d2e2285d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-22T18:15:39.138Z",
  "text": "probably someone else will finish the job",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<p>I have added the remaining rules. </p><p>There are parsing problems with <code>Derivative</code> rules(I will try to parse them without using SymPy). Some special Mathematica functions are not yet implemented in utility functions. I will add the rules for special functions when <span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span> adds them. </p>",
  "id": "599da5b1210ac26920b3a484",
  "issues": [],
  "mentions": [
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T15:56:33.612Z",
  "text": "I have added the remaining rules. \n\nThere are parsing problems with `Derivative` rules(I will try to parse them without using SymPy). Some special Mathematica functions are not yet implemented in utility functions. I will add the rules for special functions when @Abdullahjavednesar adds them. \n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<code>also remember to add some instruction on how to go on with the work</code><br>I will add the documentation by tomorrow. <span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> , where should I add the documentation for the instructions?  Inside the function itself?",
  "id": "599da5b8c101bc4e3a4b5ed9",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T15:56:40.649Z",
  "text": "\n`also remember to add some instruction on how to go on with the work`\nI will add the documentation by tomorrow. @Upabjojr , where should I add the documentation for the instructions?  Inside the function itself?\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span> , please complete the utility functions asap.",
  "id": "599da5cd76a757f808d625cf",
  "issues": [],
  "mentions": [
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T15:57:01.167Z",
  "text": "\n@Abdullahjavednesar , please complete the utility functions asap.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "What about a <code>TODO.rst</code> file for the tasks to complete?",
  "id": "599da6b9a7b406262dbc4b61",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T16:00:57.651Z",
  "text": "What about a `TODO.rst` file for the tasks to complete?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would put the instructions that will remain valid after the work is finished in a docstring in <code>__init__.py</code>",
  "id": "599da6dd2723db8d5ed534f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T16:01:33.366Z",
  "text": "I would put the instructions that will remain valid after the work is finished in a docstring in `__init__.py`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the instruction on what is missing and how to complete it in a <code>TODO.md</code> file",
  "id": "599da704614889d4757bf983",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T16:02:12.581Z",
  "text": "the instruction on what is missing and how to complete it in a `TODO.md` file",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "or maybe even better... no <code>TODO</code> file... everything in <code>__init__.py</code>",
  "id": "599da721bc46472974b4b2b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T16:02:41.795Z",
  "text": "or maybe even better... no `TODO` file... everything in `__init__.py`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Well... loading all the rules in extremely slow for real",
  "id": "599dabe42723db8d5ed55182",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T16:23:00.227Z",
  "text": "Well... loading all the rules in extremely slow for real",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "maybe we should think about some pickling strategy",
  "id": "599dabf1c101bc4e3a4b7c46",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T16:23:13.685Z",
  "text": "maybe we should think about some pickling strategy",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Is it possible to define some global variables, so the rules gets loaded depending on the those global variables?",
  "id": "599daf5676a757f808d654f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T16:37:42.307Z",
  "text": "Is it possible to define some global variables, so the rules gets loaded depending on the those global variables?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "do you mean some environement variables?",
  "id": "599daf85c101bc4e3a4b8d7c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T16:38:29.460Z",
  "text": "do you mean some environement variables?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "yes",
  "id": "599daf99a7b406262dbc774a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T16:38:49.366Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I think it&#39;s easier to just create a loading function",
  "id": "599dafb0bc46472974b4db70",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T16:39:12.510Z",
  "text": "I think it's easier to just create a loading function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "where you can specify which groups to load",
  "id": "599dafc2ee5c9a4c5ff02532",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T16:39:30.644Z",
  "text": "where you can specify which groups to load",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<p>Okay</p><p><span data-link-type=\"mention\" data-screen-name=\"wheerd\" class=\"mention\">@wheerd</span> , has finished working on the <a href=\"https://gist.github.com/wheerd/13ac5a0e9b560db6201d96136fa0bbcc\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">code-generation</a>. I will try it out for algebraic rules.</p>",
  "id": "599db00a210ac26920b3d509",
  "issues": [],
  "mentions": [
   {
    "screenName": "wheerd",
    "userId": "57ef0193d73408ce4f2ae298",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T16:40:42.454Z",
  "text": "Okay\n\n@wheerd , has finished working on the [code-generation](https://gist.github.com/wheerd/13ac5a0e9b560db6201d96136fa0bbcc). I will try it out for algebraic rules.",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/wheerd/13ac5a0e9b560db6201d96136fa0bbcc"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "+1",
  "id": "599db02b162adb6d2e27c48a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T16:41:15.690Z",
  "text": "+1",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> how long does it take on your computer to load all the rules? I have been running the loader for more than 1 hour by now.",
  "id": "599dbe7b210ac26920b4175a",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T17:42:19.280Z",
  "text": "@parsoyaarihant how long does it take on your computer to load all the rules? I have been running the loader for more than 1 hour by now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "(not yet loaded...)",
  "id": "599dbe829acddb2407bfcf74",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T17:42:26.883Z",
  "text": "(not yet loaded...)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wheerd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=60",
   "displayName": "Manuel Krebber",
   "gv": "4",
   "id": "57ef0193d73408ce4f2ae298",
   "url": "/wheerd",
   "username": "wheerd",
   "v": 4
  },
  "html": "I am currently using the 1.2 subset of the rules to run some experiments",
  "id": "599dc46fba0f0f6e38d6807b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:07:43.767Z",
  "text": "I am currently using the 1.2 subset of the rules to run some experiments",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wheerd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=60",
   "displayName": "Manuel Krebber",
   "gv": "4",
   "id": "57ef0193d73408ce4f2ae298",
   "url": "/wheerd",
   "username": "wheerd",
   "v": 4
  },
  "html": "With them code generation works fine",
  "id": "599dc47ba7b406262dbcdf6e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:07:55.795Z",
  "text": "With them code generation works fine",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wheerd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=60",
   "displayName": "Manuel Krebber",
   "gv": "4",
   "id": "57ef0193d73408ce4f2ae298",
   "url": "/wheerd",
   "username": "wheerd",
   "v": 4
  },
  "html": "But I think with all rules it does not scale.",
  "id": "599dc4889acddb2407bfec1d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:08:08.139Z",
  "text": "But I think with all rules it does not scale.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wheerd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=60",
   "displayName": "Manuel Krebber",
   "gv": "4",
   "id": "57ef0193d73408ce4f2ae298",
   "url": "/wheerd",
   "username": "wheerd",
   "v": 4
  },
  "html": "There is still the issue with crashing the interpreter for large programs like that: <a href=\"http://bugs.python.org/issue31113\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://bugs.python.org/issue31113</a>",
  "id": "599dc4cd210ac26920b433a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:09:17.095Z",
  "text": "There is still the issue with crashing the interpreter for large programs like that: http://bugs.python.org/issue31113",
  "unread": false,
  "urls": [
   {
    "url": "http://bugs.python.org/issue31113"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wheerd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=60",
   "displayName": "Manuel Krebber",
   "gv": "4",
   "id": "57ef0193d73408ce4f2ae298",
   "url": "/wheerd",
   "username": "wheerd",
   "v": 4
  },
  "html": "I think a different strategy for generating the code might be needed, but I don&#39;t have the time right now to implement it.",
  "id": "599dc500162adb6d2e2825b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:10:08.720Z",
  "text": "I think a different strategy for generating the code might be needed, but I don't have the time right now to implement it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wheerd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=60",
   "displayName": "Manuel Krebber",
   "gv": "4",
   "id": "57ef0193d73408ce4f2ae298",
   "url": "/wheerd",
   "username": "wheerd",
   "v": 4
  },
  "html": "It is possible to pickle the matcher, but only with <code>dill</code> atm because lambdas can&#39;t be pickled.",
  "id": "599dc531614889d4757c8552",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:10:57.504Z",
  "text": "It is possible to pickle the matcher, but only with `dill` atm because lambdas can't be pickled.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wheerd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=60",
   "displayName": "Manuel Krebber",
   "gv": "4",
   "id": "57ef0193d73408ce4f2ae298",
   "url": "/wheerd",
   "username": "wheerd",
   "v": 4
  },
  "html": "One thing to speed things up is to change <code>FreeQ</code> into a <code>Constraint</code> because with the lambdas currently there is a lot of redundancy. I think that <code>(lambda a, x: FreeQ(a, x)) != (lambda a, x: FreeQ(a, x))</code>.",
  "id": "599dc5f1ba0f0f6e38d686e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:14:09.630Z",
  "text": "One thing to speed things up is to change `FreeQ` into a `Constraint` because with the lambdas currently there is a lot of redundancy. I think that `(lambda a, x: FreeQ(a, x)) != (lambda a, x: FreeQ(a, x))`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wheerd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2556867?v=4&s=60",
   "displayName": "Manuel Krebber",
   "gv": "4",
   "id": "57ef0193d73408ce4f2ae298",
   "url": "/wheerd",
   "username": "wheerd",
   "v": 4
  },
  "html": "And while the code generation is working, it still does not completely get rid of the MatchPy dependency atm, because for commutative functions it still requires the <code>CommutativeMatcher</code> class. I haven&#39;t gotten around to eliminating that yet.",
  "id": "599dc63cba0f0f6e38d68849",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:15:24.692Z",
  "text": "And while the code generation is working, it still does not completely get rid of the MatchPy dependency atm, because for commutative functions it still requires the `CommutativeMatcher` class. I haven't gotten around to eliminating that yet.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I see the problem, thanks for your work anyway",
  "id": "599dc828a7b406262dbcf062",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:23:36.165Z",
  "text": "I see the problem, thanks for your work anyway",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "we don&#39;t have to use the code generator this week, I can try to fix some of the remaining stuff after the GSoC period is finished",
  "id": "599dc849c101bc4e3a4c0307",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:24:09.265Z",
  "text": "we don't have to use the code generator this week, I can try to fix some of the remaining stuff after the GSoC period is finished",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I am currently trying to experiment with the full set of rules, I guess we still have some problems",
  "id": "599dc8baba0f0f6e38d69298",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:26:02.461Z",
  "text": "I am currently trying to experiment with the full set of rules, I guess we still have some problems",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the integral of <code>exp(x)</code> raises an exception",
  "id": "599dc8c6bc46472974b55111",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:26:14.786Z",
  "text": "the integral of `exp(x)` raises an exception",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the integral of <code>sin(x)/x</code> gives an infinite recursion",
  "id": "599dc8d7578b44a046deafbe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:26:31.287Z",
  "text": "the integral of `sin(x)/x` gives an infinite recursion",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-23T18:39:36.363Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I loaded the rules individually and while checking for issues(I did not try to load all at once). There were some recursion errors while testing. Some integrands can get matched with different rules(which they are not suppose to) and give recursion errors. I will try these cases in Mathematica and see how it handles these situations.",
  "id": "599dcb109acddb2407c009d0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:36:00.018Z",
  "text": "I loaded the rules individually and while checking for issues(I did not try to load all at once). There were some recursion errors while testing. Some integrands can get matched with different rules(which they are not suppose to) and give recursion errors. I will try these cases in Mathematica and see how it handles these situations.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<code>the integral of exp(x) raises an exception</code><br>I will look into this.",
  "id": "599dcb93ee5c9a4c5ff0a61c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:38:11.000Z",
  "text": "`the integral of exp(x) raises an exception`\nI will look into this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I suspect it could be the case that the matching order is different",
  "id": "599dcc29ba0f0f6e38d6a415",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:40:41.620Z",
  "text": "I suspect it could be the case that the matching order is different",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "another thing: I believe all <code>exp(a)</code> should be transformed into <code>Pow(S.Exp1, a)</code>",
  "id": "599dcc66162adb6d2e28457c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:41:42.295Z",
  "text": "another thing: I believe all `exp(a)` should be transformed into `Pow(S.Exp1, a)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-23T18:42:35.057Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<pre><code><span class=\"keyword\">In</span>[<span class=\"number\">1</span>]:= <span class=\"keyword\">Exp</span>[x]\n\n         x\n<span class=\"keyword\">Out</span>[<span class=\"number\">1</span>]= <span class=\"keyword\">E</span>\n\n<span class=\"keyword\">In</span>[<span class=\"number\">2</span>]:= % // <span class=\"keyword\">Head</span>\n\n<span class=\"keyword\">Out</span>[<span class=\"number\">2</span>]= <span class=\"keyword\">Power</span></code></pre>",
  "id": "599dcc7b9acddb2407c0105b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:42:03.933Z",
  "text": "```\nIn[1]:= Exp[x]\n\n         x\nOut[1]= E\n\nIn[2]:= % // Head\n\nOut[2]= Power\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "it&#39;s a long-standing issue in SymPy, we&#39;d like to get rid of the <code>exp</code> function and just use <code>Pow</code>.",
  "id": "599dccc0578b44a046dec40b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:43:12.845Z",
  "text": "it's a long-standing issue in SymPy, we'd like to get rid of the `exp` function and just use `Pow`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Mathematica behaves like that",
  "id": "599dcccb578b44a046dec41b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:43:23.131Z",
  "text": "Mathematica behaves like that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay. I will make that change. ",
  "id": "599dccd976a757f808d6e306",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:43:37.914Z",
  "text": "Okay. I will make that change. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "you will probably need <code>evaluate=False</code> in <code>Pow</code>",
  "id": "599dcce8614889d4757caa20",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:43:52.818Z",
  "text": "you will probably need `evaluate=False` in `Pow`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I think it&#39;s set to automatically become an <code>exp</code> if the base is <code>e</code>",
  "id": "599dccf9ba0f0f6e38d6a82a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:44:09.390Z",
  "text": "I think it's set to automatically become an `exp` if the base is `e`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Oh, yes, that&#39;s the problem:<pre><code><span class=\"keyword\">In</span> [<span class=\"number\">14</span>]: rubi_integrate(Pow(S.Exp1, x, evaluate=<span class=\"keyword\">False</span>), x)\n<span class=\"keyword\">Out</span>[<span class=\"number\">14</span>]: \n x\n\u212f</code></pre>",
  "id": "599dcd522723db8d5ed5f127",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:45:38.336Z",
  "text": "Oh, yes, that's the problem:\n```\nIn [14]: rubi_integrate(Pow(S.Exp1, x, evaluate=False), x)\nOut[14]: \n x\n\u212f \n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-23T18:47:12.539Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "while:<pre><code>In [<span class=\"number\">17</span>]: <span class=\"function\"><span class=\"title\">rubi_integrate</span><span class=\"params\">(Pow(S.Exp1, x, evaluate=True)</span></span>, x)\nTypeError: <span class=\"string\">'NoneType'</span> <span class=\"tag\">object</span> is not subscriptable</code></pre>",
  "id": "599dcda4210ac26920b45aa6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:47:00.453Z",
  "text": "while:\n```\nIn [17]: rubi_integrate(Pow(S.Exp1, x, evaluate=True), x)\nTypeError: 'NoneType' object is not subscriptable\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I am noticing a lot of definitions like these:<pre><code class=\"python\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">EllipticF</span><span class=\"params\">(Phi, m)</span>:</span>\n    <span class=\"keyword\">return</span> elliptic_f(Phi, m)\n\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">ArcTan</span><span class=\"params\">(a)</span>:</span>\n    <span class=\"keyword\">return</span> atan(a)\n\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">ArcCot</span><span class=\"params\">(a)</span>:</span>\n    <span class=\"keyword\">return</span> acot(a)</code></pre>",
  "id": "599dcdfda7b406262dbd0993",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:48:29.502Z",
  "text": "I am noticing a lot of definitions like these:\n```python\ndef EllipticF(Phi, m):\n    return elliptic_f(Phi, m)\n\ndef ArcTan(a):\n    return atan(a)\n\ndef ArcCot(a):\n    return acot(a)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "why not use the SymPy functions directly?",
  "id": "599dce21162adb6d2e284d3b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T18:49:05.351Z",
  "text": "why not use the SymPy functions directly?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "We can use SymPy functions directly. I will remove these definitions.",
  "id": "599dd5a5bc46472974b5892a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T19:21:09.508Z",
  "text": "We can use SymPy functions directly. I will remove these definitions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<code>Expand</code> appears to have an optional parameter in Mathematica, it does not exist in SymPy",
  "id": "599dd6f8210ac26920b4880b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T19:26:48.476Z",
  "text": "`Expand` appears to have an optional parameter in Mathematica, it does not exist in SymPy",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "also add <code>Erfi</code>, SymPy equivalent is <code>erfi</code>",
  "id": "599dd764c101bc4e3a4c446f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T19:28:36.562Z",
  "text": "also add `Erfi`, SymPy equivalent is `erfi`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I keep getting maximum recursion limit very often",
  "id": "599dd7d2c101bc4e3a4c460c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-23T19:30:26.746Z",
  "text": "I keep getting maximum recursion limit very often",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-24T15:31:38.659Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span>, how to implement <code>Dist</code> and <code>Defer</code> in Python can you give an example?<pre><code><span class=\"list\">(<span class=\"keyword\"><span class=\"built_in\">*</span></span> Dist<span class=\"list\">[<span class=\"keyword\">u</span>,v] returns the sum of u times each term of v, provided v is free of Int. *)\nDownValues<span class=\"list\">[<span class=\"keyword\">Dist</span>]={}<span class=\"comment\">;</span>\nUpValues<span class=\"list\">[<span class=\"keyword\">Dist</span>]={}<span class=\"comment\">;</span>\n\nDist /: Dist<span class=\"list\">[<span class=\"keyword\">u_</span>,v_,x_]+Dist<span class=\"list\">[<span class=\"keyword\">w_</span>,v_,x_] := \n  If<span class=\"list\">[<span class=\"keyword\">ZeroQ</span><span class=\"list\">[<span class=\"keyword\">u+w</span>],\n    <span class=\"number\">0</span>,\n  Dist<span class=\"list\">[<span class=\"keyword\">u+w</span>,v,x]]\n\nDist /: Dist<span class=\"list\">[<span class=\"keyword\">u_</span>,v_,x_]-Dist<span class=\"list\">[<span class=\"keyword\">w_</span>,v_,x_] := \n  If<span class=\"list\">[<span class=\"keyword\">ZeroQ</span><span class=\"list\">[<span class=\"keyword\">u-w</span>],\n    <span class=\"number\">0</span>,\n  Dist<span class=\"list\">[<span class=\"keyword\">u-w</span>,v,x]]\n\nDist /: w_*Dist<span class=\"list\">[<span class=\"keyword\">u_</span>,v_,x_] := \n  Dist<span class=\"list\">[<span class=\"keyword\">w*u</span>,v,x] /<span class=\"comment\">; </span>\nw=!=-1\n\nDist<span class=\"list\">[<span class=\"keyword\">u_</span>,Defer<span class=\"list\">[<span class=\"keyword\">Dist</span>]<span class=\"list\">[<span class=\"keyword\">v_</span>,w_,x_],x_] := \n  Dist<span class=\"list\">[<span class=\"keyword\">u*v</span>,w,x]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>",
  "id": "599ef14476a757f808dbdd7a",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-24T15:31:16.684Z",
  "text": "@Upabjojr, how to implement `Dist` and `Defer` in Python can you give an example?\n```\n(* Dist[u,v] returns the sum of u times each term of v, provided v is free of Int. *)\nDownValues[Dist]={};\nUpValues[Dist]={};\n\nDist /: Dist[u_,v_,x_]+Dist[w_,v_,x_] := \n  If[ZeroQ[u+w],\n    0,\n  Dist[u+w,v,x]]\n\nDist /: Dist[u_,v_,x_]-Dist[w_,v_,x_] := \n  If[ZeroQ[u-w],\n    0,\n  Dist[u-w,v,x]]\n\nDist /: w_*Dist[u_,v_,x_] := \n  Dist[w*u,v,x] /; \nw=!=-1\n\nDist[u_,Defer[Dist][v_,w_,x_],x_] := \n  Dist[u*v,w,x]\n```\n\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<p>I have found the issue with recursion errors.<br>Consider this rule in Mathematica:</p><pre><code class=\"mathematica\">Int[u_,x_Symbol] :=\n  <span class=\"keyword\">With</span>[<span class=\"list\">{lst=FunctionOfLog[Cancel[x*u],x]}</span>,\n  <span class=\"number\">1</span>/lst[[<span class=\"number\">3</span>]]*Subst[Int[lst[[<span class=\"number\">1</span>]],x],x,<span class=\"keyword\">Log</span>[lst[[<span class=\"number\">2</span>]]]] /;\n <span class=\"keyword\">Not</span>[FalseQ[lst]]] /;\nNonsumQ[u]]</code></pre><p>It parses to:</p><pre><code class=\"python\">    pattern153 = Pattern(Integral(u_, x_), CustomConstraint(<span class=\"keyword\">lambda</span> u: NonsumQ(u)))\n    rule153 = ReplacementRule(pattern153, <span class=\"keyword\">lambda</span> u, x : With(List(Set(lst, FunctionOfLog(Cancel(u*x), x))), Condition(Subst(Int(Part(lst, S(<span class=\"number\">1</span>)), x), x, Log(Part(lst, S(<span class=\"number\">2</span>))))/Part(lst, S(<span class=\"number\">3</span>)), ~(FalseQ(lst)))))</code></pre>",
  "id": "599f03c466c1c7c477d91aff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-24T16:50:12.838Z",
  "text": "I have found the issue with recursion errors. \nConsider this rule in Mathematica:\n```mathematica\nInt[u_,x_Symbol] :=\n  With[{lst=FunctionOfLog[Cancel[x*u],x]},\n  1/lst[[3]]*Subst[Int[lst[[1]],x],x,Log[lst[[2]]]] /;\n Not[FalseQ[lst]]] /;\nNonsumQ[u]]\n```\nIt parses to:\n```python\n    pattern153 = Pattern(Integral(u_, x_), CustomConstraint(lambda u: NonsumQ(u)))\n    rule153 = ReplacementRule(pattern153, lambda u, x : With(List(Set(lst, FunctionOfLog(Cancel(u*x), x))), Condition(Subst(Int(Part(lst, S(1)), x), x, Log(Part(lst, S(2))))/Part(lst, S(3)), ~(FalseQ(lst)))))\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-24T16:53:36.299Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "When <code>u</code> and <code>x</code> gets substituted in <code>With(List(Set(lst, FunctionOfLog(Cancel(u*x), x))),  Condition(Subst(Int(Part(lst, S(1)), x) ....)</code> , variable <code>lst</code> in <code>Int</code> should be substituted as <code>FunctionOfLog(Cancel(u*x), x)</code> instead it gets passed as a <code>lst</code> Symbol.",
  "id": "599f047bbc46472974baa5d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-24T16:53:15.443Z",
  "text": "When `u` and `x ` gets substituted in `With(List(Set(lst, FunctionOfLog(Cancel(u*x), x))),  Condition(Subst(Int(Part(lst, S(1)), x) ....)` , variable `lst` in `Int` should be substituted as `FunctionOfLog(Cancel(u*x), x)` instead it gets passed as a `lst` Symbol.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I will see if I can make this change in parser itself",
  "id": "599f088d210ac26920b9afa2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-24T17:10:37.821Z",
  "text": "I will see if I can make this change in parser itself",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span> you don&#39;t need <code>Defer</code>, that&#39;s used for the definition of <code>Dist</code>&#39;s behaviour.",
  "id": "599f16e6ee5c9a4c5ff6603f",
  "issues": [],
  "mentions": [
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-24T18:11:50.949Z",
  "text": "@Abdullahjavednesar you don't need `Defer`, that's used for the definition of `Dist`'s behaviour.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "where exactly is <code>Dist</code> appearing? Implementing an object that behaves like that under addition in not so simple in SymPy. Can we find a workaround?",
  "id": "599f171fba0f0f6e38dc4abb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-24T18:12:47.566Z",
  "text": "where exactly is `Dist` appearing? Implementing an object that behaves like that under addition in not so simple in SymPy. Can we find a workaround?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I&#39;m curious to see what happens if you try to implement it as:<pre><code class=\"python\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Dist</span><span class=\"params\">(v, w, x)</span>:</span>\n    <span class=\"keyword\">return</span> v*w.doit()</code></pre>",
  "id": "599f1a399acddb2407c5d997",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-24T18:26:01.370Z",
  "text": "I'm curious to see what happens if you try to implement it as:\n```python\ndef Dist(v, w, x):\n    return v*w.doit()\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I&#39;m not sure that&#39;s the correct implementation",
  "id": "599f1a949acddb2407c5dae6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-24T18:27:32.202Z",
  "text": "I'm not sure that's the correct implementation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span>, one of the definitions of <code>SubstAux</code> uses <code>Dist</code>we&#39;ll need there.<pre><code>SubstAux[u_,v_,w_] :=\n  If[u===v,\n    w,\n  If[AtomQ[u],\n    u,\n  If[PowerQ[u],\n    If[PowerQ[v] &amp;&amp; u<span class=\"string\">[[1]]</span>===v<span class=\"string\">[[1]]</span> &amp;&amp; SumQ[u<span class=\"string\">[[2]]</span>],\n      SubstAux[u<span class=\"string\">[[1]]</span>^First[u<span class=\"string\">[[2]]</span>],v,w]*SubstAux[u<span class=\"string\">[[1]]</span>^Rest[u<span class=\"string\">[[2]]</span>],v,w],\n    SubstAux[u<span class=\"string\">[[1]]</span>,v,w]^SubstAux[u<span class=\"string\">[[2]]</span>,v,w]],\n  If[Head[u]===Defer[Subst],\n    If[u<span class=\"string\">[[2]]</span>===v || FreeQ[u<span class=\"string\">[[1]]</span>,v],\n      SubstAux[u<span class=\"string\">[[1]]</span>,u<span class=\"string\">[[2]]</span>,SubstAux[u<span class=\"string\">[[3]]</span>,v,w]],\n    Defer[Subst][u,v,w]],\n  If[Head[u]===Defer[Dist],\n    Defer[Dist][SubstAux[u<span class=\"string\">[[1]]</span>,v,w],SubstAux[u<span class=\"string\">[[2]]</span>,v,w],u<span class=\"string\">[[3]]</span>],\n  If[CalculusQ[u] &amp;&amp; Not[FreeQ[v,u<span class=\"string\">[[2]]</span>]] || HeldFormQ[u] &amp;&amp; Head[u]=!=Defer[AppellF1],\n    Defer[Subst][u,v,w],\n  Map[Function[SubstAux[#,v,w]],u]]]]]]]</code></pre>",
  "id": "599f1b629acddb2407c5de73",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-24T18:30:58.151Z",
  "text": "@Upabjojr, one of the definitions of `SubstAux` uses `Dist`we'll need there.\n```\nSubstAux[u_,v_,w_] :=\n  If[u===v,\n    w,\n  If[AtomQ[u],\n    u,\n  If[PowerQ[u],\n    If[PowerQ[v] && u[[1]]===v[[1]] && SumQ[u[[2]]],\n      SubstAux[u[[1]]^First[u[[2]]],v,w]*SubstAux[u[[1]]^Rest[u[[2]]],v,w],\n    SubstAux[u[[1]],v,w]^SubstAux[u[[2]],v,w]],\n  If[Head[u]===Defer[Subst],\n    If[u[[2]]===v || FreeQ[u[[1]],v],\n      SubstAux[u[[1]],u[[2]],SubstAux[u[[3]],v,w]],\n    Defer[Subst][u,v,w]],\n  If[Head[u]===Defer[Dist],\n    Defer[Dist][SubstAux[u[[1]],v,w],SubstAux[u[[2]],v,w],u[[3]]],\n  If[CalculusQ[u] && Not[FreeQ[v,u[[2]]]] || HeldFormQ[u] && Head[u]=!=Defer[AppellF1],\n    Defer[Subst][u,v,w],\n  Map[Function[SubstAux[#,v,w]],u]]]]]]]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span> from the definition of <code>Dist</code>, it looks to me that the author wants to represent a product of two terms, which gets evaluated only if the second term does not contain any <code>Int</code>",
  "id": "599f1c47578b44a046e48f99",
  "issues": [],
  "mentions": [
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-24T18:34:47.368Z",
  "text": "@Abdullahjavednesar from the definition of `Dist`, it looks to me that the author wants to represent a product of two terms, which gets evaluated only if the second term does not contain any `Int`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "The implementation is a bit tricky",
  "id": "599f1c55ba0f0f6e38dc6353",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-24T18:35:01.722Z",
  "text": "The implementation is a bit tricky",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "The question is: can we find a workaround in order not to implement all of <code>Dist</code>?",
  "id": "599f1c6bbc46472974bb1ace",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-24T18:35:23.295Z",
  "text": "The question is: can we find a workaround in order not to implement all of `Dist`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> if we have <code>Module</code> or <code>With</code> expressions in the patterns, isn&#39;t it easier to create a full Python function with <code>def</code> rather than a <code>lambda</code>?",
  "id": "599f1dab76a757f808dcb11b",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-24T18:40:43.200Z",
  "text": "@parsoyaarihant if we have `Module` or `With` expressions in the patterns, isn't it easier to create a full Python function with `def` rather than a `lambda`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<pre><code><span class=\"name\">Int</span>[<span class=\"atom\">u_</span>,<span class=\"atom\">x_Symbol</span>] :=\n  <span class=\"name\">With</span>[{<span class=\"atom\">lst</span>=<span class=\"name\">FunctionOfLog</span>[<span class=\"name\">Cancel</span>[<span class=\"atom\">x</span>*<span class=\"atom\">u</span>],<span class=\"atom\">x</span>]},\n  <span class=\"number\">1</span>/<span class=\"atom\">lst</span>[[<span class=\"number\">3</span>]]*<span class=\"name\">Subst</span>[<span class=\"name\">Int</span>[<span class=\"atom\">lst</span>[[<span class=\"number\">1</span>]],<span class=\"atom\">x</span>],<span class=\"atom\">x</span>,<span class=\"name\">Log</span>[<span class=\"atom\">lst</span>[[<span class=\"number\">2</span>]]]] /;\n <span class=\"name\">Not</span>[<span class=\"name\">FalseQ</span>[<span class=\"atom\">lst</span>]]] /;\n<span class=\"name\">NonsumQ</span>[<span class=\"atom\">u</span>]]</code></pre>This could be transformed into something like:<pre><code>    pattern153 = <span class=\"function\"><span class=\"title\">Pattern</span><span class=\"params\">(Integral(u_, x_)</span></span>, <span class=\"function\"><span class=\"title\">CustomConstraint</span><span class=\"params\">(lambda u: NonsumQ(u)</span></span>))\n\n    def <span class=\"function\"><span class=\"title\">fun153</span><span class=\"params\">(u, x)</span></span>:\n        lst = <span class=\"function\"><span class=\"title\">FunctionOfLog</span><span class=\"params\">(Cancel(u*x)</span></span>, x))\n        return <span class=\"function\"><span class=\"title\">Condition</span><span class=\"params\">(Subst(Int(Part(lst, S(<span class=\"number\">1</span>)</span></span>), x), x, <span class=\"function\"><span class=\"title\">Log</span><span class=\"params\">(Part(lst, S(<span class=\"number\">2</span>)</span></span>)))/<span class=\"function\"><span class=\"title\">Part</span><span class=\"params\">(lst, S(<span class=\"number\">3</span>)</span></span>), ~(<span class=\"function\"><span class=\"title\">FalseQ</span><span class=\"params\">(lst)</span></span>)))\n    rule153 = <span class=\"function\"><span class=\"title\">ReplacementRule</span><span class=\"params\">(pattern153, fun153)</span></span></code></pre>",
  "id": "599f1e219acddb2407c5eb4f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-24T18:42:41.684Z",
  "text": "```\nInt[u_,x_Symbol] :=\n  With[{lst=FunctionOfLog[Cancel[x*u],x]},\n  1/lst[[3]]*Subst[Int[lst[[1]],x],x,Log[lst[[2]]]] /;\n Not[FalseQ[lst]]] /;\nNonsumQ[u]]\n```\nThis could be transformed into something like:\n```\n    pattern153 = Pattern(Integral(u_, x_), CustomConstraint(lambda u: NonsumQ(u)))\n    \n    def fun153(u, x):\n        lst = FunctionOfLog(Cancel(u*x), x))\n        return Condition(Subst(Int(Part(lst, S(1)), x), x, Log(Part(lst, S(2))))/Part(lst, S(3)), ~(FalseQ(lst))))\n    rule153 = ReplacementRule(pattern153, fun153)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Unfortunately Python&#39;s <code>lambda</code> does not support local variables or assignment to local variables, but a full function supports this kind of stuff",
  "id": "599f1e80162adb6d2e2e1167",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-24T18:44:16.822Z",
  "text": "Unfortunately Python's `lambda` does not support local variables or assignment to local variables, but a full function supports this kind of stuff",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-25T04:34:44.293Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<p>We can define functions, there are instances where another <code>With</code> is used inside<code>With</code>and both have different constraints. I am thinking of a way to take out all the constraints from <code>With</code> and merge them in <code>Pattern</code>. Then substitute the new variables in the transformed expression. Example:</p><pre><code class=\"mathematica\">Int[u_,x_Symbol] :=\n  <span class=\"keyword\">With</span>[<span class=\"list\">{lst=FunctionOfLog[Cancel[x*u],x]}</span>,\n  <span class=\"number\">1</span>/lst[[<span class=\"number\">3</span>]]*Subst[Int[lst[[<span class=\"number\">1</span>]],x],x,<span class=\"keyword\">Log</span>[lst[[<span class=\"number\">2</span>]]]] /;\n <span class=\"keyword\">Not</span>[FalseQ[lst]]] /;\nNonsumQ[u]]</code></pre><p>The above rule will get converted to:</p><pre><code class=\"mathematica\">Int[u_,x_Symbol] :=\n  <span class=\"number\">1</span>/FunctionOfLog[<span class=\"keyword\">Cancel</span>[x*u],x][[<span class=\"number\">3</span>]]*Subst[Int[FunctionOfLog[<span class=\"keyword\">Cancel</span>[x*u],x][[<span class=\"number\">1</span>]],x],x,<span class=\"keyword\">Log</span>[FunctionOfLog[<span class=\"keyword\">Cancel</span>[x*u],x][[<span class=\"number\">2</span>]]] /;\nNonsumQ[u]] &amp;&amp; <span class=\"keyword\">Not</span>[FalseQ[FunctionOfLog[<span class=\"keyword\">Cancel</span>[x*u],x]]]]</code></pre>",
  "id": "599fa862c101bc4e3a5430ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-25T04:32:34.431Z",
  "text": "We can define functions, there are instances where another `With` is used inside`With`and both have different constraints. I am thinking of a way to take out all the constraints from `With` and merge them in `Pattern`. Then substitute the new variables in the transformed expression. Example:\n```mathematica \nInt[u_,x_Symbol] :=\n  With[{lst=FunctionOfLog[Cancel[x*u],x]},\n  1/lst[[3]]*Subst[Int[lst[[1]],x],x,Log[lst[[2]]]] /;\n Not[FalseQ[lst]]] /;\nNonsumQ[u]]\n```\nThe above rule will get converted to:\n```mathematica\nInt[u_,x_Symbol] :=\n  1/FunctionOfLog[Cancel[x*u],x][[3]]*Subst[Int[FunctionOfLog[Cancel[x*u],x][[1]],x],x,Log[FunctionOfLog[Cancel[x*u],x][[2]]] /;\nNonsumQ[u]] && Not[FalseQ[FunctionOfLog[Cancel[x*u],x]]]]\n```",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Well, the purpose of the <code>With</code> expression is pretty clear in this context: don&#39;t call <code>FunctionOfLog</code> four times.",
  "id": "59a03aad76a757f808e16e35",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-08-25T14:56:45.038Z",
  "text": "Well, the purpose of the `With` expression is pretty clear in this context: don't call `FunctionOfLog` four times.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I mean, Python has some language design limitations by which <code>lambda</code> cannot have local variables.",
  "id": "59a03be8c101bc4e3a56b3a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T15:02:00.596Z",
  "text": "I mean, Python has some language design limitations by which `lambda` cannot have local variables.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Another alternative would be to use a double-lambda",
  "id": "59a03bf566c1c7c477de59b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T15:02:13.969Z",
  "text": "Another alternative would be to use a double-lambda",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "you can define <code>With</code> as something like",
  "id": "59a03c0166c1c7c477de59e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T15:02:25.373Z",
  "text": "you can define `With` as something like",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-25T15:05:21.286Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<pre><code class=\"python\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">With</span><span class=\"params\">(var_bindings, fun)</span>:</span>\n    fun(*var_bindings)\n\n[...] <span class=\"keyword\">lambda</span> x, u: With([FunctionOfLog(...)], <span class=\"keyword\">lambda</span> lst: [... rest of pattern ...])</code></pre>",
  "id": "59a03c91a7b406262dc795b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T15:04:49.497Z",
  "text": "```python\ndef With(var_bindings, fun):\n    fun(*var_bindings)\n\n[...] lambda x, u: With([FunctionOfLog(...)], lambda lst: [... rest of pattern ...])\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I&#39;m still convinced that the most readable form would be a full function.",
  "id": "59a03cc6bc46472974bff305",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T15:05:42.536Z",
  "text": "I'm still convinced that the most readable form would be a full function.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "The point remains that the simpler the generated code looks, the easier it is to read and debug the rules for other people",
  "id": "59a03ff4c101bc4e3a56c6e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T15:19:16.850Z",
  "text": "The point remains that the simpler the generated code looks, the easier it is to read and debug the rules for other people",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay, I will define function then.",
  "id": "59a05195614889d47587a3a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T16:34:29.294Z",
  "text": "Okay, I will define function then.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<p>I have updated the parsed such that this rule:</p><pre><code class=\"mathematica\">Int[x_^m_.*(a_+b_.*x_^n_)^p_,x_Symbol] :=\n  <span class=\"keyword\">With</span>[<span class=\"list\">{k=GCD[m+1,n]}</span>,\n  <span class=\"number\">1</span>/k*Subst[Int[x^((m+<span class=\"number\">1</span>)/k-<span class=\"number\">1</span>)*(a+b*x^(n/k))^p,x],x,x^k] /;\n k!=<span class=\"number\">1</span>] /;\n<span class=\"keyword\">FreeQ</span>[<span class=\"list\">{a,b,p}</span>,x] &amp;&amp; PositiveIntegerQ[n] &amp;&amp; <span class=\"keyword\">IntegerQ</span>[m]</code></pre><p>gets parsed into:</p><pre><code class=\"python\">    pattern1 = Pattern(Integral(x_**WC(<span class=\"string\">'m'</span>, S(<span class=\"number\">1</span>))*(a_ + x_**n_*WC(<span class=\"string\">'b'</span>, S(<span class=\"number\">1</span>)))**p_, x_), CustomConstraint(<span class=\"keyword\">lambda</span> a, x: FreeQ(a, x)), CustomConstraint(<span class=\"keyword\">lambda</span> b, x: FreeQ(b, x)), CustomConstraint(<span class=\"keyword\">lambda</span> p, x: FreeQ(p, x)), CustomConstraint(<span class=\"keyword\">lambda</span> n: PositiveIntegerQ(n)), CustomConstraint(<span class=\"keyword\">lambda</span> m: IntegerQ(m)), CustomConstraint(<span class=\"keyword\">lambda</span> m, n: Unequal(GCD(m + S(<span class=\"number\">1</span>), n), S(<span class=\"number\">1</span>))))\n    rule1 = ReplacementRule(pattern1, <span class=\"keyword\">lambda</span> m, x, p, b, n, a : With1(m, x, p, b, n, a))\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">With1</span><span class=\"params\">(m, x, p, b, n, a)</span>:</span>\n        k = GCD(m + <span class=\"number\">1</span>, n)\n        <span class=\"keyword\">return</span> Subst(Int(x**(-<span class=\"number\">1</span> + (m + <span class=\"number\">1</span>)/k)*(a + b*x**(n/k))**p, x), x, x**k)/k\n    rubi.add(rule1)</code></pre>",
  "id": "59a05ed0c101bc4e3a575cd7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T17:30:56.474Z",
  "text": "I have updated the parsed such that this rule:\n```mathematica\nInt[x_^m_.*(a_+b_.*x_^n_)^p_,x_Symbol] :=\n  With[{k=GCD[m+1,n]},\n  1/k*Subst[Int[x^((m+1)/k-1)*(a+b*x^(n/k))^p,x],x,x^k] /;\n k!=1] /;\nFreeQ[{a,b,p},x] && PositiveIntegerQ[n] && IntegerQ[m]\n```\ngets parsed into:\n```python\n    pattern1 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda m, n: Unequal(GCD(m + S(1), n), S(1))))\n    rule1 = ReplacementRule(pattern1, lambda m, x, p, b, n, a : With1(m, x, p, b, n, a))\n    def With1(m, x, p, b, n, a):\n        k = GCD(m + 1, n)\n        return Subst(Int(x**(-1 + (m + 1)/k)*(a + b*x**(n/k))**p, x), x, x**k)/k\n    rubi.add(rule1)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Note that the constraint of <code>With</code> is becoming a constraint of <code>Pattern</code>. ",
  "id": "59a05efdc101bc4e3a575e22",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T17:31:41.276Z",
  "text": "Note that the constraint of `With` is becoming a constraint of `Pattern`. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "OK, have you checked <code>Module</code> as well?",
  "id": "59a05f1a76a757f808e229a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T17:32:10.352Z",
  "text": "OK, have you checked `Module` as well?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "maybe the definition of <code>With1</code> should be put before <code>rule1</code>?",
  "id": "59a05f55ee5c9a4c5ffc0cdb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T17:33:09.073Z",
  "text": "maybe the definition of `With1` should be put before `rule1`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I see, so the expression <code>k = GCD[...]</code> has to be repeated twice (in the pattern and in the rule).",
  "id": "59a06009ee5c9a4c5ffc108a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T17:36:09.110Z",
  "text": "I see, so the expression `k = GCD[...]` has to be repeated twice (in the pattern and in the rule).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "The actual replacement was this: <code>Condition(Subst(Int(x**(-1 + (m + 1)/k)*(a + b*x**(n/k))**p, x), x, x**k)/k, Unequal(k, 1))</code>, I removed <code>Condition</code> and took <code>Unequal</code> out. Because, if the <code>Unequal(k, 1)</code> turned out to be <code>False</code>, then our integration would stop in between.",
  "id": "59a060c6578b44a046ea0e4a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T17:39:18.259Z",
  "text": "The actual replacement was this: `Condition(Subst(Int(x**(-1 + (m + 1)/k)*(a + b*x**(n/k))**p, x), x, x**k)/k, Unequal(k, 1))`, I removed `Condition` and took `Unequal` out. Because, if the `Unequal(k, 1)` turned out to be `False`, then our integration would stop in between.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I forgot to take <code>Module</code> into consideration. I will add support for <code>Module</code> too.",
  "id": "59a06174bc46472974c0a6ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T17:42:12.443Z",
  "text": "I forgot to take `Module` into consideration. I will add support for `Module` too.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-25T19:14:21.011Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Unwanted constraints are passing due to this issue(MatchPy considers this as <code>True</code>):<pre><code class=\"python\"><span class=\"prompt\">&gt;&gt;&gt; </span>~<span class=\"keyword\">True</span>\n-<span class=\"number\">2</span></code></pre>",
  "id": "59a0770666c1c7c477df73d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T19:14:14.042Z",
  "text": "Unwanted constraints are passing due to this issue(MatchPy considers this as `True`):\n```python\n>>> ~True\n-2\n```\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<code>~</code> is not really a logical negation",
  "id": "59a0773d76a757f808e29aa3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T19:15:09.125Z",
  "text": "`~` is not really a logical negation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "if I remember correctly, it flip the bits of the variable",
  "id": "59a077639acddb2407cbb0ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T19:15:47.880Z",
  "text": "if I remember correctly, it flip the bits of the variable",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<pre><code class=\"python\"><span class=\"prompt\">&gt;&gt;&gt; </span><span class=\"keyword\">from</span> sympy <span class=\"keyword\">import</span> *\n<span class=\"prompt\">&gt;&gt;&gt; </span>s = <span class=\"string\">'Not(f)'</span>\n<span class=\"prompt\">&gt;&gt;&gt; </span>sympify(s)\n~f</code></pre>",
  "id": "59a07786a7b406262dc8a147",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T19:16:22.560Z",
  "text": "```python \n>>> from sympy import *\n>>> s = 'Not(f)'\n>>> sympify(s)\n~f\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<code>True</code> is represented as 1, which in binary is <em>00000001</em>, if you reverse you get <em>11111110</em>, which I suppose is -2",
  "id": "59a077ad210ac26920bffb5c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T19:17:01.560Z",
  "text": "`True` is represented as 1, which in binary is _00000001_, if you reverse you get _11111110_, which I suppose is -2",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "hmmm... that&#39;s unfortunate",
  "id": "59a077baee5c9a4c5ffc81ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T19:17:14.233Z",
  "text": "hmmm... that's unfortunate",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "so it&#39;s related to the printers of SymPy, right?",
  "id": "59a077efbc46472974c10ff6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T19:18:07.894Z",
  "text": "so it's related to the printers of SymPy, right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<a href=\"http://docs.sympy.org/latest/modules/logic.html#sympy.logic.boolalg.Not\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.sympy.org/latest/modules/logic.html#sympy.logic.boolalg.Not</a>",
  "id": "59a0781eee5c9a4c5ffc830f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T19:18:54.368Z",
  "text": "http://docs.sympy.org/latest/modules/logic.html#sympy.logic.boolalg.Not",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.sympy.org/latest/modules/logic.html#sympy.logic.boolalg.Not"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I think so, I will modify the printer locally to fix this problem. ",
  "id": "59a0784ec101bc4e3a57d4b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T19:19:42.497Z",
  "text": "I think so, I will modify the printer locally to fix this problem. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "OK, you can do it like this:",
  "id": "59a07892bc46472974c112ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T19:20:50.965Z",
  "text": "OK, you can do it like this:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<pre><code class=\"python\"><span class=\"keyword\">from</span> sympy.printing <span class=\"keyword\">import</span> StrPrinter\nStrPrinter._print_Not = <span class=\"keyword\">lambda</span> self, expr: <span class=\"string\">\"Not(%s)\"</span> % sstr(expr.args[<span class=\"number\">0</span>])</code></pre>",
  "id": "59a078a5c101bc4e3a57d5ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T19:21:09.231Z",
  "text": "```python\nfrom sympy.printing import StrPrinter\nStrPrinter._print_Not = lambda self, expr: \"Not(%s)\" % sstr(expr.args[0])\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "if you run this instruction, the printer should be printing <code>Not(f)</code>",
  "id": "59a078ba614889d475885b0e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T19:21:30.827Z",
  "text": "if you run this instruction, the printer should be printing `Not(f)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "instead of <code>~f</code>",
  "id": "59a078c666c1c7c477df7af8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T19:21:42.687Z",
  "text": "instead of `~f`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Sorry, replace the line with this:<pre><code>StrPrinter._<span class=\"built_in\">print</span>_Not = lambda self, expr: <span class=\"string\">\"Not(%s)\"</span> % self._<span class=\"built_in\">print</span>(expr.args[<span class=\"number\">0</span>])</code></pre>",
  "id": "59a0795566c1c7c477df7d23",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T19:24:05.332Z",
  "text": "Sorry, replace the line with this:\n```\nStrPrinter._print_Not = lambda self, expr: \"Not(%s)\" % self._print(expr.args[0])\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "(otherwise you lose the settings about SymPy integers)",
  "id": "59a0796766c1c7c477df7da0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T19:24:23.851Z",
  "text": "(otherwise you lose the settings about SymPy integers)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Alternatively, there&#39;s SymPy&#39;s <code>not</code> operator",
  "id": "59a07aea162adb6d2e33f23f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T19:30:50.958Z",
  "text": "Alternatively, there's SymPy's `not` operator",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<code>not</code> is guaranteed to return a boolean",
  "id": "59a07af5c101bc4e3a57e042",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T19:31:01.986Z",
  "text": "`not` is guaranteed to return a boolean",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "SymPy&#39;s <code>Not</code> remains unevaluated if it cannot determine the truth of the expression",
  "id": "59a07b2966c1c7c477df85ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-25T19:31:53.225Z",
  "text": "SymPy's `Not` remains unevaluated if it cannot determine the truth of the expression",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay.",
  "id": "59a11708bc46472974c34617",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-26T06:36:56.460Z",
  "text": "Okay.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "For <code>exp()</code> issue, I don&#39;t think anything can be done form pattern matching standpoint. When the user gives <code>exp(x)</code> as input, we need to re-evaluate the expression to <code>E**x</code> every-time. Else, the user would have to make sure that he uses <code>Pow(S.Exp1, x, evaluate=True)</code>.",
  "id": "59a118289acddb2407cdfca1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-26T06:41:44.004Z",
  "text": "For `exp()` issue, I don't think anything can be done form pattern matching standpoint. When the user gives `exp(x)` as input, we need to re-evaluate the expression to `E**x` every-time. Else, the user would have to make sure that he uses `Pow(S.Exp1, x, evaluate=True)`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "we can add a converter in the definition",
  "id": "59a18337614889d4758c201e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-26T14:18:31.908Z",
  "text": "we can add a converter in the definition",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I hope that we will eventually switch to the <code>E**x</code> standard",
  "id": "59a1834bba0f0f6e38e5ff7a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-26T14:18:51.769Z",
  "text": "I hope that we will eventually switch to the `E**x` standard",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-26T21:09:50.419Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "",
  "id": "59a1e39719147ac32315fbe2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-26T21:09:43.941Z",
  "text": "",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span> <span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> can you add a report to the sympy wiki (it can be based on your final report that you submitted to google), and update the 2018 ideas page on the wiki with the current status of the project for future students?",
  "id": "59a1e3cb51915d962af8633a",
  "issues": [],
  "mentions": [
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   },
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-26T21:10:35.734Z",
  "text": "@Abdullahjavednesar @parsoyaarihant can you add a report to the sympy wiki (it can be based on your final report that you submitted to google), and update the 2018 ideas page on the wiki with the current status of the project for future students?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I guess it&#39;s time to merge the PR",
  "id": "59a489e49acddb2407db46fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-28T21:23:48.365Z",
  "text": "I guess it's time to merge the PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "can you bring the PR in a mergeable state?",
  "id": "59a48b30ee5c9a4c5f0c3c37",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-28T21:29:20.498Z",
  "text": "can you bring the PR in a mergeable state?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "i.e. make the tests pass?",
  "id": "59a48b3766c1c7c477ef4ddf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-28T21:29:27.022Z",
  "text": "i.e. make the tests pass?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "there is the decorator <code>@XFAIL</code> for tests that are expected to fail",
  "id": "59a48b52614889d475980f4a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-28T21:29:54.795Z",
  "text": "there is the decorator `@XFAIL` for tests that are expected to fail",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-29T14:24:46.402Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I have come across another issue in MatchPy(<span data-link-type=\"issue\" data-issue=\"26\" data-issue-repo=\"HPAC/matchpy\" class=\"issue\">HPAC/matchpy#26</span>), tests are not passing because of it.",
  "id": "59a578fa210ac26920d34c55",
  "issues": [
   {
    "number": "26",
    "repo": "HPAC/matchpy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-29T14:23:54.070Z",
  "text": "I have come across another issue in MatchPy(https://github.com/HPAC/matchpy/issues/26), tests are not passing because of it.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "you can put <code>@XFAIL</code> in front of the test function",
  "id": "59a585b8c101bc4e3a6b9a40",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-29T15:18:16.488Z",
  "text": "you can put `@XFAIL` in front of the test function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "it will prevent to fail the Travis tests even if the tests fail",
  "id": "59a585c7ba0f0f6e38f63bc2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-29T15:18:31.445Z",
  "text": "it will prevent to fail the Travis tests even if the tests fail",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would like to have the branch merged on September 5th",
  "id": "59a585dc8f4427b462af7f7a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-29T15:18:52.214Z",
  "text": "I would like to have the branch merged on September 5th",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "(even if it is not complete)",
  "id": "59a585e8ee5c9a4c5f107419",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-29T15:19:04.668Z",
  "text": "(even if it is not complete)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay.",
  "id": "59a586a3ee5c9a4c5f107704",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-29T15:22:11.304Z",
  "text": "Okay.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> , does not pass when I load all the rules since loading all of them takes &gt;10min. What should I do in this case? Shall I only load algebraic rules since the tests are also for algebraic rules for now?",
  "id": "59a9a17d614889d475aece6f",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-01T18:05:49.799Z",
  "text": "@Upabjojr , does not pass when I load all the rules since loading all of them takes >10min. What should I do in this case? Shall I only load algebraic rules since the tests are also for algebraic rules for now?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "OK",
  "id": "59a9a1a4ba0f0f6e3808c7b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-01T18:06:28.867Z",
  "text": "OK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "looks like a good temporary solution",
  "id": "59a9a1adb16f264642f6ddb3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-01T18:06:37.886Z",
  "text": "looks like a good temporary solution",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "technically we could just disable all tests in Travis",
  "id": "59a9a1cb66c1c7c477060d9a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-01T18:07:07.019Z",
  "text": "technically we could just disable all tests in Travis",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "this module still needs some work before it becomes usable",
  "id": "59a9a1db210ac26920e5fd7f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-01T18:07:23.242Z",
  "text": "this module still needs some work before it becomes usable",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Guys, the code is merged!",
  "id": "59a9fbf4162adb6d2e5b52fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-02T00:31:48.565Z",
  "text": "Guys, the code is merged!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span> , what happened about <code>Dist</code>?",
  "id": "59aa3b7a210ac26920e84031",
  "issues": [],
  "mentions": [
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-02T05:02:50.681Z",
  "text": "@Abdullahjavednesar , what happened about `Dist`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> is there a solution for repeated <code>lambda</code> definitions?",
  "id": "59aa4560bac826f054706f17",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-02T05:45:04.445Z",
  "text": "@parsoyaarihant is there a solution for repeated `lambda` definitions?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I mean, the code keeps repeating stuff like: <code>CustomConstraint(lambda a, x: FreeQ(a, x))</code>",
  "id": "59aa456e162adb6d2e5c412c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-02T05:45:18.824Z",
  "text": "I mean, the code keeps repeating stuff like: `CustomConstraint(lambda a, x: FreeQ(a, x))`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I don&#39;t know how MatchPy handles such expressions internally, but could it be that it fails to recognize that the condition is the same?",
  "id": "59aa45f0bc46472974ea0a78",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-02T05:47:28.211Z",
  "text": "I don't know how MatchPy handles such expressions internally, but could it be that it fails to recognize that the condition is the same?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I don&#39;t think this should happen. Can you tell me where this is occurring?",
  "id": "59aa4f54bc46472974ea2758",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-02T06:27:32.906Z",
  "text": "I don't think this should happen. Can you tell me where this is occurring?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "This could be a bug in parser itself.",
  "id": "59aa4f62ba0f0f6e380b4796",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-02T06:27:46.345Z",
  "text": "This could be a bug in parser itself.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> I had a talk with <span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> about it. I don&#39;t know how implement it? ",
  "id": "59aa576c8f4427b462c47594",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   },
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-02T07:02:04.882Z",
  "text": "@parsoyaarihant I had a talk with @Upabjojr about it. I don't know how implement it? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span>, we were trying to use gamma from mpmath but it doesn&#39;t takes sympy symbols as input? ",
  "id": "59aa5825bc46472974ea46e9",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-02T07:05:09.690Z",
  "text": "@Upabjojr, we were trying to use gamma from mpmath but it doesn't takes sympy symbols as input? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "my idea was to just redirect it to the addition",
  "id": "59aacac89acddb2407f61f02",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-02T15:14:16.120Z",
  "text": "my idea was to just redirect it to the addition",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "have you tried <code>Dist</code> that way?",
  "id": "59aacaddb16f264642fb156b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-02T15:14:37.156Z",
  "text": "have you tried `Dist` that way?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Implementing it the same way as it is in Mathematica would require some <code>sympy.core</code> hacking, which I would rather not do.",
  "id": "59aacafbee5c9a4c5f271ed3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-02T15:15:07.121Z",
  "text": "Implementing it the same way as it is in Mathematica would require some `sympy.core` hacking, which I would rather not do.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "it&#39;s best to understand how to go around its behaviour",
  "id": "59aacb0f8f4427b462c610e3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-02T15:15:27.310Z",
  "text": "it's best to understand how to go around its behaviour",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "I have added doctring <span data-link-type=\"issue\" data-issue=\"13251\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#13251</span> how to add sphinx documentation, can anyone help?",
  "id": "59abd25f66c1c7c4770dad8f",
  "issues": [
   {
    "number": "13251",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-03T09:58:55.640Z",
  "text": "I have added doctring [here](https://github.com/sympy/sympy/pull/13251) how to add sphinx documentation, can anyone help?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "There is a subdir about documentation with a subdir modules, or something similar",
  "id": "59ac15fbbc46472974f04800",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-03T14:47:23.209Z",
  "text": "There is a subdir about documentation with a subdir modules, or something similar",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"27\" data-issue-repo=\"HPAC/matchpy\" class=\"issue\">HPAC/matchpy#27</span>",
  "id": "59ac1dafbc46472974f0660d",
  "issues": [
   {
    "number": "27",
    "repo": "HPAC/matchpy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-03T15:20:15.369Z",
  "text": "https://github.com/HPAC/matchpy/issues/27",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> apparently the repetition of definitions has a negative effect on the speed of MatchPy",
  "id": "59ac1dc9ee5c9a4c5f2b8dcd",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-03T15:20:41.737Z",
  "text": "@parsoyaarihant apparently the repetition of definitions has a negative effect on the speed of MatchPy",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Can you try to fix it?",
  "id": "59ac278d8f4427b462ca8876",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-03T16:02:21.231Z",
  "text": "Can you try to fix it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Maybe the definitions of the same constraint should only appear once",
  "id": "59ac27aa9acddb2407fad0bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-03T16:02:50.224Z",
  "text": "Maybe the definitions of the same constraint should only appear once",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay, so you mean something like this? :  <pre><code class=\"python\">c1 = CustomConstraint(<span class=\"keyword\">lambda</span> a, x: FreeQ(a, x))\nc2 = CustomConstraint(<span class=\"keyword\">lambda</span> b, x: FreeQ(b, x))\npattern1 = Pattern(a*x, c1)\n...\npattern2 = Pattern(a + b*x, c1, c2)\n...</code></pre>",
  "id": "59ac315d8f4427b462caaf64",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-03T16:44:13.397Z",
  "text": "Okay, so you mean something like this? :  \n```python\nc1 = CustomConstraint(lambda a, x: FreeQ(a, x))\nc2 = CustomConstraint(lambda b, x: FreeQ(b, x))\npattern1 = Pattern(a*x, c1)\n...\npattern2 = Pattern(a + b*x, c1, c2)\n...\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "c1 and c2 are identical",
  "id": "59ac31ba8f4427b462cab097",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-03T16:45:46.038Z",
  "text": "c1 and c2 are identical",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Lambda doesn&#39;t care about the name of the variables",
  "id": "59ac31cb9acddb2407faf6c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-03T16:46:03.057Z",
  "text": "Lambda doesn't care about the name of the variables",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Or do they?",
  "id": "59ac31e766c1c7c4770f00d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-03T16:46:31.338Z",
  "text": "Or do they?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Anyway, apart from this doubt, that&#39;s what I mean.",
  "id": "59ac32489acddb2407faf8a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-03T16:48:08.119Z",
  "text": "Anyway, apart from this doubt, that's what I mean.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Use the same c1 whenever it occurs that FreeQ(a, )",
  "id": "59ac3290162adb6d2e62c4f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-03T16:49:20.250Z",
  "text": "Use the same c1 whenever it occurs that FreeQ(a, )",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "In MatchPy documentation it was written that we need to define the lambda variable name depending on the name of <code>Wildcard</code>.",
  "id": "59ac41abee5c9a4c5f2c19ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-03T17:53:47.583Z",
  "text": "In MatchPy documentation it was written that we need to define the lambda variable name depending on the name of `Wildcard`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Ok, I guess they use kwargs",
  "id": "59ac43abba0f0f6e3811ffa7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-03T18:02:19.564Z",
  "text": "Ok, I guess they use kwargs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> the idea of making the loaded rules pickle-able is a nice one",
  "id": "59ac8a63210ac26920f0188d",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-03T23:04:03.494Z",
  "text": "@parsoyaarihant the idea of making the loaded rules pickle-able is a nice one",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<a href=\"https://github.com/HPAC/matchpy/issues/27#issuecomment-326836568\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/HPAC/matchpy/issues/27#issuecomment-326836568</a>",
  "id": "59ac8a878f4427b462cbfa07",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-03T23:04:39.362Z",
  "text": "https://github.com/HPAC/matchpy/issues/27#issuecomment-326836568",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/HPAC/matchpy/issues/27#issuecomment-326836568"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "do you think it is possible?",
  "id": "59ac8a958f4427b462cbfa87",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-03T23:04:53.066Z",
  "text": "do you think it is possible?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> I had some checks and I believe we shouldn&#39;t use <code>lambda</code> objects in <code>CustomConstraint</code>",
  "id": "59acab14ba0f0f6e38136575",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-04T01:23:32.835Z",
  "text": "@parsoyaarihant I had some checks and I believe we shouldn't use `lambda` objects in `CustomConstraint`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "we need to define the <code>lambda</code>s as functions somewhere",
  "id": "59acab26614889d475b9a064",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-04T01:23:50.653Z",
  "text": "we need to define the `lambda`s as functions somewhere",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "(possibly in a separate file)",
  "id": "59acab2e614889d475b9a08e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-04T01:23:58.739Z",
  "text": "(possibly in a separate file)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "at this point we can use <code>pickle</code> to save the loaded rules to a pickle file",
  "id": "59acab3eee5c9a4c5f2d9319",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-04T01:24:14.531Z",
  "text": "at this point we can use `pickle` to save the loaded rules to a pickle file",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<code>pickle</code> cannot save lambdas to a file",
  "id": "59acab52bac826f05478c089",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-04T01:24:34.421Z",
  "text": "`pickle` cannot save lambdas to a file",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "using <code>pickle</code> should be much faster than loading the rules",
  "id": "59acab5e66c1c7c47710ae9f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-04T01:24:46.237Z",
  "text": "using `pickle` should be much faster than loading the rules",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<p>I can remove dependency from <code>lambda</code> by creating a subclass of MatchPy <code>Constraint</code>.</p><p>I can define another file which has all the constraints and import the constraints while generating rules. This will require some changes in the parser.</p>",
  "id": "59ad07269acddb2407fdfa2d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-04T07:56:22.200Z",
  "text": "I can remove dependency from `lambda` by creating a subclass of MatchPy `Constraint`.\n\nI can define another file which has all the constraints and import the constraints while generating rules. This will require some changes in the parser.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<p>This might take some time since my exams are coming up.</p><p>I will also add tools for converting  rubi <code>ManyToOneReplacer</code> into <code>pickle</code> so others can fix bugs.</p>",
  "id": "59ad086466c1c7c47711f8c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-04T08:01:40.846Z",
  "text": "This might take some time since my exams are coming up.\n\nI will also add tools for converting  rubi `ManyToOneReplacer` into `pickle` so others can fix bugs.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "OK",
  "id": "59ad5a9d210ac26920f358a0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-04T13:52:29.567Z",
  "text": "OK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "guys if you are opening PRs remember to ping me",
  "id": "59aee940162adb6d2e6e71b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-05T18:13:20.565Z",
  "text": "guys if you are opening PRs remember to ping me",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I don&#39;t always check the new PR",
  "id": "59aee94b8f4427b462d652a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-05T18:13:31.014Z",
  "text": "I don't always check the new PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay ",
  "id": "59af69eabac826f05484faec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-06T03:22:18.683Z",
  "text": "Okay ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "hey guys, the GSoC is kind of finished.",
  "id": "59b31266bc464729740fa496",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-08T21:57:58.764Z",
  "text": "hey guys, the GSoC is kind of finished.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Are you still working on RUBI?",
  "id": "59b31271ee5c9a4c5f4a474a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-08T21:58:09.663Z",
  "text": "Are you still working on RUBI?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Not currently, but I will remove the <code>lambad</code> constraints by next weekend after my exams. I will work on <code>pickle</code>and other things after that.",
  "id": "59b352ad614889d475d775c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-09T02:32:13.322Z",
  "text": "Not currently, but I will remove the `lambad` constraints by next weekend after my exams. I will work on `pickle`and other things after that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Thanks!",
  "id": "59b35c88210ac269200dadf1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-09T03:14:16.862Z",
  "text": "Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "Some work are yet incomplete, I will continue those after my exams are over.",
  "id": "59b3b254b59d55b823d620b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-09T09:20:20.708Z",
  "text": "Some work are yet incomplete, I will continue those after my exams are over.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Thanks",
  "id": "59b69926177fb9fe7ea8bda8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-11T14:09:42.133Z",
  "text": "Thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I think it will still take a while before it will be operational",
  "id": "59b69946bc464729741d68e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-11T14:10:14.251Z",
  "text": "I think it will still take a while before it will be operational",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I have pickled the rules : <span data-link-type=\"issue\" data-issue=\"13339\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#13339</span> ",
  "id": "59c767a5c101bc4e3a0093e1",
  "issues": [
   {
    "number": "13339",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-24T08:07:01.070Z",
  "text": "I have pickled the rules : https://github.com/sympy/sympy/pull/13339 ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "However I have used <code>dill</code> package which makes it possible to pickle <code>lambda</code> functions.",
  "id": "59c767cc32fc8b7e40347301",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-09-24T08:07:40.964Z",
  "text": "However I have used `dill` package which makes it possible to pickle `lambda` functions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Can  I use this room to discuss about RUBI ?",
  "id": "5a8a5d5f35dd17022ec27db3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-19T05:15:11.847Z",
  "text": "Can  I use this room to discuss about RUBI ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "yes ",
  "id": "5a8ae9c1888332ee3aa3d952",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-19T15:14:09.103Z",
  "text": "yes ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> . ",
  "id": "5a8af310c3c5f8b90dd8d1a6",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-19T15:53:52.163Z",
  "text": "Thanks @parsoyaarihant . ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "there are functions like <code>LogIntegral</code>,  <code>SinIntegral</code> etc in mathematica ",
  "id": "5a8af33f8f1c77ef3a29a174",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-19T15:54:39.473Z",
  "text": "there are functions like `LogIntegral`,  `SinIntegral` etc in mathematica ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "For LogIntgeral in sympy,  How about this implementation",
  "id": "5a8af35b6fba1a703a71fc69",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-19T15:55:07.091Z",
  "text": "For LogIntgeral in sympy,  How about this implementation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<pre><code><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">LogIntegral</span><span class=\"params\">(z)</span>:</span>\n    tx = symbols(<span class=\"string\">'tx'</span>)\n    <span class=\"keyword\">return</span> Integral(<span class=\"number\">1</span>/log(tx),(tx, <span class=\"number\">0</span>, z))</code></pre>",
  "id": "5a8af38153c1dbb7434c0357",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-19T15:55:45.512Z",
  "text": "```\ndef LogIntegral(z):\n    tx = symbols('tx')\n    return Integral(1/log(tx),(tx, 0, z))\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I can similarly implement other functions ",
  "id": "5a8af3998f1c77ef3a29a47a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-19T15:56:09.172Z",
  "text": "I can similarly implement other functions ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "As per definition that&#39;s correct, but do we need these for Rubi?",
  "id": "5a8afcaa35dd17022ec6c36c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-19T16:34:50.872Z",
  "text": "As per definition that's correct, but do we need these for Rubi?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I think yes , in several places in rules , It has been used.",
  "id": "5a8afcd78f1c77ef3a29e5cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-19T16:35:35.686Z",
  "text": "I think yes , in several places in rules , It has been used.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-02-19T16:37:00.066Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<pre><code>rule3 = ReplacementRule<span class=\"list\">(<span class=\"keyword\">pattern3</span>, lambda x, e, f, d : LogIntegral<span class=\"list\">(<span class=\"keyword\">d*</span><span class=\"list\">(<span class=\"keyword\">e</span> + f*x)</span>)</span>/<span class=\"list\">(<span class=\"keyword\">d*f</span>)</span>)</span></code></pre>",
  "id": "5a8afd22a2194eb80d858fcc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-19T16:36:50.490Z",
  "text": " ```\nrule3 = ReplacementRule(pattern3, lambda x, e, f, d : LogIntegral(d*(e + f*x))/(d*f))\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ashishkg0022\" class=\"mention\">@ashishkg0022</span> , Yes it is correct.",
  "id": "5a8bcfed6fba1a703a767f26",
  "issues": [],
  "mentions": [
   {
    "screenName": "ashishkg0022",
    "userId": "58bd696cd73408ce4f4eb85b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-20T07:36:13.911Z",
  "text": "@ashishkg0022 , Yes it is correct.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Are all the rules from RUBI have been imported ?  ",
  "id": "5a91645ae4ff28713abe96c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-02-24T13:10:50.965Z",
  "text": "Are all the rules from RUBI have been imported ?  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-02-24T13:16:37.702Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>I want to ask one more thing<br>for example , there is a rule in logarithms,  in which following line is written</p><pre><code><span class=\"keyword\">Condition</span>(((x*<span class=\"keyword\">Optional</span>(<span class=\"keyword\">Pattern</span>(f, <span class=\"keyword\">Blank</span>)) + <span class=\"keyword\">Optional</span>(<span class=\"keyword\">Pattern</span>(e, <span class=\"keyword\">Blank</span>)))**<span class=\"keyword\">Optional</span>(<span class=\"keyword\">Pattern</span>(pp, <span class=\"keyword\">Blank</span>))*<span class=\"keyword\">Optional</span>(<span class=\"keyword\">Pattern</span>(dd, <span class=\"keyword\">Blank</span>)))**<span class=\"keyword\">Optional</span>(<span class=\"keyword\">Pattern</span>(qq, <span class=\"keyword\">Blank</span>))*<span class=\"keyword\">Optional</span>(<span class=\"keyword\">Pattern</span>(cc, <span class=\"keyword\">Blank</span>)))))))</code></pre><p>Now  <code>Optional</code> is not defined.  So, I want to correct it , But how will I know which rule is this of original RUBI ?<br>How to search this rule in RUBI ?</p>",
  "id": "5a916500a2194eb80da905e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-02-24T13:13:36.143Z",
  "text": "I want to ask one more thing \nfor example , there is a rule in logarithms,  in which following line is written\n``` \nCondition(((x*Optional(Pattern(f, Blank)) + Optional(Pattern(e, Blank)))**Optional(Pattern(pp, Blank))*Optional(Pattern(dd, Blank)))**Optional(Pattern(qq, Blank))*Optional(Pattern(cc, Blank)))))))\n```\nNow  `Optional ` is not defined.  So, I want to correct it , But how will I know which rule is this of original RUBI ?\nHow to search this rule in RUBI ?",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<code>Optional</code> are used for default arguments in Mathematica for example if I have a pattern <code>a + b</code>(where <code>b</code> is optional) and expression <code>x</code>. Then we can get match <code>a -&gt; x, b -&gt; 0</code>. See: <a href=\"http://reference.wolfram.com/language/tutorial/OptionalAndDefaultArguments.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://reference.wolfram.com/language/tutorial/OptionalAndDefaultArguments.html</a>",
  "id": "5a9174e9e4ff28713abee130",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-02-24T14:21:29.932Z",
  "text": "`Optional` are used for default arguments in Mathematica for example if I have a pattern `a + b`(where `b` is optional) and expression `x`. Then we can get match `a -> x, b -> 0`. See: http://reference.wolfram.com/language/tutorial/OptionalAndDefaultArguments.html",
  "unread": false,
  "urls": [
   {
    "url": "http://reference.wolfram.com/language/tutorial/OptionalAndDefaultArguments.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "All the rules are not imported. Event though almost all of them can be convert to python through <code>parsetools</code>, only algebraic rules have been tested. Currently algebraic rules pass ~90% of the tests.",
  "id": "5a9176a66fba1a703a95c7fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-02-24T14:28:54.953Z",
  "text": "All the rules are not imported. Event though almost all of them can be convert to python through `parsetools`, only algebraic rules have been tested. Currently algebraic rules pass ~90% of the tests.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-02-26T07:29:16.536Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Sorry , for late reply .I am severely ill. So I could not work for about a week .<br>Actually I wanted to ask, something like this<br>for example <code>rule49</code> has some problem.  How will  I find that rule in RUBI code in mathematica. ?",
  "id": "5a93b6fbe4ff28713ac8c011",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-02-26T07:27:55.084Z",
  "text": "Sorry , for late reply .I am severely ill. So I could not work for about a week . \nActually I wanted to ask, something like this\nfor example `rule49` has some problem.  How will  I find that rule in RUBI code in mathematica. ?",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I dont think there is easy way to do this, I would get the pattern and constraints of <code>rule49</code> and try to find that rule manually. If the number of rules are less, then that rule will be in 49th position in the Mathematica file.",
  "id": "5a93d3858f1c77ef3a572841",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-02-26T09:29:41.850Z",
  "text": "I dont think there is easy way to do this, I would get the pattern and constraints of `rule49` and try to find that rule manually. If the number of rules are less, then that rule will be in 49th position in the Mathematica file.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> which version of Rubi did you work on last year? Was it 4.12?",
  "id": "5a93d5a4458cbde557cb3b78",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-02-26T09:38:44.919Z",
  "text": "@parsoyaarihant which version of Rubi did you work on last year? Was it 4.12?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "it was 4.10.8",
  "id": "5a93f49c6fba1a703aa0e63b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-02-26T11:50:52.089Z",
  "text": "it was 4.10.8",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span>  I think the prsent rubi rules in sympy have been parsed from this txt  <a href=\"https://raw.githubusercontent.com/Upabjojr/RUBI_integration_rules/master/RUBI_DownValues_FullForm.txt\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://raw.githubusercontent.com/Upabjojr/RUBI_integration_rules/master/RUBI_DownValues_FullForm.txt</a><br>How was it separated into different files as <code>binomial_products</code> , <code>linear_products</code> and so on ?",
  "id": "5aa2c92e6f8b4b99460aa4cd",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-09T17:49:34.308Z",
  "text": "@parsoyaarihant  I think the prsent rubi rules in sympy have been parsed from this txt  https://raw.githubusercontent.com/Upabjojr/RUBI_integration_rules/master/RUBI_DownValues_FullForm.txt\nHow was it separated into different files as `binomial_products` , `linear_products` and so on ?",
  "unread": false,
  "urls": [
   {
    "url": "https://raw.githubusercontent.com/Upabjojr/RUBI_integration_rules/master/RUBI_DownValues_FullForm.txt"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I loaded only <code>binomial_products</code>(from actual Rubi mathematica file) rules and then exported the <code>DownValues[]</code> in Mathematica.",
  "id": "5aa2dc6ef3f6d24c6857f68a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-09T19:11:42.345Z",
  "text": "I loaded only `binomial_products`(from actual Rubi mathematica file) rules and then exported the `DownValues[]` in Mathematica.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Mathematica can parse its own code, otherwise there is Mathics, though Mathis is far from being complete.",
  "id": "5aa3f56253c1dbb743c75cf6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-10T15:10:26.295Z",
  "text": "Mathematica can parse its own code, otherwise there is Mathics, though Mathis is far from being complete.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-12T07:27:52.497Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>I tried to generate  <code>FullForm[DownValues[]]</code> of a rule and check </p><pre><code><span class=\"name\">FullForm</span>[<span class=\"name\">DownValues</span>[\n  <span class=\"name\">Int</span>[(<span class=\"atom\">a_</span>. + <span class=\"atom\">b_</span>.*<span class=\"atom\">x_</span>)^<span class=\"atom\">m_</span>, <span class=\"atom\">x_Symbol</span>] := (<span class=\"atom\">a</span> + <span class=\"atom\">b</span>*<span class=\"atom\">x</span>)^(<span class=\"atom\">m</span> + <span class=\"number\">1</span>)/(<span class=\"atom\">b</span>*(<span class=\"atom\">m</span> + <span class=\"number\">1</span>)) /;\n     <span class=\"name\">FreeQ</span>[{<span class=\"atom\">a</span>, <span class=\"atom\">b</span>, <span class=\"atom\">m</span>}, <span class=\"atom\">x</span>] &amp;&amp; <span class=\"name\">NeQ</span>[<span class=\"atom\">m</span>, -<span class=\"number\">1</span>]\n  ]]</code></pre><p>I got this</p><pre><code><span class=\"name\">DownValues</span>[<span class=\"name\">SetDelayed</span>[<span class=\"name\">Int</span>[<span class=\"name\">Power</span>[<span class=\"name\">Plus</span>[<span class=\"name\">Optional</span>[<span class=\"name\">Pattern</span>[<span class=\"atom\">a</span>,<span class=\"name\">Blank</span>[]]],<span class=\"name\">Times</span>[<span class=\"name\">Optional</span>[<span class=\"name\">Pattern</span>[<span class=\"atom\">b</span>,<span class=\"name\">Blank</span>[]]],<span class=\"name\">Pattern</span>[<span class=\"atom\">x</span>,<span class=\"name\">Blank</span>[]]]],<span class=\"name\">Pattern</span>[<span class=\"atom\">m</span>,<span class=\"name\">Blank</span>[]]],<span class=\"name\">Pattern</span>[<span class=\"atom\">x</span>,<span class=\"name\">Blank</span>[<span class=\"name\">Symbol</span>]]],<span class=\"name\">Condition</span>[<span class=\"name\">Times</span>[<span class=\"name\">Power</span>[<span class=\"name\">Plus</span>[<span class=\"atom\">a</span>,<span class=\"name\">Times</span>[<span class=\"atom\">b</span>,<span class=\"atom\">x</span>]],<span class=\"name\">Plus</span>[<span class=\"atom\">m</span>,<span class=\"number\">1</span>]],<span class=\"name\">Power</span>[<span class=\"name\">Times</span>[<span class=\"atom\">b</span>,<span class=\"name\">Plus</span>[<span class=\"atom\">m</span>,<span class=\"number\">1</span>]],-<span class=\"number\">1</span>]],<span class=\"name\">And</span>[<span class=\"name\">FreeQ</span>[<span class=\"name\">List</span>[<span class=\"atom\">a</span>,<span class=\"atom\">b</span>,<span class=\"atom\">m</span>],<span class=\"atom\">x</span>],<span class=\"name\">NeQ</span>[<span class=\"atom\">m</span>,-<span class=\"number\">1</span>]]]]]</code></pre><p>Is this correct way of generating the DownValues  ?? Or am I missing something ?</p>",
  "id": "5aa62bc727c509a77451812c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-12T07:27:03.938Z",
  "text": "I tried to generate  `FullForm[DownValues[]]` of a rule and check \n```\nFullForm[DownValues[\n  Int[(a_. + b_.*x_)^m_, x_Symbol] := (a + b*x)^(m + 1)/(b*(m + 1)) /;\n \tFreeQ[{a, b, m}, x] && NeQ[m, -1]\n  ]]\n```\nI got this\n```\nDownValues[SetDelayed[Int[Power[Plus[Optional[Pattern[a,Blank[]]],Times[Optional[Pattern[b,Blank[]]],Pattern[x,Blank[]]]],Pattern[m,Blank[]]],Pattern[x,Blank[Symbol]]],Condition[Times[Power[Plus[a,Times[b,x]],Plus[m,1]],Power[Times[b,Plus[m,1]],-1]],And[FreeQ[List[a,b,m],x],NeQ[m,-1]]]]]\n```\nIs this correct way of generating the DownValues  ?? Or am I missing something ?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Yes, that&#39;s the correct way",
  "id": "5aa63a09c3c5f8b90d5ff069",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-12T08:27:53.938Z",
  "text": "Yes, that's the correct way",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the <code>FullForm</code> is simply the abstract syntax tree of the expression",
  "id": "5aa63a238f1c77ef3aae4d1e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-12T08:28:19.283Z",
  "text": "the `FullForm` is simply the abstract syntax tree of the expression",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "so things like <code>a+b</code> will be represented like <code>Plus[a, b]</code>",
  "id": "5aa63a3727c509a77451c5c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-12T08:28:39.261Z",
  "text": "so things like `a+b` will be represented like `Plus[a, b]`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "despite looking much longer, it is actually easier to parse",
  "id": "5aa63a4b0a1614b7120d30a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-12T08:28:59.004Z",
  "text": "despite looking much longer, it is actually easier to parse",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "because there are neither operators nor precedence rules anymore",
  "id": "5aa63a66e4d1c63604ed19be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-12T08:29:26.036Z",
  "text": "because there are neither operators nor precedence rules anymore",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "But I am unable to parse it using <code>parsetools</code> .  I ran something like this<pre><code class=\"python\"><span class=\"prompt\">&gt;&gt;&gt; </span>rules = rubi_rule_parser(<span class=\"string\">\"SetDelayed[Int[Power[Plus[Optional[Pattern[a,Blank[]]],Times[Optional[Pattern[b,Blank[]]],Pattern[x,Blank[]]]],Pattern[m,Blank[]]],Pattern[x,Blank[Symbol]]],Condition[Times[Power[Plus[a,Times[b,x]],Plus[m,1]],Power[Times[b,Plus[m,1]],-1]],And[FreeQ[List[a,b,m],x],NeQ[m,-1]]]]\"</span>, header)\n<span class=\"prompt\">&gt;&gt;&gt; </span>print(rules)\n<span class=\"keyword\">from</span> matchpy <span class=\"keyword\">import</span> Operation, CommutativeOperation\n    rubi = ManyToOneReplacer()\n    <span class=\"keyword\">return</span> rubi</code></pre>",
  "id": "5aa64a13a60157d62fd8b858",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-12T09:36:19.840Z",
  "text": "But I am unable to parse it using `parsetools` .  I ran something like this\n```python\n>>> rules = rubi_rule_parser(\"SetDelayed[Int[Power[Plus[Optional[Pattern[a,Blank[]]],Times[Optional[Pattern[b,Blank[]]],Pattern[x,Blank[]]]],Pattern[m,Blank[]]],Pattern[x,Blank[Symbol]]],Condition[Times[Power[Plus[a,Times[b,x]],Plus[m,1]],Power[Times[b,Plus[m,1]],-1]],And[FreeQ[List[a,b,m],x],NeQ[m,-1]]]]\", header)\n>>> print(rules)\nfrom matchpy import Operation, CommutativeOperation\n    rubi = ManyToOneReplacer()\n    return rubi\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "What am I missing ? ",
  "id": "5aa64a32458cbde557243fc0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-12T09:36:50.704Z",
  "text": "What am I missing ? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-12T11:10:39.737Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "What is the difference between <code>RuleDelayed</code> and <code>SetDelayed</code> ??",
  "id": "5aa6601de4ff28713a214610",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-12T11:10:21.967Z",
  "text": "What is the difference between `RuleDelayed` and `SetDelayed` ??",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Also the current version of RUBI  4.14.7 has many changes. Will the parsetools be able to take care of those ?<br>Should we stick to a version untill rubi in sympy is in a stable and working condition  ?",
  "id": "5aa66839f3f6d24c6866074d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-12T11:44:57.167Z",
  "text": "Also the current version of RUBI  4.14.7 has many changes. Will the parsetools be able to take care of those ? \nShould we stick to a version untill rubi in sympy is in a stable and working condition  ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Yes, please choose a single version to work on. We need to first make RUBI work correctly, no time to keep updating it.",
  "id": "5aa8cd9da60157d62fe59838",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-14T07:22:05.923Z",
  "text": "Yes, please choose a single version to work on. We need to first make RUBI work correctly, no time to keep updating it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<a href=\"http://reference.wolfram.com/language/ref/SetDelayed.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://reference.wolfram.com/language/ref/SetDelayed.html</a>",
  "id": "5aa8cdb66f8b4b994625596d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-14T07:22:30.973Z",
  "text": "http://reference.wolfram.com/language/ref/SetDelayed.html",
  "unread": false,
  "urls": [
   {
    "url": "http://reference.wolfram.com/language/ref/SetDelayed.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<a href=\"http://reference.wolfram.com/language/ref/RuleDelayed.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://reference.wolfram.com/language/ref/RuleDelayed.html</a>",
  "id": "5aa8cdbc35dd17022e59406d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-14T07:22:36.320Z",
  "text": "http://reference.wolfram.com/language/ref/RuleDelayed.html",
  "unread": false,
  "urls": [
   {
    "url": "http://reference.wolfram.com/language/ref/RuleDelayed.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "for Mathematica&#39;s commands just look at the API reference",
  "id": "5aa8cdd2f3f6d24c68723913",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-14T07:22:58.443Z",
  "text": "for Mathematica's commands just look at the API reference",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span>  Can you send me the version 4.10.8 of RUBI . So that, I an see what changes has been made.",
  "id": "5aa8d14cc3c5f8b90d6d565b",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-14T07:37:48.937Z",
  "text": "@parsoyaarihant  Can you send me the version 4.10.8 of RUBI . So that, I an see what changes has been made.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span>  Should I work on 4.10.8 or 4.14.7 ?",
  "id": "5aa8d2d253c1dbb743dd6a84",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-14T07:44:18.341Z",
  "text": "@Upabjojr  Should I work on 4.10.8 or 4.14.7 ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "The dependence on the version should mostly impact the utility functions. That is, in the newer versions new utility functions are implemented.",
  "id": "5aa942196f8b4b994627e2b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-14T15:39:05.563Z",
  "text": "The dependence on the version should mostly impact the utility functions. That is, in the newer versions new utility functions are implemented.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Notice that our purpose is to create a tool that automatically generates the code given any RUBI version. You should focus on the parsing tools and code generator. We are not going to manually edit the generated rules.",
  "id": "5aa94266e4ff28713a30711d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-14T15:40:22.700Z",
  "text": "Notice that our purpose is to create a tool that automatically generates the code given any RUBI version. You should focus on the parsing tools and code generator. We are not going to manually edit the generated rules.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-15T19:40:21.365Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>A new bug is that parsetools is not working . We need to create proper tests for parsetools,  because  it depends on other part of sympy code and any changes may affect it . Like the following example<br>I tried to generate the rules for old version,  (which worked last year)</p><pre><code>parsing rule 1\nparsing rule 2\nparsing rule 3\nparsing rule 4\nparsing rule 5\nparsing rule 6\nparsing rule 7\nparsing rule 8\nparsing rule 9\nparsing rule 10\nparsing rule 11\nparsing rule 12\nTraceback (most recent <span class=\"operator\"><span class=\"keyword\">call</span> <span class=\"keyword\">last</span>):\n  File <span class=\"string\">\"&lt;stdin&gt;\"</span>, line <span class=\"number\">1</span>, <span class=\"keyword\">in</span> &lt;<span class=\"keyword\">module</span>&gt;\n  File <span class=\"string\">\"/home/ashish/sympy/sympy/integrals/rubi/parsetools/parse.py\"</span>, line <span class=\"number\">442</span>, <span class=\"keyword\">in</span> rubi_rule_parser\n    result = downvalues_rules(rules, header).strip() + <span class=\"string\">'\\n'</span>\n  File <span class=\"string\">\"/home/ashish/sympy/sympy/integrals/rubi/parsetools/parse.py\"</span>, line <span class=\"number\">352</span>, <span class=\"keyword\">in</span> downvalues_rules\n    constriant = divide_constraint(i[<span class=\"number\">2</span>][<span class=\"number\">2</span>], free_symbols) # separate <span class=\"keyword\">And</span> <span class=\"keyword\">constraints</span> <span class=\"keyword\">into</span> individual <span class=\"keyword\">constraints</span>\n  File <span class=\"string\">\"/home/ashish/sympy/sympy/integrals/rubi/parsetools/parse.py\"</span>, line <span class=\"number\">267</span>, <span class=\"keyword\">in</span> divide_constraint\n    result = [_divide_constriant(i, symbols) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> s[<span class=\"number\">1</span>:] <span class=\"keyword\">if</span> i[<span class=\"number\">0</span>]!=<span class=\"string\">'FreeQ'</span>]\n  File <span class=\"string\">\"/home/ashish/sympy/sympy/integrals/rubi/parsetools/parse.py\"</span>, line <span class=\"number\">267</span>, <span class=\"keyword\">in</span> &lt;listcomp&gt;\n    result = [_divide_constriant(i, symbols) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> s[<span class=\"number\">1</span>:] <span class=\"keyword\">if</span> i[<span class=\"number\">0</span>]!=<span class=\"string\">'FreeQ'</span>]\n  File <span class=\"string\">\"/home/ashish/sympy/sympy/integrals/rubi/parsetools/parse.py\"</span>, line <span class=\"number\">255</span>, <span class=\"keyword\">in</span> _divide_constriant\n    <span class=\"keyword\">return</span> <span class=\"string\">'CustomConstraint(lambda {}: {})'</span>.<span class=\"keyword\">format</span>(<span class=\"string\">', '</span>.<span class=\"keyword\">join</span>(lambda_symbols), sstr(sympify(generate_sympy_from_parsed(s)), sympy_integers=<span class=\"literal\">True</span>))\n  File <span class=\"string\">\"/home/ashish/sympy/sympy/core/sympify.py\"</span>, line <span class=\"number\">368</span>, <span class=\"keyword\">in</span> sympify\n    expr = parse_expr(a, local_dict=locals, transformations=transformations, evaluate=evaluate)\n  File <span class=\"string\">\"/home/ashish/sympy/sympy/parsing/sympy_parser.py\"</span>, line <span class=\"number\">950</span>, <span class=\"keyword\">in</span> parse_expr\n    <span class=\"keyword\">return</span> eval_expr(code, local_dict, global_dict)\n  File <span class=\"string\">\"/home/ashish/sympy/sympy/parsing/sympy_parser.py\"</span>, line <span class=\"number\">863</span>, <span class=\"keyword\">in</span> eval_expr\n    code, global_dict, local_dict)  # take <span class=\"keyword\">local</span> objects <span class=\"keyword\">in</span> preference\n  File <span class=\"string\">\"&lt;string&gt;\"</span>, line <span class=\"number\">1</span>, <span class=\"keyword\">in</span> &lt;<span class=\"keyword\">module</span>&gt;\n  File <span class=\"string\">\"/home/ashish/sympy/sympy/core/operations.py\"</span>, line <span class=\"number\">411</span>, <span class=\"keyword\">in</span> __new__\n    _args = frozenset(cls._new_args_filter(args))\n  File <span class=\"string\">\"/home/ashish/sympy/sympy/logic/boolalg.py\"</span>, line <span class=\"number\">532</span>, <span class=\"keyword\">in</span> _new_args_filter\n    args = BooleanFunction.binary_check_and_simplify(*args)\n  File <span class=\"string\">\"/home/ashish/sympy/sympy/logic/boolalg.py\"</span>, line <span class=\"number\">433</span>, <span class=\"keyword\">in</span> binary_check_and_simplify\n    args = [as_Boolean(i) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> args]\n  File <span class=\"string\">\"/home/ashish/sympy/sympy/logic/boolalg.py\"</span>, line <span class=\"number\">433</span>, <span class=\"keyword\">in</span> &lt;listcomp&gt;\n    args = [as_Boolean(i) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> args]\n  File <span class=\"string\">\"/home/ashish/sympy/sympy/logic/boolalg.py\"</span>, line <span class=\"number\">52</span>, <span class=\"keyword\">in</span> as_Boolean\n    raise TypeError(<span class=\"string\">'expecting bool or Boolean, not `%s`.'</span> % e)\nTypeError: expecting bool <span class=\"keyword\">or</span> <span class=\"built_in\">Boolean</span>, <span class=\"keyword\">not</span> <span class=\"string\">`PositiveQ(a)`</span>.</span></code></pre><p>It correctly parses till rule 11. But <code>boolalg.py</code> has some changes later,  which affected rule 12 .</p>",
  "id": "5aaacb8927c509a77468affa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-15T19:37:45.243Z",
  "text": "A new bug is that parsetools is not working . We need to create proper tests for parsetools,  because  it depends on other part of sympy code and any changes may affect it . Like the following example\nI tried to generate the rules for old version,  (which worked last year)\n```\nparsing rule 1\nparsing rule 2\nparsing rule 3\nparsing rule 4\nparsing rule 5\nparsing rule 6\nparsing rule 7\nparsing rule 8\nparsing rule 9\nparsing rule 10\nparsing rule 11\nparsing rule 12\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/ashish/sympy/sympy/integrals/rubi/parsetools/parse.py\", line 442, in rubi_rule_parser\n    result = downvalues_rules(rules, header).strip() + '\\n'\n  File \"/home/ashish/sympy/sympy/integrals/rubi/parsetools/parse.py\", line 352, in downvalues_rules\n    constriant = divide_constraint(i[2][2], free_symbols) # separate And constraints into individual constraints\n  File \"/home/ashish/sympy/sympy/integrals/rubi/parsetools/parse.py\", line 267, in divide_constraint\n    result = [_divide_constriant(i, symbols) for i in s[1:] if i[0]!='FreeQ']\n  File \"/home/ashish/sympy/sympy/integrals/rubi/parsetools/parse.py\", line 267, in <listcomp>\n    result = [_divide_constriant(i, symbols) for i in s[1:] if i[0]!='FreeQ']\n  File \"/home/ashish/sympy/sympy/integrals/rubi/parsetools/parse.py\", line 255, in _divide_constriant\n    return 'CustomConstraint(lambda {}: {})'.format(', '.join(lambda_symbols), sstr(sympify(generate_sympy_from_parsed(s)), sympy_integers=True))\n  File \"/home/ashish/sympy/sympy/core/sympify.py\", line 368, in sympify\n    expr = parse_expr(a, local_dict=locals, transformations=transformations, evaluate=evaluate)\n  File \"/home/ashish/sympy/sympy/parsing/sympy_parser.py\", line 950, in parse_expr\n    return eval_expr(code, local_dict, global_dict)\n  File \"/home/ashish/sympy/sympy/parsing/sympy_parser.py\", line 863, in eval_expr\n    code, global_dict, local_dict)  # take local objects in preference\n  File \"<string>\", line 1, in <module>\n  File \"/home/ashish/sympy/sympy/core/operations.py\", line 411, in __new__\n    _args = frozenset(cls._new_args_filter(args))\n  File \"/home/ashish/sympy/sympy/logic/boolalg.py\", line 532, in _new_args_filter\n    args = BooleanFunction.binary_check_and_simplify(*args)\n  File \"/home/ashish/sympy/sympy/logic/boolalg.py\", line 433, in binary_check_and_simplify\n    args = [as_Boolean(i) for i in args]\n  File \"/home/ashish/sympy/sympy/logic/boolalg.py\", line 433, in <listcomp>\n    args = [as_Boolean(i) for i in args]\n  File \"/home/ashish/sympy/sympy/logic/boolalg.py\", line 52, in as_Boolean\n    raise TypeError('expecting bool or Boolean, not `%s`.' % e)\nTypeError: expecting bool or Boolean, not `PositiveQ(a)`.\n```\n\n\nIt correctly parses till rule 11. But `boolalg.py` has some changes later,  which affected rule 12 .",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span>  what do you think ?",
  "id": "5aaacba50a1614b712246683",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-15T19:38:13.745Z",
  "text": "@parsoyaarihant  what do you think ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "it is unable to evaluate <code>PositiveQ(a)</code> as boolean.",
  "id": "5aaaed49e4ff28713a38dc82",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-15T22:01:45.871Z",
  "text": "it is unable to evaluate `PositiveQ(a)` as boolean.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "did you try to debug it?",
  "id": "5aaaed5f6f8b4b9946301a64",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-15T22:02:07.915Z",
  "text": "did you try to debug it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Actually that is a string <code>&#39;PositiveQ(a)&#39;</code> .",
  "id": "5aab35250a1614b712261a42",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T03:08:21.051Z",
  "text": "Actually that is a string ` 'PositiveQ(a)' ` .",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I will try to debug it.",
  "id": "5aab35a427c509a7746a6e61",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T03:10:28.821Z",
  "text": "I will try to debug it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "if you use IPython or Jupyter you can easily do it with <code>%pdb</code>",
  "id": "5aab9c6da60157d62ff35686",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T10:29:01.405Z",
  "text": "if you use IPython or Jupyter you can easily do it with `%pdb`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "it&#39;s nice, whenever there is an exception it stops the execution and lets you see the variable values",
  "id": "5aab9c89c3c5f8b90d7b14d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T10:29:29.547Z",
  "text": "it's nice, whenever there is an exception it stops the execution and lets you see the variable values",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Thanks , I will try to fix it.",
  "id": "5aab9ccebb1018b37aee8d59",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T10:30:38.555Z",
  "text": "Thanks , I will try to fix it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "also always check if the return values are the same as in Mathematica",
  "id": "5aab9ce835dd17022e66f1f6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T10:31:04.250Z",
  "text": "also always check if the return values are the same as in Mathematica",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "what is the output of <code>PositiveQ(a)</code> in Mathematica?",
  "id": "5aab9cfbf3f6d24c687f9305",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T10:31:23.516Z",
  "text": "what is the output of `PositiveQ(a)` in Mathematica?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<code>PositiveQ[u] returns True if u is a positive numeric quantity, else returns False.</code><br>But will it matter in this ? As boolean is compared with string. ",
  "id": "5aab9d51e4ff28713a3bc278",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T10:32:49.769Z",
  "text": "` PositiveQ[u] returns True if u is a positive numeric quantity, else returns False.`\nBut will it matter in this ? As boolean is compared with string. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "compared to string?",
  "id": "5aab9d9735dd17022e66f782",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T10:33:59.861Z",
  "text": "compared to string?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Sorry , I think I missed some thing. ",
  "id": "5aab9e89f3f6d24c687f9d99",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T10:38:01.325Z",
  "text": "Sorry , I think I missed some thing. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "If I am hardcoding <code>PositiveQ(a)</code> to only return <code>True</code> , which is boolean,  then also the same error is coming",
  "id": "5aab9f1cbb1018b37aee9b72",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T10:40:28.008Z",
  "text": "If I am hardcoding `PositiveQ(a)` to only return `True` , which is boolean,  then also the same error is coming",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "did you reload Python?",
  "id": "5aab9f9127c509a7746c3b4f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T10:42:25.676Z",
  "text": "did you reload Python?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Python does not load the libraries more than once, usually",
  "id": "5aab9fa56f8b4b9946330834",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T10:42:45.456Z",
  "text": "Python does not load the libraries more than once, usually",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Yes I have reloaded",
  "id": "5aab9fd48f1c77ef3ac8f2af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T10:43:32.253Z",
  "text": "Yes I have reloaded",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "debugging?",
  "id": "5aaba010bb1018b37aeea548",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T10:44:32.425Z",
  "text": "debugging?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<pre><code><span class=\"title\">ipdb</span>&gt; <span class=\"typedef\"><span class=\"keyword\">type</span><span class=\"container\">(<span class=\"title\">e</span>)</span></span>\n<span class=\"type\">PositiveQ</span></code></pre>",
  "id": "5aaba1e5e4d1c6360407aa43",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T10:52:21.525Z",
  "text": "```\nipdb> type(e)\nPositiveQ\n```\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "that&#39;s strange",
  "id": "5aaba24a35dd17022e670f17",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T10:54:02.399Z",
  "text": "that's strange",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<a href=\"https://github.com/sympy/sympy/blob/d7924162426296a93e3218e21bfe637cc4c8f1b9/sympy/integrals/rubi/utility_function.py#L233\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/blob/d7924162426296a93e3218e21bfe637cc4c8f1b9/sympy/integrals/rubi/utility_function.py#L233</a>",
  "id": "5aaba24ca60157d62ff37866",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T10:54:04.432Z",
  "text": "https://github.com/sympy/sympy/blob/d7924162426296a93e3218e21bfe637cc4c8f1b9/sympy/integrals/rubi/utility_function.py#L233",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/d7924162426296a93e3218e21bfe637cc4c8f1b9/sympy/integrals/rubi/utility_function.py#L233"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<code>PositiveQ</code> should be a function, not a class",
  "id": "5aaba25535dd17022e670f44",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T10:54:13.255Z",
  "text": "`PositiveQ` should be a function, not a class",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Is <code>PositiveQ</code> redefined somewhere while execution ? ",
  "id": "5aaba259a60157d62ff378af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T10:54:17.107Z",
  "text": "Is `PositiveQ` redefined somewhere while execution ? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Currently I also have to work on my proposal. I am lagging in my proposal draft :worried: ",
  "id": "5aaba2fe27c509a7746c4ce5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T10:57:02.618Z",
  "text": "Currently I also have to work on my proposal. I am lagging in my proposal draft :worried: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "make sure you finish before the deadline, Google does not allow delays",
  "id": "5aaba326c3c5f8b90d7b3dac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T10:57:42.615Z",
  "text": "make sure you finish before the deadline, Google does not allow delays",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I will try to debug this. ",
  "id": "5aaba35ff3f6d24c687fb5fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T10:58:39.678Z",
  "text": "I will try to debug this. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "you can get the definition line with <code>inspect</code> somehow",
  "id": "5aaba3e0f3f6d24c687fb8eb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T11:00:48.552Z",
  "text": "you can get the definition line with `inspect` somehow",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "For all the starting 11 rules . Execution does not enter this part. ",
  "id": "5aaba46b458cbde5573f4d23",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T11:03:07.240Z",
  "text": "For all the starting 11 rules . Execution does not enter this part. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ashishkg0022\" class=\"mention\">@ashishkg0022</span> I had a quick check. Apparently it&#39;s creating a <code>Function(&quot;PositiveQ&quot;)(a)</code> object. It shouldn&#39;t, because <code>PositiveQ</code> is a utility function.",
  "id": "5aabbcd4a60157d62ff40495",
  "issues": [],
  "mentions": [
   {
    "screenName": "ashishkg0022",
    "userId": "58bd696cd73408ce4f4eb85b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T12:47:16.251Z",
  "text": "@ashishkg0022 I had a quick check. Apparently it's creating a `Function(\"PositiveQ\")(a)` object. It shouldn't, because `PositiveQ` is a utility function.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> what is the correct way to call the parser? or is this a bug with the newer RUBI version?",
  "id": "5aabbd0535dd17022e679bc2",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T12:48:05.720Z",
  "text": "@parsoyaarihant what is the correct way to call the parser? or is this a bug with the newer RUBI version?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I am running it on older version (4.10.8) which was used last year. Its due to some changes in <code>boolalg.py</code> or in other part of sympy&#39;s code.",
  "id": "5aabbd5cf3f6d24c688035ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T12:49:32.750Z",
  "text": "I am running it on older version (4.10.8) which was used last year. Its due to some changes in `boolalg.py` or in other part of sympy's code.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "well this looks like a parsing bug",
  "id": "5aabbd70e4ff28713a3c7331",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T12:49:52.881Z",
  "text": "well this looks like a parsing bug",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the parser should not create a SymPy function called <code>PositiveQ</code>",
  "id": "5aabbd8535dd17022e679ee5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T12:50:13.151Z",
  "text": "the parser should not create a SymPy function called `PositiveQ`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I&#39;ve made some rewriting to the parsetools:",
  "id": "5aabd639e4d1c6360408d535",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T14:35:37.388Z",
  "text": "I've made some rewriting to the parsetools:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"14519\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#14519</span>",
  "id": "5aabd63af3f6d24c6880c273",
  "issues": [
   {
    "number": "14519",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T14:35:38.329Z",
  "text": "https://github.com/sympy/sympy/pull/14519",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Thanks for the Mathematica part in the docstrings in this rewriting. It will help newcomers to contribute.",
  "id": "5aac00ac6f8b4b9946353221",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-16T17:36:44.267Z",
  "text": "Thanks for the Mathematica part in the docstrings in this rewriting. It will help newcomers to contribute.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ashishkg0022\" class=\"mention\">@ashishkg0022</span>  , can you send the rule which is giving errors in Mathematica format? I can investigate into the cause of the issue.",
  "id": "5ab279d1a60157d62f1237d6",
  "issues": [],
  "mentions": [
   {
    "screenName": "ashishkg0022",
    "userId": "58bd696cd73408ce4f4eb85b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-21T15:27:13.393Z",
  "text": "@ashishkg0022  , can you send the rule which is giving errors in Mathematica format? I can investigate into the cause of the issue.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-21T15:37:18.061Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span></p><pre><code><span class=\"name\">List</span>[<span class=\"name\">RuleDelayed</span>[<span class=\"name\">HoldPattern</span>[<span class=\"name\">Int</span>[<span class=\"name\">Times</span>[<span class=\"name\">Power</span>[<span class=\"name\">Plus</span>[<span class=\"name\">Pattern</span>[<span class=\"atom\">a</span>,<span class=\"name\">Blank</span>[]],<span class=\"name\">Times</span>[<span class=\"name\">Optional</span>[<span class=\"name\">Pattern</span>[<span class=\"atom\">b</span>,<span class=\"name\">Blank</span>[]]],<span class=\"name\">Pattern</span>[<span class=\"atom\">x</span>,<span class=\"name\">Blank</span>[]]]],<span class=\"name\">Optional</span>[<span class=\"name\">Pattern</span>[<span class=\"atom\">m</span>,<span class=\"name\">Blank</span>[]]]],<span class=\"name\">Power</span>[<span class=\"name\">Plus</span>[<span class=\"name\">Pattern</span>[<span class=\"atom\">c</span>,<span class=\"name\">Blank</span>[]],<span class=\"name\">Times</span>[<span class=\"name\">Optional</span>[<span class=\"name\">Pattern</span>[<span class=\"atom\">d</span>,<span class=\"name\">Blank</span>[]]],<span class=\"name\">Pattern</span>[<span class=\"atom\">x</span>,<span class=\"name\">Blank</span>[]]]],<span class=\"name\">Optional</span>[<span class=\"name\">Pattern</span>[<span class=\"atom\">m</span>,<span class=\"name\">Blank</span>[]]]]],<span class=\"name\">Pattern</span>[<span class=\"atom\">x</span>,<span class=\"name\">Blank</span>[<span class=\"name\">Symbol</span>]]]],<span class=\"name\">Condition</span>[<span class=\"name\">Int</span>[<span class=\"name\">Power</span>[<span class=\"name\">Plus</span>[<span class=\"name\">Times</span>[<span class=\"atom\">a</span>,<span class=\"atom\">c</span>],<span class=\"name\">Times</span>[<span class=\"atom\">b</span>,<span class=\"atom\">d</span>,<span class=\"name\">Power</span>[<span class=\"atom\">x</span>,<span class=\"number\">2</span>]]],<span class=\"atom\">m</span>],<span class=\"atom\">x</span>],<span class=\"name\">And</span>[<span class=\"name\">FreeQ</span>[<span class=\"name\">List</span>[<span class=\"atom\">a</span>,<span class=\"atom\">b</span>,<span class=\"atom\">c</span>,<span class=\"atom\">d</span>,<span class=\"atom\">m</span>],<span class=\"atom\">x</span>],<span class=\"name\">ZeroQ</span>[<span class=\"name\">Plus</span>[<span class=\"name\">Times</span>[<span class=\"atom\">b</span>,<span class=\"atom\">c</span>],<span class=\"name\">Times</span>[<span class=\"atom\">a</span>,<span class=\"atom\">d</span>]]],<span class=\"name\">Or</span>[<span class=\"name\">IntegerQ</span>[<span class=\"atom\">m</span>],<span class=\"name\">And</span>[<span class=\"name\">PositiveQ</span>[<span class=\"atom\">a</span>],<span class=\"name\">PositiveQ</span>[<span class=\"atom\">c</span>]]]]]]]</code></pre><p>I tried to go through it. Rules which are parsed correctly does not have <code>Or</code> as in this <code>....Times[a,d]]],Or[IntegerQ[m].....</code> . </p>",
  "id": "5ab27bf1e4d1c636042620c4",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-21T15:36:17.163Z",
  "text": "@parsoyaarihant\n\n```\nList[RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a,Blank[]],Times[Optional[Pattern[b,Blank[]]],Pattern[x,Blank[]]]],Optional[Pattern[m,Blank[]]]],Power[Plus[Pattern[c,Blank[]],Times[Optional[Pattern[d,Blank[]]],Pattern[x,Blank[]]]],Optional[Pattern[m,Blank[]]]]],Pattern[x,Blank[Symbol]]]],Condition[Int[Power[Plus[Times[a,c],Times[b,d,Power[x,2]]],m],x],And[FreeQ[List[a,b,c,d,m],x],ZeroQ[Plus[Times[b,c],Times[a,d]]],Or[IntegerQ[m],And[PositiveQ[a],PositiveQ[c]]]]]]]\n```\nI tried to go through it. Rules which are parsed correctly does not have `Or` as in this `....Times[a,d]]],Or[IntegerQ[m].....` . ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<pre><code>Int[(a_+b_.<span class=\"keyword\">*</span>x_)^m_.<span class=\"keyword\">*</span>(c_+d_.<span class=\"keyword\">*</span>x_)^m_.,x_Symbol] :=\n  Int[(a<span class=\"keyword\">*</span>c+b<span class=\"keyword\">*</span>d<span class=\"keyword\">*</span>x^2)^m,x] /;\nFreeQ[{a,b,c,d,m},x] &amp;&amp; ZeroQ[b<span class=\"keyword\">*</span>c+a<span class=\"keyword\">*</span>d] &amp;&amp; (IntegerQ[m] <span class=\"string\">|| PositiveQ[a] &amp;&amp; PositiveQ[c])</span></code></pre>This is the rule",
  "id": "5ab281b1fa066c532556d980",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-21T16:00:49.046Z",
  "text": "```\nInt[(a_+b_.*x_)^m_.*(c_+d_.*x_)^m_.,x_Symbol] :=\n  Int[(a*c+b*d*x^2)^m,x] /;\nFreeQ[{a,b,c,d,m},x] && ZeroQ[b*c+a*d] && (IntegerQ[m] || PositiveQ[a] && PositiveQ[c])\n```\n\nThis is the rule",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I also was going through the case of multiple rules matched to a single expression.<br>Mathematica sort the rules in order of <code>specificity</code> .  example f(a) would have higher specificity than f(x_), thus it would be checked first when evaluating.<br>No matter in which order we have defined the rules,  DownValues in Mathmetica always gives the ouput in <code>specificity</code> order.  As we are parsing the DownValues , It will be easy to determine the order here.<br><span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span>  What do you think?",
  "id": "5ab2846b27c509a7748ae954",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-21T16:12:27.507Z",
  "text": "I also was going through the case of multiple rules matched to a single expression. \nMathematica sort the rules in order of `specificity` .  example f(a) would have higher specificity than f(x_), thus it would be checked first when evaluating. \nNo matter in which order we have defined the rules,  DownValues in Mathmetica always gives the ouput in `specificity` order.  As we are parsing the DownValues , It will be easy to determine the order here. \n@Upabjojr  What do you think?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Yes, that&#39;s correct",
  "id": "5ab284a535dd17022e85abc8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-21T16:13:25.356Z",
  "text": "Yes, that's correct",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "In Mathics there is an open source implementation of the sorting algorithm for <code>DownValues</code>",
  "id": "5ab284bf458cbde5575e427b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-21T16:13:51.826Z",
  "text": "In Mathics there is an open source implementation of the sorting algorithm for `DownValues`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "anyway, take care that the specificity may not be clearly defined",
  "id": "5ab284debb1018b37a0d6989",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-21T16:14:22.506Z",
  "text": "anyway, take care that the specificity may not be clearly defined",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<p>For example:</p><pre><code><span class=\"atom\">f</span>[<span class=\"atom\">x_</span>, <span class=\"atom\">y_</span>] := <span class=\"number\">1</span>\n<span class=\"atom\">f</span>[<span class=\"atom\">x_</span>, <span class=\"atom\">y_Integer</span>] := <span class=\"number\">2</span>\n<span class=\"atom\">f</span>[<span class=\"atom\">x_Integer</span>, <span class=\"atom\">y_</span>] := <span class=\"number\">3</span></code></pre><p>what should <code>f[1, 1]</code> return?</p>",
  "id": "5ab28533e4d1c63604265a5b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-21T16:15:47.276Z",
  "text": "For example:\n```\nf[x_, y_] := 1\nf[x_, y_Integer] := 2\nf[x_Integer, y_] := 3\n```\nwhat should `f[1, 1]` return?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>It will return 2<br>In this case if we are checking the <code>DownValues</code> it comes as </p><pre><code><span class=\"name\">HoldPattern</span>[<span class=\"atom\">f</span>[<span class=\"atom\">x_</span>,<span class=\"atom\">y_Integer</span>]]:&gt;<span class=\"number\">2</span>,<span class=\"name\">HoldPattern</span>[<span class=\"atom\">f</span>[<span class=\"atom\">x_Integer</span>,<span class=\"atom\">y_</span>]]:&gt;<span class=\"number\">3</span>,<span class=\"name\">HoldPattern</span>[<span class=\"atom\">f</span>[<span class=\"atom\">x_</span>,<span class=\"atom\">y_</span>]]:&gt;<span class=\"number\">1</span></code></pre><p>So if we are parsing the <code>DownValues</code> , We already have the order in which mathemetica would have worked. </p>",
  "id": "5ab28624f3f6d24c689e424f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-21T16:19:48.521Z",
  "text": "It will return 2\nIn this case if we are checking the `DownValues` it comes as \n```\nHoldPattern[f[x_,y_Integer]]:>2,HoldPattern[f[x_Integer,y_]]:>3,HoldPattern[f[x_,y_]]:>1\n```\nSo if we are parsing the `DownValues` , We already have the order in which mathemetica would have worked. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Yes, Mathematica defined an arbitrary rule (specificity of first argument) to deal with this case",
  "id": "5ab2865a6f8b4b994651bee4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-21T16:20:42.703Z",
  "text": "Yes, Mathematica defined an arbitrary rule (specificity of first argument) to deal with this case",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "That&#39;s true",
  "id": "5ab28668e4ff28713a5b03b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-21T16:20:56.033Z",
  "text": "That's true",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the problem is that MatchPy may actually ignore that order",
  "id": "5ab286776f8b4b994651bf80",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-21T16:21:11.583Z",
  "text": "the problem is that MatchPy may actually ignore that order",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I am looking into <span data-link-type=\"mention\" data-screen-name=\"wheerd\" class=\"mention\">@wheerd</span> &#39;s suggestion of multiple matcher.",
  "id": "5ab286b7bb1018b37a0d7305",
  "issues": [],
  "mentions": [
   {
    "screenName": "wheerd",
    "userId": "57ef0193d73408ce4f2ae298",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-21T16:22:15.768Z",
  "text": "I am looking into @wheerd 's suggestion of multiple matcher.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ashishkg0022\" class=\"mention\">@ashishkg0022</span>  <code>DownValues</code> does not give the order of rules in which Mathematica has sorted the rules. <code>DownValues</code> returns the rules in the order you gave to it.",
  "id": "5ab29dfb458cbde5575ed276",
  "issues": [],
  "mentions": [
   {
    "screenName": "ashishkg0022",
    "userId": "58bd696cd73408ce4f4eb85b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-21T18:01:31.326Z",
  "text": "@ashishkg0022  `DownValues` does not give the order of rules in which Mathematica has sorted the rules. `DownValues` returns the rules in the order you gave to it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span>  in the above example it can be seen .  ",
  "id": "5ab2ab61bb1018b37a0e3c38",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-21T18:58:41.426Z",
  "text": "@parsoyaarihant  in the above example it can be seen .  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I think <code>DownValues</code> returns the rules in the sorted order",
  "id": "5ab2abd6458cbde5575f24be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-21T19:00:38.358Z",
  "text": "I think `DownValues` returns the rules in the sorted order",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<a href=\"https://files.gitter.im/sympy/Rubi-GSoC17/Ip8C/Screenshot-from-2018-03-21-08_38_17.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/sympy/Rubi-GSoC17/Ip8C/thumb/Screenshot-from-2018-03-21-08_38_17.png\" alt=\"Screenshot from 2018-03-21 08:38:17.png\" rel=\"nofollow\"></a>",
  "id": "5ab2acec5f188ccc15e07e9b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-21T19:05:16.761Z",
  "text": "[![Screenshot from 2018-03-21 08:38:17.png](https://files.gitter.im/sympy/Rubi-GSoC17/Ip8C/thumb/Screenshot-from-2018-03-21-08_38_17.png)](https://files.gitter.im/sympy/Rubi-GSoC17/Ip8C/Screenshot-from-2018-03-21-08_38_17.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/sympy/Rubi-GSoC17/Ip8C/thumb/Screenshot-from-2018-03-21-08_38_17.png"
   },
   {
    "url": "https://files.gitter.im/sympy/Rubi-GSoC17/Ip8C/Screenshot-from-2018-03-21-08_38_17.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I remember that <code>DownValues</code> returns the sorted rules",
  "id": "5ab2bccc35dd17022e86f083",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-21T20:13:00.039Z",
  "text": "I remember that `DownValues` returns the sorted rules",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-22T19:34:47.039Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>I was looking in the cause of recursion errors. I think the major cause is wrong rules rather than order of rules.<br>For example :<br>while integrating  <code>x**4*sqrt(a + b*x**2)</code> , it matched with rule 79 everytime in sympy.  As this rule does not result in any  simplification of the expression.<br>But interestingly If I load only the above rule (leaving other rules) in mathematica , this expression does not get matched to the rule.  (I will further check the constraints )</p><p>Also on the other hand there are many other expressions for which <code>get_matching_rule_definition</code> gives more than one matching rule but integral is correct.   For example  <code>(a + b*x**2)*(c + d*x**2)**4</code> and many others</p><p>Also Corywalker  told in this issue&#39;s ( <span data-link-type=\"issue\" data-issue=\"30\" data-issue-repo=\"HPAC/matchpy\" class=\"issue\">HPAC/matchpy#30</span> )discussion </p><blockquote>\n<p>Interestingly for RUBI this ordering does not seem to matter much. For many of the rules, they can simply be checked in the order in which they are defined and the integration rules work just fine.</p></blockquote>\n<p><span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span>  What do you think  ?  </p>",
  "id": "5ab40509c574b1aa3e203a65",
  "issues": [
   {
    "number": "30",
    "repo": "HPAC/matchpy"
   }
  ],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-22T19:33:29.478Z",
  "text": "I was looking in the cause of recursion errors. I think the major cause is wrong rules rather than order of rules.\nFor example : \nwhile integrating  `x**4*sqrt(a + b*x**2)` , it matched with rule 79 everytime in sympy.  As this rule does not result in any  simplification of the expression. \nBut interestingly If I load only the above rule (leaving other rules) in mathematica , this expression does not get matched to the rule.  (I will further check the constraints )\n\nAlso on the other hand there are many other expressions for which `get_matching_rule_definition` gives more than one matching rule but integral is correct.   For example  `(a + b*x**2)*(c + d*x**2)**4` and many others\n\nAlso Corywalker  told in this issue's ( https://github.com/HPAC/matchpy/issues/30 )discussion \n>Interestingly for RUBI this ordering does not seem to matter much. For many of the rules, they can simply be checked in the order in which they are defined and the integration rules work just fine.\n\n@Upabjojr  What do you think  ?  ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-03-22T20:02:38.564Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>I found the error in the above example <code>x**4*sqrt(a + b*x**2)</code> . It gets matched to 4 rules . But the errors due to wrong constraints.</p><pre><code class=\"python\">pattern79 = Pattern(Integral(x_**WC(<span class=\"string\">'m'</span>, S(<span class=\"number\">1</span>))*(a_ + x_**n_*WC(<span class=\"string\">'b'</span>, S(<span class=\"number\">1</span>)))**p_, x_), constraint_freeq_a, constraint_freeq_b, constraint_freeq_p, CustomConstraint(<span class=\"keyword\">lambda</span> n: PositiveIntegerQ(n)), CustomConstraint(<span class=\"keyword\">lambda</span> m: IntegerQ(m)), CustomConstraint(<span class=\"keyword\">lambda</span> k, a, p, n, b, m, x: Unequal(k, S(<span class=\"number\">1</span>))))\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">With79</span><span class=\"params\">(b, n, a, p, m, x)</span>:</span>\n        k = GCD(m + S(<span class=\"number\">1</span>), n)\n        <span class=\"keyword\">return</span> Subst(Int(x**(S(-<span class=\"number\">1</span>) + (m + S(<span class=\"number\">1</span>))/k)*(a + b*x**(n/k))**p, x), x, x**k)/k\n    rule79 = ReplacementRule(pattern79, <span class=\"keyword\">lambda</span> b, n, a, p, m, x : With79(b, n, a, p, m, x))\n    rubi.add(rule79)</code></pre><p>the last constraint is wrong (<code>CustomConstraint(lambda k, a, p, n, b, m, x: Unequal(k, S(1)))</code>).   <code>k!=1</code> should be inside function <code>With79</code> .</p><p>The real rule in mathematica format is here: </p><pre><code><span class=\"name\">Int</span>[<span class=\"atom\">x_</span>^<span class=\"atom\">m_</span>.*(<span class=\"atom\">a_</span>+<span class=\"atom\">b_</span>.*<span class=\"atom\">x_</span>^<span class=\"atom\">n_</span>)^<span class=\"atom\">p_</span>,<span class=\"atom\">x_Symbol</span>] :=\n  <span class=\"name\">With</span>[{<span class=\"atom\">k</span>=<span class=\"name\">GCD</span>[<span class=\"atom\">m</span>+<span class=\"number\">1</span>,<span class=\"atom\">n</span>]},\n  <span class=\"number\">1</span>/<span class=\"atom\">k</span>*<span class=\"name\">Subst</span>[<span class=\"name\">Int</span>[<span class=\"atom\">x</span>^((<span class=\"atom\">m</span>+<span class=\"number\">1</span>)/<span class=\"atom\">k</span>-<span class=\"number\">1</span>)*(<span class=\"atom\">a</span>+<span class=\"atom\">b</span>*<span class=\"atom\">x</span>^(<span class=\"atom\">n</span>/<span class=\"atom\">k</span>))^<span class=\"atom\">p</span>,<span class=\"atom\">x</span>],<span class=\"atom\">x</span>,<span class=\"atom\">x</span>^<span class=\"atom\">k</span>] /;\n <span class=\"atom\">k</span>!=<span class=\"number\">1</span>] /;\n<span class=\"name\">FreeQ</span>[{<span class=\"atom\">a</span>,<span class=\"atom\">b</span>,<span class=\"atom\">p</span>},<span class=\"atom\">x</span>] &amp;&amp; <span class=\"name\">PositiveIntegerQ</span>[<span class=\"atom\">n</span>] &amp;&amp; <span class=\"name\">IntegerQ</span>[<span class=\"atom\">m</span>]</code></pre><p>So I think error in rules is major reason for recursion errors rather than order as it manages many example where many rules gets matched and result is correct . Corywalker&#39;s comment says something similar to<br>this</p>",
  "id": "5ab40a855f188ccc15e6efb9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-22T19:56:53.025Z",
  "text": "I found the error in the above example `x**4*sqrt(a + b*x**2)` . It gets matched to 4 rules . But the errors due to wrong constraints.\n```python\npattern79 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_, x_), constraint_freeq_a, constraint_freeq_b, constraint_freeq_p, CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda k, a, p, n, b, m, x: Unequal(k, S(1))))\n    def With79(b, n, a, p, m, x):\n        k = GCD(m + S(1), n)\n        return Subst(Int(x**(S(-1) + (m + S(1))/k)*(a + b*x**(n/k))**p, x), x, x**k)/k\n    rule79 = ReplacementRule(pattern79, lambda b, n, a, p, m, x : With79(b, n, a, p, m, x))\n    rubi.add(rule79)\n```\nthe last constraint is wrong (`CustomConstraint(lambda k, a, p, n, b, m, x: Unequal(k, S(1)))`).   `k!=1` should be inside function `With79` .\n \nThe real rule in mathematica format is here: \n```\nInt[x_^m_.*(a_+b_.*x_^n_)^p_,x_Symbol] :=\n  With[{k=GCD[m+1,n]},\n  1/k*Subst[Int[x^((m+1)/k-1)*(a+b*x^(n/k))^p,x],x,x^k] /;\n k!=1] /;\nFreeQ[{a,b,p},x] && PositiveIntegerQ[n] && IntegerQ[m]\n```\n\nSo I think error in rules is major reason for recursion errors rather than order as it manages many example where many rules gets matched and result is correct . Corywalker's comment says something similar to\nthis",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I cannot tell you out of my mind if the order in which the rules are matched really doesn&#39;t matter. I hope it does not for RUBI.",
  "id": "5ab42f8027c509a77492f009",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-22T22:34:40.367Z",
  "text": "I cannot tell you out of my mind if the order in which the rules are matched really doesn't matter. I hope it does not for RUBI.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would suggest to consider first to fix the errors in the rules",
  "id": "5ab42f90e4ff28713a630b4a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-22T22:34:56.000Z",
  "text": "I would suggest to consider first to fix the errors in the rules",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "and possibly leaving the issue of the matching order as the last one",
  "id": "5ab42fa0e4ff28713a630b98",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-22T22:35:12.725Z",
  "text": "and possibly leaving the issue of the matching order as the last one",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I think I also said this last year, but I think the test suite should test every rule that matches. That will provide much more test coverage. RUBI should, assumedly, be designed so that every rule is mathematically correct, so any rule that matches should produce a mathematically correct result, even if in a different form. The test itself should be mathematical, e.g., testing the derivative, or a numeric test in the case of definite integrals (does RUBI support these?)",
  "id": "5ab4475a3fe1be3704ca1617",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-23T00:16:26.944Z",
  "text": "I think I also said this last year, but I think the test suite should test every rule that matches. That will provide much more test coverage. RUBI should, assumedly, be designed so that every rule is mathematically correct, so any rule that matches should produce a mathematically correct result, even if in a different form. The test itself should be mathematical, e.g., testing the derivative, or a numeric test in the case of definite integrals (does RUBI support these?)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "It could also be useful to allow advanced users to get the results from all matches, in case one gives a more useful result than the default one ",
  "id": "5ab447892dfcfffd2b2bbf2f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-23T00:17:13.894Z",
  "text": "It could also be useful to allow advanced users to get the results from all matches, in case one gives a more useful result than the default one ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I don&#39;t think  RUBI support definite integration.<br>Also I will look into the way to test every rule that matches.",
  "id": "5ab46eb2fa066c53255fec1f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-23T03:04:18.429Z",
  "text": "I don't think  RUBI support definite integration. \nAlso I will look into the way to test every rule that matches.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-24T05:44:39.553Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>I was looking in the current bug of <code>parsetools</code> . </p><p>I think it is because <code>parsetools</code> are unable to handle cases which has <code>Or</code> in the constraints. </p><p>I have an idea , that may lead to further optimisation and fix this bug :<br>Currently there are numerous <code>CustomConastraints</code> for a single rule also.<br>For example:</p><pre><code class=\"python\">pattern2 = Pattern(Integral(x_**WC(<span class=\"string\">'m'</span>, S(<span class=\"number\">1</span>)), x_), CustomConstraint(<span class=\"keyword\">lambda</span> m, x: FreeQ(m, x)), CustomConstraint(<span class=\"keyword\">lambda</span> m: NonzeroQ(m + S(<span class=\"number\">1</span>))))</code></pre><p>This can be rewritten like this:</p><pre><code class=\"python\"><span class=\"keyword\">from</span> sympy <span class=\"keyword\">import</span> And\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cons_f_2</span><span class=\"params\">()</span>:</span>\n     <span class=\"keyword\">return</span> And(FreeQ(m, x), NonzeroQ(m+S(<span class=\"number\">1</span>)))\npattern2 =  Pattern(Integral(x_**WC(<span class=\"string\">'m'</span>, S(<span class=\"number\">1</span>)), x_), CustomConstraint(cons_f_2))</code></pre><p>I think this one will be more similar to Mathematica&#39;s code. </p><pre><code>Int<span class=\"attr_selector\">[x_^m_.,x_Symbol]</span> <span class=\"value\">:=\n  x^(m+<span class=\"number\">1</span>)/(m+<span class=\"number\">1</span>) /;</span>\nFreeQ<span class=\"attr_selector\">[m,x]</span> &amp;&amp; NonzeroQ<span class=\"attr_selector\">[m+1]</span></code></pre><p>For tha above examples here is the downvalue</p><pre><code><span class=\"name\">RuleDelayed</span>[<span class=\"name\">HoldPattern</span>[<span class=\"name\">Int</span>[<span class=\"name\">Power</span>[<span class=\"name\">Pattern</span>[<span class=\"atom\">x</span>,<span class=\"name\">Blank</span>[]],<span class=\"name\">Optional</span>[<span class=\"name\">Pattern</span>[<span class=\"atom\">m</span>,<span class=\"name\">Blank</span>[]]]],<span class=\"name\">Pattern</span>[<span class=\"atom\">x</span>,<span class=\"name\">Blank</span>[<span class=\"name\">Symbol</span>]]]],<span class=\"name\">Condition</span>[<span class=\"name\">Simp</span>[<span class=\"name\">Times</span>[<span class=\"name\">Power</span>[<span class=\"atom\">x</span>,<span class=\"name\">Plus</span>[<span class=\"atom\">m</span>,<span class=\"number\">1</span>]],<span class=\"name\">Power</span>[<span class=\"name\">Plus</span>[<span class=\"atom\">m</span>,<span class=\"number\">1</span>],-<span class=\"number\">1</span>]],<span class=\"atom\">x</span>],<span class=\"name\">And</span>[<span class=\"name\">FreeQ</span>[<span class=\"atom\">m</span>,<span class=\"atom\">x</span>],<span class=\"name\">NonzeroQ</span>[<span class=\"name\">Plus</span>[<span class=\"atom\">m</span>,<span class=\"number\">1</span>]]]]]</code></pre><p>I think they define everything under single condition .<br><span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> What do you think ?<br>Am I missing anything ?</p>",
  "id": "5ab5e466458cbde5576db002",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-24T05:38:46.291Z",
  "text": "I was looking in the current bug of `parsetools` . \n\nI think it is because `parsetools` are unable to handle cases which has `Or` in the constraints. \n\nI have an idea , that may lead to further optimisation and fix this bug :\nCurrently there are numerous `CustomConastraints` for a single rule also.\nFor example:\n```python\npattern2 = Pattern(Integral(x_**WC('m', S(1)), x_), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda m: NonzeroQ(m + S(1))))\n```\n\nThis can be rewritten like this:\n```python\nfrom sympy import And\ndef cons_f_2():\n     return And(FreeQ(m, x), NonzeroQ(m+S(1)))\npattern2 =  Pattern(Integral(x_**WC('m', S(1)), x_), CustomConstraint(cons_f_2))\n```\nI think this one will be more similar to Mathematica's code. \n\n```Mathmetica\nInt[x_^m_.,x_Symbol] :=\n  x^(m+1)/(m+1) /;\nFreeQ[m,x] && NonzeroQ[m+1]\n```\nFor tha above examples here is the downvalue\n```Mathemetica\nRuleDelayed[HoldPattern[Int[Power[Pattern[x,Blank[]],Optional[Pattern[m,Blank[]]]],Pattern[x,Blank[Symbol]]]],Condition[Simp[Times[Power[x,Plus[m,1]],Power[Plus[m,1],-1]],x],And[FreeQ[m,x],NonzeroQ[Plus[m,1]]]]]\n```\nI think they define everything under single condition . \n@Upabjojr What do you think ? \nAm I missing anything ?",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Sorry I missed the parameters of the function<pre><code class=\"python\"><span class=\"keyword\">from</span> sympy <span class=\"keyword\">import</span> And\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cons_f_2</span><span class=\"params\">(m , x)</span>:</span>\n     <span class=\"keyword\">return</span> And(FreeQ(m, x), NonzeroQ(m+S(<span class=\"number\">1</span>)))\npattern2 =  Pattern(Integral(x_**WC(<span class=\"string\">'m'</span>, S(<span class=\"number\">1</span>)), x_), CustomConstraint(cons_f_2))</code></pre>",
  "id": "5ab5e81f27c509a7749a315f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-24T05:54:39.411Z",
  "text": "Sorry I missed the parameters of the function\n```python\nfrom sympy import And\ndef cons_f_2(m , x):\n     return And(FreeQ(m, x), NonzeroQ(m+S(1)))\npattern2 =  Pattern(Integral(x_**WC('m', S(1)), x_), CustomConstraint(cons_f_2))\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "have you tried benchmarking to see which one is more efficient?",
  "id": "5ab605f8f3f6d24c68adfd15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-24T08:02:00.992Z",
  "text": "have you tried benchmarking to see which one is more efficient?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I am sorry but I don&#39;t  know about benchmarking.<br>The benefits that seems to me is<ol>\n<li>No repeated definition of custom constraints</li>\n<li>No lambda functions in constraints</li>\n<li>Chance of less bugs in constraint (rules) </li>\n<li>Similarity to Mathematica&#39;s implementaion</li>\n</ol>\n",
  "id": "5ab606eabb1018b37a1cdb4f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-24T08:06:02.884Z",
  "text": "I am sorry but I don't  know about benchmarking. \nThe benefits that seems to me is\n1. No repeated definition of custom constraints\n2. No lambda functions in constraints\n3.  Chance of less bugs in constraint (rules) \n4. Similarity to Mathematica's implementaion",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "in IPython there is the <code>%timeit</code> macro",
  "id": "5ab60720f3f6d24c68adff46",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-24T08:06:56.237Z",
  "text": "in IPython there is the `%timeit` macro",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Yes, it looks good",
  "id": "5ab607292b9dfdbc3a185efd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-24T08:07:05.853Z",
  "text": "Yes, it looks good",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "though SymPy&#39;s <code>And</code> may return unevaluated expressions",
  "id": "5ab6074afa066c5325667635",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-24T08:07:38.403Z",
  "text": "though SymPy's `And` may return unevaluated expressions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "don&#39;t know if this could be a problem",
  "id": "5ab6075d35dd17022e954b74",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-24T08:07:57.002Z",
  "text": "don't know if this could be a problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-24T08:09:42.914Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I dont think there will be a problem . As the <code>utility functions</code> used in the <code>constraints</code> should always return boolean.",
  "id": "5ab607aec574b1aa3e28bea5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-24T08:09:18.708Z",
  "text": "I dont think there will be a problem . As the `utility functions` used in the `constraints` should always return boolean.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span>  I tried <code>%timeit</code> . But I can edit manually few rules only. For less number of rules , time in both cases are similar. ",
  "id": "5ab68651c3c5f8b90dac3432",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-24T17:09:37.621Z",
  "text": "@Upabjojr  I tried `%timeit` . But I can edit manually few rules only. For less number of rules , time in both cases are similar. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "ok it looks like it won&#39;t be a problem for the efficiency",
  "id": "5ab68686458cbde5576fe593",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-24T17:10:30.536Z",
  "text": "ok it looks like it won't be a problem for the efficiency",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Is Sympy&#39;s <code>And</code> slow ?",
  "id": "5ab687c327c509a7749c71f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-24T17:15:47.070Z",
  "text": "Is Sympy's `And` slow ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "it&#39;s slower that Python&#39;s <code>and</code>",
  "id": "5ab687dff3f6d24c68afdefe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-24T17:16:15.763Z",
  "text": "it's slower that Python's `and`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<code>And</code> is a class",
  "id": "5ab687fac3c5f8b90dac3da1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-24T17:16:42.586Z",
  "text": "`And` is a class",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<pre><code class=\"python\">In [<span class=\"number\">2</span>]: <span class=\"keyword\">from</span> sympy <span class=\"keyword\">import</span> And\nIn [<span class=\"number\">3</span>]: %time And(<span class=\"keyword\">True</span>, <span class=\"keyword\">True</span>, <span class=\"keyword\">True</span>, <span class=\"keyword\">False</span>)\nCPU times: user <span class=\"number\">871</span> \u00b5s, sys: <span class=\"number\">65</span> \u00b5s, total: <span class=\"number\">936</span> \u00b5s\nWall time: <span class=\"number\">953</span> \u00b5s\nOut[<span class=\"number\">3</span>]: <span class=\"keyword\">False</span></code></pre><pre><code class=\"python\">In [<span class=\"number\">1</span>]: %time <span class=\"keyword\">True</span> <span class=\"keyword\">and</span> <span class=\"keyword\">True</span> <span class=\"keyword\">and</span> <span class=\"keyword\">True</span> <span class=\"keyword\">and</span> <span class=\"keyword\">False</span>\nCPU times: user <span class=\"number\">5</span> \u00b5s, sys: <span class=\"number\">1</span> \u00b5s, total: <span class=\"number\">6</span> \u00b5s\nWall time: <span class=\"number\">8.34</span> \u00b5s\nOut[<span class=\"number\">1</span>]: <span class=\"keyword\">False</span></code></pre>",
  "id": "5ab6886a35dd17022e9730b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-24T17:18:34.511Z",
  "text": "```python\nIn [2]: from sympy import And\nIn [3]: %time And(True, True, True, False)\nCPU times: user 871 \u00b5s, sys: 65 \u00b5s, total: 936 \u00b5s\nWall time: 953 \u00b5s\nOut[3]: False\n```\n```python\nIn [1]: %time True and True and True and False\nCPU times: user 5 \u00b5s, sys: 1 \u00b5s, total: 6 \u00b5s\nWall time: 8.34 \u00b5s\nOut[1]: False\n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-24T17:19:42.581Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "If we make a function some what like <code>util_and()</code>, which is faster. We can enhance the performance",
  "id": "5ab6889235dd17022e973142",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-24T17:19:14.991Z",
  "text": "If we make a function some what like `util_and()`, which is faster. We can enhance the performance",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<code>871</code> and <code>5</code><br>There is difference . I think,  that&#39;s why similar performance was seen. <code>And</code> is making the new idea slower.",
  "id": "5ab68931e4ff28713a6cbf0a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-24T17:21:53.377Z",
  "text": "`871 ` and `5`\nThere is difference . I think,  that's why similar performance was seen. `And` is making the new idea slower.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>Something similar to this </p><pre><code class=\"python\"> <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">util_and</span><span class=\"params\">(*args)</span>:</span>\n         a = <span class=\"keyword\">True</span>\n         <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> args:\n             a = a <span class=\"keyword\">and</span> i\n         <span class=\"keyword\">return</span> a</code></pre><p>OR</p><pre><code class=\"python\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">util_and</span><span class=\"params\">(*args)</span>:</span>\n        <span class=\"keyword\">if</span> any(x == <span class=\"keyword\">False</span> <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> args):\n            <span class=\"keyword\">return</span> <span class=\"keyword\">False</span>\n        <span class=\"keyword\">return</span> <span class=\"keyword\">True</span></code></pre>",
  "id": "5ab68d0ec574b1aa3e2ac7a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-24T17:38:22.246Z",
  "text": "Something similar to this \n```python\n def util_and(*args):\n         a = True\n         for i in args:\n             a = a and i\n         return a\n```\nOR\n\n```python\ndef util_and(*args):\n        if any(x == False for x in args):\n            return False\n        return True\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "what about<pre><code class=\"python\">In [<span class=\"number\">1</span>]: <span class=\"keyword\">import</span> operator\n\nIn [<span class=\"number\">2</span>]: <span class=\"keyword\">import</span> functools\n\nIn [<span class=\"number\">3</span>]: functools.reduce(operator.and_, [<span class=\"keyword\">True</span>, <span class=\"keyword\">True</span>, <span class=\"keyword\">True</span>, <span class=\"keyword\">False</span>])\nOut[<span class=\"number\">3</span>]: <span class=\"keyword\">False</span></code></pre>",
  "id": "5ab68db1bb1018b37a1ed76c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-24T17:41:05.904Z",
  "text": "what about\n```python\nIn [1]: import operator\n\nIn [2]: import functools\n\nIn [3]: functools.reduce(operator.and_, [True, True, True, False])\nOut[3]: False\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Looks good to me. I think you might tell better, which one to use.",
  "id": "5ab68f5bfa066c53256874b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-24T17:48:11.247Z",
  "text": "Looks good to me. I think you might tell better, which one to use.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Instead of sympy&#39;s <code>And</code> , I will check the performance using this method , and will tell you",
  "id": "5ab6901f458cbde557700cbd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-24T17:51:27.337Z",
  "text": "Instead of sympy's `And` , I will check the performance using this method , and will tell you",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "shall we use this Gitter channel for the GSoC 2018 or do you prefer to set up a new channel?",
  "id": "5ae1f5892d0e228d7bb5eaea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-26T15:51:37.884Z",
  "text": "shall we use this Gitter channel for the GSoC 2018 or do you prefer to set up a new channel?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "For me, this channel is fine.",
  "id": "5ae1f5d162316e0505020574",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-26T15:52:49.825Z",
  "text": "For me, this channel is fine.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I was curious on whether we can rename it to <code>Rubi-GSoC2017-2018</code>",
  "id": "5ae1f6001130fe3d361d18d2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-26T15:53:36.103Z",
  "text": "I was curious on whether we can rename it to `Rubi-GSoC2017-2018`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "maybe just rename it to sympy/Rubi ",
  "id": "5ae22bc7bcdd4233a9d94308",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-26T19:43:03.398Z",
  "text": "maybe just rename it to sympy/Rubi ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "looks like you have to email gitter to rename a room <a href=\"https://gitlab.com/gitlab-org/gitter/webapp/issues/1162\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gitlab.com/gitlab-org/gitter/webapp/issues/1162</a>",
  "id": "5ae22c752d0e228d7bb70d60",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-26T19:45:57.756Z",
  "text": "looks like you have to email gitter to rename a room https://gitlab.com/gitlab-org/gitter/webapp/issues/1162",
  "unread": false,
  "urls": [
   {
    "url": "https://gitlab.com/gitlab-org/gitter/webapp/issues/1162"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"ashishkg0022\" class=\"mention\">@ashishkg0022</span>. I hope your exams went well. I went through your proposal and I found out that you have not included the work on utility functions in your timeline. ",
  "id": "5ae4c06c270d7d3708176dd6",
  "issues": [],
  "mentions": [
   {
    "screenName": "ashishkg0022",
    "userId": "58bd696cd73408ce4f4eb85b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-28T18:41:48.454Z",
  "text": "Hi @ashishkg0022. I hope your exams went well. I went through your proposal and I found out that you have not included the work on utility functions in your timeline. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Another issue is that Sympy treates <code>exp()</code> expressions different than Mathematica. See <span data-link-type=\"issue\" data-issue=\"13211\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#13211</span> . To cake care of this, you will need to preprocess the expression to replace <code>exp()</code> by <code>pow()</code>. ",
  "id": "5ae4c16f270d7d3708177166",
  "issues": [
   {
    "number": "13211",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-28T18:46:07.960Z",
  "text": "Another issue is that Sympy treates `exp()` expressions different than Mathematica. See https://github.com/sympy/sympy/pull/13211 . To cake care of this, you will need to preprocess the expression to replace `exp()` by `pow()`. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "In my timeline, I have not given separate weeks to the utility function. I have mentioned that while correcting the rules and testing them, I will simultaneously update the utility functions.",
  "id": "5ae4c7162b9dfdbc3adc81dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-28T19:10:14.846Z",
  "text": "In my timeline, I have not given separate weeks to the utility function. I have mentioned that while correcting the rules and testing them, I will simultaneously update the utility functions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I will look into that issue of <code>exp</code> and <code>pow</code> .",
  "id": "5ae4c8d61130fe3d36291ae8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-28T19:17:42.379Z",
  "text": "I will look into that issue of `exp` and `pow` .",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span>  what do you think about this structure of rubi ? <pre><code class=\"python\"><span class=\"keyword\">import</span> operator\n    <span class=\"keyword\">import</span> functools\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">f1</span><span class=\"params\">(p, x, b , n)</span>:</span>\n        <span class=\"keyword\">return</span> functools.reduce(operator.and_, [FreeQ(b, x), FreeQ(n, x), FreeQ(p, x)])\n    pattern1 = Pattern(Integral((x_**n_*WC(<span class=\"string\">'b'</span>, S(<span class=\"number\">1</span>)))**p_, x_), CustomConstraint(f1))\n    rule1 = ReplacementRule(pattern1, <span class=\"keyword\">lambda</span> p, x, b, n : b**IntPart(p)*x**(-n*FracPart(p))*(b*x**n)**FracPart(p)*Int(x**(n*p), x))\n    rubi.add(rule1)\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">f2</span><span class=\"params\">(b , n , a , p , x)</span>:</span>\n        <span class=\"keyword\">return</span> functools.reduce(operator.and_, [FreeQ(a, x), FreeQ(b, x), FreeQ(n, x), FreeQ(p, x), ZeroQ(p + S(<span class=\"number\">1</span>) + <span class=\"number\">1</span>/n)])\n    pattern2 = Pattern(Integral((a_ + x_**n_*WC(<span class=\"string\">'b'</span>, S(<span class=\"number\">1</span>)))**p_, x_),  CustomConstraint(f2))\n    rule2 = ReplacementRule(pattern2, <span class=\"keyword\">lambda</span> b, n, a, p, x : x*(a + b*x**n)**(p + S(<span class=\"number\">1</span>))/a)\n    rubi.add(rule2)\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">f3</span><span class=\"params\">(b , n , a , p, x)</span>:</span> \n        <span class=\"keyword\">return</span> functools.reduce(operator.and_, [FreeQ(a, x), FreeQ(b, x), FreeQ(n, x), FreeQ(p, x), NegativeIntegerQ(p + S(<span class=\"number\">1</span>) + <span class=\"number\">1</span>/n), NonzeroQ(p + S(<span class=\"number\">1</span>))])\n    pattern3 = Pattern(Integral((a_ + x_**n_*WC(<span class=\"string\">'b'</span>, S(<span class=\"number\">1</span>)))**p_, x_),  CustomConstraint(f3))\n    rule3 = ReplacementRule(pattern3, <span class=\"keyword\">lambda</span> b, n, a, p, x : -x*(a + b*x**n)**(p + S(<span class=\"number\">1</span>))/(a*n*(p + S(<span class=\"number\">1</span>))) + (n*(p + S(<span class=\"number\">1</span>)) + S(<span class=\"number\">1</span>))*Int((a + b*x**n)**(p + S(<span class=\"number\">1</span>)), x)/(a*n*(p + S(<span class=\"number\">1</span>))))\n    rubi.add(rule3)</code></pre>",
  "id": "5ae4c9356d7e07082b446d04",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-28T19:19:17.647Z",
  "text": "@parsoyaarihant  what do you think about this structure of rubi ? \n\n```python\nimport operator\n    import functools\n    def f1(p, x, b , n):\n        return functools.reduce(operator.and_, [FreeQ(b, x), FreeQ(n, x), FreeQ(p, x)])\n    pattern1 = Pattern(Integral((x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(f1))\n    rule1 = ReplacementRule(pattern1, lambda p, x, b, n : b**IntPart(p)*x**(-n*FracPart(p))*(b*x**n)**FracPart(p)*Int(x**(n*p), x))\n    rubi.add(rule1)\n    def f2(b , n , a , p , x):\n        return functools.reduce(operator.and_, [FreeQ(a, x), FreeQ(b, x), FreeQ(n, x), FreeQ(p, x), ZeroQ(p + S(1) + 1/n)])\n    pattern2 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_, x_),  CustomConstraint(f2))\n    rule2 = ReplacementRule(pattern2, lambda b, n, a, p, x : x*(a + b*x**n)**(p + S(1))/a)\n    rubi.add(rule2)\n    def f3(b , n , a , p, x): \n        return functools.reduce(operator.and_, [FreeQ(a, x), FreeQ(b, x), FreeQ(n, x), FreeQ(p, x), NegativeIntegerQ(p + S(1) + 1/n), NonzeroQ(p + S(1))])\n    pattern3 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_, x_),  CustomConstraint(f3))\n    rule3 = ReplacementRule(pattern3, lambda b, n, a, p, x : -x*(a + b*x**n)**(p + S(1))/(a*n*(p + S(1))) + (n*(p + S(1)) + S(1))*Int((a + b*x**n)**(p + S(1)), x)/(a*n*(p + S(1))))\n    rubi.add(rule3)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<blockquote>\n<p>I will look into that issue of <code>exp</code> and <code>pow</code> .</p></blockquote>\n<p>Don&#39;t look at my PR, it is extremely complicated to fix that issue.</p>",
  "id": "5ae4d5c2b01085166ccfb43c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-28T20:12:50.674Z",
  "text": "> I will look into that issue of `exp` and `pow` .\n\nDon't look at my PR, it is extremely complicated to fix that issue.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ashishkg0022\" class=\"mention\">@ashishkg0022</span> , I dont think this implementation will work because MatchPy creates the DiscriminationNet  by considering all the constraints at once.",
  "id": "5ae54f4adad6fb186ff9f5b1",
  "issues": [],
  "mentions": [
   {
    "screenName": "ashishkg0022",
    "userId": "58bd696cd73408ce4f4eb85b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-29T04:51:22.887Z",
  "text": "@ashishkg0022 , I dont think this implementation will work because MatchPy creates the DiscriminationNet  by considering all the constraints at once.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "In your proposal you have written about defining <code>With</code> function. The functionality is implemented in the parsetools. You can make the changes in the parsetools to resolve the bugs related to that.",
  "id": "5ae55052270d7d3708191f80",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-29T04:55:46.783Z",
  "text": "In your proposal you have written about defining `With` function. The functionality is implemented in the parsetools. You can make the changes in the parsetools to resolve the bugs related to that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "there is also one bug in parsetools currently, which I mentioned to you earlier. ",
  "id": "5ae553972d0e228d7bc2f4ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-29T05:09:43.037Z",
  "text": "there is also one bug in parsetools currently, which I mentioned to you earlier. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Regarding this implementation, can&#39;t I create a combined constraint? I am not getting the reason, for this to not work.",
  "id": "5ae554422d0e228d7bc2f623",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-29T05:12:34.567Z",
  "text": "Regarding this implementation, can't I create a combined constraint? I am not getting the reason, for this to not work.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Your proposed structure will work in implementation but I dont think it makes any improvement over existing implementation because when the constraints are divided into individual parts, the DiscriminationNet can match the pattern quickly when it finds that a constraint is not satisfied. Hence its always better to have the constraints of rules divided into smaller <code>Constraint</code>. ",
  "id": "5ae567bf2b9dfdbc3ade5e86",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-29T06:35:43.842Z",
  "text": "Your proposed structure will work in implementation but I dont think it makes any improvement over existing implementation because when the constraints are divided into individual parts, the DiscriminationNet can match the pattern quickly when it finds that a constraint is not satisfied. Hence its always better to have the constraints of rules divided into smaller `Constraint`. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "we want to completely get rid of <code>lambda</code>. So we need to create normal function for each <code>Constraint</code> ?",
  "id": "5ae588382b9dfdbc3aded3dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-29T08:54:16.508Z",
  "text": "we want to completely get rid of `lambda`. So we need to create normal function for each `Constraint` ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Can we have a meeting of all mentors and me soon ? I can start my work now, after discussing the final structure and our initial target . ",
  "id": "5ae5cba41130fe3d362c46b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-29T13:41:56.308Z",
  "text": "Can we have a meeting of all mentors and me soon ? I can start my work now, after discussing the final structure and our initial target . ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "What kind of meeting? This channel is already supposed to be a meeting.",
  "id": "5ae6c7aadad6fb186ffed7a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T07:37:14.516Z",
  "text": "What kind of meeting? This channel is already supposed to be a meeting.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Another way to keep track of the workflow is to use tagged sympy issues.",
  "id": "5ae6c7df6d7e07082b4b0cca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T07:38:07.238Z",
  "text": "Another way to keep track of the workflow is to use tagged sympy issues.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I meant that , if possible everyone to be present together at the same time.",
  "id": "5ae6c7e85d7286b43a80ddc3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T07:38:16.110Z",
  "text": "I meant that , if possible everyone to be present together at the same time.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "That is, just create issues in github an tag them with <code>sympy.integrals.rubi</code>",
  "id": "5ae6c7f75d7286b43a80ddf4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T07:38:31.578Z",
  "text": "That is, just create issues in github an tag them with `sympy.integrals.rubi`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "we are missing some utility functions, right?",
  "id": "5ae6c8512b9dfdbc3ae3279f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T07:40:01.644Z",
  "text": "we are missing some utility functions, right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "yup",
  "id": "5ae6c88a2b9dfdbc3ae32830",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T07:40:58.276Z",
  "text": "yup",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would also suggest to get rid of the lambdas as soon as possible",
  "id": "5ae6c8e36d7e07082b4b108b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T07:42:27.592Z",
  "text": "I would also suggest to get rid of the lambdas as soon as possible",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I believe the lambdas are slowing down the code a lot",
  "id": "5ae6c8f41130fe3d362fa9a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T07:42:44.115Z",
  "text": "I believe the lambdas are slowing down the code a lot",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "you also have an open PR: <span data-link-type=\"issue\" data-issue=\"14391\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#14391</span>",
  "id": "5ae6c93e270d7d37081e1b8a",
  "issues": [
   {
    "number": "14391",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T07:43:58.760Z",
  "text": "you also have an open PR: https://github.com/sympy/sympy/pull/14391",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "There are 2 ways to get rid of lambdas currently<ol>\n<li>create combined constraint for each rule using normal function</li>\n<li>create each constraint using normal function separately</li>\n</ol>\n",
  "id": "5ae6c98115c9b031144de193",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T07:45:05.134Z",
  "text": "There are 2 ways to get rid of lambdas currently\n1.  create combined constraint for each rule using normal function\n2. create each constraint using normal function separately",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would also suggest to update the generated code only at the end of the summer",
  "id": "5ae6c98d5d7286b43a80e508",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T07:45:17.109Z",
  "text": "I would also suggest to update the generated code only at the end of the summer",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Lambdas also have the problem of making the code unpickleable",
  "id": "5ae6c9aa2d0e228d7bc7e4e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T07:45:46.604Z",
  "text": "Lambdas also have the problem of making the code unpickleable",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "out of the 2 ways , I should proceed with which one ?",
  "id": "5ae6c9fe2b9dfdbc3ae32ef3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T07:47:10.475Z",
  "text": "out of the 2 ways , I should proceed with which one ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "which one do you think would make the code faster?",
  "id": "5ae6ca232b9dfdbc3ae32f5c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T07:47:47.592Z",
  "text": "which one do you think would make the code faster?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "second one , I think but there are numerous constraints. Creating a function for each will make the code large.",
  "id": "5ae6ca612b9dfdbc3ae33080",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T07:48:49.560Z",
  "text": "second one , I think but there are numerous constraints. Creating a function for each will make the code large.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "well... lots of <code>CustomConstraint</code> are repeated many times",
  "id": "5ae6cac62d0e228d7bc7e8e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T07:50:30.651Z",
  "text": "well... lots of `CustomConstraint` are repeated many times",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "how many distinct ones are there?",
  "id": "5ae6cadadad6fb186ffee5fb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T07:50:50.660Z",
  "text": "how many distinct ones are there?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I have not found the numbers. How can I find number of distinct <code>CustomConstraint</code> ?",
  "id": "5ae6cb18109bb04332164187",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T07:51:52.737Z",
  "text": "I have not found the numbers. How can I find number of distinct `CustomConstraint` ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "well, I think it&#39;s possible to use regular expressions on the file",
  "id": "5ae6cbd8270d7d37081e255f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T07:55:04.671Z",
  "text": "well, I think it's possible to use regular expressions on the file",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "ok , I will find it out. Within 1 or 2 day , I will also try to find time required in 1st way.  If it does not result in any improvement , I will move to second way soon.",
  "id": "5ae6cc7f109bb043321646dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T07:57:51.955Z",
  "text": "ok , I will find it out. Within 1 or 2 day , I will also try to find time required in 1st way.  If it does not result in any improvement , I will move to second way soon.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<p>in Vim, for example:</p><pre><code><span class=\"symbol\">:%s/CustomConstraint/</span>\\r\\<span class=\"number\">0</span>/g\n<span class=\"symbol\">:v/CustomConstraint/d</span>\n<span class=\"symbol\">:%s/</span>)<span class=\"variable\">$/</span>/\n<span class=\"symbol\">:%s/</span>, \\+<span class=\"variable\">$/</span>/</code></pre><p>applying these commands transforms the file into a list of CustomConstraint lines.</p>",
  "id": "5ae6cd6262316e05051415c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T08:01:38.267Z",
  "text": "in Vim, for example:\n```\n:%s/CustomConstraint/\\r\\0/g\n:v/CustomConstraint/d\n:%s/)$//\n:%s/, \\+$//\n```\napplying these commands transforms the file into a list of CustomConstraint lines.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Otherwise you modify the parsetools to log the creation of <code>CustomConstraint</code> &#39;s .",
  "id": "5ae6cddfdad6fb186ffef755",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T08:03:43.211Z",
  "text": "Otherwise you modify the parsetools to log the creation of `CustomConstraint` 's .",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "actually parsetools had a previous bug .. which was due to <code>Or</code> . I will fix it today and try.",
  "id": "5ae6ce9615c9b031144df962",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T08:06:46.260Z",
  "text": "actually parsetools had a previous bug .. which was due to `Or` . I will fix it today and try.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> , regarding the  current bug in parsetools. It fails in cases where there are compound conditions in constraint.<br>Like this one </p><pre><code>Int[(a_+b_.<span class=\"keyword\">*</span>x_)^m_.<span class=\"keyword\">*</span>(c_+d_.<span class=\"keyword\">*</span>x_)^m_.,x_Symbol] :=\n  Int[(a<span class=\"keyword\">*</span>c+b<span class=\"keyword\">*</span>d<span class=\"keyword\">*</span>x^2)^m,x] /;\nFreeQ[{a,b,c,d,m},x] &amp;&amp; ZeroQ[b<span class=\"keyword\">*</span>c+a<span class=\"keyword\">*</span>d] &amp;&amp; (IntegerQ[m] <span class=\"string\">|| PositiveQ[a] &amp;&amp; PositiveQ[c])</span></code></pre><p>This is the downvalue</p><pre><code><span class=\"name\">List</span>[<span class=\"name\">RuleDelayed</span>[<span class=\"name\">HoldPattern</span>[<span class=\"name\">Int</span>[<span class=\"name\">Times</span>[<span class=\"name\">Power</span>[<span class=\"name\">Plus</span>[<span class=\"name\">Pattern</span>[<span class=\"atom\">a</span>,<span class=\"name\">Blank</span>[]],<span class=\"name\">Times</span>[<span class=\"name\">Optional</span>[<span class=\"name\">Pattern</span>[<span class=\"atom\">b</span>,<span class=\"name\">Blank</span>[]]],<span class=\"name\">Pattern</span>[<span class=\"atom\">x</span>,<span class=\"name\">Blank</span>[]]]],<span class=\"name\">Optional</span>[<span class=\"name\">Pattern</span>[<span class=\"atom\">m</span>,<span class=\"name\">Blank</span>[]]]],<span class=\"name\">Power</span>[<span class=\"name\">Plus</span>[<span class=\"name\">Pattern</span>[<span class=\"atom\">c</span>,<span class=\"name\">Blank</span>[]],<span class=\"name\">Times</span>[<span class=\"name\">Optional</span>[<span class=\"name\">Pattern</span>[<span class=\"atom\">d</span>,<span class=\"name\">Blank</span>[]]],<span class=\"name\">Pattern</span>[<span class=\"atom\">x</span>,<span class=\"name\">Blank</span>[]]]],<span class=\"name\">Optional</span>[<span class=\"name\">Pattern</span>[<span class=\"atom\">m</span>,<span class=\"name\">Blank</span>[]]]]],<span class=\"name\">Pattern</span>[<span class=\"atom\">x</span>,<span class=\"name\">Blank</span>[<span class=\"name\">Symbol</span>]]]],<span class=\"name\">Condition</span>[<span class=\"name\">Int</span>[<span class=\"name\">Power</span>[<span class=\"name\">Plus</span>[<span class=\"name\">Times</span>[<span class=\"atom\">a</span>,<span class=\"atom\">c</span>],<span class=\"name\">Times</span>[<span class=\"atom\">b</span>,<span class=\"atom\">d</span>,<span class=\"name\">Power</span>[<span class=\"atom\">x</span>,<span class=\"number\">2</span>]]],<span class=\"atom\">m</span>],<span class=\"atom\">x</span>],<span class=\"name\">And</span>[<span class=\"name\">FreeQ</span>[<span class=\"name\">List</span>[<span class=\"atom\">a</span>,<span class=\"atom\">b</span>,<span class=\"atom\">c</span>,<span class=\"atom\">d</span>,<span class=\"atom\">m</span>],<span class=\"atom\">x</span>],<span class=\"name\">ZeroQ</span>[<span class=\"name\">Plus</span>[<span class=\"name\">Times</span>[<span class=\"atom\">b</span>,<span class=\"atom\">c</span>],<span class=\"name\">Times</span>[<span class=\"atom\">a</span>,<span class=\"atom\">d</span>]]],<span class=\"name\">Or</span>[<span class=\"name\">IntegerQ</span>[<span class=\"atom\">m</span>],<span class=\"name\">And</span>[<span class=\"name\">PositiveQ</span>[<span class=\"atom\">a</span>],<span class=\"name\">PositiveQ</span>[<span class=\"atom\">c</span>]]]]]]]</code></pre><p>Till last year , in sympy the above code was written as </p><pre><code>    pattern12 = Pattern(Integral((a_ + x_*WC(<span class=\"string\">'b'</span>, S(<span class=\"number\">1</span>)))**WC(<span class=\"string\">'m'</span>, S(<span class=\"number\">1</span>))*(c_ + x_*WC(<span class=\"string\">'d'</span>, S(<span class=\"number\">1</span>)))**WC(<span class=\"string\">'m'</span>, S(<span class=\"number\">1</span>)), x_), CustomConstraint(lambda a, <span class=\"string\">x:</span> FreeQ(a, x)), CustomConstraint(lambda b, <span class=\"string\">x:</span> FreeQ(b, x)), CustomConstraint(lambda c, <span class=\"string\">x:</span> FreeQ(c, x)), CustomConstraint(lambda d, <span class=\"string\">x:</span> FreeQ(d, x)), CustomConstraint(lambda m, <span class=\"string\">x:</span> FreeQ(m, x)), CustomConstraint(lambda a, c, b, <span class=\"string\">d:</span> ZeroQ(a*d + b*c)), CustomConstraint(lambda a, c, <span class=\"string\">m:</span> IntegerQ(m) | (PositiveQ(a) &amp; PositiveQ(c))))\n    rule12 = ReplacementRule(pattern12, lambda d, a, m, b, x, <span class=\"string\">c :</span> Int((a*c + b*d*x**S(<span class=\"number\">2</span>))**m, x))\n    rubi.add(rule12)</code></pre><p>I am not getting how <code>Or</code> was converted to <code>|</code> in the paresetools ? </p>",
  "id": "5ae71b141388b2df2113a22d",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T13:33:08.691Z",
  "text": "@parsoyaarihant , regarding the  current bug in parsetools. It fails in cases where there are compound conditions in constraint.\nLike this one \n```\nInt[(a_+b_.*x_)^m_.*(c_+d_.*x_)^m_.,x_Symbol] :=\n  Int[(a*c+b*d*x^2)^m,x] /;\nFreeQ[{a,b,c,d,m},x] && ZeroQ[b*c+a*d] && (IntegerQ[m] || PositiveQ[a] && PositiveQ[c])\n```\nThis is the downvalue\n```\nList[RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a,Blank[]],Times[Optional[Pattern[b,Blank[]]],Pattern[x,Blank[]]]],Optional[Pattern[m,Blank[]]]],Power[Plus[Pattern[c,Blank[]],Times[Optional[Pattern[d,Blank[]]],Pattern[x,Blank[]]]],Optional[Pattern[m,Blank[]]]]],Pattern[x,Blank[Symbol]]]],Condition[Int[Power[Plus[Times[a,c],Times[b,d,Power[x,2]]],m],x],And[FreeQ[List[a,b,c,d,m],x],ZeroQ[Plus[Times[b,c],Times[a,d]]],Or[IntegerQ[m],And[PositiveQ[a],PositiveQ[c]]]]]]]\n\n```\nTill last year , in sympy the above code was written as \n\n```\n    pattern12 = Pattern(Integral((a_ + x_*WC('b', S(1)))**WC('m', S(1))*(c_ + x_*WC('d', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, c, b, d: ZeroQ(a*d + b*c)), CustomConstraint(lambda a, c, m: IntegerQ(m) | (PositiveQ(a) & PositiveQ(c))))\n    rule12 = ReplacementRule(pattern12, lambda d, a, m, b, x, c : Int((a*c + b*d*x**S(2))**m, x))\n    rubi.add(rule12)\n```\n\nI am not getting how `Or` was converted to `|` in the paresetools ? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-04-30T19:01:38.555Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>I tried the way of making combined constraint of each rules. I changed <code>paresetools</code> little to generate the code. There were few( around 10 ) errors , while parsing . I used try and except to ignore them for now.  I just wanted to know the loading time.<br>Here is the code :  <a href=\"https://github.com/ashishkg0022/rubi-structure/tree/master/way_1\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/ashishkg0022/rubi-structure/tree/master/way_1</a> </p><p>So the algebraic rules(<code>quadratic</code>, <code>binomial</code>, <code>linear</code>) took around 22 - 24 seconds to load.</p><pre><code>In [<span class=\"number\">1</span>]: %time from sympy.integrals.rubi.rubi <span class=\"keyword\">import</span> *\nCPU <span class=\"string\">times:</span> user <span class=\"number\">21.6</span> s, <span class=\"string\">sys:</span> <span class=\"number\">79.9</span> ms, <span class=\"string\">total:</span> <span class=\"number\">21.7</span> s\nWall <span class=\"string\">time:</span> <span class=\"number\">21.7</span> s</code></pre>",
  "id": "5ae767b41388b2df211533cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T19:00:04.058Z",
  "text": "I tried the way of making combined constraint of each rules. I changed `paresetools` little to generate the code. There were few( around 10 ) errors , while parsing . I used try and except to ignore them for now.  I just wanted to know the loading time. \nHere is the code :  https://github.com/ashishkg0022/rubi-structure/tree/master/way_1 \n\nSo the algebraic rules(`quadratic`, `binomial`, `linear`) took around 22 - 24 seconds to load.\n```\nIn [1]: %time from sympy.integrals.rubi.rubi import *\nCPU times: user 21.6 s, sys: 79.9 ms, total: 21.7 s\nWall time: 21.7 s\n```\n",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/ashishkg0022/rubi-structure/tree/master/way_1"
   }
  ],
  "v": 2
 },
 {
  "editedAt": "2018-04-30T19:02:14.539Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "In my PR:  <span data-link-type=\"issue\" data-issue=\"14391\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#14391</span> , I removed lambdas only from constraints which contained <code>FreeQ</code> . (There were many <code>FreeQ</code>) . So this resulted in a loading time of around 41 sec.",
  "id": "5ae768161130fe3d3632d38f",
  "issues": [
   {
    "number": "14391",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-04-30T19:01:42.959Z",
  "text": "\nIn my PR:  https://github.com/sympy/sympy/pull/14391 , I removed lambdas only from constraints which contained `FreeQ` . (There were many `FreeQ`) . So this resulted in a loading time of around 41 sec.\n\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Regarding removing lambda functions, we can have a separate file which contails all unique constraints. Then import those constraints in the rules. ",
  "id": "5ae8060a727e915b1042a1a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-01T06:15:38.492Z",
  "text": "Regarding removing lambda functions, we can have a separate file which contails all unique constraints. Then import those constraints in the rules. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Try to use more<code>CustomConstraint</code> in the rules. That will make Rubi faster. We already used combined constraints last year for some time. Manuel advised us to separate the constraints into smaller <code>CustomConstraint</code>.",
  "id": "5ae8076ddea1b95c10f17e74",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-01T06:21:33.309Z",
  "text": "Try to use more`CustomConstraint` in the rules. That will make Rubi faster. We already used combined constraints last year for some time. Manuel advised us to separate the constraints into smaller `CustomConstraint`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ashishkg0022\" class=\"mention\">@ashishkg0022</span> , I have investigated the parsetools bug. The problem seems to be in <code>sympify</code> of the string expression:<pre><code class=\"python\"><span class=\"prompt\">&gt;&gt;&gt; </span><span class=\"keyword\">from</span> sympy <span class=\"keyword\">import</span> sympify\n<span class=\"prompt\">&gt;&gt;&gt; </span>                                                     \n<span class=\"prompt\">&gt;&gt;&gt; </span>expr = <span class=\"string\">'Or(IntegerQ(m), And(PositiveQ(a), PositiveQ(c)))'</span>\n<span class=\"prompt\">&gt;&gt;&gt; </span>sympify(expr)\nTraceback (most recent call last):\n  File <span class=\"string\">\"&lt;stdin&gt;\"</span>, line <span class=\"number\">1</span>, <span class=\"keyword\">in</span> &lt;module&gt;\n  File <span class=\"string\">\"/Users/arihantparsoya/Documents/sympy/sympy/core/sympify.py\"</span>, line <span class=\"number\">368</span>, <span class=\"keyword\">in</span> sympify\n    expr = parse_expr(a, local_dict=locals, transformations=transformations, evaluate=evaluate)\n  File <span class=\"string\">\"/Users/arihantparsoya/Documents/sympy/sympy/parsing/sympy_parser.py\"</span>, line <span class=\"number\">950</span>, <span class=\"keyword\">in</span> parse_expr\n    <span class=\"keyword\">return</span> eval_expr(code, local_dict, global_dict)\n  File <span class=\"string\">\"/Users/arihantparsoya/Documents/sympy/sympy/parsing/sympy_parser.py\"</span>, line <span class=\"number\">863</span>, <span class=\"keyword\">in</span> eval_expr\n    code, global_dict, local_dict)  <span class=\"comment\"># take local objects in preference</span>\n  File <span class=\"string\">\"&lt;string&gt;\"</span>, line <span class=\"number\">1</span>, <span class=\"keyword\">in</span> &lt;module&gt;\n  File <span class=\"string\">\"/Users/arihantparsoya/Documents/sympy/sympy/core/operations.py\"</span>, line <span class=\"number\">411</span>, <span class=\"keyword\">in</span> __new__\n    _args = frozenset(cls._new_args_filter(args))\n  File <span class=\"string\">\"/Users/arihantparsoya/Documents/sympy/sympy/logic/boolalg.py\"</span>, line <span class=\"number\">532</span>, <span class=\"keyword\">in</span> _new_args_filter\n    args = BooleanFunction.binary_check_and_simplify(*args)\n  File <span class=\"string\">\"/Users/arihantparsoya/Documents/sympy/sympy/logic/boolalg.py\"</span>, line <span class=\"number\">433</span>, <span class=\"keyword\">in</span> binary_check_and_simplify\n    args = [as_Boolean(i) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> args]\n  File <span class=\"string\">\"/Users/arihantparsoya/Documents/sympy/sympy/logic/boolalg.py\"</span>, line <span class=\"number\">433</span>, <span class=\"keyword\">in</span> &lt;listcomp&gt;\n    args = [as_Boolean(i) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> args]\n  File <span class=\"string\">\"/Users/arihantparsoya/Documents/sympy/sympy/logic/boolalg.py\"</span>, line <span class=\"number\">52</span>, <span class=\"keyword\">in</span> as_Boolean\n    <span class=\"keyword\">raise</span> TypeError(<span class=\"string\">'expecting bool or Boolean, not `%s`.'</span> % e)\nTypeError: expecting bool <span class=\"keyword\">or</span> Boolean, <span class=\"keyword\">not</span> `PositiveQ(a)`.</code></pre>",
  "id": "5ae815e6dea1b95c10f28eee",
  "issues": [],
  "mentions": [
   {
    "screenName": "ashishkg0022",
    "userId": "58bd696cd73408ce4f4eb85b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-01T07:23:18.576Z",
  "text": "@ashishkg0022 , I have investigated the parsetools bug. The problem seems to be in `sympify` of the string expression:\n```python\n>>> from sympy import sympify\n>>>                                                      \n>>> expr = 'Or(IntegerQ(m), And(PositiveQ(a), PositiveQ(c)))'\n>>> sympify(expr)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/arihantparsoya/Documents/sympy/sympy/core/sympify.py\", line 368, in sympify\n    expr = parse_expr(a, local_dict=locals, transformations=transformations, evaluate=evaluate)\n  File \"/Users/arihantparsoya/Documents/sympy/sympy/parsing/sympy_parser.py\", line 950, in parse_expr\n    return eval_expr(code, local_dict, global_dict)\n  File \"/Users/arihantparsoya/Documents/sympy/sympy/parsing/sympy_parser.py\", line 863, in eval_expr\n    code, global_dict, local_dict)  # take local objects in preference\n  File \"<string>\", line 1, in <module>\n  File \"/Users/arihantparsoya/Documents/sympy/sympy/core/operations.py\", line 411, in __new__\n    _args = frozenset(cls._new_args_filter(args))\n  File \"/Users/arihantparsoya/Documents/sympy/sympy/logic/boolalg.py\", line 532, in _new_args_filter\n    args = BooleanFunction.binary_check_and_simplify(*args)\n  File \"/Users/arihantparsoya/Documents/sympy/sympy/logic/boolalg.py\", line 433, in binary_check_and_simplify\n    args = [as_Boolean(i) for i in args]\n  File \"/Users/arihantparsoya/Documents/sympy/sympy/logic/boolalg.py\", line 433, in <listcomp>\n    args = [as_Boolean(i) for i in args]\n  File \"/Users/arihantparsoya/Documents/sympy/sympy/logic/boolalg.py\", line 52, in as_Boolean\n    raise TypeError('expecting bool or Boolean, not `%s`.' % e)\nTypeError: expecting bool or Boolean, not `PositiveQ(a)`.\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "can someone suggest nomenclature for constraints. Like, How will I distinguish between :<br><code>CustomConstraint(lambda p, m, n: Not(NegativeIntegerQ((m + n*(p + S(1)) + S(1))/n)))</code><br>and<br><code>CustomConstraint(lambda p, m, n: Not(NegativeIntegerQ((m + S(2)*n*(p + S(1)) + S(1))/(S(2)*n))))</code>",
  "id": "5ae84cbf0c60a5400488a634",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-01T11:17:19.693Z",
  "text": "can someone suggest nomenclature for constraints. Like, How will I distinguish between : \n`CustomConstraint(lambda p, m, n: Not(NegativeIntegerQ((m + n*(p + S(1)) + S(1))/n)))` \nand\n`CustomConstraint(lambda p, m, n: Not(NegativeIntegerQ((m + S(2)*n*(p + S(1)) + S(1))/(S(2)*n))))`\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Is it possible to number the constraints like <code>linear_products_cons_1</code>, <code>linear_products_cons_2</code>, etc?",
  "id": "5ae8849a53ceca3604a2c961",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-01T15:15:38.287Z",
  "text": "Is it possible to number the constraints like `linear_products_cons_1`, `linear_products_cons_2`, etc?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I will try it out.",
  "id": "5ae8b0fbdb299d4004c31116",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-01T18:24:59.497Z",
  "text": "I will try it out.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<blockquote>\n<p>I think that it should be imported in such a way that <code>sympify</code> could access it. Now it looks like it does not recognize it as a boolean. </p></blockquote>\n<p>kalevi told this regarding bug in <code>parsetools</code> . How can I import utility_functions in sympify ?</p>",
  "id": "5ae8bdb659a05780049876c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-01T19:19:18.335Z",
  "text": ">I think that it should be imported in such a way that `sympify` could access it. Now it looks like it does not recognize it as a boolean. \n\nkalevi told this regarding bug in `parsetools` . How can I import utility_functions in sympify ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-02T07:44:20.320Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<blockquote>\n<p>How can I import utility_functions in sympify ?</p></blockquote>\n<p>Do you mean modifying <code>sympify</code>? I would advise against this.</p>",
  "id": "5ae96c4fda323a7c04ee03fb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-02T07:44:15.070Z",
  "text": "> How can I import utility_functions in sympify ?\n\nDo you mean modifying `sympify`? I would advise against this.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Aaron suggested redefining utility_functions like this <pre><code><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PositiveQ</span><span class=\"params\">(Function)</span>:</span>\n    <span class=\"decorator\">@classmethod</span>\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">eval</span><span class=\"params\">(cls, var)</span>:</span>\n        <span class=\"keyword\">if</span> var.has(zoo) <span class=\"keyword\">or</span> var.has(oo):\n            <span class=\"keyword\">return</span> <span class=\"keyword\">False</span>\n        res = var &gt; <span class=\"number\">0</span>\n        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> res.is_Relational:\n            <span class=\"keyword\">return</span> res</code></pre>",
  "id": "5ae96ddb6f9af87e04377be5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-02T07:50:51.675Z",
  "text": "Aaron suggested redefining utility_functions like this \n```\nclass PositiveQ(Function):\n    @classmethod\n    def eval(cls, var):\n        if var.has(zoo) or var.has(oo):\n            return False\n        res = var > 0\n        if not res.is_Relational:\n            return res\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "and passing <code>locals = locals()</code> while sympifying.",
  "id": "5ae96e0b97e5506e048e98cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-02T07:51:39.816Z",
  "text": "and passing `locals = locals()` while sympifying.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span>  I discussed in the main channel yesterday about this.",
  "id": "5ae96e4240f24c4304477d87",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-02T07:52:34.439Z",
  "text": "@Upabjojr  I discussed in the main channel yesterday about this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "what do you think about modifying <code>utility_functions</code> . ? ",
  "id": "5ae96fdc97e5506e048ea106",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-02T07:59:24.224Z",
  "text": "what do you think about modifying `utility_functions` . ? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span>  <span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span>  I tried this, but the problem is that some of these <code>boolean functions</code> should return <code>unevaluated</code> only while parsing of rules.  So the condition for keeping them unevaluated is not clear . ",
  "id": "5aea0455b982f08504eaff5e",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   },
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-02T18:32:53.018Z",
  "text": "@Upabjojr  @asmeurer  I tried this, but the problem is that some of these `boolean functions` should return `unevaluated` only while parsing of rules.  So the condition for keeping them unevaluated is not clear . ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Is there some alternative way ? ",
  "id": "5aea0532b37eab7d04611a70",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-02T18:36:34.253Z",
  "text": "Is there some alternative way ? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-02T19:15:48.424Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "like <code>PositiveQ</code> in rubi(original) states that <code>PositiveQ[u] returns True if u is a positive numeric quantity, else returns False.</code> So , definition of <code>PositiveQ</code> currently in sympy matches with this. We require unevaluated forms while parsing only. Currently If I am not passing <code>locals=locals()</code>, it works for simple terms like .Problem comes  when there is boolean operators like <code>Or</code>, <code>Not</code> , etc .  like <code>sympify(&#39;IntegerQ(a))&#39;)</code> is not a problem , but <code>sympify(&#39;Or(IntegerQ(a), IntegerQ(b))&#39;)</code> results in problem.",
  "id": "5aea0e4253ceca3604a874ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-02T19:15:14.858Z",
  "text": "like `PositiveQ` in rubi(original) states that `PositiveQ[u] returns True if u is a positive numeric quantity, else returns False.` So , definition of `PositiveQ` currently in sympy matches with this. We require unevaluated forms while parsing only. Currently If I am not passing `locals=locals()`, it works for simple terms like .Problem comes  when there is boolean operators like `Or`, `Not` , etc .  like `sympify('IntegerQ(a))')` is not a problem , but `sympify('Or(IntegerQ(a), IntegerQ(b))') ` results in problem.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ashishkg0022\" class=\"mention\">@ashishkg0022</span> you should clarify exactly what it is you are trying to do. I&#39;m unclear what that is, so I can&#39;t really suggest what the best solution is. ",
  "id": "5aeac0de93dc5e5cdb43d329",
  "issues": [],
  "mentions": [
   {
    "screenName": "ashishkg0022",
    "userId": "58bd696cd73408ce4f4eb85b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T07:57:18.333Z",
  "text": "@ashishkg0022 you should clarify exactly what it is you are trying to do. I'm unclear what that is, so I can't really suggest what the best solution is. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "First, should <code>PositiveQ(x)</code> evaluate or not, if <code>x</code> is a plain symbol with no assumptions? ",
  "id": "5aeac12093dc5e5cdb43d32c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T07:58:24.392Z",
  "text": "First, should `PositiveQ(x)` evaluate or not, if `x` is a plain symbol with no assumptions? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "are you having trouble generating the code or using the generated code?",
  "id": "5aeaccbf40f24c43044c2e44",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T08:47:59.341Z",
  "text": "are you having trouble generating the code or using the generated code?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I&#39;m not particularly fond of parsing the string like that, but it&#39;s probably inherited code.",
  "id": "5aeacce71eddba3d04cbb268",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T08:48:39.291Z",
  "text": "I'm not particularly fond of parsing the string like that, but it's probably inherited code.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Trouble is in generating the code. While generating the code , we use <code>sstr(sympify(generate_sympy_from_parsed(s))</code> .<br>So when it is being executed if <code>s</code> contains some boolean operators like <code>Or</code>, it results in an error. So Aaron suggested to pass <code>PositiveQ</code> as <code>locals</code>. But when I am passing that , it evaluates.<br>Like <code>PositiveQ(Symbol(&#39;a&#39;))</code> evaluates to False. So I want it unevaluated. But when using the generated code in rules , <code>PositiveQ(Symbol(&#39;a&#39;))</code> should evaluate to False.",
  "id": "5aeacf136d98e53e044b6e7c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T08:57:55.211Z",
  "text": "Trouble is in generating the code. While generating the code , we use `sstr(sympify(generate_sympy_from_parsed(s))` . \nSo when it is being executed if `s` contains some boolean operators like `Or`, it results in an error. So Aaron suggested to pass `PositiveQ` as `locals`. But when I am passing that , it evaluates.  \nLike `PositiveQ(Symbol('a'))` evaluates to False. So I want it unevaluated. But when using the generated code in rules , `PositiveQ(Symbol('a'))` should evaluate to False.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<blockquote>\n<p>First, should <code>PositiveQ(x)</code> evaluate or not, if <code>x</code> is a plain symbol with no assumptions? </p></blockquote>\n<p>It should evaluate to <code>False</code></p>",
  "id": "5aeacf6e00dc4888048fe055",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T08:59:26.190Z",
  "text": "> First, should `PositiveQ(x)` evaluate or not, if `x` is a plain symbol with no assumptions? \n\nIt should evaluate to `False`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "yeah, there are people in the SymPy community that are favorable to raise exceptions if you construct things with the wrong data type.",
  "id": "5aeaff466f9af87e043cf813",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T12:23:34.419Z",
  "text": "yeah, there are people in the SymPy community that are favorable to raise exceptions if you construct things with the wrong data type.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Have you tried using a fake <code>PositiveQ</code> while generating the expressions? You could pass <code>Function(&quot;PositiveQ&quot;)(a)</code> instead of <code>PositiveQ(a)</code>, this will still print the same way, but probably solve this issue.",
  "id": "5aeaff85da323a7c04f383a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T12:24:37.044Z",
  "text": "Have you tried using a fake `PositiveQ` while generating the expressions? You could pass `Function(\"PositiveQ\")(a)` instead of `PositiveQ(a)`, this will still print the same way, but probably solve this issue.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I will try it out.",
  "id": "5aeaffe1b37eab7d04644471",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T12:26:09.536Z",
  "text": "I will try it out.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span>  do you mean passing  <code>Function(&quot;PositiveQ&quot;)(a)</code> as <code>locals</code> in sympify ? ",
  "id": "5aeb074e1eddba3d04cc86f2",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T12:57:50.350Z",
  "text": "@Upabjojr  do you mean passing  `Function(\"PositiveQ\")(a)` as `locals` in sympify ? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "In this case error comes as <code>TypeError: &#39;PositiveQ&#39; object is not callable</code>",
  "id": "5aeb077cda323a7c04f3a2eb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T12:58:36.112Z",
  "text": "In this case error comes as `TypeError: 'PositiveQ' object is not callable`\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "If I am missing anything, can you please give an example of sympifying this <code>expr = &#39;Or(IntegerQ(m), And(PositiveQ(a), PositiveQ(c)))&#39;</code>",
  "id": "5aeb07b31eddba3d04cc887d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T12:59:31.009Z",
  "text": "If I am missing anything, can you please give an example of sympifying this `expr = 'Or(IntegerQ(m), And(PositiveQ(a), PositiveQ(c)))'`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "no, I mean to replace <code>PositiveQ(a)</code> with <code>Function(&quot;PositiveQ&quot;)(a)</code> in the code generation. Forget about <em>locals</em>.",
  "id": "5aeb10b3e2d30c2f045ff626",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T13:37:55.725Z",
  "text": "no, I mean to replace `PositiveQ(a)` with `Function(\"PositiveQ\")(a)` in the code generation. Forget about _locals_.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "example you want to replace  <code>And(PositiveQ(a), PositiveQ(c))</code> by  <code>&#39;And(Function(&quot;PositveQ&quot;)(a),Function(&quot;PositveQ&quot;)(c))&#39;</code> ??",
  "id": "5aeb1438b37eab7d046495fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T13:52:56.777Z",
  "text": "example you want to replace  `And(PositiveQ(a), PositiveQ(c))` by  `'And(Function(\"PositveQ\")(a),Function(\"PositveQ\")(c))'` ??",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "This also results in <pre><code><span class=\"built_in\">TypeError</span>: expecting bool or <span class=\"built_in\">Boolean</span>, not <span class=\"string\">`PositveQ(a)`</span>.</code></pre>",
  "id": "5aeb1506da323a7c04f3d5c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T13:56:22.421Z",
  "text": "This also results in \n```\nTypeError: expecting bool or Boolean, not `PositveQ(a)`.\n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "are <code>a</code> and <code>c</code> symbols?",
  "id": "5aeb225b53ceca3604ac094a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T14:53:15.408Z",
  "text": "are `a` and `c` symbols?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "it works for me",
  "id": "5aeb226200dc4888049116af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T14:53:22.077Z",
  "text": "it works for me",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I believe the reason why we use <code>sstr(sympify( ... ))</code> is to print the expression in a human readable format. Technically this is not needed, but we would like to do this in order to easily read the generated code.",
  "id": "5aeb22b200dc48880491181c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T14:54:42.123Z",
  "text": "I believe the reason why we use `sstr(sympify( ... ))` is to print the expression in a human readable format. Technically this is not needed, but we would like to do this in order to easily read the generated code.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span>  , I think I am missing something . Can you give an example of code please. <pre><code>In [1]: from sympy import symbols, sympify\n\nIn [2]: a, c = symbols('a c')\n\nIn [3]: expr = 'And(Function({})(a),Function({})(c))'.format(\"PositveQ\",\"Positve\n   ...: Q\")\n\nIn [4]: sympify(expr)\n<span class=\"comment\">---------------------------------------------------------------------------</span>\nTypeError                                 Traceback (most recent <span class=\"operator\"><span class=\"keyword\">call</span> <span class=\"keyword\">last</span>)\n~/sympy/sympy/core/<span class=\"keyword\">cache</span>.py <span class=\"keyword\">in</span> wrapper(*args, **kwargs)\n     <span class=\"number\">92</span>                 try:\n<span class=\"comment\">---&gt; 93                     retval = cfunc(*args, **kwargs)</span>\n     <span class=\"number\">94</span>                 <span class=\"keyword\">except</span> TypeError:\n\n~/sympy/sympy/core/<span class=\"keyword\">function</span>.py <span class=\"keyword\">in</span> __new__(cls, *args, **options)\n    <span class=\"number\">421</span>         <span class=\"keyword\">if</span> cls <span class=\"keyword\">is</span> <span class=\"keyword\">Function</span>:\n<span class=\"comment\">--&gt; 422             return UndefinedFunction(*args, **options)</span>\n    <span class=\"number\">423</span> \n\n~/sympy/sympy/core/<span class=\"keyword\">function</span>.py <span class=\"keyword\">in</span> __new__(mcl, name, bases, __dict__, **kwargs)\n    <span class=\"number\">814</span>         __dict__[<span class=\"string\">'__module__'</span>] = None # <span class=\"keyword\">For</span> pickling\n<span class=\"comment\">--&gt; 815         ret = super(UndefinedFunction, mcl).__new__(mcl, name, bases, __dict__)</span>\n    <span class=\"number\">816</span>         <span class=\"keyword\">return</span> ret\n\nTypeError: type.__new__() argument <span class=\"number\">1</span> must be <span class=\"keyword\">str</span>, <span class=\"keyword\">not</span> Symbol\n\nDuring handling <span class=\"keyword\">of</span> the above <span class=\"keyword\">exception</span>, another <span class=\"keyword\">exception</span> occurred:\n\nTypeError                                 Traceback (most recent <span class=\"keyword\">call</span> <span class=\"keyword\">last</span>)\n&lt;ipython-<span class=\"keyword\">input</span>-<span class=\"number\">4</span>-<span class=\"number\">9335277764</span>c0&gt; <span class=\"keyword\">in</span> &lt;<span class=\"keyword\">module</span>&gt;()\n<span class=\"comment\">----&gt; 1 sympify(expr)</span>\n\n~/sympy/sympy/core/sympify.py <span class=\"keyword\">in</span> sympify(a, locals, convert_xor, strict, rational, evaluate)\n    <span class=\"number\">366</span>     try:\n    <span class=\"number\">367</span>         a = a.<span class=\"keyword\">replace</span>(<span class=\"string\">'\\n'</span>, <span class=\"string\">''</span>)\n<span class=\"comment\">--&gt; 368         expr = parse_expr(a, local_dict=locals, transformations=transformations, evaluate=evaluate)</span>\n    <span class=\"number\">369</span>     <span class=\"keyword\">except</span> (TokenError, SyntaxError) <span class=\"keyword\">as</span> exc:\n    <span class=\"number\">370</span>         raise SympifyError(<span class=\"string\">'could not parse %r'</span> % a, exc)\n\n~/sympy/sympy/parsing/sympy_parser.py <span class=\"keyword\">in</span> parse_expr(s, local_dict, transformations, global_dict, evaluate)\n    <span class=\"number\">948</span>         code = compile(evaluateFalse(code), <span class=\"string\">'&lt;string&gt;'</span>, <span class=\"string\">'eval'</span>)\n    <span class=\"number\">949</span> \n<span class=\"comment\">--&gt; 950     return eval_expr(code, local_dict, global_dict)</span>\n    <span class=\"number\">951</span> \n    <span class=\"number\">952</span> \n\n~/sympy/sympy/parsing/sympy_parser.py <span class=\"keyword\">in</span> eval_expr(code, local_dict, global_dict)\n    <span class=\"number\">861</span>     <span class=\"string\">\"\"\"\n    862     expr = eval(\n--&gt; 863         code, global_dict, local_dict)  # take local objects in preference\n    864 \n    865     return expr\n\n&lt;string&gt; in &lt;module&gt;()\n\n~/sympy/sympy/core/cache.py in wrapper(*args, **kwargs)\n     93                     retval = cfunc(*args, **kwargs)\n     94                 except TypeError:\n---&gt; 95                     retval = func(*args, **kwargs)\n     96                 return retval\n     97 \n\n~/sympy/sympy/core/function.py in __new__(cls, *args, **options)\n    420         # Handle calls like Function('f')\n    421         if cls is Function:\n--&gt; 422             return UndefinedFunction(*args, **options)\n    423 \n    424         n = len(args)\n\n~/sympy/sympy/core/function.py in __new__(mcl, name, bases, __dict__, **kwargs)\n    813         __dict__.update({'_extra_kwargs': kwargs})\n    814         __dict__['__module__'] = None # For pickling\n--&gt; 815         ret = super(UndefinedFunction, mcl).__new__(mcl, name, bases, __dict__)\n    816         return ret\n    817 \n\nTypeError: type.__new__() argument 1 must be str, not Symbol</span></span></code></pre>",
  "id": "5aeb3202db299d4004cba035",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T16:00:02.857Z",
  "text": "@Upabjojr  , I think I am missing something . Can you give an example of code please. \n```\nIn [1]: from sympy import symbols, sympify\n\nIn [2]: a, c = symbols('a c')\n\nIn [3]: expr = 'And(Function({})(a),Function({})(c))'.format(\"PositveQ\",\"Positve\n   ...: Q\")\n\nIn [4]: sympify(expr)\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n~/sympy/sympy/core/cache.py in wrapper(*args, **kwargs)\n     92                 try:\n---> 93                     retval = cfunc(*args, **kwargs)\n     94                 except TypeError:\n\n~/sympy/sympy/core/function.py in __new__(cls, *args, **options)\n    421         if cls is Function:\n--> 422             return UndefinedFunction(*args, **options)\n    423 \n\n~/sympy/sympy/core/function.py in __new__(mcl, name, bases, __dict__, **kwargs)\n    814         __dict__['__module__'] = None # For pickling\n--> 815         ret = super(UndefinedFunction, mcl).__new__(mcl, name, bases, __dict__)\n    816         return ret\n\nTypeError: type.__new__() argument 1 must be str, not Symbol\n\nDuring handling of the above exception, another exception occurred:\n\nTypeError                                 Traceback (most recent call last)\n<ipython-input-4-9335277764c0> in <module>()\n----> 1 sympify(expr)\n\n~/sympy/sympy/core/sympify.py in sympify(a, locals, convert_xor, strict, rational, evaluate)\n    366     try:\n    367         a = a.replace('\\n', '')\n--> 368         expr = parse_expr(a, local_dict=locals, transformations=transformations, evaluate=evaluate)\n    369     except (TokenError, SyntaxError) as exc:\n    370         raise SympifyError('could not parse %r' % a, exc)\n\n~/sympy/sympy/parsing/sympy_parser.py in parse_expr(s, local_dict, transformations, global_dict, evaluate)\n    948         code = compile(evaluateFalse(code), '<string>', 'eval')\n    949 \n--> 950     return eval_expr(code, local_dict, global_dict)\n    951 \n    952 \n\n~/sympy/sympy/parsing/sympy_parser.py in eval_expr(code, local_dict, global_dict)\n    861     \"\"\"\n    862     expr = eval(\n--> 863         code, global_dict, local_dict)  # take local objects in preference\n    864 \n    865     return expr\n\n<string> in <module>()\n\n~/sympy/sympy/core/cache.py in wrapper(*args, **kwargs)\n     93                     retval = cfunc(*args, **kwargs)\n     94                 except TypeError:\n---> 95                     retval = func(*args, **kwargs)\n     96                 return retval\n     97 \n\n~/sympy/sympy/core/function.py in __new__(cls, *args, **options)\n    420         # Handle calls like Function('f')\n    421         if cls is Function:\n--> 422             return UndefinedFunction(*args, **options)\n    423 \n    424         n = len(args)\n\n~/sympy/sympy/core/function.py in __new__(mcl, name, bases, __dict__, **kwargs)\n    813         __dict__.update({'_extra_kwargs': kwargs})\n    814         __dict__['__module__'] = None # For pickling\n--> 815         ret = super(UndefinedFunction, mcl).__new__(mcl, name, bases, __dict__)\n    816         return ret\n    817 \n\nTypeError: type.__new__() argument 1 must be str, not Symbol\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "sorry for the previous code, this is the code I tried<pre><code><span class=\"keyword\">In</span> [<span class=\"number\">1</span>]: from sympy import symbols, sympify\n\n<span class=\"keyword\">In</span> [<span class=\"number\">2</span>]: a, c = symbols(<span class=\"string\">'a c'</span>)\n\n<span class=\"keyword\">In</span> [<span class=\"number\">3</span>]: expr = <span class=\"string\">'And(Function(\"{}\")(a),Function(\"{}\")(c))'</span>.format(<span class=\"string\">\"PositveQ\"</span>,<span class=\"string\">\"Pos\n   ...: itveQ\"</span>)\n\n<span class=\"keyword\">In</span> [<span class=\"number\">4</span>]: sympify(expr)\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)</code></pre>",
  "id": "5aeb333b97e5506e04950922",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T16:05:15.108Z",
  "text": "sorry for the previous code, this is the code I tried\n```\nIn [1]: from sympy import symbols, sympify\n\nIn [2]: a, c = symbols('a c')\n\nIn [3]: expr = 'And(Function(\"{}\")(a),Function(\"{}\")(c))'.format(\"PositveQ\",\"Pos\n   ...: itveQ\")\n\nIn [4]: sympify(expr)\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "your second code works for me",
  "id": "5aeb33a840f24c43044dcea4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T16:07:04.588Z",
  "text": "your second code works for me",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "but its not working on me. ",
  "id": "5aeb33bb5cf0b83004538be4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T16:07:23.655Z",
  "text": "but its not working on me. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "it looks like it&#39;s been introduced in the current master",
  "id": "5aeb340bf2d2d537045e4ef0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T16:08:43.887Z",
  "text": "it looks like it's been introduced in the current master",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Yes. In old versions, previous code(parsetools) worked fine. ",
  "id": "5aeb342f6d98e53e044cea09",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T16:09:19.575Z",
  "text": "Yes. In old versions, previous code(parsetools) worked fine. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "yes, there are people in SymPy who like exceptions",
  "id": "5aeb344f6d98e53e044ceb07",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T16:09:51.277Z",
  "text": "yes, there are people in SymPy who like exceptions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the problem has been introduced in commit a9119391e53",
  "id": "5aeb34fd40f24c43044dd2be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T16:12:45.494Z",
  "text": "the problem has been introduced in commit a9119391e53",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Is there some way to resolve this?<br>I thought to separate cases for <code>Or</code>, <code>And</code>, <code>Not</code> . And use sympify for individual terms. ",
  "id": "5aeb357cdb299d4004cbacde",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T16:14:52.285Z",
  "text": "Is there some way to resolve this?\nI thought to separate cases for `Or`, `And`, `Not` . And use sympify for individual terms. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"13204\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#13204</span>",
  "id": "5aeb364a97e5506e04951649",
  "issues": [
   {
    "number": "13204",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T16:18:18.711Z",
  "text": "https://github.com/sympy/sympy/pull/13204",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I believe we need to fix this bug",
  "id": "5aeb36546f9af87e043ddcde",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T16:18:28.769Z",
  "text": "I believe we need to fix this bug",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I am unclear to fix it. Can we open a proper issue ?",
  "id": "5aeb58346d98e53e044d73ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-03T18:43:00.695Z",
  "text": "I am unclear to fix it. Can we open a proper issue ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "OK",
  "id": "5aebfc9e5cf0b8300455fbed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-04T06:24:30.549Z",
  "text": "OK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "if this issue is causing too many problems, just pass <code>locals={&quot;Or&quot;: Function(&quot;Or&quot;), &quot;And&quot;: ... }</code>. The code output will be horrible yet it will work",
  "id": "5aec7096ff26986d0831bb5d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-04T14:39:18.327Z",
  "text": "if this issue is causing too many problems, just pass `locals={\"Or\": Function(\"Or\"), \"And\": ... }`. The code output will be horrible yet it will work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Ok , I will try this. ",
  "id": "5aec88c35cf0b830045806a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-04T16:22:27.045Z",
  "text": "Ok , I will try this. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>I got this as an example.</p><pre><code>CustomConstraint<span class=\"list\">(<span class=\"keyword\">lambda</span> m, c, a: Or<span class=\"list\">(<span class=\"keyword\">IntegerQ</span><span class=\"list\">(<span class=\"keyword\">m</span>)</span>, And<span class=\"list\">(<span class=\"keyword\">PositiveQ</span><span class=\"list\">(<span class=\"keyword\">a</span>)</span>, PositiveQ<span class=\"list\">(<span class=\"keyword\">c</span>)</span>)</span>)</span>)</span></code></pre><p>Should we use our own <code>util_and</code> instead of <code>And</code>(it will be slow)?</p><pre><code> <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">util_and</span><span class=\"params\">(*args)</span>:</span>\n   ...:     <span class=\"keyword\">return</span> functools.reduce(operator.and_, args)</code></pre>",
  "id": "5aec926953ceca3604b0f9c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-04T17:03:37.279Z",
  "text": "I got this as an example.\n```\nCustomConstraint(lambda m, c, a: Or(IntegerQ(m), And(PositiveQ(a), PositiveQ(c))))\n```\nShould we use our own `util_and` instead of `And`(it will be slow)?\n```\n def util_and(*args):\n   ...:     return functools.reduce(operator.and_, args)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Thanks btw, it worked fine. I will soon give an update on the code. ",
  "id": "5aec94ecf2d2d5370462f282",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-04T17:14:20.629Z",
  "text": "Thanks btw, it worked fine. I will soon give an update on the code. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "it would be advisable to look for a way not to put the generated files in every commit",
  "id": "5aed89366d98e53e04541335",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T10:36:38.576Z",
  "text": "it would be advisable to look for a way not to put the generated files in every commit",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "it is likely to blow up the repository",
  "id": "5aed894203cafa797b2b5090",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T10:36:50.651Z",
  "text": "it is likely to blow up the repository",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "for example... do we have a simple function, e.g. generate_rubi_files()?",
  "id": "5aed89631eddba3d04d46632",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T10:37:23.884Z",
  "text": "for example... do we have a simple function, e.g. generate_rubi_files()?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the idea is to just call a function once and have the files generated",
  "id": "5aed897700dc488804989333",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T10:37:43.729Z",
  "text": "the idea is to just call a function once and have the files generated",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "we already have such a function <code>rubi_rule_parser</code> . ",
  "id": "5aed8a2c6f9af87e04450357",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T10:40:44.431Z",
  "text": "we already have such a function `rubi_rule_parser` . ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "does it retrieve the rules automatically?",
  "id": "5aed8a5840f24c430454d638",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T10:41:28.498Z",
  "text": "does it retrieve the rules automatically?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Do we need to add the downvalues files in sympy repo ?",
  "id": "5aed8ad85cf0b830045ac53b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T10:43:36.672Z",
  "text": "Do we need to add the downvalues files in sympy repo ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "maybe in a separate repo",
  "id": "5aed8aeb6d98e53e045418b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T10:43:55.768Z",
  "text": "maybe in a separate repo",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "but let&#39;s focus on one thing at the time",
  "id": "5aed8b5003cafa797b2b574a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T10:45:36.813Z",
  "text": "but let's focus on one thing at the time",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "let&#39;s get rid of the repeated CustomConstraints and the lambdas",
  "id": "5aed8b6a6f9af87e044505de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T10:46:02.646Z",
  "text": "let's get rid of the repeated CustomConstraints and the lambdas",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Yes, I am working on it",
  "id": "5aed8b7853ceca3604b3853a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T10:46:16.903Z",
  "text": "Yes, I am working on it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I will update the code in a separate repo first. If some changes are required in the structure , I can change it before opening a PR",
  "id": "5aed8bf5db299d4004d2f374",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T10:48:21.084Z",
  "text": "I will update the code in a separate repo first. If some changes are required in the structure , I can change it before opening a PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would like to avoid generating the code too many times, as the PR would get enormous. Ideally the PR should only edit the code generator.",
  "id": "5aed8c5553ceca3604b38868",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T10:49:57.953Z",
  "text": "I would like to avoid generating the code too many times, as the PR would get enormous. Ideally the PR should only edit the code generator.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "ok.",
  "id": "5aed8c9ddb299d4004d2f564",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T10:51:09.603Z",
  "text": "ok.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "One thing more I needed to ask. Do we need separate files for constraints and then import ? Cant we declare unique constraint in the same file which contains the rules ?",
  "id": "5aed8fd559a0578004a821f4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T11:04:53.740Z",
  "text": "One thing more I needed to ask. Do we need separate files for constraints and then import ? Cant we declare unique constraint in the same file which contains the rules ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "we have multiple files for the rules",
  "id": "5aed906559a0578004a8231e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T11:07:17.441Z",
  "text": "we have multiple files for the rules",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "yes",
  "id": "5aed906dda323a7c04fb6371",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T11:07:25.241Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "some maybe a separate file for the constraints is advisable",
  "id": "5aed9075b37eab7d046c6166",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T11:07:33.649Z",
  "text": "some maybe a separate file for the constraints is advisable",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "You mean separate constraint file for each file. Like <code>constraint_linear_products.py</code> , <code>constraint_qudratic_products.py</code> , etc ?",
  "id": "5aed90e3b982f08504f65f46",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T11:09:23.147Z",
  "text": "You mean separate constraint file for each file. Like `constraint_linear_products.py` , `constraint_qudratic_products.py` , etc ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "mmm no",
  "id": "5aed910597e5506e049c6d5b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T11:09:57.236Z",
  "text": "mmm no",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I think the constraints can be used across files",
  "id": "5aed9111f2d2d53704659169",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T11:10:09.567Z",
  "text": "I think the constraints can be used across files",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "A single constraint file ?",
  "id": "5aed917297e5506e049c6e42",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T11:11:46.247Z",
  "text": "A single constraint file ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "maybe yes",
  "id": "5aed91a4ff26986d0834ef1a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T11:12:36.046Z",
  "text": "maybe yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "But how will I then generate a single constraint file? Like I am generating rules for separate files. So for one time I only have the information about that file. How to maintain uniqueness ?<br>Currently I have used a dictionary to check the constraint which are already present.",
  "id": "5aed923cb37eab7d046c66b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T11:15:08.668Z",
  "text": "But how will I then generate a single constraint file? Like I am generating rules for separate files. So for one time I only have the information about that file. How to maintain uniqueness ? \nCurrently I have used a dictionary to check the constraint which are already present.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I have generated code with separate constraints using normal function and  no repetition of constraints. Algebraic rules now takes about <code>25 sec</code> to load. When I used combined , loading time was little les , but working time may be slow. I have put code on this repo. <a href=\"https://github.com/ashishkg0022/rubi-structure\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/ashishkg0022/rubi-structure</a><br>Please look at it. Suggest me if I am missing anything.",
  "id": "5aedd48203cafa797b2c1783",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-05T15:57:54.636Z",
  "text": "I have generated code with separate constraints using normal function and  no repetition of constraints. Algebraic rules now takes about `25 sec` to load. When I used combined , loading time was little les , but working time may be slow. I have put code on this repo. https://github.com/ashishkg0022/rubi-structure \nPlease look at it. Suggest me if I am missing anything.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/ashishkg0022/rubi-structure"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "OK, what about modifying the code generator?",
  "id": "5aef35acb37eab7d0470494a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-06T17:04:44.103Z",
  "text": "OK, what about modifying the code generator?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "you should put the constraints in a separate file",
  "id": "5aef37d55cf0b830045eb10e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-06T17:13:57.792Z",
  "text": "you should put the constraints in a separate file",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I thought we should go for the non-repeated version.",
  "id": "5aef389ada323a7c04ff420e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-06T17:17:14.203Z",
  "text": "I thought we should go for the non-repeated version.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "(maybe the time is slightly longer because it&#39;s updating the structure of the discrimination net, while the other one is just adding new subunits to it?)",
  "id": "5aef38ed00dc4888049c7ccb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-06T17:18:37.905Z",
  "text": "(maybe the time is slightly longer because it's updating the structure of the discrimination net, while the other one is just adding new subunits to it?)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I have generated the code by updating <code>parse_tools</code>.",
  "id": "5aef4b56da323a7c04ff7040",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-06T18:37:10.598Z",
  "text": "I have generated the code by updating `parse_tools`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span>  still I am unclear about how will I generate a single constraint file for all rules. ",
  "id": "5aef4ba11eddba3d04d88b05",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-06T18:38:25.119Z",
  "text": "@Upabjojr  still I am unclear about how will I generate a single constraint file for all rules. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "while generating code, at once we have the <code>downvalues</code> of a single file only.",
  "id": "5aef4c1c1eddba3d04d88bb3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-06T18:40:28.470Z",
  "text": "while generating code, at once we have the `downvalues ` of a single file only.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "well, we need to do that for the <code>pickle</code> to work",
  "id": "5aef6dab97e5506e04a0b857",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-06T21:03:39.848Z",
  "text": "well, we need to do that for the `pickle` to work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "maybe you can put the costraints in a <code>dict</code> mapping to the function name?",
  "id": "5aef6dd46d98e53e045885bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-06T21:04:20.222Z",
  "text": "maybe you can put the costraints in a `dict` mapping to the function name?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Yes I have done that using a <code>dict</code>",
  "id": "5aef6e26e88607d93fedf193",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-06T21:05:42.261Z",
  "text": "Yes I have done that using a `dict`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I don&#39;t understand what&#39;s the problem with the <em>single file only</em>.",
  "id": "5aef6e5fff26986d08393ba2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-06T21:06:39.461Z",
  "text": "I don't understand what's the problem with the _single file only_.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Currently at one time, I am generating code for single rule file. So if there are 7-8 rule files. I will run the parsetools 7-8 number of times. ",
  "id": "5aef6ef71eddba3d04d8e2aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-06T21:09:11.377Z",
  "text": "Currently at one time, I am generating code for single rule file. So if there are 7-8 rule files. I will run the parsetools 7-8 number of times. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "can you save the dict and reuse it for the next file?",
  "id": "5aef6f1903cafa797b2fbe4a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-06T21:09:45.522Z",
  "text": "can you save the dict and reuse it for the next file?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Yes. ",
  "id": "5aef6f3840f24c4304595a11",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-06T21:10:16.471Z",
  "text": "Yes. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I will do it and give an update.",
  "id": "5aef6f6897e5506e04a0bea6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-06T21:11:04.726Z",
  "text": "I will do it and give an update.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I have used <code>sstr(sympify( ... ))</code> mainly to prevent floating point errors. Using <code>sstr</code> the parser prints <code>S(1)/S(2)</code> instead of <code>1/2</code>. ",
  "id": "5af0123240f24c43045afb36",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-07T08:45:38.069Z",
  "text": "I have used `sstr(sympify( ... ))` mainly to prevent floating point errors. Using `sstr` the parser prints `S(1)/S(2)` instead of `1/2`. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<code>sstr</code> also helps in changing the default printing of <code>Not</code>operator by SymPy in line 412: <code>StrPrinter._print_Not = lambda self, expr: &quot;Not(%s)&quot; % self._print(expr.args[0])</code>",
  "id": "5af012595cf0b8300460d7fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-07T08:46:17.085Z",
  "text": "`sstr` also helps in changing the default printing of `Not`operator by SymPy in line 412: `StrPrinter._print_Not = lambda self, expr: \"Not(%s)\" % self._print(expr.args[0])`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I have made a separate constraint file. Also I have updated<code>parsetools</code>. I have put everything here :<br><a href=\"https://github.com/ashishkg0022/rubi-structure/tree/master/way_2\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/ashishkg0022/rubi-structure/tree/master/way_2</a>",
  "id": "5af1a3e797e5506e04a78354",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-08T13:19:35.877Z",
  "text": "I have made a separate constraint file. Also I have updated`parsetools`. I have put everything here : \nhttps://github.com/ashishkg0022/rubi-structure/tree/master/way_2\n",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/ashishkg0022/rubi-structure/tree/master/way_2"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Great, can you test these modules?",
  "id": "5af1ddf697f07c7e137a9f26",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-08T17:27:18.421Z",
  "text": "Great, can you test these modules?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "just to be sure that the tests are passing as expected ",
  "id": "5af1de0997f07c7e137aa017",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-08T17:27:37.241Z",
  "text": "just to be sure that the tests are passing as expected ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I have tested some. In upcomig days, I will remove lambdas from <code>replacement rule</code> . Then I will be doing proper test for integrals.",
  "id": "5af1de5659a0578004b44168",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-08T17:28:54.850Z",
  "text": "I have tested some. In upcomig days, I will remove lambdas from `replacement rule` . Then I will be doing proper test for integrals.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay!",
  "id": "5af28bf7da323a7c0409a96b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-09T05:49:43.156Z",
  "text": "Okay!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I have tested the working of updated code. It is working fine. Currently I am looking to fix the order in which rules are matched. It is an important issue. ",
  "id": "5af7e9f8d332ee5fad14264f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-13T07:32:08.630Z",
  "text": "I have tested the working of updated code. It is working fine. Currently I am looking to fix the order in which rules are matched. It is an important issue. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I have removed lambdas from replacement rule too. It&#39;s working as expected.",
  "id": "5afaddff1cfca775e10dfe3e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-15T13:17:51.196Z",
  "text": "I have removed lambdas from replacement rule too. It's working as expected.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Now when I started testing. There are some cases where we need to fix the order in which rules are matched.",
  "id": "5afade32d245fe2eb7b0cb8d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-15T13:18:42.161Z",
  "text": "Now when I started testing. There are some cases where we need to fix the order in which rules are matched.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I talked with matchpy developers in this issue : <span data-link-type=\"issue\" data-issue=\"30\" data-issue-repo=\"HPAC/matchpy\" class=\"issue\">HPAC/matchpy#30</span><br>They dont have a way for this. So , I came up with a way :<br>We know what should be the order of matching(Mathmetica&#39;s downvalue gives that).<br>So, we can first find all the matching rules. So for example <code>rule28</code>  and <code>rule12</code> matches to an expression. We can choose to select only rule <code>12</code> .<br><span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span>  <span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span>  What do you think ?",
  "id": "5afadf869ad18967b9e8c0f6",
  "issues": [
   {
    "number": "30",
    "repo": "HPAC/matchpy"
   }
  ],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   },
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-15T13:24:22.932Z",
  "text": "I talked with matchpy developers in this issue : https://github.com/HPAC/matchpy/issues/30 \nThey dont have a way for this. So , I came up with a way : \nWe know what should be the order of matching(Mathmetica's downvalue gives that).\nSo, we can first find all the matching rules. So for example `rule28`  and `rule12` matches to an expression. We can choose to select only rule `12` .\n@parsoyaarihant  @Upabjojr  What do you think ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "It may be little slow but it will solve major recursion errors. ",
  "id": "5afae2395a1d895fae3fdc06",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-15T13:35:53.446Z",
  "text": "It may be little slow but it will solve major recursion errors. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Yes, you should try this, I dont think it will take time to implement this and do a rough check if we are getting recursion errors.",
  "id": "5afae244e0b50c2d05c39ac1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-15T13:36:04.112Z",
  "text": "Yes, you should try this, I dont think it will take time to implement this and do a rough check if we are getting recursion errors.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Okay I will try it and give an update soon.",
  "id": "5afae265bd10f34a68038d2c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-15T13:36:37.297Z",
  "text": "Okay I will try it and give an update soon.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "After parsing, the rules are already in the order of Mathematica right?",
  "id": "5afae277d332ee5fad1d7343",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-15T13:36:55.600Z",
  "text": "After parsing, the rules are already in the order of Mathematica right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "yup",
  "id": "5afae280e1cf621dba1f3ef7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-15T13:37:04.557Z",
  "text": "yup",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "So if two rules are gettin matched say <code>rule_11</code> and <code>rule_23</code>, so you just need to pick the one with lower indexing i.e. <code>rule_11</code>. ",
  "id": "5afae2bfe0b50c2d05c39cda",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-15T13:38:07.615Z",
  "text": "So if two rules are gettin matched say `rule_11` and `rule_23`, so you just need to pick the one with lower indexing i.e. `rule_11`. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Yes. This will give correct result. ",
  "id": "5afae2e941f54f22e22ef12c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-15T13:38:49.864Z",
  "text": "Yes. This will give correct result. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay ",
  "id": "5afae2f89ad18967b9e8d0bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-15T13:39:04.991Z",
  "text": "Okay ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "Any progress in utility functions? ",
  "id": "5afb25545666c42eb612dd7e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-15T18:22:12.564Z",
  "text": "Any progress in utility functions? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span>  No till now , no progress in utility_function. I will fix the structure of rubi and will look starting to utility functions.",
  "id": "5afb2b199ad18967b9ea2921",
  "issues": [],
  "mentions": [
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-15T18:46:49.769Z",
  "text": "@Abdullahjavednesar  No till now , no progress in utility_function. I will fix the structure of rubi and will look starting to utility functions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "Okay ",
  "id": "5afb2cade1cf621dba208ae2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-15T18:53:33.582Z",
  "text": "Okay ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span>  I roughly checked the above idea for some cases by doing some manual edits. It is working. There are no recursion errors in cases where previously there had been recursion errors.",
  "id": "5afbd068b84be71db90e376f",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-16T06:32:08.770Z",
  "text": "@parsoyaarihant  I roughly checked the above idea for some cases by doing some manual edits. It is working. There are no recursion errors in cases where previously there had been recursion errors.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "This is great news!",
  "id": "5afbd47abd10f34a6806e715",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-16T06:49:30.876Z",
  "text": "This is great news!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "But , I fear it can take a little more time. ",
  "id": "5afbd4a15a1d895fae434619",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-16T06:50:09.290Z",
  "text": "But , I fear it can take a little more time. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I am not sure. I have to implement it properly.",
  "id": "5afbd4b5b84be71db90e4c3e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-16T06:50:29.797Z",
  "text": "I am not sure. I have to implement it properly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Yes, we can run the test when it is fully implemented and see the time difference.",
  "id": "5afbd4eef04ce53632df2c43",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-16T06:51:26.501Z",
  "text": "Yes, we can run the test when it is fully implemented and see the time difference.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-16T06:52:11.597Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Should I move on to implement it in a proper way ?",
  "id": "5afbd51152194a4a67eb8ef4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-16T06:52:01.227Z",
  "text": "Should I move on to implement it in a proper way ?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Yes, if this issue is not fixed, you will have many problems while testing the module. ",
  "id": "5afbee32bd10f34a68074389",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-16T08:39:14.880Z",
  "text": "Yes, if this issue is not fixed, you will have many problems while testing the module. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Save the current work for backup",
  "id": "5afbee46e0b50c2d05c77912",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-16T08:39:34.574Z",
  "text": "Save the current work for backup",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "okay ",
  "id": "5afbee4e5a1d895fae43a874",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-16T08:39:42.839Z",
  "text": "okay ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would suggest to open a PR (without intention to merge) so that we can better track the changes in the code",
  "id": "5afc1e649ad18967b9ed6bc0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-16T12:04:52.757Z",
  "text": "I would suggest to open a PR (without intention to merge) so that we can better track the changes in the code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Currently I am implementing the above. I will open a proper PR after implementing it. ",
  "id": "5afc1eb8b84be71db90f670f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-16T12:06:16.266Z",
  "text": "Currently I am implementing the above. I will open a proper PR after implementing it. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "OK",
  "id": "5afc1ec2d245fe2eb7b55704",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-16T12:06:26.228Z",
  "text": "OK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I have fixed the order of matching of rules.<br><span data-link-type=\"issue\" data-issue=\"14724\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#14724</span><br>This PR contains my all work till now.<br> Please look into it if I am missing anything.",
  "id": "5afddb12bd10f34a680e8fdf",
  "issues": [
   {
    "number": "14724",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-17T19:42:10.247Z",
  "text": "I have fixed the order of matching of rules. \nhttps://github.com/sympy/sympy/pull/14724\nThis PR contains my all work till now. \n Please look into it if I am missing anything.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Have you run the test set? ",
  "id": "5afde09a1cfca775e11917a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-17T20:05:46.312Z",
  "text": "Have you run the test set? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "the previous one in sympy? ",
  "id": "5afde0b9a2d95136334ae4ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-17T20:06:17.599Z",
  "text": "the previous one in sympy? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I have run that test and added few cases(previously they caused recursion errors like <code>rubi_integrate(x**4*sqrt(a + b*x**2),x)</code> ) ",
  "id": "5afde1f98c24fe61eaf2fa30",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-17T20:11:37.729Z",
  "text": "I have run that test and added few cases(previously they caused recursion errors like `rubi_integrate(x**4*sqrt(a + b*x**2),x)` ) ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span>  I have just checked <code>test_rubi_integrate</code> . I will look into other files now.",
  "id": "5afdfa1f2df44c2d0637c6db",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-17T21:54:39.270Z",
  "text": "@parsoyaarihant  I have just checked `test_rubi_integrate` . I will look into other files now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "but <code>rubi_integrate()</code> is becoming little slow ? How should I proceed ? Fixing order is also important.",
  "id": "5afdfd168c24fe61eaf35c59",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-17T22:07:18.118Z",
  "text": "but `rubi_integrate()` is becoming little slow ? How should I proceed ? Fixing order is also important.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "In my opinion current implementation after some debugging will pass tests . The negative point is slow working of <code>rubi_integrate</code> and the positive part is fixing the order of matching.",
  "id": "5afdfed7d332ee5fad28f70e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-17T22:14:47.320Z",
  "text": "In my opinion current implementation after some debugging will pass tests . The negative point is slow working of `rubi_integrate` and the positive part is fixing the order of matching.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Currently there are errors in rules, constraints and utility functions. One way can be to fix those things in this structure. Later we will have a correct set of rules and utility functions.<br>What are your suggestions ?",
  "id": "5afe88618c24fe61eaf4f171",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-18T08:01:37.760Z",
  "text": "Currently there are errors in rules, constraints and utility functions. One way can be to fix those things in this structure. Later we will have a correct set of rules and utility functions. \nWhat are your suggestions ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "What do you mean by errors in rules and constraints?",
  "id": "5afe905ca2d95136334cefc3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-18T08:35:40.205Z",
  "text": "What do you mean by errors in rules and constraints?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I mean after being parsed , there are exceptions being raised some time . I mean to have a correct parsing",
  "id": "5afe90b841f54f22e23c0d0a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-18T08:37:12.478Z",
  "text": "I mean after being parsed , there are exceptions being raised some time . I mean to have a correct parsing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay ",
  "id": "5afe91975666c42eb61edca0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-18T08:40:55.099Z",
  "text": "Okay ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "We should check the speed after these bugs are resolved.",
  "id": "5afe9232bd10f34a6810b9fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-18T08:43:30.448Z",
  "text": "We should check the speed after these bugs are resolved.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "okay I will fix and keep updating the current PR.",
  "id": "5afe925d5666c42eb61edee5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-18T08:44:13.521Z",
  "text": "okay I will fix and keep updating the current PR.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-19T18:02:03.567Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Actually running whole test is taking a large time. I am investigating and try to find a way soon.",
  "id": "5b00668de0b50c2d05d689fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-19T18:01:49.746Z",
  "text": "Actually running whole test is taking a large time. I am investigating and try to find a way soon.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span>  I have made very little modifications in <code>PositiveQ</code> and <code>Coefficient</code> and updated in the PR. ",
  "id": "5b0067335666c42eb62472fc",
  "issues": [],
  "mentions": [
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-19T18:04:35.167Z",
  "text": "@Abdullahjavednesar  I have made very little modifications in `PositiveQ` and `Coefficient` and updated in the PR. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-20T07:24:51.281Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span>  <span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span>  Do we need to add exactly all test cases as on rubi&#39;s website? The rubi&#39;s test suite is extremely large. ",
  "id": "5b0122b79ad18967b9fd271c",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   },
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-20T07:24:39.142Z",
  "text": "@Upabjojr  @parsoyaarihant  Do we need to add exactly all test cases as on rubi's website? The rubi's test suite is extremely large. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "No, just few tests as the current tests ",
  "id": "5b0125b1a2d951363354190e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-20T07:37:21.307Z",
  "text": "No, just few tests as the current tests ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "However, the module should pass the test suit which is there on rubi website ",
  "id": "5b0125d8b84be71db91f0411",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-20T07:38:00.420Z",
  "text": "However, the module should pass the test suit which is there on rubi website ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-20T07:41:38.650Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "How did you parse the test suite files ?",
  "id": "5b0126a2b84be71db91f066b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-20T07:41:22.372Z",
  "text": "How did you parse the test suite files ?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span>  did it using regular expression ",
  "id": "5b0126ff9ad18967b9fd3274",
  "issues": [],
  "mentions": [
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-20T07:42:55.039Z",
  "text": "@Abdullahjavednesar  did it using regular expression ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "If I can get the code of last year, it will be easy for me. I am not so familiar with regular expressions.",
  "id": "5b012751b84be71db91f08f6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-20T07:44:17.309Z",
  "text": "If I can get the code of last year, it will be easy for me. I am not so familiar with regular expressions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ashishkg0022\" class=\"mention\">@ashishkg0022</span> there are online tools for regular expressions you can try those.",
  "id": "5b013038d332ee5fad31cbad",
  "issues": [],
  "mentions": [
   {
    "screenName": "ashishkg0022",
    "userId": "58bd696cd73408ce4f4eb85b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-20T08:22:16.947Z",
  "text": "@ashishkg0022 there are online tools for regular expressions you can try those.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "I personally used <a href=\"https://regex101.com/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://regex101.com/</a> ",
  "id": "5b0130868c24fe61eafc53d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-20T08:23:34.535Z",
  "text": "I personally used https://regex101.com/ ",
  "unread": false,
  "urls": [
   {
    "url": "https://regex101.com/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Is the parsed code still available in your system ?",
  "id": "5b0130b5e1cf621dba332bc9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-20T08:24:21.388Z",
  "text": "Is the parsed code still available in your system ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "check <a href=\"https://github.com/parsoyaarihant/sympy/pulls?q=is%3Apr+is%3Aclosed\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/parsoyaarihant/sympy/pulls?q=is%3Apr+is%3Aclosed</a>",
  "id": "5b0130eff04ce53632f02a6b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-20T08:25:19.743Z",
  "text": "check https://github.com/parsoyaarihant/sympy/pulls?q=is%3Apr+is%3Aclosed",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/parsoyaarihant/sympy/pulls?q=is%3Apr+is%3Aclosed"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "you may get some tests here but not sure about the format, you need to check it",
  "id": "5b01317a5666c42eb6261b69",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-20T08:27:38.911Z",
  "text": "you may get some tests here but not sure about the format, you need to check it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "This commit has few tests: ",
  "id": "5b013cff41f54f22e2437f62",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-20T09:16:47.748Z",
  "text": "This commit has few tests: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<a href=\"https://github.com/sympy/sympy/pull/12978/commits/641b00957feac0ac5bb128738fea4b846f93a9e7\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/pull/12978/commits/641b00957feac0ac5bb128738fea4b846f93a9e7</a>",
  "id": "5b013d06e0b50c2d05d8563b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-20T09:16:54.841Z",
  "text": "https://github.com/sympy/sympy/pull/12978/commits/641b00957feac0ac5bb128738fea4b846f93a9e7",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/12978/commits/641b00957feac0ac5bb128738fea4b846f93a9e7"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Can I keep the format of test files as it is currently in test_1_2, test_1_3 ?",
  "id": "5b013d425666c42eb626391e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-20T09:17:54.290Z",
  "text": "Can I keep the format of test files as it is currently in test_1_2, test_1_3 ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-21T09:13:34.110Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Hello everyone. We need to soon find a way for the recursion errors. I wanted to maintain a list which contains the rules which are applied till current execution and check if it forms some cycle like :<br><code>[28, 36, 52,36,52,36.......]</code> --&gt; it forms a cycle so we can check it and remove either <code>36</code> or<code>52</code> from matching.",
  "id": "5b028dafa2d951363357e8fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-21T09:13:19.191Z",
  "text": "Hello everyone. We need to soon find a way for the recursion errors. I wanted to maintain a list which contains the rules which are applied till current execution and check if it forms some cycle like :\n`[28, 36, 52,36,52,36.......]` --> it forms a cycle so we can check it and remove either `36` or`52` from matching.\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Given a list , Is there some easy way to find if list is having a cycle ?",
  "id": "5b028df5f04ce53632f3d1ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-21T09:14:29.182Z",
  "text": "Given a list , Is there some easy way to find if list is having a cycle ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "How deep is the recursion depth typically (when it doesn&#39;t recurse infinitely)? ",
  "id": "5b02fd0b9505660d7ea680c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-21T17:08:27.646Z",
  "text": "How deep is the recursion depth typically (when it doesn't recurse infinitely)? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "3 - 4 generally",
  "id": "5b02fd71a2d951363359ad02",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-21T17:10:09.519Z",
  "text": "3 - 4 generally",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "If not too deep you could just check at each pass if the rule being applied creates a cycle of length 2, or length 3, and so on up to length N/2, where N is the depth of the recursion ",
  "id": "5b02fd734b9c3e259cc24ed4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-21T17:10:11.254Z",
  "text": "If not too deep you could just check at each pass if the rule being applied creates a cycle of length 2, or length 3, and so on up to length N/2, where N is the depth of the recursion ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Though assumedly some recursion happens legitimately with the same rules with different inputs. You would need to take that into account ",
  "id": "5b02fd9e2602cb656c490c29",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-21T17:10:54.124Z",
  "text": "Though assumedly some recursion happens legitimately with the same rules with different inputs. You would need to take that into account ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-22T13:55:40.472Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> <span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span>  I have made some changes and pushed. Please review it if I am missing anything.<br>Currently <code>_has_cycle</code>  in <code>rubi.py</code> is not correct . It has to be enhanced later when complicate case comes.<br>Now <code>test_1_2</code> is passing correctly for all cases . I have completely removed <code>@XFAIL</code> from <code>test_1_2</code> . It has also become for fast.<br>For <code>test_1_4</code> . There are some cases  where in Mathematica the form of output is different. I think in some cases form of output in <code>Maple</code> varies from <code>Mathematica</code> . I will look into them.",
  "id": "5b04213f2df44c2d064a353b",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   },
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-22T13:55:11.419Z",
  "text": "@parsoyaarihant @Upabjojr  I have made some changes and pushed. Please review it if I am missing anything. \nCurrently `_has_cycle`  in `rubi.py` is not correct . It has to be enhanced later when complicate case comes. \nNow `test_1_2` is passing correctly for all cases . I have completely removed `@XFAIL` from `test_1_2` . It has also become for fast. \nFor `test_1_4` . There are some cases  where in Mathematica the form of output is different. I think in some cases form of output in `Maple` varies from `Mathematica` . I will look into them.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "whenever the output differs, just try to derive the expression. Sometimes they may be represented in a different way or just differ by a constant value. Remember that integrals are defined up to a constant.",
  "id": "5b0422b95666c42eb62f7f1e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-22T14:01:29.750Z",
  "text": "whenever the output differs, just try to derive the expression. Sometimes they may be represented in a different way or just differ by a constant value. Remember that integrals are defined up to a constant.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<a href=\"https://files.gitter.im/sympy/Rubi-GSoC17/v8x3/rubi.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/sympy/Rubi-GSoC17/v8x3/thumb/rubi.png\" alt=\"rubi.png\" rel=\"nofollow\"></a>",
  "id": "5b0423fb677d792bd1a7dbcd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-22T14:06:51.755Z",
  "text": "[![rubi.png](https://files.gitter.im/sympy/Rubi-GSoC17/v8x3/thumb/rubi.png)](https://files.gitter.im/sympy/Rubi-GSoC17/v8x3/rubi.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/sympy/Rubi-GSoC17/v8x3/thumb/rubi.png"
   },
   {
    "url": "https://files.gitter.im/sympy/Rubi-GSoC17/v8x3/rubi.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "What to be done with this type of rules that causes recursions in mathematica too.",
  "id": "5b04242e9ad18967b906c1a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-22T14:07:42.070Z",
  "text": "What to be done with this type of rules that causes recursions in mathematica too.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "like rule 186",
  "id": "5b04244cd332ee5fad3b15ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-22T14:08:12.560Z",
  "text": "like rule 186",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "is Mathematica itself failing the evaluation?",
  "id": "5b0424a1d332ee5fad3b1734",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-22T14:09:37.709Z",
  "text": "is Mathematica itself failing the evaluation?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "is RUBI supposed to work?",
  "id": "5b0424a852194a4a6705a3cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-22T14:09:44.473Z",
  "text": "is RUBI supposed to work?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>In test suite this is the test case.</p><pre><code><span class=\"collection\">{<span class=\"list\">(<span class=\"keyword\">a</span> + b*x)</span><span class=\"comment\">^m*</span><span class=\"list\">(<span class=\"keyword\">c</span> + d*x)</span><span class=\"comment\">^n*</span><span class=\"list\">(<span class=\"keyword\">e</span> + f*x)</span><span class=\"comment\">^p/</span><span class=\"list\">(<span class=\"keyword\">g</span> + h*x)</span>^<span class=\"number\">1</span>, x, <span class=\"number\">0</span>, Unintegrable<span class=\"collection\">[<span class=\"list\">(<span class=\"list\">(<span class=\"keyword\">a</span> + b*x)</span><span class=\"comment\">^m*</span><span class=\"list\">(<span class=\"keyword\">c</span> + d*x)</span><span class=\"comment\">^n*</span><span class=\"list\">(<span class=\"keyword\">e</span> + f*x)</span><span class=\"comment\">^p</span>)</span>/<span class=\"list\">(<span class=\"keyword\">g</span> + h*x)</span>, x]</span>}</span></code></pre><p>According to them no rule macthes but  <code>186</code> matches. It&#39;s  a little fault I think.</p>",
  "id": "5b0425d09ad18967b906ca00",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-22T14:14:40.094Z",
  "text": "In test suite this is the test case.\n```\n{(a + b*x)^m*(c + d*x)^n*(e + f*x)^p/(g + h*x)^1, x, 0, Unintegrable[((a + b*x)^m*(c + d*x)^n*(e + f*x)^p)/(g + h*x), x]}\n```\nAccording to them no rule macthes but  `186` matches. It's  a little fault I think.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "so maybe it should remain unevaluated",
  "id": "5b043582e1cf621dba3c94ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-22T15:21:38.800Z",
  "text": "so maybe it should remain unevaluated",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "yup",
  "id": "5b0435a0e0b50c2d05e23c87",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-22T15:22:08.123Z",
  "text": "yup",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "but <code>rule186</code> will not result in any simplification for any match.",
  "id": "5b0435dda2d95136335e1eb7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-22T15:23:09.431Z",
  "text": "but `rule186` will not result in any simplification for any match.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<pre><code>Int[(a_.+b_.<span class=\"keyword\">*</span>x_)^m_.<span class=\"keyword\">*</span>(c_.+d_.<span class=\"keyword\">*</span>x_)^n_.<span class=\"keyword\">*</span>(e_.+f_.<span class=\"keyword\">*</span>x_)^p_.<span class=\"keyword\">*</span>(g_.+h_.<span class=\"keyword\">*</span>x_)^q_.,x_Symbol] :=\n    Int[(a+b<span class=\"keyword\">*</span>x)^m<span class=\"keyword\">*</span>(c+d<span class=\"keyword\">*</span>x)^n<span class=\"keyword\">*</span>(e+f<span class=\"keyword\">*</span>x)^p<span class=\"keyword\">*</span>(g+h<span class=\"keyword\">*</span>x)^q,x] /;\nFreeQ[{a,b,c,d,e,f,g,h,m,n,p,q},x]</code></pre>This is rule in RUBI folder. Do you think it will result in any simplification in any case ?",
  "id": "5b04376cb84be71db928c672",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-22T15:29:48.235Z",
  "text": "```\nInt[(a_.+b_.*x_)^m_.*(c_.+d_.*x_)^n_.*(e_.+f_.*x_)^p_.*(g_.+h_.*x_)^q_.,x_Symbol] :=\n\tInt[(a+b*x)^m*(c+d*x)^n*(e+f*x)^p*(g+h*x)^q,x] /;\nFreeQ[{a,b,c,d,e,f,g,h,m,n,p,q},x]\n```\nThis is rule in RUBI folder. Do you think it will result in any simplification in any case ?\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "it looks like that rule&#39;s purpose is not to evaluate the expression",
  "id": "5b0513d8aaafa25932aba76e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-23T07:10:16.223Z",
  "text": "it looks like that rule's purpose is not to evaluate the expression",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-23T13:29:36.095Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I have loaded rules for <code>trinomial_products</code> and started to test integrals. As our rules are of version <code>4.10.8</code> , there are some cases (very few in number) that fails on Mathematica too with rubi version <code>4.10.8</code> . I think the test suite has been updated on rubi website since last year. I just have the rules of last year not the test suite.",
  "id": "5b056cb65f3e6b40fadb863c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-23T13:29:26.314Z",
  "text": "I have loaded rules for `trinomial_products` and started to test integrals. As our rules are of version `4.10.8` , there are some cases (very few in number) that fails on Mathematica too with rubi version `4.10.8` . I think the test suite has been updated on rubi website since last year. I just have the rules of last year not the test suite.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ashishkg0022\" class=\"mention\">@ashishkg0022</span> , you can use Regex for generating the test suit in python. It will not take time to understand how it works. <span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span>  can you share the regex you used to generate python code?",
  "id": "5b0571cdfb0f4a0bfe6447da",
  "issues": [],
  "mentions": [
   {
    "screenName": "ashishkg0022",
    "userId": "58bd696cd73408ce4f4eb85b",
    "userIds": []
   },
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-23T13:51:09.573Z",
  "text": "@ashishkg0022 , you can use Regex for generating the test suit in python. It will not take time to understand how it works. @Abdullahjavednesar  can you share the regex you used to generate python code?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-23T13:54:22.710Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Ya , thats not the problem . I am telling that test suite in mathematica format has been updated on rubi&#39;s website",
  "id": "5b05721397a0361fb75a5468",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-23T13:52:19.224Z",
  "text": "Ya , thats not the problem . I am telling that test suite in mathematica format has been updated on rubi's website",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Some of these updated tests fails on Mathematica with RUBI 4.10.8 .",
  "id": "5b057264ee623e2e41f8f3f5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-23T13:53:40.658Z",
  "text": "Some of these updated tests fails on Mathematica with RUBI 4.10.8 .",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "So we can not include them in our test suite. ",
  "id": "5b0574c0aaafa25932ad3336",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-23T14:03:44.687Z",
  "text": "So we can not include them in our test suite. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay ",
  "id": "5b0584a2ee623e2e41f94e08",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-23T15:11:30.655Z",
  "text": "Okay ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "if the regex is not enough, you can still get the <code>FullForm</code> from Mathematica and then parse it the usual way.",
  "id": "5b066665d88b24150d2f08ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-24T07:14:45.258Z",
  "text": "if the regex is not enough, you can still get the `FullForm` from Mathematica and then parse it the usual way.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "In sympy is there any way to convert <code>arcsin</code> to <code>arctan</code> and similar things.<br>Like for an integral , in the original test suite outcome should be <code>-sqrt(3)*arcsin(sqrt(10)*(-6*x + 4)/20)/3</code> .<br>When running on sympy it gives <code>-sqrt(3)*arctan(sqrt(3)*(-6*x + 4)/(6*sqrt(-3*x**2 + 4*x + 2)))/3</code> . If looked carefully they both are same.<br>How to transform between <code>arctan(a/b)</code>  and  <code>arcsin(a/(a**2 +b**2)**0.5)</code> ?",
  "id": "5b0684289ed336150ea82484",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-24T09:21:44.755Z",
  "text": "In sympy is there any way to convert `arcsin` to `arctan` and similar things. \nLike for an integral , in the original test suite outcome should be `-sqrt(3)*arcsin(sqrt(10)*(-6*x + 4)/20)/3` .\nWhen running on sympy it gives `-sqrt(3)*arctan(sqrt(3)*(-6*x + 4)/(6*sqrt(-3*x**2 + 4*x + 2)))/3` . If looked carefully they both are same. \nHow to transform between `arctan(a/b)`  and  `arcsin(a/(a**2 +b**2)**0.5)` ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<code>atan(a/b).rewrite(asin)</code>",
  "id": "5b06a1a2d88b24150d2fe969",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-24T11:27:30.621Z",
  "text": "`atan(a/b).rewrite(asin)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "though it doesn&#39;t seem to be the same expression",
  "id": "5b06a1c99ed336150ea894fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-24T11:28:09.829Z",
  "text": "though it doesn't seem to be the same expression",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would suggest not to spend too much time on such things",
  "id": "5b06a1d6b435f21fb8c35623",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-24T11:28:22.547Z",
  "text": "I would suggest not to spend too much time on such things",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "If you have a divergence between the result in the test suit and the result using SymPy, I&#39;d suggest to simply verify the divergences by taking the derivatives.",
  "id": "5b06a2043815f70bffd507eb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-24T11:29:08.873Z",
  "text": "If you have a divergence between the result in the test suit and the result using SymPy, I'd suggest to simply verify the divergences by taking the derivatives.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<p>otherwise you could write</p><pre><code class=\"python\"><span class=\"keyword\">assert</span> rubi_integrate(... , x) <span class=\"keyword\">in</span> [expr1, expr2, expr3, ... ]</code></pre><p>so that the various variations of the expression are all tested</p>",
  "id": "5b06a2395f3e6b40fadfac34",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-24T11:30:01.501Z",
  "text": "otherwise you could write\n```python\nassert rubi_integrate(... , x) in [expr1, expr2, expr3, ... ]\n```\nso that the various variations of the expression are all tested",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "The test suite on rubi&#39;s website is extremely big. In what way should I select the cases for our test suite ? Random selection ?",
  "id": "5b06faf26309af743d0f2ae3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-24T17:48:34.792Z",
  "text": "The test suite on rubi's website is extremely big. In what way should I select the cases for our test suite ? Random selection ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "And it will be good if some how we can get the original test suite when rubi&#39;s version was 4.10.8 . It has really become tough to check the failing test on Mathematica. Because tests failing on sympy also fails on Mathematica and so checking them individually takes a lot time.",
  "id": "5b07049cd88b24150d3189c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-24T18:29:48.914Z",
  "text": "And it will be good if some how we can get the original test suite when rubi's version was 4.10.8 . It has really become tough to check the failing test on Mathematica. Because tests failing on sympy also fails on Mathematica and so checking them individually takes a lot time.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "And especially <code>trinomial_products</code>. In newer version rules and tests for <code>trinomial products</code> has been increased significantly.",
  "id": "5b070547aaafa25932b2ec6b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-24T18:32:39.061Z",
  "text": "And especially `trinomial_products`. In newer version rules and tests for `trinomial products` has been increased significantly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "Try to include atleast 2-3 tests  of a type. And test the remaining on your system (as many as possible).",
  "id": "5b0709eb9ed336150eaa41dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-24T18:52:27.182Z",
  "text": "Try to include atleast 2-3 tests  of a type. And test the remaining on your system (as many as possible).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-24T20:39:46.702Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>This is the current <code>rubi_test</code></p><pre><code>def <span class=\"function\"><span class=\"title\">rubi_test</span><span class=\"params\">(expr, x, optimal_output, expand=False, _hyper_check=False, _diff=False, _numerical=False)</span></span>:\n    <span class=\"id\">#Returns</span> True <span class=\"keyword\">if</span> (expr - optimal_output) is equal to <span class=\"number\">0</span> or <span class=\"tag\">a</span> constant\n    <span class=\"id\">#expr</span>: integrated expression\n    <span class=\"id\">#x</span>: integration variable\n    #expand=True equates `expr` with `optimal_output` <span class=\"keyword\">in</span> expanded <span class=\"tag\">form</span>\n    #_hyper_check=True evaluates numerically\n    #_diff=True differentiates the expressions before equating\n    #_numerical=True equates the expressions at random `x`. Normally used <span class=\"keyword\">for</span> large expressions.\n\n    <span class=\"keyword\">if</span> expr == optimal_output:\n        return True\n\n    res = expr - optimal_output\n\n    <span class=\"keyword\">if</span> res.<span class=\"function\"><span class=\"title\">has</span><span class=\"params\">(hyper)</span></span>:\n        <span class=\"keyword\">if</span> _hyper_check:\n            dres = res.<span class=\"function\"><span class=\"title\">diff</span><span class=\"params\">(x)</span></span>\n            args = dres<span class=\"class\">.free_symbols</span>\n            <span class=\"keyword\">for</span> <span class=\"tag\">i</span> <span class=\"keyword\">in</span> <span class=\"function\"><span class=\"title\">range</span><span class=\"params\">(<span class=\"number\">1</span>, <span class=\"number\">6</span>)</span></span>:\n                sub = <span class=\"function\"><span class=\"title\">dict</span><span class=\"params\">((s, i)</span></span> <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> args)\n                <span class=\"keyword\">if</span> not <span class=\"function\"><span class=\"title\">abs</span><span class=\"params\">(dres.subs(sub)</span></span>.<span class=\"function\"><span class=\"title\">n</span><span class=\"params\">()</span></span>) &lt; <span class=\"function\"><span class=\"title\">S</span><span class=\"params\">(<span class=\"number\">10</span>)</span></span>**(-<span class=\"number\">100</span>):\n                    return False\n            return True\n        <span class=\"keyword\">else</span>:\n            return True\n        return False</code></pre><p>whenever <code>_hyper_check</code> is False , the test will pass. Is this <code>rubi_test</code> correct  ?</p>",
  "id": "5b072250aaafa25932b35b1a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-24T20:36:31.957Z",
  "text": "This is the current `rubi_test`\n```\ndef rubi_test(expr, x, optimal_output, expand=False, _hyper_check=False, _diff=False, _numerical=False):\n    #Returns True if (expr - optimal_output) is equal to 0 or a constant\n    #expr: integrated expression\n    #x: integration variable\n    #expand=True equates `expr` with `optimal_output` in expanded form\n    #_hyper_check=True evaluates numerically\n    #_diff=True differentiates the expressions before equating\n    #_numerical=True equates the expressions at random `x`. Normally used for large expressions.\n\n    if expr == optimal_output:\n        return True\n\n    res = expr - optimal_output\n\n    if res.has(hyper):\n        if _hyper_check:\n            dres = res.diff(x)\n            args = dres.free_symbols\n            for i in range(1, 6):\n                sub = dict((s, i) for s in args)\n                if not abs(dres.subs(sub).n()) < S(10)**(-100):\n                    return False\n            return True\n        else:\n            return True\n        return False\n```\nwhenever `_hyper_check` is False , the test will pass. Is this `rubi_test` correct  ?",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "ping <span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> ",
  "id": "5b072259d96cfd743ebb2a5d",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-24T20:36:41.708Z",
  "text": "ping @parsoyaarihant ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Yes ",
  "id": "5b072baf9ed336150eaabad2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-24T21:16:31.596Z",
  "text": "Yes ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "it will pass ",
  "id": "5b072bbd752aff593111803d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-24T21:16:45.319Z",
  "text": "it will pass ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Is this correct? the True in the else part ?",
  "id": "5b072c46b435f21fb8c5894a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-24T21:19:02.122Z",
  "text": "Is this correct? the True in the else part ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Yes, if the expression contains hyper, and we dont want to test for hyper, the test is passed (else condition).",
  "id": "5b07c128a45f930a65d344a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-25T07:54:16.987Z",
  "text": "Yes, if the expression contains hyper, and we dont want to test for hyper, the test is passed (else condition).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>I am confused about this type of rule : </p><pre><code>Int[(a_.+b_.<span class=\"keyword\">*</span>x_)^m_.<span class=\"keyword\">*</span>(c_.+d_.<span class=\"keyword\">*</span>x_)^n_.<span class=\"keyword\">*</span>(e_.+f_.<span class=\"keyword\">*</span>x_)^p_.<span class=\"keyword\">*</span>(g_.+h_.<span class=\"keyword\">*</span>x_)^q_.,x_Symbol] :=\n    Int[(a+b<span class=\"keyword\">*</span>x)^m<span class=\"keyword\">*</span>(c+d<span class=\"keyword\">*</span>x)^n<span class=\"keyword\">*</span>(e+f<span class=\"keyword\">*</span>x)^p<span class=\"keyword\">*</span>(g+h<span class=\"keyword\">*</span>x)^q,x] /;\nFreeQ[{a,b,c,d,e,f,g,h,m,n,p,q},x]</code></pre><p>Whats the use of this type of rule and how to prevent the recursion errors. (as it returns the same pattern) ?</p>",
  "id": "5b0821c816f6496124dddd18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-25T14:46:32.759Z",
  "text": "\nI am confused about this type of rule : \n```\nInt[(a_.+b_.*x_)^m_.*(c_.+d_.*x_)^n_.*(e_.+f_.*x_)^p_.*(g_.+h_.*x_)^q_.,x_Symbol] :=\n    Int[(a+b*x)^m*(c+d*x)^n*(e+f*x)^p*(g+h*x)^q,x] /;\nFreeQ[{a,b,c,d,e,f,g,h,m,n,p,q},x]\n```\nWhats the use of this type of rule and how to prevent the recursion errors. (as it returns the same pattern) ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I think we should remove this rule. <span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> what do you think? ",
  "id": "5b08410d352b9e1a4b31c445",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-25T16:59:57.289Z",
  "text": "I think we should remove this rule. @Upabjojr what do you think? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-25T18:06:16.205Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<pre><code>In [3]: miter = rubi.matcher.match(Integral(x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2<span class=\"keyword\">*</span>x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>m<span class=\"keyword\">*</span>(b + c<span class=\"keyword\">*</span>x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2), x))\n\nIn [4]: for i, e in miter: print(i , e )\n<span class=\"variable\">&lt;function quadratic_products.&lt;locals&gt;</span>.replacement509 at 0x7f46533bdb70&gt; {a \u21a6 b, c \u21a6 c, d \u21a6 0, e \u21a6 1, f \u21a6 0, g \u21a6 1, m \u21a6 2, n \u21a6 m, p \u21a6 1, x \u21a6 x} \n\n\n<span class=\"variable\">&lt;function quadratic_products.&lt;locals&gt;</span>.replacement509 at 0x7f46533bdb70&gt; {a \u21a6 b, c \u21a6 c, d \u21a6 0, e \u21a6 1, f \u21a6 0, g \u21a6 1, m \u21a6 m, n \u21a6 2, p \u21a6 1, x \u21a6 x}</code></pre><p>In this <code>d</code> and <code>f</code> (d \u21a6 0 , f \u21a6 0) are substituted to zero as per <code>Rule509</code> . But It is not matched in Mathematica with <code>Rule509</code> .<br>I have investigated and found out some possible error. </p><p>Here is the original rule : </p><pre><code>Int[(d_.+e_.<span class=\"keyword\">*</span>x_)^m_.<span class=\"keyword\">*</span>(f_.+g_.<span class=\"keyword\">*</span>x_)^n_.<span class=\"keyword\">*</span>(a_+c_.<span class=\"keyword\">*</span>x_^2)^p_.,x_Symbol] :=\nInt[(d+e<span class=\"keyword\">*</span>x)^m<span class=\"keyword\">*</span>(f+g<span class=\"keyword\">*</span>x)^n<span class=\"keyword\">*</span>(a+c<span class=\"keyword\">*</span>x^2)^p,x] /;\nFreeQ[{a,c,d,e,f,g,m,n,p},x]</code></pre><p>In the rule it is <code>f_.</code> and <code>d_.</code> .<br>In addition I tried this on Mathematica : </p><pre><code>a_. + b_ /<span class=\"class\">.a_</span>.-&gt;<span class=\"number\">0</span></code></pre><p>This  shows <code>a_.</code> can not be followed by zero. So Is it that <code>a_.</code> can&#39;t be substituted by <code>0</code> ?<br> Or am I missing anything. </p>",
  "id": "5b0850077ccd4f1a695f666b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-25T18:03:51.586Z",
  "text": "```\nIn [3]: miter = rubi.matcher.match(Integral(x**2*x**m*(b + c*x**2), x))\n\nIn [4]: for i, e in miter: print(i , e )\n<function quadratic_products.<locals>.replacement509 at 0x7f46533bdb70> {a \u21a6 b, c \u21a6 c, d \u21a6 0, e \u21a6 1, f \u21a6 0, g \u21a6 1, m \u21a6 2, n \u21a6 m, p \u21a6 1, x \u21a6 x} \n\n\n<function quadratic_products.<locals>.replacement509 at 0x7f46533bdb70> {a \u21a6 b, c \u21a6 c, d \u21a6 0, e \u21a6 1, f \u21a6 0, g \u21a6 1, m \u21a6 m, n \u21a6 2, p \u21a6 1, x \u21a6 x} \n\n```\nIn this `d` and `f` (d \u21a6 0 , f \u21a6 0) are substituted to zero as per `Rule509` . But It is not matched in Mathematica with `Rule509` .\nI have investigated and found out some possible error. \n\nHere is the original rule : \n```\nInt[(d_.+e_.*x_)^m_.*(f_.+g_.*x_)^n_.*(a_+c_.*x_^2)^p_.,x_Symbol] :=\nInt[(d+e*x)^m*(f+g*x)^n*(a+c*x^2)^p,x] /;\nFreeQ[{a,c,d,e,f,g,m,n,p},x]\n\n```\nIn the rule it is `f_.` and `d_.` . \nIn addition I tried this on Mathematica : \n```\na_. + b_ /.a_.->0 \n```\nThis  shows `a_.` can not be followed by zero. So Is it that `a_.` can't be substituted by `0` ? \n Or am I missing anything. \n",
  "unread": false,
  "urls": [],
  "v": 5
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Can you elaborate on what you tried on mathematica? <code>a_. + b_ /.a_.-&gt;0</code> how is <code>b</code> introduced in the rule?",
  "id": "5b0859a7352b9e1a4b3219ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-25T18:44:55.977Z",
  "text": "Can you elaborate on what you tried on mathematica? `a_. + b_ /.a_.->0` how is `b` introduced in the rule?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I missed something. It is fine now. Thanks !",
  "id": "5b087dc8a45f930a65d6336d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-25T21:19:04.457Z",
  "text": "I missed something. It is fine now. Thanks !",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay :smile: ",
  "id": "5b090670361a950a66181999",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-26T07:02:08.295Z",
  "text": "Okay :smile: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-26T07:26:49.529Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I mailed Albert, maintainer of RUBI, asking him for test suite of version 4.10.8 . He has sent it to me now.<br>I have uploaded them here <a href=\"https://github.com/ashishkg0022/RUBI-4.10.8-Test-Suite\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/ashishkg0022/RUBI-4.10.8-Test-Suite</a> . You can see the difference with the current test-suite. For algebraic the newer test-suite is  almost 4 to 5 times bigger . For last 3 days I gave a lot of time but was unable to work with version difference. Now the problem is solved. I will be working on this older test-suite. ",
  "id": "5b090bf554ce2313615713fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-26T07:25:41.548Z",
  "text": "I mailed Albert, maintainer of RUBI, asking him for test suite of version 4.10.8 . He has sent it to me now. \nI have uploaded them here https://github.com/ashishkg0022/RUBI-4.10.8-Test-Suite . You can see the difference with the current test-suite. For algebraic the newer test-suite is  almost 4 to 5 times bigger . For last 3 days I gave a lot of time but was unable to work with version difference. Now the problem is solved. I will be working on this older test-suite. ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/ashishkg0022/RUBI-4.10.8-Test-Suite"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay, great news !",
  "id": "5b090e7ab6eece791db4659d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-26T07:36:26.354Z",
  "text": "Okay, great news !",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-26T09:58:35.493Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I gave a try to a dummy recursive expression in Mathematica:<pre><code><span class=\"name\">In</span>[<span class=\"number\">1</span>]:= <span class=\"atom\">f</span>[<span class=\"atom\">x_</span>] = <span class=\"atom\">f</span>[<span class=\"atom\">x</span>]                                                                                                                                  \n\n$<span class=\"name\">IterationLimit</span>::<span class=\"atom\">itlim</span>: <span class=\"name\">Iteration</span> <span class=\"atom\">limit</span> <span class=\"atom\">of</span> <span class=\"number\">4096</span> <span class=\"atom\">exceeded</span>.\n\n<span class=\"name\">Out</span>[<span class=\"number\">1</span>]= <span class=\"name\">Hold</span>[<span class=\"atom\">f</span>[<span class=\"atom\">x</span>]]\n\n<span class=\"name\">In</span>[<span class=\"number\">2</span>]:= <span class=\"atom\">f</span>[<span class=\"number\">3</span>]                                                                                                                                          \n\n$<span class=\"name\">IterationLimit</span>::<span class=\"atom\">itlim</span>: <span class=\"name\">Iteration</span> <span class=\"atom\">limit</span> <span class=\"atom\">of</span> <span class=\"number\">4096</span> <span class=\"atom\">exceeded</span>.\n\n<span class=\"name\">Out</span>[<span class=\"number\">2</span>]= <span class=\"name\">Hold</span>[<span class=\"atom\">f</span>[<span class=\"number\">3</span>]]</code></pre>",
  "id": "5b092fc4edd06f7d15e58abd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-26T09:58:28.368Z",
  "text": "I gave a try to a dummy recursive expression in Mathematica:\n```\nIn[1]:= f[x_] = f[x]                                                                                                                                  \n\n$IterationLimit::itlim: Iteration limit of 4096 exceeded.\n\nOut[1]= Hold[f[x]]\n\nIn[2]:= f[3]                                                                                                                                          \n\n$IterationLimit::itlim: Iteration limit of 4096 exceeded.\n\nOut[2]= Hold[f[3]]\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-05-26T13:50:16.950Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>expr1 = <code>-3*b**5*c**(-3.5)*atanh(sqrt(c)*x**2/sqrt(b*x**2 + c*x**4))/256 + 3*b**3*(b + 2*c*x**2)*sqrt(b*x**2 + c*x**4)/(256*c**3) - b*(b + 2*c*x**2)*(b*x**2 + c*x**4)**1.5/(32*c**2) + (b*x**2 + c*x**4)**2.5/(10*c)</code></p><p>expr2 = <code>0.142857142857143*(1 + c*x**2/b)**(-1.5)*(b*x**2 + c*x**4)**1.5*(x**2)**2.0*hyper((-1.5, 3.5), (4.5,), -c*x**2/b)</code></p><p>Is there a way to compare these expressions ? differentiating doesn&#39;t work here.</p>",
  "id": "5b0965fcb6eece791db54275",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-26T13:49:48.332Z",
  "text": "expr1 = `-3*b**5*c**(-3.5)*atanh(sqrt(c)*x**2/sqrt(b*x**2 + c*x**4))/256 + 3*b**3*(b + 2*c*x**2)*sqrt(b*x**2 + c*x**4)/(256*c**3) - b*(b + 2*c*x**2)*(b*x**2 + c*x**4)**1.5/(32*c**2) + (b*x**2 + c*x**4)**2.5/(10*c)`\n\n\nexpr2 = `0.142857142857143*(1 + c*x**2/b)**(-1.5)*(b*x**2 + c*x**4)**1.5*(x**2)**2.0*hyper((-1.5, 3.5), (4.5,), -c*x**2/b) `\n\nIs there a way to compare these expressions ? differentiating doesn't work here.\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "you can try substituting random values ",
  "id": "5b0a73a6edd06f7d15e8a3ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T09:00:22.946Z",
  "text": "you can try substituting random values ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "why are you getting values with commas? SymPy is supposed to work with rationals",
  "id": "5b0abb54b6eece791db89186",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T14:06:12.640Z",
  "text": "why are you getting values with commas? SymPy is supposed to work with rationals",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I am getting the same expression (<code>expr2</code>) in Mathematica too. ",
  "id": "5b0abc65a7abc8692eea5770",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T14:10:45.919Z",
  "text": "I am getting the same expression (`expr2`) in Mathematica too. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "plot the function with some random parameters",
  "id": "5b0abdbc16f6496124e4abaa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T14:16:28.020Z",
  "text": "plot the function with some random parameters",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-27T20:15:15.028Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<pre><code><span class=\"keyword\">In</span> [<span class=\"number\">1</span>]: <span class=\"keyword\">from</span> sympy import *\n\n<span class=\"keyword\">In</span> [<span class=\"number\">2</span>]: <span class=\"keyword\">from</span> sympy.abc import a,b,c,x\n\n<span class=\"keyword\">In</span> [<span class=\"number\">3</span>]: expr = x**<span class=\"number\">3</span> + x\n\n<span class=\"keyword\">In</span> [<span class=\"number\">4</span>]: def Coeff(expr, x, n):\n   ...:     <span class=\"keyword\">return</span> expr.coeff(x, n)\n   ...: \n\n<span class=\"keyword\">In</span> [<span class=\"number\">5</span>]: a = Sum(Coeff(expr, x, b), [b, <span class=\"number\">1</span>, <span class=\"number\">4</span>]).doit()\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent <span class=\"keyword\">call</span> last)\n~/sympy/sympy/core/compatibility.py <span class=\"keyword\">in</span> as_int(n)\n    <span class=\"number\">332</span>     <span class=\"keyword\">try</span>:\n--&gt; <span class=\"number\">333</span>         result = int(n)\n    <span class=\"number\">334</span>         <span class=\"keyword\">if</span> result != n:\n\n~/sympy/sympy/core/expr.py <span class=\"keyword\">in</span> __int__(self)\n    <span class=\"number\">223</span>         <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> self.is_number:\n--&gt; <span class=\"number\">224</span>             raise TypeError(<span class=\"string\">\"can't convert symbols to int\"</span>)\n    <span class=\"number\">225</span>         r = self.round(<span class=\"number\">2</span>)\n\nTypeError: can<span class=\"comment\">'t convert symbols to int</span>\n\nDuring handling <span class=\"keyword\">of</span> the above exception, another exception occurred:\n\nValueError                                Traceback (most recent <span class=\"keyword\">call</span> last)\n&lt;ipython-input-<span class=\"number\">5</span>-<span class=\"number\">295</span>b9d6b336a&gt; <span class=\"keyword\">in</span> &lt;<span class=\"keyword\">module</span>&gt;()\n----&gt; <span class=\"number\">1</span> a = Sum(Coeff(expr, x, b), [b, <span class=\"number\">1</span>, <span class=\"number\">4</span>]).doit()\n\n&lt;ipython-input-<span class=\"number\">4</span>-cab7e5241121&gt; <span class=\"keyword\">in</span> Coeff(expr, x, n)\n      <span class=\"number\">1</span> def Coeff(expr, x, n):\n----&gt; <span class=\"number\">2</span>     <span class=\"keyword\">return</span> expr.coeff(x, n)\n\n~/sympy/sympy/core/expr.py <span class=\"keyword\">in</span> coeff(self, x, n, right)\n   <span class=\"number\">1298</span>             <span class=\"keyword\">return</span> S.Zero\n   <span class=\"number\">1299</span> \n-&gt; <span class=\"number\">1300</span>         n = as_int(n)\n   <span class=\"number\">1301</span> \n   <span class=\"number\">1302</span>         <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> x:\n\n~/sympy/sympy/core/compatibility.py <span class=\"keyword\">in</span> as_int(n)\n    <span class=\"number\">335</span>             raise TypeError\n    <span class=\"number\">336</span>     except TypeError:\n--&gt; <span class=\"number\">337</span>         raise ValueError(<span class=\"comment\">'%s is not an integer' % (n,))</span>\n    <span class=\"number\">338</span>     <span class=\"keyword\">return</span> result\n    <span class=\"number\">339</span> \n\nValueError: b <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> an <span class=\"built_in\">integer</span></code></pre>",
  "id": "5b0b11a5a7abc8692eeb359f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T20:14:28.998Z",
  "text": "```\nIn [1]: from sympy import *\n\nIn [2]: from sympy.abc import a,b,c,x\n\nIn [3]: expr = x**3 + x\n\nIn [4]: def Coeff(expr, x, n):\n   ...:     return expr.coeff(x, n)\n   ...: \n\nIn [5]: a = Sum(Coeff(expr, x, b), [b, 1, 4]).doit()\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n~/sympy/sympy/core/compatibility.py in as_int(n)\n    332     try:\n--> 333         result = int(n)\n    334         if result != n:\n\n~/sympy/sympy/core/expr.py in __int__(self)\n    223         if not self.is_number:\n--> 224             raise TypeError(\"can't convert symbols to int\")\n    225         r = self.round(2)\n\nTypeError: can't convert symbols to int\n\nDuring handling of the above exception, another exception occurred:\n\nValueError                                Traceback (most recent call last)\n<ipython-input-5-295b9d6b336a> in <module>()\n----> 1 a = Sum(Coeff(expr, x, b), [b, 1, 4]).doit()\n\n<ipython-input-4-cab7e5241121> in Coeff(expr, x, n)\n      1 def Coeff(expr, x, n):\n----> 2     return expr.coeff(x, n)\n\n~/sympy/sympy/core/expr.py in coeff(self, x, n, right)\n   1298             return S.Zero\n   1299 \n-> 1300         n = as_int(n)\n   1301 \n   1302         if not x:\n\n~/sympy/sympy/core/compatibility.py in as_int(n)\n    335             raise TypeError\n    336     except TypeError:\n--> 337         raise ValueError('%s is not an integer' % (n,))\n    338     return result\n    339 \n\nValueError: b is not an integer\n\n```\n\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "What should be the right way to get sum in above example ? A similar kind of problem arises in the rules.",
  "id": "5b0b11d6a7abc8692eeb3655",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T20:15:18.566Z",
  "text": "What should be the right way to get sum in above example ? A similar kind of problem arises in the rules.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "A easy way around would be to keep it in a <code>for</code> loop.",
  "id": "5b0b1855361a950a661d47a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T20:43:01.554Z",
  "text": "A easy way around would be to keep it in a `for` loop.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<code>Coeff</code> is called first . Loop is not helping here. ",
  "id": "5b0b18d6361a950a661d48e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T20:45:10.404Z",
  "text": "`Coeff` is called first . Loop is not helping here. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-27T20:46:35.091Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Also I need to implement a general <code>Sum</code> , that can take care of any expression and function not only <code>Coeff</code> .",
  "id": "5b0b191999fa7f4c06231a57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T20:46:17.124Z",
  "text": "Also I need to implement a general `Sum` , that can take care of any expression and function not only `Coeff` .",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Yes, you can redefine <code>Sum</code> such that it does not pass the variable <code>b</code> instead just loops over values 1 to 4.",
  "id": "5b0b19a3edd06f7d15ea597a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T20:48:35.155Z",
  "text": "Yes, you can redefine `Sum` such that it does not pass the variable `b` instead just loops over values 1 to 4.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "However, that is not practical solution for the rules. ",
  "id": "5b0b19b4a7abc8692eeb48a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T20:48:52.682Z",
  "text": "However, that is not practical solution for the rules. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<code>Coeff</code> should return an expression in <code>b</code> ideally. ",
  "id": "5b0b19d752e35117cde716d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T20:49:27.643Z",
  "text": "`Coeff` should return an expression in `b` ideally. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "How does mathematica handles <code>Coeff(expr, x, b)</code>?",
  "id": "5b0b1a1599fa7f4c06231d00",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T20:50:29.443Z",
  "text": "How does mathematica handles `Coeff(expr, x, b)`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "It also returns in the same way. (coefficient of x^b in expr)",
  "id": "5b0b1a6b352b9e1a4b39056b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T20:51:55.057Z",
  "text": "It also returns in the same way. (coefficient of x^b in expr)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Also this is not just for <code>Coeff</code> . There are other functions",
  "id": "5b0b1a8b52e35117cde71859",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T20:52:27.332Z",
  "text": "Also this is not just for `Coeff` . There are other functions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "So we need to find a general solution.",
  "id": "5b0b1a9f160c567d16e0afda",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T20:52:47.481Z",
  "text": "So we need to find a general solution.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I mean what is the output when you run <code>Coeff(expr, x, b)</code> in Mathematica when <code>b</code> is a variable?",
  "id": "5b0b1aa952e35117cde7188f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T20:52:57.597Z",
  "text": "I mean what is the output when you run `Coeff(expr, x, b)` in Mathematica when `b` is a variable?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "it&#39;s <code>0</code> but it works fine when called inside <code>Sum[]</code>",
  "id": "5b0b1ad316f6496124e5a303",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T20:53:39.055Z",
  "text": "it's `0` but it works fine when called inside `Sum[]`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay, I think we need to find other way round for this problem. Redefining <code>Sum</code> wont solve the issue. ",
  "id": "5b0b1b9a54ce2313615c375d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T20:56:58.224Z",
  "text": "Okay, I think we need to find other way round for this problem. Redefining `Sum` wont solve the issue. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Because <code>Coeff</code> will be called befire <code>Sum()</code>. ",
  "id": "5b0b1bb3a7abc8692eeb4e0a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T20:57:23.632Z",
  "text": "Because `Coeff` will be called befire `Sum()`. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "before*",
  "id": "5b0b1bcfba1a351a68cb0f21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T20:57:51.065Z",
  "text": "before*",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Here is Mathematica&#39;s result<pre><code><span class=\"keyword\">In</span>[<span class=\"number\">52</span>]:= <span class=\"keyword\">Sum</span>[<span class=\"keyword\">Coefficient</span>[x^<span class=\"number\">3</span> + x, x, b], <span class=\"list\">{b, 1, 5}</span>]\n<span class=\"keyword\">Out</span>[<span class=\"number\">52</span>]:= <span class=\"number\">2</span></code></pre>",
  "id": "5b0b1bd993dc78791c8d6505",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T20:58:01.313Z",
  "text": "Here is Mathematica's result\n```\nIn[52]:= Sum[Coefficient[x^3 + x, x, b], {b, 1, 5}]\nOut[52]:= 2\n```\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay, in Python, <code>Coeff</code>will be evaluated before <code>Sum()</code>. I think Mathematica has another way of handling this problem.",
  "id": "5b0b1c32edd06f7d15ea6006",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T20:59:30.165Z",
  "text": "Okay, in Python, `Coeff`will be evaluated before `Sum()`. I think Mathematica has another way of handling this problem.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "What other functions did you see similar problems?",
  "id": "5b0b1c8754ce2313615c38fd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T21:00:55.603Z",
  "text": "What other functions did you see similar problems?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "For now only <code>Coeff</code> . I have not investigated all rules.",
  "id": "5b0b1d8554ce2313615c3aff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T21:05:09.669Z",
  "text": "For now only `Coeff` . I have not investigated all rules.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay, one of the possible solution would be to change <code>Coeff()</code> to return a dict of all coefficients. And change the function <code>Sum</code> accordingly.",
  "id": "5b0b1e0054ce2313615c3d0e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T21:07:12.720Z",
  "text": "Okay, one of the possible solution would be to change `Coeff()` to return a dict of all coefficients. And change the function `Sum` accordingly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "If <code>b</code> is a variable, return <code>dict</code> of coefficients, else return <code>expr.coeff(x, n)</code>",
  "id": "5b0b1e2cb6eece791db99ee9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T21:07:56.563Z",
  "text": "If `b` is a variable, return `dict` of coefficients, else return `expr.coeff(x, n)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Okay . I will  try",
  "id": "5b0b1e794eaffb692d5da9d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T21:09:13.678Z",
  "text": "Okay . I will  try",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay ",
  "id": "5b0b1eb3ba1a351a68cb1605",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T21:10:11.013Z",
  "text": "Okay ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>Looping will not take care of cases when there are nested <code>Sum</code> . There are few nested <code>Sum</code> in the rule.<br>Here is a mathematica example : </p><pre><code>expr = x^<span class=\"number\">3</span> +x\na = <span class=\"keyword\">Sum</span>[<span class=\"keyword\">Coefficient</span>[expr, x, b]*<span class=\"keyword\">Sum</span>[<span class=\"keyword\">Coefficient</span>[expr,x, a], <span class=\"list\">{a, 0, b}</span>], <span class=\"list\">{b, 1, 4}</span> ]\n\n<span class=\"keyword\">Out</span>[<span class=\"number\">2</span>] = <span class=\"number\">3</span></code></pre><p>How to solve this ?</p>",
  "id": "5b0ba168a7abc8692eec8580",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T06:27:52.545Z",
  "text": "Looping will not take care of cases when there are nested `Sum` . There are few nested `Sum` in the rule.\nHere is a mathematica example : \n```\nexpr = x^3 +x\na = Sum[Coefficient[expr, x, b]*Sum[Coefficient[expr,x, a], {a, 0, b}], {b, 1, 4} ]\n\nOut[2] = 3\n \n```\nHow to solve this ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Is it possible to create a <code>Coeffecient(expr, x, n)</code> object which remains unevaluated and evaluates on <code>.doit()</code>?",
  "id": "5b0ba78454ce2313615d872c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T06:53:56.480Z",
  "text": "Is it possible to create a `Coeffecient(expr, x, n)` object which remains unevaluated and evaluates on `.doit()`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Also inside <code>Sum</code> there are expressions multiplied to <code>Coeff</code>. We also need to take care of that.<br>like this : <pre><code><span class=\"function\"><span class=\"title\">Sum</span><span class=\"params\">(c**(-j)</span></span>*(c*x)**(j + m)*(<span class=\"tag\">a</span> + b*x**n)**p*<span class=\"function\"><span class=\"title\">Sum</span><span class=\"params\">(x**(k*n/S(<span class=\"number\">2</span>)</span></span>)*<span class=\"function\"><span class=\"title\">Coeff</span><span class=\"params\">(Pq, x, j + k*n/S(<span class=\"number\">2</span>)</span></span>), <span class=\"function\"><span class=\"title\">List</span><span class=\"params\">(k, S(<span class=\"number\">0</span>)</span></span>, <span class=\"function\"><span class=\"title\">S</span><span class=\"params\">(<span class=\"number\">1</span>)</span></span> + <span class=\"function\"><span class=\"title\">S</span><span class=\"params\">(<span class=\"number\">2</span>)</span></span>*(-j + q)/n)), <span class=\"function\"><span class=\"title\">List</span><span class=\"params\">(j, S(<span class=\"number\">0</span>)</span></span>, n/<span class=\"function\"><span class=\"title\">S</span><span class=\"params\">(<span class=\"number\">2</span>)</span></span> + <span class=\"function\"><span class=\"title\">S</span><span class=\"params\">(-<span class=\"number\">1</span>)</span></span>))</code></pre>",
  "id": "5b0ba879ba1a351a68cc624b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T06:58:01.114Z",
  "text": "Also inside `Sum` there are expressions multiplied to `Coeff`. We also need to take care of that.\nlike this : \n```\nSum(c**(-j)*(c*x)**(j + m)*(a + b*x**n)**p*Sum(x**(k*n/S(2))*Coeff(Pq, x, j + k*n/S(2)), List(k, S(0), S(1) + S(2)*(-j + q)/n)), List(j, S(0), n/S(2) + S(-1)))\n``` \n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I tried for many things but could not find the right one.",
  "id": "5b0ba88d361a950a661e9a0d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T06:58:21.417Z",
  "text": "I tried for many things but could not find the right one.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I implemented this.It works fine now : <pre><code>In [<span class=\"number\">1</span>]: <span class=\"keyword\">from</span> sympy <span class=\"keyword\">import</span> *\n\nIn [<span class=\"number\">2</span>]: <span class=\"keyword\">from</span> sympy.abc <span class=\"keyword\">import</span> a,b,x\n\nIn [<span class=\"number\">3</span>]: expr = x**<span class=\"number\">3</span> + x\n\nIn [<span class=\"number\">4</span>]: <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Util_Coefficient</span><span class=\"params\">(Function)</span>:</span>\n   ...:     <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">doit</span><span class=\"params\">(self)</span>:</span>\n   ...:         <span class=\"keyword\">if</span> len(self.args) == <span class=\"number\">2</span>:\n   ...:             n = <span class=\"number\">1</span>\n   ...:         <span class=\"keyword\">else</span>:\n   ...:             <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> isinstance(self.args[<span class=\"number\">2</span>], (int, Integer,float, Float)):\n   ...:                 <span class=\"keyword\">return</span> self\n   ...:             n = self.args[<span class=\"number\">2</span>]\n   ...:         expr = expand(self.args[<span class=\"number\">0</span>])\n   ...:         <span class=\"keyword\">return</span> expr.coeff(self.args[<span class=\"number\">1</span>], n)\n   ...: \n\nIn [<span class=\"number\">5</span>]: Sum(Util_Coefficient(expr, x, b)*Sum(Util_Coefficient(expr,x, a), [a, <span class=\"number\">0</span>, b]), [b, <span class=\"number\">1</span>, <span class=\"number\">4</span>] ).doit()\nOut[<span class=\"number\">5</span>]: <span class=\"number\">3</span></code></pre>",
  "id": "5b0be648ba1a351a68cd46e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T11:21:44.486Z",
  "text": "I implemented this.It works fine now : \n```\nIn [1]: from sympy import *\n\nIn [2]: from sympy.abc import a,b,x\n\nIn [3]: expr = x**3 + x\n\nIn [4]: class Util_Coefficient(Function):\n   ...:     def doit(self):\n   ...:         if len(self.args) == 2:\n   ...:             n = 1\n   ...:         else:\n   ...:             if not isinstance(self.args[2], (int, Integer,float, Float)):\n   ...:                 return self\n   ...:             n = self.args[2]\n   ...:         expr = expand(self.args[0])\n   ...:         return expr.coeff(self.args[1], n)\n   ...: \n\nIn [5]: Sum(Util_Coefficient(expr, x, b)*Sum(Util_Coefficient(expr,x, a), [a, 0, b]), [b, 1, 4] ).doit()\nOut[5]: 3\n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Awesome ",
  "id": "5b0c19f1b6eece791dbc9ab6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T15:02:09.076Z",
  "text": "Awesome ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<pre><code>Pqq = <span class=\"function\"><span class=\"title\">Symbol</span><span class=\"params\">(<span class=\"string\">'Pqq'</span>)</span></span>\n<span class=\"function\"><span class=\"title\">With</span><span class=\"params\">(List(Set(Pqq, Coeff(Pq, x, q)</span></span>)), Pqq*x**(-n + <span class=\"tag\">q</span> + <span class=\"function\"><span class=\"title\">S</span><span class=\"params\">(<span class=\"number\">1</span>)</span></span>)*(<span class=\"tag\">a</span> + b*x**n)**(<span class=\"tag\">p</span> + <span class=\"function\"><span class=\"title\">S</span><span class=\"params\">(<span class=\"number\">1</span>)</span></span>)/(b*(n*<span class=\"tag\">p</span> + <span class=\"tag\">q</span> + <span class=\"function\"><span class=\"title\">S</span><span class=\"params\">(<span class=\"number\">1</span>)</span></span>)) + <span class=\"function\"><span class=\"title\">Int</span><span class=\"params\">((a + b*x**n)</span></span>**p*<span class=\"function\"><span class=\"title\">ExpandToSum</span><span class=\"params\">(-Pqq*a*x**(-n + q)</span></span>*(-n + <span class=\"tag\">q</span> + <span class=\"function\"><span class=\"title\">S</span><span class=\"params\">(<span class=\"number\">1</span>)</span></span>) + b*(Pq - Pqq*x**q)*(n*<span class=\"tag\">p</span> + <span class=\"tag\">q</span> + <span class=\"function\"><span class=\"title\">S</span><span class=\"params\">(<span class=\"number\">1</span>)</span></span>), x), x)/(b*(n*<span class=\"tag\">p</span> + <span class=\"tag\">q</span> + <span class=\"function\"><span class=\"title\">S</span><span class=\"params\">(<span class=\"number\">1</span>)</span></span>)))</code></pre>A similar kind of problem is found in this type of rules. (All value except <code>Pqq</code> is known).   Actually it want to set value of <code>Pqq</code> to <code>Coeff(Pq, x, q)</code> Then return the rest expression with that value of <code>Pqq</code>. But in sympy first <code>ExpandToSum</code> is called with <code>Pqq</code> as a symbol . It results in recursions. Is there some simple way to solve this ?",
  "id": "5b0d1c6b361a950a662376fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-29T09:24:59.755Z",
  "text": "```\nPqq = Symbol('Pqq')\nWith(List(Set(Pqq, Coeff(Pq, x, q))), Pqq*x**(-n + q + S(1))*(a + b*x**n)**(p + S(1))/(b*(n*p + q + S(1))) + Int((a + b*x**n)**p*ExpandToSum(-Pqq*a*x**(-n + q)*(-n + q + S(1)) + b*(Pq - Pqq*x**q)*(n*p + q + S(1)), x), x)/(b*(n*p + q + S(1))))\n```\nA similar kind of problem is found in this type of rules. (All value except `Pqq` is known).   Actually it want to set value of `Pqq` to `Coeff(Pq, x, q)` Then return the rest expression with that value of `Pqq`. But in sympy first `ExpandToSum` is called with `Pqq` as a symbol . It results in recursions. Is there some simple way to solve this ?\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I am not getting any recursion errors ",
  "id": "5b0d5b3dba1a351a68d23b3e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-29T13:53:01.691Z",
  "text": "I am not getting any recursion errors ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<pre><code class=\"python\"><span class=\"prompt\">&gt;&gt;&gt; </span><span class=\"keyword\">from</span> sympy <span class=\"keyword\">import</span> * \n<span class=\"prompt\">&gt;&gt;&gt; </span><span class=\"keyword\">from</span> sympy.integrals.rubi.utility_function <span class=\"keyword\">import</span> ExpandToSum\n<span class=\"prompt\">&gt;&gt;&gt; </span>x = Symbol(<span class=\"string\">'x'</span>)\n<span class=\"prompt\">&gt;&gt;&gt; </span>A, B, a, b, c, d, e, f, g, h, y, z, m, n, p, q, u, v, w, F = symbols(<span class=\"string\">'A B a b c d e f g h y z m n p q u v w F'</span>)\n<span class=\"prompt\">&gt;&gt;&gt; </span>Pq = Symbol(<span class=\"string\">'Pq'</span>)\n<span class=\"prompt\">&gt;&gt;&gt; </span>Pqq = Symbol(<span class=\"string\">'Pqq'</span>)\n<span class=\"prompt\">&gt;&gt;&gt; </span>ExpandToSum(-Pqq*a*x**(-n + q)*(-n + q + S(<span class=\"number\">1</span>)) + b*(Pq - Pqq*x**q)*(n*p + q + S(<span class=\"number\">1</span>)), x)\nPq*b*n*p + Pq*b*q + Pq*b + Pqq*a*n*x**(-n)*x**q - Pqq*a*q*x**(-n)*x**q - Pqq*a*x**(-n)*x**q - Pqq*b*n*p*x**q - Pqq*b*q*x**q - Pqq*b*x**q</code></pre>",
  "id": "5b0d5b4999fa7f4c062a43b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-29T13:53:13.471Z",
  "text": "```python\n>>> from sympy import * \n>>> from sympy.integrals.rubi.utility_function import ExpandToSum\n>>> x = Symbol('x')\n>>> A, B, a, b, c, d, e, f, g, h, y, z, m, n, p, q, u, v, w, F = symbols('A B a b c d e f g h y z m n p q u v w F')\n>>> Pq = Symbol('Pq')\n>>> Pqq = Symbol('Pqq')\n>>> ExpandToSum(-Pqq*a*x**(-n + q)*(-n + q + S(1)) + b*(Pq - Pqq*x**q)*(n*p + q + S(1)), x)\nPq*b*n*p + Pq*b*q + Pq*b + Pqq*a*n*x**(-n)*x**q - Pqq*a*q*x**(-n)*x**q - Pqq*a*x**(-n)*x**q - Pqq*b*n*p*x**q - Pqq*b*q*x**q - Pqq*b*x**q\n```\n\n\n\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "The problem is not with <code>ExpandToSum</code> . I meant tosay that in the following expression ExpandToSum returns a value in <code>Pqq</code>. So that causes recursion error in <code>Int</code>. <pre><code><span class=\"function\"><span class=\"title\">Int</span><span class=\"params\">((a + b*x**n)</span></span>**p*<span class=\"function\"><span class=\"title\">ExpandToSum</span><span class=\"params\">(-Pqq*a*x**(-n + q)</span></span>*(-n + <span class=\"tag\">q</span> + <span class=\"function\"><span class=\"title\">S</span><span class=\"params\">(<span class=\"number\">1</span>)</span></span>) + b*(Pq - Pqq*x**q)*(n*<span class=\"tag\">p</span> + <span class=\"tag\">q</span> + <span class=\"function\"><span class=\"title\">S</span><span class=\"params\">(<span class=\"number\">1</span>)</span></span>), x), x)</code></pre>",
  "id": "5b0d683f352b9e1a4b4073b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-29T14:48:31.297Z",
  "text": "The problem is not with `ExpandToSum` . I meant tosay that in the following expression ExpandToSum returns a value in `Pqq`. So that causes recursion error in `Int`. \n```\nInt((a + b*x**n)**p*ExpandToSum(-Pqq*a*x**(-n + q)*(-n + q + S(1)) + b*(Pq - Pqq*x**q)*(n*p + q + S(1)), x), x)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "This is the part of the replacement rule.",
  "id": "5b0d686fba1a351a68d27c56",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-29T14:49:19.040Z",
  "text": "This is the part of the replacement rule.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "A new variable <code>Pqq</code> is introduced everytime in <code>Int</code> . If real value of <code>Pqq</code> could be passed that would not cause this problem.",
  "id": "5b0d68d1a7abc8692ef2b81f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-29T14:50:57.852Z",
  "text": "A new variable `Pqq` is introduced everytime in `Int` . If real value of `Pqq` could be passed that would not cause this problem.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ashishkg0022\" class=\"mention\">@ashishkg0022</span> if the comparison of the tests with Mathematica is time consuming, just try to import Mathematica&#39;s output into SymPy. SymPy has a certain (limited) capability of parsing Mathematica expressions.",
  "id": "5b0e509793dc78791c97d564",
  "issues": [],
  "mentions": [
   {
    "screenName": "ashishkg0022",
    "userId": "58bd696cd73408ce4f4eb85b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-30T07:19:51.273Z",
  "text": "@ashishkg0022 if the comparison of the tests with Mathematica is time consuming, just try to import Mathematica's output into SymPy. SymPy has a certain (limited) capability of parsing Mathematica expressions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would recommend that you share the script to run the tests with us, so that we can also use our computers.",
  "id": "5b0e50d9361a950a6627c7e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-30T07:20:57.812Z",
  "text": "I would recommend that you share the script to run the tests with us, so that we can also use our computers.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Maybe you can create a second not-to-merge PR",
  "id": "5b0e50e993dc78791c97d5f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-30T07:21:13.072Z",
  "text": "Maybe you can create a second not-to-merge PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I will create the PR today.",
  "id": "5b0e559dc712f56125434165",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-30T07:41:17.032Z",
  "text": "I will create the PR today.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "There are some issues that need to be fixed to pass more tests. I will mention that in the PR",
  "id": "5b0e568e016ae21a4cf595e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-30T07:45:18.758Z",
  "text": "There are some issues that need to be fixed to pass more tests. I will mention that in the PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ashishkg0022\" class=\"mention\">@ashishkg0022</span> , how is mathematica handling this issue: <code>Int((a + b*x**n)**p*ExpandToSum(-Pqq*a*x**(-n + q)*(-n + q + S(1)) + b*(Pq - Pqq*x**q)*(n*p + q + S(1)), x), x)</code>",
  "id": "5b0e64bec712f561254383a2",
  "issues": [],
  "mentions": [
   {
    "screenName": "ashishkg0022",
    "userId": "58bd696cd73408ce4f4eb85b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-30T08:45:50.386Z",
  "text": "@ashishkg0022 , how is mathematica handling this issue: `Int((a + b*x**n)**p*ExpandToSum(-Pqq*a*x**(-n + q)*(-n + q + S(1)) + b*(Pq - Pqq*x**q)*(n*p + q + S(1)), x), x)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "It first sets value of Pqq to Coeff(Pq, x, q) then calls ExpandToSum",
  "id": "5b0e653952e35117cdf1c6eb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-30T08:47:53.184Z",
  "text": "It first sets value of Pqq to Coeff(Pq, x, q) then calls ExpandToSum",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Regarding tests, what you can do apart from <span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> suggestion is that run the tests on a cloud server such that you can download all the failed tests. You can get free 18h of CPU on <a href=\"https://www.floydhub.com\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.floydhub.com</a> ",
  "id": "5b0e6570a7abc8692ef624cf",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-30T08:48:48.595Z",
  "text": "Regarding tests, what you can do apart from @Upabjojr suggestion is that run the tests on a cloud server such that you can download all the failed tests. You can get free 18h of CPU on https://www.floydhub.com ",
  "unread": false,
  "urls": [
   {
    "url": "https://www.floydhub.com"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Problem is not in running tests. For debugging It takes a larger time . As I have to run single expressions on Mathematica.",
  "id": "5b0e663bba1a351a68d60264",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-30T08:52:11.526Z",
  "text": "Problem is not in running tests. For debugging It takes a larger time . As I have to run single expressions on Mathematica.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "For the <code>ExpandToSum</code> problem. Will it be possible to remove <code>With</code> in the parsing itself?",
  "id": "5b0e667dc712f56125438ac7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-30T08:53:17.550Z",
  "text": "For the `ExpandToSum` problem. Will it be possible to remove `With` in the parsing itself?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Also <code>With</code> Statements is not handled properly in almost many cases. This should be fixed first.",
  "id": "5b0e66bdedd06f7d15f54dfc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-30T08:54:21.109Z",
  "text": "Also `With` Statements is not handled properly in almost many cases. This should be fixed first.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay ",
  "id": "5b0e66ce16f6496124f072b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-30T08:54:38.684Z",
  "text": "Okay ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "For now I will try to find a solution to the parsing of <code>With</code> statement",
  "id": "5b0e671b361a950a66282079",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-30T08:55:55.394Z",
  "text": "For now I will try to find a solution to the parsing of `With` statement",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-30T18:54:47.868Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span>  I made changes to parsetools for <code>With</code> statement . For now it looks to work fine. I will investigate more cases.<br>As an example : </p><p>This is the Mathematica rule.</p><pre><code><span class=\"name\">Int</span>[<span class=\"atom\">u_</span>*<span class=\"atom\">v_</span>^<span class=\"atom\">p_</span>,<span class=\"atom\">x_Symbol</span>] :=\n  <span class=\"name\">With</span>[{<span class=\"atom\">m</span>=<span class=\"name\">Exponent</span>[<span class=\"atom\">u</span>,<span class=\"atom\">x</span>],<span class=\"atom\">n</span>=<span class=\"name\">Exponent</span>[<span class=\"atom\">v</span>,<span class=\"atom\">x</span>]},\n  <span class=\"name\">Module</span>[{<span class=\"atom\">c</span>=<span class=\"name\">Coefficient</span>[<span class=\"atom\">u</span>,<span class=\"atom\">x</span>,<span class=\"atom\">m</span>]/(<span class=\"name\">Coefficient</span>[<span class=\"atom\">v</span>,<span class=\"atom\">x</span>,<span class=\"atom\">n</span>]*(<span class=\"atom\">m</span>+<span class=\"number\">1</span>+<span class=\"atom\">n</span>*<span class=\"atom\">p</span>)),<span class=\"atom\">w</span>},\n  <span class=\"atom\">c</span>=<span class=\"name\">Coefficient</span>[<span class=\"atom\">u</span>,<span class=\"atom\">x</span>,<span class=\"atom\">m</span>]/(<span class=\"name\">Coefficient</span>[<span class=\"atom\">v</span>,<span class=\"atom\">x</span>,<span class=\"atom\">n</span>]*(<span class=\"atom\">m</span>+<span class=\"number\">1</span>+<span class=\"atom\">n</span>*<span class=\"atom\">p</span>));\n  <span class=\"atom\">w</span>=<span class=\"name\">Apart</span>[<span class=\"atom\">u</span>-<span class=\"atom\">c</span>*<span class=\"atom\">x</span>^(<span class=\"atom\">m</span>-<span class=\"atom\">n</span>)*((<span class=\"atom\">m</span>-<span class=\"atom\">n</span>+<span class=\"number\">1</span>)*<span class=\"atom\">v</span>+(<span class=\"atom\">p</span>+<span class=\"number\">1</span>)*<span class=\"atom\">x</span>*<span class=\"name\">D</span>[<span class=\"atom\">v</span>,<span class=\"atom\">x</span>]),<span class=\"atom\">x</span>];\n  <span class=\"name\">If</span>[<span class=\"name\">ZeroQ</span>[<span class=\"atom\">w</span>],\n    <span class=\"atom\">c</span>*<span class=\"atom\">x</span>^(<span class=\"atom\">m</span>-<span class=\"atom\">n</span>+<span class=\"number\">1</span>)*<span class=\"atom\">v</span>^(<span class=\"atom\">p</span>+<span class=\"number\">1</span>),\n  <span class=\"atom\">c</span>*<span class=\"atom\">x</span>^(<span class=\"atom\">m</span>-<span class=\"atom\">n</span>+<span class=\"number\">1</span>)*<span class=\"atom\">v</span>^(<span class=\"atom\">p</span>+<span class=\"number\">1</span>) + <span class=\"name\">Int</span>[<span class=\"atom\">w</span>*<span class=\"atom\">v</span>^<span class=\"atom\">p</span>,<span class=\"atom\">x</span>]]] /;\n <span class=\"number\">1</span>&lt;<span class=\"atom\">n</span>&lt;=<span class=\"atom\">m</span>+<span class=\"number\">1</span> &amp;&amp; <span class=\"atom\">m</span>+<span class=\"atom\">n</span>*<span class=\"atom\">p</span>&lt;-<span class=\"number\">1</span> &amp;&amp; <span class=\"name\">FalseQ</span>[<span class=\"name\">DerivativeDivides</span>[<span class=\"atom\">v</span>,<span class=\"atom\">u</span>,<span class=\"atom\">x</span>]]] /;\n<span class=\"name\">RationalQ</span>[<span class=\"atom\">p</span>] &amp;&amp; <span class=\"atom\">p</span>&lt;-<span class=\"number\">1</span> &amp;&amp; <span class=\"name\">PolynomialQ</span>[<span class=\"atom\">u</span>,<span class=\"atom\">x</span>] &amp;&amp; <span class=\"name\">PolynomialQ</span>[<span class=\"atom\">v</span>,<span class=\"atom\">x</span>] &amp;&amp; <span class=\"name\">SumQ</span>[<span class=\"atom\">v</span>] &amp;&amp; \n<span class=\"name\">Not</span>[<span class=\"name\">MonomialQ</span>[<span class=\"atom\">u</span>,<span class=\"atom\">x</span>] &amp;&amp; <span class=\"name\">BinomialQ</span>[<span class=\"atom\">v</span>,<span class=\"atom\">x</span>]] &amp;&amp; \n<span class=\"name\">Not</span>[<span class=\"name\">ZeroQ</span>[<span class=\"name\">Coefficient</span>[<span class=\"atom\">u</span>,<span class=\"atom\">x</span>,<span class=\"number\">0</span>]] &amp;&amp; <span class=\"name\">ZeroQ</span>[<span class=\"name\">Coefficient</span>[<span class=\"atom\">v</span>,<span class=\"atom\">x</span>,<span class=\"number\">0</span>]]]]</code></pre><p>It is being parsed to </p><pre><code>     def <span class=\"function\"><span class=\"title\">With409</span><span class=\"params\">(u, p, x, v)</span></span>:\n        m = <span class=\"function\"><span class=\"title\">Exponent</span><span class=\"params\">(u, x)</span></span>\n        n = <span class=\"function\"><span class=\"title\">Exponent</span><span class=\"params\">(v, x)</span></span>\n        <span class=\"keyword\">if</span> <span class=\"function\"><span class=\"title\">And</span><span class=\"params\">(Inequality(S(<span class=\"number\">1</span>)</span></span>, Less, n, LessEqual, m + <span class=\"function\"><span class=\"title\">S</span><span class=\"params\">(<span class=\"number\">1</span>)</span></span>), <span class=\"function\"><span class=\"title\">Less</span><span class=\"params\">(m + n*p, S(-<span class=\"number\">1</span>)</span></span>), <span class=\"function\"><span class=\"title\">FalseQ</span><span class=\"params\">(DerivativeDivides(v, u, x)</span></span>)):\n            return True\n        return False\n    pattern409 = <span class=\"function\"><span class=\"title\">Pattern</span><span class=\"params\">(Integral(u_*v_**p_, x_)</span></span>, cons88, cons89, cons22, cons301, cons384, cons385, cons386, <span class=\"function\"><span class=\"title\">CustomConstraint</span><span class=\"params\">(With409)</span></span>)\n    def <span class=\"function\"><span class=\"title\">replacement409</span><span class=\"params\">(u, p, x, v)</span></span>:\n\n        m = <span class=\"function\"><span class=\"title\">Exponent</span><span class=\"params\">(u, x)</span></span>\n        n = <span class=\"function\"><span class=\"title\">Exponent</span><span class=\"params\">(v, x)</span></span>\n        c = <span class=\"function\"><span class=\"title\">Coefficient</span><span class=\"params\">(u, x, m)</span></span>/((m + n*<span class=\"tag\">p</span> + <span class=\"function\"><span class=\"title\">S</span><span class=\"params\">(<span class=\"number\">1</span>)</span></span>)*<span class=\"function\"><span class=\"title\">Coefficient</span><span class=\"params\">(v, x, n)</span></span>)\n        c = <span class=\"function\"><span class=\"title\">Coefficient</span><span class=\"params\">(u, x, m)</span></span>/((m + n*<span class=\"tag\">p</span> + <span class=\"function\"><span class=\"title\">S</span><span class=\"params\">(<span class=\"number\">1</span>)</span></span>)*<span class=\"function\"><span class=\"title\">Coefficient</span><span class=\"params\">(v, x, n)</span></span>)\n        w = <span class=\"function\"><span class=\"title\">Apart</span><span class=\"params\">(-c*x**(m - n)</span></span>*(v*(m - n + <span class=\"function\"><span class=\"title\">S</span><span class=\"params\">(<span class=\"number\">1</span>)</span></span>) + x*(<span class=\"tag\">p</span> + <span class=\"function\"><span class=\"title\">S</span><span class=\"params\">(<span class=\"number\">1</span>)</span></span>)*<span class=\"function\"><span class=\"title\">D</span><span class=\"params\">(v, x)</span></span>) + u, x)\n        rubi.<span class=\"function\"><span class=\"title\">append</span><span class=\"params\">(<span class=\"number\">409</span>)</span></span>\n        return <span class=\"function\"><span class=\"title\">If</span><span class=\"params\">(ZeroQ(w)</span></span>, c*v**(<span class=\"tag\">p</span> + <span class=\"number\">1</span>)*x**(m - n + <span class=\"number\">1</span>), c*v**(<span class=\"tag\">p</span> + <span class=\"number\">1</span>)*x**(m - n + <span class=\"number\">1</span>) + <span class=\"function\"><span class=\"title\">Int</span><span class=\"params\">(v**p*w, x)</span></span>)\n    rule409 = <span class=\"function\"><span class=\"title\">ReplacementRule</span><span class=\"params\">(pattern409, replacement409)</span></span></code></pre>",
  "id": "5b0ef2f1ba1a351a68d83994",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-30T18:52:33.671Z",
  "text": "@parsoyaarihant  I made changes to parsetools for `With` statement . For now it looks to work fine. I will investigate more cases. \nAs an example : \n\nThis is the Mathematica rule.\n```\nInt[u_*v_^p_,x_Symbol] :=\n  With[{m=Exponent[u,x],n=Exponent[v,x]},\n  Module[{c=Coefficient[u,x,m]/(Coefficient[v,x,n]*(m+1+n*p)),w},\n  c=Coefficient[u,x,m]/(Coefficient[v,x,n]*(m+1+n*p));\n  w=Apart[u-c*x^(m-n)*((m-n+1)*v+(p+1)*x*D[v,x]),x];\n  If[ZeroQ[w],\n    c*x^(m-n+1)*v^(p+1),\n  c*x^(m-n+1)*v^(p+1) + Int[w*v^p,x]]] /;\n 1<n<=m+1 && m+n*p<-1 && FalseQ[DerivativeDivides[v,u,x]]] /;\nRationalQ[p] && p<-1 && PolynomialQ[u,x] && PolynomialQ[v,x] && SumQ[v] && \nNot[MonomialQ[u,x] && BinomialQ[v,x]] && \nNot[ZeroQ[Coefficient[u,x,0]] && ZeroQ[Coefficient[v,x,0]]]]\n\n```\nIt is being parsed to \n```\n     def With409(u, p, x, v):\n        m = Exponent(u, x)\n        n = Exponent(v, x)\n        if And(Inequality(S(1), Less, n, LessEqual, m + S(1)), Less(m + n*p, S(-1)), FalseQ(DerivativeDivides(v, u, x))):\n            return True\n        return False\n    pattern409 = Pattern(Integral(u_*v_**p_, x_), cons88, cons89, cons22, cons301, cons384, cons385, cons386, CustomConstraint(With409))\n    def replacement409(u, p, x, v):\n        \n        m = Exponent(u, x)\n        n = Exponent(v, x)\n        c = Coefficient(u, x, m)/((m + n*p + S(1))*Coefficient(v, x, n))\n        c = Coefficient(u, x, m)/((m + n*p + S(1))*Coefficient(v, x, n))\n        w = Apart(-c*x**(m - n)*(v*(m - n + S(1)) + x*(p + S(1))*D(v, x)) + u, x)\n        rubi.append(409)\n        return If(ZeroQ(w), c*v**(p + 1)*x**(m - n + 1), c*v**(p + 1)*x**(m - n + 1) + Int(v**p*w, x))\n    rule409 = ReplacementRule(pattern409, replacement409)\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-05-30T19:01:41.989Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Does this look fine ?",
  "id": "5b0ef39c16f6496124f2b58a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-30T18:55:24.217Z",
  "text": "Does this look fine ?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Yes ",
  "id": "5b0faa5fb6eece791dc92024",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-31T07:55:11.456Z",
  "text": "Yes ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p><code>apart</code> in sympy seems not to work for some cases. I got a recursion error.  After investigating through a series of functions , I found apart doesn&#39;t  work for this expression : </p><pre><code>1/((a + c<span class=\"keyword\">*</span>x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>(2<span class=\"keyword\">*</span>n))<span class=\"keyword\">*</span>(d + e<span class=\"keyword\">*</span>x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>n))</code></pre><p>But it works for Mathematica</p><pre><code class=\"mathematica\"><span class=\"keyword\">In</span>[<span class=\"number\">1</span>]:= <span class=\"keyword\">Apart</span>[<span class=\"number\">1</span>/((a + c*x^(<span class=\"number\">2</span>*n))*(d + e*x^n))]\n<span class=\"keyword\">Out</span>[<span class=\"number\">1</span>]:= e^<span class=\"number\">2</span>/((c d^<span class=\"number\">2</span>+a e^<span class=\"number\">2</span>) (d+e x^n))-(c (-d+e x^n))/((c d^<span class=\"number\">2</span>+a e^<span class=\"number\">2</span>) (a+c x^(<span class=\"number\">2</span> n)))</code></pre><p>For sympy it gives <code>NotImplementedError</code><br>Can someone look into it ?</p>",
  "id": "5b1222bdc712f56125509063",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-02T04:53:17.963Z",
  "text": "`apart` in sympy seems not to work for some cases. I got a recursion error.  After investigating through a series of functions , I found apart doesn't  work for this expression : \n```\n1/((a + c*x**(2*n))*(d + e*x**n))\n``` \nBut it works for Mathematica\n```Mathematica\nIn[1]:= Apart[1/((a + c*x^(2*n))*(d + e*x^n))]\nOut[1]:= e^2/((c d^2+a e^2) (d+e x^n))-(c (-d+e x^n))/((c d^2+a e^2) (a+c x^(2 n)))\n```\nFor sympy it gives `NotImplementedError`\nCan someone look into it ?\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-02T09:04:07.510Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Can you raise a SymPy issue for it?",
  "id": "5b125d7d52e35117cdff69bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-02T09:03:57.519Z",
  "text": "Can you raise a SymPy issue for it?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "There are more cases. Also its a not implementation case. ",
  "id": "5b125de593dc78791ca59fe9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-02T09:05:41.332Z",
  "text": "There are more cases. Also its a not implementation case. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay, post all the cases in the issue. I hope someone who have implemented <code>apart</code> in sympy will able to guide us through.",
  "id": "5b125ed493dc78791ca5a2a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-02T09:09:40.326Z",
  "text": "Okay, post all the cases in the issue. I hope someone who have implemented `apart` in sympy will able to guide us through.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Regarding the <code>Sort</code> , Aaron said that sympy orders arbitrarily and it could not be exactly same as Mathematica.",
  "id": "5b125f04e26c847ac8af0d74",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-02T09:10:28.177Z",
  "text": "Regarding the `Sort` , Aaron said that sympy orders arbitrarily and it could not be exactly same as Mathematica.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I discussed with him in the main channel.",
  "id": "5b125f17361a950a6635e464",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-02T09:10:47.147Z",
  "text": "I discussed with him in the main channel.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Can we try something like this? <a href=\"https://mathematica.stackexchange.com/questions/85752/how-to-canonically-reorganize-a-list-using-only-a-limited-set-of-manipulations?answertab=votes#tab-top\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://mathematica.stackexchange.com/questions/85752/how-to-canonically-reorganize-a-list-using-only-a-limited-set-of-manipulations?answertab=votes#tab-top</a>",
  "id": "5b12618552e35117cdff74b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-02T09:21:09.935Z",
  "text": "Can we try something like this? https://mathematica.stackexchange.com/questions/85752/how-to-canonically-reorganize-a-list-using-only-a-limited-set-of-manipulations?answertab=votes#tab-top",
  "unread": false,
  "urls": [
   {
    "url": "https://mathematica.stackexchange.com/questions/85752/how-to-canonically-reorganize-a-list-using-only-a-limited-set-of-manipulations?answertab=votes#tab-top"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I will check it. Thanks",
  "id": "5b1261caba1a351a68e39023",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-02T09:22:18.708Z",
  "text": "I will check it. Thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-02T12:15:28.296Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>Here is a Rule in which  <code>a</code> and <code>c</code> can be matched in 2 ways : </p><pre><code>Int[(e x)^m (a+<span class=\"tag\">b</span> x^n)^<span class=\"tag\">p</span> (c+d x^n)^<span class=\"tag\">q</span>, x] --&gt; Simp[(a^<span class=\"tag\">p</span> c^<span class=\"tag\">q</span> (e x)^(m+<span class=\"number\">1</span>) AppellF1[(m+<span class=\"number\">1</span>)/n,-<span class=\"tag\">p</span>,-<span class=\"tag\">q</span>,<span class=\"number\">1</span>+(m+<span class=\"number\">1</span>)/n,-((<span class=\"tag\">b</span> x^n)/a),-((d x^n)/c)])/(e (m+<span class=\"number\">1</span>)),x]</code></pre><p>Its constraints are : </p><pre><code><span class=\"name\">NonzeroQ</span>[<span class=\"atom\">b</span> <span class=\"atom\">c</span>-<span class=\"atom\">a</span> \\\n<span class=\"atom\">d</span>]&amp;&amp;<span class=\"name\">NonzeroQ</span>[<span class=\"atom\">m</span>+<span class=\"number\">1</span>]&amp;&amp;<span class=\"name\">NonzeroQ</span>[<span class=\"atom\">m</span>-<span class=\"atom\">n</span>+<span class=\"number\">1</span>]&amp;&amp;<span class=\"name\">PositiveQ</span>[<span class=\"atom\">a</span>]&amp;&amp;<span class=\"name\">PositiveQ</span>[<span class=\"atom\">c</span>]</code></pre><p>For an expression Mathematica&#39;s ouput contains : (As in the test suite)</p><pre><code>AppellF1[<span class=\"number\">1</span> + <span class=\"number\">1</span>/n, -(<span class=\"number\">1</span>/<span class=\"number\">2</span>), -(<span class=\"number\">1</span>/<span class=\"number\">2</span>), \n <span class=\"number\">2</span> + <span class=\"number\">1</span>/n, -((<span class=\"number\">2</span> c x^n)/(<span class=\"tag\">b</span> - Sqrt[b^<span class=\"number\">2</span> - <span class=\"number\">4</span> <span class=\"tag\">a</span> c])), -((<span class=\"number\">2</span> c x^n)/(\n  <span class=\"tag\">b</span> + Sqrt[b^<span class=\"number\">2</span> - <span class=\"number\">4</span> <span class=\"tag\">a</span> c]))]</code></pre><p>But For matchpy it is </p><pre><code>AppellF1<span class=\"list\">(<span class=\"number\">1</span> + <span class=\"number\">1</span>/n, -<span class=\"list\">(<span class=\"number\">1/2</span>)</span>, -<span class=\"list\">(<span class=\"number\">1/2</span>)</span>, \n <span class=\"number\">2</span> + <span class=\"number\">1</span>/n, -<span class=\"list\">(<span class=\"list\">(<span class=\"number\">2</span><span class=\"variable\">*c*</span>x**n)</span>/<span class=\"list\">(<span class=\"keyword\">b</span> + sqrt<span class=\"list\">(<span class=\"keyword\">b**2</span> - <span class=\"number\">4</span><span class=\"variable\">*a*</span>c)</span>)</span>)</span>, -<span class=\"list\">(<span class=\"list\">(<span class=\"number\">2</span><span class=\"variable\">*c*</span>x**n)</span>/<span class=\"list\">(\n  <span class=\"keyword\">b</span> - sqrt<span class=\"list\">(<span class=\"keyword\">b**2</span> - <span class=\"number\">4</span><span class=\"variable\">*a*</span>c)</span>)</span>)</span>)</span></code></pre>",
  "id": "5b128a2722a05f5e71f56274",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-02T12:14:31.340Z",
  "text": "Here is a Rule in which  `a` and `c` can be matched in 2 ways : \n```\nInt[(e x)^m (a+b x^n)^p (c+d x^n)^q, x] --> Simp[(a^p c^q (e x)^(m+1) AppellF1[(m+1)/n,-p,-q,1+(m+1)/n,-((b x^n)/a),-((d x^n)/c)])/(e (m+1)),x]\n```\nIts constraints are : \n```\nNonzeroQ[b c-a \\\nd]&&NonzeroQ[m+1]&&NonzeroQ[m-n+1]&&PositiveQ[a]&&PositiveQ[c]\n```\nFor an expression Mathematica's ouput contains : (As in the test suite)\n```\nAppellF1[1 + 1/n, -(1/2), -(1/2), \n 2 + 1/n, -((2 c x^n)/(b - Sqrt[b^2 - 4 a c])), -((2 c x^n)/(\n  b + Sqrt[b^2 - 4 a c]))]\n```\nBut For matchpy it is \n```\nAppellF1(1 + 1/n, -(1/2), -(1/2), \n 2 + 1/n, -((2*c*x**n)/(b + sqrt(b**2 - 4*a*c))), -((2*c*x**n)/(\n  b - sqrt(b**2 - 4*a*c))))\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "the last and 2nd last term of AppellF1 is interchanged. Output is correct as per the rule . The original test-suite is made by testing on Mathematica. We will not be able to include these in our test-suite.  Am I missing anything ?",
  "id": "5b128b0e93dc78791ca61e6a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-02T12:18:22.889Z",
  "text": "the last and 2nd last term of AppellF1 is interchanged. Output is correct as per the rule . The original test-suite is made by testing on Mathematica. We will not be able to include these in our test-suite.  Am I missing anything ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Is the output correct? Do we ge the <code>(e x)^m (a+b x^n)^p (c+d x^n)^q</code> after differentiation?",
  "id": "5b12a9c54eaffb692d76f1fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-02T14:29:25.378Z",
  "text": "Is the output correct? Do we ge the `(e x)^m (a+b x^n)^p (c+d x^n)^q` after differentiation?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "If the answer is correct it doesn&#39;t matter. ",
  "id": "5b12a9d54eaffb692d76f228",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-02T14:29:41.021Z",
  "text": "If the answer is correct it doesn't matter. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "No , we are not getting <code>(e x)^m (a+b x^n)^p (c+d x^n)^q</code> after differentiation .",
  "id": "5b12acf9016ae21a4c04396e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-02T14:43:05.846Z",
  "text": "No , we are not getting `(e x)^m (a+b x^n)^p (c+d x^n)^q` after differentiation .",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "answer is not correct. ",
  "id": "5b12ad0b4eaffb692d76fb62",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-02T14:43:23.313Z",
  "text": "answer is not correct. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I mean Rule is not so well defined. It gives correct answer only in mathematica. ",
  "id": "5b12ad3b52e35117cd004005",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-02T14:44:11.610Z",
  "text": "I mean Rule is not so well defined. It gives correct answer only in mathematica. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "We should add additional constraints to prevent this",
  "id": "5b13c1f593dc78791ca91302",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-03T10:24:53.854Z",
  "text": "We should add additional constraints to prevent this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "for now I have skipped it. My opinion after working for this much time is that rubi has a high dependence on utility function. If we can get them to work as expected. we can almost pass more than 90% of the test. I have updated the pr with changes in utility functions.",
  "id": "5b13c364016ae21a4c06e2c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-03T10:31:00.162Z",
  "text": "for now I have skipped it. My opinion after working for this much time is that rubi has a high dependence on utility function. If we can get them to work as expected. we can almost pass more than 90% of the test. I have updated the pr with changes in utility functions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Also I have made changes in the constraints a little bit to avoid few exceptions. I will update them in the pr soon. ",
  "id": "5b13c39fe26c847ac8b29cc5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-03T10:31:59.028Z",
  "text": "Also I have made changes in the constraints a little bit to avoid few exceptions. I will update them in the pr soon. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span>  will it be right to manually change the constraints? As later we will update the version. ",
  "id": "5b13c3ec4eaffb692d799c11",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-03T10:33:16.935Z",
  "text": "@parsoyaarihant  will it be right to manually change the constraints? As later we will update the version. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Yes, if we can fix all utility functions, the tests will start passing. I dont think we can match actual RUBI test results because of matching differences between Mathematica and Matchpy, but we can reach pretty close.",
  "id": "5b13c647ba1a351a68e70151",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-03T10:43:19.867Z",
  "text": "Yes, if we can fix all utility functions, the tests will start passing. I dont think we can match actual RUBI test results because of matching differences between Mathematica and Matchpy, but we can reach pretty close.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<blockquote>\n<p>will it be right to manually change the constraints? As later we will update the version.</p></blockquote>\n<p>This is something that needs to be discussed. Last year there were plans to add our own rules into Rubi. However I think we should not focus on editing RUBI rules for now. </p>",
  "id": "5b13c69eedd06f7d1506704d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-03T10:44:46.496Z",
  "text": "> will it be right to manually change the constraints? As later we will update the version.\n\nThis is something that needs to be discussed. Last year there were plans to add our own rules into Rubi. However I think we should not focus on editing RUBI rules for now. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-03T14:45:04.253Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "In this week 2 issues remain unsolved: <ol>\n<li>Sorting of <code>[b*e, -c*d]</code>  </li>\n<li>NotImplementedError in Apart (<span data-link-type=\"issue\" data-issue=\"14763\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#14763</span>)<br>Less number of tests are affected due to these. </li>\n</ol>\n",
  "id": "5b13fe9d016ae21a4c078327",
  "issues": [
   {
    "number": "14763",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-03T14:43:41.983Z",
  "text": "In this week 2 issues remain unsolved: \n1. Sorting of `[b*e, -c*d]`  \n2. NotImplementedError in Apart (https://github.com/sympy/sympy/issues/14763)\nLess number of tests are affected due to these. ",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay. Can you keep a record of these issues somewhere. Maybe on github issues or in your blog. ",
  "id": "5b140b6d160c567d16fd2e84",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-03T15:38:21.718Z",
  "text": "Okay. Can you keep a record of these issues somewhere. Maybe on github issues or in your blog. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "okay",
  "id": "5b140e42160c567d16fd3686",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-03T15:50:26.707Z",
  "text": "okay",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "If a rule gives a wrong answer when matched incorrectly then it is a bad rule and should be removed. I would report such things to the RUBI authors, after verifying that the alternate answer really is wrong ",
  "id": "5b142c0e7f403e5bbed3c153",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-03T17:57:34.223Z",
  "text": "If a rule gives a wrong answer when matched incorrectly then it is a bad rule and should be removed. I would report such things to the RUBI authors, after verifying that the alternate answer really is wrong ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Actually they have removed some of the incorrect rules in  their newer version. But we are not in a position to update our version.",
  "id": "5b142c9e16f649612402d67a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-03T17:59:58.042Z",
  "text": "Actually they have removed some of the incorrect rules in  their newer version. But we are not in a position to update our version.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I had a talk with Albert, he told me new rules are more robust but the utility function has been changed.So it will take time for us to update our version.",
  "id": "5b142ce6edd06f7d15079a8c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-03T18:01:10.978Z",
  "text": "I had a talk with Albert, he told me new rules are more robust but the utility function has been changed.So it will take time for us to update our version.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-04T17:18:18.334Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>I am thinking to put constraints like this : </p><pre><code><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cons_f1</span><span class=\"params\">(a)</span>:</span>\n    <span class=\"keyword\">try</span>:\n        <span class=\"keyword\">return</span> ZeroQ(a - b)\n    <span class=\"keyword\">except</span> TypeError:\n        <span class=\"keyword\">return</span> <span class=\"keyword\">False</span>\n\ncons1 = CustomConstraint(cons_f1)</code></pre><p>Some of the exceptions can&#39;t be removed. Like <code>ZeroQ(False - n)</code> gives <code>False</code> in mathematica but causes TypeError here. And in rubi some functions don&#39;t have a fixed return type. They return <code>boolean</code> in some case and in some case same function returns <code>list</code> or numerical value. So exceptions are expected. </p>",
  "id": "5b1573ce93dc78791cae7df6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-04T17:15:58.372Z",
  "text": "I am thinking to put constraints like this : \n```\ndef cons_f1(a):\n    try:\n        return ZeroQ(a - b)\n    except TypeError:\n        return False\n\ncons1 = CustomConstraint(cons_f1)\n```\nSome of the exceptions can't be removed. Like `ZeroQ(False - n)` gives `False` in mathematica but causes TypeError here. And in rubi some functions don't have a fixed return type. They return `boolean` in some case and in some case same function returns `list` or numerical value. So exceptions are expected. ",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<code>try</code> and <code>except</code> (TypeError)  will prevent break in the execution.",
  "id": "5b1574294eaffb692d7f0d8a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-04T17:17:29.099Z",
  "text": "`try` and `except` (TypeError)  will prevent break in the execution.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "If you use <code>try</code>, you will not be able to detect errors in utility functions. ",
  "id": "5b164b1c52e35117cd0b4e9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T08:34:36.661Z",
  "text": "If you use `try`, you will not be able to detect errors in utility functions. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I am checking the rules which are matched and compare it with mathematica. In most cases order of rules are same. I have don som pre-processing and it shows quite good result ",
  "id": "5b164bcd16f649612409faf4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T08:37:33.715Z",
  "text": "I am checking the rules which are matched and compare it with mathematica. In most cases order of rules are same. I have don som pre-processing and it shows quite good result ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": " I think for us, a constraint returns true or false that matters",
  "id": "5b164bf252e35117cd0b5157",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T08:38:10.993Z",
  "text": " I think for us, a constraint returns true or false that matters",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I dont understand how this situation can arise <code>ZeroQ(False - n)</code> ",
  "id": "5b164c26f9f2e56cf2406e2d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T08:39:02.196Z",
  "text": "I dont understand how this situation can arise `ZeroQ(False - n)` ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "In rubi constraints, it will be <code>ZeroQ(expr1 - expr2)</code> where both <code>expr1</code> and <code>expr2</code> are expressions. ",
  "id": "5b164c5599fa7f4c06473056",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T08:39:49.877Z",
  "text": "In rubi constraints, it will be `ZeroQ(expr1 - expr2)` where both `expr1` and `expr2` are expressions. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "utility function(used in the constraints) need to be corrected only in those cases , where a constraint returns a wrong boolean vlaue. ",
  "id": "5b164c6922a05f5e7100c15b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T08:40:09.932Z",
  "text": "utility function(used in the constraints) need to be corrected only in those cases , where a constraint returns a wrong boolean vlaue. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>There is a constraint which returns </p><pre><code>return ZeroQ<span class=\"list\">(<span class=\"keyword\">BinomialDegree</span><span class=\"list\">(<span class=\"keyword\">u</span>, x)</span> - BinomialDegree<span class=\"list\">(<span class=\"keyword\">v</span>, x)</span>)</span></code></pre><p>Now <code>BinomialDegree</code> returns False or a numerical value</p>",
  "id": "5b164cdc16f649612409ff32",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T08:42:04.767Z",
  "text": "There is a constraint which returns \n```\nreturn ZeroQ(BinomialDegree(u, x) - BinomialDegree(v, x))\n```\nNow `BinomialDegree` returns False or a numerical value",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "This is the description<br><code>(* If u[x] is equivalent to an expression of the form a+b*x^n where n!=0 and b!=0,\n    BinomialParts[u,x] returns the list {a,b,n}; else it returns False. *)</code>",
  "id": "5b164d3e22a05f5e7100c377",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T08:43:42.669Z",
  "text": "This is the description \n`(* If u[x] is equivalent to an expression of the form a+b*x^n where n!=0 and b!=0,\n\tBinomialParts[u,x] returns the list {a,b,n}; else it returns False. *)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "BinomialDegree calls BinomialParts and so output doesn&#39;t have a fixed return type",
  "id": "5b164d68f9f2e56cf240723c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T08:44:24.827Z",
  "text": "BinomialDegree calls BinomialParts and so output doesn't have a fixed return type",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay",
  "id": "5b164d7916f64961240a00fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T08:44:41.689Z",
  "text": "Okay",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-05T08:45:46.846Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I thought , For us only thing which matters is that whether  a constraint returns <code>True</code> or <code>False</code>. So I wanted to use try.",
  "id": "5b164d9d52e35117cd0b585e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T08:45:17.799Z",
  "text": "I thought , For us only thing which matters is that whether  a constraint returns `True` or `False`. So I wanted to use try.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-06-05T08:46:35.534Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "But I am worried because using <code>try</code> will hide all the bugs in utility functions. Since utility functions are not completely built.",
  "id": "5b164ddb4eaffb692d81bd8e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T08:46:19.344Z",
  "text": "But I am worried because using `try` will hide all the bugs in utility functions. Since utility functions are not completely built.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Is it possible to somehow seperate functions like <code>BinomialDegree</code>?",
  "id": "5b164ebc4eaffb692d81c160",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T08:50:04.032Z",
  "text": "Is it possible to somehow seperate functions like `BinomialDegree`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "like apply <code>try</code> only when function  like <code>BinomialDegree</code>exist in constraint ",
  "id": "5b164ecc4eaffb692d81c185",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T08:50:20.784Z",
  "text": "like apply `try` only when function  like `BinomialDegree`exist in constraint ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I am searching for such functions, I can make a list of them if you want. I dont think there are many.",
  "id": "5b164efc22a05f5e7100cbde",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T08:51:08.094Z",
  "text": "I am searching for such functions, I can make a list of them if you want. I dont think there are many.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "but that will not affect the performance or the ouput. Let there be a constraint <code>Cons_1</code> . If <code>Cons_1</code> returns False  in sympy and the corresponding rule is not matched but <code>Cons_1</code> returns <code>True</code>in Mathematica. We will still know that <code>Cons_1</code> is wrong. ",
  "id": "5b164f2b82a4d36ea6cf54f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T08:51:55.127Z",
  "text": "but that will not affect the performance or the ouput. Let there be a constraint `Cons_1` . If `Cons_1` returns False  in sympy and the corresponding rule is not matched but `Cons_1` returns `True`in Mathematica. We will still know that `Cons_1` is wrong. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Finding such functions also looks fine to me.",
  "id": "5b164f414eaffb692d81c342",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T08:52:17.414Z",
  "text": "Finding such functions also looks fine to me.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay, I will make a list of them and post here. What you are saying is correct, but ideally, what we need is that each utility function gives correct output independent of where it is applied.",
  "id": "5b164fc135e25f39974d8cdd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T08:54:25.269Z",
  "text": "Okay, I will make a list of them and post here. What you are saying is correct, but ideally, what we need is that each utility function gives correct output independent of where it is applied.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<code>BinomialParts</code>, <code>TrinomialParts</code>, <code>GeneralizedBinomialParts</code>, <code>GeneralizedTrinomialParts</code>,",
  "id": "5b164fc482a4d36ea6cf582e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T08:54:28.426Z",
  "text": "`BinomialParts`, `TrinomialParts`, `GeneralizedBinomialParts`, `GeneralizedTrinomialParts`,",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<code>PseudoBinomialParts</code>",
  "id": "5b164fd3e26c847ac8bac820",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T08:54:43.020Z",
  "text": "`PseudoBinomialParts`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<code>PerfectPowerTest</code>",
  "id": "5b164fe016f64961240a0c27",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T08:54:56.279Z",
  "text": "`PerfectPowerTest `\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "SquareFreeFactorTest",
  "id": "5b164fea99fa7f4c06474036",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T08:55:06.710Z",
  "text": "SquareFreeFactorTest",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "SubstForFractionalPowerOfQuotientOfLinears<br>FractionalPowerOfQuotientOfLinears<br>InverseFunctionOfQuotientOfLinears<br>FractionalPowerOfSquareQ<br>FunctionOfLinear<br>FunctionOfInverseLinear<br>FunctionOfTrig<br>FindTrigFactor<br>FunctionOfLog<br>PowerVariableExpn<br>FunctionOfSquareRootOfQuadratic<br>SubstForFractionalPowerOfLinear<br>FractionalPowerOfLinear<br>InverseFunctionOfLinear<br>Divides<br>DerivativeDivides<br>TrigSquare<br>SplitProduct<br>SubstForFractionalPowerOfQuotientOfLinears<br>InverseFunctionOfQuotientOfLinears<br>FunctionOfHyperbolic<br>SplitSum",
  "id": "5b1651e499fa7f4c06474820",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T09:03:32.745Z",
  "text": "SubstForFractionalPowerOfQuotientOfLinears\nFractionalPowerOfQuotientOfLinears\nInverseFunctionOfQuotientOfLinears\nFractionalPowerOfSquareQ\nFunctionOfLinear\nFunctionOfInverseLinear\nFunctionOfTrig\nFindTrigFactor\nFunctionOfLog\nPowerVariableExpn\nFunctionOfSquareRootOfQuadratic\nSubstForFractionalPowerOfLinear\nFractionalPowerOfLinear\nInverseFunctionOfLinear\nDivides\nDerivativeDivides\nTrigSquare\nSplitProduct\nSubstForFractionalPowerOfQuotientOfLinears\nInverseFunctionOfQuotientOfLinears\nFunctionOfHyperbolic\nSplitSum\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "These are all I can find using function description, you can add these to the parser and use <code>try</code> if any one of them exist in the constraint. ",
  "id": "5b165227160c567d16048407",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T09:04:39.980Z",
  "text": "These are all I can find using function description, you can add these to the parser and use `try` if any one of them exist in the constraint. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "okay thanks",
  "id": "5b16544c22a05f5e7100e1e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-05T09:13:48.676Z",
  "text": "okay thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I have tested around 80 - 85 % of trinomial products from the original test-suite . Out of these almost 95 % tests are passing :smile:  . Some are not passing due to the unsolved issues  mentioned by me . I will add all the tests in a proper PR and will update soon within 1 or 2 days.",
  "id": "5b190e8452e35117cd1525da",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-07T10:52:52.707Z",
  "text": "I have tested around 80 - 85 % of trinomial products from the original test-suite . Out of these almost 95 % tests are passing :smile:  . Some are not passing due to the unsolved issues  mentioned by me . I will add all the tests in a proper PR and will update soon within 1 or 2 days.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Great ! ",
  "id": "5b190ecb52e35117cd1527b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-07T10:54:03.243Z",
  "text": "Great ! ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<a href=\"https://files.gitter.im/sympy/Rubi-GSoC17/7AKe/Rule982.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/sympy/Rubi-GSoC17/7AKe/thumb/Rule982.png\" alt=\"Rule982.png\" rel=\"nofollow\"></a>",
  "id": "5b1ab4b86023754a317a6710",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-08T16:54:16.826Z",
  "text": "[![Rule982.png](https://files.gitter.im/sympy/Rubi-GSoC17/7AKe/thumb/Rule982.png)](https://files.gitter.im/sympy/Rubi-GSoC17/7AKe/Rule982.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/sympy/Rubi-GSoC17/7AKe/thumb/Rule982.png"
   },
   {
    "url": "https://files.gitter.im/sympy/Rubi-GSoC17/7AKe/Rule982.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<a href=\"https://files.gitter.im/sympy/Rubi-GSoC17/7AKe/Rule906.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/sympy/Rubi-GSoC17/7AKe/thumb/Rule906.png\" alt=\"Rule906.png\" rel=\"nofollow\"></a>",
  "id": "5b1ab4b86023754a317a6711",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-08T16:54:16.835Z",
  "text": "[![Rule906.png](https://files.gitter.im/sympy/Rubi-GSoC17/7AKe/thumb/Rule906.png)](https://files.gitter.im/sympy/Rubi-GSoC17/7AKe/Rule906.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/sympy/Rubi-GSoC17/7AKe/thumb/Rule906.png"
   },
   {
    "url": "https://files.gitter.im/sympy/Rubi-GSoC17/7AKe/Rule906.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<a href=\"https://files.gitter.im/sympy/Rubi-GSoC17/7AKe/rule148.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/sympy/Rubi-GSoC17/7AKe/thumb/rule148.png\" alt=\"rule148.png\" rel=\"nofollow\"></a>",
  "id": "5b1ab4b86023754a317a6712",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-08T16:54:16.849Z",
  "text": "[![rule148.png](https://files.gitter.im/sympy/Rubi-GSoC17/7AKe/thumb/rule148.png)](https://files.gitter.im/sympy/Rubi-GSoC17/7AKe/rule148.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/sympy/Rubi-GSoC17/7AKe/thumb/rule148.png"
   },
   {
    "url": "https://files.gitter.im/sympy/Rubi-GSoC17/7AKe/rule148.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Here are 3 rules<br>For rule <code>983</code> and <code>906</code> . There is no distinction in constraints between <code>b</code> and <code>d</code> . But the result is affected as the last 2 terms of <code>AppellF1</code> is dependent on <code>b</code> and <code>d</code> .<br>Similarly for rule <code>148</code> . there is no distinction between  <code>d</code>and <code>f</code> . ",
  "id": "5b1ab57cffd8896fe913a5c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-08T16:57:32.584Z",
  "text": "Here are 3 rules \nFor rule `983` and `906` . There is no distinction in constraints between `b` and `d` . But the result is affected as the last 2 terms of `AppellF1` is dependent on `b` and `d` .\nSimilarly for rule `148` . there is no distinction between  `d`and `f` . ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-08T16:58:34.022Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Please look into it , if I am missing anything. ",
  "id": "5b1ab5a4ffd8896fe913a684",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-08T16:58:12.404Z",
  "text": "Please look into it , if I am missing anything. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-06-08T17:48:59.987Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Actually due to this, test results are not consistent. If <code>b</code> and <code>d</code> are matched as expected , it passes. But it fails on running later(that time matching of <code>b</code> and <code>d</code> are reversed). ",
  "id": "5b1ac168106f3c24bde670d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-08T17:48:24.228Z",
  "text": "Actually due to this, test results are not consistent. If `b` and `d` are matched as expected , it passes. But it fails on running later(that time matching of `b` and `d` are reversed). ",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Okay, this is a problem of difference between MatchPy and Mathematica. Am I right?",
  "id": "5b1af45914d4bc146e769e59",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-08T21:25:45.368Z",
  "text": "Okay, this is a problem of difference between MatchPy and Mathematica. Am I right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Yes it can be said that. but matchpy too is not wrong. Rules should have been defined properly.",
  "id": "5b1b40849ca98417e2567a26",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T02:50:44.293Z",
  "text": "Yes it can be said that. but matchpy too is not wrong. Rules should have been defined properly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Or is this related to some property of <code>AppellF1</code> ? I am not sure",
  "id": "5b1b468e144c8c6fea814291",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T03:16:30.544Z",
  "text": "Or is this related to some property of `AppellF1` ? I am not sure",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>This can be related to <code>AppellF1</code> property too.  I tried some numerical value in sympy.<br>I think keeping  second and third argument same, if the last 2 arguments are reversed results remain same. </p><pre><code>In [<span class=\"number\">13</span>]: <span class=\"function\"><span class=\"title\">appellf1</span><span class=\"params\">(<span class=\"number\">1</span>, <span class=\"number\">0.5</span>, <span class=\"number\">0.5</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>)</span></span>\nOut[<span class=\"number\">13</span>]: <span class=\"function\"><span class=\"title\">mpc</span><span class=\"params\">(real=<span class=\"string\">'-0.27443700322977099'</span>, imag=<span class=\"string\">'-0.64127491508093204'</span>)</span></span>\n\nIn [<span class=\"number\">14</span>]: <span class=\"function\"><span class=\"title\">appellf1</span><span class=\"params\">(<span class=\"number\">1</span>, <span class=\"number\">0.5</span>, <span class=\"number\">0.5</span>, <span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">4</span>)</span></span>\nOut[<span class=\"number\">14</span>]: <span class=\"function\"><span class=\"title\">mpc</span><span class=\"params\">(real=<span class=\"string\">'-0.27443700322977099'</span>, imag=<span class=\"string\">'-0.64127491508093204'</span>)</span></span>\n\nIn [<span class=\"number\">15</span>]: <span class=\"function\"><span class=\"title\">appellf1</span><span class=\"params\">(<span class=\"number\">1</span>, <span class=\"number\">0.5</span>, <span class=\"number\">0.5</span>, <span class=\"number\">2</span>, <span class=\"number\">8</span>, <span class=\"number\">5</span>)</span></span>\nOut[<span class=\"number\">15</span>]: <span class=\"function\"><span class=\"title\">mpc</span><span class=\"params\">(real=<span class=\"string\">'-0.26133525846808531'</span>, imag=<span class=\"string\">'-0.49672941328980508'</span>)</span></span>\n\nIn [<span class=\"number\">16</span>]: <span class=\"function\"><span class=\"title\">appellf1</span><span class=\"params\">(<span class=\"number\">1</span>, <span class=\"number\">0.5</span>, <span class=\"number\">0.5</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>)</span></span>\nOut[<span class=\"number\">16</span>]: <span class=\"function\"><span class=\"title\">mpc</span><span class=\"params\">(real=<span class=\"string\">'-0.26133525846808531'</span>, imag=<span class=\"string\">'-0.49672941328980508'</span>)</span></span></code></pre><p>Currently in sympy <code>appellf1</code> is only implemented for numerical arguments.</p>",
  "id": "5b1b500c3516592752f5c904",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T03:57:00.791Z",
  "text": "This can be related to `AppellF1` property too.  I tried some numerical value in sympy. \nI think keeping  second and third argument same, if the last 2 arguments are reversed results remain same. \n```\nIn [13]: appellf1(1, 0.5, 0.5, 2, 4, 6)\nOut[13]: mpc(real='-0.27443700322977099', imag='-0.64127491508093204')\n\nIn [14]: appellf1(1, 0.5, 0.5, 2, 6, 4)\nOut[14]: mpc(real='-0.27443700322977099', imag='-0.64127491508093204')\n\nIn [15]: appellf1(1, 0.5, 0.5, 2, 8, 5)\nOut[15]: mpc(real='-0.26133525846808531', imag='-0.49672941328980508')\n\nIn [16]: appellf1(1, 0.5, 0.5, 2, 5, 8)\nOut[16]: mpc(real='-0.26133525846808531', imag='-0.49672941328980508')\n\n```\nCurrently in sympy `appellf1` is only implemented for numerical arguments.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-09T04:13:13.262Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>I think we need to implement <code>AppellF1</code> . Currently its called from <code>mpmath</code> and on passing <code>x</code> or <code>y</code> as arguments, it throws TypeError.<br>So to prevent I had written something like this : </p><pre><code><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">AppellF1</span><span class=\"params\">(a, b1, b2, c, x, y)</span>:</span>\n<span class=\"keyword\">from</span> mpmath <span class=\"keyword\">import</span> appellf1\n    <span class=\"keyword\">try</span>:\n        <span class=\"keyword\">return</span> appellf1(a, b1, b2, c, x, y)\n    <span class=\"keyword\">except</span> TypeError:\n        <span class=\"keyword\">return</span> Function(<span class=\"string\">'AppellF1'</span>)(a, b1, b2, c, x, y)</code></pre><p>But this will not take care of the properties of <code>AppellF1</code>. </p>",
  "id": "5b1b53ba144c8c6fea8165f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T04:12:42.263Z",
  "text": "I think we need to implement `AppellF1` . Currently its called from `mpmath` and on passing `x` or `y` as arguments, it throws TypeError. \nSo to prevent I had written something like this : \n```\ndef AppellF1(a, b1, b2, c, x, y):\nfrom mpmath import appellf1\n    try:\n        return appellf1(a, b1, b2, c, x, y)\n    except TypeError:\n        return Function('AppellF1')(a, b1, b2, c, x, y)\n```\nBut this will not take care of the properties of `AppellF1`. \n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Can we write <code>AppellF1</code> in terms of <code>hyper</code> of sympy ?",
  "id": "5b1b5ab1106f3c24bde82475",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T04:42:25.455Z",
  "text": "Can we write `AppellF1` in terms of `hyper` of sympy ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "You should ask this question on main SymPy chat room. I am not familiar with <code>AppellF1</code>.",
  "id": "5b1b8857ddd61d08e54081ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T07:57:11.525Z",
  "text": "You should ask this question on main SymPy chat room. I am not familiar with `AppellF1 `.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "There was a discussion about that function years ago. Don&#39;t know what has happened so far",
  "id": "5b1ba7e8a09ae108e60fe2c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T10:11:52.256Z",
  "text": "There was a discussion about that function years ago. Don't know what has happened so far",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "My tests for <code>Trinomial products</code> is completed. (except cases containing <code>AppellF1</code>) . What should I move on to next ?",
  "id": "5b1bad8fdd54362753fb5a74",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T10:35:59.283Z",
  "text": "My tests for `Trinomial products` is completed. (except cases containing `AppellF1`) . What should I move on to next ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "We usually try to use the same name as in mpmath",
  "id": "5b1bae1b106f3c24bde8ef85",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T10:38:19.274Z",
  "text": "We usually try to use the same name as in mpmath",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "So lower case appellf1",
  "id": "5b1bae2c3516592752f6aee5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T10:38:36.823Z",
  "text": "So lower case appellf1",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Technically we could add the implementation",
  "id": "5b1bae449ca98417e257824e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T10:39:00.086Z",
  "text": "Technically we could add the implementation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<a href=\"http://functions.wolfram.com/HypergeometricFunctions/AppellF1/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://functions.wolfram.com/HypergeometricFunctions/AppellF1/</a>",
  "id": "5b1baed0659aad4a3261f2ad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T10:41:20.662Z",
  "text": "http://functions.wolfram.com/HypergeometricFunctions/AppellF1/",
  "unread": false,
  "urls": [
   {
    "url": "http://functions.wolfram.com/HypergeometricFunctions/AppellF1/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "All details needed for the implementation",
  "id": "5b1baede3516592752f6b06b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T10:41:34.683Z",
  "text": "All details needed for the implementation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would recommend a separate PR",
  "id": "5b1baee74b2d9417e1d6e61d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T10:41:43.618Z",
  "text": "I would recommend a separate PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I have updated the PR <span data-link-type=\"issue\" data-issue=\"14756\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#14756</span> . This contains test for trinomials. There are almost 2700 tests. I have added <code>@SKIP</code> to not run on travis. Currently 2 major issues are <code>1. apart</code> and <code>2. appellf1</code> . I have commented out those cases. Almost half of the cases of <code>appellf1</code> passes, but I have commented out all because they are not consistent. I would request if some one can fetch the PR and run the tests on any online server. I have tested all of them locally in parts. ",
  "id": "5b1c2065659aad4a32632b08",
  "issues": [
   {
    "number": "14756",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T18:45:57.622Z",
  "text": "I have updated the PR https://github.com/sympy/sympy/pull/14756 . This contains test for trinomials. There are almost 2700 tests. I have added `@SKIP` to not run on travis. Currently 2 major issues are `1. apart` and `2. appellf1` . I have commented out those cases. Almost half of the cases of `appellf1` passes, but I have commented out all because they are not consistent. I would request if some one can fetch the PR and run the tests on any online server. I have tested all of them locally in parts. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "what&#39;s the command to run all the tests?",
  "id": "5b1c2530144c8c6fea83782f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:06:24.545Z",
  "text": "what's the command to run all the tests?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "normal <code>./bin/test test_trinomial_passed</code>",
  "id": "5b1c2569659aad4a32633825",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:07:21.087Z",
  "text": "normal `./bin/test test_trinomial_passed`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "what about <code>@SKIP</code>?",
  "id": "5b1c258ae36e0e7d3f618d4d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:07:54.367Z",
  "text": "what about `@SKIP`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I mean... I have a lot of computational power available... if you need a full test run, don&#39;t hesitate to ask",
  "id": "5b1c25abe36e0e7d3f618da2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:08:27.627Z",
  "text": "I mean... I have a lot of computational power available... if you need a full test run, don't hesitate to ask",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "After removing <code>@SKIP</code> test need to be run . I just added SKIP to prevent it running  on travis",
  "id": "5b1c25cbd7b4f6288cbb3f95",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:08:59.214Z",
  "text": "After removing `@SKIP` test need to be run . I just added SKIP to prevent it running  on travis",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "mmm... I see",
  "id": "5b1c25e23516592752f7f25e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:09:22.694Z",
  "text": "mmm... I see",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "what about a new decorator?",
  "id": "5b1c25ea144c8c6fea837bc8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:09:30.584Z",
  "text": "what about a new decorator?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "like <code>@SKIPRUBI</code>?",
  "id": "5b1c25f36077c67d3edf1bfb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:09:39.755Z",
  "text": "like `@SKIPRUBI`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "so we can easily switch the rubi tests on and off",
  "id": "5b1c2601a09ae108e611318e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:09:53.573Z",
  "text": "so we can easily switch the rubi tests on and off",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "We also need to select tests that we will be keeping in sympy. Are we planning to keep all tests in sympy test-suite ?",
  "id": "5b1c26859ca98417e258d047",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:12:05.228Z",
  "text": "We also need to select tests that we will be keeping in sympy. Are we planning to keep all tests in sympy test-suite ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "yes, of course",
  "id": "5b1c26a9ddd61d08e54232de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:12:41.772Z",
  "text": "yes, of course",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "they will remain in SymPy in a disabled state",
  "id": "5b1c26b3dd54362753fcaa69",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:12:51.812Z",
  "text": "they will remain in SymPy in a disabled state",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "consider that only the code we merge into SymPy will be used in the future",
  "id": "5b1c26c8144c8c6fea837ed6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:13:12.815Z",
  "text": "consider that only the code we merge into SymPy will be used in the future",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "everything you don&#39;t include will be forgotten",
  "id": "5b1c26d46077c67d3edf1fc6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:13:24.118Z",
  "text": "everything you don't include will be forgotten",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "also make sure to include all regex and tools you&#39;ve been using for the translation of the tests",
  "id": "5b1c276914d4bc146e79b766",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:15:53.310Z",
  "text": "also make sure to include all regex and tools you've been using for the translation of the tests",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "For translation of tests. I have not used much <code>regex</code> tool . I got them in maple format and then I wrote a small python code to format the tests. I will include that. ",
  "id": "5b1c27a99ca98417e258d534",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:16:57.169Z",
  "text": "For translation of tests. I have not used much `regex` tool . I got them in maple format and then I wrote a small python code to format the tests. I will include that. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "oh I see",
  "id": "5b1c27cdddd61d08e5423544",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:17:33.681Z",
  "text": "oh I see",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "did you ask Albert Rich if he has any tool to generate the tests?",
  "id": "5b1c27e414d4bc146e79b879",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:17:56.301Z",
  "text": "did you ask Albert Rich if he has any tool to generate the tests?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "No . I didn&#39;t . But he has some kind of tool . He generates other syntax from mathematica. Next time if we have a talk , I will ask him.",
  "id": "5b1c282ae36e0e7d3f6195a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:19:06.128Z",
  "text": "No . I didn't . But he has some kind of tool . He generates other syntax from mathematica. Next time if we have a talk , I will ask him.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "yeah, Mathematica is able to parse its own code and give you the AST",
  "id": "5b1c2857dd54362753fcaed2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:19:51.287Z",
  "text": "yeah, Mathematica is able to parse its own code and give you the AST",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "inside Mathematica it&#39;s pretty easy to write a code generator",
  "id": "5b1c286add54362753fcaef0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:20:10.288Z",
  "text": "inside Mathematica it's pretty easy to write a code generator",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "okay . I will look into it.",
  "id": "5b1c28b36023754a317e6996",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:21:23.651Z",
  "text": "okay . I will look into it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Also there are a lot work left in rubi . I need to discuss , how should I proceed. ",
  "id": "5b1c290e6023754a317e6a30",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:22:54.075Z",
  "text": "Also there are a lot work left in rubi . I need to discuss , how should I proceed. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Currently I have loaded 1880 rules and the loading time is 57-58 seconds. It will increase , If I add  more rules later.",
  "id": "5b1c2943106f3c24bdea3f6f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:23:47.989Z",
  "text": "Currently I have loaded 1880 rules and the loading time is 57-58 seconds. It will increase , If I add  more rules later.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Are there further optimisation that can be done for the loading time ?",
  "id": "5b1c2974ffd8896fe9179243",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:24:36.304Z",
  "text": "Are there further optimisation that can be done for the loading time ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "well, code generation",
  "id": "5b1c2a2a14d4bc146e79be83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:27:38.143Z",
  "text": "well, code generation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "matchpy supports code generation, but it&#39;s quite untested",
  "id": "5b1c2a396023754a317e6fa5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-09T19:27:53.582Z",
  "text": "matchpy supports code generation, but it's quite untested",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>currently in sympy can I match a function to function like : </p><pre><code>F = <span class=\"function\"><span class=\"title\">Function</span><span class=\"params\">(<span class=\"string\">'F'</span>)</span></span>\nexpr = <span class=\"function\"><span class=\"title\">F</span><span class=\"params\">(a_+b_)</span></span>\nexpr1 = <span class=\"function\"><span class=\"title\">sin</span><span class=\"params\">(a + b)</span></span></code></pre><p>In matchpy format can I match <code>F</code> to <code>sin</code> ?</p>",
  "id": "5b20c11ccf3b245b2cfa30a0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-13T07:00:44.871Z",
  "text": "currently in sympy can I match a function to function like : \n```\nF = Function('F')\nexpr = F(a_+b_)\nexpr1 = sin(a + b)\n```\nIn matchpy format can I match `F ` to `sin ` ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "See: <a href=\"http://docs.sympy.org/latest/modules/core.html?highlight=wildfunction#sympy.core.function.WildFunction\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.sympy.org/latest/modules/core.html?highlight=wildfunction#sympy.core.function.WildFunction</a>",
  "id": "5b20d916c277fb705dca1ab2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-13T08:43:02.077Z",
  "text": "See: http://docs.sympy.org/latest/modules/core.html?highlight=wildfunction#sympy.core.function.WildFunction",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.sympy.org/latest/modules/core.html?highlight=wildfunction#sympy.core.function.WildFunction"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Will this work with matchpy ?",
  "id": "5b20d9ad82b1b355c953ba61",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-13T08:45:33.717Z",
  "text": "Will this work with matchpy ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I have completed the miscellaneous algebra testing. ",
  "id": "5b28a5c514805602858d9426",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-19T06:42:13.024Z",
  "text": "I have completed the miscellaneous algebra testing. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Do last year test files (<code>test_1_2</code> , <code>test_1_3</code> and <code>test_1_4</code> ) contain all  test cases of original test suite? If not should I make a complete test-suite of those or should I proceed to exponential rules?",
  "id": "5b28a64c31882e7c8b010360",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-19T06:44:28.345Z",
  "text": "Do last year test files (`test_1_2` , `test_1_3` and ` test_1_4` ) contain all  test cases of original test suite? If not should I make a complete test-suite of those or should I proceed to exponential rules?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "They do not contain all test cases. You can add all the test cases using <code>@SKIPRUBI</code> decorator.",
  "id": "5b28bf396ceffe4eba1892b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-19T08:30:49.387Z",
  "text": "They do not contain all test cases. You can add all the test cases using `@SKIPRUBI` decorator.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "You have the parser to convert tests in Python right?",
  "id": "5b28c0595862c35f47b09e26",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-19T08:35:37.054Z",
  "text": "You have the parser to convert tests in Python right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "i use regex101 online and then a small python code to convert the test cases. Also sometimes small manual changes",
  "id": "5b28c3a0960fcd4eb90c05ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-19T08:49:36.275Z",
  "text": "i use regex101 online and then a small python code to convert the test cases. Also sometimes small manual changes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "If I add those all test, should I run them and check?",
  "id": "5b28c3e1ad21887018c6da27",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-19T08:50:41.580Z",
  "text": "If I add those all test, should I run them and check?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Add those tests, and continue working on exponential rules. ",
  "id": "5b28c4f2aeb8fa0c07282e4a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-19T08:55:14.497Z",
  "text": "Add those tests, and continue working on exponential rules. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "We can ask <span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> to run the full tests when he can.",
  "id": "5b28c559479ca26689680072",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-19T08:56:57.757Z",
  "text": "We can ask @Upabjojr to run the full tests when he can.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "okay . I will do it.",
  "id": "5b28c582d2abe466887074db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-19T08:57:38.615Z",
  "text": "okay . I will do it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Also, write a blog later detailing the process of converting the tests into Python. This will help anyone else who will work on RUBI.",
  "id": "5b28c5d46ceffe4eba18a912",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-19T08:59:00.315Z",
  "text": "Also, write a blog later detailing the process of converting the tests into Python. This will help anyone else who will work on RUBI.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "okay",
  "id": "5b28c67088ccb062064f2991",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-19T09:01:36.583Z",
  "text": "okay",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "yes, just create the <code>@SKIPRUBI</code> decorator, and an easy way to switch it on and off",
  "id": "5b29fe9b88ccb0620651eee5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-20T07:13:31.547Z",
  "text": "yes, just create the `@SKIPRUBI` decorator, and an easy way to switch it on and off",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "possibly ask for help in the main chat",
  "id": "5b29fea4960fcd4eb90eec88",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-20T07:13:40.681Z",
  "text": "possibly ask for help in the main chat",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-20T07:19:38.436Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "what will be the difference between <code>@SKIPRUBI</code> and <code>@SKIP</code> . why not just add <code>@SKIP</code> in test files of rubi. I am unclear about the decorator",
  "id": "5b29ff17148056028590d435",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-20T07:15:35.962Z",
  "text": "what will be the difference between `@SKIPRUBI` and ` @SKIP` . why not just add `@SKIP` in test files of rubi. I am unclear about the decorator",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the idea is that <code>@SKIPRUBI</code> should have a switch to activate the tests",
  "id": "5b29ff39960fcd4eb90eedcf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-20T07:16:09.142Z",
  "text": "the idea is that `@SKIPRUBI` should have a switch to activate the tests",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I&#39;m not sure how to create the switch",
  "id": "5b29ff4359799e70172c8fa1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-20T07:16:19.506Z",
  "text": "I'm not sure how to create the switch",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "ideally you would pass an extra parameter to the test script that runs all <code>@SKIPRUBI</code> tests",
  "id": "5b29ff636ceffe4eba1b8d4e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-20T07:16:51.363Z",
  "text": "ideally you would pass an extra parameter to the test script that runs all `@SKIPRUBI` tests",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "it&#39;s best to ask on the main chat  about this idea, maybe SymPy already has some mechanism like this",
  "id": "5b29ff80479ca266896ae748",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-20T07:17:20.251Z",
  "text": "it's best to ask on the main chat  about this idea, maybe SymPy already has some mechanism like this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Ok.",
  "id": "5b2a0012ad21887018c9b899",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-20T07:19:46.106Z",
  "text": "Ok.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I have asked on the main chat",
  "id": "5b2a005888ccb0620651f40b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-20T07:20:56.609Z",
  "text": "I have asked on the main chat",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<a href=\"https://github.com/sympy/sympy/blob/0a7e44de085ba067c06bcf79ebb0dbb775e52ac5/sympy/utilities/runtests.py#L526\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/blob/0a7e44de085ba067c06bcf79ebb0dbb775e52ac5/sympy/utilities/runtests.py#L526</a>",
  "id": "5b2ac32bad21887018ccd560",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-20T21:12:11.420Z",
  "text": "https://github.com/sympy/sympy/blob/0a7e44de085ba067c06bcf79ebb0dbb775e52ac5/sympy/utilities/runtests.py#L526",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/0a7e44de085ba067c06bcf79ebb0dbb775e52ac5/sympy/utilities/runtests.py#L526"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "there is a blacklist",
  "id": "5b2ac33459799e70172f801e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-20T21:12:20.962Z",
  "text": "there is a blacklist",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I believe we should create a module with the complete test suite, and put it in the blacklist",
  "id": "5b2ac34c7d3bca737af760ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-20T21:12:44.246Z",
  "text": "I believe we should create a module with the complete test suite, and put it in the blacklist",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Maybe the test function should be modified so that if a blacklisted file is included explicitly in the tests list, then it is tested anyway",
  "id": "5b2ac38f8456767856ed08db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-20T21:13:51.863Z",
  "text": "Maybe the test function should be modified so that if a blacklisted file is included explicitly in the tests list, then it is tested anyway",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "That way you can still explicitly test it by providing the full path to the tests",
  "id": "5b2ac39c7e41a20914a1a85c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-20T21:14:04.875Z",
  "text": "That way you can still explicitly test it by providing the full path to the tests",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "btw, are we going to support the standard py.test eventually?",
  "id": "5b2ac3cf5862c35f47b61697",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-20T21:14:55.340Z",
  "text": "btw, are we going to support the standard py.test eventually?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "We already support it ",
  "id": "5b2ac3dbcbb5941bbf13861c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-20T21:15:07.699Z",
  "text": "We already support it ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "OK",
  "id": "5b2ac3fe479ca266896d2b29",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-20T21:15:42.418Z",
  "text": "OK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "so if I understand correctly... we just need to add the module we want to exclude as the second argument of <code>.get</code> on this line:",
  "id": "5b2ac45a6ceffe4eba1dcdda",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-20T21:17:14.259Z",
  "text": "so if I understand correctly... we just need to add the module we want to exclude as the second argument of `.get` on this line:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<a href=\"https://github.com/sympy/sympy/blob/0a7e44de085ba067c06bcf79ebb0dbb775e52ac5/sympy/utilities/runtests.py#L525\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/blob/0a7e44de085ba067c06bcf79ebb0dbb775e52ac5/sympy/utilities/runtests.py#L525</a>",
  "id": "5b2ac45bce3b0f268d2e0349",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-20T21:17:15.207Z",
  "text": "https://github.com/sympy/sympy/blob/0a7e44de085ba067c06bcf79ebb0dbb775e52ac5/sympy/utilities/runtests.py#L525",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/0a7e44de085ba067c06bcf79ebb0dbb775e52ac5/sympy/utilities/runtests.py#L525"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "yes",
  "id": "5b2acba6a645d134ab0bf7bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-20T21:48:22.602Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Actually the way that code works you can already ignore the blacklist just by passing <code>test(&#39;rubi&#39;, blacklist=[])</code> to override it ",
  "id": "5b2acbbda645d134ab0bf7be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-20T21:48:45.636Z",
  "text": "Actually the way that code works you can already ignore the blacklist just by passing `test('rubi', blacklist=[])` to override it ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I didn&#39;t realize that matchpy isn&#39;t on conda-forge. Would any of you like to be recipe maintainers? ",
  "id": "5b2af61614ee5a10f974f450",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-21T00:49:26.288Z",
  "text": "I didn't realize that matchpy isn't on conda-forge. Would any of you like to be recipe maintainers? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "If so let me know. I am adding it here <span data-link-type=\"issue\" data-issue=\"6137\" data-issue-repo=\"conda-forge/staged-recipes\" class=\"issue\">conda-forge/staged-recipes#6137</span>",
  "id": "5b2af64714ee5a10f974f455",
  "issues": [
   {
    "number": "6137",
    "repo": "conda-forge/staged-recipes"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-21T00:50:15.712Z",
  "text": "If so let me know. I am adding it here https://github.com/conda-forge/staged-recipes/pull/6137",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Or when that gets merged you can make a PR adding yourself to the feedstock ",
  "id": "5b2af6507e41a20914a1a8bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-21T00:50:24.563Z",
  "text": "Or when that gets merged you can make a PR adding yourself to the feedstock ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I also didn&#39;t realize that matchpy depends on a GPL&#39;ed library. That is unfortunate. ",
  "id": "5b2af66ea645d134ab0bf817",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-21T00:50:54.974Z",
  "text": "I also didn't realize that matchpy depends on a GPL'ed library. That is unfortunate. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "do you mean hopcroftkarp?",
  "id": "5b2b52a3ce3b0f268d345994",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-21T07:24:19.780Z",
  "text": "do you mean hopcroftkarp?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "How can we process an expression to replace <code>exp</code> with <code>pow</code> ? ",
  "id": "5b2bbce072b31d3691e453d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-21T14:57:36.848Z",
  "text": "How can we process an expression to replace `exp` with `pow` ? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "We need this for proper working of exponential rules.",
  "id": "5b2bdb03479ca26689731656",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-21T17:06:11.876Z",
  "text": "We need this for proper working of exponential rules.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Why is the RUBI parser monkey patching the str printer? ",
  "id": "5b2be9d421895a386577ac42",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-21T18:09:24.542Z",
  "text": "Why is the RUBI parser monkey patching the str printer? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"14819\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#14819</span>",
  "id": "5b2be9d67e41a20914a1acae",
  "issues": [
   {
    "number": "14819",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-21T18:09:26.368Z",
  "text": "https://github.com/sympy/sympy/issues/14819",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Can one of you put in a fix for this? This should be changed before we release. ",
  "id": "5b2be9e921895a386577ac44",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-21T18:09:45.272Z",
  "text": "Can one of you put in a fix for this? This should be changed before we release. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Also is this print statement intentional, or was it left in accidentally? <a href=\"https://github.com/sympy/sympy/blob/0dbdc0ea83d339936da175f8c3a97d0d6bafb9f8/sympy/integrals/rubi/parsetools/parse.py#L352\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/blob/0dbdc0ea83d339936da175f8c3a97d0d6bafb9f8/sympy/integrals/rubi/parsetools/parse.py#L352</a>",
  "id": "5b2bea0014ee5a10f974f7de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-21T18:10:08.700Z",
  "text": "Also is this print statement intentional, or was it left in accidentally? https://github.com/sympy/sympy/blob/0dbdc0ea83d339936da175f8c3a97d0d6bafb9f8/sympy/integrals/rubi/parsetools/parse.py#L352",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/0dbdc0ea83d339936da175f8c3a97d0d6bafb9f8/sympy/integrals/rubi/parsetools/parse.py#L352"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "If it&#39;s intentional it should be changed to <code>debug()</code> (from <code>sympy.utilities.misc</code>). Otherwise it should just be deleted. ",
  "id": "5b2bea32a645d134ab0bfbe0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-21T18:10:58.090Z",
  "text": "If it's intentional it should be changed to `debug()` (from `sympy.utilities.misc`). Otherwise it should just be deleted. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Same with the other print statements in the rubi module ",
  "id": "5b2bea5614ee5a10f974f7e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-21T18:11:34.661Z",
  "text": "Same with the other print statements in the rubi module ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I&#39;ve taken care of the print statements. Can you review <a href=\"https://github.com/sympy/sympy/pull/14747/commits/5f4d3e1a18d238a9f7fcc80dc9ad0de6f1629d35\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/pull/14747/commits/5f4d3e1a18d238a9f7fcc80dc9ad0de6f1629d35</a>",
  "id": "5b2beb5e8a53ca283129fe13",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-21T18:15:58.691Z",
  "text": "I've taken care of the print statements. Can you review https://github.com/sympy/sympy/pull/14747/commits/5f4d3e1a18d238a9f7fcc80dc9ad0de6f1629d35",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/14747/commits/5f4d3e1a18d238a9f7fcc80dc9ad0de6f1629d35"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "And yeah I meant hopcroftkarp. That&#39;s such a simple library, though. It&#39;s just a single file. <a href=\"https://github.com/sofiatolaosebikan/hopcroftkarp/blob/master/hopcroftkarp/__init__.py\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/sofiatolaosebikan/hopcroftkarp/blob/master/hopcroftkarp/__init__.py</a>. So if it became an issue and it couldn&#39;t be relicensed, maybe it could just be rewritten manually for matchpy ",
  "id": "5b2bed2a21895a386577ac68",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-21T18:23:38.517Z",
  "text": "And yeah I meant hopcroftkarp. That's such a simple library, though. It's just a single file. https://github.com/sofiatolaosebikan/hopcroftkarp/blob/master/hopcroftkarp/__init__.py. So if it became an issue and it couldn't be relicensed, maybe it could just be rewritten manually for matchpy ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sofiatolaosebikan/hopcroftkarp/blob/master/hopcroftkarp/__init__.py"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "It would be a problem if we ever wanted to make matchpy a hard dependency in sympy. I don&#39;t want any hard dependencies that aren&#39;t BSD compatible. For optional dependencies it&#39;s fine, though. ",
  "id": "5b2bed66a645d134ab0bfbe4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-21T18:24:38.551Z",
  "text": "It would be a problem if we ever wanted to make matchpy a hard dependency in sympy. I don't want any hard dependencies that aren't BSD compatible. For optional dependencies it's fine, though. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "The print statement was left accidentally. ",
  "id": "5b2cb4c1aeb8fa0c073639bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-22T08:35:13.122Z",
  "text": "The print statement was left accidentally. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I will fix <span data-link-type=\"issue\" data-issue=\"14819\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#14819</span>",
  "id": "5b2cb4c7960fcd4eb918f9ed",
  "issues": [
   {
    "number": "14819",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-22T08:35:19.152Z",
  "text": "I will fix https://github.com/sympy/sympy/issues/14819",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-23T07:48:33.671Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>I am unable to process an expression to replace <code>exp</code> with <code>Pow</code> . I tried few ways : </p><ol>\n<li><code>Pow(Dummy(&#39;E&#39;), z)</code></li>\n<li><code>Pow(UnevaluatedExpr(E), z)</code></li>\n<li><code>Pow(E, z, evaluate=False)</code></li>\n</ol>\n<p>In 1 and 2, functions which depends on property of <code>E</code> fails, like(<code>log(E)</code> should evaluate to 1)<br>In 3 there is some automatic evaluation when we apply either <code>Mul</code>or <code>Pow</code> to the expression. I tried to fix this. I think cause is in <code>flatten</code> of <code>Mul</code> . </p>",
  "id": "5b2dfb12b9c2fb2557039768",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-23T07:47:30.141Z",
  "text": "I am unable to process an expression to replace `exp` with `Pow` . I tried few ways : \n1. `Pow(Dummy('E'), z)`\n2. ` Pow(UnevaluatedExpr(E), z)`\n3. `Pow(E, z, evaluate=False)`\n\nIn 1 and 2, functions which depends on property of `E` fails, like(`log(E)` should evaluate to 1)\nIn 3 there is some automatic evaluation when we apply either `Mul`or `Pow` to the expression. I tried to fix this. I think cause is in `flatten` of `Mul` . ",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "ys",
  "id": "5b2e99bdbe98b14224030443",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-23T19:04:29.356Z",
  "text": "ys",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "yes it&#39;s a mess",
  "id": "5b2e99c5467bd7268c2e62f5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-23T19:04:37.527Z",
  "text": "yes it's a mess",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "you could try to define something like<pre><code class=\"python\">Pow = Function(<span class=\"string\">\"AlternativePow\"</span>)</code></pre>",
  "id": "5b2e9a10ce3b0f268d3d6520",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-23T19:05:52.866Z",
  "text": "you could try to define something like\n```python\nPow = Function(\"AlternativePow\")\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I am trying to work on <code>Pow(UnevaluatedExpr(E), z)</code> . With some modification , I think this will work. Currently I am trying to use it.",
  "id": "5b2ea0c9467bd7268c2e71cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-23T19:34:33.933Z",
  "text": "I am trying to work on `Pow(UnevaluatedExpr(E), z)` . With some modification , I think this will work. Currently I am trying to use it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "ok",
  "id": "5b2f44a6467bd7268c2f3ed6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-24T07:13:42.129Z",
  "text": "ok",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>I have defined exp like this </p><pre><code><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">rubi_unevaluated_expr</span><span class=\"params\">(UnevaluatedExpr)</span>:</span>\n    <span class=\"decorator\">@property</span>\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">is_commutative</span><span class=\"params\">(self)</span>:</span>\n        <span class=\"keyword\">from</span> sympy.core.logic <span class=\"keyword\">import</span> fuzzy_and\n        <span class=\"keyword\">return</span> fuzzy_and(a.is_commutative <span class=\"keyword\">for</span> a <span class=\"keyword\">in</span> self.args)\n\n\n<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">exp</span><span class=\"params\">(Function)</span>:</span>\n    <span class=\"decorator\">@classmethod</span>\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">eval</span><span class=\"params\">(cls,*args)</span>:</span>\n        <span class=\"keyword\">return</span> Pow(rubi_unevaluated_expr(E), args[<span class=\"number\">0</span>], evaluate = <span class=\"keyword\">False</span>)</code></pre><p>and <code>Log</code> in utility_function has been defined like this<br><code>return log(z).doit()</code></p>",
  "id": "5b2f6a8d0168e70c08e9f0d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-24T09:55:25.823Z",
  "text": "I have defined exp like this \n```\nclass rubi_unevaluated_expr(UnevaluatedExpr):\n    @property\n    def is_commutative(self):\n        from sympy.core.logic import fuzzy_and\n        return fuzzy_and(a.is_commutative for a in self.args)\n\n\nclass exp(Function):\n    @classmethod\n    def eval(cls,*args):\n        return Pow(rubi_unevaluated_expr(E), args[0], evaluate = False)\n```\nand `Log` in utility_function has been defined like this\n`return log(z).doit()`\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "This is working for now. I will test more now.",
  "id": "5b2f6ae1479ca266897acc95",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-24T09:56:49.811Z",
  "text": "This is working for now. I will test more now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "OK, we can use it as a temporary solution",
  "id": "5b2f6b727d3bca737a055c08",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-24T09:59:14.844Z",
  "text": "OK, we can use it as a temporary solution",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-24T10:08:04.924Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>Also I have found a solution for rules like this </p><pre><code>Int[(d_.+e_.<span class=\"keyword\">*</span>x_)^m_.<span class=\"keyword\">*</span>(f_.+g_.<span class=\"keyword\">*</span>x_)^n_.<span class=\"keyword\">*</span>(a_+c_.<span class=\"keyword\">*</span>x_^2)^p_.,x_Symbol] :=\nInt[(d+e<span class=\"keyword\">*</span>x)^m<span class=\"keyword\">*</span>(f+g<span class=\"keyword\">*</span>x)^n<span class=\"keyword\">*</span>(a+c<span class=\"keyword\">*</span>x^2)^p,x] /;\nFreeQ[{a,c,d,e,f,g,m,n,p},x]</code></pre><p>There are many rules like this in exponential and logarithms. </p><pre><code>Integrate = <span class=\"function\"><span class=\"title\">Function</span><span class=\"params\">(<span class=\"string\">'Integrate'</span>)</span></span>\n<span class=\"keyword\">if</span> <span class=\"function\"><span class=\"title\">len</span><span class=\"params\">(rules_applied)</span></span> &gt; <span class=\"number\">10</span>:\n        <span class=\"keyword\">if</span> _has_cycle(): #_has_cycle checks <span class=\"keyword\">if</span> rules applied <span class=\"keyword\">for</span> last <span class=\"number\">5</span> <span class=\"tag\">time</span> is the same\n            return <span class=\"function\"><span class=\"title\">Integrate</span><span class=\"params\">(expr, var)</span></span></code></pre><p>So after complete integration</p><pre><code><span class=\"keyword\">if</span> results.<span class=\"function\"><span class=\"title\">has</span><span class=\"params\">(Integrate)</span></span>:\n     results = results.<span class=\"function\"><span class=\"title\">replace</span><span class=\"params\">(Integrate, Integral)</span></span>\nreturn results</code></pre><p>This stops recursion and gives a proper outcome</p>",
  "id": "5b2f6d690168e70c08e9f678",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-24T10:07:37.014Z",
  "text": "Also I have found a solution for rules like this \n```\nInt[(d_.+e_.*x_)^m_.*(f_.+g_.*x_)^n_.*(a_+c_.*x_^2)^p_.,x_Symbol] :=\nInt[(d+e*x)^m*(f+g*x)^n*(a+c*x^2)^p,x] /;\nFreeQ[{a,c,d,e,f,g,m,n,p},x]\n```\nThere are many rules like this in exponential and logarithms. \n```\nIntegrate = Function('Integrate')\nif len(rules_applied) > 10:\n        if _has_cycle(): #_has_cycle checks if rules applied for last 5 time is the same\n            return Integrate(expr, var)\n```\nSo after complete integration\n```\nif results.has(Integrate):\n     results = results.replace(Integrate, Integral)\nreturn results\n```\nThis stops recursion and gives a proper outcome",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "have you tried <code>UnevaluatedExpr(Integral(...))</code> ?",
  "id": "5b2f72bf479ca266897ad81e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-24T10:30:23.302Z",
  "text": "have you tried `UnevaluatedExpr(Integral(...))` ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I have not. I will try. But I think this too has <code>Integral</code> inside it , so that may get matched again.",
  "id": "5b2f7304aeb8fa0c073d994a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-24T10:31:32.913Z",
  "text": "I have not. I will try. But I think this too has `Integral` inside it , so that may get matched again.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "ok",
  "id": "5b2f73197da8cd7c8c690f75",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-24T10:31:53.575Z",
  "text": "ok",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "remember to write comment in the source code explaining why you are doing this",
  "id": "5b2f73276ceffe4eba2e76a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-24T10:32:07.888Z",
  "text": "remember to write comment in the source code explaining why you are doing this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "so that people in the future will be able to understand the code",
  "id": "5b2f7335ad21887018d9b01e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-24T10:32:21.096Z",
  "text": "so that people in the future will be able to understand the code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "ok.",
  "id": "5b2f7336ad21887018d9b020",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-24T10:32:22.095Z",
  "text": "ok.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Would it be possible to line wrap the generated code in the rubi module. The long lines are annoying when grepping for things",
  "id": "5b30138a14ee5a10f974ff81",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-24T21:56:26.246Z",
  "text": "Would it be possible to line wrap the generated\u00a0code in the rubi module. The long lines are annoying when grepping for things",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-01T12:57:40.859Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ashishkg0022\" class=\"mention\">@ashishkg0022</span> did you include the whole test suite with disabled travis tests?",
  "id": "5b38cf8ebd92d807828a114a",
  "issues": [],
  "mentions": [
   {
    "screenName": "ashishkg0022",
    "userId": "58bd696cd73408ce4f4eb85b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-01T12:56:46.394Z",
  "text": "@ashishkg0022 did you include the whole test suite with disabled travis tests?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I am unclear about how to do that exactly. I have tested exponential rules and added them with just using <code>SKIP</code> . ",
  "id": "5b38e713d99c896d64dce5eb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-01T14:37:07.636Z",
  "text": "I am unclear about how to do that exactly. I have tested exponential rules and added them with just using `SKIP` . ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Can you tell me how to add them in a disabled travis state ?",
  "id": "5b38e72cbd92d807828a39de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-01T14:37:32.765Z",
  "text": "Can you tell me how to add them in a disabled travis state ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Modifying this line <a href=\"https://github.com/sympy/sympy/blob/0a7e44de085ba067c06bcf79ebb0dbb775e52ac5/sympy/utilities/runtests.py#L525\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/blob/0a7e44de085ba067c06bcf79ebb0dbb775e52ac5/sympy/utilities/runtests.py#L525</a><br>like this <code>blacklist = kwargs.get(&#39;blacklist&#39;, [&#39;sympy/integrals/rubi/&#39;])</code><br>Is this the correct solution ? ",
  "id": "5b38ecb39b82c6701b995133",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-01T15:01:07.823Z",
  "text": "Modifying this line https://github.com/sympy/sympy/blob/0a7e44de085ba067c06bcf79ebb0dbb775e52ac5/sympy/utilities/runtests.py#L525  \nlike this `    blacklist = kwargs.get('blacklist', ['sympy/integrals/rubi/'])` \nIs this the correct solution ? ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/0a7e44de085ba067c06bcf79ebb0dbb775e52ac5/sympy/utilities/runtests.py#L525"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "well, you&#39;d need another module",
  "id": "5b3925e1d99c896d64dd5c31",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-01T19:05:05.396Z",
  "text": "well, you'd need another module",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<code>sympy/integrals/rubi</code> needs to be tested",
  "id": "5b3925ed81816669a42758a0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-01T19:05:17.885Z",
  "text": "`sympy/integrals/rubi` needs to be tested",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "so I would suggest to create a sub-module with all the tests",
  "id": "5b39260b3c5abf52b6333aae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-01T19:05:47.587Z",
  "text": "so I would suggest to create a sub-module with all the tests",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the sub-module should be blacklisted",
  "id": "5b3926183c5abf52b6333ab4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-01T19:06:00.176Z",
  "text": "the sub-module should be blacklisted",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "In that sub-module, I should add the tests once I finish them testing. Like till now, I have completely tested trinomials, miscellaneous-algebra, exponential. for the tests which are failing now,I have written comments, mentioning the reason of failing . ",
  "id": "5b39276f3c5abf52b6333c79",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-01T19:11:43.446Z",
  "text": "In that sub-module, I should add the tests once I finish them testing. Like till now, I have completely tested trinomials, miscellaneous-algebra, exponential. for the tests which are failing now,I have written comments, mentioning the reason of failing . ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Or you want me to add all test files now, the untested also ?",
  "id": "5b39285f63042f2df34d6ac7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-01T19:15:43.570Z",
  "text": "Or you want me to add all test files now, the untested also ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would recommend having a submodule",
  "id": "5b392881a99e1e52b70d54fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-01T19:16:17.229Z",
  "text": "I would recommend having a submodule",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "so we can disable the majority of tests on Travis",
  "id": "5b39288dd99c896d64dd605d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-01T19:16:29.397Z",
  "text": "so we can disable the majority of tests on Travis",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span>  I have added a sub-module <code>rubi_tests</code> and added tests in them. Can you please check once <span data-link-type=\"issue\" data-issue=\"14756\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#14756</span>",
  "id": "5b3a27cf60c387078356aceb",
  "issues": [
   {
    "number": "14756",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-02T13:25:35.042Z",
  "text": "@Upabjojr  I have added a sub-module `rubi_tests` and added tests in them. Can you please check once https://github.com/sympy/sympy/pull/14756",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-02T13:26:31.015Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Also how to ignore the blacklist when I wish to ?",
  "id": "5b3a27f863042f2df34f5945",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-02T13:26:16.986Z",
  "text": "Also how to ignore the blacklist when I wish to ?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I have almost completed logarithmic tests. some tests are failing as they depend on trigonometric rules.  ",
  "id": "5b3d76b160c38707835e8fe3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T01:38:57.211Z",
  "text": "I have almost completed logarithmic tests. some tests are failing as they depend on trigonometric rules.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "What should I move on to next? either I can test few special functions like <code>gamma</code> , <code>Ei</code> or I can move on to load trigonometric rules",
  "id": "5b3d76f77b811a6d63d0847c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T01:40:07.820Z",
  "text": "What should I move on to next? either I can test few special functions like `gamma` , ` Ei` or I can move on to load trigonometric rules",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "If I load all trigonometric rules (sine, secant, tangent and miscellaneous) , the loading time is 6 minutes",
  "id": "5b3d772e7e23133ecb328b21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T01:41:02.216Z",
  "text": "If I load all trigonometric rules (sine, secant, tangent and miscellaneous) , the loading time is 6 minutes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Excluding trigo rules if I load complete algebra rules, exponential, logarithmic, special functions, integrand simplification and miscellaneous_integration, the loading time is <code>1 min 28 sec</code>",
  "id": "5b3d78989b82c6701ba35615",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T01:47:04.300Z",
  "text": "Excluding trigo rules if I load complete algebra rules, exponential, logarithmic, special functions, integrand simplification and miscellaneous_integration, the loading time is `1 min 28 sec`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Are the utility functions completed?",
  "id": "5b3dca0863042f2df357c77c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T07:34:32.748Z",
  "text": "Are the utility functions completed?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "If they are, we can just run all the tests and see how many are failing before you even start testing in parts ",
  "id": "5b3dca2ba99e1e52b717a005",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T07:35:07.766Z",
  "text": "If they are, we can just run all the tests and see how many are failing before you even start testing in parts ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "We cannot find any issue in the utility functions without testing.  New problems will be arising in the utility functions. I can push the parsed rules and tests. Anyone of you can run it and give me the list of tests that will be failing. Then I will work on them only .",
  "id": "5b3dcbe83572e970c177883a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T07:42:32.656Z",
  "text": "We cannot find any issue in the utility functions without testing.  New problems will be arising in the utility functions. I can push the parsed rules and tests. Anyone of you can run it and give me the list of tests that will be failing. Then I will work on them only .",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "Are there any utility function which you have not started to implement or implemented partially?",
  "id": "5b3dccfc3c5abf52b63d76ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T07:47:08.280Z",
  "text": "Are there any utility function which you have not started to implement or implemented partially?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Till now <code>appellf1</code> and <code>apart</code> are partially implemented. For next rules (trigo and hyperbolic), I will have to check.",
  "id": "5b3dcdab81816669a4320a2b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T07:50:03.579Z",
  "text": "Till now `appellf1` and `apart` are partially implemented. For next rules (trigo and hyperbolic), I will have to check.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "precisely <code>appellf1</code> is not implemented",
  "id": "5b3dcdf133b0282df401b404",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T07:51:13.865Z",
  "text": "precisely `appellf1` is not implemented",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Also sometimes <code>simplify</code> of sympy works differently than of Mathematica. So few tests are affected by that too. I have written in comments these things.",
  "id": "5b3dce407b811a6d63d127b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T07:52:32.997Z",
  "text": "Also sometimes `simplify` of sympy works differently than of Mathematica. So few tests are affected by that too. I have written in comments these things.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "did you put <code>appellf1</code> in a separate PR?",
  "id": "5b3dcf7f81816669a4320db7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T07:57:51.887Z",
  "text": "did you put `appellf1` in a separate PR?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "anyway... the big thing to do is to add the utility functions of the new version",
  "id": "5b3dcf9f63042f2df357d773",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T07:58:23.020Z",
  "text": "anyway... the big thing to do is to add the utility functions of the new version",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "we will need to update the Rubi version eventually",
  "id": "5b3dcfaf63042f2df357da72",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T07:58:39.815Z",
  "text": "we will need to update the Rubi version eventually",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "also we can think about merging the work done so far as soon as the tests are working",
  "id": "5b3dcfcdf1664406611b1c02",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T07:59:09.443Z",
  "text": "also we can think about merging the work done so far as soon as the tests are working",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I am not familiar with <code>appellf1</code>. I will need time for that.",
  "id": "5b3dcfdba99e1e52b717b507",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T07:59:23.635Z",
  "text": "I am not familiar with `appellf1`. I will need time for that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "yes we can merge, performance wise rubi has improved a lot",
  "id": "5b3dcffb70efc60660aeba07",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T07:59:55.856Z",
  "text": "yes we can merge, performance wise rubi has improved a lot",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<a href=\"http://functions.wolfram.com/HypergeometricFunctions/AppellF1/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://functions.wolfram.com/HypergeometricFunctions/AppellF1/</a>",
  "id": "5b3dd010f1664406611b1c7d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T08:00:16.550Z",
  "text": "http://functions.wolfram.com/HypergeometricFunctions/AppellF1/",
  "unread": false,
  "urls": [
   {
    "url": "http://functions.wolfram.com/HypergeometricFunctions/AppellF1/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I think that link describes everything that needs to be implemented",
  "id": "5b3dd023f1664406611b1c8d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T08:00:35.916Z",
  "text": "I think that link describes everything that needs to be implemented",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-05T18:33:29.500Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span>  Instead of a separate PR, how about implementing <code>appellf1</code> just for rubi using this series representation<br><a href=\"https://mathematica.stackexchange.com/questions/139810/how-is-the-function-appellf1-implemented-internally\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://mathematica.stackexchange.com/questions/139810/how-is-the-function-appellf1-implemented-internally</a><pre><code class=\"mathematica\"><span class=\"keyword\">Sum</span>[\n <span class=\"keyword\">Pochhammer</span>[a, m + n]/\n  <span class=\"keyword\">Pochhammer</span>[c, n + m] <span class=\"keyword\">Pochhammer</span>[b1, m] <span class=\"keyword\">Pochhammer</span>[b2, n] x^m/m! y^n/\n  n!, <span class=\"list\">{m, 0, \\[Infinity]}</span>, <span class=\"list\">{n, 0, \\[Infinity]}</span>]\n\n<span class=\"comment\">(* Out[2843]= AppellF1[a, b1, b2, c, x, y] *)</span></code></pre>",
  "id": "5b3e6461a99e1e52b7195284",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T18:33:05.550Z",
  "text": "@Upabjojr  Instead of a separate PR, how about implementing `appellf1` just for rubi using this series representation\nhttps://mathematica.stackexchange.com/questions/139810/how-is-the-function-appellf1-implemented-internally\n\n``` Mathematica\nSum[\n Pochhammer[a, m + n]/\n  Pochhammer[c, n + m] Pochhammer[b1, m] Pochhammer[b2, n] x^m/m! y^n/\n  n!, {m, 0, \\[Infinity]}, {n, 0, \\[Infinity]}]\n\n(* Out[2843]= AppellF1[a, b1, b2, c, x, y] *)\n```",
  "unread": false,
  "urls": [
   {
    "url": "https://mathematica.stackexchange.com/questions/139810/how-is-the-function-appellf1-implemented-internally"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<code>Pochhammer</code> is implemented in sympy as <code>RisingFactorial</code> ",
  "id": "5b3e64c381816669a433a56a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T18:34:42.999Z",
  "text": "`Pochhammer` is implemented in sympy as `RisingFactorial` ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "creating a new function is easy, implementing the properties is more complicated",
  "id": "5b3e904f70efc60660b0adce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T21:40:31.059Z",
  "text": "creating a new function is easy, implementing the properties is more complicated",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "you could create <code>appellf1</code> and just add the properties needed for RUBI",
  "id": "5b3e9060e534eb69a5cbc4c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T21:40:48.490Z",
  "text": "you could create `appellf1` and just add the properties needed for RUBI",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "other properties can be added in the future",
  "id": "5b3e906c70efc60660b0ade5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T21:41:00.110Z",
  "text": "other properties can be added in the future",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "anyway, I would be glad if it&#39;s possible to separate some work from the main PR, so that we can start merging something",
  "id": "5b3e90933572e970c179993e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-05T21:41:39.463Z",
  "text": "anyway, I would be glad if it's possible to separate some work from the main PR, so that we can start merging something",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "If you are going to implement a new special function, <a href=\"https://github.com/sympy/sympy/wiki/About-implementing-special-functions\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/wiki/About-implementing-special-functions</a> will be useful ",
  "id": "5b3eb67b8d75e7510649da52",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-06T00:23:23.210Z",
  "text": "If you are going to implement a new special function, https://github.com/sympy/sympy/wiki/About-implementing-special-functions will be useful ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/wiki/About-implementing-special-functions"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I think it is suitable for a separate PR",
  "id": "5b3f2a21a99e1e52b71add21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-06T08:36:49.711Z",
  "text": "I think it is suitable for a separate PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Ok. I am trying. ",
  "id": "5b3f553e33b0282df4052e06",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-06T11:40:46.221Z",
  "text": "Ok. I am trying. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ashishkg0022\" class=\"mention\">@ashishkg0022</span> notice that you don&#39;t need to implement everything... just what&#39;s necessary for RUBI",
  "id": "5b3f83d73572e970c17b97b7",
  "issues": [],
  "mentions": [
   {
    "screenName": "ashishkg0022",
    "userId": "58bd696cd73408ce4f4eb85b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-06T14:59:35.321Z",
  "text": "@ashishkg0022 notice that you don't need to implement everything... just what's necessary for RUBI",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the remainder can be added as a TODO",
  "id": "5b3f83e53c5abf52b6417c57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-06T14:59:49.609Z",
  "text": "the remainder can be added as a TODO",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Ok. Today I worked on updating test for parsetools and other small issues , so that travis passes on my current PR.",
  "id": "5b3f847463042f2df35bdfb8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-06T15:02:12.459Z",
  "text": "Ok. Today I worked on updating test for parsetools and other small issues , so that travis passes on my current PR.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "While committing today, the date of my system was wrong. So when I pushed it on github , it is showing  a commit of few days ago . But in <code>git log</code> the order is correct. ",
  "id": "5b3f9bbe60c38707836396a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-06T16:41:34.152Z",
  "text": "While committing today, the date of my system was wrong. So when I pushed it on github , it is showing  a commit of few days ago . But in `git log` the order is correct. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "How can it be fixed ?",
  "id": "5b3f9be67e23133ecb377803",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-06T16:42:14.104Z",
  "text": "How can it be fixed ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<code>git rebase -i</code> should work",
  "id": "5b3fa0463572e970c17bf224",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-06T17:00:54.194Z",
  "text": "`git rebase -i` should work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-06T18:04:49.896Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "modifying  this line <a href=\"https://github.com/sympy/sympy/blob/0a7e44de085ba067c06bcf79ebb0dbb775e52ac5/sympy/utilities/runtests.py#L525\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/blob/0a7e44de085ba067c06bcf79ebb0dbb775e52ac5/sympy/utilities/runtests.py#L525</a><br>as <code>blacklist = kwargs.get(&#39;blacklist&#39;, [&#39;sympy/integrals/rubi/rubi_tests&#39;])</code> , results in fail of the <code>rubi tests</code> in python version other than <code>3.6</code>",
  "id": "5b3faf2c7e23133ecb37a8f6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-06T18:04:28.487Z",
  "text": "modifying  this line https://github.com/sympy/sympy/blob/0a7e44de085ba067c06bcf79ebb0dbb775e52ac5/sympy/utilities/runtests.py#L525\nas `blacklist = kwargs.get('blacklist', ['sympy/integrals/rubi/rubi_tests'])` , results in fail of the `rubi tests` in python version other than `3.6`\n",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/0a7e44de085ba067c06bcf79ebb0dbb775e52ac5/sympy/utilities/runtests.py#L525"
   }
  ],
  "v": 2
 },
 {
  "editedAt": "2018-07-06T18:07:41.773Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<pre><code>(sym) ashish (rubi_progress *) sympy $ python2 .<span class=\"regexp\">/bin/</span>test test_rubi_integrate\n=================================== test process starts ===================================\n<span class=\"string\">executable:</span>         <span class=\"regexp\">/usr/</span>bin/python2  (<span class=\"number\">2.7</span>.12-<span class=\"keyword\">final</span>-<span class=\"number\">0</span>) [CPython]\n<span class=\"string\">architecture:</span>       <span class=\"number\">64</span>-bit\n<span class=\"string\">cache:</span>              yes\nground <span class=\"string\">types:</span>       python \n<span class=\"string\">numpy:</span>              <span class=\"number\">1.13</span>.3\nrandom <span class=\"string\">seed:</span>        <span class=\"number\">87550078</span>\nhash <span class=\"string\">randomization:</span> on (PYTHONHASHSEED=<span class=\"number\">2358634368</span>)\n\nsympy<span class=\"regexp\">/integrals/</span>rubi<span class=\"regexp\">/tests/</span>test_rubi_integrate.py[<span class=\"number\">0</span>] Traceback (most recent call last):\n  File <span class=\"string\">\"&lt;string&gt;\"</span>, line <span class=\"number\">1</span>, <span class=\"keyword\">in</span> &lt;module&gt;\n  File <span class=\"string\">\"sympy/utilities/runtests.py\"</span>, line <span class=\"number\">576</span>, <span class=\"keyword\">in</span> _test\n    enhance_asserts=enhance_asserts, fail_on_timeout=fail_on_timeout))\n  File <span class=\"string\">\"sympy/utilities/runtests.py\"</span>, line <span class=\"number\">1092</span>, <span class=\"keyword\">in</span> test\n    enhance_asserts, fail_on_timeout)\n  File <span class=\"string\">\"sympy/utilities/runtests.py\"</span>, line <span class=\"number\">1166</span>, <span class=\"keyword\">in</span> test_file\n    reporter.test_exception(sys.exc_info())\n  File <span class=\"string\">\"sympy/utilities/runtests.py\"</span>, line <span class=\"number\">2301</span>, <span class=\"keyword\">in</span> test_exception\n    self._exceptions.append((self._active_file, self._active_f, exc_info))\n<span class=\"string\">AttributeError:</span> <span class=\"string\">'PyTestReporter'</span> object has no attribute <span class=\"string\">'_active_file'</span></code></pre>",
  "id": "5b3faf963572e970c17c1dcf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-06T18:06:14.082Z",
  "text": "```\n(sym) ashish (rubi_progress *) sympy $ python2 ./bin/test test_rubi_integrate\n=================================== test process starts ===================================\nexecutable:         /usr/bin/python2  (2.7.12-final-0) [CPython]\narchitecture:       64-bit\ncache:              yes\nground types:       python \nnumpy:              1.13.3\nrandom seed:        87550078\nhash randomization: on (PYTHONHASHSEED=2358634368)\n\nsympy/integrals/rubi/tests/test_rubi_integrate.py[0] Traceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"sympy/utilities/runtests.py\", line 576, in _test\n    enhance_asserts=enhance_asserts, fail_on_timeout=fail_on_timeout))\n  File \"sympy/utilities/runtests.py\", line 1092, in test\n    enhance_asserts, fail_on_timeout)\n  File \"sympy/utilities/runtests.py\", line 1166, in test_file\n    reporter.test_exception(sys.exc_info())\n  File \"sympy/utilities/runtests.py\", line 2301, in test_exception\n    self._exceptions.append((self._active_file, self._active_f, exc_info))\nAttributeError: 'PyTestReporter' object has no attribute '_active_file'\n```\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I think this is a bug that I&#39;ve fixed in the 1.2 branch ",
  "id": "5b3fb0052f8ed24d3cf31641",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-06T18:08:05.811Z",
  "text": "I think this is a bug that I've fixed in the 1.2 branch ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Actually I thought it was fixed in master too. ",
  "id": "5b3fb0249dc6a66973969e10",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-06T18:08:36.988Z",
  "text": "Actually I thought it was fixed in master too. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Oh no it wasn&#39;t merged in master ",
  "id": "5b3fb09f8f5a13513955ff9d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-06T18:10:39.851Z",
  "text": "Oh no it wasn't merged in master ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I&#39;m not 100% sure it was fixed. I just remember that error message ",
  "id": "5b3fb0c1e2d42269e37fae46",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-06T18:11:13.606Z",
  "text": "I'm not 100% sure it was fixed. I just remember that error message ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Will you be merging that in master now ?",
  "id": "5b3fb0e760c387078363c9d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-06T18:11:51.941Z",
  "text": "Will you be merging that in master now ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I will merge it in master once I do the final release ",
  "id": "5b3fb0f78d75e7510649de1b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-06T18:12:07.536Z",
  "text": "I will merge it in master once I do the final release ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I will probably do that on Monday ",
  "id": "5b3fb11003235c461fa3cc78",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-06T18:12:32.989Z",
  "text": "I will probably do that on Monday ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "okay. I will check it then.",
  "id": "5b3fb12960c387078363ca2f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-06T18:12:57.717Z",
  "text": "okay. I will check it then.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Yeah it was fixed in this branch <a href=\"https://github.com/sympy/sympy/pull/14747/files#diff-10ef4bf41d1efbbb905aaa8b8fd2c988\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/pull/14747/files#diff-10ef4bf41d1efbbb905aaa8b8fd2c988</a>",
  "id": "5b3fb13be49e0b3682f0cdd9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-06T18:13:15.508Z",
  "text": "Yeah it was fixed in this branch https://github.com/sympy/sympy/pull/14747/files#diff-10ef4bf41d1efbbb905aaa8b8fd2c988",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/14747/files#diff-10ef4bf41d1efbbb905aaa8b8fd2c988"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Which was only merged into 1.2 ",
  "id": "5b3fb13f570da9100dae0b0a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-06T18:13:19.681Z",
  "text": "Which was only merged into 1.2 ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I am unable to find what are the properties of appellf1 needed for rubi.<br> Like in this image,  in rule 906 there is no distinction between <code>(a+b*x)^n</code> and <code>(c+d*x)^n</code> . So z1 and z2 of <code>appellf1</code>  can get interchanged. In mathematica the output is<br><code>AppellF1[1/3,  -p, -p,  4/3, -(2*c*x^3)/(b - Sqrt[b^2 - 4*a*c], -(2*c*x^3)/(b + Sqrt[b^2 - 4*a*c])]</code><br>But in matchpy I get<br><code>AppellF1(1/3,  -p, -p,  4/3, -(2*c*x^3)/(b + Sqrt[b^2 - 4*a*c], -(2*c*x^3)/(b - Sqrt[b^2 - 4*a*c]))</code><br>From the primary definition of series, they come to be mathematically equal , but I am unable to find a way to show that they are equal.",
  "id": "5b405a839b82c6701ba9a41e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-07T06:15:31.177Z",
  "text": "I am unable to find what are the properties of appellf1 needed for rubi.\n Like in this image,  in rule 906 there is no distinction between `(a+b*x)^n` and `(c+d*x)^n` . So z1 and z2 of `appellf1`  can get interchanged. In mathematica the output is \n`AppellF1[1/3,  -p, -p,  4/3, -(2*c*x^3)/(b - Sqrt[b^2 - 4*a*c], -(2*c*x^3)/(b + Sqrt[b^2 - 4*a*c])]` \nBut in matchpy I get \n`AppellF1(1/3,  -p, -p,  4/3, -(2*c*x^3)/(b + Sqrt[b^2 - 4*a*c], -(2*c*x^3)/(b - Sqrt[b^2 - 4*a*c]))`\nFrom the primary definition of series, they come to be mathematically equal , but I am unable to find a way to show that they are equal.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<a href=\"https://files.gitter.im/sympy/Rubi-GSoC17/4JXN/rubi_appell.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/sympy/Rubi-GSoC17/4JXN/thumb/rubi_appell.png\" alt=\"rubi_appell.png\" rel=\"nofollow\"></a>",
  "id": "5b405a9c3d8f71623d639dcd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-07T06:15:56.587Z",
  "text": "[![rubi_appell.png](https://files.gitter.im/sympy/Rubi-GSoC17/4JXN/thumb/rubi_appell.png)](https://files.gitter.im/sympy/Rubi-GSoC17/4JXN/rubi_appell.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/sympy/Rubi-GSoC17/4JXN/thumb/rubi_appell.png"
   },
   {
    "url": "https://files.gitter.im/sympy/Rubi-GSoC17/4JXN/rubi_appell.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I tried some identities and properties but that&#39;s not working.",
  "id": "5b405acc60c387078364ead9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-07T06:16:44.335Z",
  "text": "I tried some identities and properties but that's not working.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>Example </p><pre><code><span class=\"function\"><span class=\"title\">Sum</span><span class=\"params\">(<span class=\"number\">5</span>**m*<span class=\"number\">8</span>**n*RisingFactorial(<span class=\"number\">0.5</span>, m)</span></span>*<span class=\"function\"><span class=\"title\">RisingFactorial</span><span class=\"params\">(<span class=\"number\">0.5</span>, n)</span></span>*<span class=\"function\"><span class=\"title\">factorial</span><span class=\"params\">(m + n)</span></span>/(<span class=\"function\"><span class=\"title\">RisingFactorial</span><span class=\"params\">(<span class=\"number\">2</span>, m + n)</span></span>*<span class=\"function\"><span class=\"title\">factorial</span><span class=\"params\">(m)</span></span>*<span class=\"function\"><span class=\"title\">factorial</span><span class=\"params\">(n)</span></span>), (m, <span class=\"number\">0</span>, zoo), (n, <span class=\"number\">0</span>, zoo))</code></pre><p>and </p><pre><code><span class=\"function\"><span class=\"title\">Sum</span><span class=\"params\">(<span class=\"number\">5</span>**n*<span class=\"number\">8</span>**m*RisingFactorial(<span class=\"number\">0.5</span>, m)</span></span>*<span class=\"function\"><span class=\"title\">RisingFactorial</span><span class=\"params\">(<span class=\"number\">0.5</span>, n)</span></span>*<span class=\"function\"><span class=\"title\">factorial</span><span class=\"params\">(m + n)</span></span>/(<span class=\"function\"><span class=\"title\">RisingFactorial</span><span class=\"params\">(<span class=\"number\">2</span>, m + n)</span></span>*<span class=\"function\"><span class=\"title\">factorial</span><span class=\"params\">(m)</span></span>*<span class=\"function\"><span class=\"title\">factorial</span><span class=\"params\">(n)</span></span>), (m, <span class=\"number\">0</span>, zoo), (n, <span class=\"number\">0</span>, zoo))</code></pre><p>These two are equal if seen carefully. But I am not able do this through any property of <code>appellf1</code></p>",
  "id": "5b405c2b3572e970c17d29b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-07T06:22:35.932Z",
  "text": "Example \n```\nSum(5**m*8**n*RisingFactorial(0.5, m)*RisingFactorial(0.5, n)*factorial(m + n)/(RisingFactorial(2, m + n)*factorial(m)*factorial(n)), (m, 0, zoo), (n, 0, zoo))\n``` \nand \n```\nSum(5**n*8**m*RisingFactorial(0.5, m)*RisingFactorial(0.5, n)*factorial(m + n)/(RisingFactorial(2, m + n)*factorial(m)*factorial(n)), (m, 0, zoo), (n, 0, zoo))\n```\nThese two are equal if seen carefully. But I am not able do this through any property of `appellf1`\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<code>==</code> checks equality symbolically",
  "id": "5b405c5689db5e701ca8dcdb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-07T06:23:18.532Z",
  "text": "`==` checks equality symbolically",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-07T07:04:28.082Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Isn&#39;t <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub><mo>(</mo><mi>a</mi><mo separator=\"true\">,</mo><msub><mi>b</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>b</mi><mn>2</mn></msub><mo separator=\"true\">;</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo>)</mo><mo>=</mo><msub><mi>F</mi><mn>1</mn></msub><mo>(</mo><mi>a</mi><mo separator=\"true\">,</mo><msub><mi>b</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>b</mi><mn>1</mn></msub><mo separator=\"true\">;</mo><mi>y</mi><mo separator=\"true\">,</mo><mi>x</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">F_1(a, b_1, b_2; x, y) = F_1(a, b_2, b_1; y, x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">F</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.13889em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">1</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mopen\">(</span><span class=\"mord mathit\">a</span><span class=\"mpunct\">,</span><span class=\"mord\"><span class=\"mord mathit\">b</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">1</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mpunct\">,</span><span class=\"mord\"><span class=\"mord mathit\">b</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">2</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mpunct\">;</span><span class=\"mord mathit\">x</span><span class=\"mpunct\">,</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mrel\">=</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">F</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.13889em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">1</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mopen\">(</span><span class=\"mord mathit\">a</span><span class=\"mpunct\">,</span><span class=\"mord\"><span class=\"mord mathit\">b</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">2</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mpunct\">,</span><span class=\"mord\"><span class=\"mord mathit\">b</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">1</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mpunct\">;</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mord mathit\">x</span><span class=\"mclose\">)</span></span></span></span>, by swapping <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">n</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">m</span></span></span></span> in the double sum in the definition? ",
  "id": "5b4065ee2f8ed24d3cf316e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-07T07:04:14.660Z",
  "text": "Isn't $$F_1(a, b_1, b_2; x, y) = F_1(a, b_2, b_1; y, x)$$, by swapping $$n$$ and $$m$$ in the double sum in the definition? ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "<a href=\"https://en.wikipedia.org/wiki/Appell_series\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://en.wikipedia.org/wiki/Appell_series</a>",
  "id": "5b4065f003235c461fa3cd75",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-07T07:04:16.548Z",
  "text": "https://en.wikipedia.org/wiki/Appell_series",
  "unread": false,
  "urls": [
   {
    "url": "https://en.wikipedia.org/wiki/Appell_series"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "You can also see that from the second definition on that page. The one that uses <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mrow></mrow><mn>2</mn></msub><msub><mi>F</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">{}_2F_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord textstyle uncramped\"></span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">2</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">F</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.13889em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">1</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span>",
  "id": "5b4066449dc6a66973969f1b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-07T07:05:40.120Z",
  "text": "You can also see that from the second definition on that page. The one that uses $${}_2F_1$$",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Yes they are equal . How to incorporate this in operations.<br>Example <code>ex1 =  F1(a, b1, b2, c, x, y)</code> and <code>ex2 = F1(a, b2, b1, c, y, x)</code> .<br><code>ex1</code> and <code>ex2</code> are equal . I modified <code>__eq__</code> accordingly. So, <code>ex1 ==ex2</code> returns <code>True</code> .<br>But when I do something like this <code>a*b*ex1 - b*a*ex2</code> , this does not result in <code>0</code>. ",
  "id": "5b40f1b37e23133ecb39c551",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-07T17:00:35.841Z",
  "text": "Yes they are equal . How to incorporate this in operations. \nExample `ex1 =  F1(a, b1, b2, c, x, y)` and `ex2 = F1(a, b2, b1, c, y, x)` .\n`ex1` and `ex2` are equal . I modified `__eq__` accordingly. So, `ex1 ==ex2` returns `True` .\nBut when I do something like this `a*b*ex1 - b*a*ex2` , this does not result in `0`. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "What should be the correct way ?",
  "id": "5b40f1f863042f2df35e7510",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-07T17:01:44.494Z",
  "text": "What should be the correct way ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "It&#39;s generally not good to make <code>__eq__</code> too smart. Instead, it would be better to write a simplification function that tries to simplify expressions with F1 ",
  "id": "5b40f2d68f5a1351395600da",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-07T17:05:26.268Z",
  "text": "It's generally not good to make `__eq__` too smart. Instead, it would be better to write a simplification function that tries to simplify expressions with F1 ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I wonder if this can be generalized. ",
  "id": "5b40f300e2d42269e37faf4c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-07T17:06:08.927Z",
  "text": "I wonder if this can be generalized. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "The Wiki page says that F1 is completely defined by some recurrence relations. But it isn&#39;t clear to me how to get this identity from those recurrences ",
  "id": "5b40f3158f5a1351395600dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-07T17:06:29.495Z",
  "text": "The Wiki page says that F1 is completely defined by some recurrence relations. But it isn't clear to me how to get this identity from those recurrences ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I would start a pull request implementing <code>appellf1</code> it and move the discussion there. ",
  "id": "5b40f358570da9100dae0c49",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-07T17:07:36.983Z",
  "text": "I would start a pull request implementing `appellf1` it and move the discussion there. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "okay. I am opening it.",
  "id": "5b40f36cbd92d807829bfb59",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-07T17:07:56.368Z",
  "text": "okay. I am opening it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"14882\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#14882</span>",
  "id": "5b40f69833b0282df40856aa",
  "issues": [
   {
    "number": "14882",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-07T17:21:28.316Z",
  "text": "https://github.com/sympy/sympy/pull/14882",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-11T20:12:15.492Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>I think I need to preprocess some trigonometric expressions.<br>In Mathematica </p><pre><code class=\"mathematica\"><span class=\"keyword\">In</span>[<span class=\"number\">108</span>]:= ex = <span class=\"keyword\">Tan</span>[x]\n       ex1 = <span class=\"number\">1</span>/<span class=\"keyword\">Cot</span>[x]\n\n<span class=\"keyword\">Out</span>[<span class=\"number\">108</span>]= <span class=\"keyword\">Tan</span>[x]\n<span class=\"keyword\">Out</span>[<span class=\"number\">109</span>]= <span class=\"keyword\">Tan</span>[x]</code></pre><p>But in sympy they are not equal. So <code>1/tan(x)</code> doesn&#39;t get matched to <code>cot(x_)</code>.</p>",
  "id": "5b4662cb95e03e3d7b40e81f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-11T20:04:27.299Z",
  "text": "I think I need to preprocess some trigonometric expressions. \nIn Mathematica \n```Mathematica\nIn[108]:= ex = Tan[x]\n       ex1 = 1/Cot[x]\n\nOut[108]= Tan[x]\nOut[109]= Tan[x]\n```\nBut in sympy they are not equal. So `1/tan(x)` doesn't get matched to `cot(x_)`.",
  "unread": false,
  "urls": [],
  "v": 7
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "maybe getting rid of <code>cot</code>?",
  "id": "5b4665ea1c0f906b144916f5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-11T20:17:46.078Z",
  "text": "maybe getting rid of `cot`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "transform all <code>cot</code> into <code>1/tan</code>, then add the same check when you call <code>rubi_integrate</code>",
  "id": "5b466617d1428e5aefde7559",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-11T20:18:31.250Z",
  "text": "transform all `cot` into `1/tan`, then add the same check when you call `rubi_integrate`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I think I should, transform all <code>1/cot</code> to <code>tan</code> and all <code>1/tan</code> to <code>cot</code>",
  "id": "5b4666419a612333aa573b8c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-11T20:19:13.441Z",
  "text": "I think I should, transform all `1/cot` to `tan` and all `1/tan` to `cot`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Mathematica does the same",
  "id": "5b46665c641ecc065f99346b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-11T20:19:40.068Z",
  "text": "Mathematica does the same",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Is there any sympy function which can be used to transform like this?",
  "id": "5b466aa8c02eb83d7c69edf0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-11T20:38:00.822Z",
  "text": "Is there any sympy function which can be used to transform like this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "user <code>trigsimp</code>",
  "id": "5b46f5d773026160f598873e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-12T06:31:51.307Z",
  "text": "user `trigsimp`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "<pre><code class=\"python\"><span class=\"prompt\">&gt;&gt;&gt; </span><span class=\"keyword\">from</span> sympy <span class=\"keyword\">import</span> * \n<span class=\"prompt\">&gt;&gt;&gt; </span><span class=\"keyword\">from</span> sympy.abc <span class=\"keyword\">import</span> x\n<span class=\"prompt\">&gt;&gt;&gt; </span>expr = <span class=\"number\">1</span>/cot(x)\n<span class=\"prompt\">&gt;&gt;&gt; </span>trigsimp(expr)\ntan(x)</code></pre>",
  "id": "5b46f5e5d1428e5aefdfd397",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-12T06:32:05.937Z",
  "text": "```python\n>>> from sympy import * \n>>> from sympy.abc import x\n>>> expr = 1/cot(x)\n>>> trigsimp(expr)\ntan(x)\n```\n\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "trigsimp doesn&#39;t transform <code>1/tan(x)</code> to <code>cot(x)</code>",
  "id": "5b46f6919a612333aa589f53",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-12T06:34:57.361Z",
  "text": "trigsimp doesn't transform `1/tan(x)` to `cot(x)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<blockquote>\nI think I should, transform all 1/cot to tan and all 1/tan to cot</blockquote>\n",
  "id": "5b46fef3866e0c6b159f674e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-12T07:10:43.321Z",
  "text": "> I think I should, transform all 1/cot to tan and all 1/tan to cot",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would still suggest to use <code>tan</code> only",
  "id": "5b46fefb9a612333aa58b58d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-12T07:10:51.825Z",
  "text": "I would still suggest to use `tan` only",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-12T07:13:15.964Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<pre><code class=\"python\">expr.replace(<span class=\"keyword\">lambda</span> x: isinstance(x, cot), <span class=\"keyword\">lambda</span> x: <span class=\"number\">1</span>/tan(x.args[<span class=\"number\">0</span>]))</code></pre>",
  "id": "5b46ff779a612333aa58b6da",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-12T07:12:55.785Z",
  "text": "```python\nexpr.replace(lambda x: isinstance(x, cot), lambda x: 1/tan(x.args[0]))\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "ok. so we need to do this transformation in rules (patterns) too.",
  "id": "5b4702da26aa91065e8bd164",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-12T07:27:22.246Z",
  "text": "ok. so we need to do this transformation in rules (patterns) too.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "yes, twice",
  "id": "5b4704d9d1428e5aefdfffe5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-12T07:35:53.055Z",
  "text": "yes, twice",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-12T07:36:21.184Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "also on the code generator, possibly",
  "id": "5b4704e3ba5f154b3b96c5cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-12T07:36:03.753Z",
  "text": "also on the code generator, possibly",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "There are specific trig simplification functions in the <code>fu</code> submodule ",
  "id": "5b477d9a5f3a92062a0de5a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-12T16:11:06.951Z",
  "text": "There are specific trig simplification functions in the `fu` submodule ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I fear they may be too invasive",
  "id": "5b484e1c1c0f906b144e3b24",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-13T07:00:44.027Z",
  "text": "I fear they may be too invasive",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ashishkg0022\" class=\"mention\">@ashishkg0022</span> shall the PR be prepared for merging?",
  "id": "5b48d08673026160f59e0402",
  "issues": [],
  "mentions": [
   {
    "screenName": "ashishkg0022",
    "userId": "58bd696cd73408ce4f4eb85b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-13T16:17:10.971Z",
  "text": "@ashishkg0022 shall the PR be prepared for merging?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I am testing a small part of each category of rules (due to less time it&#39;s not possible to test all )to make sure, rubi is stable and working properly for any kind of expression. I will finish it in 2-3 days. After that we should prepare  for merging.",
  "id": "5b48d59673026160f59e154a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-13T16:38:46.233Z",
  "text": "I am testing a small part of each category of rules (due to less time it's not possible to test all )to make sure, rubi is stable and working properly for any kind of expression. I will finish it in 2-3 days. After that we should prepare  for merging.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span>  we should prepare the PR for merging. I have updated the PR . ",
  "id": "5b4b3bfa66c1e833a9eacf75",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-15T12:20:10.173Z",
  "text": "@Upabjojr  we should prepare the PR for merging. I have updated the PR . ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-15T14:30:26.152Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I have not loaded  <code>Derivative_integration</code> . Its rules are little different. Current parser is unable to handle. They are less in number. Should I work on it ?<br>Here is an example of the rule : <pre><code class=\"mathematica\">Int[(c_.*F_^(a_.+b_.*x_))^p_.*<span class=\"keyword\">Derivative</span>[n_][f_][x_],x_Symbol] :=\n  (c*F^(a+b*x))^p*<span class=\"keyword\">Derivative</span>[n][f][x]/(b*p*<span class=\"keyword\">Log</span>[F]) - <span class=\"number\">1</span>/(b*p*<span class=\"keyword\">Log</span>[F])*Int[(c*F^(a+b*x))^p*<span class=\"keyword\">Derivative</span>[n+<span class=\"number\">1</span>][f][x],x] /;\n<span class=\"keyword\">FreeQ</span>[<span class=\"list\">{a,b,c,f,F,p}</span>,x] &amp;&amp; NegativeIntegerQ[n]</code></pre>",
  "id": "5b4b5a6e6534bc5d2e5deee9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-15T14:30:06.542Z",
  "text": "I have not loaded  `Derivative_integration` . Its rules are little different. Current parser is unable to handle. They are less in number. Should I work on it ? \nHere is an example of the rule : \n```Mathematica\nInt[(c_.*F_^(a_.+b_.*x_))^p_.*Derivative[n_][f_][x_],x_Symbol] :=\n  (c*F^(a+b*x))^p*Derivative[n][f][x]/(b*p*Log[F]) - 1/(b*p*Log[F])*Int[(c*F^(a+b*x))^p*Derivative[n+1][f][x],x] /;\nFreeQ[{a,b,c,f,F,p},x] && NegativeIntegerQ[n]\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span>  Last year you worked on <code>Piecewise funtions</code> . I have not seen them.  Will they work properly ? Or Is there some issue with <code>Piecewise</code> rules ?",
  "id": "5b4b5adbc02eb83d7c7752e8",
  "issues": [],
  "mentions": [
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-15T14:31:55.325Z",
  "text": "@parsoyaarihant  Last year you worked on `Piecewise funtions` . I have not seen them.  Will they work properly ? Or Is there some issue with `Piecewise` rules ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Leaving the above two, I have loaded all rules and the loading time is around <code>10 minutes</code>",
  "id": "5b4b5b1d866e0c6b15ab3fc1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-15T14:33:01.716Z",
  "text": "Leaving the above two, I have loaded all rules and the loading time is around `10 minutes`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-15T14:34:05.126Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "And for all loaded rules there are some test cases , that are tested",
  "id": "5b4b5b50582aaa63076d05b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-15T14:33:52.886Z",
  "text": "And for all loaded rules there are some test cases , that are tested",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "There are total 6998 rules that are loaded now. ",
  "id": "5b4b5ba96534bc5d2e5df31c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-15T14:35:21.854Z",
  "text": "There are total 6998 rules that are loaded now. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>The last rule (6998th one), has been commented, because  the rule is like this </p><pre><code><span class=\"built_in\">Int</span>[u_,x_] := <span class=\"built_in\">Int</span>[u,x]</code></pre><p>we must avoid it or else many expressions will get macthed to this first.</p>",
  "id": "5b4b5cbe1c0f906b1456773a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-15T14:39:58.597Z",
  "text": "The last rule (6998th one), has been commented, because  the rule is like this \n```\nInt[u_,x_] := Int[u,x]\n```\nwe must avoid it or else many expressions will get macthed to this first.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<code>parse_full_form</code> is unable to handle fullform of this <code>Derivative[n_][f_][x_]</code> .  Can someone help it out ?",
  "id": "5b4b5fad95e03e3d7b4e2487",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-15T14:52:29.810Z",
  "text": "`parse_full_form` is unable to handle fullform of this `Derivative[n_][f_][x_]` .  Can someone help it out ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "What more should be done in the main PR ? Is documentation needed for each utility function ?<br>Also, we are missing complete implementation of <code>apart</code>.  <code>Multivariate partial fraction decomposition</code> is not implemented in sympy. Should I implement it ? It will be good for future versions of rubi.<br>Or should I move on to implement <code>utility function</code> of latest version of rubi ?",
  "id": "5b4f940ea94c5255523f141a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-18T19:25:02.222Z",
  "text": "What more should be done in the main PR ? Is documentation needed for each utility function ? \nAlso, we are missing complete implementation of `apart`.  `Multivariate partial fraction decomposition` is not implemented in sympy. Should I implement it ? It will be good for future versions of rubi. \nOr should I move on to implement `utility function` of latest version of rubi ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "Documentation isn&#39;t needed for all of those I guess, try covering as much as possible. ",
  "id": "5b50cd663187ca3ee8c29e75",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-19T17:41:58.397Z",
  "text": "Documentation isn't needed for all of those I guess, try covering as much as possible. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "What is missing in apart?",
  "id": "5b51ffbec579673e6b83448a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-20T15:29:02.899Z",
  "text": "What is missing in apart?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<code>Multivariate partial fraction decompositon</code> . I went through a paper by Stoutemyer . But, as I have not worked with <code>polys</code>, it looked complicated to me.",
  "id": "5b520032b2411177a25dc1bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-20T15:30:58.827Z",
  "text": "`Multivariate partial fraction decompositon` . I went through a paper by Stoutemyer . But, as I have not worked with `polys`, it looked complicated to me.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Yes, it is",
  "id": "5b52136af9ffc4664befedbf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-20T16:52:58.037Z",
  "text": "Yes, it is",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the algorithms there are not trivial",
  "id": "5b521378c331e035520849e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-20T16:53:12.936Z",
  "text": "the algorithms there are not trivial",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "plus they define a lot of algebraic groups",
  "id": "5b52138232fa1b740855f545",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-20T16:53:22.269Z",
  "text": "plus they define a lot of algebraic groups",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Abdullahjavednesar\" class=\"mention\">@Abdullahjavednesar</span> <span data-link-type=\"mention\" data-screen-name=\"parsoyaarihant\" class=\"mention\">@parsoyaarihant</span> any objections to merge the PR?",
  "id": "5b521398b2411177a25dfd0d",
  "issues": [],
  "mentions": [
   {
    "screenName": "Abdullahjavednesar",
    "userId": "582624b4d73408ce4f353d2c",
    "userIds": []
   },
   {
    "screenName": "parsoyaarihant",
    "userId": "5698a759e610378809bc6de7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-20T16:53:44.288Z",
  "text": "@Abdullahjavednesar @parsoyaarihant any objections to merge the PR?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/parsoyaarihant",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15258498?v=4&s=60",
   "displayName": "Arihant Parsoya",
   "gv": "4",
   "id": "5698a759e610378809bc6de7",
   "url": "/parsoyaarihant",
   "username": "parsoyaarihant",
   "v": 23
  },
  "html": "I dont have have any problems with the merge",
  "id": "5b522d9e4b880b3e6a3a93b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-20T18:44:46.170Z",
  "text": "I dont have have any problems with the merge",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Abdullahjavednesar",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20975634?v=4&s=60",
   "displayName": "Abdullah Javed Nesar",
   "gv": "4",
   "id": "582624b4d73408ce4f353d2c",
   "url": "/Abdullahjavednesar",
   "username": "Abdullahjavednesar",
   "v": 18
  },
  "html": "Yah, we should merge now.",
  "id": "5b55dc624b880b3e6a428ea8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-23T13:47:14.826Z",
  "text": "Yah, we should merge now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-23T16:53:15.480Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Till now I have not worked on <code>utility functions</code> separately. While testing if there was an exception or a missing function, then I fixed it. But I think, I need to work on them separately. They can be improved more. So I have opened a new PR  <span data-link-type=\"issue\" data-issue=\"14956\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#14956</span> to improve utility functions and also to update them. Once the current main PR  is merged, we can move on to merging the  latter.",
  "id": "5b5607ecee530e4aac913883",
  "issues": [
   {
    "number": "14956",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-23T16:53:00.792Z",
  "text": "Till now I have not worked on `utility functions` separately. While testing if there was an exception or a missing function, then I fixed it. But I think, I need to work on them separately. They can be improved more. So I have opened a new PR  https://github.com/sympy/sympy/pull/14956 to improve utility functions and also to update them. Once the current main PR  is merged, we can move on to merging the  latter.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "We should merge the main PR as soon as possible.",
  "id": "5b5608384b880b3e6a43260a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-23T16:54:16.544Z",
  "text": "We should merge the main PR as soon as possible.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<p>Also I  had a talk with Albert recently regarding piecewise rules. I am quoting him here</p><blockquote>\n<p>To tell you the truth, \u201c9.3 Piecewise linear functions.nb\u201d is actually just an experimental file waiting to be developed.  It is not required for the rest of Rubi, and can safely be ignored. </p></blockquote>\n",
  "id": "5b560e7263cf1636bde82449",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-23T17:20:50.072Z",
  "text": "Also I  had a talk with Albert recently regarding piecewise rules. I am quoting him here\n> To tell you the truth, \u201c9.3 Piecewise linear functions.nb\u201d is actually just an experimental file waiting to be developed.  It is not required for the rest of Rubi, and can safely be ignored. \n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "well... what about trying the code generation?",
  "id": "5b5762a04b880b3e6a47087e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-24T17:32:16.626Z",
  "text": "well... what about trying the code generation?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "MatchPy supports code generation from the rules",
  "id": "5b5762aaf10ffa0b48ac350f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-24T17:32:26.324Z",
  "text": "MatchPy supports code generation from the rules",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "could you please try it and check if it works?",
  "id": "5b5762b805e1cc355309f478",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-24T17:32:40.561Z",
  "text": "could you please try it and check if it works?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I will try. But I think it will be little hard for me. we need some one from matchpy. Last year <span data-link-type=\"mention\" data-screen-name=\"wheerd\" class=\"mention\">@wheerd</span>  wrote a code generation code . But it won&#39;t be of much use this year because a lot has been changed in the structure of rubi.",
  "id": "5b57e4cd07be4357bdea4f00",
  "issues": [],
  "mentions": [
   {
    "screenName": "wheerd",
    "userId": "57ef0193d73408ce4f2ae298",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-25T02:47:41.955Z",
  "text": "I will try. But I think it will be little hard for me. we need some one from matchpy. Last year @wheerd  wrote a code generation code . But it won't be of much use this year because a lot has been changed in the structure of rubi.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "well... just try to use it",
  "id": "5b58352393395d1d9648029d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-25T08:30:27.071Z",
  "text": "well... just try to use it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I mean, the code generator is meant to handle any MatchPy rules",
  "id": "5b583749b1b9572ed3dc520e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-25T08:39:37.293Z",
  "text": "I mean, the code generator is meant to handle any MatchPy rules",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "when <span data-link-type=\"mention\" data-screen-name=\"wheerd\" class=\"mention\">@wheerd</span> had tried it, the generated code was enormous",
  "id": "5b58376be5fc191d959ade10",
  "issues": [],
  "mentions": [
   {
    "screenName": "wheerd",
    "userId": "57ef0193d73408ce4f2ae298",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-25T08:40:11.942Z",
  "text": "when @wheerd had tried it, the generated code was enormous",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I suspect it was because of the repeated definitions of the <code>lambda</code> functions",
  "id": "5b58378c93395d1d96480c67",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-25T08:40:44.366Z",
  "text": "I suspect it was because of the repeated definitions of the `lambda` functions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I believe that now the generated code is going to be much smaller",
  "id": "5b5837985301255724c3af55",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-25T08:40:56.630Z",
  "text": "I believe that now the generated code is going to be much smaller",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "You known... the current version still needs 5 minutes to load",
  "id": "5b5837abdb8bd24550af43cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-25T08:41:15.414Z",
  "text": "You known... the current version still needs 5 minutes to load",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "that is still too much",
  "id": "5b5837b393395d1d96480cb7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-25T08:41:23.470Z",
  "text": "that is still too much",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I hope that the generated code will cancel that loading time",
  "id": "5b5837c36dd1ab57233b382c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-25T08:41:39.074Z",
  "text": "I hope that the generated code will cancel that loading time",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "the current version with all rules takes around 10 minutes",
  "id": "5b583e8532d98c2ed2b30ea4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-25T09:10:29.129Z",
  "text": "the current version with all rules takes around 10 minutes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I will try it",
  "id": "5b583eafe5fc191d959af418",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-25T09:11:11.564Z",
  "text": "I will try it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-25T11:40:00.859Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "Also here is the gist <a href=\"https://gist.github.com/wheerd/13ac5a0e9b560db6201d96136fa0bbcc\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gist.github.com/wheerd/13ac5a0e9b560db6201d96136fa0bbcc</a> ",
  "id": "5b58617f32d98c2ed2b379ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-25T11:39:43.048Z",
  "text": "Also here is the gist https://gist.github.com/wheerd/13ac5a0e9b560db6201d96136fa0bbcc \n",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/wheerd/13ac5a0e9b560db6201d96136fa0bbcc"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "It will not work for any type of rules. It need changes",
  "id": "5b5861b4db4bcb16e87718bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-25T11:40:36.858Z",
  "text": "It will not work for any type of rules. It need changes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-25T13:29:12.603Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I have opened an issue <span data-link-type=\"issue\" data-issue=\"33\" data-issue-repo=\"HPAC/matchpy\" class=\"issue\">HPAC/matchpy#33</span> ,  to get some help from matchpy&#39;s side. I also went through their docs but they have no docs on code generation.<br>I also have sent a mail to <span data-link-type=\"mention\" data-screen-name=\"wheerd\" class=\"mention\">@wheerd</span> , asking if he could help a little.",
  "id": "5b587ae6e5fc191d959bbb7e",
  "issues": [
   {
    "number": "33",
    "repo": "HPAC/matchpy"
   }
  ],
  "mentions": [
   {
    "screenName": "wheerd",
    "userId": "57ef0193d73408ce4f2ae298",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-25T13:28:06.469Z",
  "text": "I have opened an issue https://github.com/HPAC/matchpy/issues/33 ,  to get some help from matchpy's side. I also went through their docs but they have no docs on code generation.\nI also have sent a mail to @wheerd , asking if he could help a little.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I remember that I have been able to generate some code with their tool",
  "id": "5b588702d2f0934551ceacce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-25T14:19:46.388Z",
  "text": "I remember that I have been able to generate some code with their tool",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "it&#39;s just a matter of understanding their API",
  "id": "5b5887106dd1ab57233c2ee4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-25T14:20:00.010Z",
  "text": "it's just a matter of understanding their API",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span>  I tried code generation . I encountered 2 problems.<ol>\n<li>If I generate code for each separate file of rules, we get generated code. Like, for <code>linear_products</code>, <code>quadratic_products</code> , etc separately gives separated generated code fine. But If I run code generation on all set of rules, it results in a recursion error.</li>\n<li>Working  on a generated code, we always get an key error. In this issue <span data-link-type=\"issue\" data-issue=\"33\" data-issue-repo=\"HPAC/matchpy\" class=\"issue\">HPAC/matchpy#33</span> , I have added a comment regarding this. <code>generated.py</code> is created but doesn&#39;t work properly. I tried to find the possible cause. It&#39;s the <code>final_label</code> function in matchpy that needs to be redefined. Last year <span data-link-type=\"mention\" data-screen-name=\"wheerd\" class=\"mention\">@wheerd</span> had redefined this function for rubi. It can be seen in the gist. If we get this function working properly, we will probably get working code generation.</li>\n</ol>\n",
  "id": "5b59d0c2db8bd24550b40522",
  "issues": [
   {
    "number": "33",
    "repo": "HPAC/matchpy"
   }
  ],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   },
   {
    "screenName": "wheerd",
    "userId": "57ef0193d73408ce4f2ae298",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-26T13:46:42.527Z",
  "text": "@Upabjojr  I tried code generation . I encountered 2 problems.\n1. If I generate code for each separate file of rules, we get generated code. Like, for `linear_products`, `quadratic_products` , etc separately gives separated generated code fine. But If I run code generation on all set of rules, it results in a recursion error.\n2. Working  on a generated code, we always get an key error. In this issue https://github.com/HPAC/matchpy/issues/33 , I have added a comment regarding this. `generated.py` is created but doesn't work properly. I tried to find the possible cause. It's the `final_label` function in matchpy that needs to be redefined. Last year @wheerd had redefined this function for rubi. It can be seen in the gist. If we get this function working properly, we will probably get working code generation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "do you think you can fix the problems with the code generator? I fear that <span data-link-type=\"mention\" data-screen-name=\"wheerd\" class=\"mention\">@wheerd</span> is not working on MatchPy anymore.",
  "id": "5b59f69dd2f0934551d31710",
  "issues": [],
  "mentions": [
   {
    "screenName": "wheerd",
    "userId": "57ef0193d73408ce4f2ae298",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-26T16:28:13.389Z",
  "text": "do you think you can fix the problems with the code generator? I fear that @wheerd is not working on MatchPy anymore.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I  tried a lot . I tried different structure, also I tried only matcher without replacer, but every time  I end in a <code>keyerror</code>. ",
  "id": "5b5a01e4be87b449ce578b7d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-26T17:16:20.243Z",
  "text": "I  tried a lot . I tried different structure, also I tried only matcher without replacer, but every time  I end in a `keyerror`. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "You can try raising the <code>sys.setrecursionlimit</code>. Most likely the code will need to be rewritten non-recursively ",
  "id": "5b5a3d490d8dd257d62806f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-26T21:29:45.653Z",
  "text": "You can try raising the `sys.setrecursionlimit`. Most likely the code will need to be rewritten non-recursively ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "can you share the code you&#39;ve generated?",
  "id": "5b5b113b07be4357bdf3e670",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-27T12:34:03.409Z",
  "text": "can you share the code you've generated?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<a href=\"https://github.com/ashishkg0022/rubi_code_generation\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/ashishkg0022/rubi_code_generation</a>",
  "id": "5b5b25d2b9a1803f20611f9d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-27T14:01:54.124Z",
  "text": "https://github.com/ashishkg0022/rubi_code_generation",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/ashishkg0022/rubi_code_generation"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I uploaded it here",
  "id": "5b5b25de46235249cd5817fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-27T14:02:06.324Z",
  "text": "I uploaded it here",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I have generated only for <code>linear_product</code>.",
  "id": "5b5b25f4a31e386158b7ba12",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-27T14:02:28.172Z",
  "text": "I have generated only for `linear_product`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "For last 2 days, I have been trying different ways and now I think I have got one which might work for us . I have tested it for 2-3 rule. But structure of rubi is different from current. We will be unable to test it on all rules. But I can surely try it for 1 or 2 rule files, like <code>linear_products</code> . And it can be added separately in sympy with instructions. As future work we can include the testing of code generation on all set of rule.",
  "id": "5b5b2c06a31e386158b7e1a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-27T14:28:22.454Z",
  "text": "For last 2 days, I have been trying different ways and now I think I have got one which might work for us . I have tested it for 2-3 rule. But structure of rubi is different from current. We will be unable to test it on all rules. But I can surely try it for 1 or 2 rule files, like `linear_products` . And it can be added separately in sympy with instructions. As future work we can include the testing of code generation on all set of rule.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "what happens if you try 1 or 2 rules?",
  "id": "5b5b2c5746235249cd584339",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-27T14:29:43.828Z",
  "text": "what happens if you try 1 or 2 rules?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I&#39;m insisting on the code generator because it is the only way we have to make <code>rubi</code> useable",
  "id": "5b5b2c85db8bd24550b8eb5a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-27T14:30:29.860Z",
  "text": "I'm insisting on the code generator because it is the only way we have to make `rubi` useable",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "10 minutes loading time is too much... I would advise against pickling as it depends on the Python version",
  "id": "5b5b2ca14d2e050b455bdce0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-27T14:30:57.516Z",
  "text": "10 minutes loading time is too much... I would advise against pickling as it depends on the Python version",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "It gives correct result. Actually what I am doing now is using <code>ManyToOneMatcher</code> instead of <code>ManyToOneReplacer</code> and for every pattern, I am including a <code>label</code>. When a expression is matched, with the help of <code>label</code>, I can call replacement function separately.",
  "id": "5b5b2ce8bd17b961590a3cd1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-27T14:32:08.096Z",
  "text": "It gives correct result. Actually what I am doing now is using `ManyToOneMatcher` instead of `ManyToOneReplacer` and for every pattern, I am including a `label`. When a expression is matched, with the help of `label`, I can call replacement function separately.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "I will surely try hard to get codegeneration working. I need a liitle more time to test this structure. I just found this way now.",
  "id": "5b5b2d1607be4357bdf49129",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-27T14:32:54.843Z",
  "text": "I will surely try hard to get codegeneration working. I need a liitle more time to test this structure. I just found this way now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the key matching looks like a bug in MatchPy",
  "id": "5b5b2d66b9a1803f20614c77",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-27T14:34:14.417Z",
  "text": "the key matching looks like a bug in MatchPy",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "or in the code generation",
  "id": "5b5b2d6e4d2e050b455be0e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-27T14:34:22.320Z",
  "text": "or in the code generation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "in Matchpy",
  "id": "5b5b2d766dd1ab572344c095",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-27T14:34:30.073Z",
  "text": "in Matchpy",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "unfortunately the MatchPy developers are not there anymore, I fear",
  "id": "5b5b2d7fb9a1803f20614d38",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-27T14:34:39.743Z",
  "text": "unfortunately the MatchPy developers are not there anymore, I fear",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "but you could try to contact Bartels",
  "id": "5b5b2d9c6dd1ab572344c1a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-27T14:35:08.874Z",
  "text": "but you could try to contact Bartels",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "But the cause of <code>keyerror</code> is a wrong label. And in <code>ManyToOneReplacer</code>, we cant provide a label. It takes replacement function as the label. But it works fine with separate <code>Matcher</code>. ",
  "id": "5b5b2de25301255724cd392a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-27T14:36:18.784Z",
  "text": "But the cause of `keyerror` is a wrong label. And in `ManyToOneReplacer`, we cant provide a label. It takes replacement function as the label. But it works fine with separate `Matcher`. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-27T14:37:22.708Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ashishkg0022",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21151623?v=4&s=60",
   "displayName": "Ashish Kumar Gaurav ",
   "gv": "4",
   "id": "58bd696cd73408ce4f4eb85b",
   "url": "/ashishkg0022",
   "username": "ashishkg0022",
   "v": 27
  },
  "html": "<blockquote>\n<p>but you could try to contact Bartels </p></blockquote>\n<p> Ok</p>",
  "id": "5b5b2e144d2e050b455be3b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-27T14:37:08.925Z",
  "text": "> but you could try to contact Bartels \n\n\n Ok",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "editedAt": "2018-07-27T18:37:25.281Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "<blockquote>\n<p>unfortunately the MatchPy developers are not there anymore, I fear</p></blockquote>\n<p><span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> this is exactly the thing I was worried would happen a year ago when we decided to use matchpy. On the repo I see the most recent commit was about a month ago. </p>",
  "id": "5b5b665cff6fdf3b8c712eb4",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-27T18:37:16.303Z",
  "text": "> unfortunately the MatchPy developers are not there anymore, I fear\n\n@Upabjojr this is exactly the thing I was worried would happen a year ago when we decided to use matchpy. On the repo I see the most recent commit was about a month ago. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "IIRC, MatchPy was wheerd&#39;s Master&#39;s thesis.",
  "id": "5b5b6e44331546584573b238",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-27T19:11:00.815Z",
  "text": "IIRC, MatchPy was wheerd's Master's thesis.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> the alternative would have been to start our own library from zero",
  "id": "5b5b6e80331546584573b2a9",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-27T19:12:00.501Z",
  "text": "@asmeurer the alternative would have been to start our own library from zero",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Well if the library is no longer being maintained, will we be able to maintain it now?",
  "id": "5b5b6e9cff6fdf3b8c712ecb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-27T19:12:28.861Z",
  "text": "Well if the library is no longer being maintained, will we be able to maintain it now?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I still believe that MatchPy is stable enough to be used by us",
  "id": "5b5b6ea3448122584439dca0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-27T19:12:35.354Z",
  "text": "I still believe that MatchPy is stable enough to be used by us",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Yes, in case it will be abandoned, we could potentially fork it",
  "id": "5b5b6ec1bf7544660667d22a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-27T19:13:05.362Z",
  "text": "Yes, in case it will be abandoned, we could potentially fork it",
  "unread": false,
  "urls": [],
  "v": 1
 }
]