[
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Hi!",
  "id": "5ae2d22e1130fe3d3620d763",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-27T07:33:02.717Z",
  "text": "Hi!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Hello!",
  "id": "5ae2e704109bb043320826f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-27T09:01:56.443Z",
  "text": "Hello!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-04-27T09:18:34.497Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I will try to set up my blog on GitHub pages, as suggested  <span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> in his google forum post. If I am not able to do so (I am not familiar with GitHub pages, but I created the repository for it), I will start the blog on Blogger/Wordpress. Is there any deadline for it, before 14th May?",
  "id": "5ae2eaa5b01085166cc812b0",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-27T09:17:25.473Z",
  "text": "I will try to set up my blog on GitHub pages, as suggested  @asmeurer in his google forum post. If I am not able to do so (I am not familiar with GitHub pages, but I created the repository for it), I will start the blog on Blogger/Wordpress. Is there any deadline for it, before 14th May?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I guess this period is called &quot;community bonding&quot;, I don&#39;t know about any other deadline",
  "id": "5ae2f7f2dad6fb186ff14d1e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-27T10:14:10.575Z",
  "text": "I guess this period is called \"community bonding\", I don't know about any other deadline",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Google will probably communicate info about deadlines during the GSoC",
  "id": "5ae2f8051130fe3d36219a6a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-27T10:14:29.775Z",
  "text": "Google will probably communicate info about deadlines during the GSoC",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Concerning the project... your proposal about the stochastic processes looks a bit like a &quot;simulator&quot;",
  "id": "5ae2f8315d7286b43a732d41",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-27T10:15:13.803Z",
  "text": "Concerning the project... your proposal about the stochastic processes looks a bit like a \"simulator\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I don&#39;t think that&#39;s the right approach for SymPy",
  "id": "5ae2f8416d7e07082b3d179f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-27T10:15:29.384Z",
  "text": "I don't think that's the right approach for SymPy",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I believe a stochastic process should be handled like an indexed random variable",
  "id": "5ae2f850270d7d370810605b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-27T10:15:44.912Z",
  "text": "I believe a stochastic process should be handled like an indexed random variable",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "This requires two classes, the unindexed (i.e. <code>A</code>) and the indexed one (i.e. <code>A[i]</code>).",
  "id": "5ae2f873dad6fb186ff14f47",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-27T10:16:19.646Z",
  "text": "This requires two classes, the unindexed (i.e. `A`) and the indexed one (i.e. `A[i]`).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "at this point you act like with ordinary random symbols, e.g. <code>P(Equal(A[i] == x))</code>",
  "id": "5ae2f8da270d7d3708106440",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-27T10:18:02.109Z",
  "text": "at this point you act like with ordinary random symbols, e.g. `P(Equal(A[i] == x))`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the probability space and domain of <code>A[i]</code> is probably the infinite Cartesian product of the base domain, I don&#39;t even know if SymPy supports such a thing",
  "id": "5ae2f91f6d7e07082b3d1b0d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-27T10:19:11.564Z",
  "text": "the probability space and domain of `A[i]` is probably the infinite Cartesian product of the base domain, I don't even know if SymPy supports such a thing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "For the current random variables we have:<pre><code class=\"python\">In [<span class=\"number\">2</span>]: N = Normal(<span class=\"string\">\"N\"</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>)\n\nIn [<span class=\"number\">3</span>]: N.pspace.domain\nOut[<span class=\"number\">3</span>]: Domain: -\u221e &lt; N \u2227 N &lt; \u221e</code></pre>",
  "id": "5ae2fa515d7286b43a7334f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-27T10:24:17.931Z",
  "text": "For the current random variables we have:\n```python\nIn [2]: N = Normal(\"N\", 3, 2)\n\nIn [3]: N.pspace.domain\nOut[3]: Domain: -\u221e < N \u2227 N < \u221e\n\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<pre><code class=\"python\">In [<span class=\"number\">8</span>]: N.pspace.domain.set\nOut[<span class=\"number\">8</span>]: (-\u221e, \u221e)</code></pre>",
  "id": "5ae2fa5a270d7d3708106c71",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-27T10:24:26.697Z",
  "text": "```python\nIn [8]: N.pspace.domain.set\nOut[8]: (-\u221e, \u221e)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-04-27T10:27:53.356Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<p>In the case of a stochastic process I would expect:</p><pre><code class=\"python\"><span class=\"prompt\">&gt;&gt;&gt; </span>A.pspace.domain.set\n(-\u221e, \u221e) \u00d7 (-\u221e, \u221e) \u00d7 (-\u221e, \u221e) \u00d7 ...  <span class=\"comment\"># Infinitely many</span>\n<span class=\"prompt\">&gt;&gt;&gt; </span>A[i].pspace.domain.set\n(-\u221e, \u221e)</code></pre><p>That is, I see the stochastic process as a way to define a joint probability distribution on infinitely many random symbols. Am I correct?</p>",
  "id": "5ae2fa6f6d7e07082b3d2007",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-27T10:24:47.835Z",
  "text": "In the case of a stochastic process I would expect:\n```python\n>>> A.pspace.domain.set\n(-\u221e, \u221e) \u00d7 (-\u221e, \u221e) \u00d7 (-\u221e, \u221e) \u00d7 ...  # Infinitely many\n>>> A[i].pspace.domain.set\n(-\u221e, \u221e)\n```\nThat is, I see the stochastic process as a way to define a joint probability distribution on infinitely many random symbols. Am I correct?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Probably <code>A</code> without index should not be considered a random symbol, but we can decide this later.",
  "id": "5ae2fc431130fe3d3621aaf6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-27T10:32:35.397Z",
  "text": "Probably `A` without index should not be considered a random symbol, but we can decide this later.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "You are right about my suggested implementation being more of a simulator;  it should be done the way you suggest.<br>One issue that needs to be considered is that SymPy supports only a finite cartesian product of a given domain.",
  "id": "5ae2fe1915c9b0311440125c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-27T10:40:25.048Z",
  "text": "You are right about my suggested implementation being more of a simulator;  it should be done the way you suggest.  \nOne issue that needs to be considered is that SymPy supports only a finite cartesian product of a given domain.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-04-27T10:42:19.972Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<blockquote>\n<p>the probability space and domain of <code>A[i]</code> is probably the infinite Cartesian product of the base domain, I don&#39;t even know if SymPy supports such a thing</p></blockquote>\n<p>The domain of <code>A[i]</code> would simply be the base domain, and the domain of <code>A</code> would be the Cartesian product, right? </p>",
  "id": "5ae2fe73b01085166cc86c65",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-27T10:41:55.707Z",
  "text": "> the probability space and domain of `A[i]` is probably the infinite Cartesian product of the base domain, I don't even know if SymPy supports such a thing\n\nThe domain of `A[i]` would simply be the base domain, and the domain of `A` would be the Cartesian product, right? ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Well, that&#39;s the idea, but I&#39;m up to discuss. If you find a better proposal, feel free to suggest.",
  "id": "5ae326be6d7e07082b3e0cd3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-27T13:33:50.210Z",
  "text": "Well, that's the idea, but I'm up to discuss. If you find a better proposal, feel free to suggest.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Also we need to make sure that the way we are going to implement it is compatible with the mathematical definitions",
  "id": "5ae326e715c9b0311440ef88",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-27T13:34:31.457Z",
  "text": "Also we need to make sure that the way we are going to implement it is compatible with the mathematical definitions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-04-27T16:17:54.222Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I can&#39;t think of anything else right now, and the only issue I think would be the infinite Cartesian product. I will try to find alternatives, or try to come up with an implementation of the infinite product.    ",
  "id": "5ae34d1162316e0505082353",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-27T16:17:21.271Z",
  "text": "I can't think of anything else right now, and the only issue I think would be the infinite Cartesian product. I will try to find alternatives, or try to come up with an implementation of the infinite product.    ",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I don&#39;t think that it would be necessary to implement infinite Cartesian products. A (growing) sequence of finite products would probably suffice.",
  "id": "5ae410302b9dfdbc3ad9fd73",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-28T06:09:52.843Z",
  "text": "I don't think that it would be necessary to implement infinite Cartesian products. A (growing) sequence of finite products would probably suffice.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Please correct me if I am wrong, but wouldn&#39;t a growing sequence mean that we are implementing something more like a simulation? ",
  "id": "5ae4176a2d0e228d7bbefe68",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-28T06:40:42.850Z",
  "text": "Please correct me if I am wrong, but wouldn't a growing sequence mean that we are implementing something more like a simulation? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-04-28T07:01:09.707Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I mean this: At any one time we are dealing with only a finite number of random variables. Hence it should suffice to consider a probability space for those variables. When new variables are introduced, the space would be extended.",
  "id": "5ae41c0cb01085166ccd38dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-28T07:00:28.623Z",
  "text": "I mean this: At any one time we are dealing with only a finite number of random variables. Hence it should suffice to consider a probability space for those variables. When new variables are introduced, the space would be extended.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Oh okay. Thanks for explaining.",
  "id": "5ae41c8a7c3a01610d2cc2a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-28T07:02:34.483Z",
  "text": "Oh okay. Thanks for explaining.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "We can still imagine having an infinite cartesian product, but  we can split it into a finite product that would determine the values of the first n random variables and (abstract) infinite tail product that does not affect the values of those variables. Each one of the first n variables is a function that is fully determined by its values on the finite product.",
  "id": "5ae41f4e270d7d3708153aa5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-28T07:14:22.371Z",
  "text": "We can still imagine having an infinite cartesian product, but  we can split it into a finite product that would determine the values of the first n random variables and (abstract) infinite tail product that does not affect the values of those variables. Each one of the first n variables is a function that is fully determined by its values on the finite product.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Okay. And all this would go into a seperate class, from where the user can create a seperate object for the process, and use it as it is somewhere, or generate values according to the process, right?",
  "id": "5ae428622d0e228d7bbf3dd1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-28T07:53:06.538Z",
  "text": "Okay. And all this would go into a seperate class, from where the user can create a seperate object for the process, and use it as it is somewhere, or generate values according to the process, right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I have no clear idea of the implementation (yet). Before settling on a definition, I would experiment with some simple cases such as random walk and Markov chains creating some (special) classes that would seem to be fitting. Maybe a more general definition could then be devised after the experiments.",
  "id": "5ae429ba2d0e228d7bbf4326",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-28T07:58:50.510Z",
  "text": "I have no clear idea of the implementation (yet). Before settling on a definition, I would experiment with some simple cases such as random walk and Markov chains creating some (special) classes that would seem to be fitting. Maybe a more general definition could then be devised after the experiments.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Okay. I will create prototypes for them once my exams are over, and will continue working on them along with the work planned as per the timeline (if it doesn&#39;t need to change)",
  "id": "5ae42f62270d7d370815770b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-28T08:22:58.813Z",
  "text": "Okay. I will create prototypes for them once my exams are over, and will continue working on them along with the work planned as per the timeline (if it doesn't need to change)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I&#39;ve just thought of a possible complication: stochastic processes may not just be discrete, but also continuous. In the continuous case the index is a real number, not an integer.",
  "id": "5ae4d4ad2b9dfdbc3adcb093",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-28T20:08:13.098Z",
  "text": "I've just thought of a possible complication: stochastic processes may not just be discrete, but also continuous. In the continuous case the index is a real number, not an integer.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I guess the tricky part of stochastic processes is to actually find a way to encode the definition into a joint probability distribution.",
  "id": "5ae4d650b01085166ccfb5fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-28T20:15:12.551Z",
  "text": "I guess the tricky part of stochastic processes is to actually find a way to encode the definition into a joint probability distribution.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-04-28T20:17:47.453Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<p>maybe it will be necessary to hard-code some rules... for example the simplification </p><pre><code class=\"python\">P(X[i+<span class=\"number\">1</span>], Intersection(X[i], X[i-<span class=\"number\">1</span>])) ===&gt; P(X[i+<span class=\"number\">1</span>], X[i])</code></pre><p>valid for Markov processes</p>",
  "id": "5ae4d6bd270d7d370817c260",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-28T20:17:01.262Z",
  "text": "maybe it will be necessary to hard-code some rules... for example the simplification \n\n```python\nP(X[i+1], Intersection(X[i], X[i-1])) ===> P(X[i+1], X[i])\n```\n\nvalid for Markov processes",
  "unread": false,
  "urls": [],
  "v": 5
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": " <span data-link-type=\"mention\" data-screen-name=\"akash9712\" class=\"mention\">@akash9712</span> the official starting date in May 14th. Did you finish your exams and are you ready to start by that date?",
  "id": "5af179e500dc488804a36d9e",
  "issues": [],
  "mentions": [
   {
    "screenName": "akash9712",
    "userId": "588704f7d73408ce4f459eb5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-08T10:20:21.246Z",
  "text": " @akash9712 the official starting date in May 14th. Did you finish your exams and are you ready to start by that date?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "My exams are still on, and would be over on 11th. I&#39;ll start the coding then, i.e. before 14th, if that&#39;s okay. I am sorry, I was not very active during the community bonding period due to my exams.",
  "id": "5af3060f97e5506e04ac23da",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-09T14:30:39.122Z",
  "text": "My exams are still on, and would be over on 11th. I'll start the coding then, i.e. before 14th, if that's okay. I am sorry, I was not very active during the community bonding period due to my exams.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "OK good!",
  "id": "5af3fb10d332ee5fad092cba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-10T07:56:00.692Z",
  "text": "OK good!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Hi! I am starting with the project today, beginning with PR <span data-link-type=\"issue\" data-issue=\"14218\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#14218</span>, but I had a few doubts regarding the development workflow.<br>Firstly, how often should I update you regarding the progress? Should it be on a daily basis, or a weekly basis?<br>And secondly, should I make seperate PRs frequently, or keep updating a PR with the marked as WIP until I complete a major step, as mentioned in the proposal?",
  "id": "5af5ad3952194a4a67d97a97",
  "issues": [
   {
    "number": "14218"
   },
   {
    "number": "14218",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-11T14:48:25.747Z",
  "text": "Hi! I am starting with the project today, beginning with PR [#14218](https://github.com/sympy/sympy/pull/14218), but I had a few doubts regarding the development workflow. \nFirstly, how often should I update you regarding the progress? Should it be on a daily basis, or a weekly basis?\nAnd secondly, should I make seperate PRs frequently, or keep updating a PR with the marked as WIP until I complete a major step, as mentioned in the proposal?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Also, I have set up the blog at <a href=\"https://akash9712.github.io\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://akash9712.github.io</a>. The subscribe button is not functional yet, but I&#39;ll fix that soon.",
  "id": "5af5adb6d332ee5fad0ed921",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-11T14:50:30.219Z",
  "text": "Also, I have set up the blog at https://akash9712.github.io. The subscribe button is not functional yet, but I'll fix that soon.",
  "unread": false,
  "urls": [
   {
    "url": "https://akash9712.github.io"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Hi, write here whenever you have something ready, there is no fixed requirement except for the weekly update. I prefer many small PRs as they are easier to review. I am without a computer for the whole weekend and Monday so I cannot really review the PR right now.",
  "id": "5af5d88fe0b50c2d05b5aabb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-11T17:53:19.990Z",
  "text": "Hi, write here whenever you have something ready, there is no fixed requirement except for the weekly update. I prefer many small PRs as they are easier to review. I am without a computer for the whole weekend and Monday so I cannot really review the PR right now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I am a little stuck on the implementation of conditional probability spaces for discrete random variables. Basically, I was trying to make a class that inherits from <code>ConditionalDomain</code>. The printing module uses the <code>as_boolean</code> method of this class, which in turn calls the <code>as_boolean</code> method on the full domain(<code>fulldomain</code>) of the RV. In this case, the domain is an instance of <code>SingleDiscreteDomain</code>.<br>Can you please suggest how I can write a discrete domain as a boolean or a relational? Alternatively, should I try and change the <code>ConditionalDomain</code> class in some way?  ",
  "id": "5afaf0cd2df44c2d062c9dbd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-15T14:38:05.354Z",
  "text": "I am a little stuck on the implementation of conditional probability spaces for discrete random variables. Basically, I was trying to make a class that inherits from `ConditionalDomain`. The printing module uses the `as_boolean` method of this class, which in turn calls the `as_boolean` method on the full domain(`fulldomain`) of the RV. In this case, the domain is an instance of `SingleDiscreteDomain`. \nCan you please suggest how I can write a discrete domain as a boolean or a relational? Alternatively, should I try and change the `ConditionalDomain` class in some way?  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Perhaps using <code>Contains</code>, if I understand the question correctly ",
  "id": "5afb33067788e83a40ab9613",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-15T19:20:38.163Z",
  "text": "Perhaps using `Contains`, if I understand the question correctly ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Yes, that helps. Thanks!",
  "id": "5afbd1345666c42eb6150b6c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-16T06:35:32.346Z",
  "text": "Yes, that helps. Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": " <span data-link-type=\"mention\" data-screen-name=\"akash9712\" class=\"mention\">@akash9712</span> even if your code is not ready, feel free to open a PR with your current status so that we can have a look at it.",
  "id": "5afc1e98b84be71db90f6680",
  "issues": [],
  "mentions": [
   {
    "screenName": "akash9712",
    "userId": "588704f7d73408ce4f459eb5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-16T12:05:44.723Z",
  "text": " @akash9712 even if your code is not ready, feel free to open a PR with your current status so that we can have a look at it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I am making changes to the existing PR <span data-link-type=\"issue\" data-issue=\"14218\" class=\"issue\">#14218</span>,",
  "id": "5afc260cd332ee5fad220ba9",
  "issues": [
   {
    "number": "14218"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-16T12:37:32.675Z",
  "text": "I am making changes to the existing PR #14218,",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I will push the changes to the same PR soon.   ",
  "id": "5afc2da45a1d895fae44a935",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-16T13:09:56.787Z",
  "text": "I will push the changes to the same PR soon.   ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span>  <span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> I have pushed some changes to the PR.  Please review.",
  "id": "5afc70fbd332ee5fad2353c5",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   },
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-16T17:57:15.660Z",
  "text": "@Upabjojr  @jksuom I have pushed some changes to the PR.  Please review.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Hello. I have opened <span data-link-type=\"issue\" data-issue=\"14730\" class=\"issue\">#14730</span> regarding product spaces for discrete random variables. The PR still requires some changes, but I have created the PR for you to have a look, as suggested.",
  "id": "5b02771d5666c42eb6297565",
  "issues": [
   {
    "number": "14730"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-21T07:37:01.158Z",
  "text": "Hello. I have opened #14730 regarding product spaces for discrete random variables. The PR still requires some changes, but I have created the PR for you to have a look, as suggested.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I&#39;m a bit concerned that this might lead to overengineering the class system. I feel like Product Space should rather try to represent any product of spaces, regardless of whether they are discrete/continuous/finite.",
  "id": "5b03bf39f04ce53632f7e7fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-22T06:56:57.008Z",
  "text": "I'm a bit concerned that this might lead to overengineering the class system. I feel like Product Space should rather try to represent any product of spaces, regardless of whether they are discrete/continuous/finite.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "A mixed product will probably also be needed.",
  "id": "5b03c430bd10f34a681fae7d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-22T07:18:08.470Z",
  "text": "A mixed product will probably also be needed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would prefer having only one class for all products. One other point is that it&#39;s difficult to maintain a system that&#39;s too complex",
  "id": "5b03c494b84be71db926ea8b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-22T07:19:48.029Z",
  "text": "I would prefer having only one class for all products. One other point is that it's difficult to maintain a system that's too complex",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I implemented these classes following the same pattern as being followed for continuous and finite random variables. If I remove this class from drv.py, I think I should also remove the corresponding classes from crv.py and frv.py.<br>But given that the PDFs for the products are calculated in a different way for each of them, wouldn&#39;t the class <code>ProductPSpace</code> become too big?",
  "id": "5b03cd2d5a1d895fae5bfb08",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-22T07:56:29.295Z",
  "text": "I implemented these classes following the same pattern as being followed for continuous and finite random variables. If I remove this class from drv.py, I think I should also remove the corresponding classes from crv.py and frv.py.\nBut given that the PDFs for the products are calculated in a different way for each of them, wouldn't the class `ProductPSpace` become too big?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "we should support mixed product spaces (discrete/finite/continuous spaces). The generic case is harder to handle. I&#39;m not concerned about the class being to big, I&#39;m more concerned about the code being clear. As I said, I have always had the feeling that the stats module is overengineered (that is, too many classes and class inheritances), I have the feeling that this structure just makes the code difficult to maintain.",
  "id": "5b03ce5952194a4a67042231",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-22T08:01:29.964Z",
  "text": "we should support mixed product spaces (discrete/finite/continuous spaces). The generic case is harder to handle. I'm not concerned about the class being to big, I'm more concerned about the code being clear. As I said, I have always had the feeling that the stats module is overengineered (that is, too many classes and class inheritances), I have the feeling that this structure just makes the code difficult to maintain.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "How would you support mixed product spaces?",
  "id": "5b03ce78b84be71db9271127",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-22T08:02:00.037Z",
  "text": "How would you support mixed product spaces?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "isn&#39;t it unreasonable to mix random symbols together? Remember that one of the purposes of this GSoC is to add joint distributions (of any kind possibly).",
  "id": "5b03ced4a2d95136335c5ca8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-22T08:03:32.829Z",
  "text": "isn't it unreasonable to mix random symbols together? Remember that one of the purposes of this GSoC is to add joint distributions (of any kind possibly).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I agree with the module having too many classes and inheritences. So, is it okay to remove the subclass, and adding the methods to the the <code>ProductPSpace</code> in rv.py?<br>I am not sure about the implementation of mixed spaces as of now. I will read up ab it, and see how they can be supported.",
  "id": "5b03d6e71cfca775e12a8eb8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-22T08:37:59.361Z",
  "text": "I agree with the module having too many classes and inheritences. So, is it okay to remove the subclass, and adding the methods to the the `ProductPSpace` in rv.py?\nI am not sure about the implementation of mixed spaces as of now. I will read up ab it, and see how they can be supported.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "*about",
  "id": "5b03d6f4d332ee5fad39d6c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-22T08:38:12.349Z",
  "text": "*about",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Well, it&#39;s probably going to be more complicated. Maybe just finish the implementation with the subclass, after that we can have a look into mixed product spaces",
  "id": "5b03d73bd332ee5fad39d783",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-22T08:39:23.336Z",
  "text": "Well, it's probably going to be more complicated. Maybe just finish the implementation with the subclass, after that we can have a look into mixed product spaces",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "a mixed product space should be able to handle any kind of probability spaces, which may require some degree of work",
  "id": "5b03d772e0b50c2d05e0839c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-22T08:40:18.905Z",
  "text": "a mixed product space should be able to handle any kind of probability spaces, which may require some degree of work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Okay. ",
  "id": "5b03d9605666c42eb62e4303",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-22T08:48:32.374Z",
  "text": "Okay. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<p>In the PR <span data-link-type=\"issue\" data-issue=\"14730\" class=\"issue\">#14730</span>, the algorithm I have used for implementing the PDF is along the same line as for continuous random variables, except the integrals have been replaced with summations(as was already done for <code>compute_density</code> functions). There are a few issues with this; it would be helpful if you could suggest some corrections to be made:</p><p>1) The implementation for a function of continuous random variables (efficiently) only for certain cases. For e.g., </p><pre><code>&gt;&gt;&gt; N1, N2 = <span class=\"function\"><span class=\"title\">Normal</span><span class=\"params\">(<span class=\"string\">'N1'</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>)</span></span>, <span class=\"function\"><span class=\"title\">Normal</span><span class=\"params\">(<span class=\"string\">'N2'</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>)</span></span>\n&gt;&gt;&gt; <span class=\"function\"><span class=\"title\">P</span><span class=\"params\">(N1 + N2 &gt; <span class=\"number\">1</span>)</span></span>\n<span class=\"number\">1</span>/<span class=\"number\">2</span>\n&gt;&gt;&gt; <span class=\"function\"><span class=\"title\">P</span><span class=\"params\">(N1*N2 &gt; <span class=\"number\">1</span>)</span></span> <span class=\"comment\">// Ran for more than 10 mins before I killed the process</span></code></pre><p>2) If the same implementation is followed for discrete random variables, the summation returned cannot be solved further, i.e, it is returned as a double summation.</p><p>The main problem I am encountering is, I could not find any documentation(in or outside SymPy) for the algorithm that has been implemented, for evaluating the densities of any given function of random variables(the Dirac-delta function is being used).  </p>",
  "id": "5b067e6cb435f21fb8c2cc51",
  "issues": [
   {
    "number": "14730"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-24T08:57:16.888Z",
  "text": "In the PR #14730, the algorithm I have used for implementing the PDF is along the same line as for continuous random variables, except the integrals have been replaced with summations(as was already done for `compute_density` functions). There are a few issues with this; it would be helpful if you could suggest some corrections to be made:\n\n1) The implementation for a function of continuous random variables (efficiently) only for certain cases. For e.g., \n```\n>>> N1, N2 = Normal('N1', 0, 1), Normal('N2', 1, 1)\n>>> P(N1 + N2 > 1)\n1/2\n>>> P(N1*N2 > 1) // Ran for more than 10 mins before I killed the process\n```\n\n2) If the same implementation is followed for discrete random variables, the summation returned cannot be solved further, i.e, it is returned as a double summation.\n\nThe main problem I am encountering is, I could not find any documentation(in or outside SymPy) for the algorithm that has been implemented, for evaluating the densities of any given function of random variables(the Dirac-delta function is being used).  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I am not surprised that the probability of the product of two normal variables could not be computed. The integral is probably too hard for SymPy. The density of any continuous random variable  <code>X</code> (possibly a function of other random variables) at a point  <code>a</code> can be computed as the expectation of <code>DiracDelta(X - a)</code>. For a discrete variable, <code>KroneckerDelta</code> (or  its extension to non-integer arguments) can be used.",
  "id": "5b06987597a0361fb75e58d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-24T10:48:21.538Z",
  "text": "I am not surprised that the probability of the product of two normal variables could not be computed. The integral is probably too hard for SymPy. The density of any continuous random variable  `X` (possibly a function of other random variables) at a point  `a` can be computed as the expectation of `DiracDelta(X - a)`. For a discrete variable, `KroneckerDelta` (or  its extension to non-integer arguments) can be used.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Thanks for the help!",
  "id": "5b0699ead88b24150d2fcb7a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-24T10:54:34.259Z",
  "text": "Thanks for the help!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<p>Yes, it&#39;s likely that the integrals cannot be computed or are too hard to compute, or maybe it&#39;s unable to handle the <code>DiracDelta</code>, but that&#39;s an unrelated issue (and possibly another project).</p><p>The algorithm computing the density for expressions containing many random variables is already using the <code>DiracDelta</code> if I remember correctly.</p>",
  "id": "5b06a0cb2942532e42daa6f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-24T11:23:55.715Z",
  "text": "Yes, it's likely that the integrals cannot be computed or are too hard to compute, or maybe it's unable to handle the `DiracDelta`, but that's an unrelated issue (and possibly another project).\n\nThe algorithm computing the density for expressions containing many random variables is already using the `DiracDelta` if I remember correctly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<a href=\"https://github.com/sympy/sympy/blob/67cc1402da06bc484d0ff8464e55a24568e4f7ad/sympy/stats/crv.py#L298\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/blob/67cc1402da06bc484d0ff8464e55a24568e4f7ad/sympy/stats/crv.py#L298</a>",
  "id": "5b06aff997a0361fb75eb0c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-24T12:28:41.188Z",
  "text": "https://github.com/sympy/sympy/blob/67cc1402da06bc484d0ff8464e55a24568e4f7ad/sympy/stats/crv.py#L298",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/67cc1402da06bc484d0ff8464e55a24568e4f7ad/sympy/stats/crv.py#L298"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "is this the line you were looking for?",
  "id": "5b06b01497a0361fb75eb124",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-24T12:29:08.816Z",
  "text": "is this the line you were looking for?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-24T13:34:22.488Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<blockquote>\n<p><a href=\"https://github.com/sympy/sympy/blob/67cc1402da06bc484d0ff8464e55a24568e4f7ad/sympy/stats/crv.py#L298\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/blob/67cc1402da06bc484d0ff8464e55a24568e4f7ad/sympy/stats/crv.py#L298</a><br>is this the line you were looking for?</p></blockquote>\n<p>I found this line, but was confused about how the algorithm at the line you mentioned and <a href=\"https://github.com/sympy/sympy/blob/master/sympy/stats/rv.py#L324\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a> works. I was able to verify the algorithm only for very limited cases, and could not find it online (for a general case). I also wanted to check if  changing the integration to summation would work.</p>",
  "id": "5b06bf432817b43087c4d3ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-24T13:33:55.905Z",
  "text": "> https://github.com/sympy/sympy/blob/67cc1402da06bc484d0ff8464e55a24568e4f7ad/sympy/stats/crv.py#L298\nis this the line you were looking for?\n\nI found this line, but was confused about how the algorithm at the line you mentioned and [here](https://github.com/sympy/sympy/blob/master/sympy/stats/rv.py#L324) works. I was able to verify the algorithm only for very limited cases, and could not find it online (for a general case). I also wanted to check if  changing the integration to summation would work.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/67cc1402da06bc484d0ff8464e55a24568e4f7ad/sympy/stats/crv.py#L298"
   },
   {
    "url": "https://github.com/sympy/sympy/blob/master/sympy/stats/rv.py#L324"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<p>Maybe this could help:<br><a href=\"https://en.wikipedia.org/wiki/Product_distribution#Alternate_Proof\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://en.wikipedia.org/wiki/Product_distribution#Alternate_Proof</a></p><p>This is the derivation of the formula for the product distribution. We don&#39;t need that, but in the derivation of <em>Alternative Proof</em> at a certain point there is the formula used in line 298.</p>",
  "id": "5b06c2135f3e6b40fae03678",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-24T13:45:55.145Z",
  "text": "Maybe this could help:\nhttps://en.wikipedia.org/wiki/Product_distribution#Alternate_Proof\n\nThis is the derivation of the formula for the product distribution. We don't need that, but in the derivation of _Alternative Proof_ at a certain point there is the formula used in line 298.",
  "unread": false,
  "urls": [
   {
    "url": "https://en.wikipedia.org/wiki/Product_distribution#Alternate_Proof"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2018-05-24T13:49:18.376Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "The <a href=\"https://github.com/sympy/sympy/blob/master/sympy/stats/rv.py#L324\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">line you mention</a> appears to be calling a <em>PSpace.integrate</em> method.",
  "id": "5b06c2ca2817b43087c4e241",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-24T13:48:58.146Z",
  "text": "The [line you mention](https://github.com/sympy/sympy/blob/master/sympy/stats/rv.py#L324) appears to be calling a _PSpace.integrate_ method.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/master/sympy/stats/rv.py#L324"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "The summation is technically a special case of the integration",
  "id": "5b06c393b435f21fb8c3db23",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-24T13:52:19.021Z",
  "text": "The summation is technically a special case of the integration",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "if you consider distributions to be generalized functions, you can express summation as integrals. That is, the probability density function could be viewed as a sum of Dirac deltas shifted to integer positions multiplied by their values at that point.",
  "id": "5b06c3f1d88b24150d3074b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-24T13:53:53.989Z",
  "text": "if you consider distributions to be generalized functions, you can express summation as integrals. That is, the probability density function could be viewed as a sum of Dirac deltas shifted to integer positions multiplied by their values at that point.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "If you have discrete random variables it should be fine to replace that formula with summations and Kronecker deltas.",
  "id": "5b06c4172817b43087c4e65e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-24T13:54:31.575Z",
  "text": "If you have discrete random variables it should be fine to replace that formula with summations and Kronecker deltas.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I&#39;m not sure on how to handle the mixed case (continuous and discrete).",
  "id": "5b06c42dee623e2e41fdc4ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-24T13:54:53.276Z",
  "text": "I'm not sure on how to handle the mixed case (continuous and discrete).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<blockquote>\n<p>Maybe this could help:<br><a href=\"https://en.wikipedia.org/wiki/Product_distribution#Alternate_Proof\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://en.wikipedia.org/wiki/Product_distribution#Alternate_Proof</a><br>This is the derivation of the formula for the product distribution. We don&#39;t need that, but in the derivation of <em>Alternative Proof</em> at a certain point there is the formula used in line 298.<br>The <a href=\"https://github.com/sympy/sympy/blob/master/sympy/stats/rv.py#L324\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">line you mention</a> appears to be calling a <em>PSpace.integrate</em> method.</p></blockquote>\n<p>Thanks!</p><blockquote>\n<p>The summation is technically a special case of the integration<br>if you consider distributions to be generalized functions, you can express summation as integrals. That is, the probability density function could be viewed as a sum of Dirac deltas shifted to integer positions multiplied by their values at that point.<br>If you have discrete random variables it should be fine to replace that formula with summations and Kronecker deltas.</p></blockquote>\n<p>One problem that still remains is that the summation does not always evaluate, which means that the results are very complicated expressions. For e.g., a triple summation in case of two RVs. (Though I was using Dirac delta instead of Kronecker delta; it might evaluate when I make the correction.)</p>",
  "id": "5b06c829b435f21fb8c3efdc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-24T14:11:53.988Z",
  "text": "> Maybe this could help:\nhttps://en.wikipedia.org/wiki/Product_distribution#Alternate_Proof\nThis is the derivation of the formula for the product distribution. We don't need that, but in the derivation of _Alternative Proof_ at a certain point there is the formula used in line 298.\nThe [line you mention](https://github.com/sympy/sympy/blob/master/sympy/stats/rv.py#L324) appears to be calling a _PSpace.integrate_ method.\n\nThanks!\n\n>The summation is technically a special case of the integration\nif you consider distributions to be generalized functions, you can express summation as integrals. That is, the probability density function could be viewed as a sum of Dirac deltas shifted to integer positions multiplied by their values at that point.\nIf you have discrete random variables it should be fine to replace that formula with summations and Kronecker deltas.\n\nOne problem that still remains is that the summation does not always evaluate, which means that the results are very complicated expressions. For e.g., a triple summation in case of two RVs. (Though I was using Dirac delta instead of Kronecker delta; it might evaluate when I make the correction.)",
  "unread": false,
  "urls": [
   {
    "url": "https://en.wikipedia.org/wiki/Product_distribution#Alternate_Proof"
   },
   {
    "url": "https://github.com/sympy/sympy/blob/master/sympy/stats/rv.py#L324"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "It&#39;s possibly related. The <code>Summation</code> object is designed to handle the <code>KroneckerDelta</code>, not the Dirac one.",
  "id": "5b06c91996af8f1186c862a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-24T14:15:53.275Z",
  "text": "It's possibly related. The `Summation` object is designed to handle the `KroneckerDelta`, not the Dirac one.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I guess the <code>DiracDelta</code> should remain unevaluated under a summation.",
  "id": "5b06c92bee623e2e41fddbea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-24T14:16:11.488Z",
  "text": "I guess the `DiracDelta` should remain unevaluated under a summation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "or worse... give infinity as a result",
  "id": "5b06c94a2942532e42db4f36",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-24T14:16:42.225Z",
  "text": "or worse... give infinity as a result",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "It didn&#39;t give infinity as the answer, but it did return a wrong answer in certain cases.  I must be missing something; will try to resolve it as soon as possible ",
  "id": "5b06c9af5f3e6b40fae05890",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-24T14:18:23.893Z",
  "text": "It didn't give infinity as the answer, but it did return a wrong answer in certain cases.  I must be missing something; will try to resolve it as soon as possible ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The name of <code>integrate</code> method of <code>PSpace</code> is misleading. It should actually be <code>expectation</code>. For discrete variables that means summation(s). For a mixed probability space that is a combination of integrations (over continuous variables) and summations (over discrete variables).",
  "id": "5b06ce61ee623e2e41fdf5ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-24T14:38:25.504Z",
  "text": "The name of `integrate` method of `PSpace` is misleading. It should actually be `expectation`. For discrete variables that means summation(s). For a mixed probability space that is a combination of integrations (over continuous variables) and summations (over discrete variables).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> how would you set the Dirac/Kronecker delta for mixed (continuous and discrete) random variables? As far as I understand we should have only one delta function (not multiple ones).",
  "id": "5b06d394d96cfd743eb9eb2e",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-24T15:00:36.626Z",
  "text": "@jksuom how would you set the Dirac/Kronecker delta for mixed (continuous and discrete) random variables? As far as I understand we should have only one delta function (not multiple ones).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-24T15:13:12.895Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "If the random variable (possibly a function of other random variables) is continuous, then Dirac delta is used. If it is discrete (i.e., does not depend on the continuous variables of the common probability space), then Kronecker delta is used.",
  "id": "5b06d6252942532e42db86a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-24T15:11:33.073Z",
  "text": "If the random variable (possibly a function of other random variables) is continuous, then Dirac delta is used. If it is discrete (i.e., does not depend on the continuous variables of the common probability space), then Kronecker delta is used.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"akash9712\" class=\"mention\">@akash9712</span> we should also start thinking about introducing the unevaluated probability form. There is already a <code>Probability</code> class for that. I guess it would be preferable to an unevaluated integral or summation in case the result cannot be calculated.",
  "id": "5b06dcfc5f3e6b40fae0b320",
  "issues": [],
  "mentions": [
   {
    "screenName": "akash9712",
    "userId": "588704f7d73408ce4f459eb5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-24T15:40:44.218Z",
  "text": "@akash9712 we should also start thinking about introducing the unevaluated probability form. There is already a `Probability` class for that. I guess it would be preferable to an unevaluated integral or summation in case the result cannot be calculated.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-24T16:01:41.505Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Maybe we can include a flag for returning the unevaluated form. If the user  changes the default value of the flag, SymPy can return the summation or the integration.",
  "id": "5b06e1dbaaafa25932b26296",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-24T16:01:31.156Z",
  "text": "Maybe we can include a flag for returning the unevaluated form. If the user  changes the default value of the flag, SymPy can return the summation or the integration.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-05-25T07:09:42.337Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "maybe <code>P</code> and <code>E</code> should be remapped to something like this:<pre><code class=\"python\">E = Expectation\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">E</span><span class=\"params\">(*args)</span>:</span>\n    SymPyDeprecationWarning( ... behavior will be changed <span class=\"keyword\">in</span> the future ... ).warn()\n    <span class=\"keyword\">return</span> expectation(*args)</code></pre>",
  "id": "5b07b567b6eece791dafe956",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-25T07:04:07.860Z",
  "text": "maybe `P` and `E` should be remapped to something like this:\n```python\nE = Expectation\ndef E(*args):\n    SymPyDeprecationWarning( ... behavior will be changed in the future ... ).warn()\n    return expectation(*args)\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Why the <code>E = Expectation</code>, if we are redefining <code>E</code>?<br>Also, the deprecation warning would be regarding returning unevaluated probabilities, right?",
  "id": "5b07bb1eb6eece791daffbbb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-25T07:28:30.863Z",
  "text": "Why the `E = Expectation`, if we are redefining `E`?\nAlso, the deprecation warning would be regarding returning unevaluated probabilities, right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "so that when we drop the deprecation <code>E = Expectation</code> will be the only line left.",
  "id": "5b07bb42160c567d16d74e88",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-25T07:29:06.082Z",
  "text": "so that when we drop the deprecation `E = Expectation` will be the only line left.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Yes, it should warn people to put a <code>.doit()</code> after <code>E</code> and <code>P</code>.",
  "id": "5b07bb5493dc78791c840481",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-25T07:29:24.405Z",
  "text": "Yes, it should warn people to put a `.doit()` after `E` and `P`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "there is also a decorator for deprecations",
  "id": "5b07bb72352b9e1a4b2f9e91",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-25T07:29:54.513Z",
  "text": "there is also a decorator for deprecations",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "we use the deprecation when we change the behavior, so that people get warned about the new API behaviour (and have about 1 year time to change the code)",
  "id": "5b07bbc04eaffb692d544477",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-25T07:31:12.012Z",
  "text": "we use the deprecation when we change the behavior, so that people get warned about the new API behaviour (and have about 1 year time to change the code)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I have updated the PR <span data-link-type=\"issue\" data-issue=\"14730\" class=\"issue\">#14730</span>. Please have a look.",
  "id": "5b087a614eaffb692d572efa",
  "issues": [
   {
    "number": "14730"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-25T21:04:33.354Z",
  "text": "I have updated the PR #14730. Please have a look.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "it looks good, I&#39;ve put just one minor note",
  "id": "5b092b09edd06f7d15e57ddd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-26T09:38:17.850Z",
  "text": "it looks good, I've put just one minor note",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I will make the necessary changes.",
  "id": "5b092f58edd06f7d15e58984",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-26T09:56:40.692Z",
  "text": "I will make the necessary changes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "only the first one",
  "id": "5b092f6452e35117cde23719",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-26T09:56:52.301Z",
  "text": "only the first one",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<code>integer=True</code>",
  "id": "5b092f68b6eece791db4b6b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-26T09:56:56.514Z",
  "text": "`integer=True`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the other not in the same PR, it probably needs deprecating",
  "id": "5b092f7a352b9e1a4b343d40",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-26T09:57:14.788Z",
  "text": "the other not in the same PR, it probably needs deprecating",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Okay. ",
  "id": "5b092f8bc5750d377c143498",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-26T09:57:31.910Z",
  "text": "Okay. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Also, the test <a href=\"https://github.com/sympy/sympy/pull/14730/files/2648c00cce6c12644c251095212248eee8125434#diff-098f6061f524e2d9db73ae11a437a4b7R99\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a> fails, even though the expressions being equated looks identical to the returned value. The system just hangs when I use <code>.equals</code> method. Would it be fine if I typecast both LHS and RHS to string and assert equality?",
  "id": "5b0931df160c567d16dbe775",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-26T10:07:27.493Z",
  "text": "Also, the test [here](https://github.com/sympy/sympy/pull/14730/files/2648c00cce6c12644c251095212248eee8125434#diff-098f6061f524e2d9db73ae11a437a4b7R99) fails, even though the expressions being equated looks identical to the returned value. The system just hangs when I use `.equals` method. Would it be fine if I typecast both LHS and RHS to string and assert equality?",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/14730/files/2648c00cce6c12644c251095212248eee8125434#diff-098f6061f524e2d9db73ae11a437a4b7R99"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I am guessing it&#39;s somewhat similar to what happens <a href=\"https://github.com/sympy/sympy/pull/14119/files/ec2766ff35ca3e979a39cdcd2a5c8e81d23d50fa#r166891320\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a>",
  "id": "5b09325dedd06f7d15e59139",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-26T10:09:33.948Z",
  "text": "I am guessing it's somewhat similar to what happens [here](https://github.com/sympy/sympy/pull/14119/files/ec2766ff35ca3e979a39cdcd2a5c8e81d23d50fa#r166891320)",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/14119/files/ec2766ff35ca3e979a39cdcd2a5c8e81d23d50fa#r166891320"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "there is an open bug concerning the comparison of <code>Sum</code> expressions, as far as I know",
  "id": "5b0932c3c712f5612533e945",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-26T10:11:15.330Z",
  "text": "there is an open bug concerning the comparison of `Sum` expressions, as far as I know",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "you can try <code>.dummy_eq</code>, but I think it&#39;s also subjected to this bug",
  "id": "5b0932ea16f6496124e0f5dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-26T10:11:54.340Z",
  "text": "you can try `.dummy_eq`, but I think it's also subjected to this bug",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "otherwise use the <code>str( )</code> method and compare the string",
  "id": "5b0932fb4eaffb692d58d77f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-26T10:12:11.285Z",
  "text": "otherwise use the `str( )` method and compare the string",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<blockquote>\n<p>you can try <code>.dummy_eq</code>, but I think it&#39;s also subjected to this bug</p></blockquote>\n<p>Yes, <code>.dummy_eq</code> also returns <code>False</code>. </p>",
  "id": "5b09333816f6496124e0f6ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-26T10:13:12.978Z",
  "text": "\n> you can try `.dummy_eq`, but I think it's also subjected to this bug\n\nYes, `.dummy_eq` also returns `False`. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"6842\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#6842</span>",
  "id": "5b093372016ae21a4ce66e27",
  "issues": [
   {
    "number": "6842",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-26T10:14:10.314Z",
  "text": "https://github.com/sympy/sympy/issues/6842",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I have used the <code>str()</code> for now.",
  "id": "5b093577b6eece791db4c536",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-26T10:22:47.203Z",
  "text": "I have used the `str()` for now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I am working on Joint probability spaces. I am thinking of writing it in a way such that the user will have to enter the symbols, and the joint distribution density, and the domain(Default domain can be set as <code>S.Reals</code> or <code>S.Integers</code>). The symbols are not necessarily random symbols, since the users usually  declare a random symbol for which the distribution/density is already defined, like <code>Normal, Poisson</code> etc .<br>If however, the user provides two or more random variables, for e.g., something like <code>JointDensity(X, Y)</code> where <code>X, Y</code> are random variables, the joint density should be computed, such as by multiplying them if they are independent.<br>Is it okay to proceed this way?",
  "id": "5b0a5de099fa7f4c06212231",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-27T07:27:28.018Z",
  "text": "I am working on Joint probability spaces. I am thinking of writing it in a way such that the user will have to enter the symbols, and the joint distribution density, and the domain(Default domain can be set as `S.Reals` or `S.Integers`). The symbols are not necessarily random symbols, since the users usually  declare a random symbol for which the distribution/density is already defined, like `Normal, Poisson` etc . \nIf however, the user provides two or more random variables, for e.g., something like `JointDensity(X, Y)` where `X, Y` are random variables, the joint density should be computed, such as by multiplying them if they are independent. \nIs it okay to proceed this way?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "we can try this way",
  "id": "5b0abb224eaffb692d5ca0b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-27T14:05:22.787Z",
  "text": "we can try this way",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "maybe this can help:<br><a href=\"http://reference.wolfram.com/language/ref/ProductDistribution.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://reference.wolfram.com/language/ref/ProductDistribution.html</a><br><a href=\"http://reference.wolfram.com/language/ref/MarginalDistribution.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://reference.wolfram.com/language/ref/MarginalDistribution.html</a><br><a href=\"http://reference.wolfram.com/language/ref/CopulaDistribution.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://reference.wolfram.com/language/ref/CopulaDistribution.html</a>",
  "id": "5b0bc6ca93dc78791c8f1a15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-28T09:07:22.231Z",
  "text": "maybe this can help:\nhttp://reference.wolfram.com/language/ref/ProductDistribution.html\nhttp://reference.wolfram.com/language/ref/MarginalDistribution.html\nhttp://reference.wolfram.com/language/ref/CopulaDistribution.html",
  "unread": false,
  "urls": [
   {
    "url": "http://reference.wolfram.com/language/ref/ProductDistribution.html"
   },
   {
    "url": "http://reference.wolfram.com/language/ref/MarginalDistribution.html"
   },
   {
    "url": "http://reference.wolfram.com/language/ref/CopulaDistribution.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "or more generally:<br><a href=\"http://reference.wolfram.com/language/guide/DerivedDistributions.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://reference.wolfram.com/language/guide/DerivedDistributions.html</a>",
  "id": "5b0bc702a7abc8692eed0d6e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-28T09:08:18.507Z",
  "text": "or more generally:\nhttp://reference.wolfram.com/language/guide/DerivedDistributions.html",
  "unread": false,
  "urls": [
   {
    "url": "http://reference.wolfram.com/language/guide/DerivedDistributions.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "maybe Mathematica&#39;s API could help getting some ideas on how to proceed",
  "id": "5b0bc719edd06f7d15ec1dba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-28T09:08:41.294Z",
  "text": "maybe Mathematica's API could help getting some ideas on how to proceed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Thanks! ",
  "id": "5b0be53b99fa7f4c0625586f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-28T11:17:15.992Z",
  "text": "Thanks! ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "also some ideas to get inspiration for the random processes: <a href=\"https://reference.wolfram.com/language/ref/SliceDistribution.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://reference.wolfram.com/language/ref/SliceDistribution.html</a>",
  "id": "5b0bea25352b9e1a4b3b38d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-05-28T11:38:13.586Z",
  "text": "also some ideas to get inspiration for the random processes: https://reference.wolfram.com/language/ref/SliceDistribution.html",
  "unread": false,
  "urls": [
   {
    "url": "https://reference.wolfram.com/language/ref/SliceDistribution.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "how is the coding proceeding?",
  "id": "5b111abcc712f561254d0203",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-01T10:06:52.621Z",
  "text": "how is the coding proceeding?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Sorry for not sending a PR yet. I will send it soon.<br>I am writing the classes for Joint Probability, and was thinking of writing the documentation once the classes are good to be merged.<br>Right now, I am writing the probability method for joint spaces, and was thinking in what form the conditions should be taken as input from the user.",
  "id": "5b1163d216f6496124fb0b87",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-01T15:18:42.994Z",
  "text": "Sorry for not sending a PR yet. I will send it soon. \nI am writing the classes for Joint Probability, and was thinking of writing the documentation once the classes are good to be merged. \nRight now, I am writing the probability method for joint spaces, and was thinking in what form the conditions should be taken as input from the user.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Hi, I have opened <span data-link-type=\"issue\" data-issue=\"14764\" class=\"issue\">#14764</span> for Joint Probability classes. There is still some work to be done before it can be merged, but I shall finish it as per schedule.<br>Right now, the work done is primarily for cases when the user creates a joint distribution out of existing random variables. I have a few doubts before proceeding further.<br>1)  In case the the user enters symbols instead of random variables to create a joint distribution, should each of these symbols be converted to random symbols?<br>2) What form should the conditions for calculating the probability and expections be in for the joint distributions?<br>Please tell me if I need to make any changes regarding the API in the existing part of the PR.",
  "id": "5b12d09e160c567d16fa2784",
  "issues": [
   {
    "number": "14764"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-02T17:15:10.714Z",
  "text": "Hi, I have opened #14764 for Joint Probability classes. There is still some work to be done before it can be merged, but I shall finish it as per schedule. \nRight now, the work done is primarily for cases when the user creates a joint distribution out of existing random variables. I have a few doubts before proceeding further. \n1)  In case the the user enters symbols instead of random variables to create a joint distribution, should each of these symbols be converted to random symbols?\n2) What form should the conditions for calculating the probability and expections be in for the joint distributions?\nPlease tell me if I need to make any changes regarding the API in the existing part of the PR.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "1) random symbols don&#39;t have to have an attached probability space, i.e. the probability space is optional. I think they should always be probability spaces",
  "id": "5b13c47eb6eece791dd5d8ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-03T10:35:42.402Z",
  "text": "1) random symbols don't have to have an attached probability space, i.e. the probability space is optional. I think they should always be probability spaces",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "2) probability and expectations should be calculated via <code>E</code> and <code>P</code>.",
  "id": "5b13c4d4160c567d16fc6f16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-03T10:37:08.197Z",
  "text": "2) probability and expectations should be calculated via `E` and `P`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "so the definition of <code>RandomSymbol</code> requires a symbol and a probability space",
  "id": "5b13c65093dc78791ca91c39",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-03T10:43:28.640Z",
  "text": "so the definition of `RandomSymbol` requires a symbol and a probability space",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "we could have some object defining the marginal distribution",
  "id": "5b13c66c4eaffb692d79a3b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-03T10:43:56.760Z",
  "text": "we could have some object defining the marginal distribution",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-03T11:15:40.186Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<blockquote>\n<p>2) probability and expectations should be calculated via <code>E</code> and <code>P</code>.</p></blockquote>\n<p>When the condition given to <code>P</code> or <code>E</code> are independent random variables, it would be handled by <code>ProductPSpace</code>. Thus, the <code>probability</code> method of Joint Spaces would be used only if the individual distribution of the symbols part of the joint distribution are not specified, i.e., the variables may be considered dependent random variables.</p><blockquote>\n<p>so the definition of <code>RandomSymbol</code> requires a symbol and a probability space</p></blockquote>\n<p>If a probability space is not defined for it, a probability space is just assigned to it, without the domain and distribution defined for it, which are otherwise given as <code>args[0]</code> and <code>args[1]</code>. We could assign the distribution as the marginal density, and the domain as <code>S.Reals</code>.<br>I think this would also be necessary while calling <code>P</code> and <code>E</code> .</p>",
  "id": "5b13cd9ba45f930a65f8c3f5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-03T11:14:35.782Z",
  "text": "> 2) probability and expectations should be calculated via `E` and `P`.\n\nWhen the condition given to `P` or `E` are independent random variables, it would be handled by `ProductPSpace`. Thus, the `probability` method of Joint Spaces would be used only if the individual distribution of the symbols part of the joint distribution are not specified, i.e., the variables may be considered dependent random variables.\n \n\n> so the definition of `RandomSymbol` requires a symbol and a probability space\n\nIf a probability space is not defined for it, a probability space is just assigned to it, without the domain and distribution defined for it, which are otherwise given as `args[0]` and `args[1]`. We could assign the distribution as the marginal density, and the domain as `S.Reals`. \nI think this would also be necessary while calling `P` and `E` .",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "what about an object called <code>MarginalPSpace</code> taking two arguments: a PSpace and an index",
  "id": "5b13d4d4f9f2e56cf2387b1d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-03T11:45:24.263Z",
  "text": "what about an object called `MarginalPSpace` taking two arguments: a PSpace and an index",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<p>at this point, you could have dependent random variables defined as:</p><pre><code>X = RandomSymbol<span class=\"list\">(<span class=\"string\">\"X\"</span>, MarginalPSpace<span class=\"list\">(<span class=\"keyword\">joint_pspace</span>, <span class=\"number\">0</span>)</span>)</span>\nY = RandomSymbol<span class=\"list\">(<span class=\"string\">\"Y\"</span>, MarginalPSpace<span class=\"list\">(<span class=\"keyword\">joint_pspace</span>, <span class=\"number\">1</span>)</span>)</span></code></pre><p>That is, <code>joint_pspace</code> contains a multivariate distribution, while the index 0 or 1 represents which component to use</p>",
  "id": "5b13d54ca45f930a65f8d6bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-03T11:47:24.157Z",
  "text": "at this point, you could have dependent random variables defined as:\n```\nX = RandomSymbol(\"X\", MarginalPSpace(joint_pspace, 0))\nY = RandomSymbol(\"Y\", MarginalPSpace(joint_pspace, 1))\n```\nThat is, `joint_pspace` contains a multivariate distribution, while the index 0 or 1 represents which component to use",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-03T11:48:26.248Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<blockquote>\n<p>and the domain as S.Reals.</p></blockquote>\n<p>I would try to support any domain, not just reals.</p>",
  "id": "5b13d5844eaffb692d79ca06",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-03T11:48:20.374Z",
  "text": "> and the domain as S.Reals.\n\nI would try to support any domain, not just reals.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Should <code>RandomSymbol</code> be analogous to <code>Symbol</code>, that is, independent of any other <code>RandomSymbol</code>? Or should the class include random variables that are functions of other random variables?",
  "id": "5b13d5f2e26c847ac8b2c8a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-03T11:50:10.227Z",
  "text": "Should `RandomSymbol` be analogous to `Symbol`, that is, independent of any other `RandomSymbol`? Or should the class include random variables that are functions of other random variables?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the current code is like that, each <code>RandomSymbol</code> is independent. If we introduce dependent random variables, we should try to change this behaviour",
  "id": "5b13d6c799fa7f4c063f3f2b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-03T11:53:43.440Z",
  "text": "the current code is like that, each `RandomSymbol` is independent. If we introduce dependent random variables, we should try to change this behaviour",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Oh okay. I&#39;ll write the class for <code>MarginalPSpace</code>.<br>If the domain for the variables are not provided, it should be assumed to be <code>S.Reals</code>, right? I am not sure how the user can provide the domain for each symbol. ",
  "id": "5b13d6d6016ae21a4c0716bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-03T11:53:58.472Z",
  "text": "Oh okay. I'll write the class for `MarginalPSpace`. \nIf the domain for the variables are not provided, it should be assumed to be `S.Reals`, right? I am not sure how the user can provide the domain for each symbol. \n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "every <code>PSpace</code> has a <code>.domain</code> property, so <code>MarginalPSpace</code> should be a container pointing to &#39;.domain<code>of the contained</code>PSpace`",
  "id": "5b13d75122a05f5e71f8a915",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-03T11:56:01.767Z",
  "text": "every `PSpace` has a `.domain` property, so `MarginalPSpace` should be a container pointing to '.domain` of the contained `PSpace`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<blockquote>\n<p> Or should the class include random variables that are functions of other random variables?</p></blockquote>\n<p>There is the possibility of supporting random variables as parameters for the distribution, this is slightly more complicated to support and it&#39;s probably to be done later.</p>",
  "id": "5b13d790ba1a351a68e72cc7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-03T11:57:04.860Z",
  "text": ">  Or should the class include random variables that are functions of other random variables?\n\nThere is the possibility of supporting random variables as parameters for the distribution, this is slightly more complicated to support and it's probably to be done later.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Yes, compound distributions are a part of the project.",
  "id": "5b13d7c3352b9e1a4b553e1d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-03T11:57:55.789Z",
  "text": "Yes, compound distributions are a part of the project.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "As for <code>JointPSpace</code>, the domain has to be the product domain of the <code>PSpace</code>&#39;s being joined.",
  "id": "5b13d7dfba1a351a68e72d28",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-03T11:58:23.433Z",
  "text": "As for `JointPSpace`, the domain has to be the product domain of the `PSpace`'s being joined.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Maybe we could also have a <code>RandomVariable</code> class that would include both independent (<code>RandomSymbol</code>) and dependent variables.",
  "id": "5b13e192352b9e1a4b5554a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-03T12:39:46.554Z",
  "text": "Maybe we could also have a `RandomVariable` class that would include both independent (`RandomSymbol`) and dependent variables.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "It could be done, but wouldn&#39;t that contribute a bit more to the overengineering of the class system?<br>I am not sure about if it is needed or not, in the sense that may be possible to alter <code>RandomSymbol</code>to support assumptions of dependence, by checking if two random variables are defined over the same <code>PSpace</code> or if one is a parameter to the other.",
  "id": "5b13e63ec712f56125550716",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-03T12:59:42.953Z",
  "text": "It could be done, but wouldn't that contribute a bit more to the overengineering of the class system? \nI am not sure about if it is needed or not, in the sense that may be possible to alter `RandomSymbol`to support assumptions of dependence, by checking if two random variables are defined over the same `PSpace` or if one is a parameter to the other.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I think that <code>RandomSymbol</code> is enough, I wouldn&#39;t make the code too complicated by introducing another class. At least, I don&#39;t see any real advantage in doing so",
  "id": "5b13e710e26c847ac8b2f5b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-03T13:03:12.452Z",
  "text": "I think that `RandomSymbol` is enough, I wouldn't make the code too complicated by introducing another class. At least, I don't see any real advantage in doing so",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"akash9712\" class=\"mention\">@akash9712</span> do you think you can modify <span data-link-type=\"issue\" data-issue=\"14730\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#14730</span> in order to have a single <code>ProductPSpace</code> class?",
  "id": "5b15394616f6496124062dfb",
  "issues": [
   {
    "number": "14730",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [
   {
    "screenName": "akash9712",
    "userId": "588704f7d73408ce4f459eb5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-04T13:06:14.268Z",
  "text": "@akash9712 do you think you can modify https://github.com/sympy/sympy/pull/14730 in order to have a single `ProductPSpace` class?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "product spaces may be mixtures of continuous and discrete spaces, we can not have a class for every combination",
  "id": "5b153986edd06f7d150acc1c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-04T13:07:18.802Z",
  "text": "product spaces may be mixtures of continuous and discrete spaces, we can not have a class for every combination",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "we should put everything inside a single class",
  "id": "5b15398e16f6496124062ead",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-04T13:07:26.412Z",
  "text": "we should put everything inside a single class",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "+1",
  "id": "5b1539ac52e35117cd0772e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-04T13:07:56.742Z",
  "text": "+1",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Okay, I&#39;ll do that.<br>I&#39;ll also remove the <code>evaluate</code> flag I added, going back to the old API where the <code>Probability</code> object is returned only when the probability cannot be calculated.",
  "id": "5b154791ba1a351a68eb96a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-04T14:07:13.098Z",
  "text": "Okay, I'll do that. \nI'll also remove the `evaluate` flag I added, going back to the old API where the `Probability` object is returned only when the probability cannot be calculated.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Keep the same behavior of the old API",
  "id": "5b15911de26c847ac8b87b6c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-04T19:21:01.988Z",
  "text": "Keep the same behavior of the old API",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Changing behavior is complicated as it requires deprecation",
  "id": "5b15913182a4d36ea6ccf6df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-04T19:21:21.365Z",
  "text": "Changing behavior is complicated as it requires deprecation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I tried combining the classes into <code>ProductPSpace</code>, but the issue I am facing is that the <code>ProductDiscretePSpace</code> inherits from <code>DiscretePSpace</code>. Same goes for the continuous and finite product spaces. This means that they use the methods of these classes. Also, while while trying to combine them in  a <code>probability</code> method in <code>ProductPSpace</code>, I was only implementing the method for cases where all the constituent spaces are either all discrete, continuous or finite. I couldn&#39;t find an algorithm for calculating the density of an expression consisting of both discrete and continuous random variables.",
  "id": "5b16d91db6eece791de04984",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T18:40:29.452Z",
  "text": "I tried combining the classes into `ProductPSpace`, but the issue I am facing is that the `ProductDiscretePSpace` inherits from `DiscretePSpace`. Same goes for the continuous and finite product spaces. This means that they use the methods of these classes. Also, while while trying to combine them in  a `probability` method in `ProductPSpace`, I was only implementing the method for cases where all the constituent spaces are either all discrete, continuous or finite. I couldn't find an algorithm for calculating the density of an expression consisting of both discrete and continuous random variables.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-05T19:00:28.257Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think that it would suffice that the discrete variables of a <code>ProductPSpace</code> should have <code>DiscretePSpace</code> and continuous variables <code>ContinuousPSpace</code> as <code>pspace</code>. It should not be necessary that a product would inherit directly from either.",
  "id": "5b16dda816f64961240c67b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T18:59:52.878Z",
  "text": "I think that it would suffice that the discrete variables of a `ProductPSpace` should have `DiscretePSpace` and continuous variables `ContinuousPSpace` as `pspace`. It should not be necessary that a product would inherit directly from either.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "But for each of these variables, methods from both, their respective classes(<code>DiscretePSpace</code> and <code>ContinuousPSpace</code>) and <code>ProductPSpace</code> have to be used. The only objects that have both methods defined are either obects of <code>ProductDiscretePSpace</code> or <code>ProductContinuousPSpace</code>.<br>One alternative would be to move to the <code>integrate</code> method of <code>ProductPSpace</code> into <code>DiscretePSpace</code> and <code>ContinuousPSpace</code> with a different name. But I am not sure about whether the method belongs to these classes or not.",
  "id": "5b16e84f352b9e1a4b5fe336",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T19:45:19.268Z",
  "text": "But for each of these variables, methods from both, their respective classes(`DiscretePSpace` and `ContinuousPSpace`) and `ProductPSpace` have to be used. The only objects that have both methods defined are either obects of `ProductDiscretePSpace` or `ProductContinuousPSpace`.\nOne alternative would be to move to the `integrate` method of `ProductPSpace` into `DiscretePSpace` and `ContinuousPSpace` with a different name. But I am not sure about whether the method belongs to these classes or not.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "And even after this is done, the cases handled would only be the three cases being handled right now.",
  "id": "5b16e87eb6eece791de089e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T19:46:06.221Z",
  "text": "And even after this is done, the cases handled would only be the three cases being handled right now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "hi, I would always recommend to open a PR to show us the code before asking for help about code you are writing.",
  "id": "5b16f4f3352b9e1a4b601a91",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T20:39:15.350Z",
  "text": "hi, I would always recommend to open a PR to show us the code before asking for help about code you are writing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<code>ProductPSpace</code> needs its own method to calculate the expectation",
  "id": "5b16f519edd06f7d151150ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T20:39:53.208Z",
  "text": "`ProductPSpace` needs its own method to calculate the expectation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Sorry, this was regarding the changes to be made to <span data-link-type=\"issue\" data-issue=\"14730\" class=\"issue\">#14730</span>, so I did not open a new PR. I&#39;ll open one now. ",
  "id": "5b16f57db6eece791de0c067",
  "issues": [
   {
    "number": "14730"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T20:41:33.168Z",
  "text": "Sorry, this was regarding the changes to be made to #14730, so I did not open a new PR. I'll open one now. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "if the probability spaces are independent, maybe you can just multiply the integration over the sub-pspaces?",
  "id": "5b16f585b6eece791de0c089",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T20:41:41.809Z",
  "text": "if the probability spaces are independent, maybe you can just multiply the integration over the sub-pspaces?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Yes, there is no limit to the number of PR. You can just open PR to show us the code.",
  "id": "5b16f59f35e25f3997503a4d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T20:42:07.338Z",
  "text": "Yes, there is no limit to the number of PR. You can just open PR to show us the code.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "or maybe you could create a class called <code>ProductIndependentPSpace</code>",
  "id": "5b16f5e9e26c847ac8bd7959",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T20:43:21.394Z",
  "text": "or maybe you could create a class called `ProductIndependentPSpace`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "to distinguish it from the joint product of p-spaces",
  "id": "5b16f5f652e35117cd0e28f4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T20:43:34.357Z",
  "text": "to distinguish it from the joint product of p-spaces",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<blockquote>\n<p>if the probability spaces are independent, maybe you can just multiply the integration over the sub-pspaces?</p></blockquote>\n<p>I think that would give the incorrect density of an arbitrary expression consisting of independent random variables.</p>",
  "id": "5b16f629b6eece791de0c2ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T20:44:25.933Z",
  "text": "> if the probability spaces are independent, maybe you can just multiply the integration over the sub-pspaces?\n\nI think that would give the incorrect density of an arbitrary expression consisting of independent random variables.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "oh, yes",
  "id": "5b16f640016ae21a4c11f535",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T20:44:48.061Z",
  "text": "oh, yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "you have to build the Dirac delta",
  "id": "5b16f64799fa7f4c0649fcf3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T20:44:55.680Z",
  "text": "you have to build the Dirac delta",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "maybe a for-loop that keeps integrating the expression with Dirac delta?",
  "id": "5b16f67f352b9e1a4b6022bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T20:45:51.730Z",
  "text": "maybe a for-loop that keeps integrating the expression with Dirac delta?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "(or summing for discrete variables)",
  "id": "5b16f697016ae21a4c11f5ff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T20:46:15.835Z",
  "text": "(or summing for discrete variables)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the case of mixed discrete-continuous variables is a bit more complicated, I will have to reason a bit",
  "id": "5b16f6df35e25f3997503e83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T20:47:27.016Z",
  "text": "the case of mixed discrete-continuous variables is a bit more complicated, I will have to reason a bit",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "anyway I suggest to set up a for-loop over the pspaces in <code>PSpace</code>",
  "id": "5b16f6f935e25f3997503efd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T20:47:53.271Z",
  "text": "anyway I suggest to set up a for-loop over the pspaces in `PSpace`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Each pspace in <code>ProductPSpace</code> knows how to compute the expectation over itself (integration or summation). The expectation over the product is computed by computing the expectation over each component pspace in a for-loop. <code>ProductPSpace</code> does not have to inherit from <code>ContinuousPSpace</code> or <code>DiscretePSpace</code>, only its component pspaces do. This way any mixed product can be handled in a single class.",
  "id": "5b17799599fa7f4c064b780a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-06T06:05:09.168Z",
  "text": "Each pspace in `ProductPSpace` knows how to compute the expectation over itself (integration or summation). The expectation over the product is computed by computing the expectation over each component pspace in a for-loop. `ProductPSpace` does not have to inherit from `ContinuousPSpace` or `DiscretePSpace`, only its component pspaces do. This way any mixed product can be handled in a single class.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> In the case of mixed continuous and discrete RV we still have the problem of Kronecker vs Dirac delta",
  "id": "5b179d65e26c847ac8bf70e7",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-06T08:37:57.890Z",
  "text": "@jksuom In the case of mixed continuous and discrete RV we still have the problem of Kronecker vs Dirac delta",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "well, maybe not for the expectation, but for the density",
  "id": "5b17a034b6eece791de2c8e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-06T08:49:56.918Z",
  "text": "well, maybe not for the expectation, but for the density",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-06T08:51:02.974Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<p>In case of two normal RV:</p><pre><code class=\"python\">In [<span class=\"number\">32</span>]: density(X*Y, evaluate=<span class=\"keyword\">False</span>)\nOut[<span class=\"number\">32</span>]: \n    \u221e                                                    \n    \u2320                                                    \n    \u23ae                 \u221e                                  \n    \u23ae                 \u2320                                  \n    \u23ae                 \u23ae              <span class=\"number\">2</span>                   \n    \u23ae              <span class=\"number\">2</span>  \u23ae      -(X - <span class=\"number\">2</span>)                    \n    \u23ae      -(Y - <span class=\"number\">3</span>)   \u23ae      \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500                  \n    \u23ae      \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u23ae          <span class=\"number\">18</span>                      \n    \u23ae          <span class=\"number\">8</span>      \u23ae  \u221a<span class=\"number\">2</span>\u22c5\u212f          \u22c5\u03b4(-z + X\u22c5Y)      \n    \u23ae  \u221a<span class=\"number\">2</span>\u22c5\u212f          \u22c5\u23ae  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 dX   \n    \u23ae                 \u23ae             <span class=\"number\">6</span>\u22c5\u221a\u03c0                 \n    \u23ae                 \u2321                                  \n    \u23ae                 -\u221e                                 \nz \u21a6 \u23ae  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 dY\n    \u23ae                        <span class=\"number\">4</span>\u22c5\u221a\u03c0                        \n    \u2321                                                    \n    -\u221e</code></pre><p>At this point, if I try to get the density of mixed RV, I get:</p><pre><code class=\"python\">In [33]: N = Die(\"N\")\n\nIn [34]: density(X*N, evaluate=False)\n---------------------------------------------------------------------------\nNotImplementedError                       Traceback (most recent call last)\n&lt;ipython-input-34-9c5fed084d25&gt; in &lt;module&gt;()\n----&gt; 1 density (X *N ,evaluate =False )</code></pre>",
  "id": "5b17a06a352b9e1a4b623546",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-06T08:50:50.555Z",
  "text": "In case of two normal RV:\n```python\nIn [32]: density(X*Y, evaluate=False)\nOut[32]: \n    \u221e                                                    \n    \u2320                                                    \n    \u23ae                 \u221e                                  \n    \u23ae                 \u2320                                  \n    \u23ae                 \u23ae              2                   \n    \u23ae              2  \u23ae      -(X - 2)                    \n    \u23ae      -(Y - 3)   \u23ae      \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500                  \n    \u23ae      \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u23ae          18                      \n    \u23ae          8      \u23ae  \u221a2\u22c5\u212f          \u22c5\u03b4(-z + X\u22c5Y)      \n    \u23ae  \u221a2\u22c5\u212f          \u22c5\u23ae  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 dX   \n    \u23ae                 \u23ae             6\u22c5\u221a\u03c0                 \n    \u23ae                 \u2321                                  \n    \u23ae                 -\u221e                                 \nz \u21a6 \u23ae  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 dY\n    \u23ae                        4\u22c5\u221a\u03c0                        \n    \u2321                                                    \n    -\u221e \n```\n\nAt this point, if I try to get the density of mixed RV, I get:\n\n```python\nIn [33]: N = Die(\"N\")\n\nIn [34]: density(X*N, evaluate=False)\n---------------------------------------------------------------------------\nNotImplementedError                       Traceback (most recent call last)\n<ipython-input-34-9c5fed084d25> in <module>()\n----> 1 density (X *N ,evaluate =False )\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "In case of two discrete RV, the integrals would be replaced with summations and the Dirac delta with a Kronecker delta.",
  "id": "5b17a112352b9e1a4b62374d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-06T08:53:38.045Z",
  "text": "In case of two discrete RV, the integrals would be replaced with summations and the Dirac delta with a Kronecker delta.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think that <code>NotImplementedError</code> is simply what is says. The mixed case is not implemented yet. Once that is done, the density of <code>X*N</code> should be computed by means of Dirac delta as the variable is continuous despite a discrete component.",
  "id": "5b17a5304eaffb692d869ff9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-06T09:11:12.678Z",
  "text": "I think that `NotImplementedError` is simply what is says. The mixed case is not implemented yet. Once that is done, the density of `X*N` should be computed by means of Dirac delta as the variable is continuous despite a discrete component.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I have opened a PR <span data-link-type=\"issue\" data-issue=\"14777\" class=\"issue\">#14777</span>, removing <code>ProductDiscretePSpace</code> and <code>ProductContinuousPSpace</code>. I have not yet removed <code>ProductFinitePSpace</code> because of the difference in the way product classes are handled. The tests for finite product spaces fail right now, but that can be fixed by changing the method resolution order.(<code>Probability</code> from <code>SingleFinitePSpace</code> should be used instead of the one from <code>ProductPSpace</code>)",
  "id": "5b17d018b0d8ca5f1a8357aa",
  "issues": [
   {
    "number": "14777"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-06T12:14:16.024Z",
  "text": "I have opened a PR #14777, removing `ProductDiscretePSpace` and `ProductContinuousPSpace`. I have not yet removed `ProductFinitePSpace` because of the difference in the way product classes are handled. The tests for finite product spaces fail right now, but that can be fixed by changing the method resolution order.(`Probability` from `SingleFinitePSpace` should be used instead of the one from `ProductPSpace`)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<blockquote>\n<p>Each pspace in <code>ProductPSpace</code> knows how to compute the expectation over itself (integration or summation). The expectation over the product is computed by computing the expectation over each component pspace in a for-loop. <code>ProductPSpace</code> does not have to inherit from <code>ContinuousPSpace</code> or <code>DiscretePSpace</code>, only its component pspaces do. This way any mixed product can be handled in a single class.</p></blockquote>\n<p>I just read this message. I&#39;ll try to modify the PR accordingly.</p>",
  "id": "5b17d0b922a05f5e7106316e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-06T12:16:57.897Z",
  "text": "> Each pspace in `ProductPSpace` knows how to compute the expectation over itself (integration or summation). The expectation over the product is computed by computing the expectation over each component pspace in a for-loop. `ProductPSpace` does not have to inherit from `ContinuousPSpace` or `DiscretePSpace`, only its component pspaces do. This way any mixed product can be handled in a single class.\n\nI just read this message. I'll try to modify the PR accordingly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "you are putting too many things in the same PR",
  "id": "5b181503b6eece791de49c2d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-06T17:08:19.464Z",
  "text": "you are putting too many things in the same PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "maybe let&#39;s focus on creating a single <code>ProductPSpace</code> first",
  "id": "5b181514db98e07a9a76e777",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-06T17:08:36.286Z",
  "text": "maybe let's focus on creating a single `ProductPSpace` first",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "let&#39;s just create a PR for that only",
  "id": "5b18152322a05f5e71074a0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-06T17:08:51.564Z",
  "text": "let's just create a PR for that only",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "The branch created the new branch off of the branch used for <span data-link-type=\"issue\" data-issue=\"14730\" class=\"issue\">#14730</span>, before which product spaces with discrete random variables were not functional at all.<br>Only <code>ProductPSpace</code> has been changed after that.<br>Should I start with the code currently on the master branch?",
  "id": "5b18199393dc78791cb813ee",
  "issues": [
   {
    "number": "14730"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-06T17:27:47.807Z",
  "text": "The branch created the new branch off of the branch used for #14730, before which product spaces with discrete random variables were not functional at all. \nOnly `ProductPSpace` has been changed after that.\nShould I start with the code currently on the master branch?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Sorry, I missed joint_rv.py .I&#39;ll remove it. ",
  "id": "5b181d03160c567d160b339d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-06T17:42:27.716Z",
  "text": "Sorry, I missed joint_rv.py .I'll remove it. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "do you manage to address to broken tests by yourself or do you need help?",
  "id": "5b19325782a4d36ea6d9bf3c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-07T13:25:43.028Z",
  "text": "do you manage to address to broken tests by yourself or do you need help?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I think I&#39;ll be able to manage the tests with the implementation in the current PR. But I was trying to redo it the way suggested by <span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span>. Should I adress the broken tests first? ",
  "id": "5b193b85db98e07a9a7ac022",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-07T14:04:53.376Z",
  "text": "I think I'll be able to manage the tests with the implementation in the current PR. But I was trying to redo it the way suggested by @jksuom. Should I adress the broken tests first? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "No, code first is usually the best option",
  "id": "5b196d4ae26c847ac8c60044",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-07T17:37:14.437Z",
  "text": "No, code first is usually the best option",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<p>Hi. I am encountering some errors which I don&#39;t know how to get past.<br>The changes I have pushed to <span data-link-type=\"issue\" data-issue=\"14777\" class=\"issue\">#14777</span>, the tests pass locally, but fail Travis.<br>The doctests fail with the error </p><pre><code>...\nRuntimeError: To <span class=\"operator\"><span class=\"keyword\">use</span> MKL <span class=\"number\">2018</span> <span class=\"keyword\">with</span> Theano you MUST <span class=\"keyword\">set</span> <span class=\"string\">\"MKL_THREADING_LAYER=GNU\"</span> <span class=\"keyword\">in</span> your environement.</span></code></pre><p>Also,  I ran the following command multiple times:</p><pre><code><span class=\"prompt\">&gt;&gt;&gt; </span><span class=\"keyword\">from</span> sympy.stats <span class=\"keyword\">import</span> *\n<span class=\"prompt\">&gt;&gt;&gt; </span>Y, N = Poisson(<span class=\"string\">'Y'</span>, <span class=\"number\">1</span>), Normal(<span class=\"string\">'N'</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>)\n<span class=\"prompt\">&gt;&gt;&gt; </span>pprint(P(Y + N &lt; <span class=\"number\">1</span>, evaluate=<span class=\"keyword\">False</span>))</code></pre><p>But the answer randomly alternated between </p><pre><code>Integral<span class=\"list\">(<span class=\"keyword\">sqrt</span><span class=\"list\">(<span class=\"number\">2</span>)</span><span class=\"variable\">*exp(-N*</span><span class=\"variable\">*2/2)*</span>DiracDelta<span class=\"list\">(<span class=\"keyword\">-_z</span> + Lambda<span class=\"list\">(<span class=\"keyword\">_z</span>, Sum<span class=\"list\">(<span class=\"keyword\">exp</span><span class=\"list\">(<span class=\"keyword\">-1</span>)</span><span class=\"variable\">*KroneckerDelta(_z, N + Y - 1)/factorial(Y), (Y, 0, oo))))/(2*</span>sqrt<span class=\"list\">(<span class=\"keyword\">pi</span>)</span>)</span>, <span class=\"list\">(<span class=\"keyword\">N</span>, -oo, oo)</span>, <span class=\"list\">(<span class=\"keyword\">_z</span>, -oo, <span class=\"number\">0</span>)</span>)</span></span></span></code></pre><p>and </p><pre><code>0</code></pre><p>without any changes in the code. Can you please suggest how to approach this?</p>",
  "id": "5b1a0897ffd8896fe91118c2",
  "issues": [
   {
    "number": "14777"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-08T04:39:51.529Z",
  "text": "Hi. I am encountering some errors which I don't know how to get past.\nThe changes I have pushed to #14777, the tests pass locally, but fail Travis. \nThe doctests fail with the error \n```\n...\nRuntimeError: To use MKL 2018 with Theano you MUST set \"MKL_THREADING_LAYER=GNU\" in your environement.\n```\n\nAlso,  I ran the following command multiple times:\n```\n>>> from sympy.stats import *\n>>> Y, N = Poisson('Y', 1), Normal('N', 0, 1)\n>>> pprint(P(Y + N < 1, evaluate=False))\n```\nBut the answer randomly alternated between \n```\nIntegral(sqrt(2)*exp(-N**2/2)*DiracDelta(-_z + Lambda(_z, Sum(exp(-1)*KroneckerDelta(_z, N + Y - 1)/factorial(Y), (Y, 0, oo))))/(2*sqrt(pi)), (N, -oo, oo), (_z, -oo, 0))\n``` \nand \n```\n0\n``` \nwithout any changes in the code. Can you please suggest how to approach this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "put the links please",
  "id": "5b1a23989ca98417e2528c67",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-08T06:35:04.904Z",
  "text": "put the links please",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "This is with the changes in the PR <span data-link-type=\"issue\" data-issue=\"14777\" class=\"issue\">#14777</span>",
  "id": "5b1a2422a09ae108e60af481",
  "issues": [
   {
    "number": "14777"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-08T06:37:22.879Z",
  "text": "This is with the changes in the PR #14777",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "which Travis test is it?",
  "id": "5b1a2436659aad4a325d0fd4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-08T06:37:42.095Z",
  "text": "which Travis test is it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "It seems I always get the integral for that expression",
  "id": "5b1a249aced26d24bca62e42",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-08T06:39:22.589Z",
  "text": "It seems I always get the integral for that expression",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "The answers were changing randomly locally for me. If the changes seem fine to you, I can leave them as they are.<br>And about the test failures, I just updated some packages and got the error I get on travis. I&#39;ll try to fix them. ",
  "id": "5b1a256c3516592752f1c49d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-08T06:42:52.096Z",
  "text": "The answers were changing randomly locally for me. If the changes seem fine to you, I can leave them as they are.\nAnd about the test failures, I just updated some packages and got the error I get on travis. I'll try to fix them. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-08T07:03:13.493Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I am a little suspicious of the double role of (dummy) <code>z</code> in this part of the expression: <code>DiracDelta(-_z + Lambda(_z,Sum(exp(-1)*KroneckerDelta(_z, N + Y - 1)/factorial(Y)</code>. That could lead to confusion.",
  "id": "5b1a2a016023754a317843f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-08T07:02:25.406Z",
  "text": "I am a little suspicious of the double role of (dummy) `z` in this part of the expression: `DiracDelta(-_z + Lambda(_z,Sum(exp(-1)*KroneckerDelta(_z, N + Y - 1)/factorial(Y)`. That could lead to confusion.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I&#39;ll replace <code>z</code>  with <code>condition.lhs - condition.rhs</code>, if that&#39;s fine.",
  "id": "5b1a2aeeced26d24bca644b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-08T07:06:22.924Z",
  "text": "I'll replace `z`  with `condition.lhs - condition.rhs`, if that's fine.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That may be ok, if the dummy indices are different. (Only a reader may be confused, not the machine.)",
  "id": "5b1a2b006023754a317846db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-08T07:06:40.326Z",
  "text": "That may be ok, if the dummy indices are different. (Only a reader may be confused, not the machine.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I did mean the double <code>z</code>. I&#39;ll have to think about replacing <code>z</code> with the difference.",
  "id": "5b1a2b62659aad4a325d2b78",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-08T07:08:18.523Z",
  "text": "I did mean the double `z`. I'll have to think about replacing `z` with the difference.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Sorry, what do you mean by double <code>z</code>?",
  "id": "5b1a2be66023754a31784acb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-08T07:10:30.368Z",
  "text": "Sorry, what do you mean by double `z`?\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The arguments of both deltas look like <code>_z</code>. That is ok if they are different dummies.",
  "id": "5b1a2ce26023754a31784d73",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-08T07:14:42.407Z",
  "text": "The arguments of both deltas look like `_z`. That is ok if they are different dummies.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Oh. I was initializing the dummy only once. Will fix it.",
  "id": "5b1a2d2314d4bc146e738ee0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-08T07:15:47.831Z",
  "text": "Oh. I was initializing the dummy only once. Will fix it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I have fixed the failing tests on <span data-link-type=\"issue\" data-issue=\"14777\" class=\"issue\">#14777</span>. Please review.",
  "id": "5b1af6a5106f3c24bde72b3e",
  "issues": [
   {
    "number": "14777"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-08T21:35:33.274Z",
  "text": "I have fixed the failing tests on #14777. Please review.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> Please correct me if I am wrong, but I think the integral in <a href=\"https://github.com/sympy/sympy/pull/14777/files#diff-b01d00b493dcf0a02878b8e67ae46c27R19\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">this</a> test case converges, as opposed to your review <a href=\"https://github.com/sympy/sympy/pull/14777#discussion_r194443047\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a>",
  "id": "5b1eaf5d1ee2d149ecb8f1d4",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-11T17:20:29.655Z",
  "text": "@Upabjojr Please correct me if I am wrong, but I think the integral in [this](https://github.com/sympy/sympy/pull/14777/files#diff-b01d00b493dcf0a02878b8e67ae46c27R19) test case converges, as opposed to your review [here](https://github.com/sympy/sympy/pull/14777#discussion_r194443047)",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/14777/files#diff-b01d00b493dcf0a02878b8e67ae46c27R19"
   },
   {
    "url": "https://github.com/sympy/sympy/pull/14777#discussion_r194443047"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<p>So, I did it like this. Starting from:</p><pre><code><span class=\"number\">0</span>                                              \n\u2320                                              \n\u23ae    \u221e                                         \n\u23ae  ______                                      \n\u23ae  \u2572                                           \n\u23ae   \u2572         \u221e                                \n\u23ae    \u2572        \u2320                                \n\u23ae     \u2572    -<span class=\"number\">1</span> \u23ae  -E                            \n\u23ae      \u2572  \u212f  \u22c5\u23ae \u212f  \u22c5\u03b4(-_z + E + Y - <span class=\"number\">2</span>) dE      \n\u23ae      \u2571      \u2321                           <span class=\"function\"><span class=\"title\">d</span><span class=\"params\">(_z)</span></span>\n\u23ae     \u2571       <span class=\"number\">0</span>                                \n\u23ae    \u2571    \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500      \n\u23ae   \u2571                    Y!                    \n\u23ae  \u2571                                           \n\u23ae  \u203e\u203e\u203e\u203e\u203e\u203e                                      \n\u23ae  Y = <span class=\"number\">0</span>                                       \n\u2321                                              \n-\u221e</code></pre><p>I solve the inner one:</p><pre><code>\u221e                          \n\u2320                          \n\u23ae  -<span class=\"keyword\">E</span>                      \n\u23ae \u212f  \u22c5\u03b4(-_z + <span class=\"keyword\">E</span> + Y - <span class=\"number\">2</span>) dE\n\u2321                          \n<span class=\"number\">0</span></code></pre><p>to get</p><pre><code>   Y - _z - <span class=\"number\">2</span>                          Y - _z - <span class=\"number\">2</span>\n- \u212f          \u22c5<span class=\"function\"><span class=\"title\">Heaviside</span><span class=\"params\">(Y - _z - <span class=\"number\">2</span>)</span></span> + \u212f</code></pre><p>at this point I get the second integral:</p><pre><code><span class=\"number\">0</span>                                                               \n\u2320                                                               \n\u23ae  \u239b   Y - _z - <span class=\"number\">2</span>                          Y - _z - <span class=\"number\">2</span>\u239e  -<span class=\"number\">1</span>      \n\u23ae  \u239d- \u212f          \u22c5<span class=\"function\"><span class=\"title\">Heaviside</span><span class=\"params\">(Y - _z - <span class=\"number\">2</span>)</span></span> + \u212f          \u23a0\u22c5\u212f        \n\u23ae  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <span class=\"function\"><span class=\"title\">d</span><span class=\"params\">(_z)</span></span>\n\u23ae                             Y!                                \n\u2321                                                               \n-\u221e</code></pre><p>I then solve the Heaviside function and get the simplified form:</p><pre><code>  Y - <span class=\"number\">2</span>                      \n   \u2320                        \n   \u23ae    -<span class=\"number\">1</span>  Y - _z - <span class=\"number\">2</span>      \n   \u23ae   \u212f  \u22c5\u212f                \n-  \u23ae   \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <span class=\"function\"><span class=\"title\">d</span><span class=\"params\">(_z)</span></span>\n   \u23ae          Y!            \n   \u2321                        \n   <span class=\"number\">0</span></code></pre><p>this returns:</p><pre><code> -<span class=\"number\">1</span>  <span class=\"variable\">Y</span> - <span class=\"number\">2</span>    -<span class=\"number\">1</span>\n\u212f  \u22c5\u212f        \u212f  \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 - \u2500\u2500\u2500\n    <span class=\"variable\">Y</span><span class=\"exclamation_mark\">!</span>        <span class=\"variable\">Y</span><span class=\"exclamation_mark\">!</span></code></pre><p>I put this into the summation and get:</p><pre><code>  \u221e                     \n ____                   \n \u2572                      \n  \u2572   \u239b -<span class=\"number\">1</span>  <span class=\"variable\">Y</span> - <span class=\"number\">2</span>    -<span class=\"number\">1</span>\u239e\n   \u2572  \u239c\u212f  \u22c5\u212f        \u212f  \u239f\n   \u2571  \u239c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 - \u2500\u2500\u2500\u239f\n  \u2571   \u239d    <span class=\"variable\">Y</span><span class=\"exclamation_mark\">!</span>        <span class=\"variable\">Y</span><span class=\"exclamation_mark\">!</span>\u23a0\n \u2571                      \n \u203e\u203e\u203e\u203e                   \n<span class=\"variable\">Y</span> = <span class=\"number\">0</span></code></pre><p>After doing the summation I get</p><pre><code>      -<span class=\"ruby\"><span class=\"number\">3</span>  \u212f\n</span>-<span class=\"ruby\"><span class=\"number\">1</span> + \u212f  \u22c5\u212f</span></code></pre><p>If I consider the Poisson cases, <code>Y=0</code> and <code>Y=1</code> I have:</p><pre><code><span class=\"function\"><span class=\"title\">P</span><span class=\"params\">(Y=<span class=\"number\">0</span>)</span></span>*<span class=\"function\"><span class=\"title\">P</span><span class=\"params\">(<span class=\"number\">0</span>&lt;E&lt;<span class=\"number\">2</span>)</span></span> + <span class=\"function\"><span class=\"title\">P</span><span class=\"params\">(Y=<span class=\"number\">1</span>)</span></span>*<span class=\"function\"><span class=\"title\">P</span><span class=\"params\">(<span class=\"number\">0</span>&lt;E&lt;<span class=\"number\">1</span>)</span></span></code></pre><p>that is</p><pre><code><span class=\"function\"><span class=\"title\">simplify</span><span class=\"params\">(P(E&lt;<span class=\"number\">1</span>)</span></span>*<span class=\"function\"><span class=\"title\">density</span><span class=\"params\">(Y)</span><span class=\"params\">(<span class=\"number\">1</span>)</span></span> + <span class=\"function\"><span class=\"title\">P</span><span class=\"params\">(E&lt;<span class=\"number\">2</span>)</span></span>*<span class=\"function\"><span class=\"title\">density</span><span class=\"params\">(Y)</span><span class=\"params\">(<span class=\"number\">0</span>)</span></span>)</code></pre><p>I get</p><pre><code>\u239b            2\u239e  -3\n\u239d-\u212f - 1 + 2\u22c5\u212f \u23a0\u22c5\u212f</code></pre><p>I&#39;m getting two different results. Did I make a mistake? I just wanted to check before merging.</p>",
  "id": "5b1ecf0a86343c3a32fbc740",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-11T19:35:38.750Z",
  "text": "So, I did it like this. Starting from:\n```\n0                                              \n\u2320                                              \n\u23ae    \u221e                                         \n\u23ae  ______                                      \n\u23ae  \u2572                                           \n\u23ae   \u2572         \u221e                                \n\u23ae    \u2572        \u2320                                \n\u23ae     \u2572    -1 \u23ae  -E                            \n\u23ae      \u2572  \u212f  \u22c5\u23ae \u212f  \u22c5\u03b4(-_z + E + Y - 2) dE      \n\u23ae      \u2571      \u2321                           d(_z)\n\u23ae     \u2571       0                                \n\u23ae    \u2571    \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500      \n\u23ae   \u2571                    Y!                    \n\u23ae  \u2571                                           \n\u23ae  \u203e\u203e\u203e\u203e\u203e\u203e                                      \n\u23ae  Y = 0                                       \n\u2321                                              \n-\u221e    \n```\nI solve the inner one:\n```\n\u221e                          \n\u2320                          \n\u23ae  -E                      \n\u23ae \u212f  \u22c5\u03b4(-_z + E + Y - 2) dE\n\u2321                          \n0  \n```\nto get\n```\n   Y - _z - 2                          Y - _z - 2\n- \u212f          \u22c5Heaviside(Y - _z - 2) + \u212f \n```\nat this point I get the second integral:\n```\n0                                                               \n\u2320                                                               \n\u23ae  \u239b   Y - _z - 2                          Y - _z - 2\u239e  -1      \n\u23ae  \u239d- \u212f          \u22c5Heaviside(Y - _z - 2) + \u212f          \u23a0\u22c5\u212f        \n\u23ae  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 d(_z)\n\u23ae                             Y!                                \n\u2321                                                               \n-\u221e\n```\nI then solve the Heaviside function and get the simplified form:\n```\n  Y - 2                      \n   \u2320                        \n   \u23ae    -1  Y - _z - 2      \n   \u23ae   \u212f  \u22c5\u212f                \n-  \u23ae   \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 d(_z)\n   \u23ae          Y!            \n   \u2321                        \n   0   \n```\nthis returns:\n```\n -1  Y - 2    -1\n\u212f  \u22c5\u212f        \u212f  \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 - \u2500\u2500\u2500\n    Y!        Y!\n```\nI put this into the summation and get:\n```\n  \u221e                     \n ____                   \n \u2572                      \n  \u2572   \u239b -1  Y - 2    -1\u239e\n   \u2572  \u239c\u212f  \u22c5\u212f        \u212f  \u239f\n   \u2571  \u239c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 - \u2500\u2500\u2500\u239f\n  \u2571   \u239d    Y!        Y!\u23a0\n \u2571                      \n \u203e\u203e\u203e\u203e                   \nY = 0\n```\nAfter doing the summation I get\n```\n      -3  \u212f\n-1 + \u212f  \u22c5\u212f \n```\nIf I consider the Poisson cases, `Y=0` and `Y=1` I have:\n```\nP(Y=0)*P(0<E<2) + P(Y=1)*P(0<E<1)\n```\nthat is\n```\nsimplify(P(E<1)*density(Y)(1) + P(E<2)*density(Y)(0))\n```\nI get\n```\n\u239b            2\u239e  -3\n\u239d-\u212f - 1 + 2\u22c5\u212f \u23a0\u22c5\u212f  \n```\nI'm getting two different results. Did I make a mistake? I just wanted to check before merging.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "At the step you solve for the Heaviside after solving the second integral, I think the limits of <code>_z</code> are from <code>y - 2</code> to 0.<br>I am still getting different answers though. I will try to figure it out.",
  "id": "5b1ed926d128fa71f66110c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-11T20:18:46.089Z",
  "text": "At the step you solve for the Heaviside after solving the second integral, I think the limits of `_z` are from `y - 2` to 0. \nI am still getting different answers though. I will try to figure it out.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Yes, the PR seems okay. I would just like to check this integral",
  "id": "5b1edb8c82b1b355c94f2552",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-11T20:29:00.179Z",
  "text": "Yes, the PR seems okay. I would just like to check this integral",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "The integral doesn&#39;t seem to give the right answer; solving the integral as you did above (but changing the limits of <code>_z</code>) gives  a different answer from what the answer should be.",
  "id": "5b1eddfd32618e705eb1b134",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-11T20:39:25.253Z",
  "text": "The integral doesn't seem to give the right answer; solving the integral as you did above (but changing the limits of `_z`) gives  a different answer from what the answer should be.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> can you check please?",
  "id": "5b1f4e8b1ee2d149ecba477a",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-12T04:39:39.861Z",
  "text": "@jksuom can you check please?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I&#39;ll try look into that. It may take a few hours as I am otherwise occupied right now. On the surface, the code looks ok. ",
  "id": "5b1f5cc2fd5b835b2d53f73a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-12T05:40:18.308Z",
  "text": "I'll try look into that. It may take a few hours as I am otherwise occupied right now. On the surface, the code looks ok. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "When simplifying the Heaviside integral I get <code>Integral(..., (z, Y - 2, 0))</code> for <code>Y &lt; 2</code> and 0 otherwise. So I think that the summation should be over <code>Y = 0</code> and <code>Y = 1</code> only.",
  "id": "5b1f7a7d4fbf4449eb0f02cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-12T07:47:09.540Z",
  "text": "When simplifying the Heaviside integral I get `Integral(..., (z, Y - 2, 0))` for `Y < 2` and 0 otherwise. So I think that the summation should be over `Y = 0` and `Y = 1` only.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "The integral lies inside the summation. So for <code>Y &gt;=2</code>, i.e. <code>Y - 2 &gt;=0</code>, the integral goes to zero because of the limits. So I think that even if the summation is over all non negative integers, the answer should be the same. ",
  "id": "5b1f91a932618e705eb32191",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-12T09:26:01.765Z",
  "text": "The integral lies inside the summation. So for `Y >=2`, i.e. `Y - 2 >=0`, the integral goes to zero because of the limits. So I think that even if the summation is over all non negative integers, the answer should be the same. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Yes, that is right.",
  "id": "5b1fa5de4fbf4449eb0f666e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-12T10:52:14.531Z",
  "text": "Yes, that is right.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The integral should evaluate to a Piecewise expression. Then the sum would be truncated to the first two terms.",
  "id": "5b1fac7332618e705eb367be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-12T11:20:19.209Z",
  "text": "The integral should evaluate to a Piecewise expression. Then the sum would be truncated to the first two terms.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<p>Hi.<br>I was trying to check the result, and reversed the summation and the outer integral, after solving the first one. This gives:</p><pre><code>  \u221e                                                              \n______                                                           \n\u2572                                                                \n \u2572     <span class=\"number\">0</span>                                                         \n  \u2572    \u2320                                                         \n   \u2572   \u23ae  \u239b   y - z - <span class=\"number\">2</span>                         y - z - <span class=\"number\">2</span>\u239e  -<span class=\"number\">1</span>   \n    \u2572  \u23ae  \u239d- \u212f         \u22c5<span class=\"function\"><span class=\"title\">Heaviside</span><span class=\"params\">(y - z - <span class=\"number\">2</span>)</span></span> + \u212f         \u23a0\u22c5\u212f     \n    \u2571  \u23ae  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 dz\n   \u2571   \u23ae                           y!                            \n  \u2571    \u2321                                                         \n \u2571     -\u221e                                                        \n\u2571                                                                \n\u203e\u203e\u203e\u203e\u203e\u203e                                                           \ny = <span class=\"number\">0</span></code></pre><p>If this expression is taken as <code>c</code>, <code>c.doit()</code> gives:</p><pre><code>   \u221e                                   \n_______                                \n\u2572                                      \n \u2572      \u23a7   -<span class=\"number\">1</span>  <span class=\"function_or_atom\">y</span> - <span class=\"number\">2</span>    -<span class=\"number\">1</span>            \n  \u2572     \u23aa  \u212f  \u22c5\u212f        \u212f              \n   \u2572    \u23aa- \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 + \u2500\u2500\u2500  <span class=\"function_or_atom\">for</span> <span class=\"function_or_atom\">y</span><span class=\"exclamation_mark\">!</span> \u2260 <span class=\"number\">0</span>\n    \u2572   \u23aa      <span class=\"function_or_atom\">y</span><span class=\"exclamation_mark\">!</span>        <span class=\"function_or_atom\">y</span><span class=\"exclamation_mark\">!</span>            \n     \u2572  \u23a8                              \n     \u2571  \u23aa            -<span class=\"number\">1</span>                \n    \u2571   \u23aa  -(<span class=\"function_or_atom\">y</span> - <span class=\"number\">2</span>)\u22c5\u212f                  \n   \u2571    \u23aa  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500     <span class=\"function_or_atom\">otherwise</span> \n  \u2571     \u23a9        <span class=\"function_or_atom\">y</span><span class=\"exclamation_mark\">!</span>                    \n \u2571                                     \n\u2571                                      \n\u203e\u203e\u203e\u203e\u203e\u203e\u203e                                \n <span class=\"function_or_atom\">y</span> = <span class=\"number\">0</span></code></pre><p>Since <code>y!</code> is not zero, I took the first case of the above piecewise condition as <code>d</code>. </p><pre><code>   -<span class=\"ruby\"><span class=\"number\">1</span>  y - <span class=\"number\">2</span>    -<span class=\"number\">1</span>\n</span>  \u212f  \u22c5\u212f        \u212f  \n-<span class=\"ruby\"> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 + \u2500\u2500\u2500\n</span>      y!        y!</code></pre><p>Now, summing <code>d</code> over 0 and 1 gives </p><pre><code>-<span class=\"function\"><span class=\"title\">exp</span><span class=\"params\">(-<span class=\"number\">2</span>)</span></span> - <span class=\"function\"><span class=\"title\">exp</span><span class=\"params\">(-<span class=\"number\">3</span>)</span></span> + <span class=\"number\">2</span>*<span class=\"function\"><span class=\"title\">exp</span><span class=\"params\">(-<span class=\"number\">1</span>)</span></span></code></pre><p>Which is the right answer.<br>So, I think the expression that the code generates is the right one, but SymPy is not able to solve it right now.</p>",
  "id": "5b1fe8a732618e705eb42f08",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-12T15:37:11.733Z",
  "text": "Hi.\nI was trying to check the result, and reversed the summation and the outer integral, after solving the first one. This gives:\n```\n  \u221e                                                              \n______                                                           \n\u2572                                                                \n \u2572     0                                                         \n  \u2572    \u2320                                                         \n   \u2572   \u23ae  \u239b   y - z - 2                         y - z - 2\u239e  -1   \n    \u2572  \u23ae  \u239d- \u212f         \u22c5Heaviside(y - z - 2) + \u212f         \u23a0\u22c5\u212f     \n    \u2571  \u23ae  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 dz\n   \u2571   \u23ae                           y!                            \n  \u2571    \u2321                                                         \n \u2571     -\u221e                                                        \n\u2571                                                                \n\u203e\u203e\u203e\u203e\u203e\u203e                                                           \ny = 0\n```\nIf this expression is taken as `c`, `c.doit()` gives:\n```\n   \u221e                                   \n_______                                \n\u2572                                      \n \u2572      \u23a7   -1  y - 2    -1            \n  \u2572     \u23aa  \u212f  \u22c5\u212f        \u212f              \n   \u2572    \u23aa- \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 + \u2500\u2500\u2500  for y! \u2260 0\n    \u2572   \u23aa      y!        y!            \n     \u2572  \u23a8                              \n     \u2571  \u23aa            -1                \n    \u2571   \u23aa  -(y - 2)\u22c5\u212f                  \n   \u2571    \u23aa  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500     otherwise \n  \u2571     \u23a9        y!                    \n \u2571                                     \n\u2571                                      \n\u203e\u203e\u203e\u203e\u203e\u203e\u203e                                \n y = 0 \n```\nSince `y!` is not zero, I took the first case of the above piecewise condition as `d`. \n```\n   -1  y - 2    -1\n  \u212f  \u22c5\u212f        \u212f  \n- \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 + \u2500\u2500\u2500\n      y!        y!\n\n```\nNow, summing `d` over 0 and 1 gives \n```\n-exp(-2) - exp(-3) + 2*exp(-1)\n```\nWhich is the right answer. \nSo, I think the expression that the code generates is the right one, but SymPy is not able to solve it right now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I&#39;ve merged the PR",
  "id": "5b1fe994e87f0c7bee854cda",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-12T15:41:08.370Z",
  "text": "I've merged the PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "sorry for this issue, but I wanted to be sure that the test is correct",
  "id": "5b1fe9acebf21755ca2b7b5a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-12T15:41:32.745Z",
  "text": "sorry for this issue, but I wanted to be sure that the test is correct",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I think we can now focus on the joint probability distributions",
  "id": "5b1fe9bb32618e705eb4329d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-12T15:41:47.557Z",
  "text": "I think we can now focus on the joint probability distributions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Thanks. I was also not sure if this gave the right answer up till now<br>Yes, I was working a bit on joint probability also. I will try to update the PR soon.",
  "id": "5b1fea1bebf21755ca2b7cb5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-12T15:43:23.511Z",
  "text": "Thanks. I was also not sure if this gave the right answer up till now\nYes, I was working a bit on joint probability also. I will try to update the PR soon.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "we need a class for joint distributions",
  "id": "5b1feba982b1b355c951a443",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-12T15:50:01.889Z",
  "text": "we need a class for joint distributions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the joint pspace could be done with only one class",
  "id": "5b1febbc202c8f71f5fbb6b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-12T15:50:20.443Z",
  "text": "the joint pspace could be done with only one class",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "in a similar way to  <code>ProductPSpace</code>",
  "id": "5b1febcafd5b835b2d557f91",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-12T15:50:34.639Z",
  "text": "in a similar way to  `ProductPSpace`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Okay.<br>I am not very sure about the API. I was thinking of supporting two forms of input:<br>1) List of symbols and the density<br>2) List of random symbols<br>Is it fine to proceed this way?",
  "id": "5b1ffe56c277fb705dc83136",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-12T17:09:42.355Z",
  "text": "Okay. \nI am not very sure about the API. I was thinking of supporting two forms of input:\n1) List of symbols and the density\n2) List of random symbols\nIs it fine to proceed this way?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Is is possible to use density if there are discrete variables?",
  "id": "5b200280cf3b245b2cf88941",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-12T17:27:28.202Z",
  "text": "Is is possible to use density if there are discrete variables?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Sorry, I meant the PDF.<br>But the issue will be calculating the marginal densities, if the user simply gives the symbols and the PDF, because we need to know if we need to do a summation or an integration",
  "id": "5b2006a2a0161836cb153d9f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-12T17:45:06.122Z",
  "text": "Sorry, I meant the PDF. \nBut the issue will be calculating the marginal densities, if the user simply gives the symbols and the PDF, because we need to know if we need to do a summation or an integration",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Would the symbols be only Symbols? Or should they be random variables with a PDF of their own?",
  "id": "5b20081afd5b835b2d55dae1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-12T17:51:22.984Z",
  "text": "Would the symbols be only Symbols? Or should they be random variables with a PDF of their own?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I was thinking symbols, which would then be converted to random symbols internally, since SymPy does not allow the user to define random variables of their own.",
  "id": "5b2008c18864a936cc827817",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-12T17:54:09.733Z",
  "text": "I was thinking symbols, which would then be converted to random symbols internally, since SymPy does not allow the user to define random variables of their own.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would recommend only one input form in the API",
  "id": "5b2141128864a936cc8556ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-13T16:06:42.186Z",
  "text": "I would recommend only one input form in the API",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "further ones can be introduced later",
  "id": "5b214122fd5b835b2d58b598",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-13T16:06:58.588Z",
  "text": "further ones can be introduced later",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Okay, I&#39;ll start with random symbols as input, if that&#39;s okay.",
  "id": "5b2145eee87f0c7bee88ae0e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-13T16:27:26.961Z",
  "text": "Okay, I'll start with random symbols as input, if that's okay.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Or maybe simply with multivariate distributions",
  "id": "5b2212c3cf3b245b2cfd3d9e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-14T07:01:23.890Z",
  "text": "Or maybe simply with multivariate distributions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Just write a draft, we don&#39;t need to decide the API right now",
  "id": "5b22130b86343c3a32036e10",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-14T07:02:35.214Z",
  "text": "Just write a draft, we don't need to decide the API right now",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would start with the coffee and testing, after that we can fix the class constructor",
  "id": "5b22132a4fbf4449eb15432b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-14T07:03:06.371Z",
  "text": "I would start with the coffee and testing, after that we can fix the class constructor",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Okay. ",
  "id": "5b22371d1ee2d149ecc13493",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-14T09:36:29.858Z",
  "text": "Okay. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Hi. I have updated <span data-link-type=\"issue\" data-issue=\"14764\" class=\"issue\">#14764</span>, and added multivariate normal distribution.<br>Right now, for declaring a joint distribution, the user has to enter the name of the distribution, the symbols for each of the component, and the arguments specific to multivariate normal distribution.  Is it fine to add the rest of the distributions in the same way?<br>Also, I will add a class for marginal distributions, where the object will be initialised with the symbol/name and the parent class, if it is okay to proceed this way.",
  "id": "5b2751414a5db82dd5916053",
  "issues": [
   {
    "number": "14764"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-18T06:29:21.582Z",
  "text": "Hi. I have updated #14764, and added multivariate normal distribution. \nRight now, for declaring a joint distribution, the user has to enter the name of the distribution, the symbols for each of the component, and the arguments specific to multivariate normal distribution.  Is it fine to add the rest of the distributions in the same way? \nAlso, I will add a class for marginal distributions, where the object will be initialised with the symbol/name and the parent class, if it is okay to proceed this way.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "The CDF and marginal density methods currently in the PR were written for a form of input where the user inputs indpendent random variables, so I will also change that, and update them.",
  "id": "5b275195f41ea926bc8b8d8c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-18T06:30:45.601Z",
  "text": "The CDF and marginal density methods currently in the PR were written for a form of input where the user inputs indpendent random variables, so I will also change that, and update them.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Would it be okay to return a <code>FiniteSet</code> consisting of individual random symbols when calling any joint distribution? The pspace assigned to each of the random symbols would be the marginal probability space.",
  "id": "5b28d74e6ceffe4eba18d90e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-19T10:13:34.571Z",
  "text": "Would it be okay to return a `FiniteSet` consisting of individual random symbols when calling any joint distribution? The pspace assigned to each of the random symbols would be the marginal probability space.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Would it be possible to return a probability space object having  a tuple of random symbols as an attribute. (I think that tuples are easier to handle than sets.)",
  "id": "5b291b4814805602858edcd9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-19T15:03:36.853Z",
  "text": "Would it be possible to return a probability space object having  a tuple of random symbols as an attribute. (I think that tuples are easier to handle than sets.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "If we are returning a probability space, wouldn&#39;t it be better to return the Joint probability space itself?<br>The main concern I had was all other distributioins, when called, return random symbol, which is of the type <code>Expr</code>. But since a joint distribution takes in multiple parameters for the density,  it would be better to return a tuple/probability space.",
  "id": "5b291cdf72b31d3691d92a1f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-19T15:10:23.450Z",
  "text": "If we are returning a probability space, wouldn't it be better to return the Joint probability space itself?\nThe main concern I had was all other distributioins, when called, return random symbol, which is of the type `Expr`. But since a joint distribution takes in multiple parameters for the density,  it would be better to return a tuple/probability space.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "<blockquote>\nreturn the Joint probability space itself?</blockquote>\n",
  "id": "5b291dc6fc60620380655ad2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-19T15:14:14.589Z",
  "text": "> return the Joint probability space itself?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That is exactly what I had in mind.",
  "id": "5b291dd5ce3b0f268d29fa06",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-19T15:14:29.825Z",
  "text": "That is exactly what I had in mind.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "There could be additional functions returning both a probability space and its random variables if desired.",
  "id": "5b291ef859799e70172aa34d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-19T15:19:20.893Z",
  "text": "There could be additional functions returning both a probability space and its random variables if desired.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Okay. Thanks!",
  "id": "5b29208ece3b0f268d2a00c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-19T15:26:06.609Z",
  "text": "Okay. Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I have added certain multivariate distributions in <span data-link-type=\"issue\" data-issue=\"14764\" class=\"issue\">#14764</span>. Please review.<br>Also, one issue I am facing is that core/tests/test_args.py is failing tests.  Could you please help on how  to add tests for <code>JointPSpace</code> and <code>JointDistribution</code> classes, where the input parameters are not of the type <code>Basic</code>? ",
  "id": "5b2cb2cdce3b0f268d37a756",
  "issues": [
   {
    "number": "14764"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-22T08:26:53.494Z",
  "text": "I have added certain multivariate distributions in #14764. Please review.\nAlso, one issue I am facing is that core/tests/test_args.py is failing tests.  Could you please help on how  to add tests for `JointPSpace` and `JointDistribution` classes, where the input parameters are not of the type `Basic`? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-22T09:11:32.733Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "One possibility is that only Basic objects are included among <code>args</code>.  Then <code>obj = Basic.__new__(...)</code> is created and non-Basic attributes are added like <code>obj.syms = tuple(map(sympify, syms))</code>. Finally <code>obj</code> is returned. That is how the <code>name</code> of type <code>str</code> is added to <code>Symbol</code>.",
  "id": "5b2cbbc25862c35f47bd7a3b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-22T09:05:06.648Z",
  "text": "One possibility is that only Basic objects are included among `args`.  Then `obj = Basic.__new__(...)` is created and non-Basic attributes are added like `obj.syms = tuple(map(sympify, syms))`. Finally `obj` is returned. That is how the `name` of type `str` is added to `Symbol`.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<p>I tried doing it this way:</p><pre><code><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__new__</span><span class=\"params\">(cls, syms, dist, **args)</span>:</span>\n    syms = tuple(map(sympify, syms))\n    obj = Basic.__new__(cls, syms, dist, **args)\n    obj.syms = tuple(map(sympify,   syms))\n    <span class=\"keyword\">return</span> obj</code></pre><p>But it still gives the assertion error. </p>",
  "id": "5b2cbf57ad21887018d422c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-22T09:20:23.147Z",
  "text": "I tried doing it this way:\n```\ndef __new__(cls, syms, dist, **args):\n    syms = tuple(map(sympify, syms))\n    obj = Basic.__new__(cls, syms, dist, **args)\n    obj.syms = tuple(map(sympify,   syms))\n    return obj\n```\nBut it still gives the assertion error. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "You should not put <code>syms</code> in the argument list of <code>__new__</code>.",
  "id": "5b2cc321d2abe466887f5361",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-22T09:36:33.040Z",
  "text": "You should not put `syms` in the argument list of `__new__`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "And <code>dist</code> should be Basic.",
  "id": "5b2cc3697d3bca737a005d40",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-22T09:37:45.836Z",
  "text": "And `dist` should be Basic.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It also seems that <code>Basic.__new__</code> does not recognize <code>dict</code> arguments <code>**args</code>.",
  "id": "5b2cc3fe0168e70c08e33558",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-22T09:40:14.328Z",
  "text": "It also seems that `Basic.__new__` does not recognize `dict` arguments `**args`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Thanks! That works.<br><code>dist</code> is of type <code>JointDistribution</code>, which inherits from <code>Basic</code>.",
  "id": "5b2cc7d35862c35f47bd9935",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-22T09:56:35.461Z",
  "text": "Thanks! That works. \n`dist` is of type `JointDistribution`, which inherits from `Basic`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It would also be possible to put <code>syms</code> on the list of <code>__new__</code> if it were of type <code>Tuple</code>. That should be done if it were essential for identifying the object. But I think that <code>dist</code> alone should suffice for that.",
  "id": "5b2ccdf4b9c2fb255700ca68",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-22T10:22:44.974Z",
  "text": "It would also be possible to put `syms` on the list of `__new__` if it were of type `Tuple`. That should be done if it were essential for identifying the object. But I think that `dist` alone should suffice for that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<code>syms</code> helps in uniquely identify an object, two different objects may have the same <code>dist</code> but different symbols. ",
  "id": "5b2ce0df960fcd4eb9196b3d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-22T11:43:27.243Z",
  "text": "`syms` helps in uniquely identify an object, two different objects may have the same `dist` but different symbols. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "In that case, it probably should be made a Tuple.",
  "id": "5b2ce3b0479ca2668975690d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-22T11:55:28.331Z",
  "text": "In that case, it probably should be made a Tuple.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Yes. I&#39;ll make the change.",
  "id": "5b2ce3c1d2abe466887fa99d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-22T11:55:45.373Z",
  "text": "Yes. I'll make the change.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "The failing tests have been fixed. Please have a look at the changes. ",
  "id": "5b2d3515467bd7268c2ae2f5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-22T17:42:45.746Z",
  "text": "The failing tests have been fixed. Please have a look at the changes. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the original author of the stats module had an example interface on how to use multivariate normal distributions:",
  "id": "5b30a047ad21887018dbcfc5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-25T07:56:55.507Z",
  "text": "the original author of the stats module had an example interface on how to use multivariate normal distributions:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<a href=\"https://sympystats.wordpress.com/2011/07/19/multivariate-normal-random-variables/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://sympystats.wordpress.com/2011/07/19/multivariate-normal-random-variables/</a>",
  "id": "5b30a0485862c35f47c59429",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-25T07:56:56.135Z",
  "text": "https://sympystats.wordpress.com/2011/07/19/multivariate-normal-random-variables/",
  "unread": false,
  "urls": [
   {
    "url": "https://sympystats.wordpress.com/2011/07/19/multivariate-normal-random-variables/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I believe that API would be desireable",
  "id": "5b30a054d2abe4668887ace9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-25T07:57:08.478Z",
  "text": "I believe that API would be desireable",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "that is... <code>Normal</code> should construct a <code>RandomSymbol</code> with multivariate support if the arguments are matrices instead of symbols",
  "id": "5b30a08f479ca266897ce4cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-25T07:58:07.541Z",
  "text": "that is... `Normal` should construct a `RandomSymbol` with multivariate support if the arguments are matrices instead of symbols",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "another idea: instead of <code>syms</code> maybe we should use an indexed symbol in <code>JointDistribution</code> and <code>JointPSpace</code>",
  "id": "5b30a0e1aeb8fa0c073fb40c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-25T07:59:29.676Z",
  "text": "another idea: instead of `syms` maybe we should use an indexed symbol in `JointDistribution` and `JointPSpace`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Thanks. I think <code>syms</code> being replaced by an indexed symbol would be a better idea, because it could be used uniformly for all joint distributions. Also, a single random variable will be able to represent the whole space, as being done for other spaces. ",
  "id": "5b30a432b9c2fb255708e911",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-25T08:13:38.673Z",
  "text": "Thanks. I think `syms` being replaced by an indexed symbol would be a better idea, because it could be used uniformly for all joint distributions. Also, a single random variable will be able to represent the whole space, as being done for other spaces. \n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "do you think you can support both matrices and indexed symbols?",
  "id": "5b30a45959799e70173f4dce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-25T08:14:17.165Z",
  "text": "do you think you can support both matrices and indexed symbols?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Yes, that shouldn&#39;t be a problem. But that would be only for specific cases, right?<br>For example, the normal gamma distribution takes real numbers as parameters instead of matrices.",
  "id": "5b30a4a7d2abe4668887b984",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-25T08:15:35.434Z",
  "text": "Yes, that shouldn't be a problem. But that would be only for specific cases, right?\nFor example, the normal gamma distribution takes real numbers as parameters instead of matrices.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "for example, should the multivariate normal distribution class be different from the single variate?",
  "id": "5b30a567d2abe4668887bb0c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-25T08:18:47.592Z",
  "text": "for example, should the multivariate normal distribution class be different from the single variate?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I mean, can we adapt the distribution for the single variable or do we need a separate class?",
  "id": "5b30a58da288503b3ddcf343",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-25T08:19:25.617Z",
  "text": "I mean, can we adapt the distribution for the single variable or do we need a separate class?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "The single variable does not support multivariable density and marginalization, I&#39;m not sure whether they should be supported by the <code>PSpace</code>or also by the distribution class",
  "id": "5b30a5c159799e70173f529f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-25T08:20:17.959Z",
  "text": "The single variable does not support multivariable density and marginalization, I'm not sure whether they should be supported by the `PSpace`or also by the distribution class",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-25T08:24:49.415Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<p>I think a seperate class would be better. </p><blockquote>\n<p>The single variable does not support multivariable density and marginalization, I&#39;m not sure whether they should be supported by the <code>PSpace</code>or also by the distribution class</p></blockquote>\n<p>If we use indexed symbols like you suggested, the variable would be able to represent the pspace.<br>Code can be modified for the <code>Normal</code> random variable so that it returns a random symbol with  <code>MultivariateNormalDistribution</code> when the user enters matrices instead of single numbers.</p>",
  "id": "5b30a6c2b9c2fb255708ef53",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-25T08:24:34.895Z",
  "text": "I think a seperate class would be better. \n> The single variable does not support multivariable density and marginalization, I'm not sure whether they should be supported by the `PSpace`or also by the distribution class\n\nIf we use indexed symbols like you suggested, the variable would be able to represent the pspace.\nCode can be modified for the `Normal` random variable so that it returns a random symbol with  `MultivariateNormalDistribution` when the user enters matrices instead of single numbers.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "OK, but still try to give a thought at how the distribution classes could be unified",
  "id": "5b30a7c7d2abe4668887c0c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-25T08:28:55.339Z",
  "text": "OK, but still try to give a thought at how the distribution classes could be unified",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the less classes we have the better",
  "id": "5b30a7cf7da8cd7c8c6b34be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-25T08:29:03.414Z",
  "text": "the less classes we have the better",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Okay, I will try to unify them. ",
  "id": "5b30a7ee6ceffe4eba30ac94",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-25T08:29:34.798Z",
  "text": "Okay, I will try to unify them. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I mean, unless it looks too complicated",
  "id": "5b30a80272b31d3691f12646",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-25T08:29:54.895Z",
  "text": "I mean, unless it looks too complicated",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "if you find an easy way, go for it, otherwise separate classes are OK",
  "id": "5b30a810b9c2fb255708f39c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-25T08:30:08.828Z",
  "text": "if you find an easy way, go for it, otherwise separate classes are OK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I&#39;ll try to unify the classes and make a seperate PR. If it looks okay, we can go for it, otherwise I&#39;ll go for seperate classes. ",
  "id": "5b30a8387da8cd7c8c6b35a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-25T08:30:48.536Z",
  "text": "I'll try to unify the classes and make a seperate PR. If it looks okay, we can go for it, otherwise I'll go for seperate classes. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "OK",
  "id": "5b30a847b9c2fb255708f3ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-25T08:31:03.424Z",
  "text": "OK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "also keep in mind that after this we are going to generalize the work to stochastic processes",
  "id": "5b30a861960fcd4eb920d643",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-25T08:31:29.156Z",
  "text": "also keep in mind that after this we are going to generalize the work to stochastic processes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "we should already keep in mind a possible generalization",
  "id": "5b30a87559799e70173f592c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-25T08:31:49.224Z",
  "text": "we should already keep in mind a possible generalization",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "stochastic processes may be thought as joint probabilities with infinite variables",
  "id": "5b30a8890168e70c08ec1c37",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-25T08:32:09.289Z",
  "text": "stochastic processes may be thought as joint probabilities with infinite variables",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Okay. What about compound distributions, then? Would that be done later?",
  "id": "5b30bbcbad21887018dc14b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-25T09:54:19.285Z",
  "text": "Okay. What about compound distributions, then? Would that be done later?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "maybe compound distribution before stochastic processes",
  "id": "5b30c52759799e70173fa481",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-25T10:34:15.970Z",
  "text": "maybe compound distribution before stochastic processes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Hi. I was working with implementing multivariate normal distributions in the same class as the single variable ones, but I think there&#39;d be some issues with that.<br>Each of these distributions inherit from <code>SingleContinuousDistribution</code> or <code>SingleDiscreteDistributions</code>. Adding multivariate distributions to the same class will require changing this structure.<br>Also, there&#39;d be many differences in the way these RVs are treated, like calculating expectations, number of arguments for each function, the domain for each RV etc. Because of this, I think it would be better to treat these distributions differently, with different classes.<br>Apart from that, the <code>Normal</code> function(or other functions used to create probability spaces) can be used to create both single and multi-variable distributions, depending on the arguements.",
  "id": "5b322708ce3b0f268d444750",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T11:44:08.303Z",
  "text": "Hi. I was working with implementing multivariate normal distributions in the same class as the single variable ones, but I think there'd be some issues with that. \nEach of these distributions inherit from `SingleContinuousDistribution` or `SingleDiscreteDistributions`. Adding multivariate distributions to the same class will require changing this structure. \nAlso, there'd be many differences in the way these RVs are treated, like calculating expectations, number of arguments for each function, the domain for each RV etc. Because of this, I think it would be better to treat these distributions differently, with different classes. \nApart from that, the `Normal` function(or other functions used to create probability spaces) can be used to create both single and multi-variable distributions, depending on the arguements.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Would that be okay?",
  "id": "5b322712ce3b0f268d44475d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T11:44:18.844Z",
  "text": "Would that be okay?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "OK",
  "id": "5b32273aad21887018df6c1f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T11:44:58.441Z",
  "text": "OK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Thanks",
  "id": "5b3227590168e70c08efa52e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T11:45:29.091Z",
  "text": "Thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "better avoid too much rewriting of existing code, so separate classes are OK",
  "id": "5b32275c5862c35f47c93914",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T11:45:32.767Z",
  "text": "better avoid too much rewriting of existing code, so separate classes are OK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Okay. Also, should I continue with using <code>syms</code> as an arguement for creating the joint distributions, or should I use indexed symbols?",
  "id": "5b3227a1479ca2668980915e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T11:46:41.659Z",
  "text": "Okay. Also, should I continue with using `syms` as an arguement for creating the joint distributions, or should I use indexed symbols?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I think <code>syms</code> would be better, because the user will anyway have to create an indexed symbol seperately to use marginal distributions.",
  "id": "5b3227e5479ca266898092d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T11:47:49.225Z",
  "text": "I think `syms` would be better, because the user will anyway have to create an indexed symbol seperately to use marginal distributions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "that&#39;s a good question",
  "id": "5b322ab4be98b142240a0525",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T11:59:48.287Z",
  "text": "that's a good question",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the indexed symbol can be generalized to infinite dimensional variables quite easily",
  "id": "5b322ac9ad21887018df75df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:00:09.062Z",
  "text": "the indexed symbol can be generalized to infinite dimensional variables quite easily",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "furthermore it does not require to invent a variable name for every dimension",
  "id": "5b322aefce3b0f268d445066",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:00:47.760Z",
  "text": "furthermore it does not require to invent a variable name for every dimension",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Okay. Thanks",
  "id": "5b322b46479ca26689809cb3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:02:14.815Z",
  "text": "Okay. Thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the best would be to avoid using a symbol",
  "id": "5b322b58b9c2fb25570c86ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:02:32.910Z",
  "text": "the best would be to avoid using a symbol",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "so",
  "id": "5b322c417d3bca737a0b2c4e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:06:25.308Z",
  "text": "so",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "if the parameters can be represented by matrices, the distribution does not need the symbols at all",
  "id": "5b322c5bce3b0f268d4452ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:06:51.335Z",
  "text": "if the parameters can be represented by matrices, the distribution does not need the symbols at all",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<pre><code class=\"python\">In [<span class=\"number\">2</span>]: X = Normal(<span class=\"string\">\"X\"</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>)\n\nIn [<span class=\"number\">3</span>]: X.pspace\nOut[<span class=\"number\">3</span>]: SingleContinuousPSpace(X, NormalDistribution(<span class=\"number\">3</span>, <span class=\"number\">2</span>))\n\nIn [<span class=\"number\">4</span>]: X.pspace.distribution\nOut[<span class=\"number\">4</span>]: NormalDistribution(<span class=\"number\">3</span>, <span class=\"number\">2</span>)</code></pre>",
  "id": "5b322c6b0168e70c08efb604",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:07:07.235Z",
  "text": "```python\nIn [2]: X = Normal(\"X\", 3, 2)\n\nIn [3]: X.pspace\nOut[3]: SingleContinuousPSpace(X, NormalDistribution(3, 2))\n\nIn [4]: X.pspace.distribution\nOut[4]: NormalDistribution(3, 2)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the values 3 and 2 could be replaced by matrices in this case",
  "id": "5b322c7e960fcd4eb924856d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:07:26.238Z",
  "text": "the values 3 and 2 could be replaced by matrices in this case",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I&#39;m not sure on whether all distributions can be represented like that",
  "id": "5b322c9bd2abe466888b5c6c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:07:55.053Z",
  "text": "I'm not sure on whether all distributions can be represented like that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "but ideally the distribution class should only store the parameters",
  "id": "5b322cbab9c2fb25570c8981",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:08:26.006Z",
  "text": "but ideally the distribution class should only store the parameters",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-26T12:09:32.089Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<blockquote>\n<p> ```<br>python<br>In [2]: X = Normal(&quot;X&quot;, 3, 2)</p></blockquote>\n<p>In [3]: X.pspace<br>Out[3]: SingleContinuousPSpace(X, NormalDistribution(3, 2))</p><p>In [4]: X.pspace.distribution<br>Out[4]: NormalDistribution(3, 2)<br>```</p><p>And the marginal distributions could be calculated simply using the indexes?</p>",
  "id": "5b322cc272b31d3691f4cafe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:08:34.314Z",
  "text": ">  ```\npython\nIn [2]: X = Normal(\"X\", 3, 2)\n\nIn [3]: X.pspace\nOut[3]: SingleContinuousPSpace(X, NormalDistribution(3, 2))\n\nIn [4]: X.pspace.distribution\nOut[4]: NormalDistribution(3, 2)\n```\n\nAnd the marginal distributions could be calculated simply using the indexes?\n",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the marginal distribution of a multivariate normal is still normal, am I right?",
  "id": "5b322d0f59799e701742fc13",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:09:51.599Z",
  "text": "the marginal distribution of a multivariate normal is still normal, am I right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "another alternative is to have a generic distribution class taking <code>Lambda</code> as a parameter",
  "id": "5b322d49aeb8fa0c07435dc2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:10:49.500Z",
  "text": "another alternative is to have a generic distribution class taking `Lambda` as a parameter",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "therefore <code>Lambda</code> contains the distribution definition",
  "id": "5b322d5b479ca2668980a163",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:11:07.294Z",
  "text": "therefore `Lambda` contains the distribution definition",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<blockquote>\n<p>the marginal distribution of a multivariate normal is still normal, am I right?</p></blockquote>\n<p>Yes, but how would the user calculate that?<br>If <code>X</code> is a Multivariate normal random symbol created by the user, how would he call a particular distribution? As in, which parts to marginalize out?</p>",
  "id": "5b322d846ceffe4eba34505d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:11:48.534Z",
  "text": "\n> the marginal distribution of a multivariate normal is still normal, am I right?\n\nYes, but how would the user calculate that?\nIf `X` is a Multivariate normal random symbol created by the user, how would he call a particular distribution? As in, which parts to marginalize out?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<blockquote>\n<p>another alternative is to have a generic distribution class taking <code>Lambda</code> as a parameter</p></blockquote>\n<p>Do you mean something like what is done in <code>ContinuousHandmadeDistributions</code>?</p>",
  "id": "5b322daf59799e701742fe79",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:12:31.740Z",
  "text": "> another alternative is to have a generic distribution class taking `Lambda` as a parameter\n\nDo you mean something like what is done in `ContinuousHandmadeDistributions`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the marginalization should occur with the <code>E</code> operator, right?",
  "id": "5b322dba5862c35f47c948aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:12:42.221Z",
  "text": "the marginalization should occur with the `E` operator, right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Sorry, I don&#39;t understand. Could you please explain?",
  "id": "5b322dff479ca2668980a2a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:13:51.409Z",
  "text": "Sorry, I don't understand. Could you please explain?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "how is the end user supposed to call the marginalization functions?",
  "id": "5b322e24ce3b0f268d4456b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:14:28.455Z",
  "text": "how is the end user supposed to call the marginalization functions?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "suppose that <code>X</code> is a multivariate normal distribution, and you want the marginal distribution of the first component",
  "id": "5b322e96aeb8fa0c0743623c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:16:22.753Z",
  "text": "suppose that `X` is a multivariate normal distribution, and you want the marginal distribution of the first component",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "what&#39;s the simplest interface we can design for the end-users?",
  "id": "5b322ea772b31d3691f4cf57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:16:39.900Z",
  "text": "what's the simplest interface we can design for the end-users?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "does it make sense to add indexability of <code>RandomSymbol</code>, like <code>X[0]</code> ?",
  "id": "5b322ebf0168e70c08efbaeb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:17:03.367Z",
  "text": "does it make sense to add indexability of `RandomSymbol`, like `X[0]` ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I&#39;d expect <code>density(X)</code> to be the multivariate density function",
  "id": "5b322ef4aeb8fa0c07436379",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:17:56.893Z",
  "text": "I'd expect `density(X)` to be the multivariate density function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Yes, that is what I thought when I asked if it can simply be calculated using indexes.",
  "id": "5b322f10960fcd4eb9248d7d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:18:24.398Z",
  "text": "Yes, that is what I thought when I asked if it can simply be calculated using indexes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "one possible API is <code>density(X[0])</code> for the marginal distribution",
  "id": "5b322f2c72b31d3691f4d017",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:18:52.194Z",
  "text": "one possible API is `density(X[0])` for the marginal distribution",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Yes, that seems fine. Sorry for all the confusion!",
  "id": "5b322f8ace3b0f268d445a06",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:20:26.015Z",
  "text": "Yes, that seems fine. Sorry for all the confusion!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "do you have any better idea?",
  "id": "5b322f96d2abe466888b62d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:20:38.894Z",
  "text": "do you have any better idea?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I&#39;m still not sure if this is the best API",
  "id": "5b322fa06ceffe4eba3455c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:20:48.272Z",
  "text": "I'm still not sure if this is the best API",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the main problem is that after adding code to SymPy, we are supposed not to break compatibility in future versions, so we need to find a good API now",
  "id": "5b322fca59799e70174305d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:21:30.978Z",
  "text": "the main problem is that after adding code to SymPy, we are supposed not to break compatibility in future versions, so we need to find a good API now",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I can&#39;t think of a better API right now. Maybe <span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> has some suggestions?<br>Would it be okay to open  up an issue asking for suggestions, if we can&#39;t think of anything better?",
  "id": "5b32302672b31d3691f4d277",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:23:02.174Z",
  "text": "I can't think of a better API right now. Maybe @jksuom has some suggestions?\nWould it be okay to open  up an issue asking for suggestions, if we can't think of anything better?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "can be done",
  "id": "5b323044b9c2fb25570c91e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:23:32.273Z",
  "text": "can be done",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Okay, I will open the issue.",
  "id": "5b32305d72b31d3691f4d350",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:23:57.988Z",
  "text": "Okay, I will open the issue.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "it&#39;s also worth having a look at the unmerged branch from <span data-link-type=\"mention\" data-screen-name=\"mrocklin\" class=\"mention\">@mrocklin</span> from 2011",
  "id": "5b323066ce3b0f268d445bff",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrocklin",
    "userId": "530c03e25e986b0712efafb8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T12:24:06.245Z",
  "text": "it's also worth having a look at the unmerged branch from @mrocklin from 2011",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "though yeah... <code>RandomSymbol</code> could be provided with a <code>__call__</code> method returning something, e.g. <code>IndexedRandomSymbol</code>.",
  "id": "5b32308c960fcd4eb9249119",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:24:44.108Z",
  "text": "though yeah... `RandomSymbol` could be provided with a `__call__` method returning something, e.g. `IndexedRandomSymbol`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Concerning <code>syms</code>, maybe they could be added as a parameter to <code>RandomSymbol</code>",
  "id": "5b3230c1be98b142240a16e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:25:37.255Z",
  "text": "Concerning `syms`, maybe they could be added as a parameter to `RandomSymbol`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "for example",
  "id": "5b3230c5ad21887018df87dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:25:41.924Z",
  "text": "for example",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<pre><code>&gt;&gt;&gt; <span class=\"name\">X</span> = <span class=\"name\">Normal</span>(<span class=\"string\">\"X\"</span>, [[<span class=\"number\">1</span>,<span class=\"number\">2</span>],[<span class=\"number\">3</span>,<span class=\"number\">1</span>]], [<span class=\"number\">1</span>,<span class=\"number\">2</span>], <span class=\"atom\">component_symbols</span>=(<span class=\"atom\">x</span>, <span class=\"atom\">yuppie</span>))\n&gt;&gt;&gt; <span class=\"name\">X</span>[<span class=\"number\">0</span>]\n<span class=\"atom\">x</span>\n&gt;&gt;&gt; <span class=\"name\">X</span>[<span class=\"number\">1</span>]\n<span class=\"atom\">yuppie</span></code></pre>",
  "id": "5b32310b59799e70174308c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:26:51.337Z",
  "text": "```\n>>> X = Normal(\"X\", [[1,2],[3,1]], [1,2], component_symbols=(x, yuppie))\n>>> X[0]\nx\n>>> X[1]\nyuppie\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "that is, <code>component_symbols</code> are aliases for printing <code>X[0]</code> and <code>X[1]</code> in a nice way",
  "id": "5b323132aeb8fa0c074368f4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:27:30.332Z",
  "text": "that is, `component_symbols` are aliases for printing `X[0]` and `X[1]` in a nice way",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "this could be a nice approach",
  "id": "5b323140aeb8fa0c07436913",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:27:44.419Z",
  "text": "this could be a nice approach",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Wouldn&#39;t the first argument <code>&quot;X&quot;</code> act as the the component symbol itself?",
  "id": "5b32315faeb8fa0c07436953",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:28:15.850Z",
  "text": "Wouldn't the first argument `\"X\"` act as the the component symbol itself?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "capital <code>X</code> is the symbol for all components",
  "id": "5b3231a1ce3b0f268d445eec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:29:21.858Z",
  "text": "capital `X` is the symbol for all components",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Oh sorry, the <code>yuppie</code> argument was hidden on my screen.<br>Yeah, this seems like a nice approach",
  "id": "5b3231f6ad21887018df8b41",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:30:46.227Z",
  "text": "Oh sorry, the `yuppie` argument was hidden on my screen.\nYeah, this seems like a nice approach",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "yes, this way the user can choose whether to use the indexed notation or the component names",
  "id": "5b3232156ceffe4eba345c54",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:31:17.267Z",
  "text": "yes, this way the user can choose whether to use the indexed notation or the component names",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Okay. I will modify <span data-link-type=\"issue\" data-issue=\"14764\" class=\"issue\">#14764</span> accordingly.",
  "id": "5b323288ad21887018df8d51",
  "issues": [
   {
    "number": "14764"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-26T12:33:12.715Z",
  "text": "Okay. I will modify #14764 accordingly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Here are some thoughts on stochastic processes. Their main components would be index set, variables and joint distributions. Index set should be an ordered set (like natural numbers or real numbers). Joint distributions could be provided by a method that would return a distribution for each finite (ordered) sequence of indices. Variables could be some kind of indexed symbols, one for each element of the index set. They could probably be implemented by something like <code>Indexed</code> as the distributions are provided independently. I think that they need not derive from <code>RandomSymbols</code> which contain both a symbol and a probability space. If a probability space is needed, it would probably be the same for all variables and could be provided as an additional attribute of the stochastic process.",
  "id": "5b33525d72b31d3691f76950",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T09:01:17.228Z",
  "text": "Here are some thoughts on stochastic processes. Their main components would be index set, variables and joint distributions. Index set should be an ordered set (like natural numbers or real numbers). Joint distributions could be provided by a method that would return a distribution for each finite (ordered) sequence of indices. Variables could be some kind of indexed symbols, one for each element of the index set. They could probably be implemented by something like `Indexed` as the distributions are provided independently. I think that they need not derive from `RandomSymbols` which contain both a symbol and a probability space. If a probability space is needed, it would probably be the same for all variables and could be provided as an additional attribute of the stochastic process.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "This seems nice.<br>But if we are taking  variables and distributions both as input from the user, deriving symbols from <code>RandomSymbols</code> need not take an extra attribute from the user, as the probability space could be defined on the basis of the symbol and the distribution.",
  "id": "5b335dd9ad21887018e24fa4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T09:50:17.959Z",
  "text": "This seems nice. \nBut if we are taking  variables and distributions both as input from the user, deriving symbols from `RandomSymbols` need not take an extra attribute from the user, as the probability space could be defined on the basis of the symbol and the distribution.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It would not be necessary to define special <code>IndexedRandomSymbols</code> if <code>Indexed</code> would suffice. Perhaps something like that could be used to start with.",
  "id": "5b336d067d3bca737a0e10cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T10:55:02.949Z",
  "text": "It would not be necessary to define special `IndexedRandomSymbols` if `Indexed` would suffice. Perhaps something like that could be used to start with.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Okay.",
  "id": "5b33781f7da8cd7c8c71eb4e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T11:42:23.855Z",
  "text": "Okay.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> </p><pre><code>&gt;&gt;&gt; <span class=\"name\">X</span> = <span class=\"name\">Normal</span>(<span class=\"string\">\"X\"</span>, [[<span class=\"number\">1</span>,<span class=\"number\">2</span>],[<span class=\"number\">3</span>,<span class=\"number\">1</span>]], [<span class=\"number\">1</span>,<span class=\"number\">2</span>], <span class=\"atom\">component_symbols</span>=(<span class=\"atom\">x</span>, <span class=\"atom\">yuppie</span>))\n&gt;&gt;&gt; <span class=\"name\">X</span>[<span class=\"number\">0</span>]\n<span class=\"atom\">x</span>\n&gt;&gt;&gt; <span class=\"name\">X</span>[<span class=\"number\">1</span>]\n<span class=\"atom\">yuppie</span></code></pre><p>Here, should <code>x</code> and <code>yuppie</code> be random symbols, or just symbols?</p>",
  "id": "5b339c597d3bca737a0e9ea8",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T14:16:56.987Z",
  "text": "@Upabjojr \n```\n>>> X = Normal(\"X\", [[1,2],[3,1]], [1,2], component_symbols=(x, yuppie))\n>>> X[0]\nx\n>>> X[1]\nyuppie\n```\n\nHere, should `x` and `yuppie` be random symbols, or just symbols?\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I meant the values returned, not the input values.",
  "id": "5b33c0c16ceffe4eba383b97",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T16:52:17.195Z",
  "text": "I meant the values returned, not the input values.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think that the returned objects should contain at least the index telling its position in the joint distribution. Neither symbols nor random symbols do that.",
  "id": "5b33d552b9c2fb255710ae45",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T18:20:02.296Z",
  "text": "I think that the returned objects should contain at least the index telling its position in the joint distribution. Neither symbols nor random symbols do that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Would creating a <code>MarginalPSpace</code> object work? It could take the symbol, the parent space and the index as the input.  ",
  "id": "5b33dabd960fcd4eb928a711",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T18:43:09.200Z",
  "text": "Would creating a `MarginalPSpace` object work? It could take the symbol, the parent space and the index as the input.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "a multivariate random variable is a vector: <a href=\"https://en.wikipedia.org/wiki/Multivariate_random_variable\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://en.wikipedia.org/wiki/Multivariate_random_variable</a>",
  "id": "5b33dc0bd2abe466888f8b02",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T18:48:43.437Z",
  "text": "a multivariate random variable is a vector: https://en.wikipedia.org/wiki/Multivariate_random_variable",
  "unread": false,
  "urls": [
   {
    "url": "https://en.wikipedia.org/wiki/Multivariate_random_variable"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "so I believe it needs to support indexing",
  "id": "5b33dc14ce3b0f268d489c6c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T18:48:52.616Z",
  "text": "so I believe it needs to support indexing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "what type <code>X[0]</code> should be is another issue",
  "id": "5b33dc2572b31d3691f8f746",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T18:49:09.746Z",
  "text": "what type `X[0]` should be is another issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "if you find a way to just use <code>Indexed</code> it would be fine",
  "id": "5b33dc33960fcd4eb928ab91",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T18:49:23.705Z",
  "text": "if you find a way to just use `Indexed` it would be fine",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "we have to see how to make expressions like <code>P(X[0]&gt;1)</code> work... as <code>X[0]</code> is not a <code>RandomSymbol</code> anymore",
  "id": "5b33dc67be98b142240e575a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T18:50:15.892Z",
  "text": "we have to see how to make expressions like `P(X[0]>1)` work... as `X[0]` is not a `RandomSymbol` anymore",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "there was one the idea of adding the property <code>.is_random</code> to all SymPy expressions",
  "id": "5b33dc81479ca2668984f211",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T18:50:41.699Z",
  "text": "there was one the idea of adding the property `.is_random` to all SymPy expressions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<code>.is_random</code> would return <code>True</code> if a random variable is contained or something is making the expression aleatory",
  "id": "5b33dca3d2abe466888f8ce0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T18:51:15.925Z",
  "text": "`.is_random` would return `True` if a random variable is contained or something is making the expression aleatory",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I&#39;m not sure that&#39;s the right approach",
  "id": "5b33dcad59799e7017473c49",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T18:51:25.704Z",
  "text": "I'm not sure that's the right approach",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I got it to support indexing, and right now, it is returning symbols. Since a set of indexed variables would still have a distribution associated with them, I thought we could calculate the density, and either create a <code>MarginalPSpace</code> object which can be used to create the random symbols, or something like <code>HandmadeJointDistribution</code> to calculate the density, which in turn can be used to create the <code>pspace</code> and the random symbol.",
  "id": "5b33df23ce3b0f268d48a506",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T19:01:55.037Z",
  "text": "I got it to support indexing, and right now, it is returning symbols. Since a set of indexed variables would still have a distribution associated with them, I thought we could calculate the density, and either create a `MarginalPSpace` object which can be used to create the random symbols, or something like `HandmadeJointDistribution` to calculate the density, which in turn can be used to create the `pspace` and the random symbol.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "do you think it&#39;s necessary to have <code>MarginalPSpace</code>?",
  "id": "5b33df580168e70c08f4129b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T19:02:48.788Z",
  "text": "do you think it's necessary to have `MarginalPSpace`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "No not necessary.<br>But I think it would be better to associate some sort of probability space with the components of the joint distribution.",
  "id": "5b33df836ceffe4eba38913c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T19:03:31.420Z",
  "text": "No not necessary. \nBut I think it would be better to associate some sort of probability space with the components of the joint distribution.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "That can be another <code>JointPSpace</code> as well",
  "id": "5b33df990168e70c08f412d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T19:03:53.103Z",
  "text": "That can be another `JointPSpace` as well",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "my thought is that you&#39;d need <code>MarginalPSpace</code> if you cannot calculate the  pspace of the component",
  "id": "5b33dfaaad21887018e3c4e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T19:04:10.017Z",
  "text": "my thought is that you'd need `MarginalPSpace` if you cannot calculate the  pspace of the component",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would prefer to keep the class structure simple at first",
  "id": "5b33dfc2b9c2fb255710c5cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T19:04:34.347Z",
  "text": "I would prefer to keep the class structure simple at first",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "So for now, it should simply return the symbols for each component?",
  "id": "5b33dfea7da8cd7c8c732b26",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T19:05:14.429Z",
  "text": "So for now, it should simply return the symbols for each component?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "let&#39;s try something really simple for now",
  "id": "5b33e004960fcd4eb928b588",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T19:05:40.217Z",
  "text": "let's try something really simple for now",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<pre><code class=\"python\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__call__</span><span class=\"params\">(self, index)</span>:</span>\n        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> multivariate: <span class=\"keyword\">raise</span> some exception\n        <span class=\"keyword\">return</span> Indexed(self, index)</code></pre>in <code>RandomSymbol</code>",
  "id": "5b33e0337da8cd7c8c732bec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T19:06:27.224Z",
  "text": "```python\n    def __call__(self, index):\n        if not multivariate: raise some exception\n        return Indexed(self, index)\n```\nin `RandomSymbol`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "we can change it later if we don&#39;t like it",
  "id": "5b33e04872b31d3691f902b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T19:06:48.944Z",
  "text": "we can change it later if we don't like it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "let&#39;s also ignore giving the components a name, for now",
  "id": "5b33e069b9c2fb255710c706",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T19:07:21.964Z",
  "text": "let's also ignore giving the components a name, for now",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "if we try to make too many things at the same time we made end up with a mess",
  "id": "5b33e07e7da8cd7c8c732c63",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T19:07:42.805Z",
  "text": "if we try to make too many things at the same time we made end up with a mess",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Oh okay.<br>Would it be fine  to use <code>__getitem__</code> instead of <code>__call__</code>? ",
  "id": "5b33e097aeb8fa0c0747aaec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T19:08:07.577Z",
  "text": "Oh okay. \nWould it be fine  to use `__getitem__` instead of `__call__`? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Oh yes, sorry",
  "id": "5b33e09f72b31d3691f90406",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T19:08:15.675Z",
  "text": "Oh yes, sorry",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<code>__getitem__</code>",
  "id": "5b33e0a7479ca2668984ff6b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T19:08:23.133Z",
  "text": "`__getitem__`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Okay. Thanks.",
  "id": "5b33e0b759799e7017474502",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T19:08:39.445Z",
  "text": "Okay. Thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "then one should think how <code>density(X[0])</code> should behave",
  "id": "5b33e0c77d3bca737a0f5bb7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T19:08:55.523Z",
  "text": "then one should think how `density(X[0])` should behave",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<code>P(X[0] == ... )</code>",
  "id": "5b33e0cf479ca2668984ff99",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T19:09:03.530Z",
  "text": "`P(X[0] == ... )`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<code>E(X[0])</code>",
  "id": "5b33e0d47da8cd7c8c732d7b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T19:09:08.259Z",
  "text": "`E(X[0])`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I will just do the indexing part for now, because the rest will probably require decisions about what was discussed above. I will try to send a seperate PR for that later.",
  "id": "5b33e12f5862c35f47cda1c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T19:10:39.811Z",
  "text": "I will just do the indexing part for now, because the rest will probably require decisions about what was discussed above. I will try to send a seperate PR for that later.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "OK",
  "id": "5b33e13b479ca266898500fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T19:10:51.302Z",
  "text": "OK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Each object <code>X[i]</code> could contain a pointer back to the joint distribution (or stochastic process) in addition to its index. <code>RandomSymbol</code> can be considered as the special case where the distribution is a single distribution and therefore no index is necessary.",
  "id": "5b33e40a59799e7017474e1c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-27T19:22:50.560Z",
  "text": "Each object `X[i]` could contain a pointer back to the joint distribution (or stochastic process) in addition to its index. `RandomSymbol` can be considered as the special case where the distribution is a single distribution and therefore no index is necessary.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Random variables can be used to access their probility distributions. Would this be the same thing?<br>But instead of pointing back to the joint probability space, it would point back to the marginal probability space using the <code>RandomSymbol.pspace</code> method. An additional method to access the joint space could be added.",
  "id": "5b348ae872b31d3691fa4ee4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-28T07:14:48.090Z",
  "text": "Random variables can be used to access their probility distributions. Would this be the same thing?\nBut instead of pointing back to the joint probability space, it would point back to the marginal probability space using the `RandomSymbol.pspace` method. An additional method to access the joint space could be added.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Additional methods are certainly needed but they can be defined any time. I would start coding with a simple setup and add methods when their utility becomes apparent.",
  "id": "5b348e4faeb8fa0c0749156f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-28T07:29:19.161Z",
  "text": "Additional methods are certainly needed but they can be defined any time. I would start coding with a simple setup and add methods when their utility becomes apparent.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<code>X[i].base.pspace</code> will still access the pspace, I&#39;d prefer to temporarily keep it like this.",
  "id": "5b349bf8aeb8fa0c0749322a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-28T08:27:36.689Z",
  "text": "`X[i].base.pspace` will still access the pspace, I'd prefer to temporarily keep it like this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<p>I have modified <span data-link-type=\"issue\" data-issue=\"14764\" class=\"issue\">#14764</span>. The functions now return a random symbol instead of the entire probability space.<br>For a random symbol <code>X</code> with joint distribution, <code>X[i]</code> returns an <code>Indexed</code> object. <code>X[i].base.pspace</code> can return the original probability space.<br>For the marginal distribution function, along with the random symbol, the user can either enter the component index or the indexed random symbol.</p><pre><code><span class=\"comment\"># Using index</span>\n<span class=\"prompt\">&gt;&gt;</span>&gt;marginal_distribution(<span class=\"constant\">X</span>, <span class=\"number\">1</span>)\n<span class=\"comment\">#Using indexed random symbol</span>\n<span class=\"prompt\">&gt;&gt;</span>&gt; marginal_distribution(<span class=\"constant\">X</span>, <span class=\"constant\">X</span>[<span class=\"number\">1</span>])</code></pre><p>This will return a lambda expression.<br>Also, I have created a subclass <code>JointRandomSymbol</code> of <code>RandomSymbol</code>, because modifying the <code>__getitem__</code>  in <code>RandomSymbol</code> method resulted in test failures.</p>",
  "id": "5b34c31f72b31d3691fada1d",
  "issues": [
   {
    "number": "14764"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-28T11:14:39.655Z",
  "text": "I have modified #14764. The functions now return a random symbol instead of the entire probability space. \nFor a random symbol `X` with joint distribution, `X[i]` returns an `Indexed` object. `X[i].base.pspace` can return the original probability space. \nFor the marginal distribution function, along with the random symbol, the user can either enter the component index or the indexed random symbol.\n```\n# Using index\n>>>marginal_distribution(X, 1)\n#Using indexed random symbol\n>>> marginal_distribution(X, X[1])\n```\nThis will return a lambda expression.\nAlso, I have created a subclass `JointRandomSymbol` of `RandomSymbol`, because modifying the `__getitem__`  in `RandomSymbol` method resulted in test failures.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I will review the PR on the other distributions later",
  "id": "5b3643c072b31d3691fe6441",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-29T14:35:44.115Z",
  "text": "I will review the PR on the other distributions later",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "are you going on with the compound distributions now?",
  "id": "5b3643e1ce3b0f268d4e3829",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-29T14:36:17.046Z",
  "text": "are you going on with the compound distributions now?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "That would be fine. We can implement the distributions described <a href=\"https://en.wikipedia.org/wiki/Compound_probability_distribution#Examples\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a>. ",
  "id": "5b364489d2abe46688950604",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-29T14:39:05.281Z",
  "text": "That would be fine. We can implement the distributions described [here](https://en.wikipedia.org/wiki/Compound_probability_distribution#Examples). ",
  "unread": false,
  "urls": [
   {
    "url": "https://en.wikipedia.org/wiki/Compound_probability_distribution#Examples"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "We can also start with stochastic processes, and come back to compound distributions later, if you like. ",
  "id": "5b3644aebe98b1422413d9e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-29T14:39:42.490Z",
  "text": "We can also start with stochastic processes, and come back to compound distributions later, if you like. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "feel free to decide",
  "id": "5b3644d772b31d3691fe6796",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-29T14:40:23.968Z",
  "text": "feel free to decide",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Okay, I will try to finish compound distributions for now.",
  "id": "5b3644f7aeb8fa0c074d3984",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-29T14:40:55.523Z",
  "text": "Okay, I will try to finish compound distributions for now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "my fear is that compound distributions may require more work than we think, so I&#39;d suggest to start with compound distributions",
  "id": "5b36451cce3b0f268d4e3d06",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-29T14:41:32.886Z",
  "text": "my fear is that compound distributions may require more work than we think, so I'd suggest to start with compound distributions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Do you mean start with stochastic processes?",
  "id": "5b364583d2abe46688950a98",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-29T14:43:15.148Z",
  "text": "Do you mean start with stochastic processes?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the opposite",
  "id": "5b364599ce3b0f268d4e3e4d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-29T14:43:37.992Z",
  "text": "the opposite",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-29T14:44:14.044Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Okay. I&#39;ll start with compound distributions.",
  "id": "5b3645b4be98b1422413de2b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-29T14:44:04.846Z",
  "text": "Okay. I'll start with compound distributions.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I fear that the compound distribution may require some major changes, but I&#39;m not sure",
  "id": "5b3645c2b086c90e8d022c19",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-29T14:44:18.493Z",
  "text": "I fear that the compound distribution may require some major changes, but I'm not sure",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I think it&#39;s best to start with things that could potentially be complicated",
  "id": "5b3645e0960fcd4eb92e21a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-29T14:44:48.987Z",
  "text": "I think it's best to start with things that could potentially be complicated",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Okay. I will try to send a WIP PR regarding compound distributions soon.",
  "id": "5b36462db9c2fb2557165da0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-29T14:46:05.206Z",
  "text": "Okay. I will try to send a WIP PR regarding compound distributions soon.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "great",
  "id": "5b3646370168e70c08fa4fdb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-29T14:46:15.770Z",
  "text": "great",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Would a compound distribution be a special type of joint distribution?",
  "id": "5b3649b8be98b1422413e92d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-29T15:01:12.968Z",
  "text": "Would a compound distribution be a special type of joint distribution?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would dare say a marginalization of a special joint distribution",
  "id": "5b3649f1be98b1422413ea11",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-29T15:02:09.278Z",
  "text": "I would dare say a marginalization of a special joint distribution",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<p>If a random symbol declared is a compound random variable, should it belong to <code>JointPSpace</code>/ <code>ProductPSpace</code>, or would it be okay for it to belong to it&#39;s original class with the modified PDF?<br>For example,</p><pre><code>&gt;&gt;&gt; N1 = <span class=\"function\"><span class=\"title\">Normal</span><span class=\"params\">(<span class=\"string\">'N1'</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>)</span></span>\n&gt;&gt;&gt;N2 = <span class=\"function\"><span class=\"title\">Normal</span><span class=\"params\">(<span class=\"string\">'N2'</span>, N2, <span class=\"number\">2</span>)</span></span></code></pre><p>Should <code>pspace(N2)</code> return an object of <code>ProductPSpace</code>/<code>JointPSpace</code>, or should it return an object of <code>SinglePSpace</code>?</p>",
  "id": "5b382ab7bd92d8078289285c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-01T01:13:27.398Z",
  "text": "If a random symbol declared is a compound random variable, should it belong to `JointPSpace`/ `ProductPSpace`, or would it be okay for it to belong to it's original class with the modified PDF?\nFor example,\n```\n>>> N1 = Normal('N1', 0, 1)\n>>>N2 = Normal('N2', N2, 2)\n```\nShould `pspace(N2)` return an object of `ProductPSpace`/`JointPSpace`, or should it return an object of `SinglePSpace`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The definition of <code>N2</code> seems to depend on <code>N2</code>. Is that a typo?",
  "id": "5b387c3c60c3870783538a88",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-01T07:01:16.563Z",
  "text": "The definition of `N2` seems to depend on `N2`. Is that a typo?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Yes, sorry. That&#39;s <code>N2 = Normal(&#39;N2&#39;, N1, 2)</code>",
  "id": "5b3890d2216ee2623e923831",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-01T08:29:06.167Z",
  "text": "Yes, sorry. That's `N2 = Normal('N2', N1, 2)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The docstring says that <code>pspace</code> should return the underlying probability space of a random expression. It seems to me that it may not be a well defined concept. The docstring also says that this is for internal use. So maybe the decision should be made only after seeing what kind of internal use there is expected to be.",
  "id": "5b38a35df1664406610fe5db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-01T09:48:13.675Z",
  "text": "The docstring says that `pspace` should return the underlying probability space of a random expression. It seems to me that it may not be a well defined concept. The docstring also says that this is for internal use. So maybe the decision should be made only after seeing what kind of internal use there is expected to be.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "well, I believe that your variable <code>N2</code> is a single random variable",
  "id": "5b38c634a99e1e52b70c9cdd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-01T12:16:52.738Z",
  "text": "well, I believe that your variable `N2` is a single random variable",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "so I&#39;d guess the pspace should be some kind of <code>SinglePSpace</code>",
  "id": "5b38c643f1664406611019f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-01T12:17:07.438Z",
  "text": "so I'd guess the pspace should be some kind of `SinglePSpace`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the problem may arise from the computability of such a pspace",
  "id": "5b38c6503d8f71623d5317d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-01T12:17:20.464Z",
  "text": "the problem may arise from the computability of such a pspace",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would expect that in the majority of cases the integrals for the marginalization of the product pspace are not solveable",
  "id": "5b38c67381816669a426acc1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-01T12:17:55.820Z",
  "text": "I would expect that in the majority of cases the integrals for the marginalization of the product pspace are not solveable",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "so maybe we need an expression for marginalized pspaces",
  "id": "5b38c68260c38707835406ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-01T12:18:10.195Z",
  "text": "so maybe we need an expression for marginalized pspaces",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "but anyway let&#39;s make things simple",
  "id": "5b38c68a7b811a6d63c611cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-01T12:18:18.572Z",
  "text": "but anyway let's make things simple",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "just implement it in the simplest way you can",
  "id": "5b38c69d63042f2df34cc34e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-01T12:18:37.076Z",
  "text": "just implement it in the simplest way you can",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "then we can comment on the PR",
  "id": "5b38c6a470efc60660a3a724",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-01T12:18:44.191Z",
  "text": "then we can comment on the PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "(so just a routine to compute the pspace with an integral)",
  "id": "5b38c6bfe534eb69a5be6b57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-01T12:19:11.678Z",
  "text": "(so just a routine to compute the pspace with an integral)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems that the current implementation of <code>pspace</code> may  have to be modified. One of the tests is <code>assert pspace(2*X + Y) == IndependentProductPSpace(Y.pspace, X.pspace)</code> where <code>X</code> and <code>Y</code> are normal. But any linear combination of independent normal variables is again normal. So <code>2*X + Y</code> could as well be described as a 1-dimensional normal variable.",
  "id": "5b38ca257b811a6d63c6165f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-01T12:33:41.000Z",
  "text": "It seems that the current implementation of `pspace` may  have to be modified. One of the tests is `assert pspace(2*X + Y) == IndependentProductPSpace(Y.pspace, X.pspace)` where `X` and `Y` are normal. But any linear combination of independent normal variables is again normal. So `2*X + Y` could as well be described as a 1-dimensional normal variable.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "what about a simplification function for random expressions? That is, <code>2*X + Y</code> should still be a product pspace, but after the simplification it would become a single pspace",
  "id": "5b38cad681816669a426b22d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-01T12:36:38.510Z",
  "text": "what about a simplification function for random expressions? That is, `2*X + Y` should still be a product pspace, but after the simplification it would become a single pspace",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I have the feeling that the probability space itself is secondary. What we usually need is the probability distribution.So maybe we should try to find a way to handle random expressions that would make use of distributions instead of the internal <code>pspace</code>.",
  "id": "5b38cc09d99c896d64dcb85f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-01T12:41:45.227Z",
  "text": "I have the feeling that the probability space itself is secondary. What we usually need is the probability distribution.So maybe we should try to find a way to handle random expressions that would make use of distributions instead of the internal `pspace`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-01T15:33:20.573Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<blockquote>\n<p>It seems that the current implementation of <code>pspace</code> may  have to be modified. One of the tests is <code>assert pspace(2*X + Y) == IndependentProductPSpace(Y.pspace, X.pspace)</code> where <code>X</code> and <code>Y</code> are normal. But any linear combination of independent normal variables is again normal. So <code>2*X + Y</code> could as well be described as a 1-dimensional normal variable.</p></blockquote>\n<p>This is why the question came to my mind. If we modify <code>pspace</code> to return an object of <code>SinglePSpace</code>,  one of the tests that fail is:</p><pre><code>mu = <span class=\"function\"><span class=\"title\">Normal</span><span class=\"params\">(<span class=\"string\">'mu'</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)</span></span>\nmeas = <span class=\"function\"><span class=\"title\">Normal</span><span class=\"params\">(<span class=\"string\">'T'</span>, mu, <span class=\"number\">1</span>)</span></span>\nassert <span class=\"function\"><span class=\"title\">given</span><span class=\"params\">(meas, Eq(mu, <span class=\"number\">5</span>)</span></span>) == <span class=\"function\"><span class=\"title\">Normal</span><span class=\"params\">(<span class=\"string\">'T'</span>, <span class=\"number\">5</span>, <span class=\"number\">1</span>)</span></span></code></pre>",
  "id": "5b38f428e534eb69a5beb92b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-01T15:32:56.903Z",
  "text": "> It seems that the current implementation of `pspace` may  have to be modified. One of the tests is `assert pspace(2*X + Y) == IndependentProductPSpace(Y.pspace, X.pspace)` where `X` and `Y` are normal. But any linear combination of independent normal variables is again normal. So `2*X + Y` could as well be described as a 1-dimensional normal variable.\n\nThis is why the question came to my mind. If we modify `pspace` to return an object of `SinglePSpace`,  one of the tests that fail is:\n```\nmu = Normal('mu', 2, 3)\nmeas = Normal('T', mu, 1)\nassert given(meas, Eq(mu, 5)) == Normal('T', 5, 1)\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<code>given(meas, Eq(mu, 5))</code> simply returns <code>T</code>.",
  "id": "5b38f4967b811a6d63c6582e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-01T15:34:46.696Z",
  "text": "`given(meas, Eq(mu, 5))` simply returns `T`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-01T15:47:35.556Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I have opened <span data-link-type=\"issue\" data-issue=\"14855\" class=\"issue\">#14855</span>. Using <code>RV.pspace.pdf</code> currently gives the PDF for a compound distribution, but calling <code>density(RV)</code> gives a different result, because the pspace of <code>RV</code> is taken to be a product space by <code>density</code>. I have added a test for a normal RV with a mean normally distributed.",
  "id": "5b38f78233b0282df4f6f9a8",
  "issues": [
   {
    "number": "14855"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-01T15:47:14.029Z",
  "text": "I have opened #14855. Using `RV.pspace.pdf` currently gives the PDF for a compound distribution, but calling `density(RV)` gives a different result, because the pspace of `RV` is taken to be a product space by `density`. I have added a test for a normal RV with a mean normally distributed.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Would it be fine to return an object of <code>SingleContinuousPSpace</code>, with a distribution belonging to <code>ContinuousDistributionHandmade</code> for the general case of compound random variables? We can then hard-code certain special cases, like Normal variable with normal mean can be set to return a normal distribution etc.",
  "id": "5b3b5d5f3572e970c171c67c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-03T11:26:23.580Z",
  "text": "Would it be fine to return an object of `SingleContinuousPSpace`, with a distribution belonging to `ContinuousDistributionHandmade` for the general case of compound random variables? We can then hard-code certain special cases, like Normal variable with normal mean can be set to return a normal distribution etc.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "OK",
  "id": "5b3b63e57b811a6d63cb8309",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-03T11:54:13.744Z",
  "text": "OK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "if you find a way to add this support for all distributions with a single line, it would be nice",
  "id": "5b3b641070efc60660a91e6f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-03T11:54:56.087Z",
  "text": "if you find a way to add this support for all distributions with a single line, it would be nice",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-03T17:47:34.984Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I am not sure, but is returning a random symbol with the final evaluated PDF too much automatic simplification? Should a flag like <code>evaluate</code> be added to let the users decide if they want the final form?  ",
  "id": "5b3bb6a63d8f71623d59775d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-03T17:47:18.538Z",
  "text": "I am not sure, but is returning a random symbol with the final evaluated PDF too much automatic simplification? Should a flag like `evaluate` be added to let the users decide if they want the final form?  ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I don&#39;t think so",
  "id": "5b3bcc563572e970c1730fde",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-03T19:19:50.706Z",
  "text": "I don't think so",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the distribution is not end-user API",
  "id": "5b3bcc60bd92d8078290b04a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-03T19:20:00.732Z",
  "text": "the distribution is not end-user API",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "so it should remain hidden",
  "id": "5b3bcc6b70efc60660aa4772",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-03T19:20:11.775Z",
  "text": "so it should remain hidden",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<pre><code class=\"python\">N1 = Normal(<span class=\"string\">\"N1\"</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)\nN2 = Normal(<span class=\"string\">\"N2\"</span>, N1, <span class=\"number\">3</span>)</code></pre>the variable <code>N2</code> should be used, the user is not supposed to call <code>N2.pspace.distribution</code>",
  "id": "5b3bcc9b81816669a42d857e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-03T19:20:59.727Z",
  "text": "```python\nN1 = Normal(\"N1\", 2, 3)\nN2 = Normal(\"N2\", N1, 3)\n```\nthe variable `N2` should be used, the user is not supposed to call `N2.pspace.distribution`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Okay. Thanks. ",
  "id": "5b3bd4a6f16644066116dd18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-03T19:55:18.209Z",
  "text": "Okay. Thanks. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Sorry for the delay, there was some issue with my computer, and I didn&#39;t have access to it for the past 2 days. I should get it back tomorrow, and I&#39;ll try to get back on schedule as soon as possible.",
  "id": "5b3f4d8f7e23133ecb36a883",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-06T11:07:59.711Z",
  "text": "Sorry for the delay, there was some issue with my computer, and I didn't have access to it for the past 2 days. I should get it back tomorrow, and I'll try to get back on schedule as soon as possible.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Hi. Can someone please tell me what is the purpose of <code>_hashable_content</code> in the class <code>RandomSymbol</code>?<br><code>hash(self._hashable_content)</code> raises an error for multivariate random symbols, but not for the univariate case. I faced this issue while calling <code>random_symbols</code>. Example:<pre><code>&gt;&gt;&gt; m = Normal(<span class=\"string\">'m'</span>, [<span class=\"number\">1</span>, <span class=\"number\">2</span>], <span class=\"string\">[[1, 0], [0, 1]]</span>)\n&gt;&gt;&gt; random_symbols(m)\n...\nTypeError: unhashable <span class=\"built_in\">type</span>: <span class=\"string\">'list'</span></code></pre>",
  "id": "5b4367f27e23133ecb3e11a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-09T13:49:38.030Z",
  "text": "Hi. Can someone please tell me what is the purpose of `_hashable_content` in the class `RandomSymbol`? \n`hash(self._hashable_content)` raises an error for multivariate random symbols, but not for the univariate case. I faced this issue while calling `random_symbols`. Example:\n```\n>>> m = Normal('m', [1, 2], [[1, 0], [0, 1]])\n>>> random_symbols(m)\n...\nTypeError: unhashable type: 'list'\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Its purpose is to distinguish objects of a class from each other. See <code>Basic.__hash__</code>. By default, it contains the arguments. Are the arguments of <code>m</code> lists in this case? They should be tuples to make them hashable.",
  "id": "5b438354f166440661262312",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-09T15:46:28.626Z",
  "text": "Its purpose is to distinguish objects of a class from each other. See `Basic.__hash__`. By default, it contains the arguments. Are the arguments of `m` lists in this case? They should be tuples to make them hashable.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Yes, <code>m</code> takes in  lists/matrices as arguments, but the lists are converted into <code>Tuple</code> obejects <a href=\"https://github.com/sympy/sympy/blob/master/sympy/stats/joint_rv.py#L93\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a>.",
  "id": "5b43841b7b811a6d63dc83bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-09T15:49:47.539Z",
  "text": "Yes, `m` takes in  lists/matrices as arguments, but the lists are converted into `Tuple` obejects [here](https://github.com/sympy/sympy/blob/master/sympy/stats/joint_rv.py#L93).",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/master/sympy/stats/joint_rv.py#L93"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2018-07-09T15:56:38.556Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "What will become from the nested list <code>[[1, 0], [0, 1]]</code>?",
  "id": "5b43855b81816669a43d24c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-09T15:55:07.778Z",
  "text": "What will become from the nested list `[[1, 0], [0, 1]]`?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "It becomes <code>([1, 0], [0, 1])</code>. Do the nested arguments need to be changed as well?",
  "id": "5b4385bf3d8f71623d691c5d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-09T15:56:47.627Z",
  "text": "It becomes `([1, 0], [0, 1])`. Do the nested arguments need to be changed as well?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I suspect that they need to be changed as well.",
  "id": "5b4385dbf16644066126297f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-09T15:57:15.484Z",
  "text": "I suspect that they need to be changed as well.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Perhaps the nested lists should be changed to matrices.",
  "id": "5b43861189db5e701cae7876",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-09T15:58:09.360Z",
  "text": "Perhaps the nested lists should be changed to matrices.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Thanks, that works. The only issue might be that <code>pspace(m)</code> looks a little messy now.<pre><code>JointPSpace<span class=\"list\">(<span class=\"keyword\">m</span>, MultivariateNormalDistribution<span class=\"list\">(<span class=\"keyword\">Matrix</span><span class=\"list\">([\n[<span class=\"number\">1</span>],\n[<span class=\"number\">0</span>]])</span>, Matrix<span class=\"list\">([\n[<span class=\"number\">1</span>, <span class=\"number\">0</span>],\n[<span class=\"number\">0</span>, <span class=\"number\">1</span>]])</span>)</span>)</span></code></pre>",
  "id": "5b4387169b82c6701baf1832",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-09T16:02:30.719Z",
  "text": "Thanks, that works. The only issue might be that `pspace(m)` looks a little messy now.\n```\nJointPSpace(m, MultivariateNormalDistribution(Matrix([\n[1],\n[0]]), Matrix([\n[1, 0],\n[0, 1]])))\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I am sorry, but there&#39;s an issue with this. All the arguments need to be of the type <code>Basic</code>, which is not true for <code>Matrix</code>.",
  "id": "5b43b2c5a99e1e52b7236715",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-09T19:08:53.155Z",
  "text": "I am sorry, but there's an issue with this. All the arguments need to be of the type `Basic`, which is not true for `Matrix`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I think converted nested arguments into <code>Tuples</code> is the way",
  "id": "5b43b37a70efc60660ba165c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-09T19:11:54.393Z",
  "text": "I think converted nested arguments into `Tuples` is the way",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Immutable matrices are of the type <code>Basic</code>. A matrix can be converted by <code>M.as_immutable()</code>.",
  "id": "5b43b4d570efc60660ba1995",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-09T19:17:41.019Z",
  "text": "Immutable matrices are of the type `Basic`. A matrix can be converted by `M.as_immutable()`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Oh okay. Thanks.",
  "id": "5b43b5207e23133ecb3ef1a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-09T19:18:56.813Z",
  "text": "Oh okay. Thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "you can also create immutable matrices directly with <code>ImmutableMatrix</code>",
  "id": "5b4465a563042f2df3651a5c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-10T07:52:05.143Z",
  "text": "you can also create immutable matrices directly with `ImmutableMatrix`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"akash9712\" class=\"mention\">@akash9712</span> remember to open issues for all things that are being left unimplemented",
  "id": "5b45c3137b811a6d63e20c49",
  "issues": [],
  "mentions": [
   {
    "screenName": "akash9712",
    "userId": "588704f7d73408ce4f459eb5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T08:42:59.844Z",
  "text": "@akash9712 remember to open issues for all things that are being left unimplemented",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Okay. ",
  "id": "5b45d50ba99e1e52b72888ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T09:59:39.108Z",
  "text": "Okay. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Can you please suggest how to approach the failing tests <a href=\"https://travis-ci.org/sympy/sympy/jobs/402089462\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a>?<br>Or should these tests be removed after deprecation?",
  "id": "5b461deaa99e1e52b7297658",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T15:10:34.472Z",
  "text": "Can you please suggest how to approach the failing tests [here](https://travis-ci.org/sympy/sympy/jobs/402089462)? \nOr should these tests be removed after deprecation?",
  "unread": false,
  "urls": [
   {
    "url": "https://travis-ci.org/sympy/sympy/jobs/402089462"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "do you mean the test that is going in recurrent loop?",
  "id": "5b46237bf1664406612ce6c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T15:34:19.906Z",
  "text": "do you mean the test that is going in recurrent loop?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-11T16:11:23.198Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Yes, and also the tests that are failing in test_continuous_rv.py.  One of the failing test is <a href=\"https://github.com/sympy/sympy/blob/master/sympy/stats/tests/test_continuous_rv.py#L730\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a>. The main issue I am facing is how should a condition imposed on the latent distribution be reflected once the PDF is computed and the object is returned.<br>I think the recurrent loop is happening in <code>integrate</code>, and an unevaluated object can be returned instead.",
  "id": "5b462bea60c38707837172a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T16:10:18.780Z",
  "text": "Yes, and also the tests that are failing in test_continuous_rv.py.  One of the failing test is [here](https://github.com/sympy/sympy/blob/master/sympy/stats/tests/test_continuous_rv.py#L730). The main issue I am facing is how should a condition imposed on the latent distribution be reflected once the PDF is computed and the object is returned.\nI think the recurrent loop is happening in `integrate`, and an unevaluated object can be returned instead.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/master/sympy/stats/tests/test_continuous_rv.py#L730"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "it&#39;s best to get the exact integral and report the bug on the issue tracker",
  "id": "5b4635ca866e0c6b159d5751",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T16:52:26.047Z",
  "text": "it's best to get the exact integral and report the bug on the issue tracker",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Should I change the test then?",
  "id": "5b463664b5efcd5aeef27248",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T16:55:00.259Z",
  "text": "Should I change the test then?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I&#39;d suggest to identify the problem first",
  "id": "5b463677b5efcd5aeef272d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T16:55:19.785Z",
  "text": "I'd suggest to identify the problem first",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I&#39;ll have a better look later",
  "id": "5b46367eb5efcd5aeef27302",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T16:55:26.524Z",
  "text": "I'll have a better look later",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Okay. Thanks. ",
  "id": "5b46368ab5efcd5aeef27321",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T16:55:38.662Z",
  "text": "Okay. Thanks. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Hi. Is it okay if the class <code>MarginalDistribution</code> takes in arguments a random symbol which is the joint distribution, and the random variables which are supposed to be marginalised out for creating the object?<br>If it&#39;s okay, this could be kept as an alternative method. ",
  "id": "5b4c7a47866e0c6b15b0d676",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-16T10:58:15.991Z",
  "text": "Hi. Is it okay if the class `MarginalDistribution` takes in arguments a random symbol which is the joint distribution, and the random variables which are supposed to be marginalised out for creating the object? \nIf it's okay, this could be kept as an alternative method. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "why the random variable?",
  "id": "5b4c821e95e03e3d7b540595",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-16T11:31:42.839Z",
  "text": "why the random variable?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "what about the position/index of the joint distribution?",
  "id": "5b4c822e1c0f906b145c6086",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-16T11:31:58.202Z",
  "text": "what about the position/index of the joint distribution?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would also recommend to think already about how to generalize the marginal distribution to stochastic processes, i.e. joint distributions of infinite variables",
  "id": "5b4c82621c0f906b145c624e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-16T11:32:50.797Z",
  "text": "I would also recommend to think already about how to generalize the marginal distribution to stochastic processes, i.e. joint distributions of infinite variables",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the idea of distribution objects is to make them independent of the random symbol object",
  "id": "5b4c828295e03e3d7b540776",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-16T11:33:22.136Z",
  "text": "the idea of distribution objects is to make them independent of the random symbol object",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<blockquote>\n<p>why the random variable?<br>what about the position/index of the joint distribution?</p></blockquote>\n<p>That would work for Joint random variables, and this is being done for the function <code>marginal_distribution</code>. But I think indexing won&#39;t work if a <code>MarginalDistribution</code> object is to be returned for compound distributions.</p>",
  "id": "5b4c84261c0f906b145c7263",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-16T11:40:22.250Z",
  "text": ">why the random variable?\nwhat about the position/index of the joint distribution?\n\nThat would work for Joint random variables, and this is being done for the function `marginal_distribution`. But I think indexing won't work if a `MarginalDistribution` object is to be returned for compound distributions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "why not?",
  "id": "5b4c843cc02eb83d7c7d5b12",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-16T11:40:44.391Z",
  "text": "why not?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<p>For eg.</p><pre><code>N1 = <span class=\"function\"><span class=\"title\">Normal</span><span class=\"params\">(<span class=\"string\">'N1'</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>)</span></span>\nN2 = <span class=\"function\"><span class=\"title\">Normal</span><span class=\"params\">(<span class=\"string\">'N2'</span>, N1, <span class=\"number\">1</span>)</span></span></code></pre><p>I am not sure how the indexing work in this case while creating the probability space for <code>N2</code>.</p>",
  "id": "5b4c848dc02eb83d7c7d5cd9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-16T11:42:05.817Z",
  "text": "For eg.\n```\nN1 = Normal('N1', 0, 1)\nN2 = Normal('N2', N1, 1)\n```\nI am not sure how the indexing work in this case while creating the probability space for `N2`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would say",
  "id": "5b4c84ab1c0f906b145c7785",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-16T11:42:35.145Z",
  "text": "I would say",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "the joint distribution has still some positional arguments?",
  "id": "5b4c899bc02eb83d7c7d877d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-16T12:03:39.721Z",
  "text": "the joint distribution has still some positional arguments?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "how did you end up constructing the <code>JointDistribution</code> object?",
  "id": "5b4c8a509a612333aa674bee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-16T12:06:40.354Z",
  "text": "how did you end up constructing the `JointDistribution` object?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Oh, Sorry. I was not creating a <code>JointDistribution</code> object, the <code>MarginalDistribution</code> obect directly. ",
  "id": "5b4c8ab366c1e833a9eea530",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-16T12:08:19.271Z",
  "text": "Oh, Sorry. I was not creating a `JointDistribution` object, the `MarginalDistribution` obect directly. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Oh, I see",
  "id": "5b4c8abc9a612333aa674dcf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-16T12:08:28.476Z",
  "text": "Oh, I see",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I believe that you should be able to do",
  "id": "5b4c8ac4c02eb83d7c7d9331",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-16T12:08:36.736Z",
  "text": "I believe that you should be able to do",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "if you need a symbol it should stay inside <code>JointDistribution</code>",
  "id": "5b4c8ad1866e0c6b15b1689c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-16T12:08:49.954Z",
  "text": "if you need a symbol it should stay inside `JointDistribution`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I&#39;m noticing that there is no documentation on how to create <code>JointDistribution</code> objects",
  "id": "5b4c8ae26534bc5d2e615f48",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-16T12:09:06.423Z",
  "text": "I'm noticing that there is no documentation on how to create `JointDistribution` objects",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<code>JointDistribution</code> objects are created using the functions in joint_rv_types.py, where the random symbol is returned. ",
  "id": "5b4c8b3d9a612333aa674e3e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-16T12:10:37.531Z",
  "text": "`JointDistribution` objects are created using the functions in joint_rv_types.py, where the random symbol is returned. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Maybe we need some <code>JointDistributionHandmade</code> ?",
  "id": "5b4c8b52c02eb83d7c7d99bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-16T12:10:58.314Z",
  "text": "Maybe we need some `JointDistributionHandmade` ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Yes, but I was not sure how to proceed about that. <code>ContinuousDistributionHandmade</code> objects are created when the user calls the function <code>ContinuousRV</code>, but I had a few doubts regarding that. Like if a similar function is created for joint distributions, how would we know which components are continuous or discrete?<br>Also, <code>ContinuousRV</code> also takes in a symbol and creates a lambda expression for the PDF. In the case of JointDistributions, the user would need to create indexed symbols or seperate symbols for each component. ",
  "id": "5b4c8c559a612333aa6750a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-16T12:15:17.929Z",
  "text": "Yes, but I was not sure how to proceed about that. `ContinuousDistributionHandmade` objects are created when the user calls the function `ContinuousRV`, but I had a few doubts regarding that. Like if a similar function is created for joint distributions, how would we know which components are continuous or discrete? \nAlso, `ContinuousRV` also takes in a symbol and creates a lambda expression for the PDF. In the case of JointDistributions, the user would need to create indexed symbols or seperate symbols for each component. \n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Would it be okay for a function which allows user to create <code>JointDistributionHandmade</code> to take the following arguments:<br>1) A  symbol/string denoting the name of the Joint distribution. This is needed to create the probability space from <code>PSpace</code><br>2) List of symbols for each component<br>3) The PDF using the symbols provided in (2)<br>I was thinking of two functions,  <code>JointContinuousRV</code> and <code>JointDiscreteRV</code>, which return random variables with each component being continuous and discrete respectively.",
  "id": "5b50e081f477e4664aac6fe3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-19T19:03:29.911Z",
  "text": "Would it be okay for a function which allows user to create `JointDistributionHandmade` to take the following arguments:\n1) A  symbol/string denoting the name of the Joint distribution. This is needed to create the probability space from `PSpace`\n2) List of symbols for each component\n3) The PDF using the symbols provided in (2)\nI was thinking of two functions,  `JointContinuousRV` and `JointDiscreteRV`, which return random variables with each component being continuous and discrete respectively.\n ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "What about indexed symbols?",
  "id": "5b51ff73f02a0977a3ebcf14",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-20T15:27:47.552Z",
  "text": "What about indexed symbols?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Otherwise a lambda could also be enough",
  "id": "5b51ff80ee530e4aac880dc6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-20T15:28:00.812Z",
  "text": "Otherwise a lambda could also be enough",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I mean... Lambda plus number of parameters",
  "id": "5b51ff8cee530e4aac880dd7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-20T15:28:12.767Z",
  "text": "I mean... Lambda plus number of parameters",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "The symbols could be the normal symbols or indexed.<br>A lambda would be fine, and because the lambda requires the symbols, I think the number of symbols won&#39;t be needed.<br>I suggested specifying the symbols and the PDF expression seperately so that the user does not need to create the Lambda, and it is done internally, like in <code>ContinuousRV</code>",
  "id": "5b52076132fa1b740855ceb4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-20T16:01:37.855Z",
  "text": "The symbols could be the normal symbols or indexed. \nA lambda would be fine, and because the lambda requires the symbols, I think the number of symbols won't be needed. \nI suggested specifying the symbols and the PDF expression seperately so that the user does not need to create the Lambda, and it is done internally, like in `ContinuousRV`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I would prefer indexed, because this allows a natural generalization for stochastic processes",
  "id": "5b5213cc9ddf5f4aadf9f3fb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-20T16:54:36.977Z",
  "text": "I would prefer indexed, because this allows a natural generalization for stochastic processes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "in the future we will need to handle the joint distribution of stochastic processes",
  "id": "5b5213f4c331e03552084adc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-20T16:55:16.070Z",
  "text": "in the future we will need to handle the joint distribution of stochastic processes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-21T11:08:35.788Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<p>Can someone help me with the doctest failures on <span data-link-type=\"issue\" data-issue=\"14951\" class=\"issue\">#14951</span>? The doctests seem to fail randomly, even locally. The tests also pass some jobs and fail some on Travis.<br>Tests:<br><a href=\"https://travis-ci.org/sympy/sympy/jobs/406526814#L5881\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://travis-ci.org/sympy/sympy/jobs/406526814#L5881</a><br><a href=\"https://travis-ci.org/sympy/sympy/jobs/406526815#L5887\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://travis-ci.org/sympy/sympy/jobs/406526815#L5887</a></p><p>Doctests: </p>",
  "id": "5b531346c579673e6b85bedf",
  "issues": [
   {
    "number": "14951"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-21T11:04:38.932Z",
  "text": "Can someone help me with the doctest failures on #14951? The doctests seem to fail randomly, even locally. The tests also pass some jobs and fail some on Travis. \nTests:\nhttps://travis-ci.org/sympy/sympy/jobs/406526814#L5881 \nhttps://travis-ci.org/sympy/sympy/jobs/406526815#L5887\n\nDoctests: \n ",
  "unread": false,
  "urls": [
   {
    "url": "https://travis-ci.org/sympy/sympy/jobs/406526814#L5881"
   },
   {
    "url": "https://travis-ci.org/sympy/sympy/jobs/406526815#L5887"
   }
  ],
  "v": 3
 },
 {
  "editedAt": "2018-07-21T11:08:48.847Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<a href=\"https://travis-ci.org/sympy/sympy/jobs/406526792#L8754\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://travis-ci.org/sympy/sympy/jobs/406526792#L8754</a><br><a href=\"https://travis-ci.org/sympy/sympy/jobs/406526794#L8753\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://travis-ci.org/sympy/sympy/jobs/406526794#L8753</a>",
  "id": "5b531435f9ffc4664bf20e15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-21T11:08:37.393Z",
  "text": "https://travis-ci.org/sympy/sympy/jobs/406526792#L8754\nhttps://travis-ci.org/sympy/sympy/jobs/406526794#L8753",
  "unread": false,
  "urls": [
   {
    "url": "https://travis-ci.org/sympy/sympy/jobs/406526792#L8754"
   },
   {
    "url": "https://travis-ci.org/sympy/sympy/jobs/406526794#L8753"
   }
  ],
  "v": 2
 },
 {
  "editedAt": "2018-07-21T13:42:47.981Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<p>I ran the following piece of code on my terminal:</p><pre><code>#script\n<span class=\"keyword\">from</span> sympy <span class=\"keyword\">import</span> *\n<span class=\"keyword\">from</span> sympy.stats <span class=\"keyword\">import</span> *\n<span class=\"keyword\">from</span> sympy.stats.joint_rv <span class=\"keyword\">import</span> *\n<span class=\"keyword\">from</span> sympy.stats.joint_rv_types <span class=\"keyword\">import</span> *\nx1, x2 = Indexed(<span class=\"string\">'x'</span>, <span class=\"number\">1</span>), Indexed(<span class=\"string\">'x'</span>, <span class=\"number\">2</span>)\npdf = exp(-x1**<span class=\"number\">2</span><span class=\"regexp\">/2 + x1 - x2**2/</span><span class=\"number\">2</span> - S(<span class=\"number\">1</span>)<span class=\"regexp\">/2)/</span>(<span class=\"number\">2</span>*pi)\nX = JointRV(<span class=\"string\">'x'</span>, pdf)\nmarginal_distribution(X, <span class=\"number\">1</span>)(<span class=\"number\">2</span>)</code></pre><p>And the result alternated between two outputs:</p><pre><code>(-sqrt(2)<span class=\"keyword\">*</span>pi<span class=\"keyword\">*</span>exp(1/2)<span class=\"keyword\">*</span>erf(sqrt(2)/2)/2 + sqrt(2)<span class=\"keyword\">*</span>pi<span class=\"keyword\">*</span>exp(1/2)/2)<span class=\"keyword\">*</span>exp(-5/2)/(2<span class=\"keyword\">*</span>pi<span class=\"keyword\">*</span><span class=\"keyword\">*</span>(3/2)) + sqrt(2)<span class=\"keyword\">*</span>(-erfc(sqrt(2)/2) + 2)<span class=\"keyword\">*</span>exp(-2)/(4<span class=\"keyword\">*</span>sqrt(pi))  <span class=\"comment\"># ~0.054</span></code></pre><p>and </p><pre><code><span class=\"built_in\">sqrt</span>(<span class=\"number\">2</span>)*<span class=\"built_in\">exp</span>(-<span class=\"number\">1</span>/<span class=\"number\">2</span>)/(<span class=\"number\">2</span>*<span class=\"built_in\">sqrt</span>(pi)) <span class=\"preprocessor\"># ~0.24</span></code></pre>",
  "id": "5b5337ffc579673e6b861212",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-21T13:41:19.380Z",
  "text": "I ran the following piece of code on my terminal:\n```\n#script\nfrom sympy import *\nfrom sympy.stats import *\nfrom sympy.stats.joint_rv import *\nfrom sympy.stats.joint_rv_types import *\nx1, x2 = Indexed('x', 1), Indexed('x', 2)\npdf = exp(-x1**2/2 + x1 - x2**2/2 - S(1)/2)/(2*pi)\nX = JointRV('x', pdf)\nmarginal_distribution(X, 1)(2)\n```\nAnd the result alternated between two outputs:\n```\n(-sqrt(2)*pi*exp(1/2)*erf(sqrt(2)/2)/2 + sqrt(2)*pi*exp(1/2)/2)*exp(-5/2)/(2*pi**(3/2)) + sqrt(2)*(-erfc(sqrt(2)/2) + 2)*exp(-2)/(4*sqrt(pi))  # ~0.054\n```\nand \n```\nsqrt(2)*exp(-1/2)/(2*sqrt(pi)) # ~0.24\n```",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "did you read from an unordered data type by chance?",
  "id": "5b543dab63cf1636bde3a36b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-22T08:17:47.522Z",
  "text": "did you read from an unordered data type by chance?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "I guess there are some problems in the types of your expression:",
  "id": "5b543eff9ddf5f4aadfe6bdb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-22T08:23:27.102Z",
  "text": "I guess there are some problems in the types of your expression:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<pre><code class=\"python\">In [<span class=\"number\">16</span>]: simplify(_)\nOut[<span class=\"number\">16</span>]: \n   \u239b   \u239b\u221a<span class=\"number\">2</span>\u22c5x[<span class=\"number\">1</span>]\u239e      \u239b\u221a<span class=\"number\">2</span>\u22c5x[<span class=\"number\">1</span>]\u239e\u239e  -<span class=\"number\">1</span>/<span class=\"number\">2</span>\n\u221a<span class=\"number\">2</span>\u22c5\u239cerf\u239c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u239f - erf\u239c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u239f\u239f\u22c5\u212f    \n   \u239d   \u239d   <span class=\"number\">2</span>   \u23a0      \u239d   <span class=\"number\">2</span>   \u23a0\u23a0      \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n                 <span class=\"number\">4</span>\u22c5\u221a\u03c0</code></pre>",
  "id": "5b543f059ddf5f4aadfe6bdd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-22T08:23:33.145Z",
  "text": "```python\nIn [16]: simplify(_)\nOut[16]: \n   \u239b   \u239b\u221a2\u22c5x[1]\u239e      \u239b\u221a2\u22c5x[1]\u239e\u239e  -1/2\n\u221a2\u22c5\u239cerf\u239c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u239f - erf\u239c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u239f\u239f\u22c5\u212f    \n   \u239d   \u239d   2   \u23a0      \u239d   2   \u23a0\u23a0      \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n                 4\u22c5\u221a\u03c0 \n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "and then:<pre><code class=\"python\">In [<span class=\"number\">20</span>]: Out[<span class=\"number\">16</span>].replace(x1, x)\nOut[<span class=\"number\">20</span>]: \n   \u239b     \u239b\u221a<span class=\"number\">2</span>\u22c5x\u239e      \u239b\u221a<span class=\"number\">2</span>\u22c5x[<span class=\"number\">1</span>]\u239e\u239e  -<span class=\"number\">1</span>/<span class=\"number\">2</span>\n\u221a<span class=\"number\">2</span>\u22c5\u239c- erf\u239c\u2500\u2500\u2500\u2500\u239f + erf\u239c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u239f\u239f\u22c5\u212f    \n   \u239d     \u239d <span class=\"number\">2</span>  \u23a0      \u239d   <span class=\"number\">2</span>   \u23a0\u23a0      \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n                 <span class=\"number\">4</span>\u22c5\u221a\u03c0</code></pre>",
  "id": "5b543f1426bfd636be3e4f5a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-22T08:23:48.309Z",
  "text": "and then:\n```python\nIn [20]: Out[16].replace(x1, x)\nOut[20]: \n   \u239b     \u239b\u221a2\u22c5x\u239e      \u239b\u221a2\u22c5x[1]\u239e\u239e  -1/2\n\u221a2\u22c5\u239c- erf\u239c\u2500\u2500\u2500\u2500\u239f + erf\u239c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u239f\u239f\u22c5\u212f    \n   \u239d     \u239d 2  \u23a0      \u239d   2   \u23a0\u23a0      \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n                 4\u22c5\u221a\u03c0\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "only the first <code>x[1]</code> got replaced...",
  "id": "5b543f2332fa1b74085a6c59",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-22T08:24:03.011Z",
  "text": "only the first `x[1]` got replaced...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "The symbol <code>x[1]</code> coming out of <code>marginal_distribution</code> appears to be a symbol, not an Indexed.",
  "id": "5b544059f9ffc4664bf45525",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-22T08:29:13.879Z",
  "text": "The symbol `x[1]` coming out of `marginal_distribution` appears to be a symbol, not an Indexed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Okay, thanks for pointing that out. I&#39;ll fix that.<br><code>(_).free_symbols</code> returns a set, so that is one unordered data type being used",
  "id": "5b54526eb2411177a2629ae4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-22T09:46:22.106Z",
  "text": "Okay, thanks for pointing that out. I'll fix that.\n`(_).free_symbols` returns a set, so that is one unordered data type being used",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I have updated <span data-link-type=\"issue\" data-issue=\"14951\" class=\"issue\">#14951</span>. Please have a look.",
  "id": "5b5587eb32fa1b74085d3aa5",
  "issues": [
   {
    "number": "14951"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-23T07:46:51.729Z",
  "text": "I have updated #14951. Please have a look.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"akash9712\" class=\"mention\">@akash9712</span> I&#39;ve put some comments on the PR",
  "id": "5b58349cb1b9572ed3dc4b2a",
  "issues": [],
  "mentions": [
   {
    "screenName": "akash9712",
    "userId": "588704f7d73408ce4f459eb5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-25T08:28:12.898Z",
  "text": "@akash9712 I've put some comments on the PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "Yes, sorry for not replying, I was just working on it.<br>I&#39;ll update the PR today. The conditions on latent distributions are now reflected, and the correct answer can be calculated if the expression involves a given condition. There is still an issue, but I&#39;ll discuss that after I push the changes. ",
  "id": "5b58353f5301255724c3a95d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-25T08:30:55.283Z",
  "text": "Yes, sorry for not replying, I was just working on it.\nI'll update the PR today. The conditions on latent distributions are now reflected, and the correct answer can be calculated if the expression involves a given condition. There is still an issue, but I'll discuss that after I push the changes. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "OK",
  "id": "5b58355e1be9bb57bcc10b2a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-25T08:31:26.818Z",
  "text": "OK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I have updated <span data-link-type=\"issue\" data-issue=\"14951\" class=\"issue\">#14951</span>.  To handle other random variables in <code>JointRV</code>, <code>MarginalDistribution</code> had to be created, and I have added it in the same PR. It thus also handles compound distributions, and thus closes <span data-link-type=\"issue\" data-issue=\"14888\" class=\"issue\">#14888</span>.<br>There are 3 failing tests, two of which are of the same type as <a href=\"https://github.com/sympy/sympy/blob/master/sympy/stats/tests/test_mix.py#L12\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a>.<br>Because the distribution in cases like above is set to be as of different types at the time of construction, I can&#39;t figure out how we would get back the <code>PoissonDistribution</code> back if the latent RV is fixed. On the other hand, the PMF of the distribution is same as <code>PoissonDistribution</code>, but it is still an object of <code>MarginalDistribution</code>.<br>The last failing test requires creating a <code>RandomDomain</code> type class for Joint random variables. If <code>ProductDomain</code> is to be used instead of <code>JointDomain</code>, each of the indexed variables involved in  a joint distribution could be required to have a probability space. If this is needed, what should be the distribution for each component of a joint random variable? ",
  "id": "5b585a5a5301255724c41be2",
  "issues": [
   {
    "number": "14951"
   },
   {
    "number": "14888"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-25T11:09:14.748Z",
  "text": "I have updated #14951.  To handle other random variables in `JointRV`, `MarginalDistribution` had to be created, and I have added it in the same PR. It thus also handles compound distributions, and thus closes #14888.\nThere are 3 failing tests, two of which are of the same type as [here](https://github.com/sympy/sympy/blob/master/sympy/stats/tests/test_mix.py#L12). \nBecause the distribution in cases like above is set to be as of different types at the time of construction, I can't figure out how we would get back the `PoissonDistribution` back if the latent RV is fixed. On the other hand, the PMF of the distribution is same as `PoissonDistribution`, but it is still an object of `MarginalDistribution`.\nThe last failing test requires creating a `RandomDomain` type class for Joint random variables. If `ProductDomain` is to be used instead of `JointDomain`, each of the indexed variables involved in  a joint distribution could be required to have a probability space. If this is needed, what should be the distribution for each component of a joint random variable? ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/master/sympy/stats/tests/test_mix.py#L12"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "can we maybe have some shortcuts, like a simplified product domain?",
  "id": "5b5b415d46235249cd58db1f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-27T15:59:25.164Z",
  "text": "can we maybe have some shortcuts, like a simplified product domain?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "<a href=\"https://github.com/sympy/sympy/blob/master/sympy/stats/tests/test_mix.py#L11\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/blob/master/sympy/stats/tests/test_mix.py#L11</a>",
  "id": "5b5b424b5301255724cdb21a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-27T16:03:23.013Z",
  "text": "https://github.com/sympy/sympy/blob/master/sympy/stats/tests/test_mix.py#L11",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/master/sympy/stats/tests/test_mix.py#L11"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "should <code>pspace(X)</code> be a product P-space?",
  "id": "5b5b4263db8bd24550b97492",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-27T16:03:47.529Z",
  "text": "should `pspace(X)` be a product P-space?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "The product P-space should be marginalized out",
  "id": "5b5b427b46235249cd58e1ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-27T16:04:11.936Z",
  "text": "The product P-space should be marginalized out",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<code>pspace(X)</code> gives a joint P-space, which is inherits from <code>ProductPSpace</code>. So the <code>pspace(X)</code> already gives a product P-space.<br>Can you please explain what you mean by simplified product domain? ",
  "id": "5b5b478dbd17b961590adc8e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-27T16:25:49.391Z",
  "text": "`pspace(X)` gives a joint P-space, which is inherits from `ProductPSpace`. So the `pspace(X)` already gives a product P-space. \nCan you please explain what you mean by simplified product domain? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "<code>pspace(X)</code> gives <code>JointPSpace</code> in <span data-link-type=\"issue\" data-issue=\"14951\" class=\"issue\">#14951</span>, not in the master branch",
  "id": "5b5b4a94bd17b961590ae5c1",
  "issues": [
   {
    "number": "14951"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-27T16:38:44.491Z",
  "text": "`pspace(X)` gives `JointPSpace` in #14951, not in the master branch",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 100
  },
  "html": "Are you able to fix the tests or do you need help?",
  "id": "5b5b607ef52b276ced48eb3c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-27T18:12:14.017Z",
  "text": "Are you able to fix the tests or do you need help?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 32
  },
  "html": "I am not able to fix the test on <a href=\"https://github.com/sympy/sympy/blob/master/sympy/stats/tests/test_mix.py#L12\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/blob/master/sympy/stats/tests/test_mix.py#L12</a>",
  "id": "5b5b6159854add6cee00d9c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-27T18:15:53.710Z",
  "text": "I am not able to fix the test on https://github.com/sympy/sympy/blob/master/sympy/stats/tests/test_mix.py#L12",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/master/sympy/stats/tests/test_mix.py#L12"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "<pre><code class=\"python\">JointPSpace(x, MarginalDistribution(l**x*exp(-l)/factorial(x), (x,)))</code></pre>this construction looks a bit weird to me.<br>I was expecting a different approach for the marginal distribution, that is, indexing out the product distribution.",
  "id": "5b5b8db3966e803950251ddd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-27T21:25:07.510Z",
  "text": "```python\nJointPSpace(x, MarginalDistribution(l**x*exp(-l)/factorial(x), (x,)))\n```\nthis construction looks a bit weird to me.\nI was expecting a different approach for the marginal distribution, that is, indexing out the product distribution.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "I was expecting <code>MarginalDistribution(JointDistribution(...), 0)</code>",
  "id": "5b5b8e3e44812258443a377d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-27T21:27:26.570Z",
  "text": "I was expecting `MarginalDistribution(JointDistribution(...), 0)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "that is... the <code>MarginalDistribution</code> should contain the info about the joint distribution from which it&#39;s been created",
  "id": "5b5b8e5895988830b081cf4b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-27T21:27:52.789Z",
  "text": "that is... the `MarginalDistribution` should contain the info about the joint distribution from which it's been created",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "Okay, I&#39;ll try and modify it accordingly.",
  "id": "5b5be540cb4d5b036ca004c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-28T03:38:40.680Z",
  "text": "Okay, I'll try and modify it accordingly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "I think you should then be able to extract the condition with <code>given</code> in the case of the test.",
  "id": "5b5c05333cc39566072a2c3e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-28T05:54:59.493Z",
  "text": "I think you should then be able to extract the condition with `given` in the case of the test.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "I have updated <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"14951\" class=\"issue\">#14951</a>, and all the tests should pass now.<br>One thing that has been implemented differently is that for marginal distributions of compound random variables, they are not being made into Joint random variables first. They are directly passed to `MarginalDistribution, so the distribution is made out of the compound random variable belonging to the original distribution rather than a joint distribution. Is that okay?",
  "id": "5b5d66ef3e264c71384a637e",
  "issues": [
   {
    "number": "14951"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-29T07:04:15.253Z",
  "text": "I have updated #14951, and all the tests should pass now.\nOne thing that has been implemented differently is that for marginal distributions of compound random variables, they are not being made into Joint random variables first. They are directly passed to `MarginalDistribution, so the distribution is made out of the compound random variable belonging to the original distribution rather than a joint distribution. Is that okay?\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "There are other commits showing up on the PR, and I am not sure if they are there because of something I did. Should I remove them?",
  "id": "5b5d6ea495988830b0859068",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-29T07:37:08.877Z",
  "text": "There are other commits showing up on the PR, and I am not sure if they are there because of something I did. Should I remove them?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 30
  },
  "html": "Did they appear only after the last push?",
  "id": "5b5d719b331546584577f494",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-29T07:49:47.496Z",
  "text": "Did they appear only after the last push?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 30
  },
  "html": "It looks like they might be coming from  merging the Joint Handmade branch. Maybe that should be reverted and redone if possible.",
  "id": "5b5d7363966e80395029003d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-29T07:57:23.880Z",
  "text": "It looks like they might be coming from  merging the Joint Handmade branch. Maybe that should be reverted and redone if possible.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "Yes, they appeared after the last push. I&#39;ll try to revert it.",
  "id": "5b5d77e920d248394f622afe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-29T08:16:41.892Z",
  "text": "Yes, they appeared after the last push. I'll try to revert it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "I&#39;ll open a seperate PR. I switched to a different computer because of some issues, pulled the <code>Joint_Handmade</code> branch and made the commits on that. Maybe that is causing some issues.",
  "id": "5b5d80bf966e803950291d8e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-29T08:54:23.130Z",
  "text": "I'll open a seperate PR. I switched to a different computer because of some issues, pulled the `Joint_Handmade` branch and made the commits on that. Maybe that is causing some issues.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "Opened <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"14989\" class=\"issue\">#14989</a>. Please have a look.",
  "id": "5b5d852ff52b276ced4d6643",
  "issues": [
   {
    "number": "14989"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-29T09:13:19.679Z",
  "text": "Opened #14989. Please have a look.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-29T10:33:04.055Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "Should I start working on stochastic processes in the meantime? It should be independent of compound distributions.",
  "id": "5b5d97773e264c71384ac16d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-29T10:31:19.976Z",
  "text": "Should I start working on stochastic processes in the meantime? It should be independent of compound distributions.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "OK",
  "id": "5b5d9e0520d248394f627ec2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-29T10:59:17.607Z",
  "text": "OK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "I would simply generalize the product and joint distributions to infinite dimensional spaces",
  "id": "5b5d9e55966e8039502958a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-29T11:00:37.715Z",
  "text": "I would simply generalize the product and joint distributions to infinite dimensional spaces",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "ideally, you should be able to use the same code for the stochastic processes",
  "id": "5b5d9e71854add6cee059f5f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-29T11:01:05.430Z",
  "text": "ideally, you should be able to use the same code for the stochastic processes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-29T20:48:57.357Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "I have added the class <code>CompoundDistribution</code> in <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"14989\" class=\"issue\">#14989</a>. It takes in the single distribution with a random parameter as an input for construction.<pre><code>&gt;&gt;&gt; mu = <span class=\"function\"><span class=\"title\">Normal</span><span class=\"params\">(<span class=\"string\">'mu'</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)</span></span>\n&gt;&gt;&gt; x = <span class=\"function\"><span class=\"title\">Normal</span><span class=\"params\">(<span class=\"string\">'x'</span>, mu, <span class=\"number\">1</span>)</span></span>\n&gt;&gt;&gt; <span class=\"function\"><span class=\"title\">pspace</span><span class=\"params\">(x)</span></span><span class=\"class\">.distribution</span>\n<span class=\"function\"><span class=\"title\">MarginalDistribution</span><span class=\"params\">(CompoundDistribution(NormalDistribution(mu, <span class=\"number\">1</span>)</span></span>), (x,))</code></pre>",
  "id": "5b5e27a212f1be713763f71e",
  "issues": [
   {
    "number": "14989"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-29T20:46:26.170Z",
  "text": "I have added the class `CompoundDistribution` in #14989. It takes in the single distribution with a random parameter as an input for construction.\n```\n>>> mu = Normal('mu', 2, 3)\n>>> x = Normal('x', mu, 1)\n>>> pspace(x).distribution\nMarginalDistribution(CompoundDistribution(NormalDistribution(mu, 1)), (x,))\n```",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "Please suggest any changes that should be made. ",
  "id": "5b5e282bdefc9823f5239df9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-29T20:48:43.770Z",
  "text": "Please suggest any changes that should be made. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "do we still need the <code>MarginalDistribution</code> now? The <code>MarginalDistribution</code> was meant to be used together with <code>JointDistribution</code> (at least that&#39;s what I had in mind).",
  "id": "5b5e3113f52b276ced4eed26",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-29T21:26:43.042Z",
  "text": "do we still need the `MarginalDistribution` now? The `MarginalDistribution` was meant to be used together with `JointDistribution` (at least that's what I had in mind).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "I wasn&#39;t sure about whether to use marginal distribution or not. I&#39;ll remove that.",
  "id": "5b5e314520d248394f63c67d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-29T21:27:33.552Z",
  "text": "I wasn't sure about whether to use marginal distribution or not. I'll remove that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "OK",
  "id": "5b5e3175d4527523f63ceaf2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-29T21:28:21.334Z",
  "text": "OK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "I have updated the PR accordingly. ",
  "id": "5b5e45f6331546584579c2d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-29T22:55:50.297Z",
  "text": "I have updated the PR accordingly. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-31T13:53:32.308Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Upabjojr\" class=\"mention\">@Upabjojr</span> When generalising the product and joint distributions for infinite dimensional spaces, would it be okay for the domain to be a finite product at a given time, which can be extended further? I think if this is done, only the ability to extend the domain would have to be added to the Joint Distribution, and rest everything would be specific to different stochastic processes.<br>This is what <span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> suggested at the beginning of the project. Please correct me if this was not what you meant.",
  "id": "5b6069cd331546584580b333",
  "issues": [],
  "mentions": [
   {
    "screenName": "Upabjojr",
    "userId": "56e83c9e85d51f252ab8efe1",
    "userIds": []
   },
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-31T13:53:17.682Z",
  "text": "@Upabjojr When generalising the product and joint distributions for infinite dimensional spaces, would it be okay for the domain to be a finite product at a given time, which can be extended further? I think if this is done, only the ability to extend the domain would have to be added to the Joint Distribution, and rest everything would be specific to different stochastic processes. \nThis is what @jksuom suggested at the beginning of the project. Please correct me if this was not what you meant.\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "OK",
  "id": "5b606ddd17c942036b86e252",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-31T14:10:37.172Z",
  "text": "OK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "though I will only give a complete answer after seeing the code",
  "id": "5b606e1a854add6cee0e43bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-31T14:11:38.029Z",
  "text": "though I will only give a complete answer after seeing the code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 30
  },
  "html": "In case of stochastic processes, the probability  space is practically never useful.  What is needed, instead, is the (compatible) family of all joint distributions of finite sets of variables. (Theoretically, it is possible to derive a probability space out of those distributions.)",
  "id": "5b607b35bf7544660675604d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-31T15:07:33.972Z",
  "text": "In case of stochastic processes, the probability  space is practically never useful.  What is needed, instead, is the (compatible) family of all joint distributions of finite sets of variables. (Theoretically, it is possible to derive a probability space out of those distributions.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "I will have little internet access until Monday, so I might not be answering these days.",
  "id": "5b62b6d204436a1ae6069b45",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-02T07:46:26.588Z",
  "text": "I will have little internet access until Monday, so I might not be answering these days.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> Can you please explain by what you mean by a compatible family of all joint distributions? I am struggling a bit with the implementation of random walks and how the result should look like. ",
  "id": "5b64bb5204436a1ae611a577",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-03T20:30:10.863Z",
  "text": "@jksuom Can you please explain by what you mean by a compatible family of all joint distributions? I am struggling a bit with the implementation of random walks and how the result should look like. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-04T05:41:19.851Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 30
  },
  "html": "An inexact but short explanation is that a family of joint distributions is compatible if, for each (finite) set of variables, the distributions of its subsets are its marginal distributions ( i.e., their probability density can be obtained by integrating/summing over all omitted variables).",
  "id": "5b653c645d1362758b2dcfda",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-04T05:40:52.946Z",
  "text": "An inexact but short explanation is that a family of joint distributions is compatible if, for each (finite) set of variables, the distributions of its subsets are its marginal distributions ( i.e., their probability density can be obtained by integrating/summing over all omitted variables).",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "Okay. Thanks for explaining.",
  "id": "5b655d03e8698a2dca06facf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-04T08:00:03.621Z",
  "text": "Okay. Thanks for explaining.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "Sorry for going through this again, but can someone please give me an example of how the stochastic process should look like to the user? I am still not clear about the implementation.",
  "id": "5b6617303bca002dcbc20bdd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-04T21:14:24.012Z",
  "text": "Sorry for going through this again, but can someone please give me an example of how the stochastic process should look like to the user? I am still not clear about the implementation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "Like the joint distribution I&#39;d say",
  "id": "5b66209085278d705e86146e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-04T21:54:24.464Z",
  "text": "Like the joint distribution I'd say",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "For example random process X at t should be expressed like X[t]",
  "id": "5b66210e0cfcf02fdf0f8d47",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-04T21:56:30.390Z",
  "text": "For example random process X at t should be expressed like X[t]",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "Okay. Thanks.",
  "id": "5b6680dbcf8ab4758aa53473",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-05T04:45:15.445Z",
  "text": "Okay. Thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "Hi. Right now, <code>MarginalDistribution</code> is being created out of a joint distribution, and random symbols which should be a part of the final distribution. Would it be a better idea to replace the distribution with a joint random variable as well?  ",
  "id": "5b687529cf8ab4758aae7ab0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-06T16:19:53.515Z",
  "text": "Hi. Right now, `MarginalDistribution` is being created out of a joint distribution, and random symbols which should be a part of the final distribution. Would it be a better idea to replace the distribution with a joint random variable as well?  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "I have opened <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"15045\" class=\"issue\">#15045</a> with this change, and also included a Bernoulli Trials as a random process. I have included just this process due to it being simpler than others. If this implementation seems fine, I can add the other processes.",
  "id": "5b68b706a9426c705d3627e8",
  "issues": [
   {
    "number": "15045"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-06T21:00:54.515Z",
  "text": "I have opened #15045 with this change, and also included a Bernoulli Trials as a random process. I have included just this process due to it being simpler than others. If this implementation seems fine, I can add the other processes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "I updated <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"15045\" class=\"issue\">#15045</a>, but just read your reviews regarding the stochastic processes. <code>MarginalDistribution</code> has been updated according to your reviews, i.e, it is now initialised out of a distribution and the indices.",
  "id": "5b69a205c917d40dc2541f1c",
  "issues": [
   {
    "number": "15045"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-07T13:43:33.995Z",
  "text": "I updated #15045, but just read your reviews regarding the stochastic processes. `MarginalDistribution` has been updated according to your reviews, i.e, it is now initialised out of a distribution and the indices.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "I will update the PR again soon.",
  "id": "5b69a212c79ebc1ae7bca75f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-07T13:43:46.783Z",
  "text": "I will update the PR again soon.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "OK",
  "id": "5b69a8b75d1362758b440429",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-07T14:12:07.874Z",
  "text": "OK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "Regarding the permanent link, I don&#39;t know about the SymPy wiki. I guess you&#39;re not supposed to put it there.",
  "id": "5b69a8dcc79ebc1ae7bcd208",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-07T14:12:44.649Z",
  "text": "Regarding the permanent link, I don't know about the SymPy wiki. I guess you're not supposed to put it there.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "I found many of the GSoC project reports <a href=\"https://github.com/sympy/sympy/wiki/GSoC-2017\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a>. ",
  "id": "5b69b38785278d705e982f9f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-07T14:58:15.035Z",
  "text": "I found many of the GSoC project reports [here](https://github.com/sympy/sympy/wiki/GSoC-2017). ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/wiki/GSoC-2017"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 30
  },
  "html": "Do you mean <a href=\"https://github.com/sympy/sympy/wiki/GSoC-2017-Report\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">this</a>?",
  "id": "5b69b457e8698a2dca1d7b69",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-07T15:01:43.031Z",
  "text": "Do you mean [this](https://github.com/sympy/sympy/wiki/GSoC-2017-Report)?",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/wiki/GSoC-2017-Report"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "Oh sorry, yes. ",
  "id": "5b69b54404436a1ae62addf4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-07T15:05:40.499Z",
  "text": "Oh sorry, yes. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"akash9712\" class=\"mention\">@akash9712</span> maybe we should start by designing the tests for random processes",
  "id": "5b6a108ca9426c705d3ddb35",
  "issues": [],
  "mentions": [
   {
    "screenName": "akash9712",
    "userId": "588704f7d73408ce4f459eb5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-07T21:35:08.784Z",
  "text": "@akash9712 maybe we should start by designing the tests for random processes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "I think it is critical to test the conditional distribution",
  "id": "5b6a10a1cf8ab4758ab7c29c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-07T21:35:29.211Z",
  "text": "I think it is critical to test the conditional distribution",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "expressions like <code>E(X[t+1], given=X[t])</code>",
  "id": "5b6a10b885278d705e9a5a4b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-07T21:35:52.032Z",
  "text": "expressions like `E(X[t+1], given=X[t])`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "also with various combinations, like <code>X[t+2]</code> and <code>X[t+n]</code>",
  "id": "5b6a10f08eb2d52fde5b6963",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-07T21:36:48.370Z",
  "text": "also with various combinations, like `X[t+2]` and `X[t+n]`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "Okay. ",
  "id": "5b6a4473359c70045ca03d27",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-08T01:16:35.310Z",
  "text": "Okay. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "I have opened a new PR <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"15058\" class=\"issue\">#15058</a> adding just <code>BernoulliProcess</code> and the test cases as suggested. For other stochastic processes, some other implementation of methods might be needed, but please suggest if the structure for a stochastic process can be kept like done in the PR.<br>I removed some commits from <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"15045\" class=\"issue\">#15045</a>, so that now it just contains changes related to <code>MarginalDistribution</code>. Please have a look",
  "id": "5b6b33efe8698a2dca25e3b8",
  "issues": [
   {
    "number": "15058"
   },
   {
    "number": "15045"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-08T18:18:23.872Z",
  "text": "I have opened a new PR #15058 adding just `BernoulliProcess` and the test cases as suggested. For other stochastic processes, some other implementation of methods might be needed, but please suggest if the structure for a stochastic process can be kept like done in the PR.\nI removed some commits from #15045, so that now it just contains changes related to `MarginalDistribution`. Please have a look",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "<p>Hi. For joint random variables, should arithmatic operations be allowed on them? For example, if <code>N = Normal(&#39;N&#39;, [1, 0], [[1, 0], [0, 1]])</code>, would N**2 have any meaning? I had this doubt regarding calculating the expectations for joint distributions. If the user enters something like:</p><pre><code>&gt;&gt;&gt; N = <span class=\"function\"><span class=\"title\">Normal</span><span class=\"params\">(<span class=\"string\">'N'</span>, [<span class=\"number\">1</span>, <span class=\"number\">0</span>], [[<span class=\"number\">1</span>, <span class=\"number\">0</span>], [<span class=\"number\">0</span>, <span class=\"number\">1</span>]])</span></span>\n&gt;&gt;&gt; <span class=\"function\"><span class=\"title\">E</span><span class=\"params\">(N**<span class=\"number\">2</span>)</span></span></code></pre><p>What should be the expected output? </p>",
  "id": "5b6eea725ec2bc174fe45ab1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-11T13:53:54.273Z",
  "text": "Hi. For joint random variables, should arithmatic operations be allowed on them? For example, if `N = Normal('N', [1, 0], [[1, 0], [0, 1]])`, would N**2 have any meaning? I had this doubt regarding calculating the expectations for joint distributions. If the user enters something like:\n```\n>>> N = Normal('N', [1, 0], [[1, 0], [0, 1]])\n>>> E(N**2)\n```\nWhat should be the expected output? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 30
  },
  "html": "It seems that <code>N</code> is a random vector. I think that its norm (and square norm) could be defined meaningfully but probably not <code>N**2</code>.",
  "id": "5b6ef1fa2a8e6c6083ac52f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-11T14:26:02.039Z",
  "text": "It seems that `N` is a random vector. I think that its norm (and square norm) could be defined meaningfully but probably not `N**2`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "Should the class be made independent of <code>RandomSymbol</code>, then? Because <code>RandomSymbol</code> inherits from <code>Expr</code>, and since arithmatic operations shouldn&#39;t be performed on a joint random symbol, it shouldn&#39;t be inheriting from <code>Expr</code>",
  "id": "5b6ef998e9b96f2c98f3e77a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-11T14:58:32.355Z",
  "text": "Should the class be made independent of `RandomSymbol`, then? Because `RandomSymbol` inherits from `Expr`, and since arithmatic operations shouldn't be performed on a joint random symbol, it shouldn't be inheriting from `Expr`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "Or can we simply raise an error in case these operations are performed on it? ",
  "id": "5b6ef9b6a6af14730b1f7f9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-11T14:59:02.846Z",
  "text": "Or can we simply raise an error in case these operations are performed on it? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 30
  },
  "html": "<code>Vector</code> seems to derive from <code>Expr</code>. Maybe this could do so as well. But otherwise I am not sure if this should be a <code>RandomSymbol</code> if there are many methods that only work on scalar random variables.",
  "id": "5b6f0a18b3cbd23ffc2a243c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-11T16:08:56.583Z",
  "text": "`Vector` seems to derive from `Expr`. Maybe this could do so as well. But otherwise I am not sure if this should be a `RandomSymbol` if there are many methods that only work on scalar random variables.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-11T19:03:36.398Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "<blockquote>\n<p>since arithmatic operations shouldn&#39;t be performed on a joint random symbol</p></blockquote>\n<p>Arithmetic operations make sense on random vectors, I would leave this issue open for now, because it might require a lot of work</p>",
  "id": "5b6f3302988005174ec68405",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-11T19:03:30.470Z",
  "text": "> since arithmatic operations shouldn't be performed on a joint random symbol\n\nArithmetic operations make sense on random vectors, I would leave this issue open for now, because it might require a lot of work",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "<code>N</code> is both a random symbol and a vector... SymPy doesn&#39;t have a clear strategy to handle things that are two objects at the same time",
  "id": "5b6f3346179f842c9724e0d0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-11T19:04:38.643Z",
  "text": "`N` is both a random symbol and a vector... SymPy doesn't have a clear strategy to handle things that are two objects at the same time",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "maybe multiple inheritance from <code>sympy.vector</code> or <code>sympy.tensor.array</code>, but I would think twice before doing it",
  "id": "5b6f33735762ee4fe561c3cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-11T19:05:23.272Z",
  "text": "maybe multiple inheritance from `sympy.vector` or `sympy.tensor.array`, but I would think twice before doing it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "I have opened <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"15079\" class=\"issue\">#15079</a> to allow calculation of indexed joint random symbols. But inputs like <code>E[N]</code> would raise a <code>NotImplementedError</code> according to the changes in the PR. Please have a look.",
  "id": "5b6f48d75762ee4fe56238c3",
  "issues": [
   {
    "number": "15079"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-11T20:36:39.441Z",
  "text": "I have opened #15079 to allow calculation of indexed joint random symbols. But inputs like `E[N]` would raise a `NotImplementedError` according to the changes in the PR. Please have a look.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "are you still working on the stochastic processes?",
  "id": "5b750155a3a93d24226f6927",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-16T04:45:09.492Z",
  "text": "are you still working on the stochastic processes?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "Yes, I am. I was once again facing some issues with my computer, so had to take a break. I will send a PR as soon as possible.",
  "id": "5b752a75a37112689c288d24",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-16T07:40:37.385Z",
  "text": "Yes, I am. I was once again facing some issues with my computer, so had to take a break. I will send a PR as soon as possible.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "Or update the existing one.",
  "id": "5b752a82a3a93d242270489d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-16T07:40:50.098Z",
  "text": "Or update the existing one.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "OK",
  "id": "5b756e6849932d4fe4ecfed8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-16T12:30:32.233Z",
  "text": "OK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-19T10:55:51.743Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "Hi. Would it be okay to create <code>RandomProcess</code> using a random distribution as one argument and a <code>Symbol</code> as the other? The distribution could be <code>SingleFiniteDistribution</code>/<code>SingleDiscreteDistribution</code>/<code>SingleContinuousDistribution</code>/<code>JointDistribution</code>, where this would be the distribution of each random variable in the random process? This way, <code>RandomProcess</code> class could also be made equivalent to <code>JointRandomSymbol</code> as suggested <a href=\"https://github.com/sympy/sympy/pull/15058#discussion_r209214251\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a>",
  "id": "5b794c6c59212141248b9e78",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-19T10:54:36.310Z",
  "text": "Hi. Would it be okay to create `RandomProcess` using a random distribution as one argument and a `Symbol` as the other? The distribution could be `SingleFiniteDistribution`/`SingleDiscreteDistribution`/`SingleContinuousDistribution`/`JointDistribution`, where this would be the distribution of each random variable in the random process? This way, `RandomProcess` class could also be made equivalent to `JointRandomSymbol` as suggested [here](https://github.com/sympy/sympy/pull/15058#discussion_r209214251)",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/15058#discussion_r209214251"
   }
  ],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "I would define <code>RandomProcess</code> the same way <code>RandomSymbol</code> is defined",
  "id": "5b795dc8e026575f0f94b711",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-19T12:08:40.280Z",
  "text": "I would define `RandomProcess` the same way `RandomSymbol` is defined",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "the distribution is slightly more complicated, because in general we don&#39;t have the whole distribution of the random process",
  "id": "5b795e01cda86f5fb277df21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-19T12:09:37.426Z",
  "text": "the distribution is slightly more complicated, because in general we don't have the whole distribution of the random process",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Upabjojr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4128856?v=4&s=60",
   "displayName": "Francesco Bonazzi",
   "gv": "4",
   "id": "56e83c9e85d51f252ab8efe1",
   "url": "/Upabjojr",
   "username": "Upabjojr",
   "v": 168
  },
  "html": "the distribution cannot be a <code>Single-</code>family distribution",
  "id": "5b795e2ae026575f0f94b9b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-19T12:10:18.407Z",
  "text": "the distribution cannot be a `Single-`family distribution",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akash9712",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20995294?v=4&s=60",
   "displayName": "Akash Vaish",
   "gv": "4",
   "id": "588704f7d73408ce4f459eb5",
   "url": "/akash9712",
   "username": "akash9712",
   "v": 74
  },
  "html": "Okay. Thanks. ",
  "id": "5b796a1be026575f0f94f6e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-08-19T13:01:15.540Z",
  "text": "Okay. Thanks. ",
  "unread": false,
  "urls": [],
  "v": 1
 }
]