[
 {
  "editedAt": "2016-05-07T13:21:53.656Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<p>As for the comment.</p><blockquote>\n<p>The connection between FreeGroup and FreeGroupElm could also be different. The situation is similar to that in sympy.polys.rings. The class PolyRing has the attribut    e dtype that points to the corresponding PolyElement and also methods for constructing such elements. There is no <strong>new</strong> in PolyElement. The trick is in the use of     type(...)for defining dtype</p></blockquote>\n<p>Currently the internal representation of <code>FreeGroupElm</code> is sparse-representation. How does the elements <code>PolyElement</code> are represented internally?<br>Here is the PR <span data-link-type=\"issue\" data-issue=\"10350\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#10350</span></p>",
  "id": "572debd0f16c0851066189dd",
  "issues": [
   {
    "number": "10350",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-07T13:21:20.475Z",
  "text": "As for the comment.\n> The connection between FreeGroup and FreeGroupElm could also be different. The situation is similar to that in sympy.polys.rings. The class PolyRing has the attribut    e dtype that points to the corresponding PolyElement and also methods for constructing such elements. There is no __new__ in PolyElement. The trick is in the use of     type(...)for defining dtype\n\nCurrently the internal representation of `FreeGroupElm` is sparse-representation. How does the elements `PolyElement` are represented internally?\nHere is the PR [10350](https://github.com/sympy/sympy/pull/10350)",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "<code>PolyElement</code>s are essentially dictionaries. Their keys are monomials and values are the corresponding coefficients. Monomials with coefficient zero are not included. So the zero polynomial is the empty dictionary. This dictionary form is possible since polynomials are commutative. The lack of order does not matter.",
  "id": "572dfbfff9a53a60793c97ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-07T14:30:23.237Z",
  "text": "`PolyElement`s are essentially dictionaries. Their keys are monomials and values are the corresponding coefficients. Monomials with coefficient zero are not included. So the zero polynomial is the empty dictionary. This dictionary form is possible since polynomials are commutative. The lack of order does not matter.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-08T11:43:54.865Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "In addition, each <code>PolyElement</code> knows the ring it belongs to. But that is not an attribute of every  <code>PolyElement</code>. Instead, it is a class attribute. So, in a way, one can think of <code>PolyElement</code>s of different rings as belonging to different classes. The class is created by <code>PolyRing</code> by using the three argument form of Python <code>type</code>.",
  "id": "572f2626a351d8310951eff7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-08T11:42:30.550Z",
  "text": "In addition, each `PolyElement` knows the ring it belongs to. But that is not an attribute of every  `PolyElement`. Instead, it is a class attribute. So, in a way, one can think of `PolyElement`s of different rings as belonging to different classes. The class is created by `PolyRing` by using the three argument form of Python `type`.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "The GSoC coding period starts on the 23rd (two weeks from today). We should decide on a weekly meeting time to meet on this channel and discuss updates. ",
  "id": "5730d51fed393f3409b11cd8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-09T18:21:19.992Z",
  "text": "The GSoC coding period starts on the 23rd (two weeks from today). We should decide on a weekly meeting time to meet on this channel and discuss updates. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "what timezones are you in? I am in Eastern Daylight Time (UTC\u221204:00).",
  "id": "5730d52e3170252648f558ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-09T18:21:34.873Z",
  "text": "what timezones are you in? I am in Eastern Daylight Time (UTC\u221204:00).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-09T18:29:17.752Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Our summer time is UTC+03:00, and in India they have UTC+05:30.",
  "id": "5730d69612fa465406eb42fb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-09T18:27:34.567Z",
  "text": "Our summer time is UTC+03:00, and in India they have UTC+05:30.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-05-10T10:28:02.839Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Should we more inclined towards making <code>FreeGroup</code> similar to the current polynomials module or similar to the way GAP works? sometime ago you asked about <code>f = FreeGroup( 4, &quot;swapnil&quot; )</code> and <code>g = FreeGroup(4, &quot;swapnil&quot; )</code> and i said to return <code>False</code> for <code>f == g</code>, but considering similar thing for polynomial module this does not happen, <code>True</code> is returned.",
  "id": "5731b7a8b51b0e294850c448",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-10T10:27:52.634Z",
  "text": "Should we more inclined towards making `FreeGroup` similar to the current polynomials module or similar to the way GAP works? sometime ago you asked about `f = FreeGroup( 4, \"swapnil\" )` and `g = FreeGroup(4, \"swapnil\" )` and i said to return `False` for `f == g`, but considering similar thing for polynomial module this does not happen, `True` is returned.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I think the same <code>dict</code> structure could be used for <code>FreeGroup</code> as well, instead of using <code>sparse</code> representation.",
  "id": "5731b91e12fa465406eb7e8c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-10T10:34:06.452Z",
  "text": "I think the same `dict` structure could be used for `FreeGroup` as well, instead of using `sparse` representation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Hmm.. I don&#39;t think I have a definite opinion right now. Thinking as a mathematician I would say that two free groups having the same generators should be the same. Perhaps the decision could be postponed.",
  "id": "5731b940f36daf63798e3006",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-10T10:34:40.055Z",
  "text": "Hmm.. I don't think I have a definite opinion right now. Thinking as a mathematician I would say that two free groups having the same generators should be the same. Perhaps the decision could be postponed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "How would you use a <code>dict</code>to represent elements of free groups?",
  "id": "5731b99f3170252648f5953f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-10T10:36:15.875Z",
  "text": "How would you use a `dict`to represent elements of free groups?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Like for {key: value} we will have <code>{nth_generator: its_exponent}</code>.",
  "id": "5731ba0da351d83109528ca4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-10T10:38:05.550Z",
  "text": "Like for {key: value} we will have `{nth_generator: its_exponent}`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Sorry, the order would matter.",
  "id": "5731ba2cf36daf63798e3062",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-10T10:38:36.290Z",
  "text": "Sorry, the order would matter.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "No, that could not be used.",
  "id": "5731ba36ed393f3409b15a8f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-10T10:38:46.594Z",
  "text": "No, that could not be used.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think &#39;words&#39; should be used.",
  "id": "5731ba4f3170252648f59573",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-10T10:39:11.814Z",
  "text": "I think 'words' should be used.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Probably lists when new elements are constructed and tuples for the final result.",
  "id": "5731baa2f36daf63798e3087",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-10T10:40:34.111Z",
  "text": "Probably lists when new elements are constructed and tuples for the final result.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-11T10:01:39.836Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<strong>Current task</strong> As i already mentioned before, we in the process of changing the relation between <code>FreeGroup</code> and <code>FreeGroupElm</code>.<br>The main essence of having this behavior, instead of what is currently done: not to call the <code>FreeGroupElm</code> internally directly?",
  "id": "573302e2f36daf63798e9999",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-11T10:01:06.577Z",
  "text": "**Current task** As i already mentioned before, we in the process of changing the relation between `FreeGroup` and `FreeGroupElm`.\nThe main essence of having this behavior, instead of what is currently done: not to call the `FreeGroupElm` internally directly?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "In <code>rings.py</code> <code>PolyElement</code>s are constructed by <code>PolyRing</code>. The calls are made via <code>dtype</code>. Perhaps something similar could be applied for groups. I&#39;m not very well versed in the details, but it is probably quite efficient as it is the final result of at least three rewrites of the polys module.",
  "id": "57330e2fed393f3409b1c99f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-11T10:49:19.739Z",
  "text": "In `rings.py` `PolyElement`s are constructed by `PolyRing`. The calls are made via `dtype`. Perhaps something similar could be applied for groups. I'm not very well versed in the details, but it is probably quite efficient as it is the final result of at least three rewrites of the polys module.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-11T11:07:07.584Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Also as <code>PolyElement</code> subclasses <code>dict</code> thats how it is able to modify the dictionary of <code>PolyElement</code> starting with <code>zero</code> for Poly. I am trying using the <code>list</code> as the base class for <code>FreeGroupElm</code>.",
  "id": "5733124ef9a53a60793dc933",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-11T11:06:54.137Z",
  "text": "Also as `PolyElement` subclasses `dict` thats how it is able to modify the dictionary of `PolyElement` starting with `zero` for Poly. I am trying using the `list` as the base class for `FreeGroupElm`.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It is puzzling at first sight that <code>PolyElement</code> has no <code>__init__</code>. It appears that it is using the default method of <code>dict</code>.",
  "id": "57331283a351d8310952fc0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-11T11:07:47.021Z",
  "text": "It is puzzling at first sight that `PolyElement` has no `__init__`. It appears that it is using the default method of `dict`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Probably the default <code>list.__init__</code> could be used similarly for <code>FreeGroupElm</code>.",
  "id": "57331318a351d8310952fc3e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-11T11:10:16.815Z",
  "text": "Probably the default `list.__init__` could be used similarly for `FreeGroupElm`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "it&#39;s generally better to subclass one of the classes in collections.abc, rather than list or dict ",
  "id": "573364e3f6f2bcff2b9c4438",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-11T16:59:15.914Z",
  "text": "it's generally better to subclass one of the classes in collections.abc, rather than list or dict ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<p>Though when i subclass <code>FreeGroupElm</code> with both <code>Basic</code> and <code>list</code>, I get the error</p><pre><code><span class=\"prompt\">&gt;&gt;</span>&gt; from sympy.combinatorics.free_group import <span class=\"constant\">FreeGroup</span>\n---------------------------------------------------------------------------\n<span class=\"constant\">TypeError</span>                                 <span class=\"constant\">Traceback</span> (most recent call last)\n&lt;ipython-input-<span class=\"number\">3</span>-<span class=\"number\">35</span>cac5df8605&gt; <span class=\"keyword\">in</span> &lt;<span class=\"class\"><span class=\"keyword\">module</span>&gt;()</span>\n----&gt; <span class=\"number\">1</span> from sympy.combinatorics.free_group import <span class=\"constant\">FreeGroup</span>\n\n/home/gaurav/<span class=\"constant\">Public</span>/sympy/sympy/combinatorics/free_group.py <span class=\"keyword\">in</span> &lt;<span class=\"class\"><span class=\"keyword\">module</span>&gt;()</span>\n    <span class=\"number\">264</span> \n    <span class=\"number\">265</span> \n--&gt; <span class=\"number\">266</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FreeGroupElm</span>(<span class=\"title\">Basic</span>, <span class=\"title\">list</span>):</span>\n    <span class=\"number\">267</span>     <span class=\"string\">\"\"</span><span class=\"string\">\"\n    268     ``FreeGroupElm`` is actually not usable as public import, since it is\n\nTypeError: multiple bases have instance lay-out conflict</span></code></pre><p>Even the stackoverflow gives some advanced explanations on this.</p>",
  "id": "5733682bbad5a8b534f2451b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-11T17:13:15.038Z",
  "text": "Though when i subclass `FreeGroupElm` with both `Basic` and `list`, I get the error\n```\n>>> from sympy.combinatorics.free_group import FreeGroup\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-3-35cac5df8605> in <module>()\n----> 1 from sympy.combinatorics.free_group import FreeGroup\n\n/home/gaurav/Public/sympy/sympy/combinatorics/free_group.py in <module>()\n    264 \n    265 \n--> 266 class FreeGroupElm(Basic, list):\n    267     \"\"\"\n    268     ``FreeGroupElm`` is actually not usable as public import, since it is\n\nTypeError: multiple bases have instance lay-out conflict\n```\nEven the stackoverflow gives some advanced explanations on this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "yeah, it has to do with metaclasses ",
  "id": "573368527d20ec916257349e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-11T17:13:54.988Z",
  "text": "yeah, it has to do with metaclasses ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "does it work to subclass from <code>collections.abc.Sequence</code>?",
  "id": "5733695f2b8be74d22905c60",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-11T17:18:23.376Z",
  "text": "does it work to subclass from `collections.abc.Sequence`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "FWIW, <code>list</code> is mutable and <code>Basic</code> isn&#39;t, so that&#39;s already an issue ",
  "id": "573369722b8be74d22905c63",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-11T17:18:42.932Z",
  "text": "FWIW, `list` is mutable and `Basic` isn't, so that's already an issue ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "no, I guess <code>collections.abc.Sequence</code> gives the same error  ",
  "id": "573369a07d20ec91625734b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-11T17:19:28.696Z",
  "text": "no, I guess `collections.abc.Sequence` gives the same error  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "It doesn&#39;t work with <code>Sequence</code> either.<pre><code>TypeError: metaclass conflict: <span class=\"keyword\">the</span> metaclass <span class=\"keyword\">of</span> a derived <span class=\"type\">class</span> must be a (non-strict) subclass <span class=\"keyword\">of</span> <span class=\"keyword\">the</span> metaclasses <span class=\"keyword\">of</span> all <span class=\"keyword\">its</span> bases</code></pre>",
  "id": "573369a675a64b453292a864",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-11T17:19:34.197Z",
  "text": "It doesn't work with `Sequence` either.\n```\nTypeError: metaclass conflict: the metaclass of a derived class must be a (non-strict) subclass of the metaclasses of all its bases\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-11T18:00:27.896Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<p>For jksuom&#39;s comment</p><blockquote>\n<p>It is puzzling at first sight that PolyElement has no <strong>init</strong>. It appears that it is using the default method of dict</p></blockquote>\n<pre><code>&gt;&gt;&gt; r = <span class=\"function\"><span class=\"title\">PolyRing</span><span class=\"params\">(<span class=\"string\">\"x y z\"</span>, ZZ)</span></span>\n&gt;&gt;&gt; <span class=\"function\"><span class=\"title\">srepr</span><span class=\"params\">(r.zero)</span></span>\n<span class=\"string\">\"PolyElement(PolyRing((Symbol('x'), Symbol('y'), Symbol('z')), ZZ, lex), [])\"</span></code></pre><p>I couldn&#39;t see from where the last <code>[]</code> appear in <code>srepr</code> notation. If <code>PolyElement</code> is using <code>__init__</code> of <code>dict</code> then isn&#39;t <code>PolyElement</code> (or <code>r.dtype</code>) supposed to have at most 1 argument?</p>",
  "id": "57337324a410e6902ab2b495",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-11T18:00:04.386Z",
  "text": "For jksuom's comment\n> It is puzzling at first sight that PolyElement has no __init__. It appears that it is using the default method of dict\n\n```\n>>> r = PolyRing(\"x y z\", ZZ)\n>>> srepr(r.zero)\n\"PolyElement(PolyRing((Symbol('x'), Symbol('y'), Symbol('z')), ZZ, lex), [])\"\n```\nI couldn't see from where the last `[]` appear in `srepr` notation. If `PolyElement` is using `__init__` of `dict` then isn't `PolyElement` (or `r.dtype`) supposed to have at most 1 argument?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I meant trying to recreate <code>PolyElement</code> from the result of <code>srepr</code> gives error<pre><code>&gt;&gt;&gt; <span class=\"function\"><span class=\"title\">PolyElement</span><span class=\"params\">(PolyRing((Symbol(<span class=\"string\">'x'</span>)</span></span>, <span class=\"function\"><span class=\"title\">Symbol</span><span class=\"params\">(<span class=\"string\">'y'</span>)</span></span>, <span class=\"function\"><span class=\"title\">Symbol</span><span class=\"params\">(<span class=\"string\">'z'</span>)</span></span>), ZZ, lex), [])\nTypeError: dict expected at most <span class=\"number\">1</span> arguments, got <span class=\"number\">2</span></code></pre>",
  "id": "5733737f1254a7206adb06c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-11T18:01:35.955Z",
  "text": "I meant trying to recreate `PolyElement` from the result of `srepr` gives error\n```\n>>> PolyElement(PolyRing((Symbol('x'), Symbol('y'), Symbol('z')), ZZ, lex), [])\nTypeError: dict expected at most 1 arguments, got 2\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "if you want something sequence like, just define the proper <code>__</code> methods",
  "id": "573373a17d20ec9162573519",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-11T18:02:09.049Z",
  "text": "if you want something sequence like, just define the proper `__` methods",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-11T18:22:23.720Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "One argument for <code>dict</code> (apart for <code>kwargs</code>) is enough when it is an iterable such as a list (or a mapping, i.e. a dictionary).",
  "id": "5733785175a64b453292ae62",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-11T18:22:09.430Z",
  "text": "One argument for `dict` (apart for `kwargs`) is enough when it is an iterable such as a list (or a mapping, i.e. a dictionary).",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-05-11T18:48:10.419Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Polynomials, neither dense (<code>DMP</code>) nor sparse (<code>PolyElement</code>), do not belong to the <code>Basic</code> class. <code>srepr</code> is not intended for their recreation.",
  "id": "57337e113a05b11b6a4c075e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-11T18:46:41.913Z",
  "text": "Polynomials, neither dense (`DMP`) nor sparse (`PolyElement`), do not belong to the `Basic` class. `srepr` is not intended for their recreation.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have made some changes, the documentation is currently not up to date with how things work now.<br>The basic idea: use the <code>list</code> of <code>f.identity</code> for each <code>free group</code> f.<br>Changes in methods (i made changes in some only) are still to be made. I will write some tests so that we could make sure things work good.",
  "id": "57341fc37e1f32942aa69726",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T06:16:35.886Z",
  "text": "I have made some changes, the documentation is currently not up to date with how things work now.\nThe basic idea: use the `list` of `f.identity` for each `free group` f.\nChanges in methods (i made changes in some only) are still to be made. I will write some tests so that we could make sure things work good.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "As for the timings, my time of working and Aaron&#39;s time of working, don&#39;t have much intersection, as I could see. Will Ondrej share the clock (link to some website, last year he did that) for matching the different time zones? So that we could mark the timings we tend to work.",
  "id": "573420597e1f32942aa69745",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T06:19:05.965Z",
  "text": "As for the timings, my time of working and Aaron's time of working, don't have much intersection, as I could see. Will Ondrej share the clock (link to some website, last year he did that) for matching the different time zones? So that we could mark the timings we tend to work.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "What do you mean by &quot;<code>list</code> of <code>f.identity</code>&quot;? ",
  "id": "57344e28bad5a8b534f2839c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T09:34:32.671Z",
  "text": "What do you mean by \"`list` of `f.identity`\"? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<p>You mentioned</p><blockquote>\n<p>Probably the default list.<strong>init</strong> could be used similarly for FreeGroupElm</p></blockquote>\n<p>This is used here. Like on <a href=\"https://github.com/sympy/sympy/pull/10350/files#diff-c461d9fa5812c70f38a78e7780961fb2R438\" rel=\"nofollow\" target=\"_blank\" class=\"link\">this like of <code>__mul__</code></a> it makes use of initialized <code>list</code> of the &quot;identity element&quot; and further extends it to return new elements.</p>",
  "id": "5734500fbad5a8b534f2843e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T09:42:39.284Z",
  "text": "You mentioned\n> Probably the default list.__init__ could be used similarly for FreeGroupElm\n\nThis is used here. Like on [this like of `__mul__`](https://github.com/sympy/sympy/pull/10350/files#diff-c461d9fa5812c70f38a78e7780961fb2R438) it makes use of initialized `list` of the \"identity element\" and further extends it to return new elements.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/10350/files#diff-c461d9fa5812c70f38a78e7780961fb2R438"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Does that mean that the elements would be mutable?",
  "id": "573450de1254a7206adb3ff4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T09:46:06.675Z",
  "text": "Does that mean that the elements would be mutable?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, they would be mutable.",
  "id": "573451f77df8adaf347da1c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T09:50:47.015Z",
  "text": "Yes, they would be mutable.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Extending the identity seems dangerous. Would it be possible to start with a new empty list and then extend that?",
  "id": "573452027df8adaf347da1c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T09:50:58.597Z",
  "text": "Extending the identity seems dangerous. Would it be possible to start with a new empty list and then extend that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The final product could then be <code>group.dtype(list)</code>.",
  "id": "573452691254a7206adb406f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T09:52:41.473Z",
  "text": "The final product could then be `group.dtype(list)`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "That would be nice. That seems to work as well.",
  "id": "5734535b75a64b453292e832",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T09:56:43.795Z",
  "text": "That would be nice. That seems to work as well.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Similarly, the generators could be defined by <code>dtype([(i, 1)])</code> on <a href=\"https://github.com/sympy/sympy/pull/10350/files#diff-c461d9fa5812c70f38a78e7780961fb2R120\" rel=\"nofollow\" target=\"_blank\" class=\"link\">this line</a>.",
  "id": "573453da7df8adaf347da26b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T09:58:50.665Z",
  "text": "Similarly, the generators could be defined by `dtype([(i, 1)])` on [this line](https://github.com/sympy/sympy/pull/10350/files#diff-c461d9fa5812c70f38a78e7780961fb2R120).",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/10350/files#diff-c461d9fa5812c70f38a78e7780961fb2R120"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "BTW Isn&#39;t the same (i.e extending the dictionary, which you called dangerous) happening in <code>PolyElement</code>? On <a href=\"https://github.com/sympy/sympy/blob/master/sympy/polys/rings.py#L1141\" rel=\"nofollow\" target=\"_blank\" class=\"link\">this line of rings.py</a>.",
  "id": "5734540a7e1f32942aa6a7f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T09:59:38.375Z",
  "text": "BTW Isn't the same (i.e extending the dictionary, which you called dangerous) happening in `PolyElement`? On [this line of rings.py](https://github.com/sympy/sympy/blob/master/sympy/polys/rings.py#L1141).",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/master/sympy/polys/rings.py#L1141"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2016-05-12T10:00:57.068Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Or may be it is doing something more with <code>monomial_pow</code>.",
  "id": "573454531254a7206adb4120",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T10:00:51.372Z",
  "text": "Or may be it is doing something more with `monomial_pow`.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-05-12T10:07:32.745Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That seems to work. Apparently a new copy of <code>ring.zero</code> is created. I was afraid that there would be a fixed copy of <code>group.identity</code>.",
  "id": "573454c91254a7206adb413f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T10:02:49.925Z",
  "text": "That seems to work. Apparently a new copy of `ring.zero` is created. I was afraid that there would be a fixed copy of `group.identity`.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I would like to think of the group elements as immutable.",
  "id": "573455003a05b11b6a4c3d8d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T10:03:44.445Z",
  "text": "I would like to think of the group elements as immutable.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "But one can always take a local copy of the data and operate on that.",
  "id": "57345526bad5a8b534f285d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T10:04:22.634Z",
  "text": "But one can always take a local copy of the data and operate on that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "There is the method <code>def zero(self)</code>. It always makes a new copy. Another trick!",
  "id": "573456461254a7206adb41a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T10:09:10.707Z",
  "text": "There is the method `def zero(self)`. It always makes a new copy. Another trick!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, i saw this property&#39;s functionality. I found the use of <code>type</code> function (with 3 arguments) very new, even the subclassing itself in <code>dtype</code> is interesting.",
  "id": "573456fd75a64b453292e95c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T10:12:13.332Z",
  "text": "Yes, i saw this property's functionality. I found the use of `type` function (with 3 arguments) very new, even the subclassing itself in `dtype` is interesting.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "BTW i also did the same thing (similar to <code>zero</code>) of using <code>def identity(self): return self.dtype()</code>, did you missed it? Or there was still some problem with that?",
  "id": "573457a975a64b453292e990",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T10:15:05.298Z",
  "text": "BTW i also did the same thing (similar to `zero`) of using `def identity(self): return self.dtype()`, did you missed it? Or there was still some problem with that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I missed that. It would probably save the situation. It could then be possible to extend the copy. It would be interesting to see which one of the two methods is more efficient, or is there any difference at all.",
  "id": "573459193a05b11b6a4c3ebf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T10:21:13.698Z",
  "text": "I missed that. It would probably save the situation. It could then be possible to extend the copy. It would be interesting to see which one of the two methods is more efficient, or is there any difference at all.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "On the formal side, there is the difference that extending the identity would hide the <code>dtype</code> call.",
  "id": "5734596f3a05b11b6a4c3edb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T10:22:39.194Z",
  "text": "On the formal side, there is the difference that extending the identity would hide the `dtype` call.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "On the other hand, it would not be possible to make the elements immutable, if that would be desired later.",
  "id": "573459aba410e6902ab2f1be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T10:23:39.607Z",
  "text": "On the other hand, it would not be possible to make the elements immutable, if that would be desired later.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "For example, it they should be made <code>Basic</code>.",
  "id": "573459da7df8adaf347da440",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T10:24:26.864Z",
  "text": "For example, it they should be made `Basic`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "But, at the moment, I don&#39;t see that as necessary.",
  "id": "57345a001254a7206adb42ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T10:25:04.154Z",
  "text": "But, at the moment, I don't see that as necessary.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "<code>PolyElements</code> are not <code>Basic</code>.",
  "id": "57345a263a05b11b6a4c3f05",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T10:25:42.062Z",
  "text": "`PolyElements` are not `Basic`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Maybe Aaron could add some light to this.",
  "id": "57345a3cbce0284832d9df80",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T10:26:04.555Z",
  "text": "Maybe Aaron could add some light to this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-12T10:26:25.545Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "As a mathematician: I don&#39;t think we should care, whether it is mutable or not.<br>As with knowledge of programming: I think we should make them immutable.",
  "id": "57345a4575a64b453292ea57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T10:26:13.150Z",
  "text": "As a mathematician: I don't think we should care, whether it is mutable or not.\nAs with knowledge of programming: I think we should make them immutable.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I agree :-)",
  "id": "57345a6c7df8adaf347da461",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T10:26:52.258Z",
  "text": "I agree :-)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "One additional point: the elements could perhaps be tuples instead of lists. They are probably more efficient as there is no &#39;housekeeping&#39; overhead.",
  "id": "57345b1ebce0284832d9dfc4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T10:29:50.459Z",
  "text": "One additional point: the elements could perhaps be tuples instead of lists. They are probably more efficient as there is no 'housekeeping' overhead.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Of course the extension method could then not be used.",
  "id": "57345b6a7e1f32942aa6aa00",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T10:31:06.631Z",
  "text": "Of course the extension method could then not be used.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "the polys are not Basic for performance purposes ",
  "id": "5734a799feb8cb327ee1d38d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T15:56:09.911Z",
  "text": "the polys are not Basic for performance purposes ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "not being Basic means it would be usable directly by other parts of sympy (can&#39;t be in <code>.args</code>), and also that you don&#39;t get any of the usual methods of Basic, like <code>subs</code> ",
  "id": "5734a7d7feb8cb327ee1d394",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T15:57:11.797Z",
  "text": "not being Basic means it would be usable directly by other parts of sympy (can't be in `.args`), and also that you don't get any of the usual methods of Basic, like `subs` ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I believe it would be possible to define <code>FreeGroupElm</code>s that are not <code>Basic</code>. Would it be a bad thing?",
  "id": "5734aa73831fd2d97d9dd70f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:08:19.422Z",
  "text": "I believe it would be possible to define `FreeGroupElm`s that are not `Basic`. Would it be a bad thing?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I think you should either use Basic stuff everywhere, or don&#39;t use it at all ",
  "id": "5734aa9c2867f61b7b26a4af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:09:00.669Z",
  "text": "I think you should either use Basic stuff everywhere, or don't use it at all ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "you can&#39;t mix and match, because Basic objects have to have Basic objects in their <code>.args</code> ",
  "id": "5734aab12867f61b7b26a4b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:09:21.358Z",
  "text": "you can't mix and match, because Basic objects have to have Basic objects in their `.args` ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Everywhere? I thought we could have <code>GroupSymbol</code>s that would be a subclass of <code>Symbol</code>.",
  "id": "5734aae9831fd2d97d9dd735",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:10:17.433Z",
  "text": "Everywhere? I thought we could have `GroupSymbol`s that would be a subclass of `Symbol`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "what would that represent? ",
  "id": "5734ab02feb8cb327ee1d3d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:10:42.402Z",
  "text": "what would that represent? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "They would be used to construct &#39;group element expressions&#39;.",
  "id": "5734ab25e2996a5a42c7c5cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:11:17.958Z",
  "text": "They would be used to construct 'group element expressions'.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "oh I see",
  "id": "5734ab390f07acdc7a041726",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:11:37.560Z",
  "text": "oh I see",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "like for free groups ",
  "id": "5734ab400f07acdc7a041727",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:11:44.442Z",
  "text": "like for free groups ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "so what is FreeGroupElm? Is that supposed to be for internal use? ",
  "id": "5734ab5cfeb8cb327ee1d3dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:12:12.439Z",
  "text": "so what is FreeGroupElm? Is that supposed to be for internal use? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The group <code>G</code> would know how to translate them to actual elements. E.g. <code>G(expr)</code>.",
  "id": "5734ab62eea93e5742d14a22",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:12:18.027Z",
  "text": "The group `G` would know how to translate them to actual elements. E.g. `G(expr)`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think the element could be for internal use.",
  "id": "5734ab78831fd2d97d9dd76d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:12:40.397Z",
  "text": "I think the element could be for internal use.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "But it could be printed.",
  "id": "5734ab82eea93e5742d14a2c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:12:50.700Z",
  "text": "But it could be printed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Only one should not expect it could be reconstructed directly from its srepr.",
  "id": "5734aba364dbdadc7deb72bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:13:23.214Z",
  "text": "Only one should not expect it could be reconstructed directly from its srepr.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Why is FreeGroupElm not Basic?",
  "id": "5734abaf0f07acdc7a041736",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:13:35.357Z",
  "text": "Why is FreeGroupElm not Basic?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Well, it could be.",
  "id": "5734abcdae26c1967f9dd9ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:14:05.040Z",
  "text": "Well, it could be.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That is something I&#39;m trying to find out..",
  "id": "5734abdd831fd2d97d9dd79c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:14:21.623Z",
  "text": "That is something I'm trying to find out..",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "what is the representation for it?",
  "id": "5734abe78b845b284193e4d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:14:31.371Z",
  "text": "what is the representation for it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Gaurav has thought it as a list.",
  "id": "5734ac000cb634927f7e40c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:14:56.761Z",
  "text": "Gaurav has thought it as a list.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "But I think a tuple (or Tuple?) could be possible as well.",
  "id": "5734ac1aae26c1967f9dd9e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:15:22.978Z",
  "text": "But I think a tuple (or Tuple?) could be possible as well.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "like a list of tuples?",
  "id": "5734ac1f8b845b284193e4db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:15:27.131Z",
  "text": "like a list of tuples?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "of (elem, power)",
  "id": "5734ac27feb8cb327ee1d3ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:15:35.563Z",
  "text": "of (elem, power)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Yes. Yes.",
  "id": "5734ac2eae26c1967f9dd9f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:15:42.376Z",
  "text": "Yes. Yes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "that could be <code>FreeGroupElem((elem, power), (elem, power), ...)</code>",
  "id": "5734ac49feb8cb327ee1d3f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:16:09.728Z",
  "text": "that could be `FreeGroupElem((elem, power), (elem, power), ...)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "and then <code>FreeGroupElem.args</code> would be <code>((elem, power), (elem, power), ...)</code>",
  "id": "5734ac5e8b845b284193e4e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:16:30.693Z",
  "text": "and then `FreeGroupElem.args` would be `((elem, power), (elem, power), ...)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "In order to construct from srepr?",
  "id": "5734ac67eea93e5742d14a95",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:16:39.661Z",
  "text": "In order to construct from srepr?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "or maybe there could be a separate class for each <code>(elem, power)</code> pair",
  "id": "5734ac758b845b284193e4e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:16:53.438Z",
  "text": "or maybe there could be a separate class for each `(elem, power)` pair",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "otherwise it would use <code>Tuple</code> ",
  "id": "5734ac790f07acdc7a041748",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:16:57.385Z",
  "text": "otherwise it would use `Tuple` ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The question is, is it useful to make it <code>Basic</code>.",
  "id": "5734aca7e2996a5a42c7c66a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:17:43.959Z",
  "text": "The question is, is it useful to make it `Basic`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "here <code>elem</code> is just an integer index, right? ",
  "id": "5734acb12867f61b7b26a4d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:17:53.123Z",
  "text": "here `elem` is just an integer index, right? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It could be something more general too.",
  "id": "5734acd0e2996a5a42c7c67d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:18:24.098Z",
  "text": "It could be something more general too.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "In any case, it will take a whole machine word.",
  "id": "5734ace81794136a7d080a7a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:18:48.629Z",
  "text": "In any case, it will take a whole machine word.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "if <code>elem</code> is GroupSymbol, then you could use <code>Pow</code> itself ",
  "id": "5734acf10f07acdc7a04174b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:18:57.882Z",
  "text": "if `elem` is GroupSymbol, then you could use `Pow` itself ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I think if you want a fast, internal representation, you shouldn&#39;t worry about Basic",
  "id": "5734ad140f07acdc7a04174f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:19:32.837Z",
  "text": "I think if you want a fast, internal representation, you shouldn't worry about Basic",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "because that will limit your data structures ",
  "id": "5734ad1c8b845b284193e4eb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:19:40.186Z",
  "text": "because that will limit your data structures ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Yes. It could be used in the construction of the &#39;group  expressions&#39;.",
  "id": "5734ad210cb634927f7e4144",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:19:45.997Z",
  "text": "Yes. It could be used in the construction of the 'group  expressions'.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "but from the user-side, Basic objects are easier to work with ",
  "id": "5734ad302867f61b7b26a4d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:20:00.297Z",
  "text": "but from the user-side, Basic objects are easier to work with ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That is true.",
  "id": "5734ad47eea93e5742d14ae8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:20:23.566Z",
  "text": "That is true.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "But maybe the &#39;expressions&#39; would suffice.",
  "id": "5734ad5beea93e5742d14aed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:20:43.917Z",
  "text": "But maybe the 'expressions' would suffice.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "for the user.",
  "id": "5734ad69c61823687d3b41b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:20:57.136Z",
  "text": "for the user.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "if you look at how the polys work, all the algorithms work in the polys ",
  "id": "5734ad6dfeb8cb327ee1d402",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:21:01.552Z",
  "text": "if you look at how the polys work, all the algorithms work in the polys ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "but the user-level functions work on sympy expressions. They convert to polys and then back ",
  "id": "5734ad7c2867f61b7b26a4de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:21:16.441Z",
  "text": "but the user-level functions work on sympy expressions. They convert to polys and then back ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That is more or less what I have had in mind.",
  "id": "5734ad9164dbdadc7deb7379",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-12T16:21:37.615Z",
  "text": "That is more or less what I have had in mind.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Hence the noncommutative <code>GroupSymbol</code>s.",
  "id": "5734adab831fd2d97d9dd84d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-12T16:22:03.635Z",
  "text": "Hence the noncommutative `GroupSymbol`s.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-12T16:23:48.345Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "At this point, it is perhaps best to leave the options open.",
  "id": "5734ae0bc61823687d3b41fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-12T16:23:39.632Z",
  "text": "At this point, it is perhaps best to leave the options open.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Gaurav, have you experimented with noncommutative symbols? Would it be easy to use sympy.core to handle expressions for group element?",
  "id": "5734aec51794136a7d080b35",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-12T16:26:45.909Z",
  "text": "Gaurav, have you experimented with noncommutative symbols? Would it be easy to use sympy.core to handle expressions for group element?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Do <code>Mul</code> and <code>Pow</code> behave well wrt such symbols?",
  "id": "5734af0bae26c1967f9ddb31",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-12T16:27:55.150Z",
  "text": "Do `Mul` and `Pow` behave well wrt such symbols?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "in some sense <code>Symbol(commutative=False)</code> already does everything you&#39;d want a GroupSymbol to do ",
  "id": "5734b25f0f07acdc7a041795",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-12T16:42:07.331Z",
  "text": "in some sense `Symbol(commutative=False)` already does everything you'd want a GroupSymbol to do ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That would be helpful.",
  "id": "5734b41c831fd2d97d9ddaab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-12T16:49:32.618Z",
  "text": "That would be helpful.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "But still, a subclass might be a reasonable solution.",
  "id": "5734b434eea93e5742d14db5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-12T16:49:56.831Z",
  "text": "But still, a subclass might be a reasonable solution.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I&#39;ve been thinking of the user interface a bit more extensively. Maybe the same idea would work that is used in <code>rings</code>. Namely, <code>FreeGroup</code> would have a single interface that could be a sequence of <code>Symbol</code>s. There would be global wrapper functions like <code>free_group</code> that would form the actual user interface. Its argument could be a string that would be fed to <code>symbols</code> to produce the arguments for calling <code>FreeGroup</code>.  It would return <code>group, gens</code> where <code>gens</code> is the sequence of generators. This way there would be no need for string arguments for <code>FreeGroup</code>.",
  "id": "57355ef1831fd2d97d9e0694",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-13T04:58:25.904Z",
  "text": "I've been thinking of the user interface a bit more extensively. Maybe the same idea would work that is used in `rings`. Namely, `FreeGroup` would have a single interface that could be a sequence of `Symbol`s. There would be global wrapper functions like `free_group` that would form the actual user interface. Its argument could be a string that would be fed to `symbols` to produce the arguments for calling `FreeGroup`.  It would return `group, gens` where `gens` is the sequence of generators. This way there would be no need for string arguments for `FreeGroup`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-13T05:13:51.368Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<p>Then there will be no inclusion of <code>rank</code> as an argument, i.e the 1st and 2nd API would be removed.<br>Dealing with <code>FreeGroup</code>s of infinite size will have some problem may be, or that can be a special case<br>From GAP documentation</p><blockquote>\n<p>Called  in  the  fourth form, FreeGroup returns a free group on infinitely many generators, where the first generators are printed by the names in the list init, and the other generators by name and an appended number.</p></blockquote>\n",
  "id": "573562680cb634927f7e708a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-13T05:13:12.046Z",
  "text": "Then there will be no inclusion of `rank` as an argument, i.e the 1st and 2nd API would be removed.\nDealing with `FreeGroup`s of infinite size will have some problem may be, or that can be a special case\nFrom GAP documentation\n> Called  in  the  fourth form, FreeGroup returns a free group on infinitely many generators, where the first generators are printed by the names in the list init, and the other generators by name and an appended number.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Groups with infinitely many generators (if they would become necessary) should probably be implemented separately. For example, <code>gens</code>  could not be a list. Perhaps we need not worry about that at this point.",
  "id": "57356ea60cb634927f7e728b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-13T06:05:26.496Z",
  "text": "Groups with infinitely many generators (if they would become necessary) should probably be implemented separately. For example, `gens`  could not be a list. Perhaps we need not worry about that at this point.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "BTW, did you think of the <code>abc</code> issue. I hope that module could be avoided.",
  "id": "57356f5a64dbdadc7deba3cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-13T06:08:26.641Z",
  "text": "BTW, did you think of the `abc` issue. I hope that module could be avoided.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-13T06:10:29.790Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, thats &quot;currently&quot; useless import. Aaron mentioned to use <code>collections</code> (like <code>Sequence</code> etc. ) instead of <code>list</code>/<code>tuples</code> to <code>subclass</code> from for the <code>FreeGroupElm</code>. If we want to use <code>list</code>/<code>tuple</code>",
  "id": "57356fb61794136a7d083c03",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-13T06:09:58.096Z",
  "text": "Yes, thats \"currently\" useless import. Aaron mentioned to use `collections` (like `Sequence` etc. ) instead of `list`/`tuples` to `subclass` from for the `FreeGroupElm`. If we want to use `list`/`tuple`",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Perhaps the functionality could be added in some other way without importing <code>abc</code>, if that would turn out necessary. But now it probably could be just omitted. ",
  "id": "57357089e2996a5a42c7f6c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-13T06:13:29.142Z",
  "text": "Perhaps the functionality could be added in some other way without importing `abc`, if that would turn out necessary. But now it probably could be just omitted. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It is a problem as long as we want to support Python 2.7.",
  "id": "573570ae64dbdadc7deba411",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-13T06:14:06.830Z",
  "text": "It is a problem as long as we want to support Python 2.7.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "So what i will currently do is: <ol>\n<li>Try to make a <code>FreeGroupElm</code> a subclass of <code>tuple</code>/<code>Tuples</code>.</li>\n<li>Change the API of <code>FreeGroup</code> to <code>symbols</code>. (with <code>free_group</code> as the facing the interface , as you explained above).</li>\n</ol>\n",
  "id": "57357160ae26c1967f9e0cf5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-13T06:17:04.669Z",
  "text": "So what i will currently do is: \n1. Try to make a `FreeGroupElm` a subclass of `tuple`/`Tuples`.\n2. Change the API of `FreeGroup` to `symbols`. (with `free_group` as the facing the interface , as you explained above).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I mentioned <code>Tuple</code> to preserve the possibility of making <code>FreeGroupElm</code> <code>Basic</code>, but maybe that will not be necessary. It seems that those elements could be handled as well without sympifying them.",
  "id": "5735722cae26c1967f9e0d1b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-13T06:20:28.652Z",
  "text": "I mentioned `Tuple` to preserve the possibility of making `FreeGroupElm` `Basic`, but maybe that will not be necessary. It seems that those elements could be handled as well without sympifying them.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Perhaps that could be an option for later use.",
  "id": "573572520cb634927f7e7337",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-13T06:21:06.204Z",
  "text": "Perhaps that could be an option for later use.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "But now I believe they could be just <code>tuple</code>s.",
  "id": "5735727364dbdadc7deba45d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-13T06:21:39.160Z",
  "text": "But now I believe they could be just `tuple`s.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-13T06:22:54.945Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "There should be a printer, but it should not be necessary to make <code>srepr</code> useful for recreating the element.",
  "id": "573572b8c61823687d3b730b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-13T06:22:48.250Z",
  "text": "There should be a printer, but it should not be necessary to make `srepr` useful for recreating the element.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "So 1 and 2 above seem good plans to me.",
  "id": "573572e664dbdadc7deba47b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-13T06:23:34.691Z",
  "text": "So 1 and 2 above seem good plans to me.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Looks good. I&#39;ll have to spend some more time playing with examples.",
  "id": "5735d1550cb634927f7e8e4b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-13T13:06:29.963Z",
  "text": "Looks good. I'll have to spend some more time playing with examples.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I didn&#39;t ping you, since i know a few things that definitely needs to be improved.",
  "id": "5735fc03e2996a5a42c82277",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-13T16:08:35.953Z",
  "text": "I didn't ping you, since i know a few things that definitely needs to be improved.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Things like the <code>__mul__</code> or <code>__pow__</code> of <code>FreeGroupElm</code> can be improved. Currently for <code>(f[0]*f[1]*f[2]*f[3])**3</code> is returned in an expanded form, which is not the best way to do. Probably the use of some different representation of <code>FreeGroupElm</code> should be used to improve it.",
  "id": "5735fca364dbdadc7debd1f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-13T16:11:15.779Z",
  "text": "Things like the `__mul__` or `__pow__` of `FreeGroupElm` can be improved. Currently for `(f[0]*f[1]*f[2]*f[3])**3` is returned in an expanded form, which is not the best way to do. Probably the use of some different representation of `FreeGroupElm` should be used to improve it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Maybe it is not important at this point how the elements are printed, if that is what you mean.",
  "id": "5735fe40e2996a5a42c82336",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-13T16:18:08.168Z",
  "text": "Maybe it is not important at this point how the elements are printed, if that is what you mean.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-14T03:02:47.842Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have now introduced (some of) the printing for the <code>FreeGroupElm</code>, though I will come back to my previous point. I am not sure that point will be directly related to printing.",
  "id": "573693981794136a7d088ddd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-14T02:55:20.706Z",
  "text": "I have now introduced (some of) the printing for the `FreeGroupElm`, though I will come back to my previous point. I am not sure that point will be directly related to printing.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I have to edit out the <code>abc</code> line, since I&#39;m testing with 2.7. It would be easier if that could be dropped altogether :).",
  "id": "5736b829ae26c1967f9e6239",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-14T05:31:21.397Z",
  "text": "I have to edit out the `abc` line, since I'm testing with 2.7. It would be easier if that could be dropped altogether :).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay, i will push that now, with removed import.",
  "id": "5736b85ae2996a5a42c849ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-14T05:32:10.492Z",
  "text": "Okay, i will push that now, with removed import.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "There is no hurry. I can always edit.",
  "id": "5736b8830cb634927f7ec8b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-14T05:32:51.540Z",
  "text": "There is no hurry. I can always edit.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The representation of group elements is rather cryptic. What would you say of the following ideas. <code>FreeGroup</code> now knows the names of generators. If the tuples <code>(index, exp)</code> forming the &#39;syllables&#39; of the group element words were replaced with <code>(symbol, exp)</code>,  it would be possible to print the word in a readable form. Even in two forms, the standard expression type form <code>a*b**-1</code> (for <code>srepr</code>) that might be usable for recreating the element and the &#39;readable&#39; form <code>ab^-1</code> (for <code>str</code>). ",
  "id": "5736bd2fc61823687d3bc901",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-14T05:52:47.214Z",
  "text": "The representation of group elements is rather cryptic. What would you say of the following ideas. `FreeGroup` now knows the names of generators. If the tuples `(index, exp)` forming the 'syllables' of the group element words were replaced with `(symbol, exp)`,  it would be possible to print the word in a readable form. Even in two forms, the standard expression type form `a*b**-1` (for `srepr`) that might be usable for recreating the element and the 'readable' form `ab^-1` (for `str`). ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have tried to make some changes in the documentation, though still some issues are there (especially the printing issues).",
  "id": "5736effb1794136a7d089800",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-14T09:29:31.708Z",
  "text": "I have tried to make some changes in the documentation, though still some issues are there (especially the printing issues).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "More specifically?",
  "id": "5736f028ae26c1967f9e689e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-14T09:30:16.523Z",
  "text": "More specifically?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Failing doctests?",
  "id": "5736f05a1794136a7d089810",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-14T09:31:06.162Z",
  "text": "Failing doctests?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Like this<pre><code>Failed example:\n    w.eliminate_word( x, x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2 )\nExpected:\n    x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>10<span class=\"keyword\">*</span>y<span class=\"keyword\">*</span>x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>4<span class=\"keyword\">*</span>y<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-4<span class=\"keyword\">*</span>x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2\nGot:\n    ((x, 10), (y, 1), (x, 4), (y, -4), (x, 2))</code></pre>",
  "id": "5736f05eeea93e5742d1d462",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-14T09:31:10.976Z",
  "text": "Like this\n```\nFailed example:\n    w.eliminate_word( x, x**2 )\nExpected:\n    x**10*y*x**4*y**-4*x**2\nGot:\n    ((x, 10), (y, 1), (x, 4), (y, -4), (x, 2))\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, the failing doctests",
  "id": "5736f0651794136a7d089812",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-14T09:31:17.201Z",
  "text": "Yes, the failing doctests",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Looks like the array form.",
  "id": "5736f0f40cb634927f7ecf97",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-14T09:33:40.110Z",
  "text": "Looks like the array form.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Is it <a href=\"https://github.com/sympy/sympy/pull/10350/files#diff-c461d9fa5812c70f38a78e7780961fb2R360\" rel=\"nofollow\" target=\"_blank\" class=\"link\">this</a>?",
  "id": "5736f14364dbdadc7dec0139",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-14T09:34:59.784Z",
  "text": "Is it [this](https://github.com/sympy/sympy/pull/10350/files#diff-c461d9fa5812c70f38a78e7780961fb2R360)?",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/10350/files#diff-c461d9fa5812c70f38a78e7780961fb2R360"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "No, I don&#39;t think so. I am seeing whats the issue",
  "id": "5736f1dbeea93e5742d1d49a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-14T09:37:31.515Z",
  "text": "No, I don't think so. I am seeing whats the issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have got two fears to share:<ol>\n<li>I thought may be the use of <code>(symbol, exp)</code> instead of <code>(index, exp)</code> would impact the time of operations may be. Dealing with tuples containing order 2 tuples with     <code>int</code>s is very cost effective.<br>Example:<pre><code>&gt;&gt;&gt; (a**<span class=\"number\">3</span>*b**<span class=\"number\">2</span>*a)<span class=\"class\">.letter_form</span>\n[<span class=\"tag\">a</span>, <span class=\"tag\">a</span>, <span class=\"tag\">a</span>, <span class=\"tag\">b</span>, <span class=\"tag\">b</span>, a]\n&gt;&gt;&gt; (a**<span class=\"number\">3</span>*b**<span class=\"number\">2</span>*a)<span class=\"class\">.letter_form</span>\n[<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>]</code></pre></li>\n<li>If internally the <code>(index, exp)</code> thing is used then it can convert it to <code>(symbol, exp)</code> using the <code>obj.symbols</code> defined in <code>__new__</code> of <code>FreeGroup</code> but if <code>(symbol, exp)</code> is used internally then the backwards conversion is not possible unless defined another function. Probably a <code>dictionary</code> could be used for that.</li>\n</ol>\n",
  "id": "5736f5b664dbdadc7dec01e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-14T09:53:58.153Z",
  "text": "I have got two fears to share:\n1. I thought may be the use of `(symbol, exp)` instead of `(index, exp)` would impact the time of operations may be. Dealing with tuples containing order 2 tuples with     `int`s is very cost effective.\nExample:\n```\n>>> (a**3*b**2*a).letter_form\n[a, a, a, b, b, a]\n>>> (a**3*b**2*a).letter_form\n[0, 0, 0, 1, 1, 0]\n```\n2. If internally the `(index, exp)` thing is used then it can convert it to `(symbol, exp)` using the `obj.symbols` defined in `__new__` of `FreeGroup` but if `(symbol, exp)` is used internally then the backwards conversion is not possible unless defined another function. Probably a `dictionary` could be used for that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<blockquote>\n<p>Looks like the array form.</p></blockquote>\n<p>Yes, I think the issue is with the array form.</p>",
  "id": "5736f6b5c61823687d3bd008",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-14T09:58:13.860Z",
  "text": "> Looks like the array form.\n\nYes, I think the issue is with the array form.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I don&#39;t think there should be any difference in efficiency if <code>symbol</code> is used instead of <code>index</code>. They both should take just one machine word, and in the internal operations like <code>__mul__</code> the only thing that matters is that those values can be compared for equality. In printing, the symbol is more efficient.",
  "id": "573708a264dbdadc7dec047d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-14T11:14:42.505Z",
  "text": "I don't think there should be any difference in efficiency if `symbol` is used instead of `index`. They both should take just one machine word, and in the internal operations like `__mul__` the only thing that matters is that those values can be compared for equality. In printing, the symbol is more efficient.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I think you are right. I timed it, even with fairly big expressions.<br>With the methods like <a href=\"https://github.com/sympy/sympy/pull/10350/files#diff-c461d9fa5812c70f38a78e7780961fb2R798\" rel=\"nofollow\" target=\"_blank\" class=\"link\">sub_syllables</a> currently here it returns <code>b</code>, which can be confusing, since here <code>b</code> returned is of type <code>Symbol</code>, instead of usual <code>b</code> (instance of <code>FreeGroupElm</code>) just assigned above this, should something be done about this?",
  "id": "57371af9eea93e5742d1da32",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-14T12:32:57.409Z",
  "text": "I think you are right. I timed it, even with fairly big expressions.\nWith the methods like [sub_syllables](https://github.com/sympy/sympy/pull/10350/files#diff-c461d9fa5812c70f38a78e7780961fb2R798) currently here it returns `b`, which can be confusing, since here `b` returned is of type `Symbol`, instead of usual `b` (instance of `FreeGroupElm`) just assigned above this, should something be done about this?",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/10350/files#diff-c461d9fa5812c70f38a78e7780961fb2R798"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I&#39;ll have to investigate that.",
  "id": "573720d0e2996a5a42c856a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-14T12:57:52.558Z",
  "text": "I'll have to investigate that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "About comparisons: On <a href=\"https://github.com/sympy/sympy/pull/10350/files#diff-c461d9fa5812c70f38a78e7780961fb2R871\" rel=\"nofollow\" target=\"_blank\" class=\"link\">this line</a> there is a slight difference between integers and symbols. I think that <code>idx1 == idx2</code> is evaluated directly by Python while <code>sym1 == sym2</code> takes one detour via SymPy. If you use <code>sym1 is sym2</code> there should be no difference.",
  "id": "573722a1e2996a5a42c856f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-14T13:05:37.706Z",
  "text": "About comparisons: On [this line](https://github.com/sympy/sympy/pull/10350/files#diff-c461d9fa5812c70f38a78e7780961fb2R871) there is a slight difference between integers and symbols. I think that `idx1 == idx2` is evaluated directly by Python while `sym1 == sym2` takes one detour via SymPy. If you use `sym1 is sym2` there should be no difference.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/10350/files#diff-c461d9fa5812c70f38a78e7780961fb2R871"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> . Can we three have a meeting to discuss the road-map for project? Probably on 15 th May (i.e tomorrow for you). Things like setting up a little concrete goals for weeks. When would you be ok? Currently Kalevi&#39;s time might 3:30 AM morning.",
  "id": "5737c6c11794136a7d08bc62",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T00:45:53.037Z",
  "text": "Hi @asmeurer . Can we three have a meeting to discuss the road-map for project? Probably on 15 th May (i.e tomorrow for you). Things like setting up a little concrete goals for weeks. When would you be ok? Currently Kalevi's time might 3:30 AM morning.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-15T00:53:44.265Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "As for the timings (Kalevi already mentioned). UTC+05:30, and in Kalevi&#39;s time is UTC+03:00.",
  "id": "5737c70d64dbdadc7dec253e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T00:47:09.858Z",
  "text": "As for the timings (Kalevi already mentioned). UTC+05:30, and in Kalevi's time is UTC+03:00.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Considering the timings of past discussions. We all were active around 16:00 (UTC). Though the time can be modified as well.",
  "id": "5737c7dfe2996a5a42c8742d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T00:50:39.045Z",
  "text": "Considering the timings of past discussions. We all were active around 16:00 (UTC). Though the time can be modified as well.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I was also going to suggest 16 UTC provided that is not too late for Gaurav. (I tend to be tired after 9 PM.)",
  "id": "57380bb7831fd2d97d9e8ed0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T05:40:07.430Z",
  "text": "I was also going to suggest 16 UTC provided that is not too late for Gaurav. (I tend to be tired after 9 PM.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I am here. It will be fine to me.",
  "id": "573895b60cb634927f7f0bd0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:28:54.382Z",
  "text": "I am here. It will be fine to me.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I haven&#39;t seen any sign of Aaron today. But we can meet anyway.",
  "id": "57389678ae26c1967f9ea53f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:32:08.961Z",
  "text": "I haven't seen any sign of Aaron today. But we can meet anyway.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I did look at your proposal again. What kind of plans did have next?",
  "id": "573896a364dbdadc7dec3d83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:32:51.353Z",
  "text": "I did look at your proposal again. What kind of plans did have next?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "For the weeks 1, 2: Making FreeGroup complete",
  "id": "573896ce0cb634927f7f0c0c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:33:34.857Z",
  "text": "For the weeks 1, 2: Making FreeGroup complete",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Complete with algorithms?",
  "id": "573896eb1794136a7d08d654",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:34:03.524Z",
  "text": "Complete with algorithms?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I am not sure, how distinct they all would be from one another.",
  "id": "573897150cb634927f7f0c1a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:34:45.432Z",
  "text": "I am not sure, how distinct they all would be from one another.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "May be we should wait for Aaron or we should keep going?",
  "id": "57389744831fd2d97d9ea142",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:35:32.931Z",
  "text": "May be we should wait for Aaron or we should keep going?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think that it may not be necessary to make everything complete yet. We may have new ideas later.",
  "id": "57389754ae26c1967f9ea56d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:35:48.824Z",
  "text": "I think that it may not be necessary to make everything complete yet. We may have new ideas later.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems to me that the implementation is quite usable already.",
  "id": "5738979ee2996a5a42c88d08",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:37:02.875Z",
  "text": "It seems to me that the implementation is quite usable already.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Did you have a look at the latest code?",
  "id": "573897c5ae26c1967f9ea585",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:37:41.508Z",
  "text": "Did you have a look at the latest code?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I have tried to follow the development. Sometimes my copy has become outdated before I have finished reviewing.",
  "id": "57389815ae26c1967f9ea593",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:39:01.522Z",
  "text": "I have tried to follow the development. Sometimes my copy has become outdated before I have finished reviewing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The tests seem to be outdated.",
  "id": "57389827e2996a5a42c88d29",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:39:19.936Z",
  "text": "The tests seem to be outdated.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-15T15:39:52.111Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I deleted(some) the tests.",
  "id": "57389837ae26c1967f9ea59f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:39:35.087Z",
  "text": "I deleted(some) the tests.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<p>There is one thing.</p><pre><code><span class=\"tag\">gap</span>&gt; <span class=\"rule\"><span class=\"attribute\">f</span>:<span class=\"value\">=<span class=\"function\">FreeGroup</span>(<span class=\"number\">4</span>)</span></span>;\n&lt;<span class=\"tag\">free</span> <span class=\"tag\">group</span> <span class=\"tag\">on</span> <span class=\"tag\">the</span> <span class=\"tag\">generators</span> <span class=\"attr_selector\">[ f1, f2, f3, f4 ]</span>&gt;\n<span class=\"tag\">gap</span>&gt; (<span class=\"tag\">f</span><span class=\"class\">.1</span>*<span class=\"tag\">f</span><span class=\"class\">.2</span>)^4;\n(<span class=\"tag\">f1</span>*<span class=\"tag\">f2</span>)^4</code></pre><p>This how GAP works.</p>",
  "id": "5738984b64dbdadc7dec3dd5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:39:55.827Z",
  "text": "There is one thing.\n```\ngap> f:=FreeGroup(4);\n<free group on the generators [ f1, f2, f3, f4 ]>\ngap> (f.1*f.2)^4;\n(f1*f2)^4 \n```\nThis how GAP works.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Once you have new tests, we could think of merging this unless Aaron has other ideas.",
  "id": "5738987ee2996a5a42c88d3c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:40:46.892Z",
  "text": "Once you have new tests, we could think of merging this unless Aaron has other ideas.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Fine by me.",
  "id": "5738989a831fd2d97d9ea188",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:41:14.432Z",
  "text": "Fine by me.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "This is how what we have now<pre><code>&gt;&gt;&gt; f, x, y = free_group(<span class=\"string\">\"x y\"</span>)\n&gt;&gt;&gt; (x<span class=\"keyword\">*</span>y<span class=\"keyword\">*</span>)<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2\nx<span class=\"keyword\">*</span>y<span class=\"keyword\">*</span>x<span class=\"keyword\">*</span>y</code></pre>",
  "id": "573898d8ae26c1967f9ea5c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:42:16.290Z",
  "text": "This is how what we have now\n```\n>>> f, x, y = free_group(\"x y\")\n>>> (x*y*)**2\nx*y*x*y\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I don&#39;t think we should try to follow GAP too much. Matters of this type can be taken care of later, if necessary.",
  "id": "57389903831fd2d97d9ea19a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:42:59.958Z",
  "text": "I don't think we should try to follow GAP too much. Matters of this type can be taken care of later, if necessary.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay.",
  "id": "57389917eea93e5742d2119b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:43:19.648Z",
  "text": "Okay.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The tests could be the next task.",
  "id": "5738994964dbdadc7dec3e0a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:44:09.671Z",
  "text": "The tests could be the next task.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Can you comment on what should be the new big task, that we can look upto?<br>May be the creation of other <a href=\"https://en.wikipedia.org/wiki/Magma_%28algebra%29#/media/File:Magma_to_group2.svg\" rel=\"nofollow\" target=\"_blank\" class=\"link\">algebraic structures</a>.",
  "id": "57389977c61823687d3c0d1a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:44:55.621Z",
  "text": "Can you comment on what should be the new big task, that we can look upto?\nMay be the creation of other [algebraic structures](https://en.wikipedia.org/wiki/Magma_%28algebra%29#/media/File:Magma_to_group2.svg).",
  "unread": false,
  "urls": [
   {
    "url": "https://en.wikipedia.org/wiki/Magma_%28algebra%29#/media/File:Magma_to_group2.svg"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Apart from the test.",
  "id": "57389981ae26c1967f9ea5e3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:45:05.328Z",
  "text": "Apart from the test.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Let&#39;s see in 15 minutes, if Aaron has seen this.",
  "id": "57389981c61823687d3c0d1c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:45:05.665Z",
  "text": "Let's see in 15 minutes, if Aaron has seen this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay. Will wait.",
  "id": "573899a6ae26c1967f9ea5eb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:45:42.914Z",
  "text": "Okay. Will wait.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think the next big task could be coset enumeration. That is harder and more important than other algebraic structures.",
  "id": "573899b764dbdadc7dec3e1a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:45:59.684Z",
  "text": "I think the next big task could be coset enumeration. That is harder and more important than other algebraic structures.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-15T15:53:42.433Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It may take several weeks before that would become reasonably mature.",
  "id": "573899e70cb634927f7f0ca2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T15:46:47.878Z",
  "text": "It may take several weeks before that would become reasonably mature.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-05-15T16:02:38.623Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Ok. It looks like Aaron won&#39;t be here. But that does not matter too much. We shall hear from him later.",
  "id": "57389d7d0cb634927f7f0d40",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T16:02:05.490Z",
  "text": "Ok. It looks like Aaron won't be here. But that does not matter too much. We shall hear from him later.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay, we should start with the <code>Coset Enumeration</code> as you said.",
  "id": "57389dbe831fd2d97d9ea26e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T16:03:10.911Z",
  "text": "Okay, we should start with the `Coset Enumeration` as you said.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "?",
  "id": "57389dc00cb634927f7f0d50",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T16:03:12.023Z",
  "text": "?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think so. After the current PR is completed and merged.",
  "id": "57389f4dc61823687d3c0e2e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T16:09:49.863Z",
  "text": "I think so. After the current PR is completed and merged.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Probably not much else is needed than the tests.",
  "id": "57389f881794136a7d08d80d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T16:10:48.942Z",
  "text": "Probably not much else is needed than the tests.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, I know the current issues:<ol>\n<li>Write tests</li>\n<li>Fix the printing issue.</li>\n<li>bug  in comparison of group elements.</li>\n</ol>\n",
  "id": "57389fc11794136a7d08d818",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T16:11:45.905Z",
  "text": "Yes, I know the current issues:\n1. Write tests\n2. Fix the printing issue.\n3. bug  in comparison of group elements.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Ok. Fixing those should be enough.",
  "id": "57389fede2996a5a42c88ead",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T16:12:29.831Z",
  "text": "Ok. Fixing those should be enough.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<blockquote>\n<p>Gaurav, have you experimented with noncommutative symbols? Would it be easy to use sympy.core to handle expressions for group element?</p></blockquote>\n<p>You previously also commented this. I haven&#39;t experimented. I will also look into this issue.</p>",
  "id": "5738a05ac61823687d3c0e70",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T16:14:18.086Z",
  "text": "> Gaurav, have you experimented with noncommutative symbols? Would it be easy to use sympy.core to handle expressions for group element?\n\nYou previously also commented this. I haven't experimented. I will also look into this issue.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-15T16:17:06.876Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Well, that is something I planned before settling on the current interface with symbols. I thought commutativity might have some role, but it seems now that maybe not. So you can ignore those questions.",
  "id": "5738a0dc64dbdadc7dec3f92",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-15T16:16:28.851Z",
  "text": "Well, that is something I planned before settling on the current interface with symbols. I thought commutativity might have some role, but it seems now that maybe not. So you can ignore those questions.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "BTW, I like the current interface with separate functions like <code>free_group</code>.",
  "id": "5738a163e2996a5a42c88efc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-15T16:18:43.318Z",
  "text": "BTW, I like the current interface with separate functions like `free_group`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-15T16:20:02.297Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay. Yes, all the <code>fields.py</code>, <code>rings.py</code> have similar functions.<br>I remember you also implemented one <code>sfield</code> IIRC.",
  "id": "5738a1a6831fd2d97d9ea35e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-15T16:19:50.837Z",
  "text": "Okay. Yes, all the `fields.py`, `rings.py` have similar functions.\nI remember you also implemented one `sfield` IIRC.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Yes. It was obviously planned, but not implemented.",
  "id": "5738a1c7ae26c1967f9ea7a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-15T16:20:23.487Z",
  "text": "Yes. It was obviously planned, but not implemented.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I&#39;m planning to use it in an implementation of function fields for integration (if I ever get that far).",
  "id": "5738a1fbeea93e5742d21373",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-15T16:21:15.969Z",
  "text": "I'm planning to use it in an implementation of function fields for integration (if I ever get that far).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Well I haven&#39;t heard of &quot;function fields of integration&quot; before, though.",
  "id": "5738a2551794136a7d08d8aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-15T16:22:45.492Z",
  "text": "Well I haven't heard of \"function fields of integration\" before, though.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "for integration using the Risch algorithm.",
  "id": "5738a280c61823687d3c0ee4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-15T16:23:28.006Z",
  "text": "for integration using the Risch algorithm.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It is almost 10 PM there. You are probably preparing to close down.",
  "id": "5738a2d7831fd2d97d9ea390",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-15T16:24:55.818Z",
  "text": "It is almost 10 PM there. You are probably preparing to close down.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Its fine, by me.",
  "id": "5738a2ef64dbdadc7dec3ff7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-15T16:25:19.646Z",
  "text": "Its fine, by me.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Sorry to change topic: I also used the <code>singularity</code> finder that you had opened an issue for <code>complex limits</code> implementation.",
  "id": "5738a30164dbdadc7dec3ffa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-15T16:25:37.817Z",
  "text": "Sorry to change topic: I also used the `singularity` finder that you had opened an issue for `complex limits` implementation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Though i never got to send in a PR. Its currently very crude.",
  "id": "5738a3251794136a7d08d8d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-15T16:26:13.921Z",
  "text": "Though i never got to send in a PR. Its currently very crude.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-15T16:27:35.577Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "So I think i am clear with things that needs to be done for project.",
  "id": "5738a36c64dbdadc7dec400c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-15T16:27:24.297Z",
  "text": "So I think i am clear with things that needs to be done for project.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I don&#39;t recall the details, but my point has been that one should deal separately with singularities of polar type and essential singularities. Only the latter should go to <code>gruntz</code>. Currently many issues result from trying to use that for meromorphic type singularities.",
  "id": "5738a3c464dbdadc7dec401d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-15T16:28:52.021Z",
  "text": "I don't recall the details, but my point has been that one should deal separately with singularities of polar type and essential singularities. Only the latter should go to `gruntz`. Currently many issues result from trying to use that for meromorphic type singularities.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, i started with the classification of singularities as either being, poles, essential singularity etc.",
  "id": "5738a3fae2996a5a42c88f77",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-15T16:29:46.916Z",
  "text": "Yes, i started with the classification of singularities as either being, poles, essential singularity etc.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Anything still you have liked to point out? I may close down then.",
  "id": "5738a44f831fd2d97d9ea3d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-15T16:31:11.961Z",
  "text": "Anything still you have liked to point out? I may close down then.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think there is nothing more. Good night.",
  "id": "5738a46de2996a5a42c88f8b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-15T16:31:41.904Z",
  "text": "I think there is nothing more. Good night.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Good night. Thank you, for the time.",
  "id": "5738a482c61823687d3c0f44",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-15T16:32:02.274Z",
  "text": "Good night. Thank you, for the time.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "hey sorry guys. I&#39;m not very active on Gitter on the weekends. ",
  "id": "573a24832867f61b7b26c701",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-16T19:50:27.151Z",
  "text": "hey sorry guys. I'm not very active on Gitter on the weekends. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "anyway, <span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> is the primary mentor, so if you have to meet without me that is fine ",
  "id": "573a24bbfeb8cb327ee1f62c",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-16T19:51:23.089Z",
  "text": "anyway, @jksuom is the primary mentor, so if you have to meet without me that is fine ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Maybe we could think of another day, a weekday?",
  "id": "573aa80f64dbdadc7decb1c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-17T05:11:43.382Z",
  "text": "Maybe we could think of another day, a weekday?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I&#39;ve started to study your latest commits. It seems that hash is designed to identify any two groups with the same generators. That is quite reasonable, though it may not often be necessary to compare groups.",
  "id": "573ab290831fd2d97d9f1919",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-17T05:56:32.105Z",
  "text": "I've started to study your latest commits. It seems that hash is designed to identify any two groups with the same generators. That is quite reasonable, though it may not often be necessary to compare groups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I don&#39;t think there is anything important missing. There are some issues in docstrings and trailing whitespace. Once those are fixed, I think we could merge this.",
  "id": "573aba5aae26c1967f9f1dd4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-17T06:29:46.134Z",
  "text": "I don't think there is anything important missing. There are some issues in docstrings and trailing whitespace. Once those are fixed, I think we could merge this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<blockquote>\n<p>It seems that hash is designed to identify any two groups with the same generators. That is quite reasonable, though it may not often be necessary to compare groups.</p></blockquote>\n<p>I thought of making it somewhat similar to how GAP operates. (Though i remember your comment regarding &quot;not&quot; necessarily making it similar to GAP comment).<br> For the docstrings, whitespace issue. I will fix them in a few hours and will ping you.</p>",
  "id": "573ac9fd0cb634927f7f88b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-17T07:36:29.305Z",
  "text": "> It seems that hash is designed to identify any two groups with the same generators. That is quite reasonable, though it may not often be necessary to compare groups.\n\nI thought of making it somewhat similar to how GAP operates. (Though i remember your comment regarding \"not\" necessarily making it similar to GAP comment).\n For the docstrings, whitespace issue. I will fix them in a few hours and will ping you.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-17T10:43:58.251Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "",
  "id": "573af3d10cb634927f7f9488",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-17T10:34:57.891Z",
  "text": "",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-05-17T12:04:52.869Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Trailing whitespace on line 770.",
  "id": "573b08b71794136a7d09660a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-17T12:04:07.759Z",
  "text": "Trailing whitespace on line 770.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I do not understand the loop in <code>zero_mul_simp</code>. <code>index</code> is an input parameter that is not modified. Also <code>len(array_form)</code> is evaluated only once.",
  "id": "573b0b4dae26c1967f9f3435",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-17T12:15:09.140Z",
  "text": "I do not understand the loop in `zero_mul_simp`. `index` is an input parameter that is not modified. Also `len(array_form)` is evaluated only once.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I did wrong. I have addressed your comments. I hope there is no issue with using <code>index</code> as an argument for <code>zero_mul_simp</code>.",
  "id": "573b192ee2996a5a42c91cb1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-17T13:14:22.193Z",
  "text": "I did wrong. I have addressed your comments. I hope there is no issue with using `index` as an argument for `zero_mul_simp`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think it would not be hard to put everything in a loop with no recursion. Then the index could be set in the beginning from <code>len(list)</code>.",
  "id": "573b1f97e2996a5a42c91f38",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-17T13:41:43.350Z",
  "text": "I think it would not be hard to put everything in a loop with no recursion. Then the index could be set in the beginning from `len(list)`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Maybe something in following style might work. For a list <code>l</code> keep the decreasing index <code>i</code> such that <code>l[i:]</code> is reduced.<pre><code><span class=\"tag\">i</span> = <span class=\"function\"><span class=\"title\">len</span><span class=\"params\">(l)</span></span> - <span class=\"number\">1</span>\nwhile <span class=\"tag\">i</span> &gt; <span class=\"number\">0</span>:\n     while <span class=\"function\"><span class=\"title\">sym</span><span class=\"params\">(l[i-<span class=\"number\">1</span>])</span></span> is <span class=\"function\"><span class=\"title\">sym</span><span class=\"params\">(l[i])</span></span>:\n            combine l[i-<span class=\"number\">1</span>] and l[i]\n             decr <span class=\"tag\">i</span>\n       <span class=\"keyword\">if</span> <span class=\"function\"><span class=\"title\">exp</span><span class=\"params\">(l[i])</span></span> == <span class=\"number\">0</span>:\n             <span class=\"tag\">del</span> l[i]\n             decr i</code></pre>",
  "id": "573b345364dbdadc7decdbfa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-17T15:10:11.453Z",
  "text": "Maybe something in following style might work. For a list `l` keep the decreasing index `i` such that `l[i:]` is reduced.\n```\ni = len(l) - 1\nwhile i > 0:\n     while sym(l[i-1]) is sym(l[i]):\n            combine l[i-1] and l[i]\n             decr i\n       if exp(l[i]) == 0:\n             del l[i]\n             decr i\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Though i just pushed a new commit (for <code>zero_mul_simp</code>). I am also seeing your suggestion as well.",
  "id": "573b34ace2996a5a42c92868",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-17T15:11:40.795Z",
  "text": "Though i just pushed a new commit (for `zero_mul_simp`). I am also seeing your suggestion as well.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "(The alignment is not exactly what python would need.)",
  "id": "573b34c064dbdadc7decdc39",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-17T15:12:00.319Z",
  "text": "(The alignment is not exactly what python would need.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "On second thought, the last <code>decr i</code> should not be there.",
  "id": "573b39151794136a7d09798e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-17T15:30:29.004Z",
  "text": "On second thought, the last `decr i` should not be there.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "if <code>l[i]</code> exists.",
  "id": "573b39dae2996a5a42c92ab7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-17T15:33:46.244Z",
  "text": "if `l[i]` exists.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I just pushed another commit, considering the code sent for <code>zero_simp_mul</code>.",
  "id": "573b41e5ae26c1967f9f4a68",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-17T16:08:05.743Z",
  "text": "I just pushed another commit, considering the code sent for `zero_simp_mul`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Though that makes in-place changes.",
  "id": "573b42dc0cb634927f7fb1d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-17T16:12:12.741Z",
  "text": "Though that makes in-place changes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "There should be no problem with a list.",
  "id": "573b4b69831fd2d97d9f4b96",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-17T16:48:41.934Z",
  "text": "There should be no problem with a list.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think I&#39;ll have to wait until tomorrow for reviewing.",
  "id": "573b4c1164dbdadc7dece6aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-17T16:51:29.593Z",
  "text": "I think I'll have to wait until tomorrow for reviewing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I&#39;m again having problems with testing:<br><code>File &quot;sympy/combinatorics/free_group.py&quot;, line 14, in &lt;module&gt;\n    from collections.abc import Sequence, Container\nImportError: No module named abc</code>",
  "id": "573c0a35eea93e5742d2e594",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-18T06:22:45.993Z",
  "text": "I'm again having problems with testing:\n```  File \"sympy/combinatorics/free_group.py\", line 14, in <module>\n    from collections.abc import Sequence, Container\nImportError: No module named abc\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-18T07:22:22.660Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Sorry about that. I was just testing it with this, and again forgot to remove this useless import. I have removed this now.",
  "id": "573c175c64dbdadc7ded1840",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-18T07:18:52.030Z",
  "text": "Sorry about that. I was just testing it with this, and again forgot to remove this useless import. I have removed this now.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "<p>It seems that <code>zero_mul_simp</code> is only used when two reduced words are combined, which will reduce its complexity. There is a still a minor issue:</p><pre><code>In [16]: p = a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span>c<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1\n\nIn [17]: a<span class=\"keyword\">*</span>p\nOut[17]: c</code></pre><p>I think it is caused by the index becoming negative. Probably replacing <code>len(l) &gt; 1</code> with <code>index &gt;= 0</code> would fix that.</p>",
  "id": "573c20c3eea93e5742d2eb05",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-18T07:58:59.730Z",
  "text": "It seems that `zero_mul_simp` is only used when two reduced words are combined, which will reduce its complexity. There is a still a minor issue:\n```\nIn [16]: p = a**-1*b*c*b**-1\n\nIn [17]: a*p\nOut[17]: c\n```\nI think it is caused by the index becoming negative. Probably replacing `len(l) > 1` with `index >= 0` would fix that.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-18T08:20:43.689Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, it did. :) I pushed the commit now.",
  "id": "573c24fcae26c1967f9f840a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-18T08:17:00.616Z",
  "text": "Yes, it did. :) I pushed the commit now.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-05-18T08:20:20.381Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Also i made the point of &quot;two reduced words are combined&quot; clear in docstring for <code>zero_mul_simp</code>.",
  "id": "573c259ee2996a5a42c96787",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-18T08:19:42.003Z",
  "text": "Also i made the point of \"two reduced words are combined\" clear in docstring for `zero_mul_simp`.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-05-18T11:45:38.807Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "You could drop the [WIP] now. Then let&#39;s wait to see if Aaron has something to add.",
  "id": "573c5591ae26c1967f9f934f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-18T11:44:17.929Z",
  "text": "You could drop the [WIP] now. Then let's wait to see if Aaron has something to add.",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "editedAt": "2016-05-18T13:27:56.139Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I dropped that now. <span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> can you also suggest sometime that will be suitable for the meeting. Probably sometime between 15 UTC- 17 UTC. I will be probably be okay with any day, after the coding period starts.",
  "id": "573c6dbc0cb634927f80047d",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2016-05-18T13:27:24.344Z",
  "text": "I dropped that now. @asmeurer can you also suggest sometime that will be suitable for the meeting. Probably sometime between 15 UTC- 17 UTC. I will be probably be okay with any day, after the coding period starts.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Maybe we have to think about the implementation of free abelian groups. They are the same as free  Z-modules, which are treated in <code>polys/agca</code>.  Duplicate work should be avoided. I&#39;ll merge the <code>FreeGroup</code> PR today as Aaron seems to have no objections. I think you could start thinking of the classes needed for coset enumeration.",
  "id": "573e904e08a18f700b81fb72",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-20T04:19:26.218Z",
  "text": "Maybe we have to think about the implementation of free abelian groups. They are the same as free  Z-modules, which are treated in `polys/agca`.  Duplicate work should be avoided. I'll merge the `FreeGroup` PR today as Aaron seems to have no objections. I think you could start thinking of the classes needed for coset enumeration.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I have been too busy with the paper to review PRs. Please merge if you&#39;re ok with it. ",
  "id": "573e9321e675315635f84ab6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-20T04:31:29.247Z",
  "text": "I have been too busy with the paper to review PRs. Please merge if you're ok with it. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I merged the PR with its history. I think it may be useful to see how the module evolved.",
  "id": "573e96c6ff441ca333d33d5d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-20T04:47:02.594Z",
  "text": "I merged the PR with its history. I think it may be useful to see how the module evolved.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I thought the same, why you may have done that.",
  "id": "573e96eeff441ca333d33d5f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-20T04:47:42.993Z",
  "text": "I thought the same, why you may have done that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I did a look over on the PR that was merged ",
  "id": "573fc09ae675315635f89cbb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T01:57:46.808Z",
  "text": "I did a look over on the PR that was merged ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "A few minor Python issues, which can be addressed in the next PR",
  "id": "573fc0b55b4261a6333cb4c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T01:58:13.650Z",
  "text": "A few minor Python issues, which can be addressed in the next PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I didn\u2019t look at the math much, but I think <span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> can handle that for the most part ",
  "id": "573fc0c4d3f431720bb260e0",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T01:58:28.504Z",
  "text": "I didn\u2019t look at the math much, but I think @jksuom can handle that for the most part ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I also still think you should use Basic types for everything ",
  "id": "573fc109d3f431720bb260ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T01:59:37.614Z",
  "text": "I also still think you should use Basic types for everything ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Using <code>Basic</code> for <code>FreeGroupElm</code> would mean that <code>srepr</code> should be able to re-create the corresponding object, right?",
  "id": "573fc723ff441ca333d3924a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T02:25:39.854Z",
  "text": "Using `Basic` for `FreeGroupElm` would mean that `srepr` should be able to re-create the corresponding object, right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "But that  is not possible with the <code>FreeGroupElm</code>, since <code>FreeGroupElm</code> is internally called by <code>FreeGroup.dtype</code>on <a href=\"https://github.com/sympy/sympy/pull/10350/files#diff-c461d9fa5812c70f38a78e7780961fb2R144\" rel=\"nofollow\" target=\"_blank\" class=\"link\">this line</a> hence <code>FreeGroupElm</code> is never called directly. Or may be only make the <code>FreeGroup</code> class <code>Basic</code>.",
  "id": "573fc7c8e675315635f89d5d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T02:28:24.064Z",
  "text": "But that  is not possible with the `FreeGroupElm`, since `FreeGroupElm` is internally called by `FreeGroup.dtype`on [this line](https://github.com/sympy/sympy/pull/10350/files#diff-c461d9fa5812c70f38a78e7780961fb2R144) hence `FreeGroupElm` is never called directly. Or may be only make the `FreeGroup` class `Basic`.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/10350/files#diff-c461d9fa5812c70f38a78e7780961fb2R144"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I have been trying to think why <code>PolyRing</code> and <code>PolyElement</code> have not been derived from <code>Basic</code>. It would seem that at least <code>PolyRing</code> could have been implemented that way. Maybe the type of <code>FreeGroup</code> could be changed if necessary. But that can be done later.",
  "id": "573feced08a18f700b8254cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T05:06:53.357Z",
  "text": "I have been trying to think why `PolyRing` and `PolyElement` have not been derived from `Basic`. It would seem that at least `PolyRing` could have been implemented that way. Maybe the type of `FreeGroup` could be changed if necessary. But that can be done later.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I was hoping Aaron would have some explanation in the case of the new polynomials.",
  "id": "573fed375b4261a6333cb9b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T05:08:07.253Z",
  "text": "I was hoping Aaron would have some explanation in the case of the new polynomials.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "&quot;new polynomials&quot;?",
  "id": "573fed4908a18f700b8254dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T05:08:25.928Z",
  "text": "\"new polynomials\"?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "<code>PolyRing</code> and <code>PolyElement</code> are new polynomials.",
  "id": "573fed6c08a18f700b8254e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T05:09:00.338Z",
  "text": "`PolyRing` and `PolyElement` are new polynomials.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Sparse implementation. &#39;Old polynomials&#39; with <code>DMP</code> are dense.",
  "id": "573fedc0e675315635f8a195",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T05:10:24.545Z",
  "text": "Sparse implementation. 'Old polynomials' with `DMP` are dense.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "These are called new/old since they DMP were implemented before but sparse were implemented later on by Mateusz Paprocki?",
  "id": "573fee13ff441ca333d39701",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T05:11:47.523Z",
  "text": "These are called new/old since they DMP were implemented before but sparse were implemented later on by Mateusz Paprocki?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Yes, I think that is the obvious reason.",
  "id": "573fee327aab25fb459d6767",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T05:12:18.243Z",
  "text": "Yes, I think that is the obvious reason.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Besides, there is the module <code>polys.domains.old_polynomialring</code>.",
  "id": "573fee8bff441ca333d39719",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T05:13:47.826Z",
  "text": "Besides, there is the module `polys.domains.old_polynomialring`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "These old polynomials have not been derived from <code>Basic</code>, either.",
  "id": "573fef3d7aab25fb459d6785",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T05:16:45.970Z",
  "text": "These old polynomials have not been derived from `Basic`, either.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Groups and their elements should behave very much in the same way as polynomials. Therefore I have not been worried about them not being <code>Basic</code>.",
  "id": "573fefbddce4845b35ebdb4e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T05:18:53.026Z",
  "text": "Groups and their elements should behave very much in the same way as polynomials. Therefore I have not been worried about them not being `Basic`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I have no definite view on the free group cache. I think its purpose is to guarantee that there would be only one copy of each group for a given set of symbols. Maybe that could also have been arranged otherwise as is done with <code>Basic</code> objects. Maybe there would not even be so many groups in any single application.",
  "id": "573ff331ff441ca333d39787",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T05:33:37.921Z",
  "text": "I have no definite view on the free group cache. I think its purpose is to guarantee that there would be only one copy of each group for a given set of symbols. Maybe that could also have been arranged otherwise as is done with `Basic` objects. Maybe there would not even be so many groups in any single application.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I will take care of caching. Aaron&#39;s point was to use the SymPy cache. I have done it locally.",
  "id": "573ff3975b4261a6333cba45",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T05:35:19.815Z",
  "text": "I will take care of caching. Aaron's point was to use the SymPy cache. I have done it locally.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Anyway, I never thought there would be so many groups that cache size would become a problem.",
  "id": "573ff45c7aab25fb459d67f6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T05:38:36.434Z",
  "text": "Anyway, I never thought there would be so many groups that cache size would become a problem.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-21T05:54:34.837Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The <code>__eq__</code> method is connected with <code>__hash__</code>. <a href=\"https://docs.python.org/3/reference/datamodel.html#object.__hash__\" rel=\"nofollow\" target=\"_blank\" class=\"link\">Python docs</a>: &quot;If a class does not define an <code>__eq__</code>() method it should not define a <code>__hash__</code>() operation either&quot;. It might be possible to do without either. Then <code>grp1 == grp2</code> and <code>grp1 is grp2</code> would mean the same. (Objects are same, i.e., located in the same place.) I think that would suffice for our purpose.",
  "id": "573ff7cedce4845b35ebdbf8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T05:53:18.792Z",
  "text": "The `__eq__` method is connected with `__hash__`. [Python docs](https://docs.python.org/3/reference/datamodel.html#object.__hash__): \"If a class does not define an `__eq__`() method it should not define a `__hash__`() operation either\". It might be possible to do without either. Then `grp1 == grp2` and `grp1 is grp2` would mean the same. (Objects are same, i.e., located in the same place.) I think that would suffice for our purpose.",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.python.org/3/reference/datamodel.html#object.__hash__"
   }
  ],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, currently <code>grp1 == grp2</code> and <code>grp1 is grp2</code> mean the same. But we still didn&#39;t agreed upon whether we want <code>is</code> to be the same as <code>==</code> for <code>FreeGroup</code>.",
  "id": "573ff9da5b4261a6333cbab3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T06:02:02.812Z",
  "text": "Yes, currently `grp1 == grp2` and `grp1 is grp2` mean the same. But we still didn't agreed upon whether we want `is` to be the same as `==` for `FreeGroup`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think it could be left as it is now at least until there becomes an obvious need for a change.",
  "id": "573ffb3fe675315635f8a2b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T06:07:59.456Z",
  "text": "I think it could be left as it is now at least until there becomes an obvious need for a change.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It is now important to have something that can be used to develop algorithms.",
  "id": "573ffb6e5b4261a6333cbadb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T06:08:46.890Z",
  "text": "It is now important to have something that can be used to develop algorithms.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Then there may come forth some new ideas.",
  "id": "573ffb995b4261a6333cbadf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T06:09:29.292Z",
  "text": "Then there may come forth some new ideas.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes. I am seeing the FpGroup and <code>.subgroup</code> methods for it",
  "id": "573ffba37aab25fb459d6877",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T06:09:39.903Z",
  "text": "Yes. I am seeing the FpGroup and `.subgroup` methods for it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I will hopefully give the update on <code>Coset Table</code> method by today evening.",
  "id": "57401649ff441ca333d39ac2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T08:03:21.612Z",
  "text": "I will hopefully give the update on `Coset Table` method by today evening.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "May be only design-wise.",
  "id": "57401676d3f431720bb269ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T08:04:06.925Z",
  "text": "May be only design-wise.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "well the most obvious benefit of making everything Basic is that we don\u2019t have to worry with all this discussion on hashing, equality, and caching",
  "id": "5740cd84ff441ca333d3b752",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T21:05:08.227Z",
  "text": "well the most obvious benefit of making everything Basic is that we don\u2019t have to worry with all this discussion on hashing, equality, and caching",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "just make everything Basic with Basic args and rebuildable from its args, and the rest is done from the Basic superclass ",
  "id": "5740cd98dce4845b35ebfb74",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-21T21:05:28.179Z",
  "text": "just make everything Basic with Basic args and rebuildable from its args, and the rest is done from the Basic superclass ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "There must have been some reason why polynomials (rings and elements, old and new) have not been made <code>Basic</code>. The only possible explanation I&#39;ve come up with so far is that there would be an impact on efficiency.",
  "id": "574149bd08a18f700b82836b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-22T05:55:09.082Z",
  "text": "There must have been some reason why polynomials (rings and elements, old and new) have not been made `Basic`. The only possible explanation I've come up with so far is that there would be an impact on efficiency.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I suppose the group classes could be made <code>Basic</code> without much difficulty. I&#39;m not sure that would be necessary for the elements that can be easily constructed out of generator expressions even if they are not in the class <code>Expr</code>.",
  "id": "57414b2b7aab25fb459d9557",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-22T06:01:15.314Z",
  "text": "I suppose the group classes could be made `Basic` without much difficulty. I'm not sure that would be necessary for the elements that can be easily constructed out of generator expressions even if they are not in the class `Expr`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I am seeing the paper <a href=\"http://staff.itee.uq.edu.au/havas/1973cdhw.pdf\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://staff.itee.uq.edu.au/havas/1973cdhw.pdf</a> for the Todd Coxeter Algorithm.",
  "id": "574155997aab25fb459d9643",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-22T06:45:45.320Z",
  "text": "I am seeing the paper http://staff.itee.uq.edu.au/havas/1973cdhw.pdf for the Todd Coxeter Algorithm.",
  "unread": false,
  "urls": [
   {
    "url": "http://staff.itee.uq.edu.au/havas/1973cdhw.pdf"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2016-05-22T06:48:43.911Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "There seems to be quite a few methods available in that for introducing &quot;new cosets&quot; (a step in the algorithm) it has got quite a few methods<ol>\n<li>Felch method</li>\n<li>HLT method (Haselgrov Leech Trotter)</li>\n</ol>\n",
  "id": "5741563fe675315635f8d1c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-22T06:48:31.049Z",
  "text": "There seems to be quite a few methods available in that for introducing \"new cosets\" (a step in the algorithm) it has got quite a few methods\n1. Felch method\n2. HLT method (Haselgrov Leech Trotter)",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "As the paper states: &#39;The central problem in programming the TC algorithm is finding a  satisfactory rule for introducing &quot;new cosets&quot;.&#39;",
  "id": "574156e8dce4845b35ec0b1d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-22T06:51:20.841Z",
  "text": "As the paper states: 'The central problem in programming the TC algorithm is finding a  satisfactory rule for introducing \"new cosets\".'",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Those two methods have been mentioned also in other sources that I have looked. I&#39;ve got the feeling that Felch is more like the original &#39;manual&#39; procedure while HLT might be easier to implement.",
  "id": "5741783be675315635f8d4dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-22T09:13:31.058Z",
  "text": "Those two methods have been mentioned also in other sources that I have looked. I've got the feeling that Felch is more like the original 'manual' procedure while HLT might be easier to implement.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "In both methods new cosets are introduced when the old ones do not seem to suffice. Every now an then one has to abandon some of the new ones as duplicates. It looks like HLT method could be producing more of these duplicates than Felch which may lead to bigger demands on memory.",
  "id": "574179487aab25fb459d996f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-22T09:18:00.437Z",
  "text": "In both methods new cosets are introduced when the old ones do not seem to suffice. Every now an then one has to abandon some of the new ones as duplicates. It looks like HLT method could be producing more of these duplicates than Felch which may lead to bigger demands on memory.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "The paper I mentioned does contain the information you described. The above paper mainly stresses upon the &quot;lookahead&quot; algorithm, which it mentions in paper by &quot;A Lookahead Todd Coxeter Algorithm&quot;.",
  "id": "5741af18dce4845b35ec159e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-22T13:07:36.359Z",
  "text": "The paper I mentioned does contain the information you described. The above paper mainly stresses upon the \"lookahead\" algorithm, which it mentions in paper by \"A Lookahead Todd Coxeter Algorithm\".",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-22T13:10:22.937Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I thought we could decide upon the aims for the 1st official week for GSoC. Should we be looking at the implementing  all the different methods (i.e Felch, HLT, lookahead may be even more ..)?",
  "id": "5741afa5f240e50046a13d76",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-22T13:09:57.309Z",
  "text": "I thought we could decide upon the aims for the 1st official week for GSoC. Should we be looking at the implementing  all the different methods (i.e Felch, HLT, lookahead may be even more ..)?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "For the first week the aim week could be the implementation of the &quot;Coset Table&quot;.",
  "id": "5741b018dce4845b35ec15c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-22T13:11:52.256Z",
  "text": "For the first week the aim week could be the implementation of the \"Coset Table\".",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think lookahead is an addition to one of the other two strategies. It is probably simpler to postpone its inclusion.",
  "id": "5741b46cdce4845b35ec1681",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-22T13:30:20.591Z",
  "text": "I think lookahead is an addition to one of the other two strategies. It is probably simpler to postpone its inclusion.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "From where the Todd Coxeter Algorithm be implemented? The paper I mentioned gives explanation of Lookahead method. For the Felsch method should we look into the Derek Holt &quot;Handbook of Computational Group Theory&quot; or the Charles C Sims book on &quot;Computation with Finitely Presented Groups&quot;?",
  "id": "57429ab108a18f700b82b5dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-23T05:52:49.689Z",
  "text": "From where the Todd Coxeter Algorithm be implemented? The paper I mentioned gives explanation of Lookahead method. For the Felsch method should we look into the Derek Holt \"Handbook of Computational Group Theory\" or the Charles C Sims book on \"Computation with Finitely Presented Groups\"?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-23T05:54:00.727Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Though I don&#39;t have a copy of Charles C Sims book, I looked for a few pages in google books online.",
  "id": "57429ad5ff441ca333d3f970",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-23T05:53:25.748Z",
  "text": "Though I don't have a copy of Charles C Sims book, I looked for a few pages in google books online.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I have also used google&#39;s look inside service for Sims&#39; book. It does not seem to contain anything essential addtion to Holt&#39;s book. I think that would probably suffice. As to &#39;lookahead method&#39; I have the impression that it is not another method of its own but rather comparable to the process of &#39;garbage collection&#39;  in systems that automatically take care of the memory. It is a function called when memory has become scarce.",
  "id": "57429fbbf240e50046a16391",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-23T06:14:19.263Z",
  "text": "I have also used google's look inside service for Sims' book. It does not seem to contain anything essential addtion to Holt's book. I think that would probably suffice. As to 'lookahead method' I have the impression that it is not another method of its own but rather comparable to the process of 'garbage collection'  in systems that automatically take care of the memory. It is a function called when memory has become scarce.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think we should start by planning the &#39;tables&#39; as Todd and Coxeter call them. The name is suitable for a manual implementation but in the computer world it is not necessary to preserve all intermediate results in the same way as is done on paper. Hence the word &#39;table&#39; is not quite descriptive.",
  "id": "5742a0aae675315635f90331",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-23T06:18:18.936Z",
  "text": "I think we should start by planning the 'tables' as Todd and Coxeter call them. The name is suitable for a manual implementation but in the computer world it is not necessary to preserve all intermediate results in the same way as is done on paper. Hence the word 'table' is not quite descriptive.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The main table is obviously the &#39;Coset table&#39; that contains the actions of generators and their inverses on all cosets.",
  "id": "5742a10ed3f431720bb2c604",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-23T06:19:58.400Z",
  "text": "The main table is obviously the 'Coset table' that contains the actions of generators and their inverses on all cosets.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The two methods, Felch and HLT, both aim to fill the coset table, only the filling order, or strategy, is different.",
  "id": "5742a16cf240e50046a163dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-23T06:21:32.228Z",
  "text": "The two methods, Felch and HLT, both aim to fill the coset table, only the filling order, or strategy, is different.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think we should first construct the main functions as in Holt&#39;s book, for example. The order of using these functions can then be decided later.",
  "id": "5742a1ddff441ca333d3fa9f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-23T06:23:25.754Z",
  "text": "I think we should first construct the main functions as in Holt's book, for example. The order of using these functions can then be decided later.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Though I have created the PR <code>FreeAbelianGroup</code> but there is no current need to review it. I know the priority for the week: <code>Coset Table</code>.",
  "id": "5742ee5aff441ca333d410c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-23T11:49:46.255Z",
  "text": "Though I have created the PR `FreeAbelianGroup` but there is no current need to review it. I know the priority for the week: `Coset Table`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Do you think it would be useful to discuss the structure of the table even before much coding?",
  "id": "574546fd719c119b575bf585",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-25T06:32:29.062Z",
  "text": "Do you think it would be useful to discuss the structure of the table even before much coding?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes definitely.",
  "id": "5745473728011d9f574b97ad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-25T06:33:27.310Z",
  "text": "Yes definitely.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I am trying to code it in pieces.",
  "id": "5745474456ccfef516a09c08",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-25T06:33:40.827Z",
  "text": "I am trying to code it in pieces.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "But first problem being: I don&#39;t know what data structures for different components will be there.",
  "id": "5745476c56ccfef516a09c10",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-25T06:34:20.672Z",
  "text": "But first problem being: I don't know what data structures for different components will be there.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "For the coset-table itself: Matrix will be used?",
  "id": "5745477bfce033da4befc40b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-25T06:34:35.989Z",
  "text": "For the coset-table itself: Matrix will be used?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "There will be two phases in the construction of the coset table. One for running the algorithm and then another for output.",
  "id": "574547a356ccfef516a09c1f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-25T06:35:15.994Z",
  "text": "There will be two phases in the construction of the coset table. One for running the algorithm and then another for output.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I don&#39;t think Matrix would be suitable.",
  "id": "574547bccaaef2cd4fea867f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-25T06:35:40.166Z",
  "text": "I don't think Matrix would be suitable.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Or just list of lists?",
  "id": "574547d2cd96cbcf4f707685",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-25T06:36:02.198Z",
  "text": "Or just list of lists?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-25T06:41:11.564Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "In its current implementation it wants everything sympified.",
  "id": "574547da56ccfef516a09c2c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-25T06:36:10.855Z",
  "text": "In its current implementation it wants everything sympified.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think a list of lists is the solution.",
  "id": "574547f856ccfef516a09c31",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-25T06:36:40.802Z",
  "text": "I think a list of lists is the solution.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The inner lists would be of fixed length, twice the number of generators. ",
  "id": "5745482963e41bd84bf04093",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-25T06:37:29.985Z",
  "text": "The inner lists would be of fixed length, twice the number of generators. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The outer list could then grow as much as needed.",
  "id": "57454846fce033da4befc43e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-25T06:37:58.039Z",
  "text": "The outer list could then grow as much as needed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "You mean initially ignore the &quot;involutary generators&quot; possibility..",
  "id": "57454849cd96cbcf4f707694",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-25T06:38:01.771Z",
  "text": "You mean initially ignore the \"involutary generators\" possibility..",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "i.e generators of type &quot;x**2 = identity&quot; i.e of order 2.",
  "id": "5745485bfce033da4befc446",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-25T06:38:19.469Z",
  "text": "i.e generators of type \"x**2 = identity\" i.e of order 2.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think so. I don&#39;t think much would be saved in practice.",
  "id": "5745487ceed2f3f916a49468",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-25T06:38:52.446Z",
  "text": "I think so. I don't think much would be saved in practice.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I haven&#39;t implemented such a big algorithm in general before. So I am thinking whether it should follow a bottom-up or top-down approach?",
  "id": "574548c9fce033da4befc461",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-25T06:40:09.679Z",
  "text": "I haven't implemented such a big algorithm in general before. So I am thinking whether it should follow a bottom-up or top-down approach?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "My feeling is that this should be done bottom up.",
  "id": "574548f9eed2f3f916a4947e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-25T06:40:57.428Z",
  "text": "My feeling is that this should be done bottom up.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The top level will probably become clear only after the bottom is done at least to a certain level.",
  "id": "57454941cd96cbcf4f7076ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-25T06:42:09.528Z",
  "text": "The top level will probably become clear only after the bottom is done at least to a certain level.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay, seeing the methods mentioned in Derek Holt. On page Page 153 it mentions the pseudo-code for &quot;define&quot; method. Then on Page 155 it defines the pseudo-code for &quot;scan&quot; function.",
  "id": "574549ad56ccfef516a09c81",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-25T06:43:57.251Z",
  "text": "Okay, seeing the methods mentioned in Derek Holt. On page Page 153 it mentions the pseudo-code for \"define\" method. Then on Page 155 it defines the pseudo-code for \"scan\" function.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think you could start with those.",
  "id": "574549c4719c119b575bf604",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-25T06:44:20.761Z",
  "text": "I think you could start with those.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have added the above mentioned methods i.e &quot;define&quot; and &quot;scan&quot;, the documentation can be used to test the &quot;scan&quot; method. The in between calculations of &quot;when to introduce a new coset&quot; is &quot;not&quot; done. Probably this is the &quot;important part&quot;, when to introduce new cosets, seems like Felsch and HLT are made for these.",
  "id": "5745730aeed2f3f916a4a227",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-25T09:40:26.133Z",
  "text": "I have added the above mentioned methods i.e \"define\" and \"scan\", the documentation can be used to test the \"scan\" method. The in between calculations of \"when to introduce a new coset\" is \"not\" done. Probably this is the \"important part\", when to introduce new cosets, seems like Felsch and HLT are made for these.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think that is where the strategies differ.",
  "id": "574575d7caaef2cd4fea9599",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-25T09:52:23.822Z",
  "text": "I think that is where the strategies differ.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have added the &quot;scan_and_fill&quot; method which is also used by the Felsch method.",
  "id": "5745a99110f0fed86f47faae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-25T13:33:05.773Z",
  "text": "I have added the \"scan_and_fill\" method which is also used by the Felsch method.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "properties like that of <code>C.n</code>(max. value of coset assigned), <code>C.sigma</code> (used in Holt for denoting the set of &quot;live cosets&quot;), for any Coset Table &quot;C&quot; should be obtainable. How are we going to set these? I suppose that &quot;coset_table&quot; is going to be a method of <code>fp_group</code> class.",
  "id": "5745aaa010f0fed86f47fb5a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-05-25T13:37:36.637Z",
  "text": "properties like that of `C.n`(max. value of coset assigned), `C.sigma` (used in Holt for denoting the set of \"live cosets\"), for any Coset Table \"C\" should be obtainable. How are we going to set these? I suppose that \"coset_table\" is going to be a method of `fp_group` class.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Perhaps those can be set only after the algorithm has been developed further.",
  "id": "5745b3a4da3f93da6f201c7b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-25T14:16:04.562Z",
  "text": "Perhaps those can be set only after the algorithm has been developed further.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The set of &#39;living cosets&#39; need not be explicit. The entries (or rows?) of the table are linked together when the algorithm finds out that two defined cosets are actually the same. Living cosets are simply those whose link points to self. The set need not be formed explicitly. It is enough to proceed in the table from row to row and skip over those that are not active.",
  "id": "5745b4b780352f204df1f91c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-25T14:20:39.249Z",
  "text": "The set of 'living cosets' need not be explicit. The entries (or rows?) of the table are linked together when the algorithm finds out that two defined cosets are actually the same. Living cosets are simply those whose link points to self. The set need not be formed explicitly. It is enough to proceed in the table from row to row and skip over those that are not active.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-26T04:53:34.869Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "We have got one line in Derek which says &quot;it is convenient to start by computing the set <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>R</mi><mi>c</mi></msup></mrow><annotation encoding=\"application/x-tex\">R^c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.00773em;\">R</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord mathit\">c</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> of all cyclic conjugates of all elements of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>R</mi><mo>\u22c3</mo><mrow><msup><mi>R</mi><mo>\u2212</mo></msup><mn>1</mn></mrow></mrow><annotation encoding=\"application/x-tex\">R\\bigcup{R ^-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.771331em;\"></span><span class=\"strut bottom\" style=\"height:1.021341em;vertical-align:-0.25001em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.00773em;\">R</span><span class=\"op-symbol small-op mop\" style=\"top:-0.0000050000000000050004em;\">\u22c3</span><span class=\"mord textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.00773em;\">R</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord\">\u2212</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mord mathrm\">1</span></span></span></span></span>&quot;",
  "id": "5746812aa78d5a256e37ea48",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-26T04:52:58.295Z",
  "text": "We have got one line in Derek which says \"it is convenient to start by computing the set $$R^c$$ of all cyclic conjugates of all elements of $$R\\bigcup{R ^-1}$$\"",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "editedAt": "2016-05-26T04:57:46.996Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I think the &quot;cyclic conjugate&quot; is the same as &quot;cyclic permutation on words&quot; <a href=\"http://planetmath.org/cyclicpermutation\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://planetmath.org/cyclicpermutation</a> .",
  "id": "5746821c80352f204df23878",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-26T04:57:00.884Z",
  "text": "I think the \"cyclic conjugate\" is the same as \"cyclic permutation on words\" http://planetmath.org/cyclicpermutation .",
  "unread": false,
  "urls": [
   {
    "url": "http://planetmath.org/cyclicpermutation"
   }
  ],
  "v": 2
 },
 {
  "editedAt": "2016-05-26T04:59:54.943Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Here <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.00773em;\">R</span></span></span></span> is the set of relators. The line is on the page 165 under 5.2.2 last 2nd paragraph.",
  "id": "57468269ec10ddbb09dac974",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-26T04:58:17.969Z",
  "text": "Here $$R$$ is the set of relators. The line is on the page 165 under 5.2.2 last 2nd paragraph.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That may be useful, but perhaps we should not do that until it becomes clear how it would help.",
  "id": "5746830a454cb2be094f074e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-26T05:00:58.501Z",
  "text": "That may be useful, but perhaps we should not do that until it becomes clear how it would help.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "May be we could perform this operation, but not giving priority for the &quot;efficiency&quot; of computing the &quot;cyclic conjugates&quot;.",
  "id": "574683ebda3f93da6f205db2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-26T05:04:43.412Z",
  "text": "May be we could perform this operation, but not giving priority for the \"efficiency\" of computing the \"cyclic conjugates\".",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I&#39;ll have to think about that. On the surface it seems to multiply the number of relators.",
  "id": "574683fea78d5a256e37eab3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-26T05:05:02.941Z",
  "text": "I'll have to think about that. On the surface it seems to multiply the number of relators.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, it will.",
  "id": "5746842dda3f93da6f205dc5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-26T05:05:49.584Z",
  "text": "Yes, it will.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I&#39;ll try to read that part more carefully.",
  "id": "5746842e80352f204df238c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-26T05:05:50.857Z",
  "text": "I'll try to read that part more carefully.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-26T05:06:59.133Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "BTW are we going anyhow slow than we should go? In implementing things.",
  "id": "57468465da3f93da6f205dd3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-26T05:06:45.235Z",
  "text": "BTW are we going anyhow slow than we should go? In implementing things.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That will take a few hours since I have other tasks now in the morning.",
  "id": "5746847eec10ddbb09dac9d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-26T05:07:10.419Z",
  "text": "That will take a few hours since I have other tasks now in the morning.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I&#39;m not worried about the pace.",
  "id": "5746848fec10ddbb09dac9d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-26T05:07:27.102Z",
  "text": "I'm not worried about the pace.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay, I understand.",
  "id": "5746849ea78d5a256e37eace",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-26T05:07:42.981Z",
  "text": "Okay, I understand.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "But perhaps you could push even partly implemented code.",
  "id": "574684ad10f0fed86f48412b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-26T05:07:57.184Z",
  "text": "But perhaps you could push even partly implemented code.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "If we come to an understanding concerning the classes at an early phase, there would be less rewriting later.",
  "id": "5746851280352f204df238e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-26T05:09:38.991Z",
  "text": "If we come to an understanding concerning the classes at an early phase, there would be less rewriting later.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "After reading a little further I see that there are grounds for introducing the cyclic conjugates. The total number of relators is increased, but they are sorted into subset according to the initial generator. So maybe you could try to follow the pseudo-code at least for now.",
  "id": "5746bd2dec10ddbb09dad733",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-26T09:09:01.891Z",
  "text": "After reading a little further I see that there are grounds for introducing the cyclic conjugates. The total number of relators is increased, but they are sorted into subset according to the initial generator. So maybe you could try to follow the pseudo-code at least for now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-26T12:26:38.302Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I am looking at the Pg. 155 of Derek Holt, pseudo-code for scan line number 9-10 there is &quot;<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>b</mi><mrow><msup><mi>x</mi><mo>\u2212</mo></msup><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">b^{x^-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.9087649999999999em;\"></span><span class=\"strut bottom\" style=\"height:0.9087649999999999em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\">b</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\">x</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.07142857142857144em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-scriptstyle scriptscriptstyle uncramped\"><span class=\"mord\">\u2212</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mord mathrm\">1</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> is defined&quot;",
  "id": "5746eb6a454cb2be094f234d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-26T12:26:18.630Z",
  "text": "I am looking at the Pg. 155 of Derek Holt, pseudo-code for scan line number 9-10 there is \"$$b^{x^-1}$$ is defined\"",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I think I will comment on the PR itself.",
  "id": "5746ebe180352f204df2547a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-26T12:28:17.322Z",
  "text": "I think I will comment on the PR itself.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Looks like a typo. It should probably be <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msubsup><mi>x</mi><mi>j</mi><mrow><mo>\u2212</mo><mn>1</mn></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">x_j^{-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.854239em;\"></span><span class=\"strut bottom\" style=\"height:1.267211em;vertical-align:-0.412972em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\">x</span><span class=\"vlist\"><span style=\"top:0.276864em;margin-left:0em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\" style=\"margin-right:0.05724em;\">j</span></span></span><span style=\"top:-0.403131em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord\">\u2212</span><span class=\"mord mathrm\">1</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span>.",
  "id": "5746ef5dda3f93da6f207ba0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-26T12:43:09.617Z",
  "text": "Looks like a typo. It should probably be $$x_j^{-1}$$.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, that should be fine.",
  "id": "5746ef8a10f0fed86f485f66",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-26T12:43:54.428Z",
  "text": "Yes, that should be fine.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "On page 158. of Coincidence routine.",
  "id": "5747e662454cb2be094f6879",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-27T06:17:06.699Z",
  "text": "On page 158. of Coincidence routine.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "there is <code>omega = omega - {gamma}</code> so it removes the <code>gamma</code> from the coset table.",
  "id": "5747e6b6454cb2be094f6889",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-27T06:18:30.367Z",
  "text": "there is `omega = omega - {gamma}` so it removes the `gamma` from the coset table.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "And after that there is a loop <code>for x in A do if gamma^x is defined</code>.",
  "id": "5747e6e36bbc2d1d4deea172",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-27T06:19:15.966Z",
  "text": "And after that there is a loop `for x in A do if gamma^x is defined`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "This looks good to me. There are some points I think could be improved without essentially changing the logic.<ul>\n<li>Undefined slots in the coset table. Have you considered the use of<code>None</code> instead of -1? Sometimes -1 may lead to problems as Python will accept it as an index with no error indications.</li>\n<li>The list <code>A</code> seems to be always used in the form <code>A.index(x)</code>. <code>index</code> is an internal method of Python, but it still involves scanning the list each time. Maybe a dictionary containing all the items <code>x: A.index(x)</code> could be used instead of <code>A</code> as an argument in the methods.</li>\n<li>Is the use of <code>subword</code> necessary. If the word is input in the reduced form, it should be possible to pick the entry directly.</li>\n</ul>\n",
  "id": "5747e6fcec10ddbb09db2b79",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-27T06:19:40.090Z",
  "text": "This looks good to me. There are some points I think could be improved without essentially changing the logic.\n- Undefined slots in the coset table. Have you considered the use of`None` instead of -1? Sometimes -1 may lead to problems as Python will accept it as an index with no error indications.\n- The list `A` seems to be always used in the form `A.index(x)`. `index` is an internal method of Python, but it still involves scanning the list each time. Maybe a dictionary containing all the items `x: A.index(x)` could be used instead of `A` as an argument in the methods.\n- Is the use of `subword` necessary. If the word is input in the reduced form, it should be possible to pick the entry directly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I was in the middle of writing those. I&#39;ll consider your remarks.",
  "id": "5747e7286bbc2d1d4deea180",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-27T06:20:24.247Z",
  "text": "I was in the middle of writing those. I'll consider your remarks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I agree with the second point. I also remember reading that user should be given the freedom to chose the order of elements of list <code>A</code>. Since that could improve performance.",
  "id": "5747e79f6bbc2d1d4deea19c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-27T06:22:23.640Z",
  "text": "I agree with the second point. I also remember reading that user should be given the freedom to chose the order of elements of list `A`. Since that could improve performance.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-27T06:24:17.876Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "For the first point, using <code>None</code> would be a better option. As you mentioned, it will not allow bugs in the program to pass silently.",
  "id": "5747e80b10f0fed86f48a626",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-27T06:24:11.855Z",
  "text": "For the first point, using `None` would be a better option. As you mentioned, it will not allow bugs in the program to pass silently.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-05-27T06:27:43.518Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think the removal of <code>gamma</code>should be thought of figuratively. The actual removal means that it is linked with another entry.",
  "id": "5747e894454cb2be094f68e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-27T06:26:28.029Z",
  "text": "I think the removal of `gamma`should be thought of figuratively. The actual removal means that it is linked with another entry.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I will think over the third point. For what is a better option for that.",
  "id": "5747e894454cb2be094f68eb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-27T06:26:28.949Z",
  "text": "I will think over the third point. For what is a better option for that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "So <code>gamma</code>and all its data will remain safely in the table.",
  "id": "5747e8ffec10ddbb09db2beb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-27T06:28:15.788Z",
  "text": "So `gamma`and all its data will remain safely in the table.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "By the way, the linking system is still to be implemented. The simplest way would be a separate list containing all the links (or actually the index values). But then the list should probably be included in the argument lists.",
  "id": "5747eb0580352f204df299e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-27T06:36:53.730Z",
  "text": "By the way, the linking system is still to be implemented. The simplest way would be a separate list containing all the links (or actually the index values). But then the list should probably be included in the argument lists.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Another possibility could be adding the link to each coset row. This would probably mean that we should define <code>class Coset</code> with the link and the action list as attributes.",
  "id": "5747eba3da3f93da6f20c1c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-27T06:39:31.098Z",
  "text": "Another possibility could be adding the link to each coset row. This would probably mean that we should define `class Coset` with the link and the action list as attributes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That would also open the possibility of adding other data to each coset, for example, a word that would produce it from the 0 coset.",
  "id": "5747ec25ec10ddbb09db2c86",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-27T06:41:41.934Z",
  "text": "That would also open the possibility of adding other data to each coset, for example, a word that would produce it from the 0 coset.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I see that the list <code>p</code> is an argument in some functions. Maybe we should leave it as it is at least for now.",
  "id": "5747ed2580352f204df29a66",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-27T06:45:57.896Z",
  "text": "I see that the list `p` is an argument in some functions. Maybe we should leave it as it is at least for now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Is <code>deduction_stack</code>only pseudo-code for the moment?",
  "id": "5747ef79454cb2be094f6a1c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-27T06:55:53.559Z",
  "text": "Is `deduction_stack`only pseudo-code for the moment?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think we should construct some tests for <code>rep</code> and <code>merge</code>. A list <code>p</code> could be constructed by setting e.g. <code>p[k] = k</code> for a few small values of <code>k</code> up to some <code>k0</code> and then <code>p[k] = randint(k0, k)</code> for bigger <code>k.</code> (The list could be saved, or otherwise reproduced by setting <code>random.seed</code> to a fixed value.)",
  "id": "5747fd38da3f93da6f20c617",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-27T07:54:32.639Z",
  "text": "I think we should construct some tests for `rep` and `merge`. A list `p` could be constructed by setting e.g. `p[k] = k` for a few small values of `k` up to some `k0` and then `p[k] = randint(k0, k)` for bigger `k.` (The list could be saved, or otherwise reproduced by setting `random.seed` to a fixed value.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, deduction stack has to be implemented from code point of view, currently just pseudo-code.",
  "id": "574807af80352f204df2a0ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-27T08:39:11.457Z",
  "text": "Yes, deduction stack has to be implemented from code point of view, currently just pseudo-code.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, I started in the morning with <code>rep</code> and <code>merge</code> code working. I am making some fixes, which I will push after I test them a little more.",
  "id": "574807f0ec10ddbb09db338e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-27T08:40:16.296Z",
  "text": "Yes, I started in the morning with `rep` and `merge` code working. I am making some fixes, which I will push after I test them a little more.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-27T13:00:59.148Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Initially I introduced <a href=\"https://github.com/sympy/sympy/pull/11140/commits/0e8eb09a7c41438e1ad263895530bfdbcfc0c2cb#diff-2bca05fcc1cad2237c5589d92187d25cL176\" rel=\"nofollow\" target=\"_blank\" class=\"link\">this line</a> in my previous commits (but removed from latest commit) considering the line from Derek Holt, which says:<br>&quot;We assume that before each call of <code>COINCIDENCE</code>, for <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03b1</mi><mo>\u2208</mo><mo>[</mo><mn>1</mn><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi>n</mi><mo>]</mo></mrow><annotation encoding=\"application/x-tex\">\\alpha \\in [1..n]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mrel\">\u2208</span><span class=\"mopen\">[</span><span class=\"mord mathrm\">1</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mord mathit\">n</span><span class=\"mclose\">]</span></span></span></span>, we have <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi><mo>[</mo><mi>\u03b1</mi><mo>]</mo><mo>=</mo><mi>\u03b1</mi></mrow><annotation encoding=\"application/x-tex\">p[\\alpha]=\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">p</span><span class=\"mopen\">[</span><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mclose\">]</span><span class=\"mrel\">=</span><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span></span></span></span> iff <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03b1</mi><mo>\u2208</mo><mi mathvariant=\"normal\">\u03a9</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha \\in \\Omega</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mrel\">\u2208</span><span class=\"mord mathrm\">\u03a9</span></span></span></span>&quot;<br>Though there is no pseudo-code for this line in <code>scan</code> method in HandBook. I have removed this from latest commit. This brings a change in value of <code>p</code>.",
  "id": "574844a5a78d5a256e38693a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-27T12:59:17.651Z",
  "text": "Initially I introduced [this line](https://github.com/sympy/sympy/pull/11140/commits/0e8eb09a7c41438e1ad263895530bfdbcfc0c2cb#diff-2bca05fcc1cad2237c5589d92187d25cL176) in my previous commits (but removed from latest commit) considering the line from Derek Holt, which says:\n\"We assume that before each call of `COINCIDENCE`, for $$\\alpha \\in [1..n]$$, we have $$p[\\alpha]=\\alpha$$ iff $$\\alpha \\in \\Omega$$\"\nThough there is no pseudo-code for this line in `scan` method in HandBook. I have removed this from latest commit. This brings a change in value of `p`.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/11140/commits/0e8eb09a7c41438e1ad263895530bfdbcfc0c2cb#diff-2bca05fcc1cad2237c5589d92187d25cL176"
   }
  ],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I think, no need to make such an assignment. That task is accomplished by the &quot;Coincidence&quot; itself.<br>Also I have fixed the issue with the &quot;l&quot; assignment which I forgot to make.",
  "id": "574854ed80352f204df2b9b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-27T14:08:45.330Z",
  "text": "I think, no need to make such an assignment. That task is accomplished by the \"Coincidence\" itself.\nAlso I have fixed the issue with the \"l\" assignment which I forgot to make.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-27T14:13:53.364Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Currently things are little hard to code, since we have to separately take care of &quot;C&quot; parameters like &quot;n&quot;, &quot;p&quot;, ... Now one of the example given in the Derek is using the methods <code>scan</code>, <code>merge</code>, <code>ref</code>, <code>coincidence</code> methods to derive the result, which is given in the docs (the last example from docs). But still no use of <code>define</code> method. Perhaps that seems like the next task to me.",
  "id": "5748551d454cb2be094f8838",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-27T14:09:33.619Z",
  "text": "Currently things are little hard to code, since we have to separately take care of \"C\" parameters like \"n\", \"p\", ... Now one of the example given in the Derek is using the methods `scan`, `merge`, `ref`, `coincidence` methods to derive the result, which is given in the docs (the last example from docs). But still no use of `define` method. Perhaps that seems like the next task to me.",
  "unread": false,
  "urls": [],
  "v": 6
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "And adding the tests for <code>rep</code> and <code>merge</code>.",
  "id": "574855beda3f93da6f20e250",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-27T14:12:14.461Z",
  "text": "And adding the tests for `rep` and `merge`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems that <code>coincidence</code> is a function that should be carefully tested before proceeding.",
  "id": "5748625b454cb2be094f8d95",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-27T15:06:03.435Z",
  "text": "It seems that `coincidence` is a function that should be carefully tested before proceeding.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The tests of <code>scan</code> look good. They seem to take some space in the docstring but not necessarily much time in <code>doctest</code>,",
  "id": "57493d3c80352f204df2ee4a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-28T06:39:56.002Z",
  "text": "The tests of `scan` look good. They seem to take some space in the docstring but not necessarily much time in `doctest`,",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-28T12:15:31.375Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<a href=\"https://github.com/sympy/sympy/pull/11140/files#diff-2bca05fcc1cad2237c5589d92187d25cR196\" rel=\"nofollow\" target=\"_blank\" class=\"link\">The Example 5.4</a> from Derek Holt. I am not sure if the <code>coincidence</code> procedure is right in producing <a href=\"https://github.com/sympy/sympy/pull/11140/files#diff-2bca05fcc1cad2237c5589d92187d25cR248\" rel=\"nofollow\" target=\"_blank\" class=\"link\">the final value</a> which it produces. But the point being, the value of <code>p</code> changes to <code>[0, 0, 0]</code> which obviously implies the group is trivial, leading to removal of <code>1, 2</code> from coset-table i.e from <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"normal\">\u03a9</mi></mrow><annotation encoding=\"application/x-tex\">\\Omega</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathrm\">\u03a9</span></span></span></span>.",
  "id": "57498bc4f44fde236e513465",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-28T12:15:00.375Z",
  "text": "[The Example 5.4](https://github.com/sympy/sympy/pull/11140/files#diff-2bca05fcc1cad2237c5589d92187d25cR196) from Derek Holt. I am not sure if the `coincidence` procedure is right in producing [the final value](https://github.com/sympy/sympy/pull/11140/files#diff-2bca05fcc1cad2237c5589d92187d25cR248) which it produces. But the point being, the value of `p` changes to `[0, 0, 0]` which obviously implies the group is trivial, leading to removal of `1, 2` from coset-table i.e from $$\\Omega$$.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/11140/files#diff-2bca05fcc1cad2237c5589d92187d25cR196"
   },
   {
    "url": "https://github.com/sympy/sympy/pull/11140/files#diff-2bca05fcc1cad2237c5589d92187d25cR248"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I believe logically the program is running correctly. I haven&#39;t added the tests for <code>rep</code>, <code>merge</code> though, but considering the <a href=\"https://github.com/sympy/sympy/pull/11140/files#diff-2bca05fcc1cad2237c5589d92187d25cR149\" rel=\"nofollow\" target=\"_blank\" class=\"link\">Example 5.3</a> and <a href=\"https://github.com/sympy/sympy/pull/11140/files#diff-2bca05fcc1cad2237c5589d92187d25cR196\" rel=\"nofollow\" target=\"_blank\" class=\"link\">Example 5.4</a> which makes use of the <code>rep</code>, <code>merge</code>, <code>scan</code>, <code>coincidence</code> routine.<br>The comments you said like &quot;change from i, l to q.pop(0)&quot; comments and <code>A.subword(i, i+1)</code> ... are still to be addressed. But are we to move to the part of strategies (i.e Felsch, HLT)?",
  "id": "57498f5810f0fed86f490840",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-28T12:30:16.993Z",
  "text": "I believe logically the program is running correctly. I haven't added the tests for `rep`, `merge` though, but considering the [Example 5.3](https://github.com/sympy/sympy/pull/11140/files#diff-2bca05fcc1cad2237c5589d92187d25cR149) and [Example 5.4](https://github.com/sympy/sympy/pull/11140/files#diff-2bca05fcc1cad2237c5589d92187d25cR196) which makes use of the `rep`, `merge`, `scan`, `coincidence` routine.\nThe comments you said like \"change from i, l to q.pop(0)\" comments and `A.subword(i, i+1)` ... are still to be addressed. But are we to move to the part of strategies (i.e Felsch, HLT)?",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/11140/files#diff-2bca05fcc1cad2237c5589d92187d25cR149"
   },
   {
    "url": "https://github.com/sympy/sympy/pull/11140/files#diff-2bca05fcc1cad2237c5589d92187d25cR196"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Maybe it won&#39;t be necessary to add special tests for <code>rep</code> and <code>merge</code> as it seems that they are working fairly well. I was afraid that testing would be harder and therefore wanted to be sure that at least these little functions could be relied on.",
  "id": "574996f6ec10ddbb09db8d90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-28T13:02:46.136Z",
  "text": "Maybe it won't be necessary to add special tests for `rep` and `merge` as it seems that they are working fairly well. I was afraid that testing would be harder and therefore wanted to be sure that at least these little functions could be relied on.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "So move onto the strategies, or better first make a class <code>Coset Table</code> first?",
  "id": "57499754a78d5a256e38b17b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-28T13:04:20.527Z",
  "text": "So move onto the strategies, or better first make a class `Coset Table` first?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I believe we can go first straight to the strategies, then see for the <code>Coset Table</code> class.",
  "id": "5749978c80352f204df2fab6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-28T13:05:16.368Z",
  "text": "I believe we can go first straight to the strategies, then see for the `Coset Table` class.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I&#39;d prefer to wait a little before proceeding to the strategies. Changes are probably easier to make now.",
  "id": "5749978e10f0fed86f49098a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-28T13:05:18.878Z",
  "text": "I'd prefer to wait a little before proceeding to the strategies. Changes are probably easier to make now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-28T13:06:34.058Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Ohk.",
  "id": "574997c380352f204df2fac4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-28T13:06:11.540Z",
  "text": "Ohk.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I&#39;ll look into the example with trivial result. But that will be tomorrow. We are expecting visitors.",
  "id": "5749982f454cb2be094fc9c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-28T13:07:59.000Z",
  "text": "I'll look into the example with trivial result. But that will be tomorrow. We are expecting visitors.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "That will be fine. :)",
  "id": "57499852a78d5a256e38b1a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-28T13:08:34.406Z",
  "text": "That will be fine. :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-28T13:10:12.794Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "In the university or personal? I mean professional meet.",
  "id": "574998a0ec10ddbb09db8de6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-28T13:09:52.294Z",
  "text": "In the university or personal? I mean professional meet.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "No. My son with his family.",
  "id": "57499921da3f93da6f212504",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-28T13:12:01.612Z",
  "text": "No. My son with his family.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Have a great time. Thank you for the suggestions regarding ongoing PR&#39;s.",
  "id": "574999f6ec10ddbb09db8e2e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-28T13:15:34.123Z",
  "text": "Have a great time. Thank you for the suggestions regarding ongoing PR's.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-29T09:31:14.348Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems that the result of Example 5.4 is correct. The text says that the Fibonacci group in question is cyclic of prime order 11. It is a group with no nontrivial subgroups. So H is the whole group G and there is only one coset.",
  "id": "574ab6d3454cb2be094ff0e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-29T09:30:59.081Z",
  "text": "It seems that the result of Example 5.4 is correct. The text says that the Fibonacci group in question is cyclic of prime order 11. It is a group with no nontrivial subgroups. So H is the whole group G and there is only one coset.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "BTW, this letter <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"normal\">\u03a9</mi></mrow><annotation encoding=\"application/x-tex\">\\Omega</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathrm\">\u03a9</span></span></span></span> is omega. Sigma looks like this <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"normal\">\u03a3</mi></mrow><annotation encoding=\"application/x-tex\">\\Sigma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathrm\">\u03a3</span></span></span></span>.",
  "id": "574ab821f44fde236e515e69",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-29T09:36:33.577Z",
  "text": "BTW, this letter $$\\Omega$$ is omega. Sigma looks like this $$\\Sigma$$.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Sorry about that. I mistakenly wrote that.",
  "id": "574abcb2ec10ddbb09dbb528",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-29T09:56:02.054Z",
  "text": "Sorry about that. I mistakenly wrote that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think that although the coset table is, basically, a &#39;list of lists&#39;, it need not be a subclass of <code>list</code>. Why not just define the action list <code>A</code> and the auxiliary link list <code>p</code> as attributes.",
  "id": "574ae1edda3f93da6f215185",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-29T12:34:53.262Z",
  "text": "I think that although the coset table is, basically, a 'list of lists', it need not be a subclass of `list`. Why not just define the action list `A` and the auxiliary link list `p` as attributes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-29T12:48:10.431Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, I think that will be better. I will still think more about it. As a side note: I have added two examples (the ones from Derek Holt) for the HLT strategy based enumerator which is executed with <code>coset_enumerator_r</code>, the other one <code>coset_enumerator_c</code> is still to have any progress (i.e Felsch), though I could get an idea of when you meant the &quot;memory usage&quot; for the two strategies, seeing the <code>C.p</code> values for the same example.",
  "id": "574ae415ec10ddbb09dbba24",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-29T12:44:05.619Z",
  "text": "Yes, I think that will be better. I will still think more about it. As a side note: I have added two examples (the ones from Derek Holt) for the HLT strategy based enumerator which is executed with `coset_enumerator_r`, the other one `coset_enumerator_c` is still to have any progress (i.e Felsch), though I could get an idea of when you meant the \"memory usage\" for the two strategies, seeing the `C.p` values for the same example.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-05-29T17:32:33.399Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<blockquote>\n<p>Why not just define the action list A and the auxiliary link list p as attributes.</p></blockquote>\n<p>You mean this <code>A</code> is list of lists, different from <code>A</code>which has been currently defined as a list of generators and their inverses, right?</p>",
  "id": "574b2791f44fde236e516ea4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-29T17:32:01.955Z",
  "text": "> Why not just define the action list A and the auxiliary link list p as attributes.\n\nYou mean this `A` is list of lists, different from `A`which has been currently defined as a list of generators and their inverses, right?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-05-29T17:39:02.941Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Or probably you meant &quot;action list&quot; for <code>A</code> in group theory sense of &quot;right action&quot; by elements of <code>A</code>?",
  "id": "574b2907a78d5a256e38e9c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-29T17:38:15.098Z",
  "text": "Or probably you meant \"action list\" for `A` in group theory sense of \"right action\" by elements of `A`?",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Ohk, I too will shut down for today. Will see that tomorrow.",
  "id": "574b2fbaec10ddbb09dbc6d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-29T18:06:50.481Z",
  "text": "Ohk, I too will shut down for today. Will see that tomorrow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "My mistake. I forgot that <code>A</code> was the list of generators and their inverses. What I meant, of course, was the main list of lists. But I think you got it right.",
  "id": "574b3c29ec10ddbb09dbc918",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-29T18:59:53.105Z",
  "text": "My mistake. I forgot that `A` was the list of generators and their inverses. What I meant, of course, was the main list of lists. But I think you got it right.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-30T04:25:43.664Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have made this change. Apparently, there seems to be a problem for when <code>H = [x*y]</code>, to generalize it when the generator list &quot;element&quot; of subgroup is of <code>length &gt; 1</code> (in this case <code>len(x*y) = 2</code>) then <code>HLT</code> doesn&#39;t seem to be working fine. The behaviour can be verified from the Example 5.1, Example 5.2, Example 5.3, Example 5.4 of which only Example 5.2 is not working wrongly.",
  "id": "574bc034da3f93da6f2176c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T04:23:16.463Z",
  "text": "I have made this change. Apparently, there seems to be a problem for when `H = [x*y]`, to generalize it when the generator list \"element\" of subgroup is of `length > 1` (in this case `len(x*y) = 2`) then `HLT` doesn't seem to be working fine. The behaviour can be verified from the Example 5.1, Example 5.2, Example 5.3, Example 5.4 of which only Example 5.2 is not working wrongly.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "editedAt": "2016-05-30T04:38:23.955Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "For Example5.2 I think I could sense the reason for this could be the representation of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mi>x</mi><mo>\u2217</mo><mi>y</mi><msup><mo>)</mo><mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">(x*y)^3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.8141079999999999em;\"></span><span class=\"strut bottom\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mopen\">(</span><span class=\"mord mathit\">x</span><span class=\"mbin\">\u2217</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord mathrm\">3</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> is expanded to <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi><mo>\u2217</mo><mi>y</mi><mo>\u2217</mo><mi>x</mi><mo>\u2217</mo><mi>y</mi><mo>\u2217</mo><mi>x</mi><mo>\u2217</mo><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">x*y*x*y*x*y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.46528em;\"></span><span class=\"strut bottom\" style=\"height:0.6597200000000001em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">x</span><span class=\"mbin\">\u2217</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"mbin\">\u2217</span><span class=\"mord mathit\">x</span><span class=\"mbin\">\u2217</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"mbin\">\u2217</span><span class=\"mord mathit\">x</span><span class=\"mbin\">\u2217</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span></span></span></span> which in computational way doesn&#39;t see it as <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi><mo>\u2217</mo><mi>y</mi><mo>\u2208</mo><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">x*y \\in H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">x</span><span class=\"mbin\">\u2217</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"mrel\">\u2208</span><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span></span></span></span>, rather makes a new definition of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>1</mn><mo>\u2217</mo><mi>x</mi><mo>\u2217</mo><mi>y</mi><mo>=</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">1*x*y = 3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.64444em;\"></span><span class=\"strut bottom\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathrm\">1</span><span class=\"mbin\">\u2217</span><span class=\"mord mathit\">x</span><span class=\"mbin\">\u2217</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"mrel\">=</span><span class=\"mord mathrm\">3</span></span></span></span> in <a href=\"https://github.com/sympy/sympy/pull/11140/files#diff-2bca05fcc1cad2237c5589d92187d25cR580\" rel=\"nofollow\" target=\"_blank\" class=\"link\">program here</a>. Otherwise the same group with <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi><mo>=</mo><mo>[</mo><mi>x</mi><mo>]</mo></mrow><annotation encoding=\"application/x-tex\">H = [x]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span><span class=\"mrel\">=</span><span class=\"mopen\">[</span><span class=\"mord mathit\">x</span><span class=\"mclose\">]</span></span></span></span> or <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi><mo>=</mo><mo>[</mo><mi>y</mi><mo>]</mo></mrow><annotation encoding=\"application/x-tex\">H = [y]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span><span class=\"mrel\">=</span><span class=\"mopen\">[</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">]</span></span></span></span> seems to be working fine.",
  "id": "574bc32a10f0fed86f495c27",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T04:35:54.495Z",
  "text": "For Example5.2 I think I could sense the reason for this could be the representation of $$(x*y)^3$$ is expanded to $$x*y*x*y*x*y$$ which in computational way doesn't see it as $$x*y \\in H$$, rather makes a new definition of $$1*x*y = 3$$ in [program here](https://github.com/sympy/sympy/pull/11140/files#diff-2bca05fcc1cad2237c5589d92187d25cR580). Otherwise the same group with $$H = [x]$$ or $$H = [y]$$ seems to be working fine.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/11140/files#diff-2bca05fcc1cad2237c5589d92187d25cR580"
   }
  ],
  "v": 7
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "<blockquote>\nScanning 1 under the subgroup generator xy yields the deduction<br><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mn>2</mn><mi>y</mi></msup><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><msup><mn>1</mn><mrow><msup><mi>y</mi><mrow><mo>\u2212</mo><mn>1</mn></mrow></msup></mrow></msup><mo>=</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2^y=1, 1^{y^{-1}} = 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.9393199999999999em;\"></span><span class=\"strut bottom\" style=\"height:1.1337599999999999em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mrel\">=</span><span class=\"mord mathrm\">1</span><span class=\"mpunct\">,</span><span class=\"mord\"><span class=\"mord mathrm\">1</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.07142857142857144em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-scriptstyle scriptscriptstyle uncramped\"><span class=\"mord scriptscriptstyle uncramped\"><span class=\"mord\">\u2212</span><span class=\"mord mathrm\">1</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mrel\">=</span><span class=\"mord mathrm\">2</span></span></span></span>.</blockquote>\n",
  "id": "574bcdb66bbc2d1d4def5402",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T05:20:54.721Z",
  "text": "> Scanning 1 under the subgroup generator xy yields the deduction\n$$2^y=1, 1^{y^{-1}} = 2$$.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-30T05:22:27.741Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Is is possibly this part that you find problematic?",
  "id": "574bcdcba78d5a256e390502",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T05:21:15.672Z",
  "text": "Is is possibly this part that you find problematic?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think we should arrive at <a href=\"https://github.com/sympy/sympy/pull/11140/files#diff-2bca05fcc1cad2237c5589d92187d25cR566\" rel=\"nofollow\" target=\"_blank\" class=\"link\">this line</a> instead of the one you pointed out above.",
  "id": "574bcf3110f0fed86f495ddc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T05:27:13.126Z",
  "text": "I think we should arrive at [this line](https://github.com/sympy/sympy/pull/11140/files#diff-2bca05fcc1cad2237c5589d92187d25cR566) instead of the one you pointed out above.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/11140/files#diff-2bca05fcc1cad2237c5589d92187d25cR566"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, that seems to be the problematic part.",
  "id": "574bd25aa78d5a256e3905ad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T05:40:42.929Z",
  "text": "Yes, that seems to be the problematic part.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Looking at the code, there should be no problem. The length <code>r</code> is equal to 2. Hence <a href=\"https://github.com/sympy/sympy/pull/11140/files#diff-2bca05fcc1cad2237c5589d92187d25cR564\" rel=\"nofollow\" target=\"_blank\" class=\"link\">this test</a> should fire.",
  "id": "574bd3ccda3f93da6f21795c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T05:46:52.940Z",
  "text": "Looking at the code, there should be no problem. The length `r` is equal to 2. Hence [this test](https://github.com/sympy/sympy/pull/11140/files#diff-2bca05fcc1cad2237c5589d92187d25cR564) should fire.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/11140/files#diff-2bca05fcc1cad2237c5589d92187d25cR564"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Is is possible that the next <code>return</code> has wrong indentation. We should be returning in any case.",
  "id": "574bd49480352f204df34cc2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T05:50:12.554Z",
  "text": "Is is possible that the next `return` has wrong indentation. We should be returning in any case.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Can you paste here the steps that are needed to repeat the example. I&#39;ll try to look into it in more detail.",
  "id": "574bd544f44fde236e518a9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T05:53:08.314Z",
  "text": "Can you paste here the steps that are needed to repeat the example. I'll try to look into it in more detail.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, I am pasting.",
  "id": "574bd5586bbc2d1d4def54f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T05:53:28.858Z",
  "text": "Yes, I am pasting.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<pre><code><span class=\"prompt\">&gt;&gt;</span>&gt; from sympy.combinatorics.free_group import free_group\n<span class=\"prompt\">&gt;&gt;</span>&gt; from sympy.combinatorics.fp_groups import <span class=\"constant\">FpGroup</span>, coset_enumeration_r, <span class=\"constant\">CosetTable</span>\n<span class=\"prompt\">&gt;&gt;</span>&gt; <span class=\"constant\">F</span>, x, y = free_group(<span class=\"string\">\"x, y\"</span>)\n<span class=\"prompt\">&gt;&gt;</span>&gt; f = <span class=\"constant\">FpGroup</span>(<span class=\"constant\">F</span>, [x**<span class=\"number\">2</span>, y**<span class=\"number\">3</span>, (x*y)**<span class=\"number\">3</span>])\n<span class=\"prompt\">&gt;&gt;</span>&gt; <span class=\"constant\">Y</span> = [x*y]\n<span class=\"prompt\">&gt;&gt;</span>&gt; <span class=\"constant\">C</span> = coset_enumeration_r(f, <span class=\"constant\">Y</span>)\n<span class=\"prompt\">&gt;&gt;</span>&gt; <span class=\"constant\">C</span>.table\n<span class=\"comment\"># this will return the table</span></code></pre>",
  "id": "574bd5d5da3f93da6f2179b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T05:55:33.514Z",
  "text": "```\n>>> from sympy.combinatorics.free_group import free_group\n>>> from sympy.combinatorics.fp_groups import FpGroup, coset_enumeration_r, CosetTable\n>>> F, x, y = free_group(\"x, y\")\n>>> f = FpGroup(F, [x**2, y**3, (x*y)**3])\n>>> Y = [x*y]\n>>> C = coset_enumeration_r(f, Y)\n>>> C.table\n# this will return the table\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "As for refinement, I will paste another one.",
  "id": "574bd5f1da3f93da6f2179bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T05:56:01.054Z",
  "text": "As for refinement, I will paste another one.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-30T05:58:18.171Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<pre><code><span class=\"comment\"># these are the steps that happen internally</span>\n<span class=\"prompt\">&gt;&gt;</span>&gt; <span class=\"constant\">C</span> = <span class=\"constant\">CosetTable</span>(f, <span class=\"constant\">Y</span>)\n<span class=\"prompt\">&gt;&gt;</span>&gt; <span class=\"constant\">C</span>.scan_and_fill(<span class=\"number\">0</span>, x*y)\n<span class=\"prompt\">&gt;&gt;</span>&gt; <span class=\"constant\">C</span>.scan_and_fill(<span class=\"number\">0</span>, x**<span class=\"number\">2</span>)\n<span class=\"prompt\">&gt;&gt;</span>&gt; <span class=\"constant\">C</span>.scan_and_fill(<span class=\"number\">0</span>, y**<span class=\"number\">3</span>)\n<span class=\"prompt\">&gt;&gt;</span>&gt; <span class=\"constant\">C</span>.scan_and_fill(<span class=\"number\">0</span>, (x*y)**<span class=\"number\">3</span>)\n<span class=\"comment\"># till now coset table is fine.</span>\n<span class=\"comment\"># here the coset table returned is wrong.</span></code></pre>",
  "id": "574bd644a78d5a256e390625",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T05:57:24.805Z",
  "text": "```\n# these are the steps that happen internally\n>>> C = CosetTable(f, Y)\n>>> C.scan_and_fill(0, x*y)\n>>> C.scan_and_fill(0, x**2)\n>>> C.scan_and_fill(0, y**3)\n>>> C.scan_and_fill(0, (x*y)**3)\n# till now coset table is fine.\n# here the coset table returned is wrong.\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I tested with isympy and got this. Maybe some indication of encoding should be added.",
  "id": "574bd6be454cb2be09501ced",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T05:59:26.504Z",
  "text": "I tested with isympy and got this. Maybe some indication of encoding should be added.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "<code>SyntaxError: Non-ASCII character &#39;\\xce&#39; in file /home/jks/test/sympy/sympy/combinatorics/fp_groups.py on line 79, but no encoding declared; see http://www.python.org/peps/pep-0263.html for details</code>",
  "id": "574bd6d6a78d5a256e390641",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T05:59:50.946Z",
  "text": "```SyntaxError: Non-ASCII character '\\xce' in file /home/jks/test/sympy/sympy/combinatorics/fp_groups.py on line 79, but no encoding declared; see http://www.python.org/peps/pep-0263.html for details\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That is only in the docstring.",
  "id": "574bd738a78d5a256e390655",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T06:01:28.903Z",
  "text": "That is only in the docstring.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-30T06:03:14.068Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I used in comments <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03b1</mi><mo>\u2208</mo><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha \\in c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.5391em;\"></span><span class=\"strut bottom\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mrel\">\u2208</span><span class=\"mord mathit\">c</span></span></span></span>. Using the pretty printing generated by SymPy. Sorry will remove that.",
  "id": "574bd778da3f93da6f2179fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T06:02:32.289Z",
  "text": "I used in comments $$\\alpha \\in c$$. Using the pretty printing generated by SymPy. Sorry will remove that.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Is there anything more that could help if I paste?",
  "id": "574bd801ec10ddbb09dbe130",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T06:04:49.033Z",
  "text": "Is there anything more that could help if I paste?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Maybe something like that could be used in docstrings. This may also be a problem only in Python 2.",
  "id": "574bd810454cb2be09501d23",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T06:05:04.387Z",
  "text": "Maybe something like that could be used in docstrings. This may also be a problem only in Python 2.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Those lines should suffice for now.",
  "id": "574bd83cf44fde236e518b17",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T06:05:48.665Z",
  "text": "Those lines should suffice for now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I will correct the docstrings if that creates a problem for you while testing. (I don&#39;t test using the docstrings).",
  "id": "574bd88c10f0fed86f495f33",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T06:07:08.902Z",
  "text": "I will correct the docstrings if that creates a problem for you while testing. (I don't test using the docstrings).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I know a lot of errors are currently generated.",
  "id": "574bd89a454cb2be09501d3d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T06:07:22.997Z",
  "text": "I know a lot of errors are currently generated.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Neither am I, but my Python 2.7 seems more sensitive than yours.",
  "id": "574bd8bdf44fde236e518b2f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T06:07:57.426Z",
  "text": "Neither am I, but my Python 2.7 seems more sensitive than yours.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "One possibility would be to add the encoding comment as the first line in the file. But if that alpha was the only one, it may be cleaner to just change it.",
  "id": "574bd90e80352f204df34d86",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T06:09:18.948Z",
  "text": "One possibility would be to add the encoding comment as the first line in the file. But if that alpha was the only one, it may be cleaner to just change it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-30T06:11:47.039Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "There are more than that. Yes, your python version is more sensitive. Mine Python3.4 doesn&#39;t generate such errors.",
  "id": "574bd937454cb2be09501d5e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T06:09:59.848Z",
  "text": "There are more than that. Yes, your python version is more sensitive. Mine Python3.4 doesn't generate such errors.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think the coding is unicode. So perhaps the easiest solution would be to add the first line <code># coding=utf-8</code>",
  "id": "574bdc4e10f0fed86f495fed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T06:23:10.326Z",
  "text": "I think the coding is unicode. So perhaps the easiest solution would be to add the first line `# coding=utf-8`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I can then test if it works with 2.7.",
  "id": "574bdc75454cb2be09501e06",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T06:23:49.948Z",
  "text": "I can then test if it works with 2.7.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Or, I can do it just now...",
  "id": "574bdc94a78d5a256e39074f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T06:24:20.175Z",
  "text": "Or, I can do it just now...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Yes, it works fine. You can add it.",
  "id": "574bdce280352f204df34e46",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T06:25:38.898Z",
  "text": "Yes, it works fine. You can add it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-30T06:53:07.312Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Your code seems to differ from that in the book in one significant aspect. In the book, <code>scan_and_fill</code> loops until it has filled the alpha row in the table. (&quot;Make a new definition and continue with scan.&quot;) Your code returns after one definition.",
  "id": "574be32410f0fed86f49612c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T06:52:20.764Z",
  "text": "Your code seems to differ from that in the book in one significant aspect. In the book, `scan_and_fill` loops until it has filled the alpha row in the table. (\"Make a new definition and continue with scan.\") Your code returns after one definition.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-05-30T08:39:09.470Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I believe you are right. I remember removing the <code>while</code> loop myself (some testing purpose). I have added some &quot;examples&quot; from <code>1973chwd.pdf</code> (from the paper which has Lookahead explanation).",
  "id": "574bfc0ba78d5a256e390e81",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-30T08:38:35.702Z",
  "text": "I believe you are right. I remember removing the `while` loop myself (some testing purpose). I have added some \"examples\" from `1973chwd.pdf` (from the paper which has Lookahead explanation).",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Good morning! I wonder if you missed <a href=\"https://github.com/sympy/sympy/pull/11140#discussion-diff-64984839\" rel=\"nofollow\" target=\"_blank\" class=\"link\">my comment</a> about <code>q</code> as a queue in <code>coincidence</code>. It seems that github sometimes declares a comment &#39;outdated&#39; even if it is not. (Apparently that happens when the comment is added to &#39;View changes&#39;.)",
  "id": "574d22b96bbc2d1d4defa67a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-31T05:35:53.893Z",
  "text": "Good morning! I wonder if you missed [my comment](https://github.com/sympy/sympy/pull/11140#discussion-diff-64984839) about `q` as a queue in `coincidence`. It seems that github sometimes declares a comment 'outdated' even if it is not. (Apparently that happens when the comment is added to 'View changes'.)",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/11140#discussion-diff-64984839"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Good morning. I am sorry, after yesterday I got a little busy. I will get to that. Sorry again.",
  "id": "574d25f5da3f93da6f21cc9e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-31T05:49:41.830Z",
  "text": "Good morning. I am sorry, after yesterday I got a little busy. I will get to that. Sorry again.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-31T06:01:15.464Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think you are getting on very nicely. Even more code than what I had expected at this point. I just try to make myself check everything before attacking the harder problems.",
  "id": "574d2888ec10ddbb09dc322f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-05-31T06:00:40.343Z",
  "text": "I think you are getting on very nicely. Even more code than what I had expected at this point. I just try to make myself check everything before attacking the harder problems.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-05-31T06:59:59.786Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I do remember a few more of comments (which mentioned) which I haven&#39;t fixed. Ex. the one of <code>.subword(i, i+1)</code> usage, I remember them. For now I have pushed the <code>q</code> as queue usage.",
  "id": "574d366080352f204df3a248",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-31T06:59:44.165Z",
  "text": "I do remember a few more of comments (which mentioned) which I haven't fixed. Ex. the one of `.subword(i, i+1)` usage, I remember them. For now I have pushed the `q` as queue usage.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-05-31T09:06:12.789Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "The two points:<ul>\n<li>using <code>q</code> as a queue</li>\n<li><code>A_dict[x]</code> instead of <code>A.index(x)</code><br>surely do make the algorithm a little fast.</li>\n</ul>\n",
  "id": "574d53fdec10ddbb09dc3e7a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-31T09:06:05.027Z",
  "text": "The two points:\n* using `q` as a queue\n* `A_dict[x]` instead of `A.index(x)`\nsurely do make the algorithm a little fast.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "You probably use <code>subword</code> because the word is not necessarily reduced (i.e., power other than 1 and -1 may appear). I think the argument word to <code>scan</code> and similar internal methods should always be reduced. Then one could use ordinary list notation instead of <code>subword</code>.",
  "id": "574d55fb80352f204df3ac0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-31T09:14:35.320Z",
  "text": "You probably use `subword` because the word is not necessarily reduced (i.e., power other than 1 and -1 may appear). I think the argument word to `scan` and similar internal methods should always be reduced. Then one could use ordinary list notation instead of `subword`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "No one can&#39;t do so right now. Since for ex. with <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>w</mi><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup><mo>\u2217</mo><msup><mi>y</mi><mn>5</mn></msup><mo>\u2217</mo><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">w = x^2*y^5*x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.8141079999999999em;\"></span><span class=\"strut bottom\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.02691em;\">w</span><span class=\"mrel\">=</span><span class=\"mord\"><span class=\"mord mathit\">x</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord mathrm\">2</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mbin\">\u2217</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord mathrm\">5</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mbin\">\u2217</span><span class=\"mord mathit\">x</span></span></span></span> we have <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>w</mi><mo>[</mo><mn>1</mn><mo>]</mo></mrow><annotation encoding=\"application/x-tex\">w[1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.02691em;\">w</span><span class=\"mopen\">[</span><span class=\"mord mathrm\">1</span><span class=\"mclose\">]</span></span></span></span> returns <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mi>y</mi><mo separator=\"true\">,</mo><mn>5</mn><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">(y, 5)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mord mathrm\">5</span><span class=\"mclose\">)</span></span></span></span> not <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">x</span></span></span></span> as one may expect.",
  "id": "574d567e10f0fed86f49c129",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-31T09:16:46.750Z",
  "text": "No one can't do so right now. Since for ex. with $$w = x^2*y^5*x$$ we have $$w[1]$$ returns $$(y, 5)$$ not $$x$$ as one may expect.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-31T09:18:31.080Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I will probably have to add the <code>__index__</code> method of <code>FreeGroupElm</code> or introduce other method for such a behavior, may be.",
  "id": "574d56ce454cb2be09507bac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-31T09:18:06.017Z",
  "text": "I will probably have to add the `__index__` method of `FreeGroupElm` or introduce other method for such a behavior, may be.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "And I do assume words to be already reduced.",
  "id": "574d57b36bbc2d1d4defb4de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-31T09:21:55.893Z",
  "text": "And I do assume words to be already reduced.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "You probably have to define a method for expanding a word into a &#39;word&#39; that is a list containing only generators and their inverses. The methods having such lists as arguments would know how to deal with them. This is what I intended to be the meaning of &#39;reduced&#39;.",
  "id": "574d5803454cb2be09507c2e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-31T09:23:15.587Z",
  "text": "You probably have to define a method for expanding a word into a 'word' that is a list containing only generators and their inverses. The methods having such lists as arguments would know how to deal with them. This is what I intended to be the meaning of 'reduced'.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Probably will add that to the documentation of <code>FreeGroupElm</code>.",
  "id": "574d5806a78d5a256e396769",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-31T09:23:18.639Z",
  "text": "Probably will add that to the documentation of `FreeGroupElm`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The idea is that no calls would be needed to extract a generator (or inverse generator) from the &#39;word&#39;.",
  "id": "574d584bda3f93da6f21db14",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-31T09:24:27.222Z",
  "text": "The idea is that no calls would be needed to extract a generator (or inverse generator) from the 'word'.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Ohk, I understand. Will change the current behaviour using the <code>__index__</code> method.",
  "id": "574d58a2da3f93da6f21db30",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-31T09:25:54.847Z",
  "text": "Ohk, I understand. Will change the current behaviour using the `__index__` method.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The word &#39;reduced&#39; may have been a bad choice on my part. Perhaps it  should rather be &#39;expanded&#39;.",
  "id": "574d58b0da3f93da6f21db39",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-31T09:26:08.969Z",
  "text": "The word 'reduced' may have been a bad choice on my part. Perhaps it  should rather be 'expanded'.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "&#39;expanded&#39; but with no redundancies.",
  "id": "574d58c5ec10ddbb09dc4044",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-31T09:26:29.857Z",
  "text": "'expanded' but with no redundancies.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "So no consecutive generator and its inverse.",
  "id": "574d58e4ec10ddbb09dc404d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-31T09:27:00.312Z",
  "text": "So no consecutive generator and its inverse.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes. I understood all along what you meant for the meaning of <code>reduced</code>.",
  "id": "574d58e46bbc2d1d4defb548",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-31T09:27:00.715Z",
  "text": "Yes. I understood all along what you meant for the meaning of `reduced`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Ok. I hope it would not be hard to implement.",
  "id": "574d590010f0fed86f49c20a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-31T09:27:28.099Z",
  "text": "Ok. I hope it would not be hard to implement.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-31T09:29:10.639Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Also should I make a test file now? For the &quot;Coset Table&quot; <code>test_fp_groups.py</code>",
  "id": "574d594d10f0fed86f49c230",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-31T09:28:45.454Z",
  "text": "Also should I make a test file now? For the \"Coset Table\" `test_fp_groups.py`",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I will next see for the things that still remain to be done in the &quot;HLT&quot; method.",
  "id": "574d59e3da3f93da6f21dba0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-31T09:31:15.371Z",
  "text": "I will next see for the things that still remain to be done in the \"HLT\" method.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Perhaps there could be a test file before this is merged for the first time. (I don&#39;t think we should try to put everything in the file at once.)",
  "id": "574d5b5aec10ddbb09dc4124",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-31T09:37:30.802Z",
  "text": "Perhaps there could be a test file before this is merged for the first time. (I don't think we should try to put everything in the file at once.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Then there were some comments by Aaron in the previous merge. They could be taken care of in the same merge.",
  "id": "574d5b9a6bbc2d1d4defb62c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-31T09:38:34.434Z",
  "text": "Then there were some comments by Aaron in the previous merge. They could be taken care of in the same merge.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-31T09:40:56.883Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Though I had tried to fix them in <span data-link-type=\"issue\" data-issue=\"11150\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#11150</span> but I believe we should fix them here.",
  "id": "574d5bff6bbc2d1d4defb650",
  "issues": [
   {
    "number": "11150"
   },
   {
    "number": "11150",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-31T09:40:15.680Z",
  "text": "Though I had tried to fix them in [#11150](https://github.com/sympy/sympy/pull/11150) but I believe we should fix them here.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Maybe you did that. I may have forgotten.",
  "id": "574d5cd2da3f93da6f21dc8b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-31T09:43:46.949Z",
  "text": "Maybe you did that. I may have forgotten.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-05-31T09:44:38.639Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "No, not all were addressed. Will address them here.",
  "id": "574d5cff10f0fed86f49c389",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-31T09:44:31.226Z",
  "text": "No, not all were addressed. Will address them here.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I see, that was the free abelian group PR. That could probably wait. I have not yet looked how much we could make use of <code>polys/agca</code>.",
  "id": "574d5d6fec10ddbb09dc41cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-05-31T09:46:23.690Z",
  "text": "I see, that was the free abelian group PR. That could probably wait. I have not yet looked how much we could make use of `polys/agca`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems that there have been two names for the same object: <code>A_dict</code> and <code>A_index</code>. It is clear that the choice of name is not important, but perhaps <code>A_index</code> could be more informative.",
  "id": "574e7edd10f0fed86f4a1b04",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-01T06:21:17.054Z",
  "text": "It seems that there have been two names for the same object: `A_dict` and `A_index`. It is clear that the choice of name is not important, but perhaps `A_index` could be more informative.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The test examples look good. Perhaps you could find some references to the named groups.",
  "id": "574e81b180352f204df4044e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-01T06:33:21.790Z",
  "text": "The test examples look good. Perhaps you could find some references to the named groups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Good morning. Currently the time taken for the computation for <code>Coset Table</code> for tests added to groups is reasonably large compared to what <code>GAP</code> computes it in. Should we be worried about that? I know the major issue is &quot;space&quot; not &quot;time&quot; in Coset Enumeration. But still could it pose any major problems?",
  "id": "574e8ecc454cb2be0950d79c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-01T07:29:16.425Z",
  "text": "Good morning. Currently the time taken for the computation for `Coset Table` for tests added to groups is reasonably large compared to what `GAP` computes it in. Should we be worried about that? I know the major issue is \"space\" not \"time\" in Coset Enumeration. But still could it pose any major problems?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-01T07:54:22.807Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I don&#39;t think we should worry too much about the time taken. Some comments I made aimed to save time. Maybe something else could still be done, but I think we should first have a solid package. We probably don&#39;t have to deal with very large coset tables yet.",
  "id": "574e944b10f0fed86f4a2057",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-01T07:52:43.034Z",
  "text": "I don't think we should worry too much about the time taken. Some comments I made aimed to save time. Maybe something else could still be done, but I think we should first have a solid package. We probably don't have to deal with very large coset tables yet.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-06-01T18:34:06.563Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Now the <code>compress</code> routine for the Coset Table works fine. Perhaps I am now looking at the <code>standardise</code> routine on Pg. 168, one thing in pseudo code looks odd though. <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03b2</mi><mo>=</mo><msup><mi>\u03b1</mi><mi>x</mi></msup><mi>\u03b3</mi></mrow><annotation encoding=\"application/x-tex\">\\beta = \\alpha^x\\gamma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.69444em;\"></span><span class=\"strut bottom\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.05278em;\">\u03b2</span><span class=\"mrel\">=</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord mathit\">x</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mord mathit\" style=\"margin-right:0.05556em;\">\u03b3</span></span></span></span> , also later on used with the <code>Switch</code> should be a normal multiplication. I will read a little more what it means.",
  "id": "574f28a3a78d5a256e39fd9b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-01T18:25:39.574Z",
  "text": "Now the `compress` routine for the Coset Table works fine. Perhaps I am now looking at the `standardise` routine on Pg. 168, one thing in pseudo code looks odd though. $$\\beta = \\alpha^x\\gamma$$ , also later on used with the `Switch` should be a normal multiplication. I will read a little more what it means.",
  "unread": false,
  "urls": [],
  "v": 5
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It is a bit late for you. And for me too for any serious work though I often peek at these pages in the evening. I&#39;ll look at those things tomorrow.",
  "id": "574f2be06bbc2d1d4df04a32",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-01T18:39:28.160Z",
  "text": "It is a bit late for you. And for me too for any serious work though I often peek at these pages in the evening. I'll look at those things tomorrow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "That will be fine. I will give you update in morning.",
  "id": "574f2bf9ec10ddbb09dcd555",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-01T18:39:53.294Z",
  "text": "That will be fine. I will give you update in morning.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Ok. Good night.",
  "id": "574f2c46454cb2be095112aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-01T18:41:10.570Z",
  "text": "Ok. Good night.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Good night.",
  "id": "574f2c4eda3f93da6f227417",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-01T18:41:18.952Z",
  "text": "Good night.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-02T04:10:23.503Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<p>Good morning! I did made some fix. But one issue is still there.</p><pre><code>&gt;&gt;&gt; from sympy import <span class=\"keyword\">*</span>\n&gt;&gt;&gt; from sympy.combinatorics.fp_groups import FpGroup, coset_enumeration_r, CosetTable, coset_enumeration_c\n&gt;&gt;&gt; from sympy.combinatorics.free_group import free_group\n&gt;&gt;&gt; F, x, y = free_group(<span class=\"string\">\"x, y\"</span>)\n&gt;&gt;&gt; Cox = FpGroup(F, [x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>6, y<span class=\"keyword\">*</span><span class=\"keyword\">*</span>6, (x<span class=\"keyword\">*</span>y)<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2, (x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2<span class=\"keyword\">*</span>y<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2)<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2, (x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>3<span class=\"keyword\">*</span>y<span class=\"keyword\">*</span><span class=\"keyword\">*</span>3)<span class=\"keyword\">*</span><span class=\"keyword\">*</span>5])\n&gt;&gt;&gt; C = coset_enumeration_r(Cox, [x])\n&gt;&gt;&gt; C.compress()\n&gt;&gt;&gt; C.standardize()\n<span class=\"comment\"># raises IndexError</span></code></pre><p>I think the issue is there since of the fact that larger cosets don&#39;t exist i.e cosets corresponding to integers greater than <code>C.n</code> don&#39;t exist. Hence <code>table[gamma][A_dict[x]]</code> raises <code>IndexError</code>. Will have to think of the solution. (something to do with linking may be).</p>",
  "id": "574fb0be454cb2be0951334f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-02T04:06:22.792Z",
  "text": "Good morning! I did made some fix. But one issue is still there.\n```\n>>> from sympy import *\n>>> from sympy.combinatorics.fp_groups import FpGroup, coset_enumeration_r, CosetTable, coset_enumeration_c\n>>> from sympy.combinatorics.free_group import free_group\n>>> F, x, y = free_group(\"x, y\")\n>>> Cox = FpGroup(F, [x**6, y**6, (x*y)**2, (x**2*y**2)**2, (x**3*y**3)**5])\n>>> C = coset_enumeration_r(Cox, [x])\n>>> C.compress()\n>>> C.standardize()\n# raises IndexError\n```\nI think the issue is there since of the fact that larger cosets don't exist i.e cosets corresponding to integers greater than `C.n` don't exist. Hence `table[gamma][A_dict[x]]` raises `IndexError`. Will have to think of the solution. (something to do with linking may be).",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Good morning. That should probably not be hard to fix. I&#39;ll be out for the next few hours. We can return to this in the afternoon.",
  "id": "574fc32eda3f93da6f2297fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-02T05:25:02.567Z",
  "text": "Good morning. That should probably not be hard to fix. I'll be out for the next few hours. We can return to this in the afternoon.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Did you find a fix for the <code>IndexError</code>?",
  "id": "5750006a10f0fed86f4a8f26",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-02T09:46:18.460Z",
  "text": "Did you find a fix for the `IndexError`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "No, not yet. I was looking into the <code>coset_enumeration_c</code>.",
  "id": "57500085ec10ddbb09dd0a99",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-02T09:46:45.694Z",
  "text": "No, not yet. I was looking into the `coset_enumeration_c`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-02T19:19:58.841Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "The <code>standardization</code> of Coset Table seems to be working fine (checked with <code>GAP</code> as well). I have added the example which was earlier generating <code>IndexError</code>. (probably we can have a little more efficient code). No need to take look now. Tomorrow morning will be more than fine.",
  "id": "5750868a454cb2be09517870",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-02T19:18:34.566Z",
  "text": "The `standardization` of Coset Table seems to be working fine (checked with `GAP` as well). I have added the example which was earlier generating `IndexError`. (probably we can have a little more efficient code). No need to take look now. Tomorrow morning will be more than fine.",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "editedAt": "2016-06-03T06:32:54.239Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Good morning. The examples look fine. It seems that there is experimental code. Or why are there some duplicate methods having names ending with <code>_f</code>?",
  "id": "5751244bda3f93da6f2300f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-03T06:31:39.456Z",
  "text": "Good morning. The examples look fine. It seems that there is experimental code. Or why are there some duplicate methods having names ending with `_f`?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-06-03T06:35:17.150Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Good morning. Those are methods which have a little difference, <code>deduction_stack</code> is used in for use of <code>Felsch</code> based method enumeration.",
  "id": "5751251f10f0fed86f4ae55b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-03T06:35:11.500Z",
  "text": "Good morning. Those are methods which have a little difference, `deduction_stack` is used in for use of `Felsch` based method enumeration.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I am in the process of seeing its working. May be I will put up a docstring for every new method introduced.",
  "id": "57512550454cb2be09519c20",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-03T06:36:00.838Z",
  "text": "I am in the process of seeing its working. May be I will put up a docstring for every new method introduced.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-03T06:44:12.443Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "The <code>deduction_stack</code> is an instance-attribute (list-type) which is modified each time a new definition, deduction or an update in value is there in the Coset Table.",
  "id": "575125f3f44fde236e530e5e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-03T06:38:43.758Z",
  "text": "The `deduction_stack` is an instance-attribute (list-type) which is modified each time a new definition, deduction or an update in value is there in the Coset Table.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "editedAt": "2016-06-03T06:50:49.712Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I will see for the small-fixes which remain in current enumeration. Your suggestion on the what could be the next big thing?",
  "id": "575128bf454cb2be09519d07",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-03T06:50:39.223Z",
  "text": "I will see for the small-fixes which remain in current enumeration. Your suggestion on the what could be the next big thing?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Perhaps some applications of enumeration as in the book. But before passing over to that phase I think that there is a lot of time available for refining the details of the current implementation.",
  "id": "575129fda78d5a256e3a88e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-03T06:55:57.838Z",
  "text": "Perhaps some applications of enumeration as in the book. But before passing over to that phase I think that there is a lot of time available for refining the details of the current implementation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "For example, the argument word used internally in <code>scan</code> should be in a list form so that <code>subword</code> could be avoided. ",
  "id": "57512b1e80352f204df4c9d2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-03T07:00:46.910Z",
  "text": "For example, the argument word used internally in `scan` should be in a list form so that `subword` could be avoided. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Also it could be useful to have two dictionaries in a coset table. Another one mapping each element of A to the index of the inverse of that element so that calls to <code>inverse</code> could be avoided.",
  "id": "57512badf44fde236e530fdf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-03T07:03:09.670Z",
  "text": "Also it could be useful to have two dictionaries in a coset table. Another one mapping each element of A to the index of the inverse of that element so that calls to `inverse` could be avoided.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That could also be used in lines like this <code>self.table[delta][A_dict[x**-1]] = None</code>.",
  "id": "57512c7910f0fed86f4ae72e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-03T07:06:33.880Z",
  "text": "That could also be used in lines like this `self.table[delta][A_dict[x**-1]] = None`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-03T11:46:42.071Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have added one commit fixing the indexing, so the indexing of &quot;words&quot; now behaves differently, and the introduction of <code>A_dict_inv</code> (second dictionary). Using indexing this way, instead of &quot;.subword&quot; does reduce the time in enumeration.",
  "id": "57516de5f44fde236e5323f6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-03T11:45:41.200Z",
  "text": "I have added one commit fixing the indexing, so the indexing of \"words\" now behaves differently, and the introduction of `A_dict_inv` (second dictionary). Using indexing this way, instead of \".subword\" does reduce the time in enumeration.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Good, that is what I expected for big groups.",
  "id": "5751746ba78d5a256e3a9ff5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-03T12:13:31.477Z",
  "text": "Good, that is what I expected for big groups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "There is one more matter that could be looked into. <code>scan_and_fill</code> is currently inefficient, since it apparently always scans to the end of a word even if part of the end has already been scanned backwards.",
  "id": "57517521454cb2be0951b433",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-03T12:16:33.255Z",
  "text": "There is one more matter that could be looked into. `scan_and_fill` is currently inefficient, since it apparently always scans to the end of a word even if part of the end has already been scanned backwards.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Ok, we will next look into that then.",
  "id": "57517556f44fde236e53269f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-03T12:17:26.984Z",
  "text": "Ok, we will next look into that then.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think the backwards pointer should be preserved while looping in the same way as the forwards pointer.",
  "id": "5751756aa78d5a256e3aa040",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-03T12:17:46.592Z",
  "text": "I think the backwards pointer should be preserved while looping in the same way as the forwards pointer.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "So probably <code>j</code> and <code>b</code> should both be preserved while looping.",
  "id": "57517595a78d5a256e3aa04d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-03T12:18:29.058Z",
  "text": "So probably `j` and `b` should both be preserved while looping.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-03T12:19:39.346Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "<code>i</code> runs forwards and <code>j</code> runs backwards. The looping ends when they meet.",
  "id": "575175c510f0fed86f4afe77",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-03T12:19:17.332Z",
  "text": "`i` runs forwards and `j` runs backwards. The looping ends when they meet.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "So <code>j</code> and <code>b</code> could be moved out of the loop, you mean.",
  "id": "5751761480352f204df4e089",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-03T12:20:36.797Z",
  "text": "So `j` and `b` could be moved out of the loop, you mean.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Well, maybe not exactly so. They should be used and changed in the loop but initially set outside.",
  "id": "5751765aa78d5a256e3aa098",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-03T12:21:46.818Z",
  "text": "Well, maybe not exactly so. They should be used and changed in the loop but initially set outside.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay, I get it.",
  "id": "5751766bec10ddbb09dd7681",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-03T12:22:03.454Z",
  "text": "Okay, I get it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-03T12:36:42.386Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Great, thats really nice, I didn&#39;t re-thought of the assignment while coding the <code>scan_and_fill</code>. (A simple thoughtful re-definiton) It reduces the time from <code>22.01 secs.</code> to <code>18.88 secs.</code> of test file. I have pushed the changes as well.",
  "id": "5751796910972679212ff9e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-03T12:34:49.230Z",
  "text": "Great, thats really nice, I didn't re-thought of the assignment while coding the `scan_and_fill`. (A simple thoughtful re-definiton) It reduces the time from `22.01 secs.` to `18.88 secs.` of test file. I have pushed the changes as well.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "editedAt": "2016-06-03T19:09:19.671Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<p>This is a line from <code>1973cdhw.pdf</code>.</p><blockquote>\n<p>This means that <code>j</code> and k represent the same coset and we say that <code>j</code> and <code>k</code> are coincident, or alternatively that one of the cosets <code>j</code> and<code>k</code> is redundant. We write <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>j</mi><mo>\u223c</mo><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">j \\sim k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.69444em;\"></span><span class=\"strut bottom\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel\">\u223c</span><span class=\"mord mathit\" style=\"margin-right:0.03148em;\">k</span></span></span></span>. In this case, one of the cosets <code>j</code> and <code>k</code>must be deleted from T and this is carried out by a process called the coincidence.</p></blockquote>\n<p>But we know when you also mentioned about setting <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi><mo>[</mo><mi>\u03bd</mi><mo>]</mo><mo>=</mo><mi>\u03bc</mi></mrow><annotation encoding=\"application/x-tex\">p[\\nu] = \\mu</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">p</span><span class=\"mopen\">[</span><span class=\"mord mathit\" style=\"margin-right:0.06366em;\">\u03bd</span><span class=\"mclose\">]</span><span class=\"mrel\">=</span><span class=\"mord mathit\">\u03bc</span></span></span></span> does the job comment <a href=\"https://github.com/sympy/sympy/pull/11140/files#diff-2bca05fcc1cad2237c5589d92187d25cR313\" rel=\"nofollow\" target=\"_blank\" class=\"link\">here</a> . Here we don&#39;t actually the delete the coset from the table, but only set <code>p</code> value in such a way, which makes <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03b1</mi><mo>\u223c</mo><mi>\u03b2</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha \\sim \\beta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.69444em;\"></span><span class=\"strut bottom\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mrel\">\u223c</span><span class=\"mord mathit\" style=\"margin-right:0.05278em;\">\u03b2</span></span></span></span>. Is there anything we should do to improve it memory-wise but may be harming in time-wise here? Since deleting the (already equivalent to some) cosets from table is going to free-memory.</p>",
  "id": "5751d555813c217c21d9f2f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-03T19:07:01.476Z",
  "text": "This is a line from `1973cdhw.pdf`.\n> This means that `j` and k represent the same coset and we say that `j` and `k` are coincident, or alternatively that one of the cosets `j` and`k` is redundant. We write $$j \\sim k$$. In this case, one of the cosets `j` and `k`must be deleted from T and this is carried out by a process called the coincidence.\n\nBut we know when you also mentioned about setting $$p[\\nu] = \\mu$$ does the job comment [here](https://github.com/sympy/sympy/pull/11140/files#diff-2bca05fcc1cad2237c5589d92187d25cR313) . Here we don't actually the delete the coset from the table, but only set `p` value in such a way, which makes $$\\alpha \\sim \\beta$$. Is there anything we should do to improve it memory-wise but may be harming in time-wise here? Since deleting the (already equivalent to some) cosets from table is going to free-memory.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/11140/files#diff-2bca05fcc1cad2237c5589d92187d25cR313"
   }
  ],
  "v": 6
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I also want to say I feel delighted to see the big examples from the book (especially <code>1973cdhw.pdf</code>) working fine with the code we have created for coset enumeration.",
  "id": "5751d7e11097267921301ca4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-03T19:17:53.496Z",
  "text": "I also want to say I feel delighted to see the big examples from the book (especially `1973cdhw.pdf`) working fine with the code we have created for coset enumeration.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The only entries in the coset table that are needed are those that do appear in <code>p</code>because they may be needed in a call of <code>rep</code> (or <code>merge</code>). The others may be released. It is not necessary to delete the slot from the table, since it takes only a single machine word. It should be enough to just set the value to <code>None</code>. The corresponding row will then be collected in the next garbage collection. But I think this is something we don&#39;t need to worry about yet.",
  "id": "5751dfd7e96484d0692f64d0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-03T19:51:51.487Z",
  "text": "The only entries in the coset table that are needed are those that do appear in `p`because they may be needed in a call of `rep` (or `merge`). The others may be released. It is not necessary to delete the slot from the table, since it takes only a single machine word. It should be enough to just set the value to `None`. The corresponding row will then be collected in the next garbage collection. But I think this is something we don't need to worry about yet.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I also think that the routines seem to work even better than what I  hoped at this point. You are ahead of the timetable I was expecting.",
  "id": "5751e07e6c75e0cd6959061b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-03T19:54:38.281Z",
  "text": "I also think that the routines seem to work even better than what I  hoped at this point. You are ahead of the timetable I was expecting.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Good morning. I tend to wake up early in the summer. Sun rises at 4 AM, and that is because of daylight saving time. Actually it would be 3 AM if the clock was not shifted 1 h ahead. That means it is not easy to go on sleeping.",
  "id": "57525aec6c75e0cd69591dd0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-04T04:37:00.696Z",
  "text": "Good morning. I tend to wake up early in the summer. Sun rises at 4 AM, and that is because of daylight saving time. Actually it would be 3 AM if the clock was not shifted 1 h ahead. That means it is not easy to go on sleeping.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Good morning. I didn&#39;t knew this fact about Helsinki.",
  "id": "57525b4d6c75e0cd69591dde",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-04T04:38:37.266Z",
  "text": "Good morning. I didn't knew this fact about Helsinki.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I was again looking at those <code>_f</code> methods  using the deduction stack. <code>coincidence_f</code> looks very much the same as <code>coincidence</code>.",
  "id": "57525b6be8163f872c4de059",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-04T04:39:07.421Z",
  "text": "I was again looking at those `_f` methods  using the deduction stack. `coincidence_f` looks very much the same as `coincidence`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, they are. I haven&#39;t made the <code>deduction_stack</code> &quot;appending&quot; at all places.",
  "id": "57525b91e8163f872c4de060",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-04T04:39:45.443Z",
  "text": "Yes, they are. I haven't made the `deduction_stack` \"appending\" at all places.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "We should try to re-use the code may be.",
  "id": "57525baf813c217c21da0e97",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-04T04:40:15.968Z",
  "text": "We should try to re-use the code may be.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Are you planning to add that in <code>coincidence_f</code>.",
  "id": "57525bb8824488852c4ecdb7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-04T04:40:24.946Z",
  "text": "Are you planning to add that in `coincidence_f`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes.",
  "id": "57525bcf10972679213036dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-04T04:40:47.178Z",
  "text": "Yes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "&quot;Define&quot;, &quot;Scan&quot; and &quot;coincidence&quot; methods would have <code>_f</code> routines.",
  "id": "57525be73bdac7ae37b4845d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-04T04:41:11.212Z",
  "text": "\"Define\", \"Scan\" and \"coincidence\" methods would have `_f` routines.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I see that  it is called by <code>scan_f</code>, which does push to the stack.",
  "id": "57525c563bdac7ae37b48463",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-04T04:43:02.379Z",
  "text": "I see that  it is called by `scan_f`, which does push to the stack.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-04T11:44:24.738Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "The very basic example for <code>Felsch</code> strategy seems to be working fine. There are other things to take care of, I am now looking into them (the one of processing by the <code>deduction_stack</code>).",
  "id": "5752bf05824488852c4ed989",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-04T11:44:05.127Z",
  "text": "The very basic example for `Felsch` strategy seems to be working fine. There are other things to take care of, I am now looking into them (the one of processing by the `deduction_stack`).",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Good morning. We could begin thinking of the next subject after coset enumeration is ready.",
  "id": "575503b81097267921309637",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-06T05:01:44.578Z",
  "text": "Good morning. We could begin thinking of the next subject after coset enumeration is ready.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-06T14:38:10.683Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Hi Kalevi, I apologize, we may not be able to talk. Since the internet connection has been disrupted in my city and will remain so for 1 week as I hear from the news. I will try to cover up the things for this week after that. I hope you are fine. Sorry for unavailability.",
  "id": "57558ac2824488852c4f51cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-06T14:37:54.137Z",
  "text": "Hi Kalevi, I apologize, we may not be able to talk. Since the internet connection has been disrupted in my city and will remain so for 1 week as I hear from the news. I will try to cover up the things for this week after that. I hope you are fine. Sorry for unavailability.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I am fine. Sorry to hear about the connection. I was afraid that something worse might have happened. Fortunately you have made enough progress for at least another week.",
  "id": "57558c4e813c217c21da92d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-06T14:44:30.270Z",
  "text": "I am fine. Sorry to hear about the connection. I was afraid that something worse might have happened. Fortunately you have made enough progress for at least another week.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-09T18:19:54.085Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Good evening. I read your mail &quot;things to do&quot;, I was thinking also about the &quot;low index subgroups&quot;, since it is very much similar to the coset enumeration (rather basic idea is inverse of it, as I read from Holt). Do you think that we can first go for the low index subgroups algorithms, may be. (I have moved out my city for now, hopefully will get things on track).",
  "id": "5759b2246092456f6632a0ad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-09T18:15:00.333Z",
  "text": "Good evening. I read your mail \"things to do\", I was thinking also about the \"low index subgroups\", since it is very much similar to the coset enumeration (rather basic idea is inverse of it, as I read from Holt). Do you think that we can first go for the low index subgroups algorithms, may be. (I have moved out my city for now, hopefully will get things on track).",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems that &#39;low index subgroups&#39; is also a subject that deserves to be considered. But I cannot tell right now. I&#39;ll look into it and return tomorrow.",
  "id": "5759b7c5064b9e7266f10a7f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-09T18:39:01.534Z",
  "text": "It seems that 'low index subgroups' is also a subject that deserves to be considered. But I cannot tell right now. I'll look into it and return tomorrow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Good morning. I had, in fact, also thought that section 5.4 on subgroups could be implemented as there is fairly detailed pseudocode. If you would like to do it now, I think that is quite all right.",
  "id": "575a3f7e97e1b2d245e16a24",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-10T04:18:06.319Z",
  "text": "Good morning. I had, in fact, also thought that section 5.4 on subgroups could be implemented as there is fairly detailed pseudocode. If you would like to do it now, I think that is quite all right.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Good morning. Ohk we will get started with that then. :)",
  "id": "575a400d064b9e7266f12577",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-10T04:20:29.515Z",
  "text": "Good morning. Ohk we will get started with that then. :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think <code>fg_groups</code> is (almost) ready to be merged. The PR is also growing so big that repeated reviewing becomes tiresome. If something needs to be amended, that can be done later. Let&#39;s wait to see if Aaron has some comments. Then we could discuss the extent of squashing you might want to do.",
  "id": "575a615ae20024bd1ad22d5c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-10T06:42:34.314Z",
  "text": "I think `fg_groups` is (almost) ready to be merged. The PR is also growing so big that repeated reviewing becomes tiresome. If something needs to be amended, that can be done later. Let's wait to see if Aaron has some comments. Then we could discuss the extent of squashing you might want to do.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I am only worried about the printing issues that result from <code>FreeGroup</code> being a non-basic class. Perhaps only that need to be done, it seems to me.",
  "id": "575a61b2e20024bd1ad22d6c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-10T06:44:02.260Z",
  "text": "I am only worried about the printing issues that result from `FreeGroup` being a non-basic class. Perhaps only that need to be done, it seems to me.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I don&#39;t think we have to worry about that yet. I&#39;m sure printing can be sorted out one way or another.",
  "id": "575a639b97e1b2d245e170ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-10T06:52:11.079Z",
  "text": "I don't think we have to worry about that yet. I'm sure printing can be sorted out one way or another.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have addressed your last comment (regarding <code>p[alpha] &lt; alpha</code>). I have combined the repeated tables for the two strategies into one. Hopefully the tests will pass. Though I have merged the tests for the two strategies (only table changes, thats good), but single tests takes away the possibility to test the two strategies separately. If you think I should make them separate, I will change them. Will then now wait for Aaron then and then push the things of &quot;low index subgroups&quot;.",
  "id": "575a811ee20024bd1ad235ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-10T08:58:06.784Z",
  "text": "I have addressed your last comment (regarding `p[alpha] < alpha`). I have combined the repeated tables for the two strategies into one. Hopefully the tests will pass. Though I have merged the tests for the two strategies (only table changes, thats good), but single tests takes away the possibility to test the two strategies separately. If you think I should make them separate, I will change them. Will then now wait for Aaron then and then push the things of \"low index subgroups\".",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I cannot understand why the relational test fails in 2.7. It must be some kind of random failure.",
  "id": "575ab3b36092456f6632dc60",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-10T12:33:55.751Z",
  "text": "I cannot understand why the relational test fails in 2.7. It must be some kind of random failure.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-10T13:10:56.650Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Thats odd. Apart from that, currently the class <code>FpGroup</code> derives from <code>Basic</code>. Perhaps make <code>FpGroup</code> non-basic as well (though I know we haven&#39;t reached a final decision on that).",
  "id": "575abc41814a56807141c93a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-10T13:10:25.132Z",
  "text": "Thats odd. Apart from that, currently the class `FpGroup` derives from `Basic`. Perhaps make `FpGroup` non-basic as well (though I know we haven't reached a final decision on that).",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Deriving from <code>Basic</code> is supposed to bring forth some benefits, but I&#39;m not sure if those would be of much use in class <code>FpGroup</code>. I hope Aaron will comment on this again.",
  "id": "575abef02eaa837d71e83b3f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-10T13:21:52.674Z",
  "text": "Deriving from `Basic` is supposed to bring forth some benefits, but I'm not sure if those would be of much use in class `FpGroup`. I hope Aaron will comment on this again.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems that none of the algebraic structures in polys derive from <code>Basic</code>. I think we could follow the same line with regard to groups. So we could derive <code>FpGroup</code> from <code>object</code>. Then I think it would be  the time to merge. ",
  "id": "575bb818a1be01c01a78ee88",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-11T07:04:56.082Z",
  "text": "It seems that none of the algebraic structures in polys derive from `Basic`. I think we could follow the same line with regard to groups. So we could derive `FpGroup` from `object`. Then I think it would be  the time to merge. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay, I have just completed those changes and will push in a few moments.",
  "id": "575bb84ba1be01c01a78ee90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-11T07:05:47.394Z",
  "text": "Okay, I have just completed those changes and will push in a few moments.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "What have you decided about squashing? That may not be necessary, but if there are some commits that could easily be squashed without losing essential history, then I think that could be done.",
  "id": "575bbaf8814a5680714209ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-11T07:17:12.819Z",
  "text": "What have you decided about squashing? That may not be necessary, but if there are some commits that could easily be squashed without losing essential history, then I think that could be done.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I think squashing should be done, I will take a look and make sure it goes the right way.",
  "id": "575bbb2d2eaa837d71e87b81",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-11T07:18:05.877Z",
  "text": "I think squashing should be done, I will take a look and make sure it goes the right way.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have done the squashing (not too much squashing).",
  "id": "575bc774064b9e7266f18787",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-11T08:10:28.858Z",
  "text": "I have done the squashing (not too much squashing).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The result looks good.",
  "id": "575bd0ef064b9e7266f188d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-11T08:50:55.415Z",
  "text": "The result looks good.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Very good morning. Are we waiting for <span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> to give a thumbs up or still there need to be done something?",
  "id": "575ce810064b9e7266f1b529",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-12T04:41:52.120Z",
  "text": "Very good morning. Are we waiting for @asmeurer to give a thumbs up or still there need to be done something?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Good morning. I think we should wait a little to see if Aaron has something to add before merging. In the meantime you can proceed with finding small index subgroups.",
  "id": "575ced361cf76dd6453656b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-12T05:03:50.045Z",
  "text": "Good morning. I think we should wait a little to see if Aaron has something to add before merging. In the meantime you can proceed with finding small index subgroups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Making a &quot;copy&quot; of <code>Coset Table</code> (i.e of an instance of <code>Coset Table</code>), using <code>from copy import deepcopy</code> then using <code>D = deepcopy(C)</code> does not work (so is the case with <code>rings</code>). Also <code>C.__class__(C.fp_group, C.subgroup)</code> also can&#39;t be used, since the instance-attributes like <code>.table</code> and <code>.deduction_stack</code> have changed for <code>C</code> from what values the attributes had when initialised (ex. <code>C.table = [None, None, None, None]</code>, but later on changes on execution of <code>coset enumeration</code>).",
  "id": "575d4686e20024bd1ad2c3e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-12T11:24:54.277Z",
  "text": "Making a \"copy\" of `Coset Table` (i.e of an instance of `Coset Table`), using `from copy import deepcopy` then using `D = deepcopy(C)` does not work (so is the case with `rings`). Also `C.__class__(C.fp_group, C.subgroup)` also can't be used, since the instance-attributes like `.table` and `.deduction_stack` have changed for `C` from what values the attributes had when initialised (ex. `C.table = [None, None, None, None]`, but later on changes on execution of `coset enumeration`).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Could it be possible to define some kind of &#39;export&#39; version of <code>CosetTable</code> that would contain its essential parts if a copy is needed?",
  "id": "575d4aa52eaa837d71e8b896",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-12T11:42:29.990Z",
  "text": "Could it be possible to define some kind of 'export' version of `CosetTable` that would contain its essential parts if a copy is needed?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-12T17:27:53.602Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Like the <a href=\"https://github.com/sympy/sympy/pull/11231/commits/6b0fdd91f6bf5c19890e364ff0d4617d375024bc#diff-2bca05fcc1cad2237c5589d92187d25cR129\" rel=\"nofollow\" target=\"_blank\" class=\"link\">copy</a> routine, introduced here?",
  "id": "575d9b8b97e1b2d245e217c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-12T17:27:39.885Z",
  "text": "Like the [copy](https://github.com/sympy/sympy/pull/11231/commits/6b0fdd91f6bf5c19890e364ff0d4617d375024bc#diff-2bca05fcc1cad2237c5589d92187d25cR129) routine, introduced here?",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/11231/commits/6b0fdd91f6bf5c19890e364ff0d4617d375024bc#diff-2bca05fcc1cad2237c5589d92187d25cR129"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Yes, I think it looks good. If something else is still needed, that can be added. Final applications will show.",
  "id": "575da28e2eaa837d71e8c8ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-12T17:57:34.635Z",
  "text": "Yes, I think it looks good. If something else is still needed, that can be added. Final applications will show.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Don\u2019t hold off on me. I won\u2019t have time to do an in-depth review ",
  "id": "575de8426092456f663379ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-12T22:54:58.141Z",
  "text": "Don\u2019t hold off on me. I won\u2019t have time to do an in-depth review ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Good morning. I was also thinking that FpGroups should be merged today. It is always possible to make small adjustments later if necessary in separate PR&#39;s.",
  "id": "575e3c786092456f663386ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-13T04:54:16.820Z",
  "text": "Good morning. I was also thinking that FpGroups should be merged today. It is always possible to make small adjustments later if necessary in separate PR's.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Good morning, I think that had be good.",
  "id": "575e3cb56092456f663386b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-13T04:55:17.967Z",
  "text": "Good morning, I think that had be good.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Ok. I&#39;ll do that straight away.",
  "id": "575e3cfb97e1b2d245e235fb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-13T04:56:27.194Z",
  "text": "Ok. I'll do that straight away.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I will ping you when I will make a few worthy changes to look onto. I think, I should put some tests for the smaller method before seeing the bigger ones. Also what can be the approximated finish time for the low index algorithm? (I remember the &quot;no&quot; issue about time, but still it would help in working efficiently).",
  "id": "575fad786092456f6633f7a0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-14T07:08:40.813Z",
  "text": "I will ping you when I will make a few worthy changes to look onto. I think, I should put some tests for the smaller method before seeing the bigger ones. Also what can be the approximated finish time for the low index algorithm? (I remember the \"no\" issue about time, but still it would help in working efficiently).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems that some of the smaller methods are not described in detail. So some time is needed to get everything working. Maybe a couple of weeks. I also have to spend some time to understand the algorithm :).",
  "id": "575fb2cea1be01c01a79c9d2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-14T07:31:26.690Z",
  "text": "It seems that some of the smaller methods are not described in detail. So some time is needed to get everything working. Maybe a couple of weeks. I also have to spend some time to understand the algorithm :).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-16T02:29:19.702Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Good morning. Yesterday, I had a look at the mathematics of the algorithm via reading through the example. I haven&#39;t  &#39;tried&#39; to  understand what is the purpose of <code>first_int_class</code> but I know the current issue code-wise in it. Also performed the algorithmic steps mentioned in the example using the current routines implemented (routines of <code>coset enumeration</code> not of LowIndex). [Update on the work]",
  "id": "57620edb63ea0987306b5cd6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-16T02:28:43.356Z",
  "text": "Good morning. Yesterday, I had a look at the mathematics of the algorithm via reading through the example. I haven't  'tried' to  understand what is the purpose of `first_int_class` but I know the current issue code-wise in it. Also performed the algorithmic steps mentioned in the example using the current routines implemented (routines of `coset enumeration` not of LowIndex). [Update on the work]",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Good morning. I have planned to take some time today looking into the details of the code. I think the purpose of <code>first_in_class</code> is the following. Subgroups that are conjugates of each other form a class (called &#39;conjugacy class&#39;). If one group in the class is known, the others can be found quite easily by conjugating. They all have the same index. So the algorithm only tries to find one representative group in a conjugacy class. The groups in a class can be ordered by considering their standardized coset tables and the chosen representative shall be the first in the class.",
  "id": "576234c1dfb1d8aa45a3ee80",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-16T05:10:25.353Z",
  "text": "Good morning. I have planned to take some time today looking into the details of the code. I think the purpose of `first_in_class` is the following. Subgroups that are conjugates of each other form a class (called 'conjugacy class'). If one group in the class is known, the others can be found quite easily by conjugating. They all have the same index. So the algorithm only tries to find one representative group in a conjugacy class. The groups in a class can be ordered by considering their standardized coset tables and the chosen representative shall be the first in the class.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Is it mathematically possible to have a subgroup, whose coset table is <code>[[0, 0, 0, 0], [1, 1, 1, 1]]</code>? I think mathematically considering since two cosets can have that property it should be possible. But consider this from the way the <code>CosetTable</code> is created.",
  "id": "5765583ca82a6b0079a6c31b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-18T14:18:36.924Z",
  "text": "Is it mathematically possible to have a subgroup, whose coset table is `[[0, 0, 0, 0], [1, 1, 1, 1]]`? I think mathematically considering since two cosets can have that property it should be possible. But consider this from the way the `CosetTable` is created.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The two cosets should be connected by at least one generator (the Cayley graph should be connected).",
  "id": "57655957a82a6b0079a6c357",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-18T14:23:19.247Z",
  "text": "The two cosets should be connected by at least one generator (the Cayley graph should be connected).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-18T14:25:24.879Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Every coset must be reachable by the action of some word.",
  "id": "57655998bd67400679dab170",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-18T14:24:24.871Z",
  "text": "Every coset must be reachable by the action of some word.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Good evening. I like the way other softwares like Magma, represent the use of examples for a particular algorithm like <a href=\"http://www.math.wayne.edu/answers/magma/htmlhelp/text239.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">&quot;low index subgroups&quot;  examples</a>. IIRC you also pointed to cite information about groups and also to mention some text about the introduced groups.",
  "id": "576697e56577f032450c8020",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T13:02:29.567Z",
  "text": "Good evening. I like the way other softwares like Magma, represent the use of examples for a particular algorithm like [\"low index subgroups\"  examples](http://www.math.wayne.edu/answers/magma/htmlhelp/text239.html). IIRC you also pointed to cite information about groups and also to mention some text about the introduced groups.",
  "unread": false,
  "urls": [
   {
    "url": "http://www.math.wayne.edu/answers/magma/htmlhelp/text239.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think that was because you referred to some groups by name. It would be nice to have some reference where those groups are defined.",
  "id": "576699e34227fdc922986da3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T13:10:59.105Z",
  "text": "I think that was because you referred to some groups by name. It would be nice to have some reference where those groups are defined.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-19T13:12:52.726Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems that Magma goes one step further with low-index subgroups. It gives the generators. That may be harder to implement.",
  "id": "57669a46a82a6b0079a6fddd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T13:12:38.519Z",
  "text": "It seems that Magma goes one step further with low-index subgroups. It gives the generators. That may be harder to implement.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I too was thinking about how that is done?, which algorithm does it use to do that?",
  "id": "57669a784227fdc922986dc4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T13:13:28.441Z",
  "text": "I too was thinking about how that is done?, which algorithm does it use to do that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "A set of generators can be obtained by Schreier&#39;s method. But that tends to produce too many of them and leaves a lot of work to do in cutting down the set.",
  "id": "57669af0feaf6cd222acf9fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T13:15:28.054Z",
  "text": "A set of generators can be obtained by Schreier's method. But that tends to produce too many of them and leaves a lot of work to do in cutting down the set.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Are these schreier&#39;s methods the ones implemented in Permutation Groups?",
  "id": "57669b344227fdc922986de2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T13:16:36.582Z",
  "text": "Are these schreier's methods the ones implemented in Permutation Groups?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Yes, but they apply more generally. (We can discuss those matters in a couple of hours. Now I have to stop.)",
  "id": "57669b676577f032450c80ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T13:17:27.827Z",
  "text": "Yes, but they apply more generally. (We can discuss those matters in a couple of hours. Now I have to stop.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "That would be fine. Is this sleep time?",
  "id": "57669b90feaf6cd222acfa16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T13:18:08.744Z",
  "text": "That would be fine. Is this sleep time?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That was our dinner time.",
  "id": "5766ade63881bc405b6ec50f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T14:36:22.456Z",
  "text": "That was our dinner time.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think there is a good explanation of Schreier generators somewhere in Holt&#39;s book. The generators are good for theoretical purposes. For example, to show that a subgroup of finite index in a finitely generated group is also finitely generated. But in easily produces far too many generators. And there does not seem to exist good descriptions of algorithms that would reduce the number.",
  "id": "5766af0a4227fdc9229871e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T14:41:14.031Z",
  "text": "I think there is a good explanation of Schreier generators somewhere in Holt's book. The generators are good for theoretical purposes. For example, to show that a subgroup of finite index in a finitely generated group is also finitely generated. But in easily produces far too many generators. And there does not seem to exist good descriptions of algorithms that would reduce the number.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "There are two algorithms (as it says in book) for finding the &quot;Presentation of Subgroups&quot;, First is Reidemeister Schreier algorithm which computes a presentation on a set of Schreier generators of H.",
  "id": "5766bc562a4cd63745ead210",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T15:37:58.674Z",
  "text": "There are two algorithms (as it says in book) for finding the \"Presentation of Subgroups\", First is Reidemeister Schreier algorithm which computes a presentation on a set of Schreier generators of H.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "In section 5.3",
  "id": "5766bc61feaf6cd222ad000f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T15:38:09.058Z",
  "text": "In section 5.3",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "second one computes a presentation on the given set <code>Y</code> of generators. What does this finally lead us to? If have idea about it, what these two algorithms do. Are these two the ones we are talking about?",
  "id": "5766bd68bd67400679daf327",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T15:42:32.240Z",
  "text": "second one computes a presentation on the given set `Y` of generators. What does this finally lead us to? If have idea about it, what these two algorithms do. Are these two the ones we are talking about?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have a few other things to ask as well, I will be here. (will ask when you come online as well)",
  "id": "5766be5abd67400679daf361",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T15:46:34.128Z",
  "text": "I have a few other things to ask as well, I will be here. (will ask when you come online as well)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "BTW you take dinner so early.",
  "id": "5766bf802a4cd63745ead2b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T15:51:28.769Z",
  "text": "BTW you take dinner so early.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The Schreier generators are explained in 2.5.1 for a subgroup of a general group. There are also results giving relators for the subgroup. I think this is Rademeister&#39;s contribution.",
  "id": "5766c5effeaf6cd222ad0216",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:18:55.848Z",
  "text": "The Schreier generators are explained in 2.5.1 for a subgroup of a general group. There are also results giving relators for the subgroup. I think this is Rademeister's contribution.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "There is an implementation in 5.3, but it may not be very useful in practise. See, for example, what is written after example 5.8.",
  "id": "5766c78f3881bc405b6eca52",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:25:51.341Z",
  "text": "There is an implementation in 5.3, but it may not be very useful in practise. See, for example, what is written after example 5.8.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-19T16:28:33.459Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay, do you think that it will still take time for LowIndexSubgroup algorithm to be merged?",
  "id": "5766c827a82a6b0079a70717",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:28:23.627Z",
  "text": "Okay, do you think that it will still take time for LowIndexSubgroup algorithm to be merged?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "In 5.3.3 there is some explanation of how to simplify the presentation, but there is only a verbal description of the procedure.",
  "id": "5766c828feaf6cd222ad0298",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:28:24.820Z",
  "text": "In 5.3.3 there is some explanation of how to simplify the presentation, but there is only a verbal description of the procedure.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think there should not be much left.",
  "id": "5766c84f2a4cd63745ead4c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:29:03.445Z",
  "text": "I think there should not be much left.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "About the pace of project, are we on good track. I may have some travelling to do a day after tomorrow. So I might skip that if time doesn&#39;t allow it.",
  "id": "5766c8acfeaf6cd222ad02b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:30:36.429Z",
  "text": "About the pace of project, are we on good track. I may have some travelling to do a day after tomorrow. So I might skip that if time doesn't allow it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "<code>doctest</code> seems to have problems with the docstring of <code>first_in_class</code>.",
  "id": "5766c8c42a4cd63745ead4db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:31:00.459Z",
  "text": "`doctest` seems to have problems with the docstring of `first_in_class`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "But probably that docstring should be simplified anyway.",
  "id": "5766c8dd6577f032450c89f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:31:25.215Z",
  "text": "But probably that docstring should be simplified anyway.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, the &quot;improvements&quot; introduced lead to errors in <code>docstring</code> of <code>first_in_class</code>.",
  "id": "5766c94b2a4cd63745ead4f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:33:15.287Z",
  "text": "Yes, the \"improvements\" introduced lead to errors in `docstring` of `first_in_class`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Will improve them straight away,.",
  "id": "5766c95a2a4cd63745ead4fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:33:30.094Z",
  "text": "Will improve them straight away,.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Then I think it should be ready to be merged. And you don&#39;t have to skip the travelling.",
  "id": "5766c9a2feaf6cd222ad02e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:34:42.484Z",
  "text": "Then I think it should be ready to be merged. And you don't have to skip the travelling.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I remember the &quot;next things to do&quot; mail, do you think we now move to that order now. Or there is something else need to be done?",
  "id": "5766c9bb3881bc405b6ecaea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:35:07.214Z",
  "text": "I remember the \"next things to do\" mail, do you think we now move to that order now. Or there is something else need to be done?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-19T16:36:12.898Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I would rather like to work on &quot;One big task&quot;, and probably &quot;one small task&quot;  in parallel if some small task exists.",
  "id": "5766c9f12a4cd63745ead529",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:36:01.740Z",
  "text": "I would rather like to work on \"One big task\", and probably \"one small task\"  in parallel if some small task exists.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "IIRC I suggested two subjects. Presentations of permutation groups and abelian groups.",
  "id": "5766ca0ef0528c4c5bba75c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:36:30.403Z",
  "text": "IIRC I suggested two subjects. Presentations of permutation groups and abelian groups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think the permutation group task would be the big one.",
  "id": "5766ca2f2a4cd63745ead53d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:37:03.659Z",
  "text": "I think the permutation group task would be the big one.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes. Cosets in permutation groups, Finitely generated abelian groups.",
  "id": "5766ca3fbd67400679daf5f4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:37:19.458Z",
  "text": "Yes. Cosets in permutation groups, Finitely generated abelian groups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Abelian groups are of different type. I think it is not necessary to include them at all, if there is not time enough.",
  "id": "5766ca7f4227fdc9229877b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:38:23.359Z",
  "text": "Abelian groups are of different type. I think it is not necessary to include them at all, if there is not time enough.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "And it is also possible to make a start in abelian groups and stop at some point.",
  "id": "5766caa86577f032450c8a75",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:39:04.564Z",
  "text": "And it is also possible to make a start in abelian groups and stop at some point.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It is a subject you could implement even later, if you feel like it.",
  "id": "5766cacc4227fdc9229877c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:39:40.341Z",
  "text": "It is a subject you could implement even later, if you feel like it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-19T16:41:45.017Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay, will probably for abelian groups see as soon we make a start in Cosets in Permutation Groups.",
  "id": "5766cb3a2a4cd63745ead595",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:41:30.342Z",
  "text": "Okay, will probably for abelian groups see as soon we make a start in Cosets in Permutation Groups.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "How long are planning to be away?",
  "id": "5766cb593881bc405b6ecb6f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:42:01.132Z",
  "text": "How long are planning to be away?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "It would hopefully be no more than one day.",
  "id": "5766cb7d3881bc405b6ecb75",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:42:37.574Z",
  "text": "It would hopefully be no more than one day.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Ok. That is hardly worth of mention :)",
  "id": "5766cb9ff0528c4c5bba7615",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:43:11.955Z",
  "text": "Ok. That is hardly worth of mention :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-19T16:43:34.928Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "(Just will have to accompany my brother for an exam, in some other city). Thats fine.",
  "id": "5766cbb16577f032450c8ab8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:43:29.152Z",
  "text": "(Just will have to accompany my brother for an exam, in some other city). Thats fine.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I haven&#39;t blogged since the first week. Will do that as well.",
  "id": "5766cc102a4cd63745ead5c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:45:04.549Z",
  "text": "I haven't blogged since the first week. Will do that as well.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "BTW I haven&#39;t seen your blog in planetsympy. Could you write something, if it is technically possible now.",
  "id": "5766cc22f0528c4c5bba762d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:45:22.669Z",
  "text": "BTW I haven't seen your blog in planetsympy. Could you write something, if it is technically possible now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, will do that by tomorrow.",
  "id": "5766cc38a82a6b0079a70831",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:45:44.560Z",
  "text": "Yes, will do that by tomorrow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "You could include some explanation about problems in the internet connection.",
  "id": "5766cc5ca82a6b0079a70838",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:46:20.131Z",
  "text": "You could include some explanation about problems in the internet connection.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "BTW since starting chats with you for sympy, it has become a habit of mine to use the prefix phrase &quot;I think&quot; every time I talk with people around me  :)",
  "id": "5766ceac3881bc405b6ecc49",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T16:56:12.267Z",
  "text": "BTW since starting chats with you for sympy, it has become a habit of mine to use the prefix phrase \"I think\" every time I talk with people around me  :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I haven&#39;t noticed something like that (at least not yet). In close personal contact there are so many ways of indicating what you think...",
  "id": "5766d333f0528c4c5bba77e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-19T17:15:31.699Z",
  "text": "I haven't noticed something like that (at least not yet). In close personal contact there are so many ways of indicating what you think...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have published blog (updated it, even if you have already read it). Will publish for &quot;low index subgroups&quot; algorithm also today itself. Regarding the comment of &quot;C.A_dict[x]&quot; in low index subgroups algorithm, I knew its existence perhaps I will look into it a little more closely, how that could be fixed.",
  "id": "57691c336577f032450d3ca7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-21T10:51:31.739Z",
  "text": "I have published blog (updated it, even if you have already read it). Will publish for \"low index subgroups\" algorithm also today itself. Regarding the comment of \"C.A_dict[x]\" in low index subgroups algorithm, I knew its existence perhaps I will look into it a little more closely, how that could be fixed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "There does not seem to be any compelling reason to &#39;fix&#39; it. It will work in its current form, if only such generators of the subgroup are included in <code>Y</code> that are also in <code>A</code>. (In principle, it is not necessary to include <em>all</em> generators.)",
  "id": "5769286ebd67400679dbaa77",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-21T11:43:42.151Z",
  "text": "There does not seem to be any compelling reason to 'fix' it. It will work in its current form, if only such generators of the subgroup are included in `Y` that are also in `A`. (In principle, it is not necessary to include *all* generators.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-21T11:46:19.102Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay, that will be fine. Do we need to keep a list of TODO things like this, that we may want to fix later, or I should just put a comment above the inserted line to mark as something <code>TODO</code>?",
  "id": "576928f94227fdc922992b9e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-21T11:46:01.702Z",
  "text": "Okay, that will be fine. Do we need to keep a list of TODO things like this, that we may want to fix later, or I should just put a comment above the inserted line to mark as something `TODO`?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I don&#39;t know how GAP or Magma, deal with this situation.",
  "id": "57692937feaf6cd222adb438",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-21T11:47:03.829Z",
  "text": "I don't know how GAP or Magma, deal with this situation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Maybe it would suffice to add a comment for now. This is not essential for the algorithm. It would only make it more efficient.",
  "id": "57692ddf4227fdc922992d6e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-21T12:06:55.059Z",
  "text": "Maybe it would suffice to add a comment for now. This is not essential for the algorithm. It would only make it more efficient.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<blockquote>\n<p>It seems that Magma goes one step further with low-index subgroups. It gives the generators. That may be harder to implement.</p></blockquote>\n<p>Is that done using the &quot;Reidemeister Schreier algorithm&quot; (Reduced Reidemeister-Schreier to be more correct)? Since the Reidemeister Schreier deals with Presentation of subgroups, taking the standardised coset table of subgroup as input.</p>",
  "id": "576a7f8880f1c6a5257dc2b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:07:36.518Z",
  "text": "> It seems that Magma goes one step further with low-index subgroups. It gives the generators. That may be harder to implement.\n\nIs that done using the \"Reidemeister Schreier algorithm\" (Reduced Reidemeister-Schreier to be more correct)? Since the Reidemeister Schreier deals with Presentation of subgroups, taking the standardised coset table of subgroup as input.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "That is described in section 5.3.1 of Holt",
  "id": "576a7fb0c7594b5f0dd19604",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:08:16.380Z",
  "text": "That is described in section 5.3.1 of Holt",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Yes, I think it is that algorithm.",
  "id": "576a7fd8c7061d590d52b61b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:08:56.772Z",
  "text": "Yes, I think it is that algorithm.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I happened to stumble on another reference that also explains how the presentation can be simplified. But there is no pseudocode, either.",
  "id": "576a80715ba3ccaa25b698a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:11:29.217Z",
  "text": "I happened to stumble on another reference that also explains how the presentation can be simplified. But there is no pseudocode, either.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Which reference? You have the link?",
  "id": "576a80930ede04dc4903b2f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-22T12:12:03.649Z",
  "text": "Which reference? You have the link?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Oh, I forgot. <a href=\"http://staff.itee.uq.edu.au/havas/1974h.pdf\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://staff.itee.uq.edu.au/havas/1974h.pdf</a>",
  "id": "576a82415ba3ccaa25b6997a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:19:13.233Z",
  "text": "Oh, I forgot. http://staff.itee.uq.edu.au/havas/1974h.pdf",
  "unread": false,
  "urls": [
   {
    "url": "http://staff.itee.uq.edu.au/havas/1974h.pdf"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I think for &quot;simplifying presentations&quot; you are referring to 5.3.3 of Holt.",
  "id": "576a8248c417e36c69e52981",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:19:20.347Z",
  "text": "I think for \"simplifying presentations\" you are referring to 5.3.3 of Holt.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-22T12:19:53.024Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, I too was reading that paper by Havas.",
  "id": "576a82546c39b965695f7058",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:19:32.270Z",
  "text": "Yes, I too was reading that paper by Havas.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Reducing the number of generators and relators.",
  "id": "576a826ec7594b5f0dd19751",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:19:58.233Z",
  "text": "Reducing the number of generators and relators.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "That would be the last step in the whole procedure right?",
  "id": "576a82fcc7594b5f0dd197a0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:22:20.141Z",
  "text": "That would be the last step in the whole procedure right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "So we can start to code the beginning part.",
  "id": "576a8315c7594b5f0dd197ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:22:45.630Z",
  "text": "So we can start to code the beginning part.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Yes, I think so.",
  "id": "576a83160ede04dc4903b440",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:22:46.083Z",
  "text": "Yes, I think so.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Do you think you can also include that?",
  "id": "576a8345c7594b5f0dd197cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:23:33.297Z",
  "text": "Do you think you can also include that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "For currently working on it? or doing it in the overall project?",
  "id": "576a8395c7061d590d52b81f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:24:53.478Z",
  "text": "For currently working on it? or doing it in the overall project?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "In this gsoc project.",
  "id": "576a83e9c417e36c69e52a4b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:26:17.308Z",
  "text": "In this gsoc project.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "If you are talking about &quot;simplifying the presentation&quot;, I think I would like to work on that. Since it will be more fun and challenging to work on it.",
  "id": "576a83f7c7061d590d52b854",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:26:31.590Z",
  "text": "If you are talking about \"simplifying the presentation\", I think I would like to work on that. Since it will be more fun and challenging to work on it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It probably is. But have you considered working with permutation groups? A lot of ground work in done already.",
  "id": "576a84432554bbe049ba8157",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:27:47.786Z",
  "text": "It probably is. But have you considered working with permutation groups? A lot of ground work in done already.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "BTW, Schreier generators (and Reidemeister relators) appear in that context, too.",
  "id": "576a84826c39b965695f717d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:28:50.116Z",
  "text": "BTW, Schreier generators (and Reidemeister relators) appear in that context, too.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I thought of working on them in parallel. There are a few terms related to &quot;group structures&quot; that I haven&#39;t read about (like Transversals which are used in Permutation Groups, also regarding Schreier sims algorithm).",
  "id": "576a848d0ede04dc4903b4e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:29:01.648Z",
  "text": "I thought of working on them in parallel. There are a few terms related to \"group structures\" that I haven't read about (like Transversals which are used in Permutation Groups, also regarding Schreier sims algorithm).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That could be good idea. The simplification can be then done independently of how the cosets were created.",
  "id": "576a84e62554bbe049ba81aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:30:30.711Z",
  "text": "That could be good idea. The simplification can be then done independently of how the cosets were created.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Now we have the cosets for subgroups with given generators. And there is another procedure for permutation groups.",
  "id": "576a8552c417e36c69e52aed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:32:18.477Z",
  "text": "Now we have the cosets for subgroups with given generators. And there is another procedure for permutation groups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-22T12:42:12.126Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Sorry, I don&#39;t understand the last part &quot;there is another procedure for permutation groups.&quot;",
  "id": "576a87a00ede04dc4903b64c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:42:08.425Z",
  "text": "Sorry, I don't understand the last part \"there is another procedure for permutation groups.\"",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Cosets for permutation groups.",
  "id": "576a89465ba3ccaa25b69cdb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:49:10.640Z",
  "text": "Cosets for permutation groups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The generators and relators for a subgroup are derived by means of the cosets.",
  "id": "576a898d0ede04dc4903b716",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:50:21.181Z",
  "text": "The generators and relators for a subgroup are derived by means of the cosets.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The procedure is different for permutation groups.",
  "id": "576a89d15ba3ccaa25b69d18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:51:29.022Z",
  "text": "The procedure is different for permutation groups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "okay.",
  "id": "576a89f12554bbe049ba845b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-22T12:52:01.931Z",
  "text": "okay.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems that the symbols <code>y_alpha_x</code> have to created in <code>define_schreier_generators</code>. Perhaps they could be symbols of the form <code>&lt;symbol of x&gt;_&lt;digits of alpha&gt;</code>.",
  "id": "576e4fe28c9263ba30e2b873",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-25T09:33:22.872Z",
  "text": "It seems that the symbols `y_alpha_x` have to created in `define_schreier_generators`. Perhaps they could be symbols of the form `<symbol of x>_<digits of alpha>`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-25T11:30:52.468Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I too was studying about them, I thought they are to be used from somewhere beforehand from present &quot;combinatorics&quot; module. <code>symbols</code> instance was thought to be my second choice (perhaps <code>Dummy</code> to be more precise). Thanks for the rescue.",
  "id": "576e6afc8441a8124d3fb9a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-25T11:29:00.921Z",
  "text": "I too was studying about them, I thought they are to be used from somewhere beforehand from present \"combinatorics\" module. `symbols` instance was thought to be my second choice (perhaps `Dummy` to be more precise). Thanks for the rescue.",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think that there is not much danger of collision so <code>Dummy</code> should not be necessary. It would be convenient if these Schreier generators could be treated as any other generators. Besides, when the presentation is simplified, most of them will probably be dropped, and then it could be possible to devise new names for the remaining ones if desired.",
  "id": "576e6f87971717155440168d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-25T11:48:23.198Z",
  "text": "I think that there is not much danger of collision so `Dummy` should not be necessary. It would be convenient if these Schreier generators could be treated as any other generators. Besides, when the presentation is simplified, most of them will probably be dropped, and then it could be possible to devise new names for the remaining ones if desired.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-25T11:53:43.750Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<blockquote>\n<p>It would be convenient if these Schreier generators could be treated as any other generators</p></blockquote>\n<p>May be will become clear (as we implement other methods) if there is some operation that is necessary to be treated the way <code>FreeGroupElement</code>&#39;s are treated not in <code>Symbol</code>&#39;s instance way.</p>",
  "id": "576e70b49717171554401d8e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-25T11:53:24.377Z",
  "text": "> It would be convenient if these Schreier generators could be treated as any other generators\n\nMay be will become clear (as we implement other methods) if there is some operation that is necessary to be treated the way `FreeGroupElement`'s are treated not in `Symbol`'s instance way.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think we should have a free group on the Schreier generators, and for each generator an element of the subgroup that it would represent. So, in fact, we have a homomorphism from the free group to the subgroup.",
  "id": "576e71fa632b75030f60599a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-25T11:58:50.676Z",
  "text": "I think we should have a free group on the Schreier generators, and for each generator an element of the subgroup that it would represent. So, in fact, we have a homomorphism from the free group to the subgroup.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Do we have something on homomorphisms? I forget.",
  "id": "576e722d8441a8124d3ff08c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-25T11:59:41.984Z",
  "text": "Do we have something on homomorphisms? I forget.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "No, not yet. Even nothing mentioned in my proposal though.",
  "id": "576e724e632b75030f605cf0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-25T12:00:14.084Z",
  "text": "No, not yet. Even nothing mentioned in my proposal though.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Hmm.. Maybe we should just be satisfied by some kind of table (a dictionary?) that would assign an element of the subgroup to each generator symbol.",
  "id": "576e72b0bb1de91c545f2312",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-25T12:01:52.894Z",
  "text": "Hmm.. Maybe we should just be satisfied by some kind of table (a dictionary?) that would assign an element of the subgroup to each generator symbol.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The homomorphism idea is there, but not needed explicitly.",
  "id": "576e72cfa0c12d110f7834fb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-25T12:02:23.829Z",
  "text": "The homomorphism idea is there, but not needed explicitly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "So <code>define_schreier_generators</code> would just return this table.",
  "id": "576e72fe9717171554402d02",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-25T12:03:10.924Z",
  "text": "So `define_schreier_generators` would just return this table.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<code>dict</code> does sound as a good data structure.",
  "id": "576e7326bb1de91c545f2600",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-25T12:03:50.559Z",
  "text": "`dict` does sound as a good data structure.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think so, too.",
  "id": "576e73351ac8bd1a4d4b7164",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-25T12:04:05.681Z",
  "text": "I think so, too.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It will contain everything essential.",
  "id": "576e734a1ac8bd1a4d4b743a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-25T12:04:26.368Z",
  "text": "It will contain everything essential.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Name is useful for identification and printing.",
  "id": "576e73648c9263ba30e46297",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-25T12:04:52.264Z",
  "text": "Name is useful for identification and printing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "And the actual subgroup element will also be needed.",
  "id": "576e739c632b75030f6060a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-25T12:05:48.575Z",
  "text": "And the actual subgroup element will also be needed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It may happen that different names would refer to the same element, but that is why the simplification is there.",
  "id": "576e73f88441a8124d4002fd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-25T12:07:20.116Z",
  "text": "It may happen that different names would refer to the same element, but that is why the simplification is there.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-25T19:28:49.831Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "There is a line on Pg 174 on last 4th paragraph, which says:<br>&quot;computes a word <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi><mo>[</mo><mi>\u03b1</mi><mo separator=\"true\">,</mo><mi>x</mi><mo>]</mo></mrow><annotation encoding=\"application/x-tex\">P[\\alpha, x]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">[</span><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mpunct\">,</span><span class=\"mord mathit\">x</span><span class=\"mclose\">]</span></span></span></span> in <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mi>Y</mi><mo>\u222a</mo><msup><mi>Y</mi><mrow><mo>\u2212</mo><mn>1</mn></mrow></msup><msup><mo>)</mo><mrow><mo>\u2217</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">(Y \\cup Y^{-1})^{*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.8141079999999999em;\"></span><span class=\"strut bottom\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mbin\">\u222a</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.22222em;\">Y</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord\">\u2212</span><span class=\"mord mathrm\">1</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord\">\u2217</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> for each <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03b1</mi><mo>\u2208</mo><mi mathvariant=\"normal\">\u03a9</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha \\in \\Omega</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mrel\">\u2208</span><span class=\"mord mathrm\">\u03a9</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi><mo>\u2208</mo><mi>A</mi><mo>=</mo><mi>X</mi><mo>\u222a</mo><msup><mi>X</mi><mrow><mo>\u2212</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">x \\in A = X \\cup X^{-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.8141079999999999em;\"></span><span class=\"strut bottom\" style=\"height:0.853208em;vertical-align:-0.0391em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">x</span><span class=\"mrel\">\u2208</span><span class=\"mord mathit\">A</span><span class=\"mrel\">=</span><span class=\"mord mathit\" style=\"margin-right:0.07847em;\">X</span><span class=\"mbin\">\u222a</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.07847em;\">X</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord\">\u2212</span><span class=\"mord mathrm\">1</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span>&quot;<br>Why does it says <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mi>Y</mi><mo>\u222a</mo><msup><mi>Y</mi><mrow><mo>\u2212</mo><mn>1</mn></mrow></msup><msup><mo>)</mo><mrow><mo>\u2217</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">(Y \\cup Y^{-1})^{*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.8141079999999999em;\"></span><span class=\"strut bottom\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mbin\">\u222a</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.22222em;\">Y</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord\">\u2212</span><span class=\"mord mathrm\">1</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord\">\u2217</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> instead of just <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mi>Y</mi><mo>\u222a</mo><msup><mi>Y</mi><mrow><mo>\u2212</mo><mn>1</mn></mrow></msup><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">(Y \\cup Y^{-1})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.8141079999999999em;\"></span><span class=\"strut bottom\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mbin\">\u222a</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.22222em;\">Y</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord\">\u2212</span><span class=\"mord mathrm\">1</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mclose\">)</span></span></span></span>. Since the function&#39;s pseudo-code make defintion such that <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi><mo>[</mo><mi>\u03b1</mi><mo separator=\"true\">,</mo><mi>x</mi><mo>]</mo><mo>=</mo><msub><mi>y</mi><mrow><mi>\u03b1</mi><mi>x</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">P[\\alpha, x] = y_{\\alpha x}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">[</span><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mpunct\">,</span><span class=\"mord mathit\">x</span><span class=\"mclose\">]</span><span class=\"mrel\">=</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.03588em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mord mathit\">x</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span>.<br>Perhaps that is used just to include the Identity element, may be?",
  "id": "576eda8f971717155444faef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-25T19:25:03.273Z",
  "text": "There is a line on Pg 174 on last 4th paragraph, which says:\n\"computes a word $$P[\\alpha, x]$$ in $$(Y \\cup Y^{-1})^{*}$$ for each $$\\alpha \\in \\Omega$$ and $$x \\in A = X \\cup X^{-1}$$\"\nWhy does it says $$(Y \\cup Y^{-1})^{*}$$ instead of just $$(Y \\cup Y^{-1})$$. Since the function's pseudo-code make defintion such that $$P[\\alpha, x] = y_{\\alpha x}$$.\nPerhaps that is used just to include the Identity element, may be?",
  "unread": false,
  "urls": [],
  "v": 11
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Got it. The next line explains it: &quot;It is either an empty word or a Schreier generator or inverse of a Schreier generator&quot;.",
  "id": "576edd61632b75030f658db3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-25T19:37:05.009Z",
  "text": "Got it. The next line explains it: \"It is either an empty word or a Schreier generator or inverse of a Schreier generator\".",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "No problem then. I was going to close down and was surprised by seeing you still up.",
  "id": "576edf499717171554453c26",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-25T19:45:13.078Z",
  "text": "No problem then. I was going to close down and was surprised by seeing you still up.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Good night. :)",
  "id": "576edf581ac8bd1a4d50e3f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-25T19:45:28.506Z",
  "text": "Good night. :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Good night.",
  "id": "576edf62bb1de91c5464c41e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-25T19:45:38.527Z",
  "text": "Good night.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Good morning. I have taken a closer look at the implementation in 5.3.1. <code>define_schreier_generators</code> is a little different from what I had imagined. Instead of returning a table, as I suggested above, it simply modifies the coset table by adding the new tables as attributes. Maybe we should follow this line since the <code>rewrite</code> function is built on it.",
  "id": "576f73231ac8bd1a4d55d9d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T06:16:03.364Z",
  "text": "Good morning. I have taken a closer look at the implementation in 5.3.1. `define_schreier_generators` is a little different from what I had imagined. Instead of returning a table, as I suggested above, it simply modifies the coset table by adding the new tables as attributes. Maybe we should follow this line since the `rewrite` function is built on it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Good morning. Yes, it does add those attributes.",
  "id": "576f7354a0c12d110f8319c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T06:16:52.003Z",
  "text": "Good morning. Yes, it does add those attributes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "But one thing. As you suggested for the homomorphism, I do remember the line  for a mapping from each of the introduced schreier generator there will be a subgroup elements. &quot;And the actual subgroup element will also be needed.&quot;",
  "id": "576f739d632b75030f6b6af4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T06:18:05.374Z",
  "text": "But one thing. As you suggested for the homomorphism, I do remember the line  for a mapping from each of the introduced schreier generator there will be a subgroup elements. \"And the actual subgroup element will also be needed.\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "How do we find this corresponding &quot;subgroup element&quot;?",
  "id": "576f73ae632b75030f6b6b0b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T06:18:22.240Z",
  "text": "How do we find this corresponding \"subgroup element\"?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "In particular, the Screier traversal <code>tau</code> is implicit, not written down, which makes it harder to follow the reasoning.",
  "id": "576f73ce632b75030f6b6b2a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T06:18:54.897Z",
  "text": "In particular, the Screier traversal `tau` is implicit, not written down, which makes it harder to follow the reasoning.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-26T06:20:18.745Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Though I do agree, with the use of <code>free_group</code> for the <code>schreier generators</code>, as you suggested above.",
  "id": "576f74151ac8bd1a4d55e8af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T06:20:05.588Z",
  "text": "Though I do agree, with the use of `free_group` for the `schreier generators`, as you suggested above.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "As to the corresponding subgroup element, it is also &#39;hidden&#39; in the <code>rewrite</code>routine.",
  "id": "576f74268441a8124d4b2e77",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T06:20:22.580Z",
  "text": "As to the corresponding subgroup element, it is also 'hidden' in the `rewrite`routine.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "So we need not worry about them if we only follow the pseudocode.",
  "id": "576f7454265214c1306224ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T06:21:08.492Z",
  "text": "So we need not worry about them if we only follow the pseudocode.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It also seems that it is not necessary to explicitly consider the free group generated by the Schreier generators.",
  "id": "576f755dbb1de91c546a0a16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T06:25:33.986Z",
  "text": "It also seems that it is not necessary to explicitly consider the free group generated by the Schreier generators.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-26T06:29:50.397Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Then how do we deal with the arithmetic of free group elements without making a FreeGroup. As I see in the solved example, it removes the elements (relators to be precise) which are cyclic conjugates. The property of cyclic conjugates is there with &quot;FreeGroupElements&quot; (may be only with them).",
  "id": "576f7641265214c130623b85",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T06:29:21.614Z",
  "text": "Then how do we deal with the arithmetic of free group elements without making a FreeGroup. As I see in the solved example, it removes the elements (relators to be precise) which are cyclic conjugates. The property of cyclic conjugates is there with \"FreeGroupElements\" (may be only with them).",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Maybe I was wrong. I have not studied the details yet. Maybe the free group will be useful.",
  "id": "576f769cbb1de91c546a18d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-26T06:30:52.711Z",
  "text": "Maybe I was wrong. I have not studied the details yet. Maybe the free group will be useful.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Ok. I think I too should write the code, and see how things go.",
  "id": "576f7701a0c12d110f8337ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-26T06:32:33.480Z",
  "text": "Ok. I think I too should write the code, and see how things go.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Many details are left unexplained in the pseudocode.",
  "id": "576f77368c9263ba30ef7c10",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-26T06:33:26.337Z",
  "text": "Many details are left unexplained in the pseudocode.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It is clear that <code>rewrite</code> expects to have group elements in <code>P</code>. I now think that <code>define_schreier_generator</code>should construct the free group on the Schreier generators and fill the <code>P</code>table with them and their inverses. It should construct the free group once <code>Y</code> is complete, and then replace the symbols in <code>P</code> by the corresponding group elements before returning.",
  "id": "576f9de9a0c12d110f84b91e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-26T09:18:33.484Z",
  "text": "It is clear that `rewrite` expects to have group elements in `P`. I now think that `define_schreier_generator`should construct the free group on the Schreier generators and fill the `P`table with them and their inverses. It should construct the free group once `Y` is complete, and then replace the symbols in `P` by the corresponding group elements before returning.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Well, I think I agree with you.",
  "id": "576f9ea0265214c130640325",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-26T09:21:36.666Z",
  "text": "Well, I think I agree with you.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think you have some means of finding each generator given its name.",
  "id": "576fa002a0c12d110f84ca8d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-06-26T09:27:30.611Z",
  "text": "I think you have some means of finding each generator given its name.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I think, passing as string input to the <code>free_group</code> would be good, once we collect all the schreier generators.",
  "id": "576fa0598441a8124d4cf449",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T09:28:57.791Z",
  "text": "I think, passing as string input to the `free_group` would be good, once we collect all the schreier generators.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-26T09:31:26.113Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Like <code>gens_str = gens_str + &quot;, &quot; + &#39;%s_%s&#39; % (x, alpha)</code> then we can pass this to <code>free_group</code> this will be our desired group.",
  "id": "576fa0a6a0c12d110f84ceb6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T09:30:14.652Z",
  "text": "Like `gens_str = gens_str + \", \" + '%s_%s' % (x, alpha)` then we can pass this to `free_group` this will be our desired group.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I suppose you could use directly the names of the Symbols in <code>Y</code> instead of this <code>%s_%s</code>.",
  "id": "576fa111265214c1306421f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T09:32:01.551Z",
  "text": "I suppose you could use directly the names of the Symbols in `Y` instead of this `%s_%s`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "But then you need to find the generator element corresponding to each symbol in <code>Y</code> when redefining <code>P</code>.",
  "id": "576fa1558c9263ba30f130ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T09:33:09.857Z",
  "text": "But then you need to find the generator element corresponding to each symbol in `Y` when redefining `P`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Is there a method to do this?",
  "id": "576fa1838c9263ba30f1313f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T09:33:55.726Z",
  "text": "Is there a method to do this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Or is it easiest to collect the generators from the output of <code>free_group</code>. Maybe so.",
  "id": "576fa1de1ac8bd1a4d57a454",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T09:35:26.805Z",
  "text": "Or is it easiest to collect the generators from the output of `free_group`. Maybe so.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, it is easy to collect the generators from the output of <code>free_group</code>.",
  "id": "576fa20da0c12d110f84d92d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T09:36:13.436Z",
  "text": "Yes, it is easy to collect the generators from the output of `free_group`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-26T09:38:37.454Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "<code>Y</code> could be a list. Then the generators would appear in the same order. So, given a symbol, find first its index in <code>Y</code>, and then the corresponding generator.",
  "id": "576fa2898441a8124d4d0608",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T09:38:17.564Z",
  "text": "`Y` could be a list. Then the generators would appear in the same order. So, given a symbol, find first its index in `Y`, and then the corresponding generator.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Given a list <code>Y</code> of symbols, I think there is a Python function to transform it into a string with comma separators.",
  "id": "576fa31897171715544cbf28",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T09:40:40.998Z",
  "text": "Given a list `Y` of symbols, I think there is a Python function to transform it into a string with comma separators.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That could be the input to <code>free_group</code>.",
  "id": "576fa33bbb1de91c546c0ada",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T09:41:15.371Z",
  "text": "That could be the input to `free_group`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<code>.join</code> would do.",
  "id": "576fa34b1ac8bd1a4d57ac97",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T09:41:31.854Z",
  "text": "`.join` would do.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think that would be the easiest way to construct the group.",
  "id": "576fa3761ac8bd1a4d57ace7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T09:42:14.567Z",
  "text": "I think that would be the easiest way to construct the group.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have made a few changes, though <code>Y</code> is made a list, but it contains <code>str</code> instances, instead of <code>Symbol</code> instance.",
  "id": "576fbd45a0c12d110f85fdf4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T11:32:21.475Z",
  "text": "I have made a few changes, though `Y` is made a list, but it contains `str` instances, instead of `Symbol` instance.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-26T11:36:18.572Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Will add a <code>reidemeister_relators</code> routine, which will loop over <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03b1</mi><mo>\u2208</mo><mi mathvariant=\"normal\">\u03a9</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha \\in \\Omega</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mrel\">\u2208</span><span class=\"mord mathrm\">\u03a9</span></span></span></span> and relators of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">G</span></span></span></span> (orginal group), to use the <code>rewrite</code> routine on all of them.",
  "id": "576fbe10265214c1306542b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T11:35:44.732Z",
  "text": "Will add a `reidemeister_relators` routine, which will loop over $$\\alpha \\in \\Omega$$ and relators of $$G$$ (orginal group), to use the `rewrite` routine on all of them.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That looks good. Strings will be better in this case. The empty string looks a little odd, though.",
  "id": "576fd16c632b75030f6f1826",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T12:58:20.977Z",
  "text": "That looks good. Strings will be better in this case. The empty string looks a little odd, though.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, it does. I thought of using the same data type, so ended up using that.",
  "id": "576fd1aa1ac8bd1a4d597f22",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T12:59:22.194Z",
  "text": "Yes, it does. I thought of using the same data type, so ended up using that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Of course, it could be anything distinguishable from the proper names.",
  "id": "576fd21c632b75030f6f1a19",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T13:01:16.454Z",
  "text": "Of course, it could be anything distinguishable from the proper names.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "A minor observation. You could start with a local list <code>Y</code> instead of <code>C.Y</code>. Then pop the first element (the group) from the result of <code>free_group</code> and assign the remainder to <code>C.Y</code>.",
  "id": "576fd3b8bb1de91c546e2681",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-26T13:08:08.692Z",
  "text": "A minor observation. You could start with a local list `Y` instead of `C.Y`. Then pop the first element (the group) from the result of `free_group` and assign the remainder to `C.Y`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-27T03:49:00.655Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Good morning. I have made the above change, though <code>y</code> has been use instead of <code>Y</code> (from what you mentioned above).",
  "id": "5770a22197171715545916da",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-27T03:48:49.409Z",
  "text": "Good morning. I have made the above change, though `y` has been use instead of `Y` (from what you mentioned above).",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I am afraid about adding the attributes to <code>C</code> (i.e <code>CosetTable</code> instance), unless it is good to add it. Adding <code>C.Y</code> doesn&#39;t seem like a good option, but adding <code>C.schreier_free_group</code> does make good sense. We may even forget what forget what <code>C.Y</code>(unless I can comment, still a little harder) indicates,<code>Y</code> doesn&#39;t describe much in itself.<br>May be we can try to make routines to routine return objects, <code>Y</code> in this case, but do define <code>C.schreier_free_group</code>.",
  "id": "5770a5cd9717171554593f8a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-27T04:04:29.235Z",
  "text": "I am afraid about adding the attributes to `C` (i.e `CosetTable` instance), unless it is good to add it. Adding `C.Y` doesn't seem like a good option, but adding `C.schreier_free_group` does make good sense. We may even forget what forget what `C.Y`(unless I can comment, still a little harder) indicates,`Y` doesn't describe much in itself.\nMay be we can try to make routines to routine return objects, `Y` in this case, but do define `C.schreier_free_group`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay, I have updated it. Doesn&#39;t necessarily follows it, but we can think about above comment.",
  "id": "5770aff8632b75030f7a3d66",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-27T04:47:52.683Z",
  "text": "Okay, I have updated it. Doesn't necessarily follows it, but we can think about above comment.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Good morning. It is not clear to me where <code>C.Y</code> would be needed. It could probably be omitted eventually. I think the free group on the Schreier generators could be called  briefly <code>schreier_group</code>. There is little danger of confusion as the final group also has the Reidemeister relators.",
  "id": "5770b389bb1de91c5478ecdf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-27T05:03:05.272Z",
  "text": "Good morning. It is not clear to me where `C.Y` would be needed. It could probably be omitted eventually. I think the free group on the Schreier generators could be called  briefly `schreier_group`. There is little danger of confusion as the final group also has the Reidemeister relators.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I&#39;m not sure if coding the &quot;presentation on the user generators&quot; would actually help to give new ideas about simplification. The simplification of those presentations will probably be much the same. You could, of course, consider the possibility of collecting those methods in a &quot;Tietze transformation&quot; part. On the other hand, It may be easier to design its interface later after seeing what should or can be done. ",
  "id": "57711aa3bb1de91c547e5628",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-27T12:22:59.034Z",
  "text": "I'm not sure if coding the \"presentation on the user generators\" would actually help to give new ideas about simplification. The simplification of those presentations will probably be much the same. You could, of course, consider the possibility of collecting those methods in a \"Tietze transformation\" part. On the other hand, It may be easier to design its interface later after seeing what should or can be done. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<blockquote>\n<p>You could, of course, consider the possibility of collecting those methods in a &quot;Tietze transformation&quot; part.</p></blockquote>\n<p>Yes, will do that.</p>",
  "id": "57711b2da0c12d110f97a363",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-27T12:25:17.745Z",
  "text": "> You could, of course, consider the possibility of collecting those methods in a \"Tietze transformation\" part.\n\nYes, will do that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-27T12:27:25.285Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Since I was skeptical, about what goes in the &quot;Tietze part&quot;, as a few techniques have been already used in  example of &quot;presentation by schreier generators&quot;, but are are actually described only in &quot;Tietze part&quot;",
  "id": "57711ba1a0c12d110f97aad2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-27T12:27:13.212Z",
  "text": "Since I was skeptical, about what goes in the \"Tietze part\", as a few techniques have been already used in  example of \"presentation by schreier generators\", but are are actually described only in \"Tietze part\"",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It is not clear to me how the interface should be designed. Is it possible to do  with one presentation going in and a simplified one coming out?",
  "id": "57711daf265214c130770a01",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-27T12:35:59.114Z",
  "text": "It is not clear to me how the interface should be designed. Is it possible to do  with one presentation going in and a simplified one coming out?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "That is what I don&#39;t know. Though I will figure out.",
  "id": "57711e21bb1de91c547e8eb0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-27T12:37:53.123Z",
  "text": "That is what I don't know. Though I will figure out.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-28T03:18:33.573Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Hi, Kalevi. I received the mail from google that: I have passed the mid-term evaluations. Thank you. I will try to improve upon writing blog posts more often. If you think of any other area, I could try to improve upon, that will be great. :)",
  "id": "5771eb238c9263ba300fc41e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-28T03:12:35.760Z",
  "text": "Hi, Kalevi. I received the mail from google that: I have passed the mid-term evaluations. Thank you. I will try to improve upon writing blog posts more often. If you think of any other area, I could try to improve upon, that will be great. :)",
  "unread": false,
  "urls": [],
  "v": 5
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Hi. Don&#39;t take that mention of blog post too seriously. Google demanded that something should be written.  :)",
  "id": "57720593bb1de91c548c0205",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-28T05:05:23.045Z",
  "text": "Hi. Don't take that mention of blog post too seriously. Google demanded that something should be written.  :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "well from my point of view you should take the blog posts seriously. You are supposed to write one a week ",
  "id": "5772a762632b75030f97e292",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-28T16:35:46.141Z",
  "text": "well from my point of view you should take the blog posts seriously. You are supposed to write one a week ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay Aaron. I will perceive it from your point of view.",
  "id": "5772af818c9263ba301b7f6c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-28T17:10:25.514Z",
  "text": "Okay Aaron. I will perceive it from your point of view.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-28T19:41:56.076Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I am trying upon the <code>eliminate_word</code> routine present in <code>FreeGroupElement</code>. Perhaps it is going to be a component of <code>elimination_technique_1</code> (present in Havas paper). Will see the remaining improvement in the morning. Good night.",
  "id": "5772d2ebbb1de91c54981e63",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-28T19:41:31.894Z",
  "text": "I am trying upon the `eliminate_word` routine present in `FreeGroupElement`. Perhaps it is going to be a component of `elimination_technique_1` (present in Havas paper). Will see the remaining improvement in the morning. Good night.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Good morning. I am reading this elimination technique. I believe that the first <code>i</code> -loop  count <code>len(rels)</code> is fixed in the beginning even if if some relators are deleted later. Maybe <code>for i in range(len(rels) - 1, -1, -1)</code>could be used.",
  "id": "57735d92971717155480f825",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-29T05:33:06.595Z",
  "text": "Good morning. I am reading this elimination technique. I believe that the first `i` -loop  count `len(rels)` is fixed in the beginning even if if some relators are deleted later. Maybe `for i in range(len(rels) - 1, -1, -1)`could be used.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-29T16:33:27.700Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Good evening, Kalevi. There is a case for the current doctest added for <code>reidemeister_presentation</code>, in between using the <code>elimination_technique</code> the relator list equals <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>[</mo><msubsup><mi>x</mi><mn>4</mn><mn>3</mn></msubsup><mo separator=\"true\">,</mo><msubsup><mi>x</mi><mn>3</mn><mn>3</mn></msubsup><mo separator=\"true\">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo>\u2217</mo><msub><mi>y</mi><mn>3</mn></msub><mo>\u2217</mo><msub><mi>y</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msubsup><mi>y</mi><mn>1</mn><mn>2</mn></msubsup><mo>]</mo></mrow><annotation encoding=\"application/x-tex\">[x_4^3, x_3^3, y_1*y_3*y_2, y_1^2]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.8141079999999999em;\"></span><span class=\"strut bottom\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">x</span><span class=\"vlist\"><span style=\"top:0.24810799999999997em;margin-left:0em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">4</span></span></span><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord mathrm\">3</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mpunct\">,</span><span class=\"mord\"><span class=\"mord mathit\">x</span><span class=\"vlist\"><span style=\"top:0.24810799999999997em;margin-left:0em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">3</span></span></span><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord mathrm\">3</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mpunct\">,</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.03588em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">1</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mbin\">\u2217</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.03588em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">3</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mbin\">\u2217</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.03588em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">2</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mpunct\">,</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"vlist\"><span style=\"top:0.24810799999999997em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">1</span></span></span><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord mathrm\">2</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mclose\">]</span></span></span></span>,  and the <code>redundant_gens</code> equals <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>{</mo><msub><mi>x</mi><mn>3</mn></msub><mo>:</mo><msubsup><mi>y</mi><mn>3</mn><mrow><mo>\u2212</mo><mn>1</mn></mrow></msubsup><mo separator=\"true\">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo>:</mo><msubsup><mi>x</mi><mn>4</mn><mrow><mo>\u2212</mo><mn>1</mn></mrow></msubsup><mo>}</mo></mrow><annotation encoding=\"application/x-tex\">\\{x_3: y_3^{-1}, y_2: x_4^{-1}\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.854239em;\"></span><span class=\"strut bottom\" style=\"height:1.120547em;vertical-align:-0.266308em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathit\">x</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">3</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mrel\">:</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"vlist\"><span style=\"top:0.266308em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">3</span></span></span><span style=\"top:-0.403131em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord\">\u2212</span><span class=\"mord mathrm\">1</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mpunct\">,</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.03588em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">2</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mrel\">:</span><span class=\"mord\"><span class=\"mord mathit\">x</span><span class=\"vlist\"><span style=\"top:0.266308em;margin-left:0em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">4</span></span></span><span style=\"top:-0.403131em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord\">\u2212</span><span class=\"mord mathrm\">1</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mclose\">}</span></span></span></span>. For <code>i = 2</code> i.e while processing the index 2 in relator list (the word <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>y</mi><mn>1</mn></msub><mo>\u2217</mo><msub><mi>y</mi><mn>3</mn></msub><mo>\u2217</mo><msub><mi>y</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">y_1*y_3*y_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.46528em;\"></span><span class=\"strut bottom\" style=\"height:0.6597200000000001em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.03588em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">1</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mbin\">\u2217</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.03588em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">3</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mbin\">\u2217</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.03588em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">2</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span>). It assigns redundant_gens<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>[</mo><msub><mi>y</mi><mn>1</mn></msub><mo>]</mo><mo>=</mo><msubsup><mi>y</mi><mn>2</mn><mrow><mo>\u2212</mo><mn>1</mn></mrow></msubsup><mo>\u2217</mo><msubsup><mi>y</mi><mn>3</mn><mrow><mo>\u2212</mo><mn>1</mn></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">[y_1] = y_2^{-1}*y_3^{-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.854239em;\"></span><span class=\"strut bottom\" style=\"height:1.120547em;vertical-align:-0.266308em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.03588em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">1</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mclose\">]</span><span class=\"mrel\">=</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"vlist\"><span style=\"top:0.266308em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">2</span></span></span><span style=\"top:-0.403131em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord\">\u2212</span><span class=\"mord mathrm\">1</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mbin\">\u2217</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"vlist\"><span style=\"top:0.266308em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">3</span></span></span><span style=\"top:-0.403131em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord\">\u2212</span><span class=\"mord mathrm\">1</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span>. But since <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>y</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">y_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.03588em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">1</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> is already there in <code>redundant_gens</code> leading to a bug in <code>elimination_technique_1</code>, I know where problem exactly occurs.",
  "id": "5773f822a0c12d110fc2c680",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-29T16:32:34.613Z",
  "text": "Good evening, Kalevi. There is a case for the current doctest added for `reidemeister_presentation`, in between using the `elimination_technique` the relator list equals $$[x_4^3, x_3^3, y_1*y_3*y_2, y_1^2]$$,  and the `redundant_gens` equals $$\\{x_3: y_3^{-1}, y_2: x_4^{-1}\\}$$. For `i = 2` i.e while processing the index 2 in relator list (the word $$y_1*y_3*y_2$$). It assigns redundant_gens$$[y_1] = y_2^{-1}*y_3^{-1}$$. But since $$y_1$$ is already there in `redundant_gens` leading to a bug in `elimination_technique_1`, I know where problem exactly occurs.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<p>Though the above result is there following the pseudo-code from Havas.</p><blockquote>\n<p>On  the completion of such a  pass through the  relator list all remaining relators are  examined for  occurrences of  redundant generators.</p></blockquote>\n",
  "id": "5773f93b632b75030fab4d5a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-29T16:37:15.657Z",
  "text": "Though the above result is there following the pseudo-code from Havas.\n> On  the completion of such a  pass through the  relator list all remaining relators are  examined for  occurrences of  redundant generators.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Do you want me to look into it?",
  "id": "57740ba2a0c12d110fc3e316",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-29T17:55:46.002Z",
  "text": "Do you want me to look into it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "No, just wanted to inform you. I will try to fix this myself.",
  "id": "57740bb8a0c12d110fc3e369",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-29T17:56:08.205Z",
  "text": "No, just wanted to inform you. I will try to fix this myself.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-06-29T17:58:48.128Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It&#39;s getting late, but maybe you can still work efficiently tonight.",
  "id": "57740c0e265214c130a1b747",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-29T17:57:34.638Z",
  "text": "It's getting late, but maybe you can still work efficiently tonight.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, I can. Will probably look into a few to possibilities I have in mind to fix this.",
  "id": "57740c578c9263ba302ef545",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-29T17:58:47.227Z",
  "text": "Yes, I can. Will probably look into a few to possibilities I have in mind to fix this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I&#39;ll probably be here an hour or so.",
  "id": "57740caea0c12d110fc3f74a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-06-29T18:00:14.456Z",
  "text": "I'll probably be here an hour or so.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-01T08:29:24.308Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<p>Good afternoon.</p><blockquote>\n<p>It is not clear to me how the interface should be designed. Is it possible to do with one presentation going in and a simplified one coming out?</p></blockquote>\n<p>The second presentation way (i.e presentation on the user generators), the generators defined for <code>H</code> are involved. And it doesn&#39;t involve the process of &quot;eliminating generators&quot;, while the presentation on &quot;schreier generators&quot; does involve it. So the answer to the above question seems &quot;No&quot;.</p>",
  "id": "577629a99717171554a741cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-01T08:28:25.884Z",
  "text": "Good afternoon.\n> It is not clear to me how the interface should be designed. Is it possible to do with one presentation going in and a simplified one coming out?\n\nThe second presentation way (i.e presentation on the user generators), the generators defined for `H` are involved. And it doesn't involve the process of \"eliminating generators\", while the presentation on \"schreier generators\" does involve it. So the answer to the above question seems \"No\".",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> I have published the blog for this and last week. Though I found that why I wasn&#39;t getting an interest in writing blog posts, the reason being that sometimes in between writing it, I tend to ask my self &quot;the knowledge of maths required working on group theory in not basic, only a student majoring in maths can understand the blog&quot;, so I tend to forget the target audience for my blog posts, i.e am I supposed to write things in such a way (also explaining the maths specific terms used in my project, like giving their definitions), so that a naive non-math person can understand it?<br>Perhaps the second reason being, I have to setup my blog manually (html code), I know you can&#39;t do anything about the second situation (neither do I want you to :) ). But perhaps you may have something on the first point.",
  "id": "5776b220cdab7a1f4fbebd34",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-01T18:10:40.630Z",
  "text": "@asmeurer I have published the blog for this and last week. Though I found that why I wasn't getting an interest in writing blog posts, the reason being that sometimes in between writing it, I tend to ask my self \"the knowledge of maths required working on group theory in not basic, only a student majoring in maths can understand the blog\", so I tend to forget the target audience for my blog posts, i.e am I supposed to write things in such a way (also explaining the maths specific terms used in my project, like giving their definitions), so that a naive non-math person can understand it?\nPerhaps the second reason being, I have to setup my blog manually (html code), I know you can't do anything about the second situation (neither do I want you to :) ). But perhaps you may have something on the first point.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "either way is fine. When I wrote my blog back when I did GSoC, I tried to explain some of the math. But you can also just assume that the audience is us. In many ways, the blog is also a personal journal to log what you did ",
  "id": "5776b2865c023e194f5100e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-01T18:12:22.991Z",
  "text": "either way is fine. When I wrote my blog back when I did GSoC, I tried to explain some of the math. But you can also just assume that the audience is us. In many ways, the blog is also a personal journal to log what you did ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "you may get more readers if you do it the first way, but I realize that it takes more time and effort ",
  "id": "5776b2ddbdf63af92dd08396",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-01T18:13:49.114Z",
  "text": "you may get more readers if you do it the first way, but I realize that it takes more time and effort ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I can&#39;t see your GSoC blog posts on official blogging site. (Neither in Archives). Do they still exist?",
  "id": "5776b31dd4b6d5012ea41460",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-01T18:14:53.712Z",
  "text": "I can't see your GSoC blog posts on official blogging site. (Neither in Archives). Do they still exist?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "yes they are on my old blog <a href=\"https://asmeurersympy.wordpress.com/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://asmeurersympy.wordpress.com/</a>",
  "id": "5776b32c35bfead379540551",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-01T18:15:08.493Z",
  "text": "yes they are on my old blog https://asmeurersympy.wordpress.com/",
  "unread": false,
  "urls": [
   {
    "url": "https://asmeurersympy.wordpress.com/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I gave up on migrating the posts. The migration script was too broken, and it ended up being more effort than it was worth ",
  "id": "5776b3516a8f789e4af96820",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-01T18:15:45.006Z",
  "text": "I gave up on migrating the posts. The migration script was too broken, and it ended up being more effort than it was worth ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Thanks Aaron, for giving the links. I may look over them. BTW did you read my blog posts?",
  "id": "5776b3f201d3c8d879093e2c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-01T18:18:26.234Z",
  "text": "Thanks Aaron, for giving the links. I may look over them. BTW did you read my blog posts?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "yes, I am reading them now ",
  "id": "5776b40c01d3c8d879093eae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-01T18:18:52.347Z",
  "text": "yes, I am reading them now ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Any opinion or comment you have, that I could improve would be good. Perhaps this is too late for me, I may shut down now.",
  "id": "5776b59d01d3c8d879094da0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-01T18:25:33.135Z",
  "text": "Any opinion or comment you have, that I could improve would be good. Perhaps this is too late for me, I may shut down now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I think you are on the right track with the blog posts ",
  "id": "5776b5f5bdf63af92dd0c011",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-01T18:27:01.323Z",
  "text": "I think you are on the right track with the blog posts ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Good morning, Gaurav. Are you active?",
  "id": "5777673b01d3c8d87911507b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:03:23.066Z",
  "text": "Good morning, Gaurav. Are you active?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, I am here.",
  "id": "5777674626ff03984aa88234",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:03:34.254Z",
  "text": "Yes, I am here.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Good morning.",
  "id": "5777674a5c023e194f596c35",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:03:38.245Z",
  "text": "Good morning.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Yesterday I could do very little. There were other distractions.",
  "id": "57776770cdab7a1f4fc6de94",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:04:16.554Z",
  "text": "Yesterday I could do very little. There were other distractions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "That&#39;s fine. I was thinking myself, about to study and have some structure the current code. Since there are also a few other things that I not aware of right now.",
  "id": "577767a735bfead3795cc7f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:05:11.279Z",
  "text": "That's fine. I was thinking myself, about to study and have some structure the current code. Since there are also a few other things that I not aware of right now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems that you have technical problems with the blog. I think it would be possible to keep the mathematical notation to a minimum.",
  "id": "577767b8d4b6d5012eac715a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:05:28.799Z",
  "text": "It seems that you have technical problems with the blog. I think it would be possible to keep the mathematical notation to a minimum.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "You are referring to the &quot;latex&quot; not getting rendered on PlanetSympy for my blog?",
  "id": "577767f6d4b6d5012eac7255",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:06:30.795Z",
  "text": "You are referring to the \"latex\" not getting rendered on PlanetSympy for my blog?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Yes, It looks like that.",
  "id": "57776820cdab7a1f4fc6e4e3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:07:12.309Z",
  "text": "Yes, It looks like that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-02T07:07:29.282Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Perhaps you can view them on the github website of my mine. That is rendered perfectly over there.",
  "id": "5777682526ff03984aa89131",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:07:17.733Z",
  "text": "Perhaps you can view them on the github website of my mine. That is rendered perfectly over there.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Ok. So it is planetsympy that is not able to reproduce latex?",
  "id": "5777687426ff03984aa898a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:08:36.166Z",
  "text": "Ok. So it is planetsympy that is not able to reproduce latex?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I am not sure. Latex on my website is rendered using &quot;MathJax&quot;.",
  "id": "577768accdab7a1f4fc6eb30",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:09:32.313Z",
  "text": "I am not sure. Latex on my website is rendered using \"MathJax\".",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "And it looks perfect.",
  "id": "577768c135bfead3795cd222",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:09:53.998Z",
  "text": "And it looks perfect.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I don&#39;t see any other student using &quot;Latex&quot; in their blogs. Everyone is just restricting to use <code>&lt;code&gt; ... &lt;/code&gt;</code> for doing their work.",
  "id": "577768eccdab7a1f4fc6ee74",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:10:36.850Z",
  "text": "I don't see any other student using \"Latex\" in their blogs. Everyone is just restricting to use `<code> ... </code>` for doing their work.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I am not familiar with how the text is transferred to planetsympy but it seems that something is left behind. Something telling that mathjax should be used.",
  "id": "5777695201d3c8d879116e98",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:12:18.374Z",
  "text": "I am not familiar with how the text is transferred to planetsympy but it seems that something is left behind. Something telling that mathjax should be used.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I don&#39;t have that much knowledge either but I have a blog feed here at <a href=\"https://gxyd.github.io/feeds/atom.xml\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gxyd.github.io/feeds/atom.xml</a> .",
  "id": "577769b9d4b6d5012eac7f99",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:14:01.374Z",
  "text": "I don't have that much knowledge either but I have a blog feed here at https://gxyd.github.io/feeds/atom.xml .",
  "unread": false,
  "urls": [
   {
    "url": "https://gxyd.github.io/feeds/atom.xml"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Anyway, it is probably enough if the text is ok on your site. Maybe you should add a link to it, usable in planetsympy.",
  "id": "577769ba6a8f789e4a01e12b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:14:02.150Z",
  "text": "Anyway, it is probably enough if the text is ok on your site. Maybe you should add a link to it, usable in planetsympy.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, there is already a link to it.",
  "id": "577769d2bdf63af92dd954d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:14:26.535Z",
  "text": "Yes, there is already a link to it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Clicking on &quot;title of blogs&quot; (i.e <code>GSoC Week 6</code>) on PlanetSymPy will take you to original web page.",
  "id": "57776a20bdf63af92dd95819",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:15:44.398Z",
  "text": "Clicking on \"title of blogs\" (i.e `GSoC Week 6`) on PlanetSymPy will take you to original web page.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Oh, I didn&#39;t know that.",
  "id": "57776a5726ff03984aa8bb2f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:16:39.762Z",
  "text": "Oh, I didn't know that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Cool. Apart from blog, I was thinking that we could go over and see how the things should go for Reidemeister Schreier procedure, perhaps I read there is a variation of it known as RSRP (Reidemeister Schreier Rewriting Process). I am seeing this paper (just started) <a href=\"http://cocoa.dima.unige.it/conference/cocoa2013/posters/YvonneKaroske.pdf\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://cocoa.dima.unige.it/conference/cocoa2013/posters/YvonneKaroske.pdf</a> .",
  "id": "57776b0726ff03984aa8bd08",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:19:35.248Z",
  "text": "Cool. Apart from blog, I was thinking that we could go over and see how the things should go for Reidemeister Schreier procedure, perhaps I read there is a variation of it known as RSRP (Reidemeister Schreier Rewriting Process). I am seeing this paper (just started) http://cocoa.dima.unige.it/conference/cocoa2013/posters/YvonneKaroske.pdf .",
  "unread": false,
  "urls": [
   {
    "url": "http://cocoa.dima.unige.it/conference/cocoa2013/posters/YvonneKaroske.pdf"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think that your blog could be more on the &#39;descriptive&#39; side, with less formal expressions.",
  "id": "57776b1f35bfead3795cdea6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:19:59.502Z",
  "text": "I think that your blog could be more on the 'descriptive' side, with less formal expressions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It might make it less exact, but then, very few will really care to read it in detail.",
  "id": "57776b6dcdab7a1f4fc702f6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:21:17.025Z",
  "text": "It might make it less exact, but then, very few will really care to read it in detail.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay, I will try to execute it in that way then.",
  "id": "57776b9c01d3c8d8791180a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:22:04.582Z",
  "text": "Okay, I will try to execute it in that way then.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I was also thinking of spending more time today with the procedure. What is it in the paper that you are now interested in?",
  "id": "57776be1cdab7a1f4fc703db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:23:13.835Z",
  "text": "I was also thinking of spending more time today with the procedure. What is it in the paper that you are now interested in?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Sorry, actually I haven&#39;t even read it. I thought of searching for RSRP after I read the question and answer <a href=\"http://math.stackexchange.com/questions/311452/what-are-the-algorithms-available-to-get-all-the-elements-of-a-finitely-presente/311502#311502\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://math.stackexchange.com/questions/311452/what-are-the-algorithms-available-to-get-all-the-elements-of-a-finitely-presente/311502#311502</a> . ",
  "id": "57776c486a8f789e4a01fe2f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:24:56.983Z",
  "text": "Sorry, actually I haven't even read it. I thought of searching for RSRP after I read the question and answer http://math.stackexchange.com/questions/311452/what-are-the-algorithms-available-to-get-all-the-elements-of-a-finitely-presente/311502#311502 . ",
  "unread": false,
  "urls": [
   {
    "url": "http://math.stackexchange.com/questions/311452/what-are-the-algorithms-available-to-get-all-the-elements-of-a-finitely-presente/311502#311502"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems a nice summary. Most of it you have already implemented?",
  "id": "57776c7101d3c8d879118f52",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:25:37.037Z",
  "text": "It seems a nice summary. Most of it you have already implemented?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-02T07:26:32.123Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Seems like yes. Surely not the &quot;Reidemeister Rewriting Process&quot; part.",
  "id": "57776ca1bdf63af92dd97966",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:26:25.111Z",
  "text": "Seems like yes. Surely not the \"Reidemeister Rewriting Process\" part.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Actually I was referring to the poster in the link above :)",
  "id": "57776cf35c023e194f59b5be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:27:47.946Z",
  "text": "Actually I was referring to the poster in the link above :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "But the heading says, &quot;Using Grobner bases&quot;, I don&#39;t know how is it done using that. (I don&#39;t have knowledge about that).",
  "id": "57776d15cdab7a1f4fc71246",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:28:21.268Z",
  "text": "But the heading says, \"Using Grobner bases\", I don't know how is it done using that. (I don't have knowledge about that).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That is the authors own contribution that probably would take us too far from the book.",
  "id": "57776e1b35bfead3795cfe7e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:32:43.498Z",
  "text": "That is the authors own contribution that probably would take us too far from the book.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Very little is said about the details.",
  "id": "57776e6435bfead3795cfef1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:33:56.890Z",
  "text": "Very little is said about the details.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "In the CGT notes by Alexandar Hulpke there is a complete chapter on &quot;Rewriting&quot;.",
  "id": "57776f0735bfead3795d060b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:36:39.161Z",
  "text": "In the CGT notes by Alexandar Hulpke there is a complete chapter on \"Rewriting\".",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "But I am guessing it could be something like this: The generators and words are carefully ordered (remember grevlex, etc..). Then the relators are compared in pairs to see if they could be combined to get a new, hopefully simpler relator.",
  "id": "57776f3626ff03984aa8eedb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:37:26.359Z",
  "text": "But I am guessing it could be something like this: The generators and words are carefully ordered (remember grevlex, etc..). Then the relators are compared in pairs to see if they could be combined to get a new, hopefully simpler relator.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That is essentially what Gr\u00f6bner did with the generators of a polynomial ideal.",
  "id": "57776f5a01d3c8d87911aa17",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:38:02.124Z",
  "text": "That is essentially what Gr\u00f6bner did with the generators of a polynomial ideal.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay. Thought it doesn&#39;t list the &quot;RSRP&quot; but lists other methods like Knuth Bendix Completion, Confluence.",
  "id": "57776fa75c023e194f59dc3a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:39:19.793Z",
  "text": "Okay. Thought it doesn't list the \"RSRP\" but lists other methods like Knuth Bendix Completion, Confluence.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It is probably best to finish this part without those extensions. There is only a limited time available.",
  "id": "5777706101d3c8d87911b091",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:42:25.709Z",
  "text": "It is probably best to finish this part without those extensions. There is only a limited time available.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay, will finish the current task first.",
  "id": "577770995c023e194f59e3bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:43:21.622Z",
  "text": "Okay, will finish the current task first.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I am beginning to think that this &#39;RSRP` is actually about the same as what you have already been implementing. The author of the SO answer does not seem to know it very well.",
  "id": "5777717501d3c8d87911b97e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:47:01.836Z",
  "text": "I am beginning to think that this 'RSRP` is actually about the same as what you have already been implementing. The author of the SO answer does not seem to know it very well.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "You mean the &quot;Rewriting&quot; refers just to the rewriting of relators?",
  "id": "577771f85c023e194f59f09c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:49:12.102Z",
  "text": "You mean the \"Rewriting\" refers just to the rewriting of relators?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "That is the &quot;simplification of relators and removal of redundant generators&quot;.",
  "id": "5777721301d3c8d87911bcba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:49:39.324Z",
  "text": "That is the \"simplification of relators and removal of redundant generators\".",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think so in this case.",
  "id": "5777721dcdab7a1f4fc738ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:49:49.367Z",
  "text": "I think so in this case.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It may look formally a little different but same in content.",
  "id": "57777251cdab7a1f4fc73b33",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:50:41.529Z",
  "text": "It may look formally a little different but same in content.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay, I will ping you, when I make some substantial changes to the PR.",
  "id": "57777286bdf63af92dd9a686",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:51:34.252Z",
  "text": "Okay, I will ping you, when I make some substantial changes to the PR.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "So when you meet a relator where some generator appears exactly once, you can represent it by means of the others. That is the essence of rewriting even if the rewriting table is not prepared explicitly.",
  "id": "577772cf5c023e194f59f754",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:52:47.969Z",
  "text": "So when you meet a relator where some generator appears exactly once, you can represent it by means of the others. That is the essence of rewriting even if the rewriting table is not prepared explicitly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-02T07:55:45.798Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, it make good sense. And the &quot;simplification&quot; part is not included in this whole &quot;rewriting process&quot;. So the section 2.5 of paper is &quot;Reidemeister Rewriting Process&quot;, (just not named explicitly in the paper).",
  "id": "5777737601d3c8d87911c3a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-02T07:55:34.112Z",
  "text": "Yes, it make good sense. And the \"simplification\" part is not included in this whole \"rewriting process\". So the section 2.5 of paper is \"Reidemeister Rewriting Process\", (just not named explicitly in the paper).",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<p>There are certain keywords present in <code>GAP</code>, do you have guess what these could be used for in GAP</p><pre><code><span class=\"title\">TZ_FLAGS</span>         TZ_GENERATORS    TZ_LENGTHS       TZ_MODIFIED      TZ_NUMREDUNDS    TZ_OCCUR         TZ_STATUS        \nTZ_FREEGENS      TZ_INVERSES      TZ_LENGTHTIETZE  TZ_NUMGENS       TZ_NUMRELS       TZ_RELATORS      TZ_TOTAL</code></pre><p>These are top-level variables (all return some finite integer value).</p>",
  "id": "577908bbcdab7a1f4fd8cd10",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T12:44:43.240Z",
  "text": "There are certain keywords present in `GAP`, do you have guess what these could be used for in GAP\n```\nTZ_FLAGS         TZ_GENERATORS    TZ_LENGTHS       TZ_MODIFIED      TZ_NUMREDUNDS    TZ_OCCUR         TZ_STATUS        \nTZ_FREEGENS      TZ_INVERSES      TZ_LENGTHTIETZE  TZ_NUMGENS       TZ_NUMRELS       TZ_RELATORS      TZ_TOTAL\n```\nThese are top-level variables (all return some finite integer value).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-03T12:49:02.254Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Good evening. The main thing now remains is how we structure the code? Since the Tietze transformation can&#39;t be used independently at all, I mean it is currently embedded into the Reidemeister Schreier procedure.",
  "id": "5779092735bfead3796eaa84",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T12:46:31.341Z",
  "text": "Good evening. The main thing now remains is how we structure the code? Since the Tietze transformation can't be used independently at all, I mean it is currently embedded into the Reidemeister Schreier procedure.",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Those names in GAP don&#39;t reveal much. I guess they somehow control the simplification by Tietze transformations. But maybe that kind of control is not necessary in our case. Also, I think that  the transformations can be in the Reidemeister-Schreier module.",
  "id": "57791be0bdf63af92deb9bc0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T14:06:24.159Z",
  "text": "Those names in GAP don't reveal much. I guess they somehow control the simplification by Tietze transformations. But maybe that kind of control is not necessary in our case. Also, I think that  the transformations can be in the Reidemeister-Schreier module.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "You mean a separate file for &quot;subgroup presentations&quot;?",
  "id": "57791c90cdab7a1f4fd9a04f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T14:09:20.192Z",
  "text": "You mean a separate file for \"subgroup presentations\"?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have read that GAP allows users to control the way to manipulate the presentations, perhaps these are helpful in that.",
  "id": "57791cce5c023e194f6aeb47",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T14:10:22.239Z",
  "text": "I have read that GAP allows users to control the way to manipulate the presentations, perhaps these are helpful in that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That may not be necessary at this point.",
  "id": "57791cd6cdab7a1f4fd9a13b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T14:10:30.395Z",
  "text": "That may not be necessary at this point.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "You are probably right in that they are intended for users to experiment with.",
  "id": "57791d12bdf63af92debb0c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T14:11:30.805Z",
  "text": "You are probably right in that they are intended for users to experiment with.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Also regarding whether the output of &quot;relators&quot; and &quot;generators&quot; coming out of &quot;reidemeister_presentation&quot; is currently a <code>set</code>&#39;s, how do maintain consistency with the output?",
  "id": "57791d5ed4b6d5012ebee8b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T14:12:46.078Z",
  "text": "Also regarding whether the output of \"relators\" and \"generators\" coming out of \"reidemeister_presentation\" is currently a `set`'s, how do maintain consistency with the output?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-03T14:14:05.248Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "There probably cannot be much detailed explanation about the TZ-variables.",
  "id": "57791d655c023e194f6af632",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T14:12:53.926Z",
  "text": "There probably cannot be much detailed explanation about the TZ-variables.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-07-03T14:15:00.046Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay. I was hoping you would add something like &quot;TZ&quot; (to make it specific).Thanks.",
  "id": "57791d8cd4b6d5012ebeed7f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T14:13:32.586Z",
  "text": "Okay. I was hoping you would add something like \"TZ\" (to make it specific).Thanks.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "About the output. Are there also other types of output?",
  "id": "57791df026ff03984abb62cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T14:15:12.570Z",
  "text": "About the output. Are there also other types of output?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "The thing is the output sets doesn&#39;t make a consistency.",
  "id": "57791e135c023e194f6afe68",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T14:15:47.370Z",
  "text": "The thing is the output sets doesn't make a consistency.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-03T14:16:02.010Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "The other possible output could be <code>lists</code>&#39;s",
  "id": "57791e206a8f789e4a148376",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T14:16:00.300Z",
  "text": "The other possible output could be `lists`'s",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Or tuples.",
  "id": "57791e3cbdf63af92debbfd6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T14:16:28.130Z",
  "text": "Or tuples.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Maybe even Tuples.",
  "id": "57791e4cbdf63af92debbffa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T14:16:44.420Z",
  "text": "Maybe even Tuples.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, I think the final <code>C.reidemeister_relators</code> could be a <code>tuple</code> instance.",
  "id": "57791e945c023e194f6b025a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T14:17:56.833Z",
  "text": "Yes, I think the final `C.reidemeister_relators` could be a `tuple` instance.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "But maybe the choice is not so important now. It can always be changed later.",
  "id": "57791e9601d3c8d87923c042",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T14:17:58.374Z",
  "text": "But maybe the choice is not so important now. It can always be changed later.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "My preference is on <code>tuple</code>, at least now.",
  "id": "57791eb701d3c8d87923c087",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T14:18:31.035Z",
  "text": "My preference is on `tuple`, at least now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That is what Python will use natively when you write <code>return res1, res2, ...</code>.",
  "id": "57791f0526ff03984abb6d8b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T14:19:49.253Z",
  "text": "That is what Python will use natively when you write `return res1, res2, ...`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes.",
  "id": "57791f25d4b6d5012ebf0252",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T14:20:21.400Z",
  "text": "Yes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<p>As to the seeing in Handbook (topic of simplification). There is this line</p><blockquote>\n<p>As  we  shall  see  shortly,  simplification  is  performed  in  a  series  of  simplification rounds. A typical calling sequence <code>TIETZE(e, m, p)</code>, say, is to repeat the following two steps as many times as possible.</p></blockquote>\n",
  "id": "57791f6a5c023e194f6b0c7f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T14:21:30.691Z",
  "text": "As to the seeing in Handbook (topic of simplification). There is this line\n> As  we  shall  see  shortly,  simplification  is  performed  in  a  series  of  simplification rounds. A typical calling sequence `TIETZE(e, m, p)`, say, is to repeat the following two steps as many times as possible.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Here <code>e</code> and <code>m</code> are positive integers, and 0 \u2264 p \u22641.",
  "id": "57791fc635bfead3796fc818",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T14:23:02.981Z",
  "text": "Here `e` and `m` are positive integers, and 0 \u2264 p \u22641.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<code>e</code> refers to elimination <code>e</code> generators. IIRC.",
  "id": "5779200c35bfead3796fcb67",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T14:24:12.528Z",
  "text": "`e` refers to elimination `e` generators. IIRC.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "and similarly <code>m</code> refers to some possible number of relators (to be deleted may be).",
  "id": "5779202f35bfead3796fcbe1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T14:24:47.014Z",
  "text": "and similarly `m` refers to some possible number of relators (to be deleted may be).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-03T14:25:30.141Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "It is on Page 185, last 3rd paragraph.",
  "id": "5779204735bfead3796fcc04",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T14:25:11.713Z",
  "text": "It is on Page 185, last 3rd paragraph.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I have not been reading those parts of the book. The logic looks a bit complicated. There is not much on the actual implementation.",
  "id": "577933375c023e194f6c0f32",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-03T15:45:59.757Z",
  "text": "I have not been reading those parts of the book. The logic looks a bit complicated. There is not much on the actual implementation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Hi Kalevi, I had to be out for some reason. Will get back tomorrow. Sorry for delay.",
  "id": "577b439fef3990705baf74fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-05T05:20:31.423Z",
  "text": "Hi Kalevi, I had to be out for some reason. Will get back tomorrow. Sorry for delay.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "opened <span data-link-type=\"issue\" data-issue=\"45\" data-issue-repo=\"sympy/planet-sympy\" class=\"issue\">sympy/planet-sympy#45</span> about the planet sympy math thing ",
  "id": "577bf4309d3eadd7236aca0c",
  "issues": [
   {
    "number": "45",
    "repo": "sympy/planet-sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-05T17:53:52.032Z",
  "text": "opened https://github.com/sympy/planet-sympy/issues/45 about the planet sympy math thing ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-06T09:18:47.744Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It looks like all Schreier generators would be eliminated one after another. Have you any idea why this is happening?",
  "id": "577ccce89d3eadd723768f22",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-06T09:18:32.889Z",
  "text": "It looks like all Schreier generators would be eliminated one after another. Have you any idea why this is happening?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I am not complete on task of debugging it. But we get a relator <code>a_0**3</code>, since we definitely need &quot;only&quot; to have <code>a_0**13</code> (which is there), but an extra <code>a_0**3</code> relator is also coming up in computation.",
  "id": "577ce1b24105fd1c6a1fb2ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-06T10:47:14.860Z",
  "text": "I am not complete on task of debugging it. But we get a relator `a_0**3`, since we definitely need \"only\" to have `a_0**13` (which is there), but an extra `a_0**3` relator is also coming up in computation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Is it  in <code>simplify_presentation</code>?",
  "id": "577ce8f9190978c0782fe817",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-06T11:18:17.667Z",
  "text": "Is it  in `simplify_presentation`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I am not sure. But I think one lower level bug is also there in <code>identity_cyclic_reduction</code>.",
  "id": "577cea14b40345d144bf927d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-06T11:23:00.980Z",
  "text": "I am not sure. But I think one lower level bug is also there in `identity_cyclic_reduction`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<code>(x**2*y*x**-5).identity_cyclic_reduction()</code> returns <code>x**7*y</code> , which is wrong!",
  "id": "577cea4d8a1597510bdc6464",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-06T11:23:57.972Z",
  "text": "`(x**2*y*x**-5).identity_cyclic_reduction()` returns `x**7*y` , which is wrong!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I even added wrong doctest examples for it.",
  "id": "577ceb169bedd84d0b2b3ff6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-06T11:27:18.046Z",
  "text": "I even added wrong doctest examples for it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It is a conjugate?",
  "id": "577ceb58b40345d144bfb1d0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-06T11:28:24.911Z",
  "text": "It is a conjugate?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I would have expected that <code>simplify_presentation</code> would have removed multiple relators.",
  "id": "577ceb9c8a1597510bdc7f23",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-06T11:29:32.107Z",
  "text": "I would have expected that `simplify_presentation` would have removed multiple relators.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-06T11:31:04.143Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<blockquote>\n<p>Is it a conjugate?</p></blockquote>\n<p>No. I think it is the &quot;cyclic&quot; reduction of an element.</p>",
  "id": "577cebd7f13ce42b2590c270",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-06T11:30:31.106Z",
  "text": "> Is it a conjugate?\n\nNo. I think it is the \"cyclic\" reduction of an element.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I used this link <a href=\"http://planetmath.org/cyclicallyreduced\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://planetmath.org/cyclicallyreduced</a>",
  "id": "577cebdbb17106c944c6de59",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-06T11:30:35.111Z",
  "text": "I used this link http://planetmath.org/cyclicallyreduced",
  "unread": false,
  "urls": [
   {
    "url": "http://planetmath.org/cyclicallyreduced"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I think you are right in calling it &quot;conjugate&quot;.",
  "id": "577ced27190978c0783055c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-06T11:36:07.331Z",
  "text": "I think you are right in calling it \"conjugate\".",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think that the cyclic reduction should be the conjugate <code>x**-5*x**2*y*x**-5*x**5 = x**-3*y</code>.",
  "id": "577cef4a60b585bb78376fa6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-06T11:45:14.361Z",
  "text": "I think that the cyclic reduction should be the conjugate `x**-5*x**2*y*x**-5*x**5 = x**-3*y`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "At least that is shorter. The definition is not very clear.",
  "id": "577cef99b17106c944c72cfb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-06T11:46:33.019Z",
  "text": "At least that is shorter. The definition is not very clear.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Isn&#39;t this just the &quot;normal&quot; reduction by multiplication?",
  "id": "577cefb9190978c078307d61",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-06T11:47:05.389Z",
  "text": "Isn't this just the \"normal\" reduction by multiplication?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Not the same because of the conjugation by <code>x**-5</code>.",
  "id": "577ceffb190978c078308105",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-06T11:48:11.479Z",
  "text": "Not the same because of the conjugation by `x**-5`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-06T11:50:12.814Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Mathematically I agree, but in our case <code>x**-5*x**2*y*x**-5*x**5</code> would be automatically reduced to <code>x**-3*y</code> even before any processing by <code>.identity_cyclic_reudction()</code> is done.",
  "id": "577cf07060b585bb783780ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-06T11:50:08.246Z",
  "text": "Mathematically I agree, but in our case `x**-5*x**2*y*x**-5*x**5` would be automatically reduced to `x**-3*y` even before any processing by `.identity_cyclic_reudction()` is done.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<blockquote>\n<p>I would have expected that simplify_presentation would have removed multiple relators.</p></blockquote>\n<p>Yes, I can see that it is not doing that.</p>",
  "id": "577cf0bfb17106c944c7431d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-06T11:51:27.402Z",
  "text": "> I would have expected that simplify_presentation would have removed multiple relators.\n\nYes, I can see that it is not doing that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think that <code>identity_cyclic_permutation</code> should use the sum <code>exp1 + exp2</code> instead of the difference. And then it does not matter if <code>exp1 &gt; 0</code> or not.",
  "id": "577cf2df9bedd84d0b2bb476",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-06T12:00:31.414Z",
  "text": "I think that `identity_cyclic_permutation` should use the sum `exp1 + exp2` instead of the difference. And then it does not matter if `exp1 > 0` or not.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-06T12:06:51.637Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I thought of a little different. Since the fix you suggested i.e using <code>exp1 + exp2</code> for <code>(x**-5*y*x**3).identity_cyclic_reudction()</code> would return <code>x**-2*y</code> but I thought of returning <code>y*x**2</code> (i.e reducing the -ve powers, with same index size).",
  "id": "577cf449b40345d144c03ae1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-06T12:06:33.773Z",
  "text": "I thought of a little different. Since the fix you suggested i.e using `exp1 + exp2` for `(x**-5*y*x**3).identity_cyclic_reudction()` would return `x**-2*y` but I thought of returning `y*x**2` (i.e reducing the -ve powers, with same index size).",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Though, both are mathematically correct, I agree.",
  "id": "577cf473190978c07830bb1b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-06T12:07:15.698Z",
  "text": "Though, both are mathematically correct, I agree.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think it could be either <code>x**-2*y</code> or <code>y*x**-2</code>, which are cyclic conjugates.",
  "id": "577cf5a660b585bb7837cfee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-06T12:12:22.187Z",
  "text": "I think it could be either `x**-2*y` or `y*x**-2`, which are cyclic conjugates.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The exponents should not change under cyclic conjugation.",
  "id": "577cf5fff13ce42b25915a07",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-06T12:13:51.666Z",
  "text": "The exponents should not change under cyclic conjugation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-07T05:05:49.199Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Good morning! The current presentation is mathematically correct. But is not the finest of the presentations. This is the <a href=\"https://gist.github.com/gxyd/a019450e8a34364367abe1e2269c0701\" rel=\"nofollow\" target=\"_blank\" class=\"link\">current answer</a>. This is the &quot;saturated&quot; presentation.",
  "id": "577de272e84c8f002784fd16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-07T05:02:42.037Z",
  "text": "Good morning! The current presentation is mathematically correct. But is not the finest of the presentations. This is the [current answer](https://gist.github.com/gxyd/a019450e8a34364367abe1e2269c0701). This is the \"saturated\" presentation.",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/gxyd/a019450e8a34364367abe1e2269c0701"
   }
  ],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "In the final presentation <code>c_1</code> is not there, it should be the generator which is to make final presentation the most simplified one.",
  "id": "577de2c33eaf66535e34e3ff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-07T05:04:03.905Z",
  "text": "In the final presentation `c_1` is not there, it should be the generator which is to make final presentation the most simplified one.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Good morning! I am inclined to think that this result might be &#39;good enough&#39;. I really did not expect much more. I suspect that constructing an algorithm that could produce a result comparable to one that a mathematician would produce is a much bigger task.",
  "id": "577de77ac9b49c1d6fc2def9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-07T05:24:10.228Z",
  "text": "Good morning! I am inclined to think that this result might be 'good enough'. I really did not expect much more. I suspect that constructing an algorithm that could produce a result comparable to one that a mathematician would produce is a much bigger task.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Considering your comment. I think it will be better to implement the &quot;presentation on subgroup generators&quot; (i.e modified coset enumeration) in another PR.",
  "id": "577e2642064f828707d15c5f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-07T09:52:02.178Z",
  "text": "Considering your comment. I think it will be better to implement the \"presentation on subgroup generators\" (i.e modified coset enumeration) in another PR.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Yes, I think that is a good idea. Then there will not be too many commits to merge at the same time.",
  "id": "577e2c4b3eaf66535e3880b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-07T10:17:47.145Z",
  "text": "Yes, I think that is a good idea. Then there will not be too many commits to merge at the same time.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I am having some problem with the definition of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>p</mi><mi>P</mi></msub></mrow><annotation encoding=\"application/x-tex\">p_P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\">p</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">P</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> which is defined to be an array over <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>Y</mi><mo>\u222a</mo><msup><mi>Y</mi><mrow><mo>\u2212</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">Y \\cup Y^{-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.8141079999999999em;\"></span><span class=\"strut bottom\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mbin\">\u222a</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.22222em;\">Y</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord\">\u2212</span><span class=\"mord mathrm\">1</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span>, such that <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi><mo>[</mo><mi>\u03b1</mi><mo>]</mo><mo>=</mo><mi>\u03b2</mi></mrow><annotation encoding=\"application/x-tex\">p[\\alpha] = \\beta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">p</span><span class=\"mopen\">[</span><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mclose\">]</span><span class=\"mrel\">=</span><span class=\"mord mathit\" style=\"margin-right:0.05278em;\">\u03b2</span></span></span></span> implies that <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03c4</mi><mo>(</mo><mi>\u03b1</mi><mo>)</mo><msub><mo>=</mo><mi>G</mi></msub><mi>\u03d5</mi><mo>(</mo><msub><mi>p</mi><mi>P</mi></msub><mo>[</mo><mi>\u03b1</mi><mo>]</mo><mo>)</mo><mi>\u03c4</mi><mo>(</mo><mi>\u03b2</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">\\tau(\\alpha) =_G \\phi(p_P[\\alpha]) \\tau(\\beta)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.1132em;\">\u03c4</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mclose\">)</span><span class=\"mrel\"><span class=\"mrel\">=</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\">G</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mord mathit\">\u03d5</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathit\">p</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">P</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mopen\">[</span><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mclose\">]</span><span class=\"mclose\">)</span><span class=\"mord mathit\" style=\"margin-right:0.1132em;\">\u03c4</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.05278em;\">\u03b2</span><span class=\"mclose\">)</span></span></span></span> . I have got a feeling that <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>p</mi><mi>P</mi></msub></mrow><annotation encoding=\"application/x-tex\">p_P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\">p</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">P</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> can may be <strong>only</strong> defined for <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi><mo>[</mo><mi>\u03b1</mi><mo>]</mo><mo>=</mo><mi>\u03b2</mi></mrow><annotation encoding=\"application/x-tex\">p[\\alpha] = \\beta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">p</span><span class=\"mopen\">[</span><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mclose\">]</span><span class=\"mrel\">=</span><span class=\"mord mathit\" style=\"margin-right:0.05278em;\">\u03b2</span></span></span></span> (with <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03b1</mi><mo>\u2260</mo><mi>\u03b2</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha \\ne \\beta </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.716em;\"></span><span class=\"strut bottom\" style=\"height:0.9309999999999999em;vertical-align:-0.215em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mrel\">\u2260</span><span class=\"mord mathit\" style=\"margin-right:0.05278em;\">\u03b2</span></span></span></span>) i.e when <code>coincidence</code> occurs, i.e should be a <code>dict</code> instance.",
  "id": "578204d0b79455146f816c6d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-10T08:18:24.905Z",
  "text": "I am having some problem with the definition of $$p_P$$ which is defined to be an array over $$Y \\cup Y^{-1}$$, such that $$p[\\alpha] = \\beta$$ implies that $$\\tau(\\alpha) =_G \\phi(p_P[\\alpha]) \\tau(\\beta)$$ . I have got a feeling that $$p_P$$ can may be **only** defined for $$p[\\alpha] = \\beta$$ (with $$\\alpha \\ne \\beta $$) i.e when `coincidence` occurs, i.e should be a `dict` instance.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-10T08:24:38.375Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I know that <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03c4</mi></mrow><annotation encoding=\"application/x-tex\">\\tau</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.1132em;\">\u03c4</span></span></span></span> hasn&#39;t been dealt in any computable way by now. So may be that formula can&#39;t be used be directly atleast. I have used <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>p</mi><mi>P</mi></msub></mrow><annotation encoding=\"application/x-tex\">p_P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\">p</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">P</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> as <code>p_p = []</code> currently in the PR till now.",
  "id": "5782052b59cfbd4c5e669706",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-10T08:19:55.189Z",
  "text": "I know that $$\\tau$$ hasn't been dealt in any computable way by now. So may be that formula can't be used be directly atleast. I have used $$p_P$$ as `p_p = []` currently in the PR till now.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems that the items in <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>p</mi><mi>P</mi></msub></mrow><annotation encoding=\"application/x-tex\">p_P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\">p</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">P</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> should be <em>words</em> over the alphabet <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>Y</mi><mo>\u222a</mo><msup><mi>Y</mi><mrow><mo>\u2212</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">Y\\cup Y^{-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.8141079999999999em;\"></span><span class=\"strut bottom\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mbin\">\u222a</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.22222em;\">Y</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord\">\u2212</span><span class=\"mord mathrm\">1</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span>. The function <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03c4</mi></mrow><annotation encoding=\"application/x-tex\">\\tau</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.1132em;\">\u03c4</span></span></span></span> selects a unique representative from each coset (denoted by) <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03b1</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span></span></span></span>.  It is a mapping from the index set of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">p</span></span></span></span> to words in <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>A</mi><mo>\u2217</mo></msup></mrow><annotation encoding=\"application/x-tex\">A^*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.688696em;\"></span><span class=\"strut bottom\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\">A</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord\">\u2217</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> such that the chosen element is represented by <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03c4</mi><mo>(</mo><mi>\u03b1</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">\\tau(\\alpha)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.1132em;\">\u03c4</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mclose\">)</span></span></span></span>. It is built up implicitly as new cosets <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03b2</mi><mo>=</mo><msup><mi>\u03b1</mi><mi>x</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\beta = \\alpha^x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.69444em;\"></span><span class=\"strut bottom\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.05278em;\">\u03b2</span><span class=\"mrel\">=</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord mathit\">x</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> are introduced by setting <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03c4</mi><mo>(</mo><mi>\u03b2</mi><mo>)</mo><mo>=</mo><mi>\u03c4</mi><mo>(</mo><mi>\u03b1</mi><mo>)</mo><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">\\tau(\\beta)=\\tau(\\alpha)x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.1132em;\">\u03c4</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.05278em;\">\u03b2</span><span class=\"mclose\">)</span><span class=\"mrel\">=</span><span class=\"mord mathit\" style=\"margin-right:0.1132em;\">\u03c4</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mclose\">)</span><span class=\"mord mathit\">x</span></span></span></span>.",
  "id": "57821637bdafd191075273a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-10T09:32:39.467Z",
  "text": "It seems that the items in $$p_P$$ should be *words* over the alphabet $$Y\\cup Y^{-1}$$. The function $$\\tau$$ selects a unique representative from each coset (denoted by) $$\\alpha$$.  It is a mapping from the index set of $$p$$ to words in $$A^*$$ such that the chosen element is represented by $$\\tau(\\alpha)$$. It is built up implicitly as new cosets $$\\beta = \\alpha^x$$ are introduced by setting $$\\tau(\\beta)=\\tau(\\alpha)x$$.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Now, the problem is that cosets may be defined several times, and later identified by <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi><mo>(</mo><mi>\u03b1</mi><mo>)</mo><mo>=</mo><mi>\u03b2</mi></mrow><annotation encoding=\"application/x-tex\">p(\\alpha)=\\beta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">p</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mclose\">)</span><span class=\"mrel\">=</span><span class=\"mord mathit\" style=\"margin-right:0.05278em;\">\u03b2</span></span></span></span>.",
  "id": "578216bdb79455146f821be3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-10T09:34:53.581Z",
  "text": "Now, the problem is that cosets may be defined several times, and later identified by $$p(\\alpha)=\\beta$$.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Hence the values of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03c4</mi></mrow><annotation encoding=\"application/x-tex\">\\tau</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.1132em;\">\u03c4</span></span></span></span> may be defined several times.",
  "id": "578217167aeb08052797f287",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-10T09:36:22.182Z",
  "text": "Hence the values of $$\\tau$$ may be defined several times.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The purpose of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>p</mi><mi>P</mi></msub></mrow><annotation encoding=\"application/x-tex\">p_P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\">p</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">P</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> is to compensate for this. ",
  "id": "578217393eaf66535e64fb3e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-10T09:36:57.275Z",
  "text": "The purpose of $$p_P$$ is to compensate for this. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "If <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi><mo>(</mo><mi>\u03b1</mi><mo>)</mo><mo>=</mo><mi>\u03b2</mi></mrow><annotation encoding=\"application/x-tex\">p(\\alpha)=\\beta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">p</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mclose\">)</span><span class=\"mrel\">=</span><span class=\"mord mathit\" style=\"margin-right:0.05278em;\">\u03b2</span></span></span></span>, then <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03c4</mi><mo>(</mo><mi>\u03b1</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">\\tau(\\alpha)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.1132em;\">\u03c4</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mclose\">)</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03c4</mi><mo>(</mo><mi>\u03b2</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">\\tau(\\beta)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.1132em;\">\u03c4</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.05278em;\">\u03b2</span><span class=\"mclose\">)</span></span></span></span> are in the same coset.",
  "id": "578217a87aeb08052797f5c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-10T09:38:48.537Z",
  "text": "If $$p(\\alpha)=\\beta$$, then $$\\tau(\\alpha)$$ and $$\\tau(\\beta)$$ are in the same coset.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-10T09:47:36.211Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Hence there is a unique element <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.69444em;\"></span><span class=\"strut bottom\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">h</span></span></span></span> of the subgroup <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03c4</mi><mo>(</mo><mi>\u03b1</mi><mo>)</mo><mo>=</mo><mi>h</mi><mi>\u03c4</mi><mo>(</mo><mi>\u03b2</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">\\tau(\\alpha)=h\\tau(\\beta)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.1132em;\">\u03c4</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mclose\">)</span><span class=\"mrel\">=</span><span class=\"mord mathit\">h</span><span class=\"mord mathit\" style=\"margin-right:0.1132em;\">\u03c4</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.05278em;\">\u03b2</span><span class=\"mclose\">)</span></span></span></span> in <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">G</span></span></span></span>.",
  "id": "57821836bdafd1910752898c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-10T09:41:10.004Z",
  "text": "Hence there is a unique element $$h$$ of the subgroup $$H$$ such that $$\\tau(\\alpha)=h\\tau(\\beta)$$ in $$G$$.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-07-10T09:44:31.757Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Since <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span></span></span></span> is generated by the Schreier generators <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>, there is a word <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>w</mi></mrow><annotation encoding=\"application/x-tex\">w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.02691em;\">w</span></span></span></span> in <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>Y</mi><mo>\u222a</mo><msup><mi>Y</mi><mrow><mo>\u2212</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">Y\\cup Y^{-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.8141079999999999em;\"></span><span class=\"strut bottom\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mbin\">\u222a</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.22222em;\">Y</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord\">\u2212</span><span class=\"mord mathrm\">1</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> representing <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.69444em;\"></span><span class=\"strut bottom\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">h</span></span></span></span>, which is denoted by <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi><mo>=</mo><mi>\u03c6</mi><mo>(</mo><mi>w</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">h = \\varphi(w)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">h</span><span class=\"mrel\">=</span><span class=\"mord mathit\">\u03c6</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.02691em;\">w</span><span class=\"mclose\">)</span></span></span></span>.",
  "id": "578218f0bdafd19107529346",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-10T09:44:16.479Z",
  "text": "Since $$H$$ is generated by the Schreier generators $$Y$$, there is a word $$w$$ in $$Y\\cup Y^{-1}$$ representing $$h$$, which is denoted by $$h = \\varphi(w)$$.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The word is saved in the table as <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>p</mi><mi>P</mi></msub><mo>(</mo><mi>\u03b1</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">p_P(\\alpha)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\">p</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">P</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mclose\">)</span></span></span></span> so that <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03c4</mi><mo>(</mo><mi>\u03b1</mi><mo>)</mo><mo>=</mo><mi>\u03c6</mi><mo>(</mo><msub><mi>p</mi><mi>P</mi></msub><mo>(</mo><mi>\u03b1</mi><mo>)</mo><mo>)</mo><mi>\u03c4</mi><mo>(</mo><mi>\u03b2</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">\\tau(\\alpha) = \\varphi(p_P(\\alpha))\\tau(\\beta)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.1132em;\">\u03c4</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mclose\">)</span><span class=\"mrel\">=</span><span class=\"mord mathit\">\u03c6</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathit\">p</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">P</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mord mathit\" style=\"margin-right:0.1132em;\">\u03c4</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.05278em;\">\u03b2</span><span class=\"mclose\">)</span></span></span></span> again in <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">G</span></span></span></span>.",
  "id": "57821a303eaf66535e6529af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-10T09:49:36.728Z",
  "text": "The word is saved in the table as $$p_P(\\alpha)$$ so that $$\\tau(\\alpha) = \\varphi(p_P(\\alpha))\\tau(\\beta)$$ again in $$G$$.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have published the blog for last week. Just letting you know so you don&#39;t have to ponder over when will I write it :)",
  "id": "5783841859cfbd4c5e7661ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-11T11:33:44.746Z",
  "text": "I have published the blog for last week. Just letting you know so you don't have to ponder over when will I write it :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": ": )",
  "id": "5783a507bdafd191076413d0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-11T13:54:15.326Z",
  "text": ": )",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Good evening!. As for now we should move to the topic of &quot;cosets in permutation groups&quot;? You mentioned about section 4.6.7 from the Handbook.",
  "id": "578a06e48423d0842440b2e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-16T10:05:24.779Z",
  "text": "Good evening!. As for now we should move to the topic of \"cosets in permutation groups\"? You mentioned about section 4.6.7 from the Handbook.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-16T10:08:27.215Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<p>I am looking through that section. You had mentioned in the mail &quot;next thing to do&quot;</p><blockquote>\n<p>It can be based on the existing implementation of the Screier-Sims algorithm.</p></blockquote>\n<p>So implementation of this topic require an understanding of Schreier Sims algorithm?</p>",
  "id": "578a078b3cb52e8b24c8a163",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-16T10:08:11.178Z",
  "text": "I am looking through that section. You had mentioned in the mail \"next thing to do\"\n> It can be based on the existing implementation of the Screier-Sims algorithm.\n\nSo implementation of this topic require an understanding of Schreier Sims algorithm?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Hi, welcome back. I don&#39;t think it is necessary to know the details of the Schreier-Sims algorithm and its implementation, just an understanding of the result should suffice. You could start looking into that, but perhaps you could also consider reviewing and completing the previous work on fp groups before going on.",
  "id": "578a1395914c51592b254511",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-16T10:59:33.747Z",
  "text": "Hi, welcome back. I don't think it is necessary to know the details of the Schreier-Sims algorithm and its implementation, just an understanding of the result should suffice. You could start looking into that, but perhaps you could also consider reviewing and completing the previous work on fp groups before going on.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I am trying to use the <a href=\"https://coverage.readthedocs.io/en/coverage-4.1/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">code coverage</a> to get the stats for the tests.",
  "id": "578b160bd11cd288123730fb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-17T05:22:19.176Z",
  "text": "I am trying to use the [code coverage](https://coverage.readthedocs.io/en/coverage-4.1/) to get the stats for the tests.",
  "unread": false,
  "urls": [
   {
    "url": "https://coverage.readthedocs.io/en/coverage-4.1/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "But I am getting some errors like<pre><code>gaurav<span class=\"variable\">@stallman</span><span class=\"symbol\">:~/Public/sympy/sympy/solvers</span><span class=\"variable\">$ </span>coverage report -m\n<span class=\"constant\">Name </span>   <span class=\"constant\">Stmts </span>  <span class=\"constant\">Miss </span> <span class=\"constant\">Cover </span>  <span class=\"constant\">Missing</span>\n-------------------------------------\n<span class=\"constant\">No </span>data to report.</code></pre>",
  "id": "578b16438423d084244a699c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-17T05:23:15.845Z",
  "text": "But I am getting some errors like\n```\ngaurav@stallman:~/Public/sympy/sympy/solvers$ coverage report -m\nName    Stmts   Miss  Cover   Missing\n-------------------------------------\nNo data to report.\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I have almost no experience on this area. Sometimes I have doubted their usefulness.",
  "id": "578b18878423d084244a8549",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-17T05:32:55.829Z",
  "text": "I have almost no experience on this area. Sometimes I have doubted their usefulness.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Is this the first time you are trying to use the tests?",
  "id": "578b18ac3cb52e8b24d20a25",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-17T05:33:32.777Z",
  "text": "Is this the first time you are trying to use the tests?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-17T05:34:42.505Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "No worries, I found it. It is done using<pre><code>bin/coverage_report<span class=\"class\">.py</span> sympy/combinatorics</code></pre>",
  "id": "578b18eae4375c9212f7bf5a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-17T05:34:34.868Z",
  "text": "No worries, I found it. It is done using\n```\nbin/coverage_report.py sympy/combinatorics\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<blockquote>\n<p>Is this the first time you are trying to use the tests?</p></blockquote>\n<p>Perhaps I used it last almost one year ago.</p>",
  "id": "578b19223c5129720e431f18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-17T05:35:30.630Z",
  "text": "> Is this the first time you are trying to use the tests?\n\nPerhaps I used it last almost one year ago.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "If you want to take a look at the code coverage report, I have uploaded them here on <a href=\"http://gxyd.github.io/gsoc2016/covhtml/index.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">my website page</a> . Though the files of interest are only a few (i.e <code>fp_groups.py</code> and <code>free_groups.py</code>), rest don&#39;t matter here.",
  "id": "578b1e60196179690ef2b09a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-17T05:57:52.518Z",
  "text": "If you want to take a look at the code coverage report, I have uploaded them here on [my website page](http://gxyd.github.io/gsoc2016/covhtml/index.html) . Though the files of interest are only a few (i.e `fp_groups.py` and `free_groups.py`), rest don't matter here.",
  "unread": false,
  "urls": [
   {
    "url": "http://gxyd.github.io/gsoc2016/covhtml/index.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It is interesting to see that some lines in the scan routines are not covered. Do we need additional tests?",
  "id": "578b1f81d11cd288123774d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-17T06:02:41.346Z",
  "text": "It is interesting to see that some lines in the scan routines are not covered. Do we need additional tests?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-17T06:06:52.169Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I will see. If we need tests I will try to do that in a single test. There are a quite a few examples in Havas papers one would possibly do the job.",
  "id": "578b20673cb52e8b24d23aa8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-17T06:06:31.257Z",
  "text": "I will see. If we need tests I will try to do that in a single test. There are a quite a few examples in Havas papers one would possibly do the job.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "editedAt": "2016-07-17T18:44:31.655Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Can there be more than one transversal of subgroup <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span></span></span></span> in a group <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">G</span></span></span></span>?",
  "id": "578bd0da3cb52e8b24d8cc63",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-17T18:39:22.392Z",
  "text": "Can there be more than one transversal of subgroup $$H$$ in a group $$G$$?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-07-17T18:50:05.625Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Yes. A general transversal is formed by choosing one element out of each coset.",
  "id": "578bd33c3cb52e8b24d8f560",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-17T18:49:32.426Z",
  "text": "Yes. A general transversal is formed by choosing one element out of each coset.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "And Schreier Sims algorithm does this computation of &quot;transversal&quot; itself?",
  "id": "578bd38b3cb52e8b24d8ffa5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-17T18:50:51.548Z",
  "text": "And Schreier Sims algorithm does this computation of \"transversal\" itself?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "If this is too late for you we can continue this in the morning.",
  "id": "578bd3ed914c51592b351327",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-17T18:52:29.729Z",
  "text": "If this is too late for you we can continue this in the morning.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I&#39;m not sure if Schreier-Sims does that explicitly. In fact, I have not studied its implementation in SymPy well enough.",
  "id": "578bd4513cb52e8b24d90bcb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-17T18:54:09.752Z",
  "text": "I'm not sure if Schreier-Sims does that explicitly. In fact, I have not studied its implementation in SymPy well enough.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "We have one chosen &quot;transveral&quot; is probably called the &quot;basic_transverals&quot; as has been used in implementation in SymPy.",
  "id": "578bd463196179690ef95c0e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-17T18:54:27.030Z",
  "text": "We have one chosen \"transveral\" is probably called the \"basic_transverals\" as has been used in implementation in SymPy.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "If there is such a transversal, that will probably help.",
  "id": "578bd48d196179690ef95c66",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-17T18:55:09.113Z",
  "text": "If there is such a transversal, that will probably help.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<pre><code>@property\n 652     def basic_transversals(self):\n 653         \"\"\"\n 654         Return basic transversals relative to a base and strong generating <span class=\"operator\"><span class=\"keyword\">set</span>.\n <span class=\"number\">655</span> \n <span class=\"number\">656</span>         The basic transversals <span class=\"keyword\">are</span> transversals <span class=\"keyword\">of</span> the basic orbits. They\n <span class=\"number\">657</span>         <span class=\"keyword\">are</span> provided <span class=\"keyword\">as</span> a list <span class=\"keyword\">of</span> dictionaries, <span class=\"keyword\">each</span> dictionary <span class=\"keyword\">having</span>\n <span class=\"number\">658</span>         keys - the elements <span class=\"keyword\">of</span> one <span class=\"keyword\">of</span> the basic orbits, <span class=\"keyword\">and</span> <span class=\"keyword\">values</span> - the\n <span class=\"number\">659</span>         <span class=\"keyword\">corresponding</span> transversal elements. See [<span class=\"number\">1</span>], pp. <span class=\"number\">87</span>-<span class=\"number\">89</span> <span class=\"keyword\">for</span> more\n <span class=\"number\">660</span>         information.</span></code></pre>",
  "id": "578bd4be9f79ee4f2bd1a806",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-17T18:55:58.905Z",
  "text": "```\n@property\n 652     def basic_transversals(self):\n 653         \"\"\"\n 654         Return basic transversals relative to a base and strong generating set.\n 655 \n 656         The basic transversals are transversals of the basic orbits. They\n 657         are provided as a list of dictionaries, each dictionary having\n 658         keys - the elements of one of the basic orbits, and values - the\n 659         corresponding transversal elements. See [1], pp. 87-89 for more\n 660         information.\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That looks promising. You could probably start from that.",
  "id": "578bd4ead11cd288123e189b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-17T18:56:42.396Z",
  "text": "That looks promising. You could probably start from that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "But I was planning to close now. We can continue tomorrow. Good night!",
  "id": "578bd532d11cd288123e1bc0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-17T18:57:54.354Z",
  "text": "But I was planning to close now. We can continue tomorrow. Good night!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Fine. Good night!",
  "id": "578bd546d11cd288123e1e6c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-17T18:58:14.762Z",
  "text": "Fine. Good night!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Good morning. Your latest PR does not seem to introduce new functionality. How would you describe the status of fp groups? Did you plan to continue with modified Todd-Coxeter later? Perhaps it could be time to add some documentation.",
  "id": "578c62af196179690efe7ec9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-18T05:01:35.839Z",
  "text": "Good morning. Your latest PR does not seem to introduce new functionality. How would you describe the status of fp groups? Did you plan to continue with modified Todd-Coxeter later? Perhaps it could be time to add some documentation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I tried to look into <code>perm_groups</code> a little more closely. It seems that <code>basic_transversals</code> is a by-product of the Schreier-Sims algorithm.",
  "id": "578c64533cb52e8b24de896d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-18T05:08:35.952Z",
  "text": "I tried to look into `perm_groups` a little more closely. It seems that `basic_transversals` is a by-product of the Schreier-Sims algorithm.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It is a transversal wrt the trivial subgroup <code>H</code> that consists of the identity alone. But maybe that could suffice for us. Then it would not be necessary to consider the more general case in section 4.6.7. I think that the basic transversal would suffice for the study of not-too-big permuation groups.",
  "id": "578c6530e4375c9212037db1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-18T05:12:16.924Z",
  "text": "It is a transversal wrt the trivial subgroup `H` that consists of the identity alone. But maybe that could suffice for us. Then it would not be necessary to consider the more general case in section 4.6.7. I think that the basic transversal would suffice for the study of not-too-big permuation groups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<blockquote>\n<p>How would you describe the status of fp groups?</p></blockquote>\n<p>I think we can have some methods like <code>order</code>, <code>index</code> from the user point of view. Since we may not want the user to directly call the methods of <code>coset_enumeration_c</code> or <code>coset_enumeration_r</code> just to find the order.</p>",
  "id": "578cc6383cb52e8b24e25af9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-18T12:06:16.398Z",
  "text": "> How would you describe the status of fp groups?\n\nI think we can have some methods like `order`, `index` from the user point of view. Since we may not want the user to directly call the methods of `coset_enumeration_c` or `coset_enumeration_r` just to find the order.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<blockquote>\n<p>Did you plan to continue with modified Todd-Coxeter later?</p></blockquote>\n<p>No will complete the changes in <code>fp_groups.py</code> first.</p>",
  "id": "578cc6a69f79ee4f2bda9681",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-18T12:08:06.344Z",
  "text": "> Did you plan to continue with modified Todd-Coxeter later?\n\nNo will complete the changes in `fp_groups.py` first.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have now a schedule of lectures in morning, 8 AM to 1 PM IST.",
  "id": "578cc6ed914c51592b3eb352",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-18T12:09:17.930Z",
  "text": "I have now a schedule of lectures in morning, 8 AM to 1 PM IST.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I also think that modified case can wait. You can return to it later if there is nothing else to do.",
  "id": "578cc7173c5129720e533c67",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-18T12:09:59.517Z",
  "text": "I also think that modified case can wait. You can return to it later if there is nothing else to do.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems that you have finished the lectures by the time I return to this at noon or so.",
  "id": "578cc79f3c5129720e53428f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-18T12:12:15.822Z",
  "text": "It seems that you have finished the lectures by the time I return to this at noon or so.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<p>Currently there is a bug:</p><pre><code>&gt;&gt;&gt; F, r, s, t = free_group(<span class=\"string\">\"r, s, t\"</span>)\n&gt;&gt;&gt; E1 = FpGroup(F, [t<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>r<span class=\"keyword\">*</span>t<span class=\"keyword\">*</span>r<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-2, r<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>s<span class=\"keyword\">*</span>r<span class=\"keyword\">*</span>s<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-2, s<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>t<span class=\"keyword\">*</span>s<span class=\"keyword\">*</span>t<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-2])\n&gt;&gt;&gt; C1 = coset_enumeration_c(E1, [])\n&gt;&gt;&gt; C1.compress()\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<span class=\"variable\">&lt;ipython-input-6-fdff318db95f&gt;</span> in <span class=\"variable\">&lt;module&gt;</span>()\n----&gt; 1 C1.compress()\n\n/home/gaurav/Public/sympy/sympy/combinatorics/fp_groups.py in compress(self)\n    573                     beta = self.table[alpha][A_dict[x]]\n    574                     self.table[gamma][A_dict[x]] = beta\n--&gt; 575                     self.table[beta][A_dict_inv[x]] == gamma\n    576         <span class=\"comment\"># all the cosets in the table are live cosets</span>\n    577         self.p = list(range(gamma + 1))\n\nTypeError: list indices must be integers, not NoneType</code></pre><p>Possibly the bug is <strong>not</strong> in <code>compress</code>.</p>",
  "id": "578cffd675045f8767ee6a4a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-18T16:12:06.664Z",
  "text": "Currently there is a bug:\n```\n>>> F, r, s, t = free_group(\"r, s, t\")\n>>> E1 = FpGroup(F, [t**-1*r*t*r**-2, r**-1*s*r*s**-2, s**-1*t*s*t**-2])\n>>> C1 = coset_enumeration_c(E1, [])\n>>> C1.compress()\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-6-fdff318db95f> in <module>()\n----> 1 C1.compress()\n\n/home/gaurav/Public/sympy/sympy/combinatorics/fp_groups.py in compress(self)\n    573                     beta = self.table[alpha][A_dict[x]]\n    574                     self.table[gamma][A_dict[x]] = beta\n--> 575                     self.table[beta][A_dict_inv[x]] == gamma\n    576         # all the cosets in the table are live cosets\n    577         self.p = list(range(gamma + 1))\n\nTypeError: list indices must be integers, not NoneType\n```\nPossibly the bug is **not** in `compress`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Is it possible to create a code coverage report on a single test?",
  "id": "578d070c841e619d16fd4246",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-18T16:42:52.900Z",
  "text": "Is it possible to create a code coverage report on a single test?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I haven&#39;t used it like that. But will have to comment the current tests and add the &quot;new test&quot; (without commenting).",
  "id": "578d08093d74e5a01654392c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-18T16:47:05.390Z",
  "text": "I haven't used it like that. But will have to comment the current tests and add the \"new test\" (without commenting).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I never understood <a href=\"https://github.com/sympy/sympy/blob/master/sympy/combinatorics/fp_groups.py#L252\" rel=\"nofollow\" target=\"_blank\" class=\"link\">this line</a>. Maybe you should look into it more closely.",
  "id": "578d09a616487c5e5144b78a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-18T16:53:58.218Z",
  "text": "I never understood [this line](https://github.com/sympy/sympy/blob/master/sympy/combinatorics/fp_groups.py#L252). Maybe you should look into it more closely.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/master/sympy/combinatorics/fp_groups.py#L252"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Where should I add the documentation?",
  "id": "578e29af16487c5e5152b30d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-19T13:22:55.638Z",
  "text": "Where should I add the documentation?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Just like earlier like this?<pre><code> 652     def basic_transversals(self):\n 653         \"\"\"\n 654         Return basic transversals relative to a base and strong generating <span class=\"operator\"><span class=\"keyword\">set</span>.\n <span class=\"number\">655</span> \n <span class=\"number\">656</span>         The basic transversals <span class=\"keyword\">are</span> transversals <span class=\"keyword\">of</span> the basic orbits. They\n <span class=\"number\">657</span>         <span class=\"keyword\">are</span> provided <span class=\"keyword\">as</span> a list <span class=\"keyword\">of</span> dictionaries, <span class=\"keyword\">each</span> dictionary <span class=\"keyword\">having</span>\n <span class=\"number\">658</span>         keys - the elements <span class=\"keyword\">of</span> one <span class=\"keyword\">of</span> the basic orbits, <span class=\"keyword\">and</span> <span class=\"keyword\">values</span> - the\n <span class=\"number\">659</span>         <span class=\"keyword\">corresponding</span> transversal elements. See [<span class=\"number\">1</span>], pp. <span class=\"number\">87</span>-<span class=\"number\">89</span> <span class=\"keyword\">for</span> more\n <span class=\"number\">660</span>         information.</span></code></pre>",
  "id": "578e29e92d04e0585187e876",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-19T13:23:53.201Z",
  "text": "Just like earlier like this?\n```\n 652     def basic_transversals(self):\n 653         \"\"\"\n 654         Return basic transversals relative to a base and strong generating set.\n 655 \n 656         The basic transversals are transversals of the basic orbits. They\n 657         are provided as a list of dictionaries, each dictionary having\n 658         keys - the elements of one of the basic orbits, and values - the\n 659         corresponding transversal elements. See [1], pp. 87-89 for more\n 660         information.\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-19T14:40:23.691Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That will probably be the main part of the documentation. But then something should be done with the Sphinx documentation too.",
  "id": "578e3bc50720fd587a9bec64",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-19T14:40:05.301Z",
  "text": "That will probably be the main part of the documentation. But then something should be done with the Sphinx documentation too.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-07-20T13:29:03.356Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "If in the documentation if we need to use the maths, what should I tend to follow<ol>\n<li>Like done in <code>perm_groups.py</code> file <a href=\"https://github.com/sympy/sympy/blob/master/sympy/combinatorics/perm_groups.py#L2090\" rel=\"nofollow\" target=\"_blank\" class=\"link\">for defining greek symbols</a></li>\n<li>Or like what we have been doing in <code>fp_groups.py</code> <a href=\"https://github.com/sympy/sympy/blob/master/sympy/combinatorics/fp_groups.py#L170\" rel=\"nofollow\" target=\"_blank\" class=\"link\">for defining greek symbols</a> i.e making use of top level # encoing utf-8.<br>?</li>\n</ol>\n",
  "id": "578f7c6c3d74e5a01671c350",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-20T13:28:12.011Z",
  "text": "If in the documentation if we need to use the maths, what should I tend to follow\n1. Like done in `perm_groups.py` file [for defining greek symbols](https://github.com/sympy/sympy/blob/master/sympy/combinatorics/perm_groups.py#L2090)\n2. Or like what we have been doing in `fp_groups.py` [for defining greek symbols](https://github.com/sympy/sympy/blob/master/sympy/combinatorics/fp_groups.py#L170) i.e making use of top level # encoing utf-8.\n?",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/master/sympy/combinatorics/perm_groups.py#L2090"
   },
   {
    "url": "https://github.com/sympy/sympy/blob/master/sympy/combinatorics/fp_groups.py#L170"
   }
  ],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Also I am a little unclear about when to use single backtick &quot; <code>code goes gere</code> &quot; and when to use the double backtick in the documenation? When I intend to use some mathematics in documentation then double backtick is used only? Otherwise in a situation for the use of some use of method like <code>CosetTable.max_stack_size</code> then only single back tick is used?",
  "id": "578f80f99f35137e67e8aaed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-20T13:47:37.484Z",
  "text": "Also I am a little unclear about when to use single backtick \" ` code goes gere ` \" and when to use the double backtick in the documenation? When I intend to use some mathematics in documentation then double backtick is used only? Otherwise in a situation for the use of some use of method like `CosetTable.max_stack_size` then only single back tick is used?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have been using these things, but I have been sure about their usage.",
  "id": "578f81142d04e0585198248f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-20T13:48:04.984Z",
  "text": "I have been using these things, but I have been sure about their usage.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-20T13:50:07.559Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I am talking about back-ticks to be clear <a href=\"http://www-cc.gakushuin.ac.jp/~xomura/winforgerm/images/keyboards/keyboard1.gif\" rel=\"nofollow\" target=\"_blank\" class=\"link\">this key</a>, <strong>not</strong> quotes",
  "id": "578f81770720fd587aab1272",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-20T13:49:43.402Z",
  "text": "I am talking about back-ticks to be clear [this key](http://www-cc.gakushuin.ac.jp/~xomura/winforgerm/images/keyboards/keyboard1.gif), **not** quotes",
  "unread": false,
  "urls": [
   {
    "url": "http://www-cc.gakushuin.ac.jp/~xomura/winforgerm/images/keyboards/keyboard1.gif"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have liked to Thank you for being so much active. Since even if sometimes I am not interested to work on project (like these days), your quick response have a much +ve impact on my working.",
  "id": "578f8d81841e619d161d30f6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-07-20T14:41:05.061Z",
  "text": "I have liked to Thank you for being so much active. Since even if sometimes I am not interested to work on project (like these days), your quick response have a much +ve impact on my working.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "the LaTeX style will look better in Sphinx ",
  "id": "578f943e16487c5e51642e99",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-20T15:09:50.350Z",
  "text": "the LaTeX style will look better in Sphinx ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think that double backticks should be favoured in ordinary docstrings since they do not assume mathjax type rendering. In rst files in the doc directory that does not matter so much.",
  "id": "578f94483d74e5a0167330ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-20T15:10:00.323Z",
  "text": "I think that double backticks should be favoured in ordinary docstrings since they do not assume mathjax type rendering. In rst files in the doc directory that does not matter so much.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "although I believe you can use greek unicode characters inside a latex ",
  "id": "578f94510720fd587aac179a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-20T15:10:09.175Z",
  "text": "although I believe you can use greek unicode characters inside a latex ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "anyway, <a href=\"https://github.com/sympy/sympy/blob/master/sympy/combinatorics/perm_groups.py#L2090\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/blob/master/sympy/combinatorics/perm_groups.py#L2090</a> should be single backquotes, since it&#39;s latex",
  "id": "578f945f9f35137e67e9d03e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-20T15:10:23.595Z",
  "text": "anyway, https://github.com/sympy/sympy/blob/master/sympy/combinatorics/perm_groups.py#L2090 should be single backquotes, since it's latex",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/master/sympy/combinatorics/perm_groups.py#L2090"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "double backquotes is for code ",
  "id": "578f94659f35137e67e9d04b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-20T15:10:29.772Z",
  "text": "double backquotes is for code ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I think it will be useful to import all the docstrings into sphinx, even the internal ones ",
  "id": "578f94a09f35137e67e9d576",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-20T15:11:28.583Z",
  "text": "I think it will be useful to import all the docstrings into sphinx, even the internal ones ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Aaron has been thinking these matter more than I have. Better take his advise :)",
  "id": "578f94ca2d04e05851995a81",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-20T15:12:10.370Z",
  "text": "Aaron has been thinking these matter more than I have. Better take his advise :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Hello <span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> Can we set up some major task for this week? Perhaps &quot;Cosets in Permutation Groups&quot; has been mentioned as a task, (I remember the bug in <code>coset_enumeration_c</code> as well). Work on adding documentation I am doing right now. Perhaps something after that we need to add in further list?",
  "id": "578fbdf20720fd587aaeb1bb",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-20T18:07:46.550Z",
  "text": "Hello @jksuom Can we set up some major task for this week? Perhaps \"Cosets in Permutation Groups\" has been mentioned as a task, (I remember the bug in `coset_enumeration_c` as well). Work on adding documentation I am doing right now. Perhaps something after that we need to add in further list?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-20T18:19:14.346Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "In the proposal I had also included the <a href=\"http://www.gap-system.org/Manuals/doc/ref/chap52.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">Rewriting System</a>, seems like it is more often discussed in the topics of semigroups and monoids.",
  "id": "578fc0933d74e5a01675db36",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-20T18:18:59.570Z",
  "text": "In the proposal I had also included the [Rewriting System](http://www.gap-system.org/Manuals/doc/ref/chap52.html), seems like it is more often discussed in the topics of semigroups and monoids.",
  "unread": false,
  "urls": [
   {
    "url": "http://www.gap-system.org/Manuals/doc/ref/chap52.html"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "We shall probably not have much time for rewriting (and I didn&#39;t expect to). What I would like to have is a presentation for permutation groups, i.e., finding relators once generators are given. This could be implemented as shown in the next chapter (6, I think), once a coset table is found. So the next task could be this: given a permutation group, construct a coset table. To start with, this could be done for the trivial subgroup that consists of the identity alone.",
  "id": "578fc52f841e619d1620a70d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-20T18:38:39.896Z",
  "text": "We shall probably not have much time for rewriting (and I didn't expect to). What I would like to have is a presentation for permutation groups, i.e., finding relators once generators are given. This could be implemented as shown in the next chapter (6, I think), once a coset table is found. So the next task could be this: given a permutation group, construct a coset table. To start with, this could be done for the trivial subgroup that consists of the identity alone.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Good morning. If <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>G</mi><mo>=</mo><mo>&lt;</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>r</mi></msub><mo>&gt;</mo></mrow><annotation encoding=\"application/x-tex\">G = &lt;x_1, x_2, ... , x_r&gt;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">G</span><span class=\"mrel\">=</span><span class=\"mrel\">&lt;</span><span class=\"mord\"><span class=\"mord mathit\">x</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">1</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mpunct\">,</span><span class=\"mord\"><span class=\"mord mathit\">x</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">2</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mpunct\">,</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mpunct\">,</span><span class=\"mord\"><span class=\"mord mathit\">x</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">r</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mrel\">&gt;</span></span></span></span> be a finite group and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi><mo>=</mo><mo>&lt;</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>s</mi></msub><mo>&gt;</mo></mrow><annotation encoding=\"application/x-tex\">H = &lt;x_1, x_2, ... , x_s&gt;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span><span class=\"mrel\">=</span><span class=\"mrel\">&lt;</span><span class=\"mord\"><span class=\"mord mathit\">x</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">1</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mpunct\">,</span><span class=\"mord\"><span class=\"mord mathit\">x</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">2</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mpunct\">,</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mpunct\">,</span><span class=\"mord\"><span class=\"mord mathit\">x</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\">s</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mrel\">&gt;</span></span></span></span> with <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>0</mn><mo>\u2264</mo><mi>s</mi><mo>\u2264</mo><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">0 \\le s \\le r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.64444em;\"></span><span class=\"strut bottom\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathrm\">0</span><span class=\"mrel\">\u2264</span><span class=\"mord mathit\">s</span><span class=\"mrel\">\u2264</span><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">r</span></span></span></span>, suppose we are able to compute a complete coset table <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.07153em;\">C</span></span></span></span> corresponding to the action of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">G</span></span></span></span> by right multiplication on the set of right cosets of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span></span></span></span> in <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">G</span></span></span></span>. We can do this by the <strong>subsection 4.6.7</strong> (i.e the one on Transversals and action on cosets) if <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">G</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span></span></span></span> are <em>permutation groups</em>.<br>That is why you mentioned first about doing the subsection 4.6.7?",
  "id": "5792f9471d2852c84376d2fd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-23T04:57:43.333Z",
  "text": "Good morning. If $$G = <x_1, x_2, ... , x_r>$$ be a finite group and $$H = <x_1, x_2, ... , x_s>$$ with $$0 \\le s \\le r$$, suppose we are able to compute a complete coset table $$C$$ corresponding to the action of $$G$$ by right multiplication on the set of right cosets of $$H$$ in $$G$$. We can do this by the **subsection 4.6.7** (i.e the one on Transversals and action on cosets) if $$G$$ and $$H$$ are *permutation groups*.\nThat is why you mentioned first about doing the subsection 4.6.7?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<p>And on page 200. Last paragraph it says:</p><blockquote>\n<p>The set <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.00773em;\">R</span></span></span></span> of defining relators will be increased during the algorithm, but the map <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03d5</mi></mrow><annotation encoding=\"application/x-tex\">\\phi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.69444em;\"></span><span class=\"strut bottom\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">\u03d5</span></span></span></span> with <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03d5</mi><mo>(</mo><mover accent=\"true\"><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><mo>^</mo></mover><mo>)</mo><mo>=</mo><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\phi(\\hat{x_1}) = x_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">\u03d5</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist\"><span style=\"top:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"mord textstyle cramped\"><span class=\"mord\"><span class=\"mord mathit\">x</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">1</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span><span style=\"top:5.551115123125783e-17em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"accent-body\"><span>^</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mclose\">)</span><span class=\"mrel\">=</span><span class=\"mord\"><span class=\"mord mathit\">x</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\">i</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> for <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>1</mn><mo>\u2264</mo><mi>i</mi><mo>\u2264</mo><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">1 \\le i \\le r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.65952em;\"></span><span class=\"strut bottom\" style=\"height:0.79549em;vertical-align:-0.13597em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathrm\">1</span><span class=\"mrel\">\u2264</span><span class=\"mord mathit\">i</span><span class=\"mrel\">\u2264</span><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">r</span></span></span></span></p></blockquote>\n<p>Here instead of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03d5</mi><mo>(</mo><mover accent=\"true\"><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><mo>^</mo></mover><mo>)</mo><mo>=</mo><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\phi(\\hat{x_1}) = x_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">\u03d5</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist\"><span style=\"top:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"mord textstyle cramped\"><span class=\"mord\"><span class=\"mord mathit\">x</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">1</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span><span style=\"top:5.551115123125783e-17em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"accent-body\"><span>^</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mclose\">)</span><span class=\"mrel\">=</span><span class=\"mord\"><span class=\"mord mathit\">x</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\">i</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> it should be <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03d5</mi><mo>(</mo><mover accent=\"true\"><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><mo>^</mo></mover><mo>)</mo><mo>=</mo><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\phi(\\hat{x_i}) = x_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">\u03d5</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist\"><span style=\"top:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"mord textstyle cramped\"><span class=\"mord\"><span class=\"mord mathit\">x</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\">i</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span><span style=\"top:5.551115123125783e-17em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"accent-body\"><span>^</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mclose\">)</span><span class=\"mrel\">=</span><span class=\"mord\"><span class=\"mord mathit\">x</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\">i</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> ? Since the previous one doesn&#39;t make much sense.</p>",
  "id": "579309031b9de56c0ecf19e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-23T06:04:51.381Z",
  "text": "And on page 200. Last paragraph it says:\n> The set $$R$$ of defining relators will be increased during the algorithm, but the map $$\\phi$$ with $$\\phi(\\hat{x_1}) = x_i$$ for $$1 \\le i \\le r$$\n\nHere instead of $$\\phi(\\hat{x_1}) = x_i$$ it should be $$\\phi(\\hat{x_i}) = x_i$$ ? Since the previous one doesn't make much sense.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-23T06:06:21.297Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Good morning. Yes, that was what I had in mind. But now I think I would probably be better to be begin with a less ambitious task, namely the case when <code>H</code> has no generators.",
  "id": "5793090cbc636a263eda1197",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-23T06:05:00.354Z",
  "text": "Good morning. Yes, that was what I had in mind. But now I think I would probably be better to be begin with a less ambitious task, namely the case when `H` has no generators.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Yes, that is an obvious typo.",
  "id": "5793092e1b9de56c0ecf1a20",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-23T06:05:34.654Z",
  "text": "Yes, that is an obvious typo.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems that the book was scanned optically and the OCR was not 100% reliable.",
  "id": "57930a951d2852c8437755d0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-23T06:11:33.143Z",
  "text": "It seems that the book was scanned optically and the OCR was not 100% reliable.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, there are other places as well where the text is blurred, even in past some typos have been at those particular places as well.",
  "id": "57930b9e9d9e974a7f6a26e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-23T06:15:58.353Z",
  "text": "Yes, there are other places as well where the text is blurred, even in past some typos have been at those particular places as well.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The elements of a permutation group can be efficiently handled by means of their <em>base images</em> as defined on p. 88. A base is given by Screier-Sims and then each permutation in the group is represented by  its base image. It could be a tuple, usually much shorter than the whole permutation as a list.",
  "id": "57930cd31b9de56c0ecf3a91",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-23T06:21:07.973Z",
  "text": "The elements of a permutation group can be efficiently handled by means of their *base images* as defined on p. 88. A base is given by Screier-Sims and then each permutation in the group is represented by  its base image. It could be a tuple, usually much shorter than the whole permutation as a list.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It is then easy to construct a coset table for the group. A coset in this case would contain a single permutation.",
  "id": "57930d2732bd01d843a8b8b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-23T06:22:30.907Z",
  "text": "It is then easy to construct a coset table for the group. A coset in this case would contain a single permutation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The generators and their inverses act on the base images. For each new base image a new coset line in the coset table is created.",
  "id": "57930d8867c448730ee958d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-23T06:24:08.526Z",
  "text": "The generators and their inverses act on the base images. For each new base image a new coset line in the coset table is created.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The index of the new entry is inserted in a dict with the base image tuple as its key. It is then easy to find out if a base image has been constructed earlier.",
  "id": "57930debbc636a263eda3c19",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-23T06:25:47.388Z",
  "text": "The index of the new entry is inserted in a dict with the base image tuple as its key. It is then easy to find out if a base image has been constructed earlier.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "This method would produce the coset table for a permutation group wrt the trivial subgroup.",
  "id": "57930e1a1b9de56c0ecf3fa2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-23T06:26:34.270Z",
  "text": "This method would produce the coset table for a permutation group wrt the trivial subgroup.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Can you please explain what this line means?<br>One interesting property of a base is that every permutation <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>g</mi><mo>\u2208</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">g \\in G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">g</span><span class=\"mrel\">\u2208</span><span class=\"mord mathit\">G</span></span></span></span> is determined uniquely by the images of a base <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msubsup><mi>\u03b2</mi><mrow><mn>1</mn></mrow><mrow><mi>g</mi></mrow></msubsup><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msubsup><mi>\u03b2</mi><mrow><mi>m</mi></mrow><mrow><mi>g</mi></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">\\beta_{1}^{g}, ... \\beta_{m}^{g}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.7823em;\"></span><span class=\"strut bottom\" style=\"height:1.048608em;vertical-align:-0.266308em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.05278em;\">\u03b2</span><span class=\"vlist\"><span style=\"top:0.266308em;margin-left:-0.05278em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathrm\">1</span></span></span></span><span style=\"top:-0.480908em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">g</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mpunct\">,</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.05278em;\">\u03b2</span><span class=\"vlist\"><span style=\"top:0.247em;margin-left:-0.05278em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">m</span></span></span></span><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">g</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> it produces.(here base is [<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>\u03b2</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>\u03b2</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>\u03b2</mi><mi>m</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\beta_1, \\beta_2, ... , \\beta_m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.69444em;\"></span><span class=\"strut bottom\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.05278em;\">\u03b2</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.05278em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">1</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mpunct\">,</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.05278em;\">\u03b2</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.05278em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">2</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mpunct\">,</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mpunct\">,</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.05278em;\">\u03b2</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.05278em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\">m</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span>])",
  "id": "57933dd01b9de56c0ed0ca3e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-23T09:50:08.341Z",
  "text": "Can you please explain what this line means?\nOne interesting property of a base is that every permutation $$g \\in G$$ is determined uniquely by the images of a base $$\\beta_{1}^{g}, ... \\beta_{m}^{g}$$ it produces.(here base is [$$\\beta_1, \\beta_2, ... , \\beta_m$$])",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-23T09:52:25.667Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I do understand the meaning of notation <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msubsup><mi>\u03b2</mi><mi>i</mi><mi>g</mi></msubsup></mrow><annotation encoding=\"application/x-tex\">\\beta_i^g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.7823em;\"></span><span class=\"strut bottom\" style=\"height:1.059164em;vertical-align:-0.276864em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.05278em;\">\u03b2</span><span class=\"vlist\"><span style=\"top:0.276864em;margin-left:-0.05278em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\">i</span></span></span><span style=\"top:-0.480908em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">g</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> for <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">g</span></span></span></span> a permutation.",
  "id": "57933e3f959ee82b3e427fdd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-23T09:51:59.689Z",
  "text": "I do understand the meaning of notation $$\\beta_i^g$$ for $$g$$ a permutation.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Different permutations in a group <code>G</code> transform the elements of a base in a different way. There are many permutations in the whole symmetric group that transform the base in the same way, but in the group <code>G</code> there is at most one. Hence the base image can be used as a &#39;signature&#39; of the permutations in <code>G</code>.  The proof of this is almost trivial, see Lemma 4.4.",
  "id": "579344b31d2852c843792629",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-23T10:19:31.457Z",
  "text": "Different permutations in a group `G` transform the elements of a base in a different way. There are many permutations in the whole symmetric group that transform the base in the same way, but in the group `G` there is at most one. Hence the base image can be used as a 'signature' of the permutations in `G`.  The proof of this is almost trivial, see Lemma 4.4.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Did you see the role of those base images?",
  "id": "57948a2132bd01d843b4e1bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-24T09:28:01.827Z",
  "text": "Did you see the role of those base images?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-24T09:44:39.697Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I did understand that mathematically.",
  "id": "57948e011b9de56c0edb1ffa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-24T09:44:33.726Z",
  "text": "I did understand that mathematically.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I will give you an update on what I have understood regarding the topic or if I have any problem today at around 8 PM IST (i.e 5:30 PM for your time)",
  "id": "57948f1bb92e27447fac2dbc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-24T09:49:15.530Z",
  "text": "I will give you an update on what I have understood regarding the topic or if I have any problem today at around 8 PM IST (i.e 5:30 PM for your time)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "This is how I thought the coset table of a permutation group wrt the trivial subgroup could be created. In addition to the coset table, there could be two tables: A list containing the base images of the permutations, in the same order as in the coset table. So <code>image[i]</code> would be the base image tuple of the i&#39;th coset (that actually contains only one element). Then there is the inverse table which is a dict mapping <code>image[i]</code> to <code>i</code>. The coset table is filled row by row in standard order. Each time a new permutation is found, it is entered into both the list and the dict.",
  "id": "57949070bc636a263ee6c3ad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-24T09:54:56.218Z",
  "text": "This is how I thought the coset table of a permutation group wrt the trivial subgroup could be created. In addition to the coset table, there could be two tables: A list containing the base images of the permutations, in the same order as in the coset table. So `image[i]` would be the base image tuple of the i'th coset (that actually contains only one element). Then there is the inverse table which is a dict mapping `image[i]` to `i`. The coset table is filled row by row in standard order. Each time a new permutation is found, it is entered into both the list and the dict.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-24T12:29:01.163Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Is the <em>base image</em> of permutations computed explicitly in the schreier sims algorithm?",
  "id": "5794b4841b9de56c0edc4f2b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-24T12:28:52.420Z",
  "text": "Is the *base image* of permutations computed explicitly in the schreier sims algorithm?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-07-24T12:39:33.706Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I don&#39;t think so. But it is easy to do. The generators and their inverses are transformed to list form. Then the images are constructed step by step as the images given by a generator/inverse.<br><code>new_image = (gen[i] for i in image)</code><br>where <code>image</code> is the image of the current coset row and <code>gen</code> is the list form of a generator or its inverse. If <code>new_image</code> is in the dict then its index is entered into the coset table, otherwise a new index entry is created for the new image.",
  "id": "5794b6ef1b9de56c0edc5ac8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-24T12:39:11.258Z",
  "text": "I don't think so. But it is easy to do. The generators and their inverses are transformed to list form. Then the images are constructed step by step as the images given by a generator/inverse.\n`new_image = (gen[i] for i in image)`\nwhere `image` is the image of the current coset row and `gen` is the list form of a generator or its inverse. If `new_image` is in the dict then its index is entered into the coset table, otherwise a new index entry is created for the new image.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The first image, corresponding to the identity permutation, is the base itself.",
  "id": "5794b7fa9d9e974a7f780007",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-07-24T12:43:38.613Z",
  "text": "The first image, corresponding to the identity permutation, is the base itself.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Hi, I have tried to study the coincidence routine in Sim&#39;s book. That is a little different. I have always felt that the line removing <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>\u03b4</mi><mrow><msup><mi>x</mi><mrow><mo>\u2212</mo><mn>1</mn></mrow></msup></mrow></msup><mo>=</mo><mi>\u03b3</mi></mrow><annotation encoding=\"application/x-tex\">\\delta^{x^{-1}} = \\gamma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.9393199999999999em;\"></span><span class=\"strut bottom\" style=\"height:1.1337599999999999em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03785em;\">\u03b4</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\">x</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.07142857142857144em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-scriptstyle scriptscriptstyle uncramped\"><span class=\"mord scriptscriptstyle uncramped\"><span class=\"mord\">\u2212</span><span class=\"mord mathrm\">1</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mrel\">=</span><span class=\"mord mathit\" style=\"margin-right:0.05556em;\">\u03b3</span></span></span></span> makes the table unbalanced. In Sim&#39;s book also <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>\u03b3</mi><mi>x</mi></msup><mo>=</mo><mi>\u03b4</mi></mrow><annotation encoding=\"application/x-tex\">\\gamma^x = \\delta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.69444em;\"></span><span class=\"strut bottom\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.05556em;\">\u03b3</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord mathit\">x</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mrel\">=</span><span class=\"mord mathit\" style=\"margin-right:0.03785em;\">\u03b4</span></span></span></span> is removed, which may affect the outcome. Actually, there is another difference, though that may not be significant. Instead of one inner loop over <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi><mo>\u2208</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">x \\in A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">x</span><span class=\"mrel\">\u2208</span><span class=\"mord mathit\">A</span></span></span></span> there are two loops. First, a short loop saving the defined <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>\u03b3</mi><mi>x</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\gamma^x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.664392em;\"></span><span class=\"strut bottom\" style=\"height:0.858832em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.05556em;\">\u03b3</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord mathit\">x</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> in a temporary table and removing them from the original table. Then another loop running over the saved table. This makes things happen in different order, but need not necessarily affect the final result.",
  "id": "579c94a6cdc68c4904af9027",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-07-30T11:51:02.332Z",
  "text": "Hi, I have tried to study the coincidence routine in Sim's book. That is a little different. I have always felt that the line removing $$\\delta^{x^{-1}} = \\gamma$$ makes the table unbalanced. In Sim's book also $$\\gamma^x = \\delta$$ is removed, which may affect the outcome. Actually, there is another difference, though that may not be significant. Instead of one inner loop over $$x \\in A$$ there are two loops. First, a short loop saving the defined $$\\gamma^x$$ in a temporary table and removing them from the original table. Then another loop running over the saved table. This makes things happen in different order, but need not necessarily affect the final result.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "<a href=\"https://github.com/sympy/sympy/blob/master/sympy/combinatorics/fp_groups.py#L786\" rel=\"nofollow\" target=\"_blank\" class=\"link\">This line</a> looks suspicious. It may stop too early when the size of <code>omega</code> is reduced. The index <code>i</code> should somehow follow the elements of <code>omega</code> also when some of them are omitted because of coincidences.",
  "id": "579cbc31f1da4f376e1a9bab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-07-30T14:39:45.126Z",
  "text": "[This line](https://github.com/sympy/sympy/blob/master/sympy/combinatorics/fp_groups.py#L786) looks suspicious. It may stop too early when the size of `omega` is reduced. The index `i` should somehow follow the elements of `omega` also when some of them are omitted because of coincidences.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/master/sympy/combinatorics/fp_groups.py#L786"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2016-07-30T14:51:12.086Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "That could be the error causing line. Let me check though.",
  "id": "579cbc9779f759713753c735",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-07-30T14:41:27.607Z",
  "text": "That could be the error causing line. Let me check though.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Good morning Kalevi. I just read the mail and replied back, you sent me two days back.",
  "id": "579ede577fd9f73e16f00654",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-01T05:29:59.002Z",
  "text": "Good morning Kalevi. I just read the mail and replied back, you sent me two days back.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Good morning. Thanks for the reply. In fact, I did not expect you to read your mail every day.",
  "id": "579edf7e9684847b3741c2de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-01T05:34:54.749Z",
  "text": "Good morning. Thanks for the reply. In fact, I did not expect you to read your mail every day.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-01T05:37:03.178Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "But I think that is my job as a student to reply back to my mentor in 48 hours (program guidelines). Sorry about that.",
  "id": "579edfe9f1da4f376e1e201a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-01T05:36:41.681Z",
  "text": "But I think that is my job as a student to reply back to my mentor in 48 hours (program guidelines). Sorry about that.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Have you thought about the possibility of pushing your code to your github account even if it is not ready for a PR?",
  "id": "579ee3f879f759713757534a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-01T05:54:00.448Z",
  "text": "Have you thought about the possibility of pushing your code to your github account even if it is not ready for a PR?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-01T05:58:55.248Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Infact I haven&#39;t coded any code so have no other code currently locally.",
  "id": "579ee50f07d2d2396e3151c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-01T05:58:39.744Z",
  "text": "Infact I haven't coded any code so have no other code currently locally.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Are you going to have more time for that?",
  "id": "579ee65279f759713757577d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-01T06:04:02.098Z",
  "text": "Are you going to have more time for that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I will try.",
  "id": "579ee74307d2d2396e3156d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-01T06:08:03.325Z",
  "text": "I will try.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have a doubt, given on page 157 last paragraph.<br>We assume that, before each call of <code>COINCIDENCE</code>, for <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03b1</mi><mo>\u2208</mo><mo>[</mo><mn>1</mn><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi>n</mi><mo>]</mo></mrow><annotation encoding=\"application/x-tex\">\\alpha \\in [1 .. n]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mrel\">\u2208</span><span class=\"mopen\">[</span><span class=\"mord mathrm\">1</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mord mathit\">n</span><span class=\"mclose\">]</span></span></span></span> we have <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi><mo>[</mo><mi>\u03b1</mi><mo>]</mo><mo>=</mo><mi>\u03b1</mi><mo>\u21d4</mo><mi>\u03b1</mi><mo>\u2208</mo><mi mathvariant=\"normal\">\u03a9</mi></mrow><annotation encoding=\"application/x-tex\">p[\\alpha] = \\alpha \\Leftrightarrow \\alpha \\in \\Omega</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">p</span><span class=\"mopen\">[</span><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mclose\">]</span><span class=\"mrel\">=</span><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mrel\">\u21d4</span><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span><span class=\"mrel\">\u2208</span><span class=\"mord mathrm\">\u03a9</span></span></span></span>.",
  "id": "579fa494c915a0e426b3de09",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-01T19:35:48.715Z",
  "text": "I have a doubt, given on page 157 last paragraph.\nWe assume that, before each call of `COINCIDENCE`, for $$\\alpha \\in [1 .. n]$$ we have $$p[\\alpha] = \\alpha \\Leftrightarrow \\alpha \\in \\Omega$$.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-01T19:40:16.212Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "When I tried to debug, It can be seen that we find in <code>scan</code> or (<code>scan_f</code> for &quot;coset table method&quot;) routine that <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>f</mi><mo>\u223c</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">f \\sim b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.69444em;\"></span><span class=\"strut bottom\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.10764em;\">f</span><span class=\"mrel\">\u223c</span><span class=\"mord mathit\">b</span></span></span></span> then then <code>coincidence_f</code> (or its similar function depending on method of enumeration) is executed but it is <strong>after</strong> the <code>coincidence</code> routine execution that the behavior of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>f</mi><mo>\u223c</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">f \\sim b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.69444em;\"></span><span class=\"strut bottom\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.10764em;\">f</span><span class=\"mrel\">\u223c</span><span class=\"mord mathit\">b</span></span></span></span> is exhibited in <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">p</span></span></span></span> <strong>not before</strong> its execution.<br>Or am I understanding it wrong here.",
  "id": "579fa58147659bfb10862ce4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-01T19:39:45.603Z",
  "text": "When I tried to debug, It can be seen that we find in `scan` or (`scan_f` for \"coset table method\") routine that $$f \\sim b$$ then then `coincidence_f` (or its similar function depending on method of enumeration) is executed but it is **after** the `coincidence` routine execution that the behavior of $$f \\sim b$$ is exhibited in $$p$$ **not before** its execution.\nOr am I understanding it wrong here.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Also perhaps I don&#39;t remember any logical reason as to why I used <code>_f</code> suffix for methods of coset-table base methods (like <code>scan_f</code>, <code>coincidence_f</code>). We should change them to <code>_c</code>may be? (<code>_r</code> would indicate its usability in coset-table methods), just like we have <code>coset_enumeration_c</code> (for coset table based method)",
  "id": "579fa63b1c2bf6621bb35eb1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-01T19:42:51.795Z",
  "text": "Also perhaps I don't remember any logical reason as to why I used `_f` suffix for methods of coset-table base methods (like `scan_f`, `coincidence_f`). We should change them to `_c`may be? (`_r` would indicate its usability in coset-table methods), just like we have `coset_enumeration_c` (for coset table based method)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Hi, I am not sure that I quite understand your problem with <code>coincidence</code>. But it seems to me that, before the call, both <code>f</code> and <code>b</code> belong to <code>omega</code>, so they point to themselves in the <code>p</code>-list and look like two different cosets. It is only <code>coincidence</code> that makes them the same coset.",
  "id": "57a064ade2ff9ec76e4f480f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-02T09:15:25.112Z",
  "text": "Hi, I am not sure that I quite understand your problem with `coincidence`. But it seems to me that, before the call, both `f` and `b` belong to `omega`, so they point to themselves in the `p`-list and look like two different cosets. It is only `coincidence` that makes them the same coset.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "As to the names, I have also had some trouble trying to remember the role of <code>_f</code> suffixes. It seems that <code>_c</code> would be better.",
  "id": "57a06533e2ff9ec76e4f48f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-02T09:17:39.679Z",
  "text": "As to the names, I have also had some trouble trying to remember the role of `_f` suffixes. It seems that `_c` would be better.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Do you think adding the documentation for finitely presented groups along the lines of your PR on polynomials documentation (including the already existing documentation) would be good?",
  "id": "57a08db4c915a0e426b5a69e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-02T12:10:28.572Z",
  "text": "Do you think adding the documentation for finitely presented groups along the lines of your PR on polynomials documentation (including the already existing documentation) would be good?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "i.e a file <code>basics.rst</code> describing the functionality, apart from the existing <em>permutation groups</em>.",
  "id": "57a08e619e85d3e8267ffe93",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-02T12:13:21.216Z",
  "text": "i.e a file `basics.rst` describing the functionality, apart from the existing *permutation groups*.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-02T12:28:52.477Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think it would be good, but not necessary for the present. Writing such texts tends to be time consuming. But you could occasionally spend a few moments writing a rough draft while the matter is still fresh in memory.",
  "id": "57a091e91c2bf6621bb533c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-02T12:28:25.768Z",
  "text": "I think it would be good, but not necessary for the present. Writing such texts tends to be time consuming. But you could occasionally spend a few moments writing a rough draft while the matter is still fresh in memory.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I understand that.",
  "id": "57a09232e2ff9ec76e4fb396",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-02T12:29:38.444Z",
  "text": "I understand that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "When you were mentioned about <a href=\"https://gitter.im/sympy/GroupTheory?at=578c62af196179690efe7ec9\" rel=\"nofollow\" target=\"_blank\" class=\"link\">documentation in this message</a>. Does the refer to the in-line docstrings in the file <code>fp_groups.py</code> itself, or something else?",
  "id": "57a099cc9e85d3e8268019e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-02T13:02:04.374Z",
  "text": "When you were mentioned about [documentation in this message](https://gitter.im/sympy/GroupTheory?at=578c62af196179690efe7ec9). Does the refer to the in-line docstrings in the file `fp_groups.py` itself, or something else?",
  "unread": false,
  "urls": [
   {
    "url": "https://gitter.im/sympy/GroupTheory?at=578c62af196179690efe7ec9"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Is there any database of finitely presented groups (i.e presentation of groups, probably with small order) ? Since when I have to add an example in docstring why not just add a new example (that would also make the testing of code a little better)",
  "id": "57a0a554e2ff9ec76e4fead3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-02T13:51:16.815Z",
  "text": "Is there any database of finitely presented groups (i.e presentation of groups, probably with small order) ? Since when I have to add an example in docstring why not just add a new example (that would also make the testing of code a little better)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I don&#39;t recall now exactly what I was thinking. It was more like a general remark. The method docstrings should be there in any case.",
  "id": "57a0a58be2ff9ec76e4feb48",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-02T13:52:11.685Z",
  "text": "I don't recall now exactly what I was thinking. It was more like a general remark. The method docstrings should be there in any case.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Apart from the research papers that i.e 1973cdhw, since its example are of large order.",
  "id": "57a0a5a59e85d3e826803c46",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-02T13:52:37.415Z",
  "text": "Apart from the research papers that i.e 1973cdhw, since its example are of large order.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay.",
  "id": "57a0a5d20bd017c16e353d54",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-02T13:53:22.052Z",
  "text": "Okay.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "You have probably studied those papers more than I have. Only GAP comes to mind.",
  "id": "57a0a5d6e2ff9ec76e4febf6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-02T13:53:26.790Z",
  "text": "You have probably studied those papers more than I have. Only GAP comes to mind.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-02T13:54:29.627Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Infact I have exhausted <em>GAP</em> already. Perhaps I will use <em>Magma</em> then.",
  "id": "57a0a60d00663f5b1b446634",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-02T13:54:21.525Z",
  "text": "Infact I have exhausted *GAP* already. Perhaps I will use *Magma* then.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "But there is a huge library of groups in GAP.",
  "id": "57a0a68547659bfb10882630",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-02T13:56:21.102Z",
  "text": "But there is a huge library of groups in GAP.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Do you have the link to that library of finitely presented groups? (I heard it before but couldn&#39;t found it neither could now)",
  "id": "57a17d52836d2d02115f6955",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-03T05:12:50.167Z",
  "text": "Do you have the link to that library of finitely presented groups? (I heard it before but couldn't found it neither could now)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-03T05:22:32.782Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think it can be found via GAP home page. There are a lot of libraries of different kinds.",
  "id": "57a17edf00663f5b1b46606f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-03T05:19:27.324Z",
  "text": "I think it can be found via GAP home page. There are a lot of libraries of different kinds.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "<a href=\"http://www.gap-system.org/Datalib/datalib.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://www.gap-system.org/Datalib/datalib.html</a>",
  "id": "57a17f349e85d3e826824032",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-03T05:20:52.306Z",
  "text": "http://www.gap-system.org/Datalib/datalib.html",
  "unread": false,
  "urls": [
   {
    "url": "http://www.gap-system.org/Datalib/datalib.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "That does contain groups, but not FpGroups. Anyways I found a better link (I asked on GAP forum) <a href=\"http://brauer.maths.qmul.ac.uk/Atlas/v3/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://brauer.maths.qmul.ac.uk/Atlas/v3/</a>",
  "id": "57a1c06b9e85d3e82682ce01",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-03T09:59:07.923Z",
  "text": "That does contain groups, but not FpGroups. Anyways I found a better link (I asked on GAP forum) http://brauer.maths.qmul.ac.uk/Atlas/v3/",
  "unread": false,
  "urls": [
   {
    "url": "http://brauer.maths.qmul.ac.uk/Atlas/v3/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Ah, you mean explicit presentations of groups, not just any finitely presented groups such as finite groups.",
  "id": "57a1d3121c2bf6621bb822ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-03T11:18:42.370Z",
  "text": "Ah, you mean explicit presentations of groups, not just any finitely presented groups such as finite groups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "As for the <code>.subgroup</code> method, I think there should be one global class <code>Subgroup</code> which could take input of any type of group (permutation group, finitely presented group, matrix group etc.), its first argument be <code>G</code> (parent group).",
  "id": "57a49bad6bf4dff61d35f9d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-05T13:59:09.239Z",
  "text": "As for the `.subgroup` method, I think there should be one global class `Subgroup` which could take input of any type of group (permutation group, finitely presented group, matrix group etc.), its first argument be `G` (parent group).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-05T14:00:10.211Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Currently in finitely presented groups we just deal with them in <code>[ list of generators for subgroup ]</code>.",
  "id": "57a49bde857442dc0f55d0d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-05T13:59:58.086Z",
  "text": "Currently in finitely presented groups we just deal with them in `[ list of generators for subgroup ]`.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Also can you please answer <a href=\"https://gist.github.com/gxyd/834493e685259feaeb43bce7b3abc34b\" rel=\"nofollow\" target=\"_blank\" class=\"link\">this question on permutation schreier sims</a>? (boolean answer would suffice)",
  "id": "57a49fd06bf4dff61d36063f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-05T14:16:48.304Z",
  "text": "Also can you please answer [this question on permutation schreier sims](https://gist.github.com/gxyd/834493e685259feaeb43bce7b3abc34b)? (boolean answer would suffice)",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/gxyd/834493e685259feaeb43bce7b3abc34b"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I felt that a symmetric group should be defined in a way that would make it easy to see that it contain all permutations (of n elements). If it is given by two generators, the verification will be time consuming.",
  "id": "57a4be8d857442dc0f563917",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-05T16:27:57.079Z",
  "text": "I felt that a symmetric group should be defined in a way that would make it easy to see that it contain all permutations (of n elements). If it is given by two generators, the verification will be time consuming.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I believe that <a href=\"https://github.com/sympy/sympy/blob/master/sympy/combinatorics/fp_groups.py#L786\" rel=\"nofollow\" target=\"_blank\" class=\"link\">this loop</a> should be changed to <code>while i &lt; len(C.table):</code>. Next we should have the test <code>if p[i] == i:</code>, and only then should we proceed. Otherwise we skip to the end of the loop where  <code>i</code> should be incremented. This way all elements of <code>C.omega</code> will be tested even in case that the set becomes very small. The inner <code>for x</code> loop should also test <code>p[i]</code> at each round and break if that becomes different from  <code>i</code>.",
  "id": "57a4d58b483751d50f2c95ad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-05T18:06:03.708Z",
  "text": "I believe that [this loop](https://github.com/sympy/sympy/blob/master/sympy/combinatorics/fp_groups.py#L786) should be changed to `while i < len(C.table):`. Next we should have the test `if p[i] == i:`, and only then should we proceed. Otherwise we skip to the end of the loop where  `i` should be incremented. This way all elements of `C.omega` will be tested even in case that the set becomes very small. The inner `for x` loop should also test `p[i]` at each round and break if that becomes different from  `i`.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/master/sympy/combinatorics/fp_groups.py#L786"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "From took inspiration from <code>coset_enumeration_r</code> procedure?",
  "id": "57a4d8f7fb162b752ca15c8e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-05T18:20:39.298Z",
  "text": "From took inspiration from `coset_enumeration_r` procedure?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The procedures are different, but the loop must inspect all elements of <code>omega</code> even if they were only the first and last in the table.",
  "id": "57a4dc85d097eb6b2cc8752d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-05T18:35:49.457Z",
  "text": "The procedures are different, but the loop must inspect all elements of `omega` even if they were only the first and last in the table.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-06T10:00:08.685Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<p>Hi Kalevi, I tried to make the changes as you suggested as follows:</p><pre><code>    <span class=\"tag\">i</span> = <span class=\"number\">0</span>\n    while <span class=\"tag\">i</span> &lt; <span class=\"function\"><span class=\"title\">len</span><span class=\"params\">(C.table)</span></span>:\n        <span class=\"keyword\">if</span> C<span class=\"class\">.p</span>[i] == <span class=\"tag\">i</span>:\n            alpha = C<span class=\"class\">.omega</span>[i]\n            <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> C<span class=\"class\">.A</span>:\n                <span class=\"keyword\">if</span> C<span class=\"class\">.p</span>[i] != <span class=\"tag\">i</span>:\n                    break\n                <span class=\"keyword\">if</span> C<span class=\"class\">.table</span>[alpha][C<span class=\"class\">.A_dict</span>[x]] is None:\n                    C.<span class=\"function\"><span class=\"title\">define_c</span><span class=\"params\">(alpha, x)</span></span>\n                    C.<span class=\"function\"><span class=\"title\">process_deductions</span><span class=\"params\">(R_c_list[C.A_dict[x]], R_c_list[C.A_dict_inv[x]])</span></span>\n        <span class=\"tag\">i</span> += <span class=\"number\">1</span></code></pre><p>But this didn&#39;t work (a few of the tests failed). This is the error:</p><pre><code><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span> sympy/combinatorics/tests/test<span class=\"emphasis\">_fp_</span>groups.py:test<span class=\"emphasis\">_coset_</span>enumeration <span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span>_\n  File \"/home/gaurav/Public/sympy/sympy/combinatorics/tests/test<span class=\"emphasis\">_fp_</span>groups.py\", line 670, in test<span class=\"emphasis\">_coset_</span>enumeration\n<span class=\"code\">    C_c = coset_enumeration_c(B_2_4, [a])</span>\n  File \"/home/gaurav/Public/sympy/sympy/combinatorics/fp<span class=\"emphasis\">_groups.py\", line 1007, in coset_</span>enumeration_c\n<span class=\"code\">    alpha = C.omega[i]</span>\nIndexError: list index out of range\n<span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"emphasis\">___</span>_\n<span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">____ sympy/combinatorics/tests/test_fp_groups.py:test_look_ahead __</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span><span class=\"strong\">_____</span>__\n  File \"/home/gaurav/Public/sympy/sympy/combinatorics/tests/test<span class=\"emphasis\">_fp_</span>groups.py\", line 710, in test<span class=\"emphasis\">_look_</span>ahead\n<span class=\"code\">    C_c = coset_enumeration_c(f, H)</span>\n  File \"/home/gaurav/Public/sympy/sympy/combinatorics/fp<span class=\"emphasis\">_groups.py\", line 1007, in coset_</span>enumeration_c\n<span class=\"code\">    alpha = C.omega[i]</span>\nIndexError: list index out of range\n\n======================================================= tests finished: 3 passed, 2 exceptions, in 139.16 seconds =======================================================\nDO <span class=\"emphasis\">*NOT*</span> COMMIT!</code></pre><p>I thought of following the way <code>coset_enumeration_r</code> executes the operations on <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>\u03b1</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.0037em;\">\u03b1</span></span></span></span>. </p><pre><code>alpha = <span class=\"number\">0</span>\nwhile alpha &lt; C<span class=\"class\">.n</span>:\n    <span class=\"keyword\">if</span> C<span class=\"class\">.p</span>[alpha] == alpha:\n        <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> C<span class=\"class\">.A</span>:\n            <span class=\"keyword\">if</span> C<span class=\"class\">.p</span>[alpha] != alpha:\n                break\n            <span class=\"keyword\">if</span> C<span class=\"class\">.table</span>[alpha][C<span class=\"class\">.A_dict</span>[x]] is None:\n                C.<span class=\"function\"><span class=\"title\">define_c</span><span class=\"params\">(alpha, x)</span></span>\n                C.<span class=\"function\"><span class=\"title\">process_deductions</span><span class=\"params\">(R_c_list[C.A_dict[x]], R_c_list[C.A_dict_inv[x]])</span></span>\n    alpha += <span class=\"number\">1</span></code></pre>",
  "id": "57a5b5122f03cf8749cbc793",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-06T09:59:46.656Z",
  "text": "Hi Kalevi, I tried to make the changes as you suggested as follows:\n```\n    i = 0\n    while i < len(C.table):\n        if C.p[i] == i:\n            alpha = C.omega[i]\n            for x in C.A:\n                if C.p[i] != i:\n                    break\n                if C.table[alpha][C.A_dict[x]] is None:\n                    C.define_c(alpha, x)\n                    C.process_deductions(R_c_list[C.A_dict[x]], R_c_list[C.A_dict_inv[x]])\n        i += 1\n```\nBut this didn't work (a few of the tests failed). This is the error:\n```\n__________________________________________________ sympy/combinatorics/tests/test_fp_groups.py:test_coset_enumeration ___________________________________________________\n  File \"/home/gaurav/Public/sympy/sympy/combinatorics/tests/test_fp_groups.py\", line 670, in test_coset_enumeration\n    C_c = coset_enumeration_c(B_2_4, [a])\n  File \"/home/gaurav/Public/sympy/sympy/combinatorics/fp_groups.py\", line 1007, in coset_enumeration_c\n    alpha = C.omega[i]\nIndexError: list index out of range\n_________________________________________________________________________________________________________________________________________________________________________\n______________________________________________________ sympy/combinatorics/tests/test_fp_groups.py:test_look_ahead ______________________________________________________\n  File \"/home/gaurav/Public/sympy/sympy/combinatorics/tests/test_fp_groups.py\", line 710, in test_look_ahead\n    C_c = coset_enumeration_c(f, H)\n  File \"/home/gaurav/Public/sympy/sympy/combinatorics/fp_groups.py\", line 1007, in coset_enumeration_c\n    alpha = C.omega[i]\nIndexError: list index out of range\n\n======================================================= tests finished: 3 passed, 2 exceptions, in 139.16 seconds =======================================================\nDO *NOT* COMMIT!\n```\nI thought of following the way `coset_enumeration_r` executes the operations on $$\\alpha$$. \n```\nalpha = 0\nwhile alpha < C.n:\n    if C.p[alpha] == alpha:\n        for x in C.A:\n            if C.p[alpha] != alpha:\n                break\n            if C.table[alpha][C.A_dict[x]] is None:\n                C.define_c(alpha, x)\n                C.process_deductions(R_c_list[C.A_dict[x]], R_c_list[C.A_dict_inv[x]])\n    alpha += 1\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Also with the code I wrote (along the lines for what you  suggested), there was some unusual behaviour, like <code>IndexError</code> was raise (for same input) till different index <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.65952em;\"></span><span class=\"strut bottom\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">i</span></span></span></span>.",
  "id": "57a5b5b72f03cf8749cbc8ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-06T10:02:31.883Z",
  "text": "Also with the code I wrote (along the lines for what you  suggested), there was some unusual behaviour, like `IndexError` was raise (for same input) till different index $$i$$.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I don&#39;t think that <code>C.n</code> would be any better, instead, those places of <code>C.omega[i]</code> should be modified.",
  "id": "57a5b5be978997001e9b0f9a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-06T10:02:38.681Z",
  "text": "I don't think that `C.n` would be any better, instead, those places of `C.omega[i]` should be modified.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "This is how Sims implements the function in his book. There is no indexing over <code>omega</code>.",
  "id": "57a5b661978997001e9b1094",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-06T10:05:21.232Z",
  "text": "This is how Sims implements the function in his book. There is no indexing over `omega`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<p>Sorry, I don&#39;t userstand</p><blockquote>\n<p>I don&#39;t think that <code>C.n</code> would be any better, instead, those places of <code>C.omega[i]</code> should be modified.</p></blockquote>\n",
  "id": "57a5b6816bf4dff61d383494",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-06T10:05:53.357Z",
  "text": "Sorry, I don't userstand\n> I don't think that `C.n` would be any better, instead, those places of `C.omega[i]` should be modified.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think that <code>C.n</code> does not necessarily be equal to <code>len(C.table)</code>.",
  "id": "57a5b6c02f03cf8749cbca5d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-06T10:06:56.108Z",
  "text": "I think that `C.n` does not necessarily be equal to `len(C.table)`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The table is a structure whose size will not decrease.",
  "id": "57a5b6fad097eb6b2cca04c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-06T10:07:54.241Z",
  "text": "The table is a structure whose size will not decrease.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Ah, now I see the error. You should have <code>alpha = i</code> not <code>alpha = C.omega[i]</code>.",
  "id": "57a5b7c748422f8b4973d35f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-06T10:11:19.568Z",
  "text": "Ah, now I see the error. You should have `alpha = i` not `alpha = C.omega[i]`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Or <code>alpha</code> instead of <code>i</code>.",
  "id": "57a5b7e26bf4dff61d38370a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2016-08-06T10:11:46.990Z",
  "text": "Or `alpha` instead of `i`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The second implementation above seems about what I had expected. Only put <code>len(C.table)</code> instead of <code>C.n</code>.",
  "id": "57a5b849fb162b752ca2e9d0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-06T10:13:29.976Z",
  "text": "The second implementation above seems about what I had expected. Only put `len(C.table)` instead of `C.n`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I did test that in the morning and it seemed to work all right.",
  "id": "57a5b88cfb162b752ca2ea2c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-06T10:14:36.870Z",
  "text": "I did test that in the morning and it seemed to work all right.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The test <code>if C.p[alpha] != alpha:</code> would seem more natural after <code>C.process_deductions</code> (since that is where <code>p[alpha)</code> might change).",
  "id": "57a5b91fd097eb6b2cca0972",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-06T10:17:03.893Z",
  "text": "The test `if C.p[alpha] != alpha:` would seem more natural after `C.process_deductions` (since that is where `p[alpha)` might change).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Hi, jksuom. Is this a good time (may be too late for you) to talk regarding me not being to put in enough time on project?",
  "id": "57a8cef6bc688a13390686e3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T18:27:02.192Z",
  "text": "Hi, jksuom. Is this a good time (may be too late for you) to talk regarding me not being to put in enough time on project?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Hi, this is not too late. What did you want to say?",
  "id": "57a8d100ae838f6f568e55f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T18:35:44.201Z",
  "text": "Hi, this is not too late. What did you want to say?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Can I be a little more straight in asking question?",
  "id": "57a8d1f246610f1739494e3b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T18:39:46.698Z",
  "text": "Can I be a little more straight in asking question?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay, I will ask it. If things go the way (me not being able to put in enough time) for project as part of GSoC, is it going to be some trouble me not being able to pass evaluation?",
  "id": "57a8d233ff82b9fc7e6c6f97",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T18:40:51.648Z",
  "text": "Okay, I will ask it. If things go the way (me not being able to put in enough time) for project as part of GSoC, is it going to be some trouble me not being able to pass evaluation?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That sounds a little ominous. Does your question mean that you may not have time to continue?",
  "id": "57a8d506ae838f6f568e61de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T18:52:54.904Z",
  "text": "That sounds a little ominous. Does your question mean that you may not have time to continue?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "No, I don&#39;t mean that..",
  "id": "57a8d52b613cc18036715161",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T18:53:31.326Z",
  "text": "No, I don't mean that..",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Let me explain.",
  "id": "57a8d53cd7087a017fa33f36",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T18:53:48.078Z",
  "text": "Let me explain.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-08T18:58:10.675Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I can (or I will continue) work on GSoC project (may not to the extent to complete <code>presentation of permutation group</code> within the GSoC period or to be precise not the expected GSoC expected number of hours). I am also having one academic project, I am sure that I will have to be inclined for a few days more towards one of them. But my main motive is to pass it with a <strong>good review</strong> from you. So I want the damage done (because of my inability to manage time) be minimized on either side.",
  "id": "57a8d621613cc18036715405",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T18:57:37.263Z",
  "text": "I can (or I will continue) work on GSoC project (may not to the extent to complete `presentation of permutation group` within the GSoC period or to be precise not the expected GSoC expected number of hours). I am also having one academic project, I am sure that I will have to be inclined for a few days more towards one of them. But my main motive is to pass it with a **good review** from you. So I want the damage done (because of my inability to manage time) be minimized on either side.",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Well, this is how I see your work. I think that before your college started you had been working certainly for more than than the expected 40 hours worth a week.",
  "id": "57a8d717ae838f6f568e67c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T19:01:43.066Z",
  "text": "Well, this is how I see your work. I think that before your college started you had been working certainly for more than than the expected 40 hours worth a week.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "So, if you now have less time, that should not be fateful. I think that the total work will be enough.",
  "id": "57a8d75f613cc18036715881",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T19:02:55.733Z",
  "text": "So, if you now have less time, that should not be fateful. I think that the total work will be enough.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "In fact, you have accomplished about what I was expecting from the beginning. There were many ideas in your gsoc application, but I never thought they could all be considered.",
  "id": "57a8d829f7f11a7936ace00a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T19:06:17.469Z",
  "text": "In fact, you have accomplished about what I was expecting from the beginning. There were many ideas in your gsoc application, but I never thought they could all be considered.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "To be true, I just don&#39;t want to pass. I want to pass out with a good evaluation from you, that matters to me, since it can be used in future projects related to google as I heard from someone. So If it does take me do that I will pull in time from my academic project. Both are a priority to me. But may be 3 month time (I get bored) on project has been a little more for me.",
  "id": "57a8d87346610f1739496160",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T19:07:31.070Z",
  "text": "To be true, I just don't want to pass. I want to pass out with a good evaluation from you, that matters to me, since it can be used in future projects related to google as I heard from someone. So If it does take me do that I will pull in time from my academic project. Both are a priority to me. But may be 3 month time (I get bored) on project has been a little more for me.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I suggested the presentation of permutation groups because you seemed to be doing so well. But think of it as something extra.",
  "id": "57a8d88bae838f6f568e6c49",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T19:07:55.037Z",
  "text": "I suggested the presentation of permutation groups because you seemed to be doing so well. But think of it as something extra.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Thank you so much.",
  "id": "57a8d8fbae838f6f568e71c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T19:09:47.674Z",
  "text": "Thank you so much.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It would suffice if you could check the loose ends in the current work (if there still are some). Permutation groups can wait.",
  "id": "57a8d96dae838f6f568e72a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T19:11:41.251Z",
  "text": "It would suffice if you could check the loose ends in the current work (if there still are some). Permutation groups can wait.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-08T19:14:53.703Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay. How about having a parallel documentation (like the one by you on <code>Poly&#39;s</code> module) going parallel to that? Since I will test with more examples.",
  "id": "57a8da2446610f17394965c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T19:14:44.188Z",
  "text": "Okay. How about having a parallel documentation (like the one by you on `Poly's` module) going parallel to that? Since I will test with more examples.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Sphinx documentation would certainly be nice.",
  "id": "57a8da42bc688a133906a5cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T19:15:14.701Z",
  "text": "Sphinx documentation would certainly be nice.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "More than just a collection of docstrings from the code.",
  "id": "57a8da6046610f1739496670",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T19:15:44.054Z",
  "text": "More than just a collection of docstrings from the code.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes. Hm, okay fine then.",
  "id": "57a8da7cd7087a017fa3519c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T19:16:12.618Z",
  "text": "Yes. Hm, okay fine then.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-08T19:18:58.587Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That would be welcome if you have time for it. But maybe you should also think of the blog (which can be much easier to write :))",
  "id": "57a8db15bc688a133906a7e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T19:18:45.029Z",
  "text": "That would be welcome if you have time for it. But maybe you should also think of the blog (which can be much easier to write :))",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Maybe that was all for tonight?",
  "id": "57a8db4c16b0696856a4092d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T19:19:40.106Z",
  "text": "Maybe that was all for tonight?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes :) Ya. That will be great. Thanks for the time.",
  "id": "57a8db5746610f1739496882",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T19:19:51.737Z",
  "text": "Yes :) Ya. That will be great. Thanks for the time.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Good night!",
  "id": "57a8db5d46610f1739496890",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T19:19:57.693Z",
  "text": "Good night!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Good night!",
  "id": "57a8db6316b0696856a409b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T19:20:03.903Z",
  "text": "Good night!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "yes, it&#39;s usually a good idea to wrap a GSoC project with documentation ",
  "id": "57a8db6f46610f17394968cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T19:20:15.446Z",
  "text": "yes, it's usually a good idea to wrap a GSoC project with documentation ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "and also making sure any outstanding PRs are merged ",
  "id": "57a8db83f7f11a7936aced35",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T19:20:35.701Z",
  "text": "and also making sure any outstanding PRs are merged ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-08T19:21:28.575Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Yes, I do have two PR&#39;s. I will get those complete as well",
  "id": "57a8dbb4613cc1803671640e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T19:21:24.832Z",
  "text": "Yes, I do have two PR's. I will get those complete as well",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "These are <span data-link-type=\"issue\" data-issue=\"11460\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#11460</span> and <span data-link-type=\"issue\" data-issue=\"11361\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#11361</span>",
  "id": "57a8dc6eff82b9fc7e6c8b44",
  "issues": [
   {
    "number": "11460",
    "repo": "sympy/sympy"
   },
   {
    "number": "11361",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T19:24:30.072Z",
  "text": "These are https://github.com/sympy/sympy/pull/11460 and https://github.com/sympy/sympy/pull/11361",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I am writing to the list about this. Merging the outstanding PRs is important, because if you leave them open past GSoC, you have much less time to work on them, and they are harder to get merged. ",
  "id": "57a8dcb2ff82b9fc7e6c8bf3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T19:25:38.997Z",
  "text": "I am writing to the list about this. Merging the outstanding PRs is important, because if you leave them open past GSoC, you have much less time to work on them, and they are harder to get merged. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "my own GSoC project from 2010 took almost two years to get merged in. We want to avoid that happening. ",
  "id": "57a8dce9bc688a133906ac35",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T19:26:33.196Z",
  "text": "my own GSoC project from 2010 took almost two years to get merged in. We want to avoid that happening. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Sure. I have put the GSoC label on them.",
  "id": "57a8dd3ebc688a133906acf6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-08T19:27:58.186Z",
  "text": "Sure. I have put the GSoC label on them.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Hi, I came across <a href=\"https://github.com/sympy/sympy/blob/master/sympy/printing/pretty/pretty.py#L1551\" rel=\"nofollow\" target=\"_blank\" class=\"link\">this</a> while looking into pretty printing of vectors. It seems to be <code>_print_AccumulationBounds</code> elsewhere.",
  "id": "57aaf98746610f17394e4309",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-10T09:53:11.214Z",
  "text": "Hi, I came across [this](https://github.com/sympy/sympy/blob/master/sympy/printing/pretty/pretty.py#L1551) while looking into pretty printing of vectors. It seems to be `_print_AccumulationBounds` elsewhere.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/master/sympy/printing/pretty/pretty.py#L1551"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Hello Kalevi. I noted that, there is also one printing error in &quot;combinatorics&quot; module of permutation groups (the one I wrote). I was studying code of printing.",
  "id": "57aafa58bc688a13390b9813",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-10T09:56:40.009Z",
  "text": "Hello Kalevi. I noted that, there is also one printing error in \"combinatorics\" module of permutation groups (the one I wrote). I was studying code of printing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-10T10:03:52.340Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I will fix this in the PR with combinatorics printing. In particular this is the <a href=\"https://gist.github.com/gxyd/0dbea830e4f6e99c66fdbd4d90a1300e\" rel=\"nofollow\" target=\"_blank\" class=\"link\">permutation printing bug</a>.",
  "id": "57aafa8046610f17394e460e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-10T09:57:20.384Z",
  "text": "I will fix this in the PR with combinatorics printing. In particular this is the [permutation printing bug](https://gist.github.com/gxyd/0dbea830e4f6e99c66fdbd4d90a1300e).",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/gxyd/0dbea830e4f6e99c66fdbd4d90a1300e"
   }
  ],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have published the blog for 12<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mrow></mrow><mrow><mi>t</mi><mi>h</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">^{th}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.849108em;\"></span><span class=\"strut bottom\" style=\"height:0.849108em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span></span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord mathit\">t</span><span class=\"mord mathit\">h</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> week on <a href=\"https://gxyd.github.io/gsoc2016/gsoc_week_12.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">my website</a> , also it is there on planet sympy website.",
  "id": "57ab1a96613cc1803676a1d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-10T12:14:14.649Z",
  "text": "I have published the blog for 12$$^{th}$$ week on [my website](https://gxyd.github.io/gsoc2016/gsoc_week_12.html) , also it is there on planet sympy website.",
  "unread": false,
  "urls": [
   {
    "url": "https://gxyd.github.io/gsoc2016/gsoc_week_12.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That looks fine :)",
  "id": "57ab1ef016b0696856a94d3f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-10T12:32:48.029Z",
  "text": "That looks fine :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-11T16:19:53.887Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Can I fix the small &quot;single&quot; or &quot;double quote&quot; (as described by Aaron <a href=\"https://gitter.im/sympy/GroupTheory?at=578f94510720fd587aac179a\" rel=\"nofollow\" target=\"_blank\" class=\"link\">here</a>, related to <code>perm_groups.py</code>) issues in the PR <span data-link-type=\"issue\" data-issue=\"11460\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#11460</span> itself  (though in separate commit) or would that be a problem for you reviewing?",
  "id": "57aca573ae838f6f5697bed7",
  "issues": [
   {
    "number": "11460"
   },
   {
    "number": "11460",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:18:59.996Z",
  "text": "Can I fix the small \"single\" or \"double quote\" (as described by Aaron [here](https://gitter.im/sympy/GroupTheory?at=578f94510720fd587aac179a), related to `perm_groups.py`) issues in the PR [#11460](https://github.com/sympy/sympy/pull/11460) itself  (though in separate commit) or would that be a problem for you reviewing?",
  "unread": false,
  "urls": [
   {
    "url": "https://gitter.im/sympy/GroupTheory?at=578f94510720fd587aac179a"
   }
  ],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Also if I understand that comment of Aaron then, on <a href=\"https://github.com/sympy/sympy/blob/master/sympy/combinatorics/perm_groups.py#L282\" rel=\"nofollow\" target=\"_blank\" class=\"link\">line 282</a> <code>S</code> should be single quoted, while <code>R</code> should be double-quoted (since a list-instance so not mathematics. Is that right?",
  "id": "57aca7f4ff82b9fc7e75ce32",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:29:40.794Z",
  "text": "Also if I understand that comment of Aaron then, on [line 282](https://github.com/sympy/sympy/blob/master/sympy/combinatorics/perm_groups.py#L282) `S` should be single quoted, while `R` should be double-quoted (since a list-instance so not mathematics. Is that right?",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/master/sympy/combinatorics/perm_groups.py#L282"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Quoting has no effect on reviewing. I think that Aaron wanted to minimize the use of latex since that is slow to render. Plain symbols like <code>S</code> or <code>R</code> need no latex so they can be double backquoted.",
  "id": "57aca904f7f11a7936b636fd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:34:12.251Z",
  "text": "Quoting has no effect on reviewing. I think that Aaron wanted to minimize the use of latex since that is slow to render. Plain symbols like `S` or `R` need no latex so they can be double backquoted.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Latex is typically needed for subscripts and backslash keywords.",
  "id": "57aca963d7087a017facab7c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:35:47.549Z",
  "text": "Latex is typically needed for subscripts and backslash keywords.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-11T16:37:39.390Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Where does the rendering of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>L</mi><mi>a</mi><mi>T</mi><mi>e</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">LaTex</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">L</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathit\">e</span><span class=\"mord mathit\">x</span></span></span></span> actually takes place? I see the file <a href=\"http://docs.sympy.org/latest/_modules/sympy/combinatorics/perm_groups.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.sympy.org/latest/_modules/sympy/combinatorics/perm_groups.html</a> which contains the source of <code>perm_groups.py</code>, perhaps no rendering of latex is there. Is there some-other place where &quot;that&quot; rendering is used?",
  "id": "57aca9c0bc688a13390fd7d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:37:20.240Z",
  "text": "Where does the rendering of $$LaTex$$ actually takes place? I see the file http://docs.sympy.org/latest/_modules/sympy/combinatorics/perm_groups.html which contains the source of `perm_groups.py`, perhaps no rendering of latex is there. Is there some-other place where \"that\" rendering is used?",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.sympy.org/latest/_modules/sympy/combinatorics/perm_groups.html"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "the rendering happens when you include the docstring in a sphinx document ",
  "id": "57aca9e646610f17395296fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:37:58.084Z",
  "text": "the rendering happens when you include the docstring in a sphinx document ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The rendering takes place in the local browser.",
  "id": "57aca9e716b0696856ad4a72",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:37:59.877Z",
  "text": "The rendering takes place in the local browser.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "the <code>_modules</code> pages are just copies of the source code",
  "id": "57aca9f2ff82b9fc7e75d4ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:38:10.674Z",
  "text": "the `_modules` pages are just copies of the source code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-11T16:38:39.409Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Ya, sorry. In browser jupter notebooks tab-completion.",
  "id": "57aca9f6ff82b9fc7e75d4b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:38:14.610Z",
  "text": "Ya, sorry. In browser jupter notebooks tab-completion.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I think that math should be latex rendered and code should be code rendered ",
  "id": "57acaa4516b0696856ad4ba1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:39:33.957Z",
  "text": "I think that math should be latex rendered and code should be code rendered ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "so it depends on the context. I wasn&#39;t trying to minimize latex ",
  "id": "57acaa58f7f11a7936b63bcf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:39:52.642Z",
  "text": "so it depends on the context. I wasn't trying to minimize latex ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"gxyd\" class=\"mention\">@gxyd</span> I&#39;m not following you regarding jupyter notebook completion ",
  "id": "57acaa77ff82b9fc7e75d613",
  "issues": [],
  "mentions": [
   {
    "screenName": "gxyd",
    "userId": "53eb987c107e137846baa89d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:40:23.704Z",
  "text": "@gxyd I'm not following you regarding jupyter notebook completion ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-11T16:41:16.561Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I mean, when we try to see the functionality of a particular function. We can use <code>shift + tab</code> to see the doctsring of that function.",
  "id": "57acaaa7ff82b9fc7e75d6b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:41:11.893Z",
  "text": "I mean, when we try to see the functionality of a particular function. We can use `shift + tab` to see the doctsring of that function.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "That is where its quite beautifully readable.",
  "id": "57acaabbff82b9fc7e75d6d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:41:31.779Z",
  "text": "That is where its quite beautifully readable.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I didn&#39;t know about that ",
  "id": "57acaacef7f11a7936b63cd2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:41:50.918Z",
  "text": "I didn't know about that ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I only knew about <code>function?</code>. Shift-tab is more useful ",
  "id": "57acaad9ae838f6f5697cf47",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:42:01.210Z",
  "text": "I only knew about `function?`. Shift-tab is more useful ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "it doesn&#39;t support rendering latex. Although I talked with some of the Jupyter developers at SciPy and they are planning to support it ",
  "id": "57acaaed16b0696856ad4d6a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:42:21.151Z",
  "text": "it doesn't support rendering latex. Although I talked with some of the Jupyter developers at SciPy and they are planning to support it ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-11T16:45:32.543Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Ya it doesn&#39;t support it. I thought it does.",
  "id": "57acaba7d7087a017facb267",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:45:27.584Z",
  "text": "Ya it doesn't support it. I thought it does.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "it will. You can see the demo here <a href=\"http://ipython.readthedocs.io/en/latest/whatsnew/version5.html#provisional-changes\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://ipython.readthedocs.io/en/latest/whatsnew/version5.html#provisional-changes</a>",
  "id": "57acabe1613cc180367aa857",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:46:25.488Z",
  "text": "it will. You can see the demo here http://ipython.readthedocs.io/en/latest/whatsnew/version5.html#provisional-changes",
  "unread": false,
  "urls": [
   {
    "url": "http://ipython.readthedocs.io/en/latest/whatsnew/version5.html#provisional-changes"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "but I think you also have to run some command in the developer console to enable mathjax ",
  "id": "57acabebbc688a13390fdd98",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:46:35.858Z",
  "text": "but I think you also have to run some command in the developer console to enable mathjax ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Rendering can take place in several different locations. I was first thinking of what happens when someone is reading SymPy&#39;s Sphinx documentation in the net. In that case the rendering is done in the browser, I think.",
  "id": "57acac2a46610f1739529d18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:47:38.242Z",
  "text": "Rendering can take place in several different locations. I was first thinking of what happens when someone is reading SymPy's Sphinx documentation in the net. In that case the rendering is done in the browser, I think.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<p>Aaron like you said</p><blockquote>\n<p>so it depends on the context. I wasn&#39;t trying to minimize latex </p></blockquote>\n<p>So can you please <a href=\"https://gitter.im/sympy/GroupTheory?at=57aca7f4ff82b9fc7e75ce32\" rel=\"nofollow\" target=\"_blank\" class=\"link\">answer this</a>, though Kalevi mentioned about you (may be) doing this to reduced <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>L</mi><mi>a</mi><mi>T</mi><mi>e</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">LaTex</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">L</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathit\">e</span><span class=\"mord mathit\">x</span></span></span></span> use.</p>",
  "id": "57acac67ff82b9fc7e75db15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:48:39.422Z",
  "text": "Aaron like you said\n> so it depends on the context. I wasn't trying to minimize latex \n\nSo can you please [answer this](https://gitter.im/sympy/GroupTheory?at=57aca7f4ff82b9fc7e75ce32), though Kalevi mentioned about you (may be) doing this to reduced $$LaTex$$ use.",
  "unread": false,
  "urls": [
   {
    "url": "https://gitter.im/sympy/GroupTheory?at=57aca7f4ff82b9fc7e75ce32"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "yes, the main use is reading the docs in the browser at docs.sympy.org ",
  "id": "57acac7ef7f11a7936b6413c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:49:02.165Z",
  "text": "yes, the main use is reading the docs in the browser at docs.sympy.org ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "for that, as I said, I think which you use depends on what the variable represents, whether it represents a mathematical variable or a code variable ",
  "id": "57acaca216b0696856ad52be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:49:38.103Z",
  "text": "for that, as I said, I think which you use depends on what the variable represents, whether it represents a mathematical variable or a code variable ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "since they often are the same, it depends on the context ",
  "id": "57acacb816b0696856ad5304",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-11T16:50:00.671Z",
  "text": "since they often are the same, it depends on the context ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-12T19:22:49.466Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I thought that I could use (I am not sure if that is a good idea at all) the SymPy&#39;s <code>@cacheit</code> functionality to store the result of &quot;coset enumeration&quot; procedures. Reading <a href=\"http://docs.sympy.org/0.7.1/modules/core.html#module-sympy.core.cache\" rel=\"nofollow\" target=\"_blank\" class=\"link\">documentation of cacheit</a> also suggests not to do so, as returned object (<code>CosetTable</code> instance) is mutable. Why aren&#39;t mutable objects allowed to use <code>@cacheit</code>? Is the solution obvious?",
  "id": "57ae21e0625cb3d84541fd42",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-12T19:22:08.177Z",
  "text": "I thought that I could use (I am not sure if that is a good idea at all) the SymPy's `@cacheit` functionality to store the result of \"coset enumeration\" procedures. Reading [documentation of cacheit](http://docs.sympy.org/0.7.1/modules/core.html#module-sympy.core.cache) also suggests not to do so, as returned object (`CosetTable` instance) is mutable. Why aren't mutable objects allowed to use `@cacheit`? Is the solution obvious?",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.sympy.org/0.7.1/modules/core.html#module-sympy.core.cache"
   }
  ],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "because if the object gets mutated, then it is no longer valid for the given input values ",
  "id": "57ae25ea364ad7fc5ace96fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-12T19:39:22.902Z",
  "text": "because if the object gets mutated, then it is no longer valid for the given input values ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "as a simple example, say you tried to cache the output of <code>eye(n)</code>, which returns a n x n (mutable) identity matrix ",
  "id": "57ae2623aee33d7241e8cd7a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-12T19:40:19.929Z",
  "text": "as a simple example, say you tried to cache the output of `eye(n)`, which returns a n x n (mutable) identity matrix ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "if someone did <code>M = eye(3); M *= 2</code>, then <code>M</code> is now a 3 x 3 matrix with 2 on the diagonal ",
  "id": "57ae2650418e6fc44cfa171a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-12T19:41:04.823Z",
  "text": "if someone did `M = eye(3); M *= 2`, then `M` is now a 3 x 3 matrix with 2 on the diagonal ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "but it&#39;s the same matrix. if <code>eye(3)</code> were cached to <code>M</code>, then <code>eye(3)</code> would return the same <code>M</code> with 2 on the diagonal ",
  "id": "57ae2662a00c6adb45e1c447",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-12T19:41:22.802Z",
  "text": "but it's the same matrix. if `eye(3)` were cached to `M`, then `eye(3)` would return the same `M` with 2 on the diagonal ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "So If I give the same input arguments in future. I will get a result that the &quot;initial modified&quot; instance possesses.",
  "id": "57ae2928a00c6adb45e1cad5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-12T19:53:12.196Z",
  "text": "So If I give the same input arguments in future. I will get a result that the \"initial modified\" instance possesses.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-12T20:09:10.229Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "(Regarding search-results issue) I think your comments there and on the issue will be of help. I will look through them and see what need to be done. Thanks Aaron. Its too late for me now. Bye!",
  "id": "57ae2cdfaee33d7241e8dffc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-12T20:09:03.014Z",
  "text": "(Regarding search-results issue) I think your comments there and on the issue will be of help. I will look through them and see what need to be done. Thanks Aaron. Its too late for me now. Bye!",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-08-15T09:52:41.382Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<p>Hi Kalevi. I am seeing that <span data-link-type=\"issue\" data-issue=\"10183\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#10183</span> introduced quite a few bugs in printing, since of the things I may not have known at that time, like:</p><pre><code>&gt;&gt;&gt; from sympy<span class=\"class\">.combinatorics</span><span class=\"class\">.permutations</span> import Permutation\n&gt;&gt;&gt; r = <span class=\"function\"><span class=\"title\">Permutation</span><span class=\"params\">(<span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>)</span></span>\n&gt;&gt;&gt; <span class=\"function\"><span class=\"title\">str</span><span class=\"params\">(r)</span></span>\n(<span class=\"number\">2</span> <span class=\"number\">5</span> <span class=\"number\">6</span>)</code></pre><p>The answer <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mrow><mo fence=\"true\">(</mo><mn>2</mn><mspace width=\"0.277778em\"></mspace><mn>5</mn><mspace width=\"0.277778em\"></mspace><mn>6</mn><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\left( 2\\; 5\\; 6\\right)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"minner textstyle uncramped\"><span class=\"style-wrap reset-textstyle textstyle uncramped\" style=\"top:0em;\">(</span><span class=\"mord mathrm\">2</span><span class=\"mord mspace thickspace\"></span><span class=\"mord mathrm\">5</span><span class=\"mord mspace thickspace\"></span><span class=\"mord mathrm\">6</span><span class=\"style-wrap reset-textstyle textstyle uncramped\" style=\"top:0em;\">)</span></span></span></span></span> contradicts to what the documentation of <a href=\"http://docs.sympy.org/dev/tutorial/printing.html#str\" rel=\"nofollow\" target=\"_blank\" class=\"link\">SymPy on str</a> says</p><blockquote>\n<p>String forms are designed to be easy to read, but in a form that is correct Python syntax so that it can be copied and pasted.</p></blockquote>\n<p>May be we should revert some of the changes made in the PR (<code>git bisect</code> indicates that PR introduced this bug)?</p>",
  "id": "57b19077aee33d7241ee7849",
  "issues": [
   {
    "number": "10183",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-15T09:50:47.087Z",
  "text": "Hi Kalevi. I am seeing that [PR 10183](https://github.com/sympy/sympy/pull/10183) introduced quite a few bugs in printing, since of the things I may not have known at that time, like:\n```\n>>> from sympy.combinatorics.permutations import Permutation\n>>> r = Permutation(2, 5, 6)\n>>> str(r)\n(2 5 6)\n```\nThe answer $$\\left( 2\\; 5\\; 6\\right)$$ contradicts to what the documentation of [SymPy on str](http://docs.sympy.org/dev/tutorial/printing.html#str) says\n> String forms are designed to be easy to read, but in a form that is correct Python syntax so that it can be copied and pasted.\n\nMay be we should revert some of the changes made in the PR (`git bisect` indicates that PR introduced this bug)?",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.sympy.org/dev/tutorial/printing.html#str"
   }
  ],
  "v": 2
 },
 {
  "editedAt": "2016-08-15T10:06:09.430Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Though I may agree that there are currently objects that don&#39;t obey this, example being: <code>Interval</code> . Perhaps, they are also moving in this direction with issue<span data-link-type=\"issue\" data-issue=\"10672\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#10672</span>.",
  "id": "57b193fd0fd99f70413bf1fa",
  "issues": [
   {
    "number": "10672"
   },
   {
    "number": "10672",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-15T10:05:49.250Z",
  "text": "Though I may agree that there are currently objects that don't obey this, example being: `Interval` . Perhaps, they are also moving in this direction with issue[#10672](https://github.com/sympy/sympy/issues/10672).",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Right now I think it would be important to make the Sphinx documentation include the docstrings for fp groups. If that can be done before changing the printing of permutations, then that could wait.",
  "id": "57b1982fea1702624b30078b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-15T10:23:43.139Z",
  "text": "Right now I think it would be important to make the Sphinx documentation include the docstrings for fp groups. If that can be done before changing the printing of permutations, then that could wait.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "<p>I&#39;m not quite sure what <code>str</code> should return on permutations. This is what Python&#39;s reference says:</p><blockquote>\n<p>The difference with repr(object) is that str(object) does not always attempt to return a string that is acceptable to eval(); its goal is to return a printable string.</p></blockquote>\n",
  "id": "57b1990506285b604b392d68",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-15T10:27:17.134Z",
  "text": "I'm not quite sure what `str` should return on permutations. This is what Python's reference says:\n>The difference with repr(object) is that str(object) does not always attempt to return a string that is acceptable to eval(); its goal is to return a printable string.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have started writing (and have pushed one commit) the Sphinx documentation.",
  "id": "57b1fcefbe8025f1694414a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-15T17:33:35.237Z",
  "text": "I have started writing (and have pushed one commit) the Sphinx documentation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-16T15:32:20.902Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Do you know about the guidelines that I have been asked (by Google) to follow for &quot;Work Project Submission&quot;?",
  "id": "57b331236a2fa2ff3d8fe088",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-16T15:28:35.601Z",
  "text": "Do you know about the guidelines that I have been asked (by Google) to follow for \"Work Project Submission\"?",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I don&#39;t know about that. Maybe Aaron does.",
  "id": "57b3397e1a7d02075684133a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-16T16:04:14.590Z",
  "text": "I don't know about that. Maybe Aaron does.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I will paste them here.",
  "id": "57b3398dbe8025f169470b5b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-16T16:04:29.426Z",
  "text": "I will paste them here.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Can you visit this link <a href=\"https://developers.google.com/open-source/gsoc/help/work-product\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://developers.google.com/open-source/gsoc/help/work-product</a> ?",
  "id": "57b339acbe8025f169470c0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-16T16:05:00.336Z",
  "text": "Can you visit this link https://developers.google.com/open-source/gsoc/help/work-product ?",
  "unread": false,
  "urls": [
   {
    "url": "https://developers.google.com/open-source/gsoc/help/work-product"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I think you can visit the link without any problem.",
  "id": "57b339db1a7d020756841409",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-16T16:05:47.599Z",
  "text": "I think you can visit the link without any problem.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I guess it could be a link to a blog, for example.",
  "id": "57b33a636a2fa2ff3d8ffef9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-16T16:08:03.371Z",
  "text": "I guess it could be a link to a blog, for example.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "And the blog could contain a link to github.",
  "id": "57b33b408d93113d5f00fba6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-16T16:11:44.848Z",
  "text": "And the blog could contain a link to github.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have <span data-link-type=\"issue\" data-issue=\"6\" data-issue-repo=\"gxyd/sympy\" class=\"issue\">gxyd/sympy#6</span>. I intend to use that way. I will just point to that link on my blog, my last blog-post for GSoC will also contain other things.",
  "id": "57b348521a7d020756843e2b",
  "issues": [
   {
    "number": "6",
    "repo": "gxyd/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-16T17:07:30.484Z",
  "text": "I have [created a PR for Product Submission](https://github.com/gxyd/sympy/pull/6). I intend to use that way. I will just point to that link on my blog, my last blog-post for GSoC will also contain other things.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "according to that page, a link like <a href=\"https://github.com/sympy/sympy/commits/master?author=gxyd\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/commits/master?author=gxyd</a> is fine ",
  "id": "57b3489d4f819cfa3da4f4df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-16T17:08:45.663Z",
  "text": "according to that page, a link like https://github.com/sympy/sympy/commits/master?author=gxyd is fine ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/commits/master?author=gxyd"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "that PR you made seems fine too ",
  "id": "57b348cdbe8025f169473f18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-16T17:09:33.419Z",
  "text": "that PR you made seems fine too ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "But I guess that would also contain a lot of un-related commits. That PR makes the things quite clear.",
  "id": "57b348f88d93113d5f012a50",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-16T17:10:16.547Z",
  "text": "But I guess that would also contain a lot of un-related commits. That PR makes the things quite clear.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "yeah",
  "id": "57b349044f819cfa3da4f5f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-16T17:10:28.653Z",
  "text": "yeah",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Also I used <code>git cherry-pick</code> for the first time, I think that command is awesome.",
  "id": "57b34911d65128415f9b4c33",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-16T17:10:41.299Z",
  "text": "Also I used `git cherry-pick` for the first time, I think that command is awesome.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I wouldn&#39;t worry about it too much. They just do this as a legal requirement. ",
  "id": "57b349126a2fa2ff3d902dd3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-16T17:10:42.519Z",
  "text": "I wouldn't worry about it too much. They just do this as a legal requirement. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "In the past I only saw Skirpichev using it, and I got to use it now.",
  "id": "57b3492f7ce08cec69decfa1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-16T17:11:11.420Z",
  "text": "In the past I only saw Skirpichev using it, and I got to use it now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Hello Aaron, in the past SymPy has always required gsoc students to also submit a <strong>report</strong>. So am I right in assuming that it will be required this time as well?",
  "id": "57b4c18c1a7d02075687db79",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-17T19:57:00.994Z",
  "text": "Hello Aaron, in the past SymPy has always required gsoc students to also submit a **report**. So am I right in assuming that it will be required this time as well?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "ah yes, I had almost forgotten about this ",
  "id": "57b4c97a7ce08cec69e2852c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-17T20:30:50.304Z",
  "text": "ah yes, I had almost forgotten about this ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "once the work is finished, you should write up a report on the wiki, like the other ones that are there ",
  "id": "57b4c98dd65128415f9f1e4d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-17T20:31:09.251Z",
  "text": "once the work is finished, you should write up a report on the wiki, like the other ones that are there ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "you can also cross post it as a blog post ",
  "id": "57b4c9945a4ad61056838932",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-17T20:31:16.372Z",
  "text": "you can also cross post it as a blog post ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-19T10:30:39.234Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have added a blog post for Final Product submission <a href=\"https://gxyd.github.io/gsoc2016/gsoc2016_project.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gxyd.github.io/gsoc2016/gsoc2016_project.html</a> it is currently not on PlanetSymPy. Also we have to share the link with google before Aug 23 (deadline). If you think of any possible modifications I will make them. Also I am sure that I will make a few modifications, since I have not added any info about the ongoing documentation PR, which I will complete quickly.",
  "id": "57b6dde4187885ef4f5dbf33",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-19T10:22:28.214Z",
  "text": "I have added a blog post for Final Product submission https://gxyd.github.io/gsoc2016/gsoc2016_project.html it is currently not on PlanetSymPy. Also we have to share the link with google before Aug 23 (deadline). If you think of any possible modifications I will make them. Also I am sure that I will make a few modifications, since I have not added any info about the ongoing documentation PR, which I will complete quickly.",
  "unread": false,
  "urls": [
   {
    "url": "https://gxyd.github.io/gsoc2016/gsoc2016_project.html"
   }
  ],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems to me that nothing need be added to the report. (It is probably even now more detailed than expected.)",
  "id": "57b6f368187885ef4f5e0513",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-19T11:54:16.501Z",
  "text": "It seems to me that nothing need be added to the report. (It is probably even now more detailed than expected.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-19T11:57:28.642Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I saw last year report submissions, for example <a href=\"https://github.com/sympy/sympy/wiki/GSoC-2012-Report-Aleksandar-Makelov:-Computational-Group-Theory\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/wiki/GSoC-2012-Report-Aleksandar-Makelov:-Computational-Group-Theory</a> , probably these were not share with google but only with SymPy.",
  "id": "57b6f41fcd00bdff6e61514b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-19T11:57:19.646Z",
  "text": "I saw last year report submissions, for example https://github.com/sympy/sympy/wiki/GSoC-2012-Report-Aleksandar-Makelov:-Computational-Group-Theory , probably these were not share with google but only with SymPy.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/wiki/GSoC-2012-Report-Aleksandar-Makelov:-Computational-Group-Theory"
   }
  ],
  "v": 2
 },
 {
  "editedAt": "2016-08-19T12:24:08.160Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Or do you think I should use the above blog for only &quot;SymPy Report Submission&quot;, while a (new) brief blog for &quot;Google Product Submission&quot;? Or if you are not sure that had be fine, since Aaron may have some comments about it.",
  "id": "57b6fa2487f779f0690dc014",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2016-08-19T12:23:00.839Z",
  "text": "Or do you think I should use the above blog for only \"SymPy Report Submission\", while a (new) brief blog for \"Google Product Submission\"? Or if you are not sure that had be fine, since Aaron may have some comments about it.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I don&#39;t think another blog would be needed.",
  "id": "57b6fd0db64a3a016f4c4395",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-08-19T12:35:25.468Z",
  "text": "I don't think another blog would be needed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "the report and blog are sympy requirements, not google requirements ",
  "id": "57b72fd7cd00bdff6e624101",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-08-19T16:12:07.384Z",
  "text": "the report and blog are sympy requirements, not google requirements ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "another thing that you can do to help, is add your project to <a href=\"https://github.com/sympy/sympy/wiki/Release-Notes-for-1.1\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/wiki/Release-Notes-for-1.1</a> (assuming the code all got merged) ",
  "id": "57b730a1bb6fad403ceb4b1b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-08-19T16:15:29.453Z",
  "text": "another thing that you can do to help, is add your project to https://github.com/sympy/sympy/wiki/Release-Notes-for-1.1 (assuming the code all got merged) ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/wiki/Release-Notes-for-1.1"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Hello <span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> do you think it is a good time to merge PR <span data-link-type=\"issue\" data-issue=\"11460\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#11460</span>, since evaluation deadline is approaching, now. Perhaps you didn&#39;t read my comments on the PR.",
  "id": "57b9f21b6981f5f269073553",
  "issues": [
   {
    "number": "11460"
   },
   {
    "number": "11460",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2016-08-21T18:25:31.822Z",
  "text": "Hello @jksuom do you think it is a good time to merge PR [#11460](https://github.com/sympy/sympy/pull/11460), since evaluation deadline is approaching, now. Perhaps you didn't read my comments on the PR.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-21T18:29:46.204Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Sine now only 2 days remain. I would like to submit it surely by tomorrow, if everything goes well.",
  "id": "57b9f2aab64a3a016f54c4fb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-08-21T18:27:54.842Z",
  "text": "Sine now only 2 days remain. I would like to submit it surely by tomorrow, if everything goes well.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have updated the blog. Do you think of any changes that need to be brought? It may be too late for you now, that had be fine (I will leave the comments here).",
  "id": "57b9f4f9187885ef4f667298",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-08-21T18:37:45.430Z",
  "text": "I have updated the blog. Do you think of any changes that need to be brought? It may be too late for you now, that had be fine (I will leave the comments here).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Is it ready to merge?",
  "id": "57b9f570bb6fad403cf2d9c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-08-21T18:39:44.128Z",
  "text": "Is it ready to merge?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I believe so. There are few things need to be added but I can add them afterwards (after submission to google).",
  "id": "57b9f5b16981f5f269073f1b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-08-21T18:40:49.483Z",
  "text": "I believe so. There are few things need to be added but I can add them afterwards (after submission to google).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "The documentation is not complete, topics like simplification of presentation have been untouched.",
  "id": "57b9f5daed79c5ee4f24fa9f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-08-21T18:41:30.804Z",
  "text": "The documentation is not complete, topics like simplification of presentation have been untouched.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Methods for manipulating words looks a little odd. A word or two on each line.",
  "id": "57b9f60d87f779f069167f98",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-08-21T18:42:21.694Z",
  "text": "Methods for manipulating words looks a little odd. A word or two on each line.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay, I am adding about them.",
  "id": "57b9f637bb6fad403cf2dd01",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-08-21T18:43:03.530Z",
  "text": "Okay, I am adding about them.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That is why I thought it was still &#39;WIP&#39;.",
  "id": "57b9f6555ffbca3e3cfe43f4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-08-21T18:43:33.445Z",
  "text": "That is why I thought it was still 'WIP'.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "But you can probably finish it tomorrow. Then it could be merged.",
  "id": "57b9f67ecd00bdff6e69c64e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-08-21T18:44:14.603Z",
  "text": "But you can probably finish it tomorrow. Then it could be merged.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Can you share the link to the section that need to be changed? Since in the last commit (yesterday) I had removed that section, or do you want me to add that section?",
  "id": "57b9f78b87f779f069168496",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-08-21T18:48:43.149Z",
  "text": "Can you share the link to the section that need to be changed? Since in the last commit (yesterday) I had removed that section, or do you want me to add that section?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Section on Manipulating Words was removed in last commit.",
  "id": "57b9f7afcd00bdff6e69c9bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-08-21T18:49:19.639Z",
  "text": "Section on Manipulating Words was removed in last commit.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I didn&#39;t see that. I think that is then ok. I&#39;ll look into it more closely tomorrow.",
  "id": "57b9f7f35ffbca3e3cfe4913",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-08-21T18:50:27.366Z",
  "text": "I didn't see that. I think that is then ok. I'll look into it more closely tomorrow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-21T18:54:56.044Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It was this: <a href=\"https://github.com/sympy/sympy/pull/11460/files#diff-8cb70cfa45fc9856c5470260f643ac4bR90\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/pull/11460/files#diff-8cb70cfa45fc9856c5470260f643ac4bR90</a>",
  "id": "57b9f81aed79c5ee4f25018a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-08-21T18:51:06.496Z",
  "text": "It was this: https://github.com/sympy/sympy/pull/11460/files#diff-8cb70cfa45fc9856c5470260f643ac4bR90",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/11460/files#diff-8cb70cfa45fc9856c5470260f643ac4bR90"
   }
  ],
  "v": 2
 },
 {
  "editedAt": "2016-08-21T18:51:45.488Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay, I thought so you may be referring to this, fine.",
  "id": "57b9f83bbb6fad403cf2e455",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-08-21T18:51:39.813Z",
  "text": "Okay, I thought so you may be referring to this, fine.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I have the code open all the time. github often warns that it is outdated but not this time.",
  "id": "57b9f8b2bb6fad403cf2e56b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-08-21T18:53:38.769Z",
  "text": "I have the code open all the time. github often warns that it is outdated but not this time.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-21T18:59:14.198Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I think github did just fine. That above topic you mentioned has <strong>not</strong> been removed. Since I was talking about one another section named <a href=\"https://github.com/sympy/sympy/pull/11460/commits/2c4c99fcae5ae476fd8f3cf9207f21c192114962#diff-8cb70cfa45fc9856c5470260f643ac4bL88\" rel=\"nofollow\" target=\"_blank\" class=\"link\">Methods of manipulating words</a> which I had removed.",
  "id": "57b9f9f46981f5f269074d21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-08-21T18:59:00.377Z",
  "text": "I think github did just fine. That above topic you mentioned has **not** been removed. Since I was talking about one another section named [Methods of manipulating words](https://github.com/sympy/sympy/pull/11460/commits/2c4c99fcae5ae476fd8f3cf9207f21c192114962#diff-8cb70cfa45fc9856c5470260f643ac4bL88) which I had removed.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/11460/commits/2c4c99fcae5ae476fd8f3cf9207f21c192114962#diff-8cb70cfa45fc9856c5470260f643ac4bL88"
   }
  ],
  "v": 2
 },
 {
  "editedAt": "2016-08-21T19:14:22.981Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have added a few lines, as for now I believe that much would suffice.",
  "id": "57b9fd8aed79c5ee4f251274",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-08-21T19:14:18.123Z",
  "text": "I have added a few lines, as for now I believe that much would suffice.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think that group presentations look better when <code>\\langle</code> and <code>\\rangle</code> are used instead of <code>&lt;</code> and <code>&gt;</code>. If no special measures are taken, the latter symbols are interpreted as binary relations that automatically leave some extra space around. That does not look nice within angle brackets.",
  "id": "57ba8c08ed79c5ee4f268b6c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-08-22T05:22:16.407Z",
  "text": "I think that group presentations look better when `\\langle` and `\\rangle` are used instead of `<` and `>`. If no special measures are taken, the latter symbols are interpreted as binary relations that automatically leave some extra space around. That does not look nice within angle brackets.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-22T16:25:56.351Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> <span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> do you have any comments regarding the blog post <a href=\"https://gxyd.github.io/gsoc2016/gsoc2016_project.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gxyd.github.io/gsoc2016/gsoc2016_project.html</a> ? Since I will now submit the final evaluation.",
  "id": "57bb2788ed79c5ee4f28c0b3",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   },
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2016-08-22T16:25:44.879Z",
  "text": "@asmeurer @jksuom do you have any comments regarding the blog post https://gxyd.github.io/gsoc2016/gsoc2016_project.html ? Since I will now submit the final evaluation.",
  "unread": false,
  "urls": [
   {
    "url": "https://gxyd.github.io/gsoc2016/gsoc2016_project.html"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That looks good to me.",
  "id": "57bb2fcced79c5ee4f28e512",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-08-22T17:01:00.962Z",
  "text": "That looks good to me.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Okay, we are done with <em>my evaluation</em>. Only now <em>mentor evaluation</em> remain. Its been enjoyable :) . Thank you very much. ",
  "id": "57bb322387f779f0691a919a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2016-08-22T17:10:59.055Z",
  "text": "Okay, we are done with *my evaluation*. Only now *mentor evaluation* remain. Its been enjoyable :) . Thank you very much. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "Hello <span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> <span data-link-type=\"mention\" data-screen-name=\"gxyd\" class=\"mention\">@gxyd</span> , i have been reading this module for a few days. I have briefly gone over the current group theory code base. I am doing BTech in computer science. I like math, but i did not know much about group theory itself, i have read 3 chapters from &quot;A course on group theory&quot; by Harvey E. Rose. I also read <span data-link-type=\"mention\" data-screen-name=\"gxyd\" class=\"mention\">@gxyd</span> GSOC report.",
  "id": "5860ffffc5a4e0233bcf1950",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   },
   {
    "screenName": "gxyd",
    "userId": "53eb987c107e137846baa89d",
    "userIds": []
   },
   {
    "screenName": "gxyd",
    "userId": "53eb987c107e137846baa89d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2016-12-26T11:33:19.623Z",
  "text": "Hello @jksuom @gxyd , i have been reading this module for a few days. I have briefly gone over the current group theory code base. I am doing BTech in computer science. I like math, but i did not know much about group theory itself, i have read 3 chapters from \"A course on group theory\" by Harvey E. Rose. I also read @gxyd GSOC report.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "I would like to work on &quot;Cosets in permutation groups&quot;, has any work already been done on it? can someone push me in a direction. Thanks :)",
  "id": "5861003d7a3f79ef5da12757",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-12-26T11:34:21.782Z",
  "text": "I would like to work on \"Cosets in permutation groups\", has any work already been done on it? can someone push me in a direction. Thanks :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The best source for starting in this area is probably the Handbook of computational group theory. Google will show several links to it. There are even pdf-versions available, this one, for example: <a href=\"http://algnt.satyukov.ru/books/Handbook_of_Computational_Group_Theory.pdf\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://algnt.satyukov.ru/books/Handbook_of_Computational_Group_Theory.pdf</a> .",
  "id": "586104f30730ce69370ee772",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-12-26T11:54:27.763Z",
  "text": "The best source for starting in this area is probably the Handbook of computational group theory. Google will show several links to it. There are even pdf-versions available, this one, for example: http://algnt.satyukov.ru/books/Handbook_of_Computational_Group_Theory.pdf .",
  "unread": false,
  "urls": [
   {
    "url": "http://algnt.satyukov.ru/books/Handbook_of_Computational_Group_Theory.pdf"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "Great thanks, i have basic idea. Ill read that book asap but till then do you have an easy issue which i can take a shot at?",
  "id": "5861063be7bdfe4e299c58c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-12-26T11:59:55.721Z",
  "text": "Great thanks, i have basic idea. Ill read that book asap but till then do you have an easy issue which i can take a shot at?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "You can start by opening this page: <a href=\"https://github.com/sympy/sympy/issues?q=is%3Aopen+is%3Aissue\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/issues?q=is%3Aopen+is%3Aissue</a>. Then choose &#39;Easy to Fix&#39; in the &#39;Labels&#39; menu.",
  "id": "5861077fc895451b7520d056",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-12-26T12:05:19.157Z",
  "text": "You can start by opening this page: https://github.com/sympy/sympy/issues?q=is%3Aopen+is%3Aissue. Then choose 'Easy to Fix' in the 'Labels' menu.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/issues?q=is%3Aopen+is%3Aissue"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2016-12-26T12:13:19.468Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": ":sweat_smile: no easy issue exists for group theory currently, but thats ok. I will take a shot at &quot;finding cosets for permutation groups&quot; ill read up Schreier-Sims algorithm, try implement it and send a PR. Is that OK?",
  "id": "5861090c058ca967379188a0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-12-26T12:11:56.720Z",
  "text": ":sweat_smile: no easy issue exists for group theory currently, but thats ok. I will take a shot at \"finding cosets for permutation groups\" ill read up Schreier-Sims algorithm, try implement it and send a PR. Is that OK?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "There is an implementation of the Schreier-Sims algorithm in perm_groups.py. (There is no easy issue in group theory probably because the theory is not quite that easy to master.)",
  "id": "58610f8d058ca9673791a3d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-12-26T12:39:41.142Z",
  "text": "There is an implementation of the Schreier-Sims algorithm in perm_groups.py. (There is no easy issue in group theory probably because the theory is not quite that easy to master.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "cool",
  "id": "58611c8c7a3f79ef5da19b66",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-12-26T13:35:08.782Z",
  "text": "cool",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "How much of the &quot;Handbook of computational group theory&quot; has already been implemented ?",
  "id": "58629667af6b364a290018c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-12-27T16:27:19.426Z",
  "text": "How much of the \"Handbook of computational group theory\" has already been implemented ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "And how much of it is planned to be implemented ?",
  "id": "5862968f0730ce693715c89e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-12-27T16:27:59.668Z",
  "text": "And how much of it is planned to be implemented ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "like the most of the book or only parts (my guess is till chapter 12: Rewriting Systems and the Knuth-Bendix Completion Process)",
  "id": "586296f5c895451b7527c1c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-12-27T16:29:41.506Z",
  "text": "like the most of the book or only parts (my guess is till chapter 12: Rewriting Systems and the Knuth-Bendix Completion Process)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Part of ch 4, most of ch 5 and some of ch 6, I think. There are no plans for other chapters as far as I know. <span data-link-type=\"mention\" data-screen-name=\"gxyd\" class=\"mention\">@gxyd</span> could have some plans.",
  "id": "58629e400730ce693715f13f",
  "issues": [],
  "mentions": [
   {
    "screenName": "gxyd",
    "userId": "53eb987c107e137846baa89d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2016-12-27T17:00:48.195Z",
  "text": "Part of ch 4, most of ch 5 and some of ch 6, I think. There are no plans for other chapters as far as I know. @gxyd could have some plans.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-12-28T04:41:58.858Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Apart from what has been mentioned by jsuom. I thought of implementing part of Ch 9 (Computing Quotients of Finitely Presented Groups), and then the <em>Rewriting System</em> (Ch 12). Apart from the Handbook, I thought of implementing functionality present in <em>Albert</em> computer algebra system i.e implementation of non-associative algebraic computations, though I had no idea about dealing with implementation of <em>non associative</em> computations.",
  "id": "5863420bc5a4e0233bd95435",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-12-28T04:39:39.465Z",
  "text": "Apart from what has been mentioned by jsuom. I thought of implementing part of Ch 9 (Computing Quotients of Finitely Presented Groups), and then the *Rewriting System* (Ch 12). Apart from the Handbook, I thought of implementing functionality present in *Albert* computer algebra system i.e implementation of non-associative algebraic computations, though I had no idea about dealing with implementation of *non associative* computations.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "editedAt": "2016-12-28T04:43:11.090Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "You can look for what proposal I submitted, from the proposal wiki <a href=\"https://github.com/sympy/sympy/wiki/GSoC-2016-Application-Gaurav-Dhingra:-Group-Theory\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/wiki/GSoC-2016-Application-Gaurav-Dhingra:-Group-Theory</a> . GSoC proposals in SymPy are publicly available.",
  "id": "58634275af6b364a290328d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-12-28T04:41:25.243Z",
  "text": "You can look for what proposal I submitted, from the proposal wiki https://github.com/sympy/sympy/wiki/GSoC-2016-Application-Gaurav-Dhingra:-Group-Theory . GSoC proposals in SymPy are publicly available.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/wiki/GSoC-2016-Application-Gaurav-Dhingra:-Group-Theory"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "<a href=\"https://files.gitter.im/sympy/GroupTheory/w7bP/main-qimg-e8ff88895f041b8e28f780f5f512648c.png\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/sympy/GroupTheory/w7bP/thumb/main-qimg-e8ff88895f041b8e28f780f5f512648c.png\" alt=\"main-qimg-e8ff88895f041b8e28f780f5f512648c.png\" rel=\"nofollow\"></a>",
  "id": "586e06de7a3f79ef5ddaee4e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-01-05T08:42:06.641Z",
  "text": "[![main-qimg-e8ff88895f041b8e28f780f5f512648c.png](https://files.gitter.im/sympy/GroupTheory/w7bP/thumb/main-qimg-e8ff88895f041b8e28f780f5f512648c.png)](https://files.gitter.im/sympy/GroupTheory/w7bP/main-qimg-e8ff88895f041b8e28f780f5f512648c.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/sympy/GroupTheory/w7bP/thumb/main-qimg-e8ff88895f041b8e28f780f5f512648c.png"
   },
   {
    "url": "https://files.gitter.im/sympy/GroupTheory/w7bP/main-qimg-e8ff88895f041b8e28f780f5f512648c.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "The Klein four-group.  It has 4 elements which we can name 1, a, b, and c.  It&#39;s multiplication table is given above,",
  "id": "586e0700af6b364a29321b32",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-01-05T08:42:40.891Z",
  "text": "The Klein four-group.  It has 4 elements which we can name 1, a, b, and c.  It's multiplication table is given above,",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "possible presentation is  (a,b:a2=b2=(ab)2=1)",
  "id": "586e071f9e6f00e74afb760b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-01-05T08:43:11.953Z",
  "text": "possible presentation is  (a,b:a2=b2=(ab)2=1)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "How would we represent this group in sympy",
  "id": "586e073aaa6be0472f0d44ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-01-05T08:43:38.251Z",
  "text": "How would we represent this group in sympy",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-01-05T11:08:05.569Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "There could be several possibilities. As a finite group, it can be represented as a permutation group. For example, <code>a = Permutation(1, 2)(3, 4)</code>,  <code>b = Permutation(1, 3)(2, 4)</code> and <code>G = PermutationGroup(a, b)</code>. It can also be a finitely generated group with generators <code>a, b</code> and relators <code>a^2</code>, <code>b^2</code>, <code>aba^-1b^-1</code>. Since it is an abelian group, there could also be an abelian  representation, but those have not been implemented in SymPy yet. ",
  "id": "586e283d9e6f00e74afc1e4e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-01-05T11:04:29.927Z",
  "text": "There could be several possibilities. As a finite group, it can be represented as a permutation group. For example, `a = Permutation(1, 2)(3, 4)`,  `b = Permutation(1, 3)(2, 4)` and `G = PermutationGroup(a, b)`. It can also be a finitely generated group with generators `a, b` and relators `a^2`, `b^2`, `aba^-1b^-1`. Since it is an abelian group, there could also be an abelian  representation, but those have not been implemented in SymPy yet. ",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "editedAt": "2017-01-05T13:18:24.724Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "<p>Thanks</p><blockquote>\n<p>It can also be a finitely generated group with generators <code>a, b</code> and relators <code>a^2</code>, <code>b^2</code>, <code>aba^-1b^-1</code>.</p></blockquote>\n<p>Thats what i want to do, what code would i write for this look like</p>",
  "id": "586e45efc02c1a3959ed7ba5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-01-05T13:11:11.499Z",
  "text": "Thanks\n> It can also be a finitely generated group with generators `a, b` and relators `a^2`, `b^2`, `aba^-1b^-1`.\n\nThats what i want to do, what code would i write for this look like\n",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "You can start with a free group generated by a and b: <code>F, a, b = free_group(&#39;a, b&#39;)</code>. (Here a and b are not symbols but group elements.) Then the quotient group is defined by means of relators: <code>G = FpGroup(F, [a**2, b**2, a*b*a**-1*b**-1])</code>. (I hope the notation is correct. I did not test. The exponents -1 can also be omitted.) ",
  "id": "586e482bc895451b755b3f22",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-01-05T13:20:43.135Z",
  "text": "You can start with a free group generated by a and b: `F, a, b = free_group('a, b')`. (Here a and b are not symbols but group elements.) Then the quotient group is defined by means of relators: `G = FpGroup(F, [a**2, b**2, a*b*a**-1*b**-1])`. (I hope the notation is correct. I did not test. The exponents -1 can also be omitted.) ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "great, thanks. ill check it out",
  "id": "586e4dc07a3f79ef5ddc68e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-01-05T13:44:32.507Z",
  "text": "great, thanks. ill check it out",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "  it&#39;s been a while since i&#39;m trying out group theory module. I would love to actually write some code. I would like to start with a medium difficulty modification. If <span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> or <span data-link-type=\"mention\" data-screen-name=\"gxyd\" class=\"mention\">@gxyd</span> can suggest something that will be great. ",
  "id": "587b1b39cbcb2817706f72ed",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   },
   {
    "screenName": "gxyd",
    "userId": "53eb987c107e137846baa89d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-01-15T06:48:25.014Z",
  "text": "  it's been a while since i'm trying out group theory module. I would love to actually write some code. I would like to start with a medium difficulty modification. If @jksuom or @gxyd can suggest something that will be great. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I would start by studying the sources, both literal and code, to get a good grasp of the subject and to see what could be added. Modifications to the existing code are not so important at this stage.",
  "id": "587b5db6dec171b811efc3fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-01-15T11:32:06.491Z",
  "text": "I would start by studying the sources, both literal and code, to get a good grasp of the subject and to see what could be added. Modifications to the existing code are not so important at this stage.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "I have already gone through the code and the concepts of group theory, what do you think should i add to the current module?",
  "id": "587c472811e7a7f61d9f8a00",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-01-16T04:08:08.275Z",
  "text": "I have already gone through the code and the concepts of group theory, what do you think should i add to the current module?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"gxyd\" class=\"mention\">@gxyd</span> did mention a list above, should i start with one of those topics",
  "id": "587c4759300f220a66f1538b",
  "issues": [],
  "mentions": [
   {
    "screenName": "gxyd",
    "userId": "53eb987c107e137846baa89d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2017-01-16T04:08:57.507Z",
  "text": "@gxyd did mention a list above, should i start with one of those topics",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Those topics are only remotely connected with what has been implemented so far. It also seems to me that they could be hard to implement. I would recommend something that extends the current implementation and for which fairly good support can be found in the Handbook referred to above. For example, finding relators for a permutation group with given generators.",
  "id": "587c6fc911e7a7f61da02d09",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-01-16T07:01:29.646Z",
  "text": "Those topics are only remotely connected with what has been implemented so far. It also seems to me that they could be hard to implement. I would recommend something that extends the current implementation and for which fairly good support can be found in the Handbook referred to above. For example, finding relators for a permutation group with given generators.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "right, sounds good, ill take a shot at that",
  "id": "587c82f6074f7be763d7b0a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-01-16T08:23:18.399Z",
  "text": "right, sounds good, ill take a shot at that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-01-16T10:50:32.018Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "If you do go for changing the currently implemented things. Then I think that improving the <code>Reidemeister Presentation</code> algorithm would be good. In particular the elimination techniques implemented in that can be made to return better results by carefully examining the order of operations.",
  "id": "587ca515dec171b811f54796",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-01-16T10:48:53.229Z",
  "text": "If you do go for changing the currently implemented things. Then I think that improving the `Reidemeister Presentation` algorithm would be good. In particular the elimination techniques implemented in that can be made to return better results by carefully examining the order of operations.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Elimination techniques are implemented at the end of fp_groups.py file <a href=\"https://github.com/sympy/sympy/blob/master/sympy/combinatorics/fp_groups.py#L1500\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/blob/master/sympy/combinatorics/fp_groups.py#L1500</a> .",
  "id": "587ca56ae836bf70104d003f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-01-16T10:50:18.677Z",
  "text": "Elimination techniques are implemented at the end of fp_groups.py file https://github.com/sympy/sympy/blob/master/sympy/combinatorics/fp_groups.py#L1500 .",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/master/sympy/combinatorics/fp_groups.py#L1500"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "first ill do &quot;finding relators for a permutation group with given generators&quot; then after that ill try improving Reidemeister Presentation algo",
  "id": "587ca5e5873d96e16d742a45",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-01-16T10:52:21.604Z",
  "text": "first ill do \"finding relators for a permutation group with given generators\" then after that ill try improving Reidemeister Presentation algo",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-01-22T09:51:23.443Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/hrushikesht",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15706760?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15706760?v=4&s=60",
   "displayName": "Hrushikesh Turkhade",
   "gv": "4",
   "id": "567642c816b6c7089cbf562d",
   "url": "/hrushikesht",
   "username": "hrushikesht",
   "v": 7
  },
  "html": "Hello, I want to read the currently implemented module of group theory in the codebase. Where should I start?<br>I have intermidiate knowledge of group theory and I have completed Abstract Algebra course in my college.",
  "id": "5884805a11e7a7f61dcb97a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-01-22T09:50:18.068Z",
  "text": "Hello, I want to read the currently implemented module of group theory in the codebase. Where should I start?\nI have intermidiate knowledge of group theory and I have completed Abstract Algebra course in my college.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The currently implemented parts of group theory  are in sympy.combinatorics module. That contains functions for both permutation groups and finitely presented groups. You can also find more information by reading this conversation.",
  "id": "5884b0c0dcb66e4f76965e0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-01-22T13:16:48.001Z",
  "text": "The currently implemented parts of group theory  are in sympy.combinatorics module. That contains functions for both permutation groups and finitely presented groups. You can also find more information by reading this conversation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "<a href=\"https://files.gitter.im/sympy/GroupTheory/UA3V/Capture.PNG\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/sympy/GroupTheory/UA3V/thumb/Capture.png\" alt=\"Capture.PNG\" rel=\"nofollow\"></a>",
  "id": "5885a289dcb66e4f769ad55f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-01-23T06:28:25.657Z",
  "text": "[![Capture.PNG](https://files.gitter.im/sympy/GroupTheory/UA3V/thumb/Capture.png)](https://files.gitter.im/sympy/GroupTheory/UA3V/Capture.PNG)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/sympy/GroupTheory/UA3V/thumb/Capture.png"
   },
   {
    "url": "https://files.gitter.im/sympy/GroupTheory/UA3V/Capture.PNG"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "the line &quot;another possible problem ...&quot; is there an obvious reason for this or is that something they found by looking at stats",
  "id": "5885a2edc0de6f017fdbf741",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-01-23T06:30:05.429Z",
  "text": "the line \"another possible problem ...\" is there an obvious reason for this or is that something they found by looking at stats",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "this is from &quot;handbook of computational group theory&quot;",
  "id": "5885a310cbcb281770a440c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-01-23T06:30:40.224Z",
  "text": "this is from \"handbook of computational group theory\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I do not see any obvious reason, but it would not surprise me either since it is generally hard to produce good random sequences. Maybe the reference [CLGM+95] would contain more information.",
  "id": "5885ace2074f7be76305e905",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-01-23T07:12:34.120Z",
  "text": "I do not see any obvious reason, but it would not surprise me either since it is generally hard to produce good random sequences. Maybe the reference [CLGM+95] would contain more information.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "yeah i was wondering about the same thing, thanks ",
  "id": "5885ad1fe836bf70107c6207",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-01-23T07:13:35.527Z",
  "text": "yeah i was wondering about the same thing, thanks ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "ill keep asking my doubts here, i hope you wont mind",
  "id": "5885ad38cbcb281770a46e37",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-01-23T07:14:00.932Z",
  "text": "ill keep asking my doubts here, i hope you wont mind",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"gxyd\" class=\"mention\">@gxyd</span> in <code>free_groups.py</code> you have used <code>_hash</code> variable. What is it used for? to uniquely identify a group?  ",
  "id": "5885ce57dcb66e4f769bbe75",
  "issues": [],
  "mentions": [
   {
    "screenName": "gxyd",
    "userId": "53eb987c107e137846baa89d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2017-01-23T09:35:19.002Z",
  "text": "@gxyd in `free_groups.py` you have used `_hash` variable. What is it used for? to uniquely identify a group?  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karan1276",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8016851?v=4&s=60",
   "displayName": "Karan Sharma",
   "gv": "4",
   "id": "5491b42edb8155e6700e0435",
   "url": "/karan1276",
   "username": "karan1276",
   "v": 14
  },
  "html": "in fact does <code>_free_group_cache</code> hold all the created free groups till the execution ?",
  "id": "5885cf6fc0de6f017fdce4b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-01-23T09:39:59.385Z",
  "text": "in fact does `_free_group_cache` hold all the created free groups till the execution ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I guess it means that successive calls are not independent ",
  "id": "5886d78fd99b1dd03d312254",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-01-24T04:26:55.846Z",
  "text": "I guess it means that successive calls are not independent ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/arnold000",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/25591067?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/25591067?v=3&s=60",
   "displayName": "arnold000",
   "gv": "3",
   "id": "5898b2abd73408ce4f4879e8",
   "url": "/arnold000",
   "username": "arnold000",
   "v": 1
  },
  "html": "yes",
  "id": "5898b5d9de50490822940fb5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-02-06T17:43:53.310Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/AnshulBasia",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/12856392?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/12856392?v=4&s=60",
   "displayName": "Anshul Basia",
   "gv": "4",
   "id": "56e2a57585d51f252ab84a46",
   "url": "/AnshulBasia",
   "username": "AnshulBasia",
   "v": 18
  },
  "html": "Hey everyone, I was wondering if anyone could direct me to the code of group theory in the sympy module. Thanks!",
  "id": "58b690abde504908222d8ef2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-03-01T09:13:15.933Z",
  "text": "Hey everyone, I was wondering if anyone could direct me to the code of group theory in the sympy module. Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<a href=\"https://github.com/sympy/sympy/tree/master/sympy/combinatorics/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/tree/master/sympy/combinatorics/</a> the combinatorics module contains code for Group Theory.",
  "id": "58b691cef1a33b627564a7fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-03-01T09:18:06.166Z",
  "text": "https://github.com/sympy/sympy/tree/master/sympy/combinatorics/ the combinatorics module contains code for Group Theory.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/tree/master/sympy/combinatorics/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/AnshulBasia",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/12856392?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/12856392?v=4&s=60",
   "displayName": "Anshul Basia",
   "gv": "4",
   "id": "56e2a57585d51f252ab84a46",
   "url": "/AnshulBasia",
   "username": "AnshulBasia",
   "v": 18
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"gxyd\" class=\"mention\">@gxyd</span>  Thanks. We should have a groups folder, at least, that&#39;s what I think. Will Sympy be interested in having a generic class called group ? I see, free_groups,fp_groups and permutation groups have already been implemented.",
  "id": "58b6997221d548df2c748a51",
  "issues": [],
  "mentions": [
   {
    "screenName": "gxyd",
    "userId": "53eb987c107e137846baa89d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2017-03-01T09:50:42.103Z",
  "text": "@gxyd  Thanks. We should have a groups folder, at least, that's what I think. Will Sympy be interested in having a generic class called group ? I see, free_groups,fp_groups and permutation groups have already been implemented.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<p>The way we implemented things last summer was more of bottom up approach, i.e. instead of finding a common <code>group</code> class we decided to focus upon implementing particular group (<code>fp groups</code> we implemented), so was the case with Permutation groups (we didn&#39;t implemented it last summer, Aleksandar implemented it).</p><blockquote>\n<p>We should have a groups folder</p></blockquote>\n<p>Yes, we will be interested in having that though. We didn&#39;t do it, since the groups folder isn&#39;t mature enough. Perhaps if some more development is done on this, then may that will be a good time to have separate group theory module. In any case you shouldn&#39;t worry about having a separate folder.</p>",
  "id": "58b69abe7ceae5376a559b7b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-03-01T09:56:14.742Z",
  "text": "The way we implemented things last summer was more of bottom up approach, i.e. instead of finding a common `group` class we decided to focus upon implementing particular group (`fp groups` we implemented), so was the case with Permutation groups (we didn't implemented it last summer, Aleksandar implemented it).\n\n> We should have a groups folder\n\nYes, we will be interested in having that though. We didn't do it, since the groups folder isn't mature enough. Perhaps if some more development is done on this, then may that will be a good time to have separate group theory module. In any case you shouldn't worry about having a separate folder.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/AnshulBasia",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/12856392?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/12856392?v=4&s=60",
   "displayName": "Anshul Basia",
   "gv": "4",
   "id": "56e2a57585d51f252ab84a46",
   "url": "/AnshulBasia",
   "username": "AnshulBasia",
   "v": 18
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"gxyd\" class=\"mention\">@gxyd</span>  Thanks again for a detailed reply. I just want your advice on this idea: I was hoping to start with a group class having different functions to get standard information about that group and then a function to find subgroup of that group (for which I could just use subset class and some standard group properties which I&#39;d implement to verify if it&#39;s a group or not). I&#39;d really appreciate your feedback.",
  "id": "58b69bc41465c46a56cd5e5a",
  "issues": [],
  "mentions": [
   {
    "screenName": "gxyd",
    "userId": "53eb987c107e137846baa89d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-03-01T10:00:36.392Z",
  "text": "@gxyd  Thanks again for a detailed reply. I just want your advice on this idea: I was hoping to start with a group class having different functions to get standard information about that group and then a function to find subgroup of that group (for which I could just use subset class and some standard group properties which I'd implement to verify if it's a group or not). I'd really appreciate your feedback.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/AnshulBasia",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/12856392?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/12856392?v=4&s=60",
   "displayName": "Anshul Basia",
   "gv": "4",
   "id": "56e2a57585d51f252ab84a46",
   "url": "/AnshulBasia",
   "username": "AnshulBasia",
   "v": 18
  },
  "html": "Also, I was wondering if you could direct me to some open PRs relating to this module. That&#39;d of really great help.",
  "id": "58b69be1872fc8ce629d9c14",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-03-01T10:01:05.865Z",
  "text": "Also, I was wondering if you could direct me to some open PRs relating to this module. That'd of really great help.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "<blockquote>\n<p>Also, I was wondering if you could direct me to some open PRs relating to this module. That&#39;d of really great help.</p></blockquote>\n<p>I mentioned that on my blog post <a href=\"https://gxyd.github.io/gsoc2016/gsoc2016_project.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gxyd.github.io/gsoc2016/gsoc2016_project.html</a> .</p>",
  "id": "58b69c427ceae5376a55a604",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-03-01T10:02:42.142Z",
  "text": "> Also, I was wondering if you could direct me to some open PRs relating to this module. That'd of really great help.\n\nI mentioned that on my blog post https://gxyd.github.io/gsoc2016/gsoc2016_project.html .",
  "unread": false,
  "urls": [
   {
    "url": "https://gxyd.github.io/gsoc2016/gsoc2016_project.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "If you want to get started with knowing what need to be implemented, then you can read the past few discussions on this channel. May be that will help, since <span data-link-type=\"mention\" data-screen-name=\"karan1276\" class=\"mention\">@karan1276</span> also asked a few questions. jksuom did mention a few points.",
  "id": "58b69cd31465c46a56cd64eb",
  "issues": [],
  "mentions": [
   {
    "screenName": "karan1276",
    "userId": "5491b42edb8155e6700e0435",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-03-01T10:05:07.428Z",
  "text": "If you want to get started with knowing what need to be implemented, then you can read the past few discussions on this channel. May be that will help, since @karan1276 also asked a few questions. jksuom did mention a few points.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/AnshulBasia",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/12856392?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/12856392?v=4&s=60",
   "displayName": "Anshul Basia",
   "gv": "4",
   "id": "56e2a57585d51f252ab84a46",
   "url": "/AnshulBasia",
   "username": "AnshulBasia",
   "v": 18
  },
  "html": "Thanks, I&#39;ll do the needful.",
  "id": "58b69cf721d548df2c74a055",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-03-01T10:05:43.839Z",
  "text": "Thanks, I'll do the needful.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I must mention that, the currently open PR&#39;s wouldn&#39;t make much sense to you, as for they are algorithm based, unless you are familiar with those algorithms.",
  "id": "58b69dfdde504908222ddf1b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-03-01T10:10:05.942Z",
  "text": "I must mention that, the currently open PR's wouldn't make much sense to you, as for they are algorithm based, unless you are familiar with those algorithms.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-03-01T10:19:53.151Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/AnshulBasia",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/12856392?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/12856392?v=4&s=60",
   "displayName": "Anshul Basia",
   "gv": "4",
   "id": "56e2a57585d51f252ab84a46",
   "url": "/AnshulBasia",
   "username": "AnshulBasia",
   "v": 18
  },
  "html": "I am done with the book called contemporary abstract algebra by Gallian if you have heard of it. <span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span>",
  "id": "58b69e4c7ceae5376a55b23a",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-03-01T10:11:24.675Z",
  "text": "I am done with the book called contemporary abstract algebra by Gallian if you have heard of it. @jksuom",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "I have only read IN Herstein and bit of Dummit and Foote. Perhaps jksuom might be helpful with content of books.",
  "id": "58b69e9c00c00c3d4fa363b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-03-01T10:12:44.372Z",
  "text": "I have only read IN Herstein and bit of Dummit and Foote. Perhaps jksuom might be helpful with content of books.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/AnshulBasia",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/12856392?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/12856392?v=4&s=60",
   "displayName": "Anshul Basia",
   "gv": "4",
   "id": "56e2a57585d51f252ab84a46",
   "url": "/AnshulBasia",
   "username": "AnshulBasia",
   "v": 18
  },
  "html": "Alright, thanks.",
  "id": "58b69ef500c00c3d4fa3656a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-03-01T10:14:13.089Z",
  "text": "Alright, thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>I&#39;m thinking about working on group theory for gsoc. I see there are a few things to be implemented for subgroups of FpGroups. Having a function to return a subgroup as a group in its own right using reidemeister-schreier could be good. It&#39;s just a couple of lines of code since most work has already been done but I&#39;d expect to be able to ask for a subgroup and get an actual group back.</p><p> And then there are special types of subgroups. I am a bit uncertain here. If we take, for example, normal closure. The Handbook of CGT describes an algorithm for computing it directly, i.e. in the FpGroup representation. On the other hand, coset enumeration can be used to change to an isomorphic permutation group for which normal closure (and many other things) are already implemented. So we could do calculations in there, then use the isomorphism given by coset enumeration to move back. This sounds good, because if we can do that, then we automatically have all of the permutation group algorithms available for finite (infinite would have to be treated separately) FpGroups. But I am unsure of the efficiency. Does anyone have an opinion on this?</p>",
  "id": "58c94ebc09e7ba8510cd9012",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-03-15T14:25:00.357Z",
  "text": "I'm thinking about working on group theory for gsoc. I see there are a few things to be implemented for subgroups of FpGroups. Having a function to return a subgroup as a group in its own right using reidemeister-schreier could be good. It's just a couple of lines of code since most work has already been done but I'd expect to be able to ask for a subgroup and get an actual group back.\n\n And then there are special types of subgroups. I am a bit uncertain here. If we take, for example, normal closure. The Handbook of CGT describes an algorithm for computing it directly, i.e. in the FpGroup representation. On the other hand, coset enumeration can be used to change to an isomorphic permutation group for which normal closure (and many other things) are already implemented. So we could do calculations in there, then use the isomorphism given by coset enumeration to move back. This sounds good, because if we can do that, then we automatically have all of the permutation group algorithms available for finite (infinite would have to be treated separately) FpGroups. But I am unsure of the efficiency. Does anyone have an opinion on this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "If there is a group theory project this year, who will be mentoring it?",
  "id": "58d4053a6d7eb18404fb7a78",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-03-23T17:26:18.582Z",
  "text": "If there is a group theory project this year, who will be mentoring it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "There are no decisions yet, but it seems that I could be doing that.",
  "id": "58d406138fa16339540c3283",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-03-23T17:29:55.463Z",
  "text": "There are no decisions yet, but it seems that I could be doing that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Could you have a look at my proposal draft when you have time? I posted on the mailing list several days ago and it&#39;s not urgent but I reckoned it might get lost there if I don&#39;t make someone aware of its existence: <a href=\"https://groups.google.com/forum/#!topic/sympy/Yyoz-BEUHAs\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://groups.google.com/forum/#!topic/sympy/Yyoz-BEUHAs</a>",
  "id": "58d40dfdb809ca5f4a75ea9f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-03-23T18:03:41.502Z",
  "text": "Could you have a look at my proposal draft when you have time? I posted on the mailing list several days ago and it's not urgent but I reckoned it might get lost there if I don't make someone aware of its existence: https://groups.google.com/forum/#!topic/sympy/Yyoz-BEUHAs",
  "unread": false,
  "urls": [
   {
    "url": "https://groups.google.com/forum/#!topic/sympy/Yyoz-BEUHAs"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Yes, I&#39;ll do that.",
  "id": "58d4109058ad4eb02845d153",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-03-23T18:14:40.425Z",
  "text": "Yes, I'll do that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "About subgroups: Have you considered how permutation groups could be presented? Given generating permutations, how to find a set of relators to represent a permutation group as a finitely presented group.",
  "id": "58d4140b590d72c864fb15bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-03-23T18:29:31.617Z",
  "text": "About subgroups: Have you considered how permutation groups could be presented? Given generating permutations, how to find a set of relators to represent a permutation group as a finitely presented group.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Chapter 6 of the Handbook of CGT deals with that. By the time I get around to it, I should have rewriting systems implemented and everything else it depends on is already available.",
  "id": "58d4277b7b3f37e7542b128d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-03-23T19:52:27.759Z",
  "text": "Chapter 6 of the Handbook of CGT deals with that. By the time I get around to it, I should have rewriting systems implemented and everything else it depends on is already available.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think the pseudo-code is getting less detailed in ch. 6. Maybe you should do some preliminary coding before deciding how much time should be reserved.",
  "id": "58d42a9d5917e26076c858d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-03-23T20:05:49.390Z",
  "text": "I think the pseudo-code is getting less detailed in ch. 6. Maybe you should do some preliminary coding before deciding how much time should be reserved.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Okay, I&#39;ll give it a try in the next several days to see if it might take longer than I thought. If it does, I can cut down on implementing Sylow subgroups. ",
  "id": "58d42d506701410e586b7133",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-03-23T20:17:20.147Z",
  "text": "Okay, I'll give it a try in the next several days to see if it might take longer than I thought. If it does, I can cut down on implementing Sylow subgroups. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> I&#39;ve tried writing it in more detail than given in the book. Instinctively, I&#39;d say a week would be enough. The most complicated thing there seems to be calculating a coset table for a permutation group and the coset representatives but that&#39;s much easier than coset tables for FpGroups. There is a subsection in chapter 4 (4.6.7) that discusses two methods of doing it (and the second is the more suitable one).<br>I suppose another thing to consider is whether or not to run the function Presentation with initial subgroup H=1 or whether it would be better done in multiple steps. One possibility could be taking H to be generated by, say, the first half of the generators of G and finding its presentation recursively. The Handbook does mention that a multistep version could be faster for larger groups but doesn&#39;t give details. I could run some tests and compare the performance.<br>So, overall, a week seems to be enough but keeping in mind that it is common to underestimate the amount of coding needed and adjusting for unexpected complications, 1.5 (approximately) weeks that I stated in my Timeline should be sensible.",
  "id": "58d7e8498e4b63533d65f5c2",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2017-03-26T16:11:53.270Z",
  "text": "@jksuom I've tried writing it in more detail than given in the book. Instinctively, I'd say a week would be enough. The most complicated thing there seems to be calculating a coset table for a permutation group and the coset representatives but that's much easier than coset tables for FpGroups. There is a subsection in chapter 4 (4.6.7) that discusses two methods of doing it (and the second is the more suitable one).\nI suppose another thing to consider is whether or not to run the function Presentation with initial subgroup H=1 or whether it would be better done in multiple steps. One possibility could be taking H to be generated by, say, the first half of the generators of G and finding its presentation recursively. The Handbook does mention that a multistep version could be faster for larger groups but doesn't give details. I could run some tests and compare the performance.\nSo, overall, a week seems to be enough but keeping in mind that it is common to underestimate the amount of coding needed and adjusting for unexpected complications, 1.5 (approximately) weeks that I stated in my Timeline should be sensible.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Did you actually do some coding on the subject matter of 6.4.7? Perhaps you could push that to your github repo even if it would be too early to send a PR.",
  "id": "58d806090e4137042ab1aa90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-03-26T18:18:49.138Z",
  "text": "Did you actually do some coding on the subject matter of 6.4.7? Perhaps you could push that to your github repo even if it would be too early to send a PR.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Do you mean 4.6.7? (There isn&#39;t 6.4.7 in my copy of the handbook.) I haven&#39;t done that yet, I&#39;ve only written the &quot;Presentation&quot; function from chapter 6 assuming that I have rewriting algorithms and a function that gives a coset table for a permutation group. I could give 4.6.7 a go as well. I think it can be written with what group theory tools are already available so I&#39;d be able to actually run it to see if it does the right thing (because with &quot;presentation&quot; I obviously can&#39;t know for sure until I have the dependent functions).",
  "id": "58d80c5fb52518ed4dac7b97",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-03-26T18:45:51.093Z",
  "text": "Do you mean 4.6.7? (There isn't 6.4.7 in my copy of the handbook.) I haven't done that yet, I've only written the \"Presentation\" function from chapter 6 assuming that I have rewriting algorithms and a function that gives a coset table for a permutation group. I could give 4.6.7 a go as well. I think it can be written with what group theory tools are already available so I'd be able to actually run it to see if it does the right thing (because with \"presentation\" I obviously can't know for sure until I have the dependent functions).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Yes, 4.6.7. Sorry for the typo. The code would build on the existing tools.",
  "id": "58d8112e408f90be665a8121",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-03-26T19:06:22.319Z",
  "text": "Yes, 4.6.7. Sorry for the typo. The code would build on the existing tools.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> I&#39;ve written the coset transversal today - did take a while. I&#39;ve tried it with a few permutation groups and compared the size of the returned transversal with the index of the subgroup (matched, after some work), plus the example given in the book runs correctly. I can run more tests later. You can see the current version here: <span data-link-type=\"commit\" data-commit-sha=\"c6f6a87146e5c9ff38c80611d997b947b25e567c\" data-commit-repo=\"valglad/sympy\" class=\"commit\">valglad/sympy@c6f6a87</span><br>This doesn&#39;t find coset representatives yet, but it will eventually, and after that a coset table for permutation groups is easy.",
  "id": "58d9b7428fcce56b20a4941b",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2017-03-28T01:07:14.878Z",
  "text": "@jksuom I've written the coset transversal today - did take a while. I've tried it with a few permutation groups and compared the size of the returned transversal with the index of the subgroup (matched, after some work), plus the example given in the book runs correctly. I can run more tests later. You can see the current version here: https://github.com/valglad/sympy/commit/c6f6a87146e5c9ff38c80611d997b947b25e567c\nThis doesn't find coset representatives yet, but it will eventually, and after that a coset table for permutation groups is easy.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Thanks. That looks good.",
  "id": "58daa1d58bb56c2d1150d415",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-03-28T17:48:05.833Z",
  "text": "Thanks. That looks good.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> I&#39;ve written a method for coset tables, added  some tests and created a PR: <span data-link-type=\"issue\" data-issue=\"12455\" class=\"issue\">#12455</span>. I&#39;ve run more tests than I actually added: with GAP for coset tables and a direct check for transversals (checked that all elements of the transversal are in distinct cosets and the length is equal to the index of the subgroup). It seems to work fine.",
  "id": "58dc389c8e4b63533d78e092",
  "issues": [
   {
    "number": "12455"
   }
  ],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2017-03-29T22:43:40.201Z",
  "text": "@jksuom I've written a method for coset tables, added  some tests and created a PR: #12455. I've run more tests than I actually added: with GAP for coset tables and a direct check for transversals (checked that all elements of the transversal are in distinct cosets and the length is equal to the index of the subgroup). It seems to work fine.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The example in <code>_elements</code> should be fixed. Otherwise it looks good though I haven&#39;t studied it in detail yet.",
  "id": "58dcda43b402a53211c979f4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-03-30T10:13:23.605Z",
  "text": "The example in `_elements` should be fixed. Otherwise it looks good though I haven't studied it in detail yet.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Fixed it. Thank you for having a look. There&#39;s quite a bit there so studying it in detail might take some time. Do you think the rest of my proposal is all right?",
  "id": "58dd1c0e08c00c092a2fb532",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-03-30T14:54:06.581Z",
  "text": "Fixed it. Thank you for having a look. There's quite a bit there so studying it in detail might take some time. Do you think the rest of my proposal is all right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think the PR is good, though I&#39;ll have to spend some time looking into the algorithms. It is not easy to assess the proposal, its time table, etc., but I believe it is all right. This PR is already a good start.",
  "id": "58dd1f9fb52518ed4dc23f39",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-03-30T15:09:19.249Z",
  "text": "I think the PR is good, though I'll have to spend some time looking into the algorithms. It is not easy to assess the proposal, its time table, etc., but I believe it is all right. This PR is already a good start.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "can you add your name to the title of the wiki page (like the other ones)",
  "id": "58dd460c01d449152eb4ba4c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-03-30T17:53:16.061Z",
  "text": "can you add your name to the title of the wiki page (like the other ones)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "thanks for the feedback. and yes, i&#39;ll add the name in a moment",
  "id": "58dd4fe2f22385553df1d811",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-03-30T18:35:14.975Z",
  "text": "thanks for the feedback. and yes, i'll add the name in a moment",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think we can continue the timetable discussion here if necessary. Our timezone is now UTC+3 (which is DST) so those times would suit fine to me too. But of course it is possible to use this channel any time though response may not be immediate.",
  "id": "5916a290d1a7716a0abf7a6c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-05-13T06:07:12.676Z",
  "text": "I think we can continue the timetable discussion here if necessary. Our timezone is now UTC+3 (which is DST) so those times would suit fine to me too. But of course it is possible to use this channel any time though response may not be immediate.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I&#39;ve created a blog and put it on the &quot;GSoC 2017 Report&quot; page (it has a feed and I&#39;ll it to planet sympy when I get some suitable picture of myself (soonish)). It&#39;s here: <a href=\"https://valglad.github.io/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://valglad.github.io/</a> - and the first post briefly outlines what I plan to do until the 26th of June (which is the end of the first evaluation period). I&#39;ll add more details later. ",
  "id": "5918c0200a783b6c0a99f913",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-05-14T20:37:52.595Z",
  "text": "I've created a blog and put it on the \"GSoC 2017 Report\" page (it has a feed and I'll it to planet sympy when I get some suitable picture of myself (soonish)). It's here: https://valglad.github.io/ - and the first post briefly outlines what I plan to do until the 26th of June (which is the end of the first evaluation period). I'll add more details later. ",
  "unread": false,
  "urls": [
   {
    "url": "https://valglad.github.io/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I could have a look into comparing permutations at some point. If there is an easy way to make comparison work in a more natural way without causing any obvious problems, I can change it and send a PR.",
  "id": "591c49adf3001cd3422e889e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-05-17T13:01:33.596Z",
  "text": "I could have a look into comparing permutations at some point. If there is an easy way to make comparison work in a more natural way without causing any obvious problems, I can change it and send a PR.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The method <code>contains</code> of <code>PermutationGroup</code> has keyword <code>strict</code>with default value <code>True</code>. Maybe that should be changed to <code>False</code>.",
  "id": "591c4f7b9f4f4ab05bd2e32a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-05-17T13:26:19.558Z",
  "text": "The method `contains` of `PermutationGroup` has keyword `strict`with default value `True`. Maybe that should be changed to `False`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Yes, that would make sense. What do you think about permutation comparison in general? Should we have <code>Permutation(3)(1,2)==Permutation(4)(1,2)</code> as well?",
  "id": "591c792af3001cd3422f83b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-05-17T16:24:10.810Z",
  "text": "Yes, that would make sense. What do you think about permutation comparison in general? Should we have `Permutation(3)(1,2)==Permutation(4)(1,2)` as well?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-05-17T16:50:01.270Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Equality is currently defined uniformly for all <code>Basic</code> objects together with their hash values. If equality of permutations is redefined, also their hash should be changed, and that may not be easy to do consistently. It would probably be preferable to define a new method not using <code>==</code> for comparing permutations of possibly different size.",
  "id": "591c7f042b926f8a6765af76",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-05-17T16:49:08.528Z",
  "text": "Equality is currently defined uniformly for all `Basic` objects together with their hash values. If equality of permutations is redefined, also their hash should be changed, and that may not be easy to do consistently. It would probably be preferable to define a new method not using `==` for comparing permutations of possibly different size.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Ah, okay. That shouldn&#39;t be hard to implement so I&#39;ll probably add a method called <code>equals()</code> or something",
  "id": "591cc42c631b8e4e61e7df4c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-05-17T21:44:12.263Z",
  "text": "Ah, okay. That shouldn't be hard to implement so I'll probably add a method called `equals()` or something",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That is what I had in mind, too: <code>p.equals(q)</code>.",
  "id": "591d34d492217cca588a1fc6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-05-18T05:44:52.077Z",
  "text": "That is what I had in mind, too: `p.equals(q)`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "the other option is to canonicalize them, so that two equal permutations are always exactly equal ",
  "id": "591d4fa0331deef4646955b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-05-18T07:39:12.246Z",
  "text": "the other option is to canonicalize them, so that two equal permutations are always exactly equal ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-05-18T07:52:45.125Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "There are two variants of permutations, <code>Permutation</code> and <code>Cycle</code>. I don&#39;t know if that is good, but that is how it is currently. It seems to me that <code>Cycle</code> could be more suitable for canonicalization. One could think of a <code>Permutation</code> as an element of certain fixed permutation group while <code>Cycle</code> could be mapped to any permutation group of size large enough.",
  "id": "591d525200efc2bb3e7c7719",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-05-18T07:50:42.344Z",
  "text": "There are two variants of permutations, `Permutation` and `Cycle`. I don't know if that is good, but that is how it is currently. It seems to me that `Cycle` could be more suitable for canonicalization. One could think of a `Permutation` as an element of certain fixed permutation group while `Cycle` could be mapped to any permutation group of size large enough.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "(The name of a <code>Cycle</code> is misleading. It denotes currently a product of cycles.)",
  "id": "591d52bd33e9ee771cbb9ba5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-05-18T07:52:29.159Z",
  "text": "(The name of a `Cycle` is misleading. It denotes currently a product of cycles.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I see. I was wondering actually if Permutation should be thought of as being an element of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>S</mi><mi mathvariant=\"normal\">\u221e</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.05764em;\">S</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.05764em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">\u221e</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span>",
  "id": "591d52f57410563012832b00",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-05-18T07:53:25.458Z",
  "text": "I see. I was wondering actually if Permutation should be thought of as being an element of $$S_\\infty$$",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That is what I thought. But maybe <code>Cycle</code> would be more suitable for that role.",
  "id": "591d532f0a783b6c0aadc0fd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-05-18T07:54:23.684Z",
  "text": "That is what I thought. But maybe `Cycle` would be more suitable for that role.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I suspect that you probably don&#39;t want to canonicalize Permutation into a cycle at initialization, as you might want it to not look like a cycle ",
  "id": "591d53330de3eb3e19a76003",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-05-18T07:54:27.453Z",
  "text": "I suspect that you probably don't want to canonicalize Permutation into a cycle at initialization, as you might want it to not look like a cycle ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "But my point is that if you have a situation where you need to compare equality a lot, canonicalization is better ",
  "id": "591d534d64a70be11ad2f3ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-05-18T07:54:53.389Z",
  "text": "But my point is that if you have a situation where you need to compare equality a lot, canonicalization is better ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems that permutations are given fixed size at initialization.",
  "id": "591d535d631b8e4e61e9e234",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-05-18T07:55:09.921Z",
  "text": "It seems that permutations are given fixed size at initialization.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Like accumulating a set of unique values ",
  "id": "591d535e7410563012832b04",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-05-18T07:55:10.152Z",
  "text": "Like accumulating a set of unique values ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-05-18T07:56:42.073Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Does SymPy distinguish between, for instance, <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>S</mi><mn>3</mn></msub></mrow><annotation encoding=\"application/x-tex\">S_3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.05764em;\">S</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.05764em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">3</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> and the subgroup of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>S</mi><mn>4</mn></msub></mrow><annotation encoding=\"application/x-tex\">S_4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.05764em;\">S</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.05764em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">4</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> that is isomorphic to <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>S</mi><mn>3</mn></msub></mrow><annotation encoding=\"application/x-tex\">S_3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.05764em;\">S</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.05764em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">3</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span>?",
  "id": "591d53ad21759a6a016658d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-05-18T07:56:29.531Z",
  "text": "Does SymPy distinguish between, for instance, $$S_3$$ and the subgroup of $$S_4$$ that is isomorphic to $$S_3$$?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I seem to recall discussing this before, but I don&#39;t remember what the answer was ",
  "id": "591d53d064a70be11ad2f3fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-05-18T07:57:04.229Z",
  "text": "I seem to recall discussing this before, but I don't remember what the answer was ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think so.",
  "id": "591d53d2c4d73f445abb620a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-05-18T07:57:06.696Z",
  "text": "I think so.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Gaurav might know.",
  "id": "591d53ee9f4f4ab05bd71651",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-05-18T07:57:34.015Z",
  "text": "Gaurav might know.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> I guess the answer is no because if you try</p><pre><code>&gt;&gt;&gt; g = <span class=\"function\"><span class=\"title\">SymmetricGroup</span><span class=\"params\">(<span class=\"number\">4</span>)</span></span>\n&gt;&gt;&gt; h = <span class=\"function\"><span class=\"title\">SymmetricGroup</span><span class=\"params\">(<span class=\"number\">3</span>)</span></span>\n&gt;&gt;&gt; h.<span class=\"function\"><span class=\"title\">is_subgroup</span><span class=\"params\">(g)</span></span></code></pre><p>SymPy throws a <code>ValueError: g should be the same size as permutations of G</code> but it does return <code>True</code> if <code>h</code> is constructed from properly sized permutations manually.</p>",
  "id": "591d822dc4d73f445abc4055",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2017-05-18T11:14:53.960Z",
  "text": "@asmeurer I guess the answer is no because if you try\n```\n>>> g = SymmetricGroup(4)\n>>> h = SymmetricGroup(3)\n>>> h.is_subgroup(g)\n```\nSymPy throws a `ValueError: g should be the same size as permutations of G` but it does return `True` if `h` is constructed from properly sized permutations manually.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Or rather the answer is &quot;yes, it does distinguish between the two&quot;",
  "id": "591d82540a783b6c0aaea685",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-05-18T11:15:32.351Z",
  "text": "Or rather the answer is \"yes, it does distinguish between the two\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That is what I thought. Permutations of different size are carefully kept separate.",
  "id": "591da6b883cb5db073441fda",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-05-18T13:50:48.902Z",
  "text": "That is what I thought. Permutations of different size are carefully kept separate.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>Regarding the subgroups PR (<span data-link-type=\"issue\" data-issue=\"12658\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#12658</span>). I&#39;ve spent a long time trying to get something to work and I thought it would probably be better to ask for help at this stage instead of wasting time.</p><p>The generators and relators returned by <code>reidemeister_presentation</code> are <code>FreeGroupElement</code>s. Their <code>.group</code> attribute is an instance of <code>FreeGroup</code> which usually has more generators than necessary. I decided to try and add a method <code>.resrict_to()</code> to the <code>FreeGroup</code> class to make it possible to get rid of the redundant generators without creating a new instance because then we wouldn&#39;t need to reassign the <code>.group</code> attribute for each thing. And that does work until I try to run <code>reidemeister_presentation()</code> twice. </p><p>The problem is that when it&#39;s called the second time, the group that it should get after restriction already exists in the <code>free_group_cache</code> so if we want the second <code>reidemeister_presentation</code> to return the same thing as the first, we need to make the current group become the same as the one in <code>free_group_cache</code>. But doing <code>self = free_group_cache[_hash]</code> is no good because then <code>self</code> becomes a different instance of <code>FreeGroup</code> and we&#39;ll still have to change <code>.group</code> attribute manually for each generator and relator. I kind of want to have pointers but python doesn&#39;t work like that. Can anyone think of a way to get around this?</p>",
  "id": "59235a26631b8e4e61014f36",
  "issues": [
   {
    "number": "12658",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-22T21:37:42.639Z",
  "text": "Regarding the subgroups PR (https://github.com/sympy/sympy/pull/12658). I've spent a long time trying to get something to work and I thought it would probably be better to ask for help at this stage instead of wasting time.\n\nThe generators and relators returned by `reidemeister_presentation` are `FreeGroupElement`s. Their `.group` attribute is an instance of `FreeGroup` which usually has more generators than necessary. I decided to try and add a method `.resrict_to()` to the `FreeGroup` class to make it possible to get rid of the redundant generators without creating a new instance because then we wouldn't need to reassign the `.group` attribute for each thing. And that does work until I try to run `reidemeister_presentation()` twice. \n\nThe problem is that when it's called the second time, the group that it should get after restriction already exists in the `free_group_cache` so if we want the second `reidemeister_presentation` to return the same thing as the first, we need to make the current group become the same as the one in `free_group_cache`. But doing `self = free_group_cache[_hash]` is no good because then `self` becomes a different instance of `FreeGroup` and we'll still have to change `.group` attribute manually for each generator and relator. I kind of want to have pointers but python doesn't work like that. Can anyone think of a way to get around this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-05-22T23:04:46.557Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "This is the problem with having mutable objects in a cache : )",
  "id": "59236e895dc6925a7a44b752",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-05-22T23:04:41.478Z",
  "text": "This is the problem with having mutable objects in a cache : )",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Assigning to <code>self</code> does nothing. It&#39;s just a variable. ",
  "id": "59236ed35dc6925a7a44b75e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-05-22T23:05:55.224Z",
  "text": "Assigning to `self` does nothing. It's just a variable. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "There&#39;s no way to swap out the instance from within a method like you want to do ",
  "id": "59236f3664a70be11ad332b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-05-22T23:07:34.108Z",
  "text": "There's no way to swap out the instance from within a method like you want to do ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I&#39;m a little unclear what is happening from your description (sorry, I do not know the design of the group module very well). Does <code>restrict_to</code> return a new object or mutate the existing one? ",
  "id": "59236f990de3eb3e19a79ece",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-05-22T23:09:13.494Z",
  "text": "I'm a little unclear what is happening from your description (sorry, I do not know the design of the group module very well). Does `restrict_to` return a new object or mutate the existing one? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "And what exactly is in the cache? ",
  "id": "59236fb20de3eb3e19a79edd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-05-22T23:09:38.554Z",
  "text": "And what exactly is in the cache? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>I would like <code>resrict_to</code> to mutate an existing object. <code>free_group_cache</code> contains free groups that have already been created. Presumably this is to save space. When a new instance of <code>FreeGroup</code> is created, the constructor checks if <code>free_group_cache</code>already has a free group of the same size on the same symbols and, if there is, sets the new instance to be the same as the one in the cache. And because it&#39;s set up that way, I guess I have to check the cache when I&#39;m restricting a group as well.</p><p>Maybe it would actually be better to rewrite the <code>FreeGroup</code> class to get rid of the cache. Like maintain one big free group on all the symbols that have been used in free group construction so far and think of different instances as its subgroups (much like thinking of all permutation groups as subgroups of S_infinity). Then restrictions will be easy. Though  I don&#39;t know if that would be more inefficient.</p>",
  "id": "59241b6692217cca58a53e84",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-23T11:22:14.024Z",
  "text": "I would like `resrict_to` to mutate an existing object. `free_group_cache` contains free groups that have already been created. Presumably this is to save space. When a new instance of `FreeGroup` is created, the constructor checks if `free_group_cache`already has a free group of the same size on the same symbols and, if there is, sets the new instance to be the same as the one in the cache. And because it's set up that way, I guess I have to check the cache when I'm restricting a group as well.\n\nMaybe it would actually be better to rewrite the `FreeGroup` class to get rid of the cache. Like maintain one big free group on all the symbols that have been used in free group construction so far and think of different instances as its subgroups (much like thinking of all permutation groups as subgroups of S_infinity). Then restrictions will be easy. Though  I don't know if that would be more inefficient.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Or have the <code>.group</code> attribute of <code>FreeGroupElement</code> be a &quot;pointer-like&quot; object that has the appropriate free group as one of its attributes. Then I could just change that object without having to go through every single <code>FreeGroupElement</code> that needs changing.",
  "id": "592421e7631b8e4e6104728c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-23T11:49:59.898Z",
  "text": "Or have the `.group` attribute of `FreeGroupElement` be a \"pointer-like\" object that has the appropriate free group as one of its attributes. Then I could just change that object without having to go through every single `FreeGroupElement` that needs changing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Why should it be necessary to change those <code>FreeGroupElement</code>s. New elements can also be created.",
  "id": "59242304f3001cd3424da33c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-23T11:54:44.375Z",
  "text": "Why should it be necessary to change those `FreeGroupElement`s. New elements can also be created.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Yes, but it seems less elegant. It would require creating a new <code>FreeGroupElement</code> for each generator found by <code>reidemeister_schreier()</code> and then rewriting the relators in terms of them (probably by substitution in to the relator&#39;s <code>.array_form</code> or something along those lines). It would work, but also we have to rewrite everything because of just one attribute.",
  "id": "592424cd9f4f4ab05bf163fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-23T12:02:21.846Z",
  "text": "Yes, but it seems less elegant. It would require creating a new `FreeGroupElement` for each generator found by `reidemeister_schreier()` and then rewriting the relators in terms of them (probably by substitution in to the relator's `.array_form` or something along those lines). It would work, but also we have to rewrite everything because of just one attribute.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "If we want to represent a subgroup as an fp-group, we should create a new free group with new generators in any case.",
  "id": "5924264ceec422e415de7654",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-23T12:08:44.401Z",
  "text": "If we want to represent a subgroup as an fp-group, we should create a new free group with new generators in any case.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "We could use the generators <code>.group</code>. So if <code>gens</code> and <code>rels</code> are the generators and relators returned by <code>reidemeister_presentation()</code>, then the subgroup is <code>FpGroup(gens[0].group,rels)</code>",
  "id": "592426ed5e34568d5e81dffb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-23T12:11:25.084Z",
  "text": "We could use the generators `.group`. So if `gens` and `rels` are the generators and relators returned by `reidemeister_presentation()`, then the subgroup is `FpGroup(gens[0].group,rels)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Is <code>gens[0].group</code> the original group containing the subgroup?",
  "id": "592427509f4f4ab05bf17026",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-23T12:13:04.638Z",
  "text": "Is `gens[0].group` the original group containing the subgroup?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "It&#39;s a free group containing <code>gens</code> as a subset of its generators",
  "id": "592427f25e34568d5e81e436",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-23T12:15:46.372Z",
  "text": "It's a free group containing `gens` as a subset of its generators",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "So it is not the free group defining the original group?",
  "id": "5924285a0a783b6c0ac82e9b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-23T12:17:30.534Z",
  "text": "So it is not the free group defining the original group?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I&#39;ll have to look into the code defining the Screier generators.",
  "id": "5924289afa63ba2f766fb0c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-23T12:18:34.486Z",
  "text": "I'll have to look into the code defining the Screier generators.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "No. Oh, and we probably want the subgroup to be defined on a free group that&#39;s the subgroup of the original?",
  "id": "592428a1f3001cd3424dbedb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-23T12:18:41.614Z",
  "text": "No. Oh, and we probably want the subgroup to be defined on a free group that's the subgroup of the original?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "The code essentially creates lots of generators and works with a free group on those generators some of which will turn out to be redundant. The schreier generators are a list, from which redundant generators are removed. But the remaining ones are still part of the bigger free group",
  "id": "59242946631b8e4e61049492",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-05-23T12:21:26.202Z",
  "text": "The code essentially creates lots of generators and works with a free group on those generators some of which will turn out to be redundant. The schreier generators are a list, from which redundant generators are removed. But the remaining ones are still part of the bigger free group",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think so. But the generators have to be given new names and the elements of the new free subgroup should be different from corresponding elements of the original free group. Their class should be different, with different <code>group</code>. So, it is not a subset.",
  "id": "59242985631b8e4e610495ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-05-23T12:22:29.628Z",
  "text": "I think so. But the generators have to be given new names and the elements of the new free subgroup should be different from corresponding elements of the original free group. Their class should be different, with different `group`. So, it is not a subset.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The new free group is mapped injectively into the original free group, but its elements are different.",
  "id": "592429f792217cca58a5873c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-23T12:24:23.179Z",
  "text": "The new free group is mapped injectively into the original free group, but its elements are different.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Yes, well in this case, <code>FpGroup(gens[0].group,rels)</code> would do the trick if only <code>gens[0].group</code> didn&#39;t contain redundant generators as well as the useful ones",
  "id": "59242a2905e3326c67fe89a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-23T12:25:13.548Z",
  "text": "Yes, well in this case, `FpGroup(gens[0].group,rels)` would do the trick if only `gens[0].group` didn't contain redundant generators as well as the useful ones",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems to me that the original free group <code>gens[0].group</code> would usually be too big. It could work only if the subgroup were the whole group.",
  "id": "59242ac99f4f4ab05bf17f56",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-23T12:27:53.720Z",
  "text": "It seems to me that the original free group `gens[0].group` would usually be too big. It could work only if the subgroup were the whole group.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "You also had plans to implement homomorphisms. This construction could be connected to those. The natural injection of a subgroup, both for free and fp-groups.",
  "id": "59242ba5c4d73f445ad64978",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-23T12:31:33.309Z",
  "text": "You also had plans to implement homomorphisms. This construction could be connected to those. The natural injection of a subgroup, both for free and fp-groups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Yes, <code>gens[0].group</code> is usually too big so I&#39;ve been trying to make it smaller without having to create a new free group and rewriting everything. Using homomorphisms for this would still be just rewriting. But I guess trying to change the <code>FreeGroup</code> class would take more time. So do you suggest I just rewrite things manually for now and probably replace it with a homomorphism later (some time in July)?",
  "id": "592465035e34568d5e830f22",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-23T16:36:19.399Z",
  "text": "Yes, `gens[0].group` is usually too big so I've been trying to make it smaller without having to create a new free group and rewriting everything. Using homomorphisms for this would still be just rewriting. But I guess trying to change the `FreeGroup` class would take more time. So do you suggest I just rewrite things manually for now and probably replace it with a homomorphism later (some time in July)?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I&#39;m not sure what &#39;rewrite things manually&#39; would imply. I would expect that the original groups and their elements would not be modified in any way. Instead, new groups should be created. Therefore, suitable names should first be invented for the new generators, and then the new relators should be constructed (this is where rewrite will appear, I think). The connection between the (newly constructed) subgroup and the original group should be realized as the canonical injection homomorphism, but it is probably not necessary to implement that now. Only, it should be kept in mind that the objects representing the elements of the group and its subgroup should be different objects, not obtained by some modification in place.",
  "id": "5924711e05e3326c670000e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-23T17:27:58.020Z",
  "text": "I'm not sure what 'rewrite things manually' would imply. I would expect that the original groups and their elements would not be modified in any way. Instead, new groups should be created. Therefore, suitable names should first be invented for the new generators, and then the new relators should be constructed (this is where rewrite will appear, I think). The connection between the (newly constructed) subgroup and the original group should be realized as the canonical injection homomorphism, but it is probably not necessary to implement that now. Only, it should be kept in mind that the objects representing the elements of the group and its subgroup should be different objects, not obtained by some modification in place.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Okay. I&#39;ve just pushed a commit which does what I think you meant.",
  "id": "5924746fc4d73f445ad7ccb0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-05-23T17:42:07.426Z",
  "text": "Okay. I've just pushed a commit which does what I think you meant.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Ok. It&#39;s getting a bit late now, but I&#39;ll look into it tomorrow.",
  "id": "59247a0efcbbe1891c398112",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-05-23T18:06:06.737Z",
  "text": "Ok. It's getting a bit late now, but I'll look into it tomorrow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I can&#39;t follow all of this because of my unfamiliarity with the code, but I would add that immutability tends to make things a lot easier in the long run. ",
  "id": "59247c0a0de3eb3e19a7abfe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-05-23T18:14:34.650Z",
  "text": "I can't follow all of this because of my unfamiliarity with the code, but I would add that immutability tends to make things a lot easier in the long run. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I&#39;ve tidied up the elimination techniques code and now we can get a presentation on a smaller number of generators for one of the tests. It&#39;s going to be quite a big pull request because I rewrote some things and added  a couple of new methods for the <code>FreeGroupElement</code> class. Should I send it now or wait until the previous one is merged so that there are no conflicts?",
  "id": "59297e1c0a783b6c0addce68",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-27T13:24:44.198Z",
  "text": "I've tidied up the elimination techniques code and now we can get a presentation on a smaller number of generators for one of the tests. It's going to be quite a big pull request because I rewrote some things and added  a couple of new methods for the `FreeGroupElement` class. Should I send it now or wait until the previous one is merged so that there are no conflicts?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Does this PR rely on something in the previous one, e.g. <code>parent</code>? If not then I believe you could send it now. We can deal with possible conflicts later should they appear.",
  "id": "5929805df3001cd3426402f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-27T13:34:21.599Z",
  "text": "Does this PR rely on something in the previous one, e.g. `parent`? If not then I believe you could send it now. We can deal with possible conflicts later should they appear.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "It doesn&#39;t so I&#39;ll send it in a bit",
  "id": "59299179cb83ba6a4104b967",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-27T14:47:21.710Z",
  "text": "It doesn't so I'll send it in a bit",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Several tests are failing. It was to be expected when the output form is changed. But some failures may be caused by a bug.",
  "id": "5929c2bdcb83ba6a41056411",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-27T18:17:33.935Z",
  "text": "Several tests are failing. It was to be expected when the output form is changed. But some failures may be caused by a bug.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Yes, it&#39;s because of doctests some of which I forgot to change. I think the latest commit should be fine",
  "id": "5929ef1800efc2bb3eaeef1c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-27T21:26:48.378Z",
  "text": "Yes, it's because of doctests some of which I forgot to change. I think the latest commit should be fine",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I&#39;m writing a function that finds the invariant factors of a matrix over a euclidean domain, like in the smith normal form (it already sort of works for integers and it should work for euclidean polynomial domains as well). This definitely shouldn&#39;t be in the combinatorics module. I guess it should go together with the other matrix stuff? Also, would it be easier if I sent a PR with just this function first and its application to groups later in a different PR, or just a big PR with everything?",
  "id": "592d9e880ba4d59763f60b4d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-30T16:32:08.219Z",
  "text": "I'm writing a function that finds the invariant factors of a matrix over a euclidean domain, like in the smith normal form (it already sort of works for integers and it should work for euclidean polynomial domains as well). This definitely shouldn't be in the combinatorics module. I guess it should go together with the other matrix stuff? Also, would it be easier if I sent a PR with just this function first and its application to groups later in a different PR, or just a big PR with everything?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "As a matter of fact, I have been thinking about that since I saw your blog. I think that a new module should be defined for matrices, for example, <code>normalforms</code>. It could eventually contain also Jordan&#39;s canonical form that is now in the main part. Smith normal form method should be general enough to admit also univariant polynomials over a field. Theoretically, it should  work over all principal ideal domains, but I guess those polynomials and integers are currently the only ones with sufficient support in SymPy. The method will be exposed to all matrix users, and therefore it should start by checking the domain of matrix entries.",
  "id": "592da429fa63ba2f769577e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-30T16:56:09.643Z",
  "text": "As a matter of fact, I have been thinking about that since I saw your blog. I think that a new module should be defined for matrices, for example, `normalforms`. It could eventually contain also Jordan's canonical form that is now in the main part. Smith normal form method should be general enough to admit also univariant polynomials over a field. Theoretically, it should  work over all principal ideal domains, but I guess those polynomials and integers are currently the only ones with sufficient support in SymPy. The method will be exposed to all matrix users, and therefore it should start by checking the domain of matrix entries.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Another remark about matrices. I wonder if you have noticed that already. Namely, the standard Matrix creation will sympify the entries. That may sometimes be undesirable, especially when working with objects constructed in <code>polys</code>. There exists a <code>Matrix</code> subclass with trivial sympification in <code>polys</code> called <code>RawMatrix</code>. If you need it to construct a matrix of e.g. Python ints, you can introduce it by <code>from sympy.polys.solvers import RawMatrix as Matrix</code>.",
  "id": "592da9c5c4d73f445afb696d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-30T17:20:05.935Z",
  "text": "Another remark about matrices. I wonder if you have noticed that already. Namely, the standard Matrix creation will sympify the entries. That may sometimes be undesirable, especially when working with objects constructed in `polys`. There exists a `Matrix` subclass with trivial sympification in `polys` called `RawMatrix`. If you need it to construct a matrix of e.g. Python ints, you can introduce it by `from sympy.polys.solvers import RawMatrix as Matrix`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "So you suggest creating a new file called <code>normalforms.py</code> in the matrices directory and put the smith-normal function there?<br>Also, in terms of checking the domain of entries, it would be useful if domains had the property <code>is_pid</code> (for &quot;principal ideal domain&quot;) or something like that, because, for example, <code>ZZ[x]</code> is not a PID. I can check for it separately now but more non-PID domains could be added in the future, and then the code would have to be modified to include each of them. I don&#39;t think there is a simple general way to check if a domain is pid at the moment, is there? Though, maybe, checking if it has the <code>.gcdex()</code> method on which the function depends could work.",
  "id": "592ee29e0a783b6c0af262eb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-31T15:34:54.385Z",
  "text": "So you suggest creating a new file called `normalforms.py` in the matrices directory and put the smith-normal function there?\nAlso, in terms of checking the domain of entries, it would be useful if domains had the property `is_pid` (for \"principal ideal domain\") or something like that, because, for example, `ZZ[x]` is not a PID. I can check for it separately now but more non-PID domains could be added in the future, and then the code would have to be modified to include each of them. I don't think there is a simple general way to check if a domain is pid at the moment, is there? Though, maybe, checking if it has the `.gcdex()` method on which the function depends could work.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "is_pid sounds useful ",
  "id": "592ef26021759a6a01670ab0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-31T16:42:08.293Z",
  "text": "is_pid sounds useful ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems that a new property is needed. Checking the existence of <code>.gcdex()</code> does not suffice since multivariate polynomials also have it though a call will raise an exception.",
  "id": "592ef7c9631b8e4e612fabfa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-31T17:05:13.140Z",
  "text": "It seems that a new property is needed. Checking the existence of `.gcdex()` does not suffice since multivariate polynomials also have it though a call will raise an exception.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "the Domain superclass also has it. it raises NotImplementedError",
  "id": "592ef80e5dc6925a7a452be2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-31T17:06:22.980Z",
  "text": "the Domain superclass also has it. it raises NotImplementedError",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>I see. Fair enough, I&#39;ll add the property to all the relevant domain files I can find.</p><p>Also, I&#39;ve run into an unrelated issue of telling the new function which <code>div</code> (and the like, e.g. <code>gcd</code> and <code>gcdex</code>) to use. Like, for polynomials it&#39;s <code>div(a, b, domain = QQ)</code> (or some other domain) but for integers that doesn&#39;t work, and I need to do either <code>ZZ.div(a,b)</code> or <code>divmod(a,b)</code>. Ideally, I&#39;d like to be able to have one form that does division of two elements in a given domain. <code>domain.div(a,b)</code> would do the trick if there actually was a domain <code>QQ[x]</code> but I can&#39;t find any references to such things. Does it exist?</p>",
  "id": "592efcec5e34568d5eaceb0d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-31T17:27:08.890Z",
  "text": "I see. Fair enough, I'll add the property to all the relevant domain files I can find.\n\nAlso, I've run into an unrelated issue of telling the new function which `div` (and the like, e.g. `gcd` and `gcdex`) to use. Like, for polynomials it's `div(a, b, domain = QQ)` (or some other domain) but for integers that doesn't work, and I need to do either `ZZ.div(a,b)` or `divmod(a,b)`. Ideally, I'd like to be able to have one form that does division of two elements in a given domain. `domain.div(a,b)` would do the trick if there actually was a domain `QQ[x]` but I can't find any references to such things. Does it exist?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "<code>QQ[x].div</code> does exist ",
  "id": "592f00c1741056301283de3a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-05-31T17:43:29.601Z",
  "text": "`QQ[x].div` does exist ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Ah, brilliant. Thanks",
  "id": "592f03850a783b6c0af31efb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-31T17:55:17.428Z",
  "text": "Ah, brilliant. Thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The properties of all domains are initialized in <code>polys.domains.domain</code>. It seems that capital letters are favoured so maybe the property could be <code>is_PID</code> with default value <code>False</code>.",
  "id": "592f0c2e38b37b9828431f33",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-31T18:32:14.607Z",
  "text": "The properties of all domains are initialized in `polys.domains.domain`. It seems that capital letters are favoured so maybe the property could be `is_PID` with default value `False`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "perhaps the default should be a <code>@property</code> method that checks for simple cases like is_Field",
  "id": "592f0d8921759a6a01670bfe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-31T18:38:01.893Z",
  "text": "perhaps the default should be a `@property` method that checks for simple cases like is_Field",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "usually one would expect to see the ring hierarchies like PID, UFD, etc. represented by different classes ",
  "id": "592f0dc10de3eb3e19a81000",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-31T18:38:57.017Z",
  "text": "usually one would expect to see the ring hierarchies like PID, UFD, etc. represented by different classes ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "although that&#39;s not the only way to do it ",
  "id": "592f0dc65dc6925a7a452cf5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-31T18:39:02.401Z",
  "text": "although that's not the only way to do it ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Most of the domains are not PIDs. I think that setting <code>False</code> as the default and then changing that in those few places where appropriate would be the simplest way.",
  "id": "592f0ea0f3001cd342797f0d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-05-31T18:42:40.813Z",
  "text": "Most of the domains are not PIDs. I think that setting `False` as the default and then changing that in those few places where appropriate would be the simplest way.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I mean ",
  "id": "592f14450de3eb3e19a8107e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-05-31T19:06:45.713Z",
  "text": "I mean ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "<pre><code><span class=\"decorator\">@property</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">is_PID</span><span class=\"params\">(self)</span>:</span>\n    <span class=\"keyword\">if</span> self.is_Field:\n        <span class=\"keyword\">return</span> <span class=\"keyword\">True</span>\n    <span class=\"keyword\">return</span> <span class=\"keyword\">False</span> <span class=\"comment\"># default</span></code></pre>",
  "id": "592f14605dc6925a7a452d48",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-05-31T19:07:12.863Z",
  "text": "```\n@property\ndef is_PID(self):\n    if self.is_Field:\n        return True\n    return False # default\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I would rather expect setting is_Field to also set is_PID. ",
  "id": "592f1474331deef4646a0623",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-05-31T19:07:32.840Z",
  "text": "I would rather expect setting is_Field to also set is_PID. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "but I don&#39;t know if other things work like that in the domains module ",
  "id": "592f147c741056301283df0d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-05-31T19:07:40.617Z",
  "text": "but I don't know if other things work like that in the domains module ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "or maybe it should default to None. I don&#39;t know. ",
  "id": "592f15210de3eb3e19a81086",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-05-31T19:10:25.298Z",
  "text": "or maybe it should default to None. I don't know. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I don&#39;t remember, how easy is it to tell if an algebraic extension is a PID?",
  "id": "592f15325dc6925a7a452d58",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-05-31T19:10:42.403Z",
  "text": "I don't remember, how easy is it to tell if an algebraic extension is a PID?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "There is actually <code>has_Field</code> instead of <code>is_Field</code>. (Maybe it should be changed.) Its default <code>False</code> is set in <code>class Domain</code> and <code>True</code> is set in <code>class Field</code>. I think it would be equally easy to set <code>is_PID</code> in <code>class Field</code>. I&#39;d rather avoid those property methods. Practically all properties of domains are set to <code>False</code> initially. <code>is_Exact</code> seems to be the only exception. It will be set to <code>False</code> only in the real number classes.",
  "id": "592f1a630a783b6c0af39261",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-05-31T19:32:51.700Z",
  "text": "There is actually `has_Field` instead of `is_Field`. (Maybe it should be changed.) Its default `False` is set in `class Domain` and `True` is set in `class Field`. I think it would be equally easy to set `is_PID` in `class Field`. I'd rather avoid those property methods. Practically all properties of domains are set to `False` initially. `is_Exact` seems to be the only exception. It will be set to `False` only in the real number classes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "ok, in that case I agree is_PID defaulting to False fits what is already there ",
  "id": "592f1a980de3eb3e19a810bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-05-31T19:33:44.550Z",
  "text": "ok, in that case I agree is_PID defaulting to False fits what is already there ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>I&#39;ve changed <code>has_Field</code> and <code>has_Ring</code> to <code>is_Field</code> and <code>is_Ring</code>. There is also <code>has_assoc_Field</code> but that seems to be something different because <code>IntegerRing.has_assoc_Field == True</code>. I think it&#39;s something to do with whether there is field into which it can be embedded.</p><p>Also, about checking the domain of entries. Considering that one can&#39;t just take an element and call some property to see what domain it belongs to, the only way to determine which domain should be used is probably just trying a few. So, see if all elements are integers, then use <code>ZZ</code>, and if there are symbolic expressions or polynomials, turn them into polys if necessary and make sure there is only one symbol in all of them in which case set the domain to <code>QQ[symbol]</code> or <code>RR[symbol]</code> depending on its coefficients. This is not general enough and separate checks will have to be added in the future for new PIDs but I can&#39;t think of a better way.</p>",
  "id": "59306abb7503e2b70600442f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T19:27:55.206Z",
  "text": "I've changed `has_Field` and `has_Ring` to `is_Field` and `is_Ring`. There is also `has_assoc_Field` but that seems to be something different because `IntegerRing.has_assoc_Field == True`. I think it's something to do with whether there is field into which it can be embedded.\n\nAlso, about checking the domain of entries. Considering that one can't just take an element and call some property to see what domain it belongs to, the only way to determine which domain should be used is probably just trying a few. So, see if all elements are integers, then use `ZZ`, and if there are symbolic expressions or polynomials, turn them into polys if necessary and make sure there is only one symbol in all of them in which case set the domain to `QQ[symbol]` or `RR[symbol]` depending on its coefficients. This is not general enough and separate checks will have to be added in the future for new PIDs but I can't think of a better way.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "there is most likely some function in the polys that already does this ",
  "id": "593070afd41148543fb54a18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T19:53:19.866Z",
  "text": "there is most likely some function in the polys that already does this ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Did you change has_Field and has_Ring everywhere? I wonder why those were defined. Hopefully nobody is using them.<br>I think that assoc_Field refers to the fraction field of an integral domain. But that is probably not interesting now..",
  "id": "593070e3142826e97273e250",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T19:54:11.047Z",
  "text": "Did you change has_Field and has_Ring everywhere? I wonder why those were defined. Hopefully nobody is using them.\nI think that assoc_Field refers to the fraction field of an integral domain. But that is probably not interesting now..",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "We should probably avoid using <code>RR[symbol]</code>. <code>RR</code> is not really even a ring.",
  "id": "593071457503e2b70600651f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T19:55:49.086Z",
  "text": "We should probably avoid using `RR[symbol]`. `RR` is not really even a ring.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I don&#39;t know why it was called has_Field ",
  "id": "59307184fe802f3e7e70c9dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T19:56:52.176Z",
  "text": "I don't know why it was called has_Field ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I think changing it is fine, but we should probably deprecate it ",
  "id": "5930721517bf04497452ee90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T19:59:17.607Z",
  "text": "I think changing it is fine, but we should probably deprecate it ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "We should probably add an attribute to matrices telling what ring its elements belong to. It seems that they have been silently assumed to be just expressions until now..",
  "id": "59307227cf9c13503c44678f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T19:59:35.019Z",
  "text": "We should probably add an attribute to matrices telling what ring its elements belong to. It seems that they have been silently assumed to be just expressions until now..",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "<a href=\"https://github.com/sympy/sympy/wiki/Deprecating-policy\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/wiki/Deprecating-policy</a>",
  "id": "59307229c9a8a7782e3e2413",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T19:59:37.778Z",
  "text": "https://github.com/sympy/sympy/wiki/Deprecating-policy",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/wiki/Deprecating-policy"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I was also thinking of deprecating it though probably noone is actually relying on it explicitly.",
  "id": "59307259f2dd2dba065db3d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:00:25.133Z",
  "text": "I was also thinking of deprecating it though probably noone is actually relying on it explicitly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "this is why I think we need matrices that have a domain, like Poly ",
  "id": "5930725cc9a8a7782e3e2417",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:00:28.449Z",
  "text": "this is why I think we need matrices that have a domain, like Poly ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Yes, matrices should probably have a domain attribute.",
  "id": "59307289142826e97273ead9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:01:13.519Z",
  "text": "Yes, matrices should probably have a domain attribute.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "does the agca module use matrices? ",
  "id": "593072cae4edfebc608d34e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:02:18.584Z",
  "text": "does the agca module use matrices? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I don&#39;t think so. Only polys.solvers does.",
  "id": "593072e86549436c7d08e20c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:02:48.781Z",
  "text": "I don't think so. Only polys.solvers does.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "it looks like it does for homomorphisms ",
  "id": "593072f217bf04497452eea6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:02:58.204Z",
  "text": "it looks like it does for homomorphisms ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I only see integer valued matrices in the examples, though ",
  "id": "5930730617bf04497452eeaa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:03:18.779Z",
  "text": "I only see integer valued matrices in the examples, though ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Matrix homomorphisms, a subclass.",
  "id": "5930734631f589c64f6620b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:04:22.538Z",
  "text": "Matrix homomorphisms, a subclass.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "<a href=\"http://docs.sympy.org/latest/modules/polys/agca.html#sympy.polys.agca.homomorphisms.homomorphism\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.sympy.org/latest/modules/polys/agca.html#sympy.polys.agca.homomorphisms.homomorphism</a>",
  "id": "5930734ae4edfebc608d34ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:04:26.631Z",
  "text": "http://docs.sympy.org/latest/modules/polys/agca.html#sympy.polys.agca.homomorphisms.homomorphism",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.sympy.org/latest/modules/polys/agca.html#sympy.polys.agca.homomorphisms.homomorphism"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "it stores a matrix",
  "id": "59307354cfca12e16b4ee2df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:04:36.099Z",
  "text": "it stores a matrix",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "it would probably be useful to that module if the matrix had an associated domain ",
  "id": "59307374c9a8a7782e3e242d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:05:08.051Z",
  "text": "it would probably be useful to that module if the matrix had an associated domain ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "it probably isn&#39;t an issue since it&#39;s kept internal ",
  "id": "5930737a17bf04497452eeaf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:05:14.769Z",
  "text": "it probably isn't an issue since it's kept internal ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "But it seems that the entries are converted to expressions.",
  "id": "59307380142826e97273ee73",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:05:20.092Z",
  "text": "But it seems that the entries are converted to expressions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I was wondering specifically if it is worth the effort to allow matrices over non-fields ",
  "id": "593073a0c9a8a7782e3e242f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:05:52.290Z",
  "text": "I was wondering specifically if it is worth the effort to allow matrices over non-fields ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "you&#39;d have to split out the matrix methods that require division ",
  "id": "593073b0cfca12e16b4ee2e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:06:08.152Z",
  "text": "you'd have to split out the matrix methods that require division ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "or rather, add checks if elements have inverses ",
  "id": "593073dbcfca12e16b4ee2e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:06:51.319Z",
  "text": "or rather, add checks if elements have inverses ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The matrices used in agca seem actually more like lists of objects. This is in the docstring:<pre><code>matrix - <span class=\"keyword\">the</span> <span class=\"type\">list</span> <span class=\"keyword\">of</span> images determining <span class=\"keyword\">the</span> homomorphism.</code></pre>",
  "id": "5930748502c480e67202927a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:09:41.933Z",
  "text": "The matrices used in agca seem actually more like lists of objects. This is in the docstring:\n```\nmatrix - the list of images determining the homomorphism.\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "indeed. <code>Matrix</code> is only used for printing apparently ",
  "id": "593074ced41148543fb54a65",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:10:54.492Z",
  "text": "indeed. `Matrix` is only used for printing apparently ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think we should allow matrices over all rings, and there is probably no reason why the ring should be commutative.",
  "id": "593074d36549436c7d08ead8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:10:59.324Z",
  "text": "I think we should allow matrices over all rings, and there is probably no reason why the ring should be commutative.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I agree we should have it, but it is probably more work. ",
  "id": "593074f617bf04497452eecf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:11:34.138Z",
  "text": "I agree we should have it, but it is probably more work. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "a matrix subclass that works over field domains should be easy to make ",
  "id": "5930750bc9a8a7782e3e244b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:11:55.555Z",
  "text": "a matrix subclass that works over field domains should be easy to make ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Something like that has already been implemented: block matrices.",
  "id": "5930751eca6d4ae80cd1142d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:12:14.879Z",
  "text": "Something like that has already been implemented: block matrices.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "that is true",
  "id": "5930754dcfca12e16b4ee2f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:13:01.417Z",
  "text": "that is true",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "A block matrix is a matrix whose elements belong to a noncommutative ring of matrices.",
  "id": "59307562cf9c13503c447929",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:13:22.622Z",
  "text": "A block matrix is a matrix whose elements belong to a noncommutative ring of matrices.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "All of this should be unified somehow.",
  "id": "5930757c142826e97273f6bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:13:48.325Z",
  "text": "All of this should be unified somehow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "although BlockMatrix isn&#39;t using the new design from <span data-link-type=\"mention\" data-screen-name=\"siefkinj\" class=\"mention\">@siefkinj</span> as far as I know",
  "id": "5930758217bf04497452eed6",
  "issues": [],
  "mentions": [
   {
    "screenName": "siefkinj",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:13:54.290Z",
  "text": "although BlockMatrix isn't using the new design from @siefkinj as far as I know",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "it&#39;s based on matrix expressions ",
  "id": "59307598fe802f3e7e70ca20",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:14:16.732Z",
  "text": "it's based on matrix expressions ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I think block matrix is similar but not quite the same. ",
  "id": "593075b1cfca12e16b4ee2fd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:14:41.718Z",
  "text": "I think block matrix is similar but not quite the same. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "There is quite a lot of work to be done, more than what is needed now for the Smith normal form.",
  "id": "593075b9167d046a7d5cad04",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:14:49.487Z",
  "text": "There is quite a lot of work to be done, more than what is needed now for the Smith normal form.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "because certain matrix operations apply directly to the blocks ",
  "id": "593075bbe4edfebc608d350c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:14:51.120Z",
  "text": "because certain matrix operations apply directly to the blocks ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "like transpose ",
  "id": "593075bdd41148543fb54a6a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:14:53.076Z",
  "text": "like transpose ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I think one just need to go through the algorithms and make sure they are correct for noncommutatives ",
  "id": "593075dce4edfebc608d350e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:15:24.217Z",
  "text": "I think one just need to go through the algorithms and make sure they are correct for noncommutatives ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "even in the current state you could use <code>Symbol(&#39;x&#39;, commutative=False)</code> in a matrix ",
  "id": "593075f0cfca12e16b4ee313",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:15:44.429Z",
  "text": "even in the current state you could use `Symbol('x', commutative=False)` in a matrix ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The coefficient ring can have an involution generalizing the transpose.",
  "id": "59307631f31c8ced0cf431fb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:16:49.737Z",
  "text": "The coefficient ring can have an involution generalizing the transpose.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "but even other things",
  "id": "5930766ec9a8a7782e3e245e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:17:50.059Z",
  "text": "but even other things",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "like determinant ",
  "id": "59307672d41148543fb54a78",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:17:54.393Z",
  "text": "like determinant ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Conjugation of the complex field is an example. It gives the hermitian conjugate.",
  "id": "59307679f2dd2dba065dc616",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-01T20:18:01.351Z",
  "text": "Conjugation of the complex field is an example. It gives the hermitian conjugate.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "this is why BlockMatrix is based on MatrixExpr. Because operations on the block matrix can be represented as matrix expressions on the blocks ",
  "id": "5930769317bf04497452ef01",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-01T20:18:27.489Z",
  "text": "this is why BlockMatrix is based on MatrixExpr. Because operations on the block matrix can be represented as matrix expressions on the blocks ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Determinant is primarily restricted to the commutative case.",
  "id": "5930769ecf9c13503c447d8e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-01T20:18:38.370Z",
  "text": "Determinant is primarily restricted to the commutative case.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "determinant is the main nontrivial thing I saw in the code",
  "id": "593076cad41148543fb54a83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-01T20:19:22.307Z",
  "text": "determinant is the main nontrivial thing I saw in the code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "<pre><code>\n    def _eval_determinant(self):\n        <span class=\"keyword\">if</span> self<span class=\"class\">.blockshape</span> == (<span class=\"number\">2</span>, <span class=\"number\">2</span>):\n            [[A, B],\n             [C, D]] = self<span class=\"class\">.blocks</span><span class=\"class\">.tolist</span>()\n            <span class=\"keyword\">if</span> <span class=\"function\"><span class=\"title\">ask</span><span class=\"params\">(Q.invertible(A)</span></span>):\n                return <span class=\"function\"><span class=\"title\">det</span><span class=\"params\">(A)</span></span>*<span class=\"function\"><span class=\"title\">det</span><span class=\"params\">(D - C*A.I*B)</span></span>\n            elif <span class=\"function\"><span class=\"title\">ask</span><span class=\"params\">(Q.invertible(D)</span></span>):\n                return <span class=\"function\"><span class=\"title\">det</span><span class=\"params\">(D)</span></span>*<span class=\"function\"><span class=\"title\">det</span><span class=\"params\">(A - B*D.I*C)</span></span>\n        return <span class=\"function\"><span class=\"title\">Determinant</span><span class=\"params\">(self)</span></span></code></pre>",
  "id": "593076ccd41148543fb54a85",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-01T20:19:24.493Z",
  "text": "```\n\n    def _eval_determinant(self):\n        if self.blockshape == (2, 2):\n            [[A, B],\n             [C, D]] = self.blocks.tolist()\n            if ask(Q.invertible(A)):\n                return det(A)*det(D - C*A.I*B)\n            elif ask(Q.invertible(D)):\n                return det(D)*det(A - B*D.I*C)\n        return Determinant(self)\n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I never thought about determinant over noncommutatives. I guess it would be different depending on what rows/columns you expand down ",
  "id": "5930772217bf04497452ef16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-01T20:20:50.332Z",
  "text": "I never thought about determinant over noncommutatives. I guess it would be different depending on what rows/columns you expand down ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Hmm, that seems to assume &#39;flattening&#39; the matrix. Such an operations  can probably not be generalized.",
  "id": "59307732cf9c13503c448097",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-01T20:21:06.880Z",
  "text": "Hmm, that seems to assume 'flattening' the matrix. Such an operations  can probably not be generalized.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "yes, that is my point ",
  "id": "5930774ffe802f3e7e70ca43",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-01T20:21:35.892Z",
  "text": "yes, that is my point ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "perhaps even other operations can be done on blocks as well, I don&#39;t know ",
  "id": "59307766c9a8a7782e3e2470",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-01T20:21:58.607Z",
  "text": "perhaps even other operations can be done on blocks as well, I don't know ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "it&#39;s useful for representing matrix calculations. If you can reduce things to calculations on blocks, you can make the calculation more efficient ",
  "id": "59307793d41148543fb54a87",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-01T20:22:43.409Z",
  "text": "it's useful for representing matrix calculations. If you can reduce things to calculations on blocks, you can make the calculation more efficient ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "There is a not well known generalization of determinant for non-commutative fields (or &#39;division rings&#39;): <a href=\"https://en.wikipedia.org/wiki/Dieudonn%C3%A9_determinant\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://en.wikipedia.org/wiki/Dieudonn%C3%A9_determinant</a>",
  "id": "593077b5ca6d4ae80cd11fca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-01T20:23:17.261Z",
  "text": "There is a not well known generalization of determinant for non-commutative fields (or 'division rings'): https://en.wikipedia.org/wiki/Dieudonn%C3%A9_determinant",
  "unread": false,
  "urls": [
   {
    "url": "https://en.wikipedia.org/wiki/Dieudonn%C3%A9_determinant"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "interesting. <a href=\"https://en.wikipedia.org/wiki/Determinant#Related_notions_for_non-commutative_rings\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://en.wikipedia.org/wiki/Determinant#Related_notions_for_non-commutative_rings</a> says the Leibniz formula isn&#39;t multiplicative ",
  "id": "593077ec17bf04497452ef3c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-01T20:24:12.637Z",
  "text": "interesting. https://en.wikipedia.org/wiki/Determinant#Related_notions_for_non-commutative_rings says the Leibniz formula isn't multiplicative ",
  "unread": false,
  "urls": [
   {
    "url": "https://en.wikipedia.org/wiki/Determinant#Related_notions_for_non-commutative_rings"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "But we probably should not plan implementing those in SymPy.",
  "id": "5930781b142826e9727404ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-01T20:24:59.455Z",
  "text": "But we probably should not plan implementing those in SymPy.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "not unless someone wants it : )",
  "id": "59307828fe802f3e7e70ca69",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-01T20:25:12.962Z",
  "text": "not unless someone wants it : )",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Ok. I think I&#39;ll have to close down.",
  "id": "5930787ceb257a8725cc2665",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-01T20:26:36.620Z",
  "text": "Ok. I think I'll have to close down.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "this is the sort of thing block matrices could be useful for <a href=\"https://en.wikipedia.org/wiki/Block_LU_decomposition\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://en.wikipedia.org/wiki/Block_LU_decomposition</a>",
  "id": "59307889cfca12e16b4ee335",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-01T20:26:49.748Z",
  "text": "this is the sort of thing block matrices could be useful for https://en.wikipedia.org/wiki/Block_LU_decomposition",
  "unread": false,
  "urls": [
   {
    "url": "https://en.wikipedia.org/wiki/Block_LU_decomposition"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "good night ",
  "id": "593078bcc9a8a7782e3e248d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-01T20:27:40.003Z",
  "text": "good night ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Good night.",
  "id": "593078d16549436c7d08fd0b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-01T20:28:01.109Z",
  "text": "Good night.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "All of that sounds quite interesting but of course, I can&#39;t work on all of it (not until gsoc is over anyway). However, I do need to sort  something out for domain-checking for the time being. Having matrices with a domain attribute would be perfect but is there an easy way to implement that now? If I do, I guess I&#39;d still need to go through lots of function and at least raise a <code>NotImplementedError</code> for non-fields. Also, setting the attribute at matrix construction will involve more or less the same: checking every entry and trying to fit some domain into them (unless the user explicitly specifies a domain).",
  "id": "59307e12f2dd2dba065deb31",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-01T20:50:26.966Z",
  "text": "All of that sounds quite interesting but of course, I can't work on all of it (not until gsoc is over anyway). However, I do need to sort  something out for domain-checking for the time being. Having matrices with a domain attribute would be perfect but is there an easy way to implement that now? If I do, I guess I'd still need to go through lots of function and at least raise a `NotImplementedError` for non-fields. Also, setting the attribute at matrix construction will involve more or less the same: checking every entry and trying to fit some domain into them (unless the user explicitly specifies a domain).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "see <span data-link-type=\"issue\" data-issue=\"12694\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#12694</span> and the discussion there ",
  "id": "59307e5b17bf04497452ef80",
  "issues": [
   {
    "number": "12694",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-01T20:51:39.874Z",
  "text": "see https://github.com/sympy/sympy/pull/12694 and the discussion there ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "definitely don&#39;t want you to spend too much time on this as it&#39;s not directly part of your project ",
  "id": "59307e7717bf04497452ef8d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-01T20:52:07.911Z",
  "text": "definitely don't want you to spend too much time on this as it's not directly part of your project ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"siefkenj\" class=\"mention\">@siefkenj</span> would be the person to talk to about the specific details of the matrix module ",
  "id": "59307eb7d41148543fb54b03",
  "issues": [],
  "mentions": [
   {
    "screenName": "siefkenj",
    "userId": "561d54b4d33f749381a94039",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2017-06-01T20:53:11.518Z",
  "text": "@siefkenj would be the person to talk to about the specific details of the matrix module ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Also, if <code>RR</code> isn&#39;t a ring, then what to do with polynomials with real coefficients? There probably should be a RealField class.",
  "id": "59307ec46462d8493ccf4fce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-01T20:53:24.902Z",
  "text": "Also, if `RR` isn't a ring, then what to do with polynomials with real coefficients? There probably should be a RealField class.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I think he means because of floating point issues ",
  "id": "59307ee0fe802f3e7e70caae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-01T20:53:52.553Z",
  "text": "I think he means because of floating point issues ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "the arithmetic is not exact ",
  "id": "59307ee9d41148543fb54b08",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-01T20:54:01.221Z",
  "text": "the arithmetic is not exact ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I think we should try to handle those, though, even if there are some issues that can arise, because float computations are important ",
  "id": "59307f07fe802f3e7e70cab0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-01T20:54:31.339Z",
  "text": "I think we should try to handle those, though, even if there are some issues that can arise, because float computations are important ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I&#39;ve got some PRs related to that (which I need to finish up at some point), like <span data-link-type=\"issue\" data-issue=\"12088\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#12088</span>",
  "id": "59307f3ce4edfebc608d360e",
  "issues": [
   {
    "number": "12088",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-01T20:55:24.926Z",
  "text": "I've got some PRs related to that (which I need to finish up at some point), like https://github.com/sympy/sympy/pull/12088",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Thanks, I&#39;ll have a look at the PRs some time tomorrow because it&#39;s getting a bit late now. I suppose if it ends up taking longer than I thought, I&#39;ll just postpone sending the PR with smith-normal stuff for some time and move on to something else.",
  "id": "59308091cf9c13503c44aeef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-01T21:01:05.604Z",
  "text": "Thanks, I'll have a look at the PRs some time tomorrow because it's getting a bit late now. I suppose if it ends up taking longer than I thought, I'll just postpone sending the PR with smith-normal stuff for some time and move on to something else.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "you don&#39;t need to worry about my PR, but definitely look at Gaurav&#39;s one. I think you are both dealing with the same issue ",
  "id": "593080b517bf04497452ef9f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-01T21:01:41.486Z",
  "text": "you don't need to worry about my PR, but definitely look at Gaurav's one. I think you are both dealing with the same issue ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think that all matrices of the type we are planning to use, i.e. those whose entries are not expressions or even Basic objects, should have attribute <code>ring</code>. (<code>domain</code> in polys is used in a more restrictive sense, among other things it is expected to be commutative.) That can be added manually as an object attribute during development before a suitable matrix base class has been established. Then the Smith normal form function could start with a check like this: <code>if not hasattr(mat, &#39;ring&#39;) or not mat.ring.is_PID: raise ...</code>.",
  "id": "5930edb4167d046a7d5e41de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-02T04:46:44.598Z",
  "text": "I think that all matrices of the type we are planning to use, i.e. those whose entries are not expressions or even Basic objects, should have attribute `ring`. (`domain` in polys is used in a more restrictive sense, among other things it is expected to be commutative.) That can be added manually as an object attribute during development before a suitable matrix base class has been established. Then the Smith normal form function could start with a check like this: `if not hasattr(mat, 'ring') or not mat.ring.is_PID: raise ...`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-02T05:00:14.300Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "About <code>RR</code>: I wanted to point out that we should probably not set <code>RR[x].is_PID</code> to True. For other univariate polynomials over a field we can do that in <code>PolynomialRing.__init__()</code>. (<code>if self.domain.is_Field and not isinstance(self.domain, RealField) and self.ngens == 1: self.is_PID = True</code>)",
  "id": "5930f081ca6d4ae80cd2c3d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-02T04:58:41.843Z",
  "text": "About `RR`: I wanted to point out that we should probably not set `RR[x].is_PID` to True. For other univariate polynomials over a field we can do that in `PolynomialRing.__init__()`. (`if self.domain.is_Field and not isinstance(self.domain, RealField) and self.ngens == 1: self.is_PID = True`)",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "For integers, we can set <code>is_PID</code> in <code>class IntegerRing</code>.",
  "id": "5930f180f2dd2dba065f71e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-06-02T05:02:56.440Z",
  "text": "For integers, we can set `is_PID` in `class IntegerRing`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "what would be the implications of it not being set as a PID?",
  "id": "5931218a17bf04497452f339",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-06-02T08:27:54.848Z",
  "text": "what would be the implications of it not being set as a PID?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Also assumedly also <code>RR.is_PID</code> should be the same ",
  "id": "5931219217bf04497452f33b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-06-02T08:28:02.409Z",
  "text": "Also assumedly also `RR.is_PID` should be the same ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I don&#39;t think we could apply Smith normal form algorithm (or other algorithms depending on exactness) to matrices over <code>RR[x]</code>.",
  "id": "5931239802c480e67204f806",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-06-02T08:36:40.300Z",
  "text": "I don't think we could apply Smith normal form algorithm (or other algorithms depending on exactness) to matrices over `RR[x]`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "In fact,  it seems that we could test <code>self.domain.is_Exact</code> instead of <code>isinstance(self.domain, RealField)</code>.",
  "id": "5931249102c480e67204faac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-06-02T08:40:49.676Z",
  "text": "In fact,  it seems that we could test `self.domain.is_Exact` instead of `isinstance(self.domain, RealField)`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Setting <code>K.is_PID</code> for a field <code>K</code> will probably not be of much real use, but I guess it should be False for <code>RR</code>.",
  "id": "5931257802c480e67204ff20",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-06-02T08:44:40.106Z",
  "text": "Setting `K.is_PID` for a field `K` will probably not be of much real use, but I guess it should be False for `RR`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-03T09:31:00.450Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The use of <code>RawMatrix</code> (or possibly <code>PolyMatrix</code>) is not important at this point but it is related to efficiency. A <code>Matrix</code> with integer entries will work well but its entries are SymPy <code>Integer</code>s. Using a <code>RawMatrix</code> with  Python <code>int</code>s is more efficient in computations.<pre><code><span class=\"keyword\">In</span> [<span class=\"number\">9</span>]: a, b = <span class=\"built_in\">Integer</span>(<span class=\"number\">2</span>), <span class=\"built_in\">Integer</span>(<span class=\"number\">3</span>)\n\n<span class=\"keyword\">In</span> [<span class=\"number\">10</span>]: %timeit a + b\n<span class=\"number\">100000</span> loops, best <span class=\"keyword\">of</span> <span class=\"number\">3</span>: <span class=\"number\">2.59</span> us per <span class=\"keyword\">loop</span>\n\n<span class=\"keyword\">In</span> [<span class=\"number\">12</span>]: c, d = <span class=\"number\">2</span>, <span class=\"number\">3</span>\n\n<span class=\"keyword\">In</span> [<span class=\"number\">13</span>]: %timeit c + d\n<span class=\"number\">10000000</span> loops, best <span class=\"keyword\">of</span> <span class=\"number\">3</span>: <span class=\"number\">69.3</span> ns per <span class=\"keyword\">loop</span></code></pre>",
  "id": "593281ad167d046a7d643643",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-03T09:30:21.210Z",
  "text": "The use of `RawMatrix` (or possibly `PolyMatrix`) is not important at this point but it is related to efficiency. A `Matrix` with integer entries will work well but its entries are SymPy `Integer`s. Using a `RawMatrix` with  Python `int`s is more efficient in computations.\n```\nIn [9]: a, b = Integer(2), Integer(3)\n\nIn [10]: %timeit a + b\n100000 loops, best of 3: 2.59 us per loop\n\nIn [12]: c, d = 2, 3\n\nIn [13]: %timeit c + d\n10000000 loops, best of 3: 69.3 ns per loop\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Is <code>us</code> meant to be microseconds? Because 100000 loops of 2.59 microseconds is 10000000 loops of 25.9 nanoseconds, and that&#39;s faster than <code>int</code>s. Unless I&#39;ve calculated it wrong",
  "id": "59340b82f2dd2dba066a6535",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-04T13:30:42.757Z",
  "text": "Is `us` meant to be microseconds? Because 100000 loops of 2.59 microseconds is 10000000 loops of 25.9 nanoseconds, and that's faster than `int`s. Unless I've calculated it wrong",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "100000 loops indicate the number of loops tested. It is bigger for faster  operations. Output is given for a single loop.",
  "id": "59340ec8f2dd2dba066a70a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-04T13:44:40.450Z",
  "text": "100000 loops indicate the number of loops tested. It is bigger for faster  operations. Output is given for a single loop.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The number of loops is chosen automatically so that the total test will take a few seconds.",
  "id": "59340f0dca6d4ae80cddd0e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-04T13:45:49.001Z",
  "text": "The number of loops is chosen automatically so that the total test will take a few seconds.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"valglad\" class=\"mention\">@valglad</span> I noticed on your blog that you have the comments set up incorrectly. Each post shares the same comments section instead of having their own individual comments <a href=\"https://valglad.github.io/2017/06/05/smith/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://valglad.github.io/2017/06/05/smith/</a>",
  "id": "5935de99a857b02c4791325d",
  "issues": [],
  "mentions": [
   {
    "screenName": "valglad",
    "userId": "5895bedcd73408ce4f480c49",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-05T22:43:37.263Z",
  "text": "@valglad I noticed on your blog that you have the comments set up incorrectly. Each post shares the same comments section instead of having their own individual comments https://valglad.github.io/2017/06/05/smith/",
  "unread": false,
  "urls": [
   {
    "url": "https://valglad.github.io/2017/06/05/smith/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Yes, I noticed this as well yesterday but it was already very late. Thanks for pointing it out anyway though. I&#39;ll try to sort it out as soon as I can.",
  "id": "5936aa4bf31c8ced0c0b404e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-06T13:12:43.914Z",
  "text": "Yes, I noticed this as well yesterday but it was already very late. Thanks for pointing it out anyway though. I'll try to sort it out as soon as I can.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> I fixed the comments, but your comment to the second post got deleted. Is that okay? If you&#39;d like it to be there, you could post again (I saved the exact wording in a text file just in case).",
  "id": "5936eaad6462d8493ce78703",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-06T17:47:25.003Z",
  "text": "@asmeurer I fixed the comments, but your comment to the second post got deleted. Is that okay? If you'd like it to be there, you could post again (I saved the exact wording in a text file just in case).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I figured my comment would end up being deleted. It&#39;s not a big deal",
  "id": "5936fffa2315aeb90c97951f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-06T19:18:18.310Z",
  "text": "I figured my comment would end up being deleted. It's not a big deal",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> I think I might want to use the <code>subgroup</code> method for the infinity test I&#39;m writing now. As I&#39;ve explained in the blog, the idea is to find a cyclic subgroup with a finite index (by trying some pseudorandom words). And once I find one, I need to be able to determine the order of the cyclic subgroup itself. I could just use <code>reidemeister_presentation</code> if I were sure that the presentation would necessarily be on one generator. But the presentation can be redundant, so I&#39;d probably want to make it into a group and run <code>order</code> on it which would hopefully get rid of the redundant generators through the finite index subgroup search. Besides, the improvements to simplification techniques might be useful here too (in case they give better presentations for cyclic groups).</p><p>Alternatively, I could just use <code>reidemeister_presentation</code> and not try to deal with the case where the cyclic group presentation is redundant, and then change it when the <code>subgroup</code> pr is merged.</p>",
  "id": "5937ea0831f589c64f82e790",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-07T11:56:56.394Z",
  "text": "@jksuom I think I might want to use the `subgroup` method for the infinity test I'm writing now. As I've explained in the blog, the idea is to find a cyclic subgroup with a finite index (by trying some pseudorandom words). And once I find one, I need to be able to determine the order of the cyclic subgroup itself. I could just use `reidemeister_presentation` if I were sure that the presentation would necessarily be on one generator. But the presentation can be redundant, so I'd probably want to make it into a group and run `order` on it which would hopefully get rid of the redundant generators through the finite index subgroup search. Besides, the improvements to simplification techniques might be useful here too (in case they give better presentations for cyclic groups).\n\nAlternatively, I could just use `reidemeister_presentation` and not try to deal with the case where the cyclic group presentation is redundant, and then change it when the `subgroup` pr is merged.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-07T12:34:34.542Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "If you have a presentation of a cyclic subgroup, would the existence of a parent help in its simplification? (I&#39;m unclear about the utility of the <code>parent</code> attribute.)",
  "id": "5937f25f6462d8493cebd711",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-07T12:32:31.467Z",
  "text": "If you have a presentation of a cyclic subgroup, would the existence of a parent help in its simplification? (I'm unclear about the utility of the `parent` attribute.)",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "It was mainly to implement a basic <code>is_subgroup</code> method. I guess ultimately it should be done through homomorphisms. I&#39;m not sure if it would help in simplification any further than the simplifications already done by <code>reidemeister_presentation</code>. Especially considering that the the subgroup has different generators from.",
  "id": "5937f9d0f2dd2dba067a32fd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-07T13:04:16.354Z",
  "text": "It was mainly to implement a basic `is_subgroup` method. I guess ultimately it should be done through homomorphisms. I'm not sure if it would help in simplification any further than the simplifications already done by `reidemeister_presentation`. Especially considering that the the subgroup has different generators from.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I also think that the proper way to deal with subgroups is via homomorphisms. So it seems to me that what you would need now is just the fp_group given by <code>reidemeister_presentation</code>, i.e., generators and relators, no parent. That is what the subgroup pr could provide. I think that we could omit the parent attribute now. It can be added later if necessary. ",
  "id": "5938073df2dd2dba067a78cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-07T14:01:33.117Z",
  "text": "I also think that the proper way to deal with subgroups is via homomorphisms. So it seems to me that what you would need now is just the fp_group given by `reidemeister_presentation`, i.e., generators and relators, no parent. That is what the subgroup pr could provide. I think that we could omit the parent attribute now. It can be added later if necessary. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Sure, I&#39;ll remove it then",
  "id": "593825b2f2dd2dba067b195b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-07T16:11:30.325Z",
  "text": "Sure, I'll remove it then",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I guess I should follow the deprecation policy for <code>has_Field</code> and <code>has_Ring</code>. How is it done for attributes? Is it the same as for methods and functions, just adding <code>@deprecated</code> before the line where the attribute is defined?",
  "id": "5938417131f589c64f84be09",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-07T18:09:53.928Z",
  "text": "I guess I should follow the deprecation policy for `has_Field` and `has_Ring`. How is it done for attributes? Is it the same as for methods and functions, just adding `@deprecated` before the line where the attribute is defined?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems that <code>@deprecated</code> is designed to work with functions. It should then also work with <code>@property</code>.  So, you could change the attribute <code>has_Ring</code> to a property returning <code>self.is_Ring</code> (in <code>class Domain</code> where it is first defined). Then <code>@deprecated</code> could probably be added. (I haven&#39;t tried this, however.)",
  "id": "59384ac06462d8493ced9ddc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-07T18:49:36.432Z",
  "text": "It seems that `@deprecated` is designed to work with functions. It should then also work with `@property`.  So, you could change the attribute `has_Ring` to a property returning `self.is_Ring` (in `class Domain` where it is first defined). Then `@deprecated` could probably be added. (I haven't tried this, however.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "About meetings on this channel. I think that it is generally more efficient to take up a question or an issue here whenever it turns up instead of waiting for a fixed weekly meeting time.",
  "id": "59385876e531dbc905beb7cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-07T19:48:06.128Z",
  "text": "About meetings on this channel. I think that it is generally more efficient to take up a question or an issue here whenever it turns up instead of waiting for a fixed weekly meeting time.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Yes, that makes sense. Also, adding a function with <code>@property</code> sounds like it would work",
  "id": "59386d627503e2b7061f4a54",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-07T21:17:22.707Z",
  "text": "Yes, that makes sense. Also, adding a function with `@property` sounds like it would work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/debugger22",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2821646?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2821646?v=4&s=60",
   "displayName": "Sudhanshu Mishra",
   "gv": "4",
   "id": "53144a245e986b0712efc536",
   "url": "/debugger22",
   "username": "debugger22",
   "v": 10
  },
  "html": "It&#39;ll work",
  "id": "5938e144e531dbc905c09330",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-08T05:31:48.323Z",
  "text": "It'll work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "In <span data-link-type=\"issue\" data-issue=\"12705\" class=\"issue\">#12705</span> (the smith-normal pr) some of the tests exit with an error because of the deprecation warning (only in python3 for some reason). There is a function <code>check</code> defined at the beginning of the file which, well, checks things, in particular attributes. Not sure how to fix it. I suppose running <code>check()</code> with <code>check_attr = False</code> for domains might work, because then it won&#39;t try to check attributes at all. Should I do that or is there a better way?",
  "id": "59395f47f2dd2dba06800cdf",
  "issues": [
   {
    "number": "12705"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-08T14:29:27.155Z",
  "text": "In #12705 (the smith-normal pr) some of the tests exit with an error because of the deprecation warning (only in python3 for some reason). There is a function `check` defined at the beginning of the file which, well, checks things, in particular attributes. Not sure how to fix it. I suppose running `check()` with `check_attr = False` for domains might work, because then it won't try to check attributes at all. Should I do that or is there a better way?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Which file is that and which deprecation warning?",
  "id": "593961497503e2b70622ef88",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-08T14:38:01.181Z",
  "text": "Which file is that and which deprecation warning?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "If that is <code>test_pickling</code>, then I guess <code>check_attr=False</code> is the way to go.",
  "id": "59396b3dcf9c13503c67a891",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-08T15:20:29.193Z",
  "text": "If that is `test_pickling`, then I guess `check_attr=False` is the way to go.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Sorry, I was going to mention that it was <code>test_pickling</code>. I&#39;ll do that then.",
  "id": "59397806f31c8ced0c177c9d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-08T16:15:02.977Z",
  "text": "Sorry, I was going to mention that it was `test_pickling`. I'll do that then.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "We should wait a little to see what <span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> has to say. He&#39;ll probably take a look a this.",
  "id": "5939790a6462d8493cf24384",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-08T16:19:22.904Z",
  "text": "We should wait a little to see what @asmeurer has to say. He'll probably take a look a this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It would be better if there were a separate PR for the <code>has_</code> to <code>is_</code> changes. It is logically independent of groups.",
  "id": "593991fcca6d4ae80cf4a7dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-08T18:05:48.644Z",
  "text": "It would be better if there were a separate PR for the `has_` to `is_` changes. It is logically independent of groups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Do you suggest I change <code>is_</code> back to <code>has_</code> in the smith-normal PR and send another one with <code>has_</code> to <code>is_</code>?",
  "id": "593995d8142826e97297666d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-08T18:22:16.050Z",
  "text": "Do you suggest I change `is_` back to `has_` in the smith-normal PR and send another one with `has_` to `is_`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I was thinking of the possibility of separating commits involving those changes to another branch that could be merged separately. The commits could also be left in the smith-normal branch.",
  "id": "593996f3ca6d4ae80cf4bf17",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-08T18:26:59.846Z",
  "text": "I was thinking of the possibility of separating commits involving those changes to another branch that could be merged separately. The commits could also be left in the smith-normal branch.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Do you know how to do that with git?",
  "id": "5939a0fb6549436c7d2bf39f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-08T19:09:47.628Z",
  "text": "Do you know how to do that with git?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-08T19:18:07.972Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "You could start by taking a copy of smith-normal branch with another name: <code>git checkout -b change-has-to-is</code>. Then reset the index to the state before the first commit. I think that would be <code>git reset  HEAD~7</code>. The edited files will remain in the working tree. Then add and commit only those (polys) files that have to do with the change.",
  "id": "5939a2da02c480e67225eac6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-08T19:17:46.218Z",
  "text": "You could start by taking a copy of smith-normal branch with another name: `git checkout -b change-has-to-is`. Then reset the index to the state before the first commit. I think that would be `git reset  HEAD~7`. The edited files will remain in the working tree. Then add and commit only those (polys) files that have to do with the change.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Okay, I&#39;ll try. I haven&#39;t done this before but I can google it for details if necessary",
  "id": "5939ac257503e2b70624549e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-08T19:57:25.724Z",
  "text": "Okay, I'll try. I haven't done this before but I can google it for details if necessary",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Does it matter if <code>is_PID</code> is going to be in that PR as well?",
  "id": "5939b05cf2dd2dba06818ba2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-08T20:15:24.715Z",
  "text": "Does it matter if `is_PID` is going to be in that PR as well?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I would keep just the deprecation in a separate pr ",
  "id": "5939b0d8df471bc51c36cab5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-08T20:17:28.337Z",
  "text": "I would keep just the deprecation in a separate pr ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Unless it depends on those other things ",
  "id": "5939b0dedf471bc51c36cab7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-08T20:17:34.702Z",
  "text": "Unless it depends on those other things ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Okay, I&#39;ll just remove <code>is_PID</code> from some of the files that also contain deprecation",
  "id": "5939b15aca6d4ae80cf53fe2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-08T20:19:38.630Z",
  "text": "Okay, I'll just remove `is_PID` from some of the files that also contain deprecation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "How does one add a label to an issue?",
  "id": "593a9c0ee531dbc905c7acaf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-09T13:01:02.728Z",
  "text": "How does one add a label to an issue?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I did that. You just open the label menu and pick a label.",
  "id": "593aa274e531dbc905c7c8ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-09T13:28:20.185Z",
  "text": "I did that. You just open the label menu and pick a label.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-09T13:37:38.997Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "But you could add a line saying that the pickling test was temporarily modified. The tests that were modified could also be enumerated.",
  "id": "593aa2aee531dbc905c7ca07",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-09T13:29:18.072Z",
  "text": "But you could add a line saying that the pickling test was temporarily modified. The tests that were modified could also be enumerated.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "one of the tests for the smith-normal pr timed out",
  "id": "593ab940e531dbc905c83d61",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-09T15:05:36.244Z",
  "text": "one of the tests for the smith-normal pr timed out",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "After merging the deprecation pr there are now conflicts in the smith-normal pr. It should be synchronized with master. See <a href=\"https://github.com/sympy/sympy/wiki/Development-workflow#id51\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/wiki/Development-workflow#id51</a> (Synchronize with master sympy/sympy). More specifically, I think that merging (<a href=\"https://github.com/sympy/sympy/wiki/Development-workflow#id52\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/wiki/Development-workflow#id52</a>) plus possibly some editing would do it.",
  "id": "593ae3437503e2b706291eeb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-09T18:04:51.530Z",
  "text": "After merging the deprecation pr there are now conflicts in the smith-normal pr. It should be synchronized with master. See https://github.com/sympy/sympy/wiki/Development-workflow#id51 (Synchronize with master sympy/sympy). More specifically, I think that merging (https://github.com/sympy/sympy/wiki/Development-workflow#id52) plus possibly some editing would do it.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/wiki/Development-workflow#id51"
   },
   {
    "url": "https://github.com/sympy/sympy/wiki/Development-workflow#id52"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>Done that.<br>Regarding the search for finite index subgroups. I had a look at what GAP does, and it seems to try cyclic subgroups generated by  each of the group&#39;s generators and one pseudo-random element. To be more specific, first it tries the generator most frequently occurring in the relators, then a pseudo-random element and then the rest of the generators. It seems a bit strange that there is just one pseudo-random element in the list. I guess that they had some justification for it but I haven&#39;t yet found an explanation.</p><p>Also, I think I would still like to use <code>.subgroup()</code>. I guess I could copy the code from that PR to make a group out of the output of <code>reidemeister_presentation()</code>. Or I could commit to the same branch. What do you think?</p>",
  "id": "593b0024f6a78eab4832c683",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-09T20:08:04.260Z",
  "text": "Done that.\nRegarding the search for finite index subgroups. I had a look at what GAP does, and it seems to try cyclic subgroups generated by  each of the group's generators and one pseudo-random element. To be more specific, first it tries the generator most frequently occurring in the relators, then a pseudo-random element and then the rest of the generators. It seems a bit strange that there is just one pseudo-random element in the list. I guess that they had some justification for it but I haven't yet found an explanation.\n\nAlso, I think I would still like to use `.subgroup()`. I guess I could copy the code from that PR to make a group out of the output of `reidemeister_presentation()`. Or I could commit to the same branch. What do you think?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think the subgroup pr could be merged if that would help. It also contains some other small modifications. It is generally better if different kinds of patches are in different pr&#39;s. I&#39;ll look into the subgroup pr tomorrow  to see if it would be convenient to merge it now. As to the finite index subgroups, the strategy you choose does probably not matter too much. That is something that should not be hard to modify later if that would prove useful.",
  "id": "593b03656549436c7d317816",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-09T20:21:57.623Z",
  "text": "I think the subgroup pr could be merged if that would help. It also contains some other small modifications. It is generally better if different kinds of patches are in different pr's. I'll look into the subgroup pr tomorrow  to see if it would be convenient to merge it now. As to the finite index subgroups, the strategy you choose does probably not matter too much. That is something that should not be hard to modify later if that would prove useful.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Cool, thanks",
  "id": "593b072b31f589c64f900fda",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-09T20:38:03.882Z",
  "text": "Cool, thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "If I change <code>._relators</code> to <code>.relators</code>, should it go through deprecation as well?",
  "id": "593c76bbf6a78eab48378c3a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-10T22:46:19.874Z",
  "text": "If I change `._relators` to `.relators`, should it go through deprecation as well?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I don&#39;t think you can add labels unless you have push access unfortunately ",
  "id": "593cc2a96e5a468a2fede3a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-11T04:10:17.462Z",
  "text": "I don't think you can add labels unless you have push access unfortunately ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I don&#39;t think deprecation would be necessary since fp_groups has not been officially released yet.",
  "id": "593cd7edca6d4ae80c006b29",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-11T05:41:01.290Z",
  "text": "I don't think deprecation would be necessary since fp_groups has not been officially released yet.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"12732\" class=\"issue\">#12732</span> had several tests time out. Shouldn&#39;t be related to the change in attributes",
  "id": "593da57ccf9c13503c771a8d",
  "issues": [
   {
    "number": "12732"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-11T20:18:04.220Z",
  "text": "#12732 had several tests time out. Shouldn't be related to the change in attributes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It shouldn&#39;t be related. Split 1/4 has grown too large.",
  "id": "593da618ca6d4ae80c03548f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-11T20:20:40.950Z",
  "text": "It shouldn't be related. Split 1/4 has grown too large.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I&#39;ll restart your jobs after <span data-link-type=\"issue\" data-issue=\"12728\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#12728</span> gets merged.",
  "id": "593da73b02c480e6723423ef",
  "issues": [
   {
    "number": "12728",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-11T20:25:31.584Z",
  "text": "I'll restart your jobs after https://github.com/sympy/sympy/pull/12728 gets merged.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "You should probably then synchronize with master to make the test changes effective.",
  "id": "593da7cf31f589c64f98b8cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-11T20:27:59.940Z",
  "text": "You should probably then synchronize with master to make the test changes effective.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "You mean synchronize after that PR gets merged?",
  "id": "593da9ee7503e2b7063261e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-11T20:37:02.203Z",
  "text": "You mean synchronize after that PR gets merged?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Yes.",
  "id": "593e222b31f589c64f9a4ab1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-12T05:10:03.954Z",
  "text": "Yes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I have restarted the split 1/4 tests. If they pass, synchronization may not be necessary.",
  "id": "593e268731f589c64f9a59ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-12T05:28:39.591Z",
  "text": "I have restarted the split 1/4 tests. If they pass, synchronization may not be necessary.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "They did pass. I&#39;ve merged the fp_groups attribute PR. You may have to synchronize <span data-link-type=\"issue\" data-issue=\"12658\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#12658</span> with master.",
  "id": "593e5b18e531dbc905d4ebcf",
  "issues": [
   {
    "number": "12658",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-12T09:12:56.032Z",
  "text": "They did pass. I've merged the fp_groups attribute PR. You may have to synchronize https://github.com/sympy/sympy/pull/12658 with master.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Travis has a long queue and is also unusually sluggish. I&#39;ll try to get the subgroup PR merged tomorrow.",
  "id": "593edadbd83c50560cffd45e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-12T18:18:03.100Z",
  "text": "Travis has a long queue and is also unusually sluggish. I'll try to get the subgroup PR merged tomorrow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Okay, I&#39;ll send the PR with a search for finite index cyclic subgroups on Wednesday then (my exams started today so I&#39;m going to take longer to do things this week).",
  "id": "593eefc3f31c8ced0c2bff2f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-06-12T19:47:15.946Z",
  "text": "Okay, I'll send the PR with a search for finite index cyclic subgroups on Wednesday then (my exams started today so I'm going to take longer to do things this week).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>Now that I&#39;ve actually run some tests, I realised that reidemeister presentation can take ages in some simple cases. E.g. I was trying to do this:</p><pre><code>&gt;&gt;&gt; F, a, b, c = free_group(<span class=\"string\">\"a, b, c\"</span>)\n&gt;&gt;&gt; f = FpGroup(F, [a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>11, b<span class=\"keyword\">*</span><span class=\"keyword\">*</span>5, c<span class=\"keyword\">*</span><span class=\"keyword\">*</span>4, (b<span class=\"keyword\">*</span>c<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2)<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2, (a<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span>c)<span class=\"keyword\">*</span><span class=\"keyword\">*</span>3, (a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>4<span class=\"keyword\">*</span>c<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2)<span class=\"keyword\">*</span><span class=\"keyword\">*</span>3, b<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2<span class=\"keyword\">*</span>c<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>c, a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>4<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>b])\n&gt;&gt; f.subgroup([b])</code></pre><p>And the index of the subgroup generated by <code>b</code> is more than a thousand so when <code>reidemeister_presentation</code> defines relators, it works with around 10,000 to start with. The presentation, however, is just <code>&lt;b | b**5&gt;</code> which can be seen from the relators. Theoretically <code>b</code> could have been the identity but substituting that into the relators gives a trivial group. So in fact, because the subgroup presentation takes so long, it would be much more efficient to just do coset enumeration in this case. However, for smaller groups the finding finite index cyclic subgroup approach does work and can show infinity in some cases. I&#39;m wondering how to fix it. Maybe I should search for smaller finite index. I wonder if the low index subgroups algorithm could be helpful here</p>",
  "id": "5941a160f31c8ced0c378aba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-06-14T20:49:36.159Z",
  "text": "Now that I've actually run some tests, I realised that reidemeister presentation can take ages in some simple cases. E.g. I was trying to do this:\n```\n>>> F, a, b, c = free_group(\"a, b, c\")\n>>> f = FpGroup(F, [a**11, b**5, c**4, (b*c**2)**2, (a*b*c)**3, (a**4*c**2)**3, b**2*c**-1*b**-1*c, a**4*b**-1*a**-1*b])\n>> f.subgroup([b])\n```\nAnd the index of the subgroup generated by `b` is more than a thousand so when `reidemeister_presentation` defines relators, it works with around 10,000 to start with. The presentation, however, is just `<b | b**5>` which can be seen from the relators. Theoretically `b` could have been the identity but substituting that into the relators gives a trivial group. So in fact, because the subgroup presentation takes so long, it would be much more efficient to just do coset enumeration in this case. However, for smaller groups the finding finite index cyclic subgroup approach does work and can show infinity in some cases. I'm wondering how to fix it. Maybe I should search for smaller finite index. I wonder if the low index subgroups algorithm could be helpful here",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<code>low_index_subgroups</code> also takes a long time. I&#39;m just going  to apply the finite index method if the index is &quot;sufficiently small&quot;, and otherwise use coset enumeration with <code>[]</code>. I think there is a way to calculate the order of a generator during the coset enumeration by its cyclic subgroup, without having to find its presentation, but I can&#39;t figure out what it is or find some explanation of it.",
  "id": "59452751caf4d68d6f431362",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-17T12:57:53.246Z",
  "text": "`low_index_subgroups` also takes a long time. I'm just going  to apply the finite index method if the index is \"sufficiently small\", and otherwise use coset enumeration with `[]`. I think there is a way to calculate the order of a generator during the coset enumeration by its cyclic subgroup, without having to find its presentation, but I can't figure out what it is or find some explanation of it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I suspect that the long time is unavoidable, at least with bigger examples. But I don&#39;t think we can ever compete with GAP in those areas. An implementation working with relatively small groups would be quite satisfactory for now.",
  "id": "59452942e531dbc905f16594",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-06-17T13:06:10.556Z",
  "text": "I suspect that the long time is unavoidable, at least with bigger examples. But I don't think we can ever compete with GAP in those areas. An implementation working with relatively small groups would be quite satisfactory for now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The order PR looks good. It seems that <code>order</code> calls itself recursively quite often, also with subgroups of index 1. Would it make sense to try another random subgroup in such cases?",
  "id": "594663b26462d8493c242971",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-18T11:27:46.302Z",
  "text": "The order PR looks good. It seems that `order` calls itself recursively quite often, also with subgroups of index 1. Would it make sense to try another random subgroup in such cases?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I did originally have a check in <code>_finite_index_subgroup()</code> that would search further if the index was 1 and then one of the doctests exceeded recursion depth. Then I realised that in some cases, for example, cyclic group of prime order, it wouldn&#39;t terminate. I thought I avoided this issue by considering the one generator case separately in <code>order</code> but one could theoretically write a redundant presentation on two generators which in fact turn out to be equal to each other. The only potential way around it that I can think of is to slightly modify <code>simplify_presentation</code> and elimination techniques so that they could work on any presentation not just as part of <code>reidemeister_presentation</code>. Then simplify the group&#39;s presentation before running <code>order</code> and get rid of the redundant generators. I guess this is essentially what&#39;s happening currently when <code>.subgroup</code> returns an isomorphic copy of the original group.",
  "id": "5946cc56f6a78eab485f2313",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-18T18:54:14.424Z",
  "text": "I did originally have a check in `_finite_index_subgroup()` that would search further if the index was 1 and then one of the doctests exceeded recursion depth. Then I realised that in some cases, for example, cyclic group of prime order, it wouldn't terminate. I thought I avoided this issue by considering the one generator case separately in `order` but one could theoretically write a redundant presentation on two generators which in fact turn out to be equal to each other. The only potential way around it that I can think of is to slightly modify `simplify_presentation` and elimination techniques so that they could work on any presentation not just as part of `reidemeister_presentation`. Then simplify the group's presentation before running `order` and get rid of the redundant generators. I guess this is essentially what's happening currently when `.subgroup` returns an isomorphic copy of the original group.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I thought that you might have experimented with different implementations and found that the runtime stack of the interpreter is of limited size. Anyway, it looks like the current one is practical. Even if we may have an improper subgroup isomorphic to the whole group, it has different generators and that may help to find new subgroups.",
  "id": "5946cf2902c480e672582d8c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-18T19:06:17.931Z",
  "text": "I thought that you might have experimented with different implementations and found that the runtime stack of the interpreter is of limited size. Anyway, it looks like the current one is practical. Even if we may have an improper subgroup isomorphic to the whole group, it has different generators and that may help to find new subgroups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems that there are again merge conflicts in the elimination PR. I should probably have merged that before the order PR, sorry. Could you synchronize it again.",
  "id": "594770b6f6a78eab486158a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-19T06:35:34.345Z",
  "text": "It seems that there are again merge conflicts in the elimination PR. I should probably have merged that before the order PR, sorry. Could you synchronize it again.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Sure",
  "id": "5947ad9f6549436c7d60d0ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-19T10:55:27.872Z",
  "text": "Sure",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Are the two PRs on elimination and Smith normal form independent? Does it matter which one is merged first?",
  "id": "5948114402c480e6725d9b13",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-19T18:00:36.715Z",
  "text": "Are the two PRs on elimination and Smith normal form independent? Does it matter which one is merged first?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I think they are independent. If not, resolving conflicts is not much trouble",
  "id": "59481c2ac98bc6d56383b800",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-19T18:47:06.260Z",
  "text": "I think they are independent. If not, resolving conflicts is not much trouble",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Ok. The normal form PR passed the checks. I&#39;ll merge it now.",
  "id": "59481c4bcf9c13503ca0aac9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-19T18:47:39.681Z",
  "text": "Ok. The normal form PR passed the checks. I'll merge it now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I&#39;m writing the class for group homomorphisms and I&#39;m roughly following the layout of the module homomorphism in <code>sympy.polys.agca.homomorphisms</code>. Module homomorphisms are meant to be instantiated with a function <code>homomorphism()</code>, rather than directly. I think that would make sense for group homomorphisms too. But if I create a function with the same name in a different module, it would probably create conflicts in some cases. So I&#39;m a bit unsure. Should I just call it something different, like <code>group_homomorphism()</code> (though it&#39;s a bit long)?",
  "id": "594aa6be6462d8493c376f16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-21T17:02:54.406Z",
  "text": "I'm writing the class for group homomorphisms and I'm roughly following the layout of the module homomorphism in `sympy.polys.agca.homomorphisms`. Module homomorphisms are meant to be instantiated with a function `homomorphism()`, rather than directly. I think that would make sense for group homomorphisms too. But if I create a function with the same name in a different module, it would probably create conflicts in some cases. So I'm a bit unsure. Should I just call it something different, like `group_homomorphism()` (though it's a bit long)?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I&#39;m not sure which name would be preferred. In principle, it should be possible to proceed by defining eventually a function that would examine the arguments and pass the control to a suitable module. Another possibility could be <code>group_morphism()</code> (like in category theory).",
  "id": "594aaaf3a44c60fa4c4c1ad5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-21T17:20:51.758Z",
  "text": "I'm not sure which name would be preferred. In principle, it should be possible to proceed by defining eventually a function that would examine the arguments and pass the control to a suitable module. Another possibility could be `group_morphism()` (like in category theory).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "how compatible will the two be? Will it be possible to use a single function, that does the right thing based on input?",
  "id": "594ab304de4ce6a50ce0a4cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-21T17:55:16.127Z",
  "text": "how compatible will the two be? Will it be possible to use a single function, that does the right thing based on input?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "A single function could probably be implemented, but I think I&#39;d rather prefer different functions, at least for the present.",
  "id": "594ab393bf1bfe6770d697f4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-21T17:57:39.239Z",
  "text": "A single function could probably be implemented, but I think I'd rather prefer different functions, at least for the present.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "OTOH if the two are completely incompatible, then they will rarely be imported in the same namespace ",
  "id": "594ab3c8ada49d7f5aa191b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-21T17:58:32.185Z",
  "text": "OTOH if the two are completely incompatible, then they will rarely be imported in the same namespace ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "so they could share the same name ",
  "id": "594ab3d13e8cd27b5bede284",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-21T17:58:41.342Z",
  "text": "so they could share the same name ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Yes, that is probably true. And if both are needed, then one could be imported <code>as something</code>.",
  "id": "594ab446a44c60fa4c4c458b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-21T18:00:38.040Z",
  "text": "Yes, that is probably true. And if both are needed, then one could be imported `as something`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "So, I guess the name could be <code>homomorphism</code> for now.",
  "id": "594ab88acf9c13503cad5a2e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-21T18:18:50.248Z",
  "text": "So, I guess the name could be `homomorphism` for now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Okay, I&#39;ll leave it as <code>homomorphism</code> then. Thanks.",
  "id": "594b01da5bf0bef94cce17eb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-21T23:31:38.334Z",
  "text": "Okay, I'll leave it as `homomorphism` then. Thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I&#39;d like to write a <code>__contains__</code> method for <code>FpGroup</code>s. I need it in some places for homomorphisms, in particular I need to test if an element belongs to a subgroup. But subgroups created by the <code>subgroup()</code> method are on different generators from the original group. I could probably get around that by saving the coset table of the original group by the subgroup in some new attribute (e.g. <code>_subgroup_table</code>) and seeing if the element is in the stabilizer. What I was wondering is this. Suppose <code>G</code> is the original group, <code>H</code> is its subgroup and <code>K</code> is the subgroup of <code>H</code>. Should it be possible to check an element of <code>G</code> for membership in <code>K</code> directly?",
  "id": "594f9d3f703e565c333fad03",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-25T11:23:43.062Z",
  "text": "I'd like to write a `__contains__` method for `FpGroup`s. I need it in some places for homomorphisms, in particular I need to test if an element belongs to a subgroup. But subgroups created by the `subgroup()` method are on different generators from the original group. I could probably get around that by saving the coset table of the original group by the subgroup in some new attribute (e.g. `_subgroup_table`) and seeing if the element is in the stabilizer. What I was wondering is this. Suppose `G` is the original group, `H` is its subgroup and `K` is the subgroup of `H`. Should it be possible to check an element of `G` for membership in `K` directly?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-25T12:45:53.326Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I would consider elements <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">g</span></span></span></span> of a group <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">G</span></span></span></span> and any of its subgroups <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span></span></span></span> (of type <code>FpGroup</code>) as different objects connected only by the canonical injection homomorphism <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>i</mi><mo>:</mo><mi>H</mi><mo>\u2192</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">i: H \\to G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">i</span><span class=\"mrel\">:</span><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span><span class=\"mrel\">\u2192</span><span class=\"mord mathit\">G</span></span></span></span>. So I think that <code>g in H</code> should not be used. Instead we could have something like  <code>g in image(i)</code> where <code>image(i)</code> would belong to a &#39;subgroup&#39; class having its generators and the supergroup (but no relators) as attributes. That would be different from the subgroup implemented now as <code>FpGroup</code>, and it could probably also have a <code>__contains__</code> method.",
  "id": "594fb045ad9c7818439a4f0c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-25T12:44:53.435Z",
  "text": "I would consider elements $$g$$ of a group $$G$$ and any of its subgroups $$H$$ (of type `FpGroup`) as different objects connected only by the canonical injection homomorphism $$i: H \\to G$$. So I think that `g in H` should not be used. Instead we could have something like  `g in image(i)` where `image(i)` would belong to a 'subgroup' class having its generators and the supergroup (but no relators) as attributes. That would be different from the subgroup implemented now as `FpGroup`, and it could probably also have a `__contains__` method.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "So you suggest I should create a separate group class for managing <code>FpGroup</code> subgroups?",
  "id": "594fb2d18dae425031508ec5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-25T12:55:45.935Z",
  "text": "So you suggest I should create a separate group class for managing `FpGroup` subgroups?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Also, an unrelated question. Permutations have an <code>is_Identity</code> attribute and <code>FreeGroupElement</code>s equivalent is <code>is_identity</code>. It would be better if it was more consistent. Do you think it&#39;s worth deprecating one of them?",
  "id": "594fb3d64bcd78af56431b20",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-25T13:00:06.431Z",
  "text": "Also, an unrelated question. Permutations have an `is_Identity` attribute and `FreeGroupElement`s equivalent is `is_identity`. It would be better if it was more consistent. Do you think it's worth deprecating one of them?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think there is no pressing need to deprecate one of those as long as permutation groups and fp-groups are treated separately, but maybe that should be done eventually. I suggest that a separate proper subgroup class could be defined, if that would be helpful. But I cannot tell before I hear a bit more of your plans.",
  "id": "594fb7473230e14f3af2251b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-25T13:14:47.411Z",
  "text": "I think there is no pressing need to deprecate one of those as long as permutation groups and fp-groups are treated separately, but maybe that should be done eventually. I suggest that a separate proper subgroup class could be defined, if that would be helpful. But I cannot tell before I hear a bit more of your plans.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>Yes, I&#39;ll try to write more about my plans in the blog tonight. With <code>is_Identity</code> and <code>is_identity</code> I just found it a bit inconvenient to have to split into cases when I had to check if the relators are mapped to the identity (to make sure that a homomorphism is well-defined). But it&#39;s much of a problem.</p><p>Subgroup membership checking I mostly need for computing the kernel. It&#39;s the only tricky bit in the implementation and at the moment the only way I can see to do it is to generate a random element <code>g</code>, compute its inverse under the homomorphism <code>h</code>, check if g<em>h*</em>-1 is in the current &quot;kernel&quot; and, if not, add is as a generator, and continue like this until the size of the kernel times the size of the image is the size of the domain group. Would only work for finite groups, of course, but it&#39;s better than nothing. Still thinking how to partially extend it to infinite groups (I suppose no general method exists). Also, when computing an inverse of an element, we need to make sure it&#39;s in the image.</p>",
  "id": "594fbbb6c101bc4e3a1bdc6b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-25T13:33:42.694Z",
  "text": "Yes, I'll try to write more about my plans in the blog tonight. With `is_Identity` and `is_identity` I just found it a bit inconvenient to have to split into cases when I had to check if the relators are mapped to the identity (to make sure that a homomorphism is well-defined). But it's much of a problem.\n\nSubgroup membership checking I mostly need for computing the kernel. It's the only tricky bit in the implementation and at the moment the only way I can see to do it is to generate a random element `g`, compute its inverse under the homomorphism `h`, check if g*h**-1 is in the current \"kernel\" and, if not, add is as a generator, and continue like this until the size of the kernel times the size of the image is the size of the domain group. Would only work for finite groups, of course, but it's better than nothing. Still thinking how to partially extend it to infinite groups (I suppose no general method exists). Also, when computing an inverse of an element, we need to make sure it's in the image.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "*it&#39;s <em>not</em> much of a problem",
  "id": "594fbbd58dae42503150b7b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-25T13:34:13.539Z",
  "text": "*it's _not_ much of a problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "If you&#39;d prefer <code>is_identity</code> (as I do), you could probably add an <code>is_identity</code> simply calling <code>is_Identity</code> to permutation groups.",
  "id": "594fc52e76a757f808a3b13d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-25T14:14:06.415Z",
  "text": "If you'd prefer `is_identity` (as I do), you could probably add an `is_identity` simply calling `is_Identity` to permutation groups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Yes, I was thinking of doing that.",
  "id": "594fc564703e565c33404cad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-25T14:15:00.421Z",
  "text": "Yes, I was thinking of doing that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It sounds like the &quot;kernel&quot; could also be an object of the subgroup class.",
  "id": "594fc67b8dae42503150e1c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-25T14:19:39.114Z",
  "text": "It sounds like the \"kernel\" could also be an object of the subgroup class.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I think it would make sense to send the homomorphism PR before the rewriting systems after all. At the moment it works as it should only for homomorphisms from FpGroups to PemutationGroups and raises <code>NotImplementedError</code> for other cases, but it could be easier to start reviewing it now. The things that are going to change once I implement the rewriting will be minor anyway. Does that sound like a good plan?",
  "id": "59524de8ad9c781843a5ae0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-27T12:22:00.821Z",
  "text": "I think it would make sense to send the homomorphism PR before the rewriting systems after all. At the moment it works as it should only for homomorphisms from FpGroups to PemutationGroups and raises `NotImplementedError` for other cases, but it could be easier to start reviewing it now. The things that are going to change once I implement the rewriting will be minor anyway. Does that sound like a good plan?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I have only a vague idea of how you are planning to implement the homomorphisms. Seeing a PR, even incomplete, would help.",
  "id": "59525a4cad9c781843a5ef9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-27T13:14:52.705Z",
  "text": "I have only a vague idea of how you are planning to implement the homomorphisms. Seeing a PR, even incomplete, would help.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I&#39;ll send it by tomorrow morning. I was planning on earlier today but suddenly found an annoying bug in the implementation that I&#39;m sorting out now",
  "id": "59529b224bcd78af565007e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-27T17:51:30.627Z",
  "text": "I'll send it by tomorrow morning. I was planning on earlier today but suddenly found an annoying bug in the implementation that I'm sorting out now",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>It&#39;s taking far more time than I thought and I ended up implementing a new thing for permutation groups and trying to get it working. I think I&#39;m almost done but I&#39;ve been working for a while now and thinking is becoming hard so I reckon it would be best to leave it till tomorrow. Which means that I&#39;ll send the PR tomorrow afternoon at best.</p><p>The &quot;new thing&quot; is setting up permutation groups to give a presentation of an arbitrary element as a product of its strong generators. Conceptually not hard but very fiddly (as it turned out), have to keep track of things during <code>schreier_sims()</code>.</p>",
  "id": "5952f399ad9c781843a8fb2a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-28T00:08:57.725Z",
  "text": "It's taking far more time than I thought and I ended up implementing a new thing for permutation groups and trying to get it working. I think I'm almost done but I've been working for a while now and thinking is becoming hard so I reckon it would be best to leave it till tomorrow. Which means that I'll send the PR tomorrow afternoon at best.\n\nThe \"new thing\" is setting up permutation groups to give a presentation of an arbitrary element as a product of its strong generators. Conceptually not hard but very fiddly (as it turned out), have to keep track of things during `schreier_sims()`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Done. I did it all on one branch but now I&#39;m thinking that it would probably make more sense to split things a bit, e.g. the permutation groups SLP stuff could be a decently-sized PR of its own.",
  "id": "5953c2b23230e14f3a03cce1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-06-28T14:52:34.431Z",
  "text": "Done. I did it all on one branch but now I'm thinking that it would probably make more sense to split things a bit, e.g. the permutation groups SLP stuff could be a decently-sized PR of its own.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Travis seems to be stuck on the homomorphism PR (saying &quot;waiting for status to be reported&quot;)",
  "id": "595501a9c101bc4e3a330be9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-29T13:33:29.767Z",
  "text": "Travis seems to be stuck on the homomorphism PR (saying \"waiting for status to be reported\")",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It is on the queue together with many other PRs. See <a href=\"https://travis-ci.org/sympy/sympy/pull_requests\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://travis-ci.org/sympy/sympy/pull_requests</a>. Travis only runs a limited number of jobs (maybe 10) from a single repo.",
  "id": "59550dec5a1ab55f6439bad8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-29T14:25:48.660Z",
  "text": "It is on the queue together with many other PRs. See https://travis-ci.org/sympy/sympy/pull_requests. Travis only runs a limited number of jobs (maybe 10) from a single repo.",
  "unread": false,
  "urls": [
   {
    "url": "https://travis-ci.org/sympy/sympy/pull_requests"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "ah, okay",
  "id": "59551518c101bc4e3a337eda",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-29T14:56:24.872Z",
  "text": "ah, okay",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I&#39;ve enabled build cancellation for branch builds on Travis (i.e., builds of master itself). That should hopefully make the queue faster",
  "id": "59559e420cef4fed2eb6dcf7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-30T00:41:38.476Z",
  "text": "I've enabled build cancellation for branch builds on Travis (i.e., builds of master itself). That should hopefully make the queue faster",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>I am now implementing rewriting systems - basically writing a new class that will contain the reduction rules for a given group and some methods for extending the rules to try and make the system confluent (Knuth-Bendix completion algorithm). One stage of Knuth-Bendix requires finding an overlap of two words which is when either a prefix of one is equal to a suffix of the other or one of the words is completely embedded in the other.</p><p>I started writing a function for that: sort of write the two words next to each other (not literally) and &quot;push&quot; the smaller word &quot;through&quot; the other one until their overlapping parts are the same or the smaller word &quot;comes out&quot; on the other side. But then it occurred to me that python might have some symbolic library that already has a function like that and which might be more efficient than what I&#39;m going to write. Then I could turn group words into strings, find what I need using this function and turn back into group words. I&#39;m not very well  versed in python&#39;s standard libraries though, and I suppose I shouldn&#39;t use anything non-standard because the user might not have it installed. </p><p>So idk. Would it be worth it to have a look around for an already existing function or would it be better if wrote one myself directly for group words?</p>",
  "id": "5956a9a1bf7e6af22c8edf2b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-30T19:42:25.790Z",
  "text": "I am now implementing rewriting systems - basically writing a new class that will contain the reduction rules for a given group and some methods for extending the rules to try and make the system confluent (Knuth-Bendix completion algorithm). One stage of Knuth-Bendix requires finding an overlap of two words which is when either a prefix of one is equal to a suffix of the other or one of the words is completely embedded in the other.\n\nI started writing a function for that: sort of write the two words next to each other (not literally) and \"push\" the smaller word \"through\" the other one until their overlapping parts are the same or the smaller word \"comes out\" on the other side. But then it occurred to me that python might have some symbolic library that already has a function like that and which might be more efficient than what I'm going to write. Then I could turn group words into strings, find what I need using this function and turn back into group words. I'm not very well  versed in python's standard libraries though, and I suppose I shouldn't use anything non-standard because the user might not have it installed. \n\nSo idk. Would it be worth it to have a look around for an already existing function or would it be better if wrote one myself directly for group words?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Could you give a small example of that? I&#39;m not following the &quot;push&quot; analogy.",
  "id": "5956b65142d2f6102586cf5b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-30T20:36:33.310Z",
  "text": "Could you give a small example of that? I'm not following the \"push\" analogy.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Maybe some Python library string services (e.g. difflib) could be used. If that cannot be easily done, then you should probably write the code.",
  "id": "5956ba514bcd78af56621393",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-30T20:53:37.367Z",
  "text": "Maybe some Python library string services (e.g. difflib) could be used. If that cannot be easily done, then you should probably write the code.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I believe difflib works on any type, not just strings ",
  "id": "5956c13919147ac32313449d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-30T21:23:05.366Z",
  "text": "I believe difflib works on any type, not just strings ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>The &quot;push&quot; analogy is like this. So, say, we have the words a<em>a</em>b<em>a and c</em>a<em>a</em>b.  I&#39;ll write them above each other and hope that indentations work properly:</p><pre><code>a<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span>a\n                 c<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span>b</code></pre><p>This is what we start with, writing them next to each other. Now I&#39;ll push the top word one place to the right.</p><pre><code>  a<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span>a\n                 c<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span>b</code></pre><p><code>a != c</code> so keep pushing.</p><pre><code>       a<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span>a\n                 c<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span>b</code></pre><p><code>b*a != c*a</code> so move the top word more.</p><pre><code>            a<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span>a\n                 c<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span>b</code></pre><p><code>a*b*a != c*a*a</code> so keep pushing.</p><pre><code>                 a<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span>a\n                 c<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span>b\n-------\n                      a<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span>a\n                 c<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span>b</code></pre><p><code>a*a*b == a*a*b</code> - Success. This is the required overlap, it&#39;s a prefix of the first word and a suffix of the second one.</p>",
  "id": "5956c1d16ae41d5d33a1621d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-30T21:25:37.425Z",
  "text": "The \"push\" analogy is like this. So, say, we have the words a*a*b*a and c*a*a*b.  I'll write them above each other and hope that indentations work properly:\n```\na*a*b*a\n                 c*a*a*b\n```\nThis is what we start with, writing them next to each other. Now I'll push the top word one place to the right.\n```\n  a*a*b*a\n                 c*a*a*b\n```\n`a != c` so keep pushing.\n```\n       a*a*b*a\n                 c*a*a*b\n```\n`b*a != c*a` so move the top word more.\n```\n            a*a*b*a\n                 c*a*a*b\n```\n`a*b*a != c*a*a` so keep pushing.\n```\n                 a*a*b*a\n                 c*a*a*b\n-------\n                      a*a*b*a\n                 c*a*a*b\n```\n`a*a*b == a*a*b` - Success. This is the required overlap, it's a prefix of the first word and a suffix of the second one.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "And they didn&#39;t work properly",
  "id": "5956c1e26ae41d5d33a16265",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-30T21:25:54.530Z",
  "text": "And they didn't work properly",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "i&#39;ll try again padding with some symbols",
  "id": "5956c24e4bcd78af566232f5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-30T21:27:42.417Z",
  "text": "i'll try again padding with some symbols",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "So you want the longest common subsequence? ",
  "id": "5956c25142d2f6102586d00f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-30T21:27:45.328Z",
  "text": "So you want the longest common subsequence? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "<a href=\"https://en.wikipedia.org/wiki/Longest_common_subsequence_problem\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://en.wikipedia.org/wiki/Longest_common_subsequence_problem</a>",
  "id": "5956c2520cef4fed2eb6ea32",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-30T21:27:46.546Z",
  "text": "https://en.wikipedia.org/wiki/Longest_common_subsequence_problem",
  "unread": false,
  "urls": [
   {
    "url": "https://en.wikipedia.org/wiki/Longest_common_subsequence_problem"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Oh I guess actually longest common substring, which is different <a href=\"https://en.wikipedia.org/wiki/Longest_common_substring_problem\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://en.wikipedia.org/wiki/Longest_common_substring_problem</a>",
  "id": "5956c27f81cd9a5d7e9a4387",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-30T21:28:31.292Z",
  "text": "Oh I guess actually longest common substring, which is different https://en.wikipedia.org/wiki/Longest_common_substring_problem",
  "unread": false,
  "urls": [
   {
    "url": "https://en.wikipedia.org/wiki/Longest_common_substring_problem"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Not quite. The words <code>a*b**10*a</code> and <code>c*b**10*c</code> have the longest common substring <code>b**10</code> but not overlap",
  "id": "5956c29ec101bc4e3a3af957",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-30T21:29:02.089Z",
  "text": "Not quite. The words `a*b**10*a` and `c*b**10*c` have the longest common substring `b**10` but not overlap",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<ul>\n<li>no overlap</li>\n</ul>\n",
  "id": "5956c2a96ae41d5d33a16497",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-30T21:29:13.155Z",
  "text": "* no overlap",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "By overlap you mean the sequence needs to extend to the beginning or end of the word?",
  "id": "5956c2cf19147ac3231344a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-30T21:29:51.645Z",
  "text": "By overlap you mean the sequence needs to extend to the beginning or end of the word?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Yes, or if one word is shorter than the other it can be inside the other one, like <code>b**10</code> is inside <code>a*b**10*a</code>",
  "id": "5956c310a42fa68a308877df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-30T21:30:56.153Z",
  "text": "Yes, or if one word is shorter than the other it can be inside the other one, like `b**10` is inside `a*b**10*a`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "So this is actually easier than longest common substring ",
  "id": "5956c34b81cd9a5d7e9a438f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-30T21:31:55.459Z",
  "text": "So this is actually easier than longest common substring ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "You just need to run through the string and check each possible overlap. There are only n possibilities. ",
  "id": "5956c36219147ac3231344a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-30T21:32:18.997Z",
  "text": "You just need to run through the string and check each possible overlap. There are only n possibilities. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Yes, which is what I meant by the &quot;pushing through&quot; analogy. It&#39;s not too complicated which is why I thought there might be a standard function.",
  "id": "5956c39abf7e6af22c8f5683",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-30T21:33:14.424Z",
  "text": "Yes, which is what I meant by the \"pushing through\" analogy. It's not too complicated which is why I thought there might be a standard function.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I can&#39;t think of where else this sort of thing is used ",
  "id": "5956c3a942d2f6102586d014",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-30T21:33:29.340Z",
  "text": "I can't think of where else this sort of thing is used ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Probably it gets a little more messy if you want to be efficient with powers ",
  "id": "5956c3ba81cd9a5d7e9a439d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-30T21:33:46.294Z",
  "text": "Probably it gets a little more messy if you want to be efficient with powers ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Maybe something in difflib, but I doubt it <a href=\"https://github.com/python/cpython/blob/3.6/Lib/difflib.py\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/python/cpython/blob/3.6/Lib/difflib.py</a>",
  "id": "5956c3ea81cd9a5d7e9a43a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-30T21:34:34.717Z",
  "text": "Maybe something in difflib, but I doubt it https://github.com/python/cpython/blob/3.6/Lib/difflib.py",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/python/cpython/blob/3.6/Lib/difflib.py"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Hmm, fair enough. I guess I&#39;ll just finish writing what I started, would probably be easier. Thanks for the help though!",
  "id": "5956c40b6ae41d5d33a16b6f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-06-30T21:35:07.178Z",
  "text": "Hmm, fair enough. I guess I'll just finish writing what I started, would probably be easier. Thanks for the help though!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I am still reviewing the homomorphism PR. There is no need to push each minor patch separately to github.",
  "id": "5957890bf5b3458e30ffd45e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-01T11:35:39.300Z",
  "text": "I am still reviewing the homomorphism PR. There is no need to push each minor patch separately to github.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Okay. About including <code>FreeGroup</code>s, I was actually going to ask if we could count them as <code>FpGroup</code>s with no relators. Maybe, make <code>FreeGroup</code> a subclass of <code>FpGroup</code> with a different constructor or something? Then they wouldn&#39;t need to be considered separately.",
  "id": "5957a38e6ae41d5d33a45d51",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-01T13:28:46.971Z",
  "text": "Okay. About including `FreeGroup`s, I was actually going to ask if we could count them as `FpGroup`s with no relators. Maybe, make `FreeGroup` a subclass of `FpGroup` with a different constructor or something? Then they wouldn't need to be considered separately.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I doubt that making <code>FreeGroup</code> a subclass of <code>FpGroup</code> would make sense although they can be considered as <code>FpGroups</code> with no relators. A simple solution would be adding the property <code>relators</code> returning an empty list to <code>FreeGroup</code>. <code>isinstance</code> will accept the tuple of the two classes.",
  "id": "5957bed076a757f808c61ae2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-01T15:25:04.744Z",
  "text": "I doubt that making `FreeGroup` a subclass of `FpGroup` would make sense although they can be considered as `FpGroups` with no relators. A simple solution would be adding the property `relators` returning an empty list to `FreeGroup`. `isinstance` will accept the tuple of the two classes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Then I&#39;ll probably need to write a class <code>FreeSubgroup</code> analogous to <code>FpSubgroup</code> for images and kernels. Okay.",
  "id": "5957de82c101bc4e3a3ee257",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-01T17:40:18.910Z",
  "text": "Then I'll probably need to write a class `FreeSubgroup` analogous to `FpSubgroup` for images and kernels. Okay.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Why do you think another class is necessary?",
  "id": "5957e161ad9c781843bdd39f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-01T17:52:33.074Z",
  "text": "Why do you think another class is necessary?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Same reason as for <code>FpGroup</code>s. Suppose we have a free group on <code>a, b</code> and the kernel of a homomorphism from it is the subgroup generated by <code>a</code>. We need to return something as the kernel. If we return a new <code>FreeGroup</code> as the kernel, it will be on a different generator (say, <code>a_0</code>). If I want it to have the same generator as the original group (for example, so that one could test if an element of the original group is in the kernel), then we have to have the same arrangement as for <code>FpGroup</code>s.",
  "id": "5957eca376a757f808c6caa8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-01T18:40:35.508Z",
  "text": "Same reason as for `FpGroup`s. Suppose we have a free group on `a, b` and the kernel of a homomorphism from it is the subgroup generated by `a`. We need to return something as the kernel. If we return a new `FreeGroup` as the kernel, it will be on a different generator (say, `a_0`). If I want it to have the same generator as the original group (for example, so that one could test if an element of the original group is in the kernel), then we have to have the same arrangement as for `FpGroup`s.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems that FpSubgroup is not a subclass of FpGroup. I think it could be used for subgroups of FreeGroup as well.",
  "id": "595804e74bcd78af566680cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-01T20:24:07.943Z",
  "text": "It seems that FpSubgroup is not a subclass of FpGroup. I think it could be used for subgroups of FreeGroup as well.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "True, then I&#39;ll just have to add a couple of lines to its methods to take care of <code>FreeGroup</code>s. Maybe, it would make sense to call it just <code>Subgroup</code> in that case (I chose <code>FpSubgroup</code> because I was making a connection with <code>FpGroup</code>s)?",
  "id": "595809a93230e14f3a156aed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-01T20:44:25.468Z",
  "text": "True, then I'll just have to add a couple of lines to its methods to take care of `FreeGroup`s. Maybe, it would make sense to call it just `Subgroup` in that case (I chose `FpSubgroup` because I was making a connection with `FpGroup`s)?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It also occurred to me that the name could be <code>Subgroup</code>.",
  "id": "5958853b5a1ab55f644758f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-02T05:31:39.526Z",
  "text": "It also occurred to me that the name could be `Subgroup`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-07-02T10:12:13.312Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "On the other hand, that may be too general for subgroups that are defined by a finite number of generators. Some subgroups are defined not by generators but by conditions, e.g., the orthogonal subgroup of the general linear group. Perhaps the name <code>FgSubgroup</code> would be appropriate for subgroups that are defined by a generator list. (or tuple).",
  "id": "5958c69f8dae425031769ded",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-02T10:10:39.976Z",
  "text": "On the other hand, that may be too general for subgroups that are defined by a finite number of generators. Some subgroups are defined not by generators but by conditions, e.g., the orthogonal subgroup of the general linear group. Perhaps the name `FgSubgroup` would be appropriate for subgroups that are defined by a generator list. (or tuple).",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I suppose.",
  "id": "5958ef1d5a1ab55f6448b21f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-02T13:03:25.128Z",
  "text": "I suppose.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I was thinking about how to incorporate rewriting systems into the <code>FpGroup</code> class. At the moment, I have them as an <code>FpGroup</code> attribute: <code>G._rewriting_system</code>. And I can add methods <code>reduce</code> and <code>equals</code> so that <code>G.reduce(w)</code> applies the reduction rules to the word <code>w</code> and <code>G.equals(w1, w2)</code> checks if the words <code>w1</code> and <code>w2</code> are equal. On the other hand, it could be nicer to be able to use the syntax <code>w.reduce()</code> and <code>w1==w2</code>. But <code>FpGroup</code> words are always specified as <code>FreeGroupElement</code>s so that&#39;s not possible. So I was wondering if <code>FreeGroupElement</code> class could be made into just <code>GroupElement</code> so that <code>FpGroup</code>&#39;s elements are different from the elements of the base free group. That would generally make sense, and then the nicer syntax could be used.",
  "id": "595bb51e703e565c3372fc51",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-04T15:32:46.136Z",
  "text": "I was thinking about how to incorporate rewriting systems into the `FpGroup` class. At the moment, I have them as an `FpGroup` attribute: `G._rewriting_system`. And I can add methods `reduce` and `equals` so that `G.reduce(w)` applies the reduction rules to the word `w` and `G.equals(w1, w2)` checks if the words `w1` and `w2` are equal. On the other hand, it could be nicer to be able to use the syntax `w.reduce()` and `w1==w2`. But `FpGroup` words are always specified as `FreeGroupElement`s so that's not possible. So I was wondering if `FreeGroupElement` class could be made into just `GroupElement` so that `FpGroup`'s elements are different from the elements of the base free group. That would generally make sense, and then the nicer syntax could be used.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "There could probably be a class for elements of <code>FpGroup</code>s, maybe <code>FpGroupElement</code> class, which are only represented by <code>FreeGroupElement</code>s. There could also be a <code>GroupElement</code> superclass for all element classes, but I&#39;m not sure what that should contain now.",
  "id": "595bc77b329651f46e522e35",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-04T16:51:07.386Z",
  "text": "There could probably be a class for elements of `FpGroup`s, maybe `FpGroupElement` class, which are only represented by `FreeGroupElement`s. There could also be a `GroupElement` superclass for all element classes, but I'm not sure what that should contain now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "BTW, I guess that you are not planning to implement a general rewriting system for monoids (or semigroups) so that you&#39;ll always have the inverses of generators. In that case, I think you can work with the  <code>fp_groups</code> module.",
  "id": "595bc8fb2723db8d5ed838d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-04T16:57:31.029Z",
  "text": "BTW, I guess that you are not planning to implement a general rewriting system for monoids (or semigroups) so that you'll always have the inverses of generators. In that case, I think you can work with the  `fp_groups` module.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Yes, I&#39;m only implementing it for groups. What do you mean by working with the <code>fp_groups</code> module? Should I put <code>RewritingSystem</code> class in the <code>fp_groups.py</code> file?<br>Also, <code>FpGroupElement</code> would have exactly the same methods and attributes as <code>FreeGroupElement</code>. If we don&#39;t have a superclass <code>GroupElement</code> with all these methods now, should I just subclass <code>FpGroupElement</code> from <code>FreeGroupElement</code>, at least for the time being?",
  "id": "595bd8d676a757f808d7161e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-04T18:05:10.120Z",
  "text": "Yes, I'm only implementing it for groups. What do you mean by working with the `fp_groups` module? Should I put `RewritingSystem` class in the `fp_groups.py` file?\nAlso, `FpGroupElement` would have exactly the same methods and attributes as `FreeGroupElement`. If we don't have a superclass `GroupElement` with all these methods now, should I just subclass `FpGroupElement` from `FreeGroupElement`, at least for the time being?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "btw, do you want me to push the changes we&#39;ve discussed so far in the homomorphisms pr or would you rather finish reviewing first?",
  "id": "595bd97c329651f46e5285d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-04T18:07:56.148Z",
  "text": "btw, do you want me to push the changes we've discussed so far in the homomorphisms pr or would you rather finish reviewing first?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I was thinking of this: &quot;At the moment, I have them as an FpGroup attribute: G._rewriting_system. &quot; In other words, that is not in FreeGroup. If the implementations of the methods and attributes are the same for both free and non-free elements, then we probably should have a FgGroupElement class. That can be changed to GroupElement later if that would prove practical.",
  "id": "595bf419ad9c781843ced885",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-04T20:01:29.182Z",
  "text": "I was thinking of this: \"At the moment, I have them as an FpGroup attribute: G._rewriting_system. \" In other words, that is not in FreeGroup. If the implementations of the methods and attributes are the same for both free and non-free elements, then we probably should have a FgGroupElement class. That can be changed to GroupElement later if that would prove practical.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "There is no pressing need to push the changes to the homomorphism PR now. In fact, I had the impression that you&#39;d want to work on the rewrite part first, and that suits me fine.",
  "id": "595bf4c65a1ab55f6455de2b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-04T20:04:22.552Z",
  "text": "There is no pressing need to push the changes to the homomorphism PR now. In fact, I had the impression that you'd want to work on the rewrite part first, and that suits me fine.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "True, I could finish working on rewriting and then finish the homomorphism pr to handle the other domain/codomain cases. I&#39;ll rename <code>FreeGroupElement</code> to <code>FgGroupElement</code> and try to get it to work for <code>FpGroup</code>s. Then I&#39;ll probably send it as a separate PR before the rewriting.",
  "id": "595c0784329651f46e536b95",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-04T21:24:20.825Z",
  "text": "True, I could finish working on rewriting and then finish the homomorphism pr to handle the other domain/codomain cases. I'll rename `FreeGroupElement` to `FgGroupElement` and try to get it to work for `FpGroup`s. Then I'll probably send it as a separate PR before the rewriting.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>Something strange is happening. I&#39;ve renamed <code>FreeGroupElement</code> and made some modifications in <code>fp_groups.py</code> and now printing for group word elements is broken - well, sometimes broken. I didn&#39;t touch the <code>__str__</code> method and <code>__repr__ = __str__</code>. When I try to print words using <code>print(w)</code>, it works fine. It also works fine if I open python in terminal and type in <code>w</code>. However, this doctest is failing:</p><pre><code>    &gt;&gt;&gt; from sympy.combinatorics.free_groups import free_group\n    &gt;&gt;&gt; F, x, y, z = free_group(<span class=\"string\">\"x, y, z\"</span>)\n    &gt;&gt;&gt; x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2<span class=\"keyword\">*</span>y<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1\n    x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2<span class=\"keyword\">*</span>y<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1</code></pre><p>because the returned value is <code>((x, 2), (y, -1))</code> for some reason (which is the word&#39;s array form). But why would this happen?</p>",
  "id": "595c2dc0bf7e6af22ca50177",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-05T00:07:28.097Z",
  "text": "Something strange is happening. I've renamed `FreeGroupElement` and made some modifications in `fp_groups.py` and now printing for group word elements is broken - well, sometimes broken. I didn't touch the `__str__` method and `__repr__ = __str__`. When I try to print words using `print(w)`, it works fine. It also works fine if I open python in terminal and type in `w`. However, this doctest is failing:\n```\n    >>> from sympy.combinatorics.free_groups import free_group\n    >>> F, x, y, z = free_group(\"x, y, z\")\n    >>> x**2*y**-1\n    x**2*y**-1\n```\nbecause the returned value is `((x, 2), (y, -1))` for some reason (which is the word's array form). But why would this happen?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I mean it&#39;s failing when run with <code>bin/doctest</code>",
  "id": "595c2ded4bcd78af5677eff3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-05T00:08:13.886Z",
  "text": "I mean it's failing when run with `bin/doctest`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "If I type it in terminal, it works",
  "id": "595c2e001c8697534aee97b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-05T00:08:32.212Z",
  "text": "If I type it in terminal, it works",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I suspect that renaming <code>FreeGroupElement</code> would lead to problems. I think that it could be left as it is except that it could be made a subclass of <code>FgGroupElement</code>. Then <code>FpGroupElement</code> could be another subclass. (I&#39;m assuming that those two subclasses would differ only in minor details to justify the definition of a common superclass.)",
  "id": "595c6762ad9c781843d0ae37",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-05T04:13:22.025Z",
  "text": "I suspect that renaming `FreeGroupElement` would lead to problems. I think that it could be left as it is except that it could be made a subclass of `FgGroupElement`. Then `FpGroupElement` could be another subclass. (I'm assuming that those two subclasses would differ only in minor details to justify the definition of a common superclass.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "okay, i&#39;ll do that",
  "id": "595ce6fcf5b3458e301634b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-05T13:17:48.180Z",
  "text": "okay, i'll do that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems that I may have misunderstood your plans. I understood that it would be necessary to have another class for elements of FpGroups, parallel to the class of FreeGroup elements, but if those elements are going to be the same, then maybe a new class is not needed. If that is so, then the name FpGroupElement is not needed, either, and we can leave <code>FreeGroupElement</code> as it was.",
  "id": "595d22412723db8d5eded4c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-05T17:30:41.764Z",
  "text": "It seems that I may have misunderstood your plans. I understood that it would be necessary to have another class for elements of FpGroups, parallel to the class of FreeGroup elements, but if those elements are going to be the same, then maybe a new class is not needed. If that is so, then the name FpGroupElement is not needed, either, and we can leave `FreeGroupElement` as it was.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I was thinking about giving <code>FpGroupElement</code> a different <code>__eq__</code> method so that, say, in a commutative group one could have <code>b*a*b == a*b**2</code>, and an additional method <code>reduce()</code> to be able to do <code>(b**3*a*b**-1).reduce() == a*b**2</code>. But as I&#39;ve said, we could have new <code>FpGroup</code> methods for doing that instead, e.g. if <code>G</code> is a commutative <code>FpGroup</code> on <code>a,b</code>, <code>G.reduce(b**3*a*b**-1) == a*b**2</code> and <code>G.equals(b*a*b, a*b**2) == True</code> (or maybe <code>equal_words</code> or something).  So I could do that instead of introducing <code>FpGroupElement</code>. Would that be preferable?",
  "id": "595d2e762723db8d5edf1302",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-05T18:22:46.483Z",
  "text": "I was thinking about giving `FpGroupElement` a different `__eq__` method so that, say, in a commutative group one could have `b*a*b == a*b**2`, and an additional method `reduce()` to be able to do `(b**3*a*b**-1).reduce() == a*b**2`. But as I've said, we could have new `FpGroup` methods for doing that instead, e.g. if `G` is a commutative `FpGroup` on `a,b`, `G.reduce(b**3*a*b**-1) == a*b**2` and `G.equals(b*a*b, a*b**2) == True` (or maybe `equal_words` or something).  So I could do that instead of introducing `FpGroupElement`. Would that be preferable?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It is probably possible to have most of that functionality in <code>FpGroup</code>.  Maybe <code>__eq__</code> of two elements cannot be implemented, but <code>G.equals(g, h)</code> sounds feasible. So, I think this line would be preferable. The <code>reduce</code> method would also be natural. ",
  "id": "595d37f02723db8d5edf413c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-05T19:03:12.318Z",
  "text": "It is probably possible to have most of that functionality in `FpGroup`.  Maybe `__eq__` of two elements cannot be implemented, but `G.equals(g, h)` sounds feasible. So, I think this line would be preferable. The `reduce` method would also be natural. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Cool, I&#39;ll close the <code>FpGroupElement</code> PR",
  "id": "595d42343230e14f3a2bc2bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-05T19:47:00.254Z",
  "text": "Cool, I'll close the `FpGroupElement` PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "<a href=\"https://travis-ci.org/sympy/sympy/jobs/250563595\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://travis-ci.org/sympy/sympy/jobs/250563595</a>",
  "id": "595defe80cef4fed2eb72c68",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-06T08:08:08.693Z",
  "text": "https://travis-ci.org/sympy/sympy/jobs/250563595",
  "unread": false,
  "urls": [
   {
    "url": "https://travis-ci.org/sympy/sympy/jobs/250563595"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Those tests are failing in the fp group tests ",
  "id": "595deff942d2f61025871032",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-06T08:08:25.797Z",
  "text": "Those tests are failing in the fp group tests ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Pypy tests are skipped because sometimes they fail for no reason, but it might be worth investigating if this is a real issue ",
  "id": "595df0110cef4fed2eb72c6c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-06T08:08:49.989Z",
  "text": "Pypy tests are skipped because sometimes they fail for no reason, but it might be worth investigating if this is a real issue ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Pypy seems to  loop  when computing the length of a <code>FreeGroupElement</code>. This is how cpython behaves:",
  "id": "595e25906ae41d5d33c02acb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-06T11:57:04.058Z",
  "text": "Pypy seems to  loop  when computing the length of a `FreeGroupElement`. This is how cpython behaves:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "<pre><code>In [<span class=\"number\">11</span>]: F, x = free_group(<span class=\"string\">\"x\"</span>)\n\nIn [<span class=\"number\">12</span>]: pdb.run(<span class=\"string\">'len(x)'</span>)\n&gt; &lt;string&gt;<span class=\"function\"><span class=\"params\">(<span class=\"number\">1</span>)</span>&lt;<span class=\"title\">module</span>&gt;<span class=\"params\">()</span>-&gt;</span>None\n(Pdb) s\n--Call--\n&gt; /home/jks/sympy/sympy/combinatorics/free_groups.py<span class=\"function\"><span class=\"params\">(<span class=\"number\">674</span>)</span><span class=\"title\">__len__</span><span class=\"params\">()</span>\n-&gt;</span> def __len__(self):\n(Pdb) \n&gt; /home/jks/sympy/sympy/combinatorics/free_groups.py<span class=\"function\"><span class=\"params\">(<span class=\"number\">692</span>)</span><span class=\"title\">__len__</span><span class=\"params\">()</span>\n-&gt;</span> <span class=\"keyword\">return</span> sum([abs(j) <span class=\"keyword\">for</span> (i, j) <span class=\"keyword\">in</span> self])\n(Pdb) \n&gt; /home/jks/sympy/sympy/combinatorics/free_groups.py<span class=\"function\"><span class=\"params\">(<span class=\"number\">692</span>)</span><span class=\"title\">__len__</span><span class=\"params\">()</span>\n-&gt;</span> <span class=\"keyword\">return</span> sum([abs(j) <span class=\"keyword\">for</span> (i, j) <span class=\"keyword\">in</span> self])\n(Pdb) \n--Return--\n&gt; /home/jks/sympy/sympy/combinatorics/free_groups.py<span class=\"function\"><span class=\"params\">(<span class=\"number\">692</span>)</span><span class=\"title\">__len__</span><span class=\"params\">()</span>-&gt;</span><span class=\"number\">1</span><span class=\"function\">\n-&gt;</span> <span class=\"keyword\">return</span> sum([abs(j) <span class=\"keyword\">for</span> (i, j) <span class=\"keyword\">in</span> self])\n(Pdb) \n--Return--\n&gt; &lt;string&gt;<span class=\"function\"><span class=\"params\">(<span class=\"number\">1</span>)</span>&lt;<span class=\"title\">module</span>&gt;<span class=\"params\">()</span>-&gt;</span>None</code></pre>",
  "id": "595e25c876a757f808e1ba35",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-06T11:58:00.918Z",
  "text": "```\nIn [11]: F, x = free_group(\"x\")\n\nIn [12]: pdb.run('len(x)')\n> <string>(1)<module>()->None\n(Pdb) s\n--Call--\n> /home/jks/sympy/sympy/combinatorics/free_groups.py(674)__len__()\n-> def __len__(self):\n(Pdb) \n> /home/jks/sympy/sympy/combinatorics/free_groups.py(692)__len__()\n-> return sum([abs(j) for (i, j) in self])\n(Pdb) \n> /home/jks/sympy/sympy/combinatorics/free_groups.py(692)__len__()\n-> return sum([abs(j) for (i, j) in self])\n(Pdb) \n--Return--\n> /home/jks/sympy/sympy/combinatorics/free_groups.py(692)__len__()->1\n-> return sum([abs(j) for (i, j) in self])\n(Pdb) \n--Return--\n> <string>(1)<module>()->None\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Pypy, instead, goes on indefinitely:<pre><code>In [<span class=\"number\">27</span>]: F, x = <span class=\"function\"><span class=\"title\">free_group</span><span class=\"params\">(<span class=\"string\">\"x\"</span>)</span></span>\n\nIn [<span class=\"number\">28</span>]: pdb.<span class=\"function\"><span class=\"title\">run</span><span class=\"params\">(<span class=\"string\">'len(x)'</span>)</span></span>\n&gt; &lt;string&gt;(<span class=\"number\">1</span>)&lt;module&gt;()\n(Pdb) s\n--Call--\n&gt; /home/venv/pypy/sympy/sympy/combinatorics/free_groups.<span class=\"function\"><span class=\"title\">py</span><span class=\"params\">(<span class=\"number\">674</span>)</span></span>__len__()\n-&gt; def __len__(self):\n(Pdb) \n&gt; /home/venv/pypy/sympy/sympy/combinatorics/free_groups.<span class=\"function\"><span class=\"title\">py</span><span class=\"params\">(<span class=\"number\">692</span>)</span></span>__len__()\n-&gt; return <span class=\"function\"><span class=\"title\">sum</span><span class=\"params\">([abs(j)</span></span> <span class=\"keyword\">for</span> (<span class=\"tag\">i</span>, j) <span class=\"keyword\">in</span> self])\n(Pdb) \n--Call--\n&gt; /home/venv/pypy/sympy/sympy/combinatorics/free_groups.<span class=\"function\"><span class=\"title\">py</span><span class=\"params\">(<span class=\"number\">674</span>)</span></span>__len__()\n-&gt; def __len__(self):\n(Pdb) \n&gt; /home/venv/pypy/sympy/sympy/combinatorics/free_groups.<span class=\"function\"><span class=\"title\">py</span><span class=\"params\">(<span class=\"number\">692</span>)</span></span>__len__()\n-&gt; return <span class=\"function\"><span class=\"title\">sum</span><span class=\"params\">([abs(j)</span></span> <span class=\"keyword\">for</span> (<span class=\"tag\">i</span>, j) <span class=\"keyword\">in</span> self])\n(Pdb) \n--Call--\n&gt; /home/venv/pypy/sympy/sympy/combinatorics/free_groups.<span class=\"function\"><span class=\"title\">py</span><span class=\"params\">(<span class=\"number\">674</span>)</span></span>__len__()\n-&gt; def __len__(self):\n(Pdb) \n&gt; /home/venv/pypy/sympy/sympy/combinatorics/free_groups.<span class=\"function\"><span class=\"title\">py</span><span class=\"params\">(<span class=\"number\">692</span>)</span></span>__len__()\n-&gt; return <span class=\"function\"><span class=\"title\">sum</span><span class=\"params\">([abs(j)</span></span> <span class=\"keyword\">for</span> (<span class=\"tag\">i</span>, j) <span class=\"keyword\">in</span> self])\n(Pdb) \n--Call--\n&gt; /home/venv/pypy/sympy/sympy/combinatorics/free_groups.<span class=\"function\"><span class=\"title\">py</span><span class=\"params\">(<span class=\"number\">674</span>)</span></span>__len__()\n-&gt; def __len__(self):\n(Pdb) \n&gt; /home/venv/pypy/sympy/sympy/combinatorics/free_groups.<span class=\"function\"><span class=\"title\">py</span><span class=\"params\">(<span class=\"number\">692</span>)</span></span>__len__()\n-&gt; return <span class=\"function\"><span class=\"title\">sum</span><span class=\"params\">([abs(j)</span></span> <span class=\"keyword\">for</span> (<span class=\"tag\">i</span>, j) <span class=\"keyword\">in</span> self])\n(Pdb) \n--Call--\n&gt; /home/venv/pypy/sympy/sympy/combinatorics/free_groups.<span class=\"function\"><span class=\"title\">py</span><span class=\"params\">(<span class=\"number\">674</span>)</span></span>__len__()\n-&gt; def __len__(self):\n(Pdb) \n&gt; /home/venv/pypy/sympy/sympy/combinatorics/free_groups.<span class=\"function\"><span class=\"title\">py</span><span class=\"params\">(<span class=\"number\">692</span>)</span></span>__len__()\n-&gt; return <span class=\"function\"><span class=\"title\">sum</span><span class=\"params\">([abs(j)</span></span> <span class=\"keyword\">for</span> (<span class=\"tag\">i</span>, j) <span class=\"keyword\">in</span> self])\n(Pdb)</code></pre>",
  "id": "595e261c76a757f808e1bc37",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-06T11:59:24.374Z",
  "text": "Pypy, instead, goes on indefinitely:\n```\nIn [27]: F, x = free_group(\"x\")\n\nIn [28]: pdb.run('len(x)')\n> <string>(1)<module>()\n(Pdb) s\n--Call--\n> /home/venv/pypy/sympy/sympy/combinatorics/free_groups.py(674)__len__()\n-> def __len__(self):\n(Pdb) \n> /home/venv/pypy/sympy/sympy/combinatorics/free_groups.py(692)__len__()\n-> return sum([abs(j) for (i, j) in self])\n(Pdb) \n--Call--\n> /home/venv/pypy/sympy/sympy/combinatorics/free_groups.py(674)__len__()\n-> def __len__(self):\n(Pdb) \n> /home/venv/pypy/sympy/sympy/combinatorics/free_groups.py(692)__len__()\n-> return sum([abs(j) for (i, j) in self])\n(Pdb) \n--Call--\n> /home/venv/pypy/sympy/sympy/combinatorics/free_groups.py(674)__len__()\n-> def __len__(self):\n(Pdb) \n> /home/venv/pypy/sympy/sympy/combinatorics/free_groups.py(692)__len__()\n-> return sum([abs(j) for (i, j) in self])\n(Pdb) \n--Call--\n> /home/venv/pypy/sympy/sympy/combinatorics/free_groups.py(674)__len__()\n-> def __len__(self):\n(Pdb) \n> /home/venv/pypy/sympy/sympy/combinatorics/free_groups.py(692)__len__()\n-> return sum([abs(j) for (i, j) in self])\n(Pdb) \n--Call--\n> /home/venv/pypy/sympy/sympy/combinatorics/free_groups.py(674)__len__()\n-> def __len__(self):\n(Pdb) \n> /home/venv/pypy/sympy/sympy/combinatorics/free_groups.py(692)__len__()\n-> return sum([abs(j) for (i, j) in self])\n(Pdb) \n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It looks like Pypy wants to compute the length before creating the list of absolute values.",
  "id": "595e266ef5b3458e301bd1ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-06T12:00:46.745Z",
  "text": "It looks like Pypy wants to compute the length before creating the list of absolute values.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Theoretically, could pypy be trying to compute the list comprehension with a loop that starts something like: <code>for i in range(len(self)):</code>? If so, maybe replacing <code>self</code> by <code>self.array_form</code> would help?",
  "id": "595e51d6329651f46e5ded8c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-06T15:05:58.348Z",
  "text": "Theoretically, could pypy be trying to compute the list comprehension with a loop that starts something like: `for i in range(len(self)):`? If so, maybe replacing `self` by `self.array_form` would help?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I&#39;m not sure that we should try to tweak the code in order to make this pass. There does not seem to be anything wrong with the code. It looks like something that pypy should fix.",
  "id": "595e56630de4d2545efdf2d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-06T15:25:23.676Z",
  "text": "I'm not sure that we should try to tweak the code in order to make this pass. There does not seem to be anything wrong with the code. It looks like something that pypy should fix.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Let&#39;s at least open an issue for it to track it ",
  "id": "595ea62119147ac323139093",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-06T21:05:37.972Z",
  "text": "Let's at least open an issue for it to track it ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I have not been able to find out why pypy only fails occasionally. It apparently wants to estimate the size of the list under construction before doing anything while cpython simply appends each new item after it has been created. I now think that we should probably change the length function. <code>FreeGroupElement</code> is a subclass of <code>tuple</code> and it seems that redefining <code>__len__</code> should be avoided even if that does  work with the current cpython implementation. So I suggest that <code>__len__</code> be replaced with a function (or property) <code>len</code>.",
  "id": "595fad9189aea4761d75c26b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-07T15:49:37.784Z",
  "text": "I have not been able to find out why pypy only fails occasionally. It apparently wants to estimate the size of the list under construction before doing anything while cpython simply appends each new item after it has been created. I now think that we should probably change the length function. `FreeGroupElement` is a subclass of `tuple` and it seems that redefining `__len__` should be avoided even if that does  work with the current cpython implementation. So I suggest that `__len__` be replaced with a function (or property) `len`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Does it work to replace the list comprehension with a generator comprehension?",
  "id": "595fd4590de4d2545e04a56a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-07T18:35:05.745Z",
  "text": "Does it work to replace the list comprehension with a generator comprehension?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems to work in my pypy system. Just dropping the square brackets.",
  "id": "595fd83289aea4761d768f6b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-07T18:51:30.740Z",
  "text": "It seems to work in my pypy system. Just dropping the square brackets.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That would be the quick and simple solution.",
  "id": "595fd90ef5b3458e302392d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-07T18:55:10.852Z",
  "text": "That would be the quick and simple solution.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "shall i do that or would it be easier for you to do?",
  "id": "595fda011c8697534aff7c6a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-07T18:59:13.993Z",
  "text": "shall i do that or would it be easier for you to do?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think you could do that in a separate PR. It could be quickly merged to see if the error would go away. I&#39;ve been reviewing the rewrite PR but that will take more time. I&#39;ll try to comment on some minor matters tomorrow but you need not push new commits immediately.",
  "id": "595fdb560de4d2545e04c23e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-07T19:04:54.464Z",
  "text": "I think you could do that in a separate PR. It could be quickly merged to see if the error would go away. I've been reviewing the rewrite PR but that will take more time. I'll try to comment on some minor matters tomorrow but you need not push new commits immediately.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "That&#39;s generally better to do anyway, when you have something like that. The list comprehension has to create the whole list in memory, which is then summed. The generator form sums as it goes and does not save everything in memory. ",
  "id": "596000e381cd9a5d7e9a9e66",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-07T21:45:07.915Z",
  "text": "That's generally better to do anyway, when you have something like that. The list comprehension has to create the whole list in memory, which is then summed. The generator form sums as it goes and does not save everything in memory. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I also think that this should have been a generator from the start. That occurred to me when I was investigating the failure but then I concentrated on trying to figure out why the failure did not appear systematically on Travis forgetting this point.",
  "id": "596072d92723db8d5eecd853",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-08T05:51:21.928Z",
  "text": "I also think that this should have been a generator from the start. That occurred to me when I was investigating the failure but then I concentrated on trying to figure out why the failure did not appear systematically on Travis forgetting this point.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The rewrite PR looks fine. I have added comments on some minor points.",
  "id": "596234552723db8d5ef2b592",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-09T13:49:09.103Z",
  "text": "The rewrite PR looks fine. I have added comments on some minor points.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Should <code>CosetTable</code> class and coset enumeration techniques be in a separate file? I had this thought when I tried to give <code>FreeGroup</code> a coset enumeration method, and importing <code>CosetTable</code> caused an error because <code>fp_groups</code> imports <code>free_groups</code> (the <code>CosetTable</code> class itself is independent of <code>free_groups</code>). It turned out I didn&#39;t actually need coset enumeration for free groups but considering how substantial <code>CosetTable</code> and coset enumeration code is, it could probably make sense for it to be in a separate file anyway?",
  "id": "5963ecbd89aea4761d859d5e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-10T21:08:13.079Z",
  "text": "Should `CosetTable` class and coset enumeration techniques be in a separate file? I had this thought when I tried to give `FreeGroup` a coset enumeration method, and importing `CosetTable` caused an error because `fp_groups` imports `free_groups` (the `CosetTable` class itself is independent of `free_groups`). It turned out I didn't actually need coset enumeration for free groups but considering how substantial `CosetTable` and coset enumeration code is, it could probably make sense for it to be in a separate file anyway?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Those coset table methods could probably be in a separate file, but would there be any reason for making the move now?",
  "id": "596454eec101bc4e3a71c9b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-11T04:32:46.842Z",
  "text": "Those coset table methods could probably be in a separate file, but would there be any reason for making the move now?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "After reading your latest blog about the need to modify coset tables, I see that it may be justified to also move the code to a separate file.",
  "id": "5964676abc46472974d9384b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-11T05:51:38.392Z",
  "text": "After reading your latest blog about the need to modify coset tables, I see that it may be justified to also move the code to a separate file.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>The changes are not huge, it&#39;s mainly being able to start with a non-empty table and get hold of the incomplete table if coset enumeration raises an error. But moving the code can be good.</p><p>If I do that, it&#39;ll probably make sense to do it in a separate PR. Then when I send the PR with finding presentations, github can highlight just the changes that I made rather than all of the code as new. So maybe I could send a PR that moves it later today?</p>",
  "id": "5964e7ee3230e14f3a4a574d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-11T14:59:58.782Z",
  "text": "The changes are not huge, it's mainly being able to start with a non-empty table and get hold of the incomplete table if coset enumeration raises an error. But moving the code can be good.\n\nIf I do that, it'll probably make sense to do it in a separate PR. Then when I send the PR with finding presentations, github can highlight just the changes that I made rather than all of the code as new. So maybe I could send a PR that moves it later today?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Yes, I think it is better to have a separate PR.",
  "id": "5964ea0a3230e14f3a4a6199",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-11T15:08:58.933Z",
  "text": "Yes, I think it is better to have a separate PR.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Should coset table and coset enumeration tests be moved to a separate test file as well or is that not important?",
  "id": "5964fe4f2723db8d5efe3266",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-11T16:35:27.813Z",
  "text": "Should coset table and coset enumeration tests be moved to a separate test file as well or is that not important?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think so. The test file structure should try to mirror the code file structure. (Though in some cases that might lead to too many small test files.)",
  "id": "5965002f76a757f808fd73a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-11T16:43:27.389Z",
  "text": "I think so. The test file structure should try to mirror the code file structure. (Though in some cases that might lead to too many small test files.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "It seems some of the things from the homomorphism PR might be useful. The algorithm given in the Handbook uses a homomorphism from a <code>FreeGroup</code> to a <code>PermutationGroup</code> (this is one of the cases that&#39;s implemented in the PR). To be precise, I just need a dictionary of images and the inversion function so theoretically I could do it manually. What would be harder to do again is the function that rewrites a permutation as a product of the permutation group&#39;s generators. I don&#39;t know if you&#39;ve managed to have a look at that part of the PR yet? If it&#39;s okay, that could come in handy. ",
  "id": "59653d323230e14f3a4bee37",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-11T21:03:46.532Z",
  "text": "It seems some of the things from the homomorphism PR might be useful. The algorithm given in the Handbook uses a homomorphism from a `FreeGroup` to a `PermutationGroup` (this is one of the cases that's implemented in the PR). To be precise, I just need a dictionary of images and the inversion function so theoretically I could do it manually. What would be harder to do again is the function that rewrites a permutation as a product of the permutation group's generators. I don't know if you've managed to have a look at that part of the PR yet? If it's okay, that could come in handy. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "Would the changes in moving <code>CosetTable</code> require a deprecation issue? Since <code>CosetTable</code> wasn&#39;t (and I think even now isn&#39;t) a public function. So if anyone who used it must have imported it via <code>from sympy.combinatorics.fp_groups import CosetTable</code>, and we just had a release of SymPy.",
  "id": "5965991189aea4761d8c923b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-12T03:35:45.255Z",
  "text": "Would the changes in moving `CosetTable` require a deprecation issue? Since `CosetTable` wasn't (and I think even now isn't) a public function. So if anyone who used it must have imported it via `from sympy.combinatorics.fp_groups import CosetTable`, and we just had a release of SymPy.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I don&#39;t think deprecation would be necessary. Coset tables are essentially internal structures. The user does not instantiate <code>CosetTable</code> directly.",
  "id": "5965ba4dbc46472974deed15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-12T05:57:33.935Z",
  "text": "I don't think deprecation would be necessary. Coset tables are essentially internal structures. The user does not instantiate `CosetTable` directly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gxyd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7712241?v=4&s=60",
   "displayName": "Gaurav Dhingra",
   "gv": "4",
   "id": "53eb987c107e137846baa89d",
   "url": "/gxyd",
   "username": "gxyd",
   "v": 90
  },
  "html": "That is right. Okay.",
  "id": "5965bb43f5b3458e303a184f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-12T06:01:39.153Z",
  "text": "That is right. Okay.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "<blockquote>\nthe function that rewrites a permutation as a product of the permutation group&#39;s generators</blockquote>\n",
  "id": "59664c4d2723db8d5e03f0c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-12T16:20:29.495Z",
  "text": "> the function that rewrites a permutation as a product of the permutation group's generators",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Where is this?",
  "id": "59664c672723db8d5e03f1db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-12T16:20:55.798Z",
  "text": "Where is this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<code>perm_group.py</code> file in the homomorphism PR, it&#39;s called <code>generator_product()</code>",
  "id": "59665856329651f46e7e44d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-12T17:11:50.054Z",
  "text": "`perm_group.py` file in the homomorphism PR, it's called `generator_product()`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It looks like that should be merged. Do you think that the homomorphism PR should be merged next? If yes, then I&#39;ll try to finish its review tomorrow.",
  "id": "59665ddc1c8697534a196732",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-12T17:35:24.141Z",
  "text": "It looks like that should be merged. Do you think that the homomorphism PR should be merged next? If yes, then I'll try to finish its review tomorrow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Possibly. I can add the other homomorphisms cases (e.g. from <code>PermutationGroup</code> to <code>FpGroup</code>) later.",
  "id": "59666fb92723db8d5e04a20d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-12T18:51:37.673Z",
  "text": "Possibly. I can add the other homomorphisms cases (e.g. from `PermutationGroup` to `FpGroup`) later.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-07-13T17:58:40.671Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It would be good to have more tests. In particular, for the new functionality in <code>orbit_transversal</code>. BTW, how should <code>slp</code> be interpreted?",
  "id": "5967b32f329651f46e84462e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-13T17:51:43.242Z",
  "text": "It would be good to have more tests. In particular, for the new functionality in `orbit_transversal`. BTW, how should `slp` be interpreted?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I called it <code>slp</code> for &quot;straight line program&quot; which is how the handbook described keeping track of the generators making up a word. I suppose what I actually have is not strictly speaking an &quot;slp&quot; - I really just keep track of how the strong generators are defined in term of the original generators (that&#39;s the attribute <code>_strong_gens_slp</code>), and how the transversal elements are defined in terms of the strong generators (<code>_transversal_slp</code>). And since the transversal elements are define in <code>orbit_transversal</code>, I have to get the information from there - hence the keyword <code>slp</code>. I could rename it from <code>slp</code> to something else, possibly clearer.",
  "id": "5967b8d81c8697534a1f820e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-13T18:15:52.746Z",
  "text": "I called it `slp` for \"straight line program\" which is how the handbook described keeping track of the generators making up a word. I suppose what I actually have is not strictly speaking an \"slp\" - I really just keep track of how the strong generators are defined in term of the original generators (that's the attribute `_strong_gens_slp`), and how the transversal elements are defined in terms of the strong generators (`_transversal_slp`). And since the transversal elements are define in `orbit_transversal`, I have to get the information from there - hence the keyword `slp`. I could rename it from `slp` to something else, possibly clearer.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I will add tests for <code>orbit_transversal</code> and <code>generator_product</code>",
  "id": "5967b9edbf7e6af22cd5e5db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-13T18:20:29.856Z",
  "text": "I will add tests for `orbit_transversal` and `generator_product`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>Hmm, I think I&#39;ve found  a bug in <code>reidemeister_presentation</code>. </p><pre><code>&gt;&gt;&gt; F, x_0, x_1, x_2 = free_group(<span class=\"string\">\"x_0, x_1, x_2\"</span>)\n&gt;&gt;&gt; G = FpGroup(F, [x_0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>4, x_1<span class=\"keyword\">*</span>x_0<span class=\"keyword\">*</span>x_1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x_0, x_1<span class=\"keyword\">*</span>x_0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x_1<span class=\"keyword\">*</span>x_0, x_2<span class=\"keyword\">*</span><span class=\"keyword\">*</span>3, x_0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-2<span class=\"keyword\">*</span>x_2<span class=\"keyword\">*</span>x_0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x_2<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x_0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x_2, x_2<span class=\"keyword\">*</span>x_0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x_2<span class=\"keyword\">*</span>x_1<span class=\"keyword\">*</span>x_2<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x_0<span class=\"keyword\">*</span>x_2<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x_1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1, x_2<span class=\"keyword\">*</span>x_1<span class=\"keyword\">*</span>x_2<span class=\"keyword\">*</span>x_1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x_2<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x_1<span class=\"keyword\">*</span>x_2<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x_1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1, x_1<span class=\"keyword\">*</span>x_2<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x_1<span class=\"keyword\">*</span>x_2<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x_1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>3<span class=\"keyword\">*</span>x_2<span class=\"keyword\">*</span>x_1<span class=\"keyword\">*</span>x_2<span class=\"keyword\">*</span>x_0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2])</code></pre><p>(This is the finite presentation of <code>PermutationGroup(Permutation(0,1,5,2)(3,7,4,6), Permutation(0,3,5,4)(1,6,2,7),  Permutation(0,1,5))</code>.)  Let <code>H = G.subgroup([x_2, x_1**-1*x_0*x_1])</code>.  </p><pre><code>&gt;&gt;&gt; H<span class=\"class\">.generators</span>, H<span class=\"class\">.relators</span> = ((x_2_0, x_0_3), (x_2_0, x_0_3**<span class=\"number\">4</span>))</code></pre><p>The problem is this:</p><pre><code><span class=\"prompt\">&gt;&gt;</span>&gt; len(<span class=\"constant\">G</span>.coset_table([])) <span class=\"comment\"># the order of G</span>\n<span class=\"number\">576</span>\n<span class=\"prompt\">&gt;&gt;</span>&gt; <span class=\"constant\">G</span>.index([x_2, x_1**-<span class=\"number\">1</span>*x_<span class=\"number\">0</span>*x_1]) <span class=\"comment\">#the index of H</span>\n<span class=\"number\">12</span>\n<span class=\"prompt\">&gt;&gt;</span>&gt; len(<span class=\"constant\">H</span>.coset_table([])) <span class=\"comment\">#the order of H</span>\n<span class=\"number\">4</span></code></pre><p>I think coset enumeration is correct, so must be <code>reidemeister_presentation</code>. Tracking this down could take a couple of days (could take less, if it&#39;s something obvious but I&#39;m not sure what it could be yet). And I think I&#39;d better sort this out first because this makes the <code>order()</code> method return wrong answers in some cases.</p>",
  "id": "5967e24889aea4761d970305",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-13T21:12:40.448Z",
  "text": "Hmm, I think I've found  a bug in `reidemeister_presentation`. \n\n```\n>>> F, x_0, x_1, x_2 = free_group(\"x_0, x_1, x_2\")\n>>> G = FpGroup(F, [x_0**4, x_1*x_0*x_1**-1*x_0, x_1*x_0**-1*x_1*x_0, x_2**3, x_0**-2*x_2*x_0**-1*x_2**-1*x_0**-1*x_2, x_2*x_0**-1*x_2*x_1*x_2**-1*x_0*x_2**-1*x_1**-1, x_2*x_1*x_2*x_1**-1*x_2**-1*x_1*x_2**-1*x_1**-1, x_1*x_2**-1*x_1*x_2**-1*x_1**3*x_2*x_1*x_2*x_0**2])\n```\n(This is the finite presentation of `PermutationGroup(Permutation(0,1,5,2)(3,7,4,6), Permutation(0,3,5,4)(1,6,2,7),  Permutation(0,1,5))`.)  Let `H = G.subgroup([x_2, x_1**-1*x_0*x_1])`.  \n\n```\n>>> H.generators, H.relators = ((x_2_0, x_0_3), (x_2_0, x_0_3**4))\n```\n\nThe problem is this:\n\n```\n>>> len(G.coset_table([])) # the order of G\n576\n>>> G.index([x_2, x_1**-1*x_0*x_1]) #the index of H\n12\n>>> len(H.coset_table([])) #the order of H\n4\n```\nI think coset enumeration is correct, so must be `reidemeister_presentation`. Tracking this down could take a couple of days (could take less, if it's something obvious but I'm not sure what it could be yet). And I think I'd better sort this out first because this makes the `order()` method return wrong answers in some cases.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That should clearly be investigated. Don&#39;t worry about the time.",
  "id": "59686ea4f5b3458e3046160a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-14T07:11:32.747Z",
  "text": "That should clearly be investigated. Don't worry about the time.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Not sure there is an easy way to test if a free group word belongs to a subgroup (of a free group) generated by some list of words. It&#39;s essentially the problem of working out if a given string can be made out of some other strings by concatenation. I can only see the brute force way of doing that, i.e. actually  trying to make the word by trying things until we succeed or run out of options.",
  "id": "59696e99bc46472974eee924",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-15T01:23:37.215Z",
  "text": "Not sure there is an easy way to test if a free group word belongs to a subgroup (of a free group) generated by some list of words. It's essentially the problem of working out if a given string can be made out of some other strings by concatenation. I can only see the brute force way of doing that, i.e. actually  trying to make the word by trying things until we succeed or run out of options.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The fix looks good. I&#39;ll merge.",
  "id": "5969b908c101bc4e3a8843b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-15T06:41:12.800Z",
  "text": "The fix looks good. I'll merge.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I wonder if you can do something with dynamic programming to make that more efficient.",
  "id": "596b886719147ac323140259",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-16T15:38:15.555Z",
  "text": "I wonder if you can do something with dynamic programming to make that more efficient.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "It seems if you do the appropriate amount of bookkeeping, and recursively checking for cancellation, you can avoid <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>!</mo><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">O(n!)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathit\">n</span><span class=\"mclose\">!</span><span class=\"mclose\">)</span></span></span></span>",
  "id": "596b88b151915d962af65dd6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-16T15:39:29.953Z",
  "text": "It seems if you do the appropriate amount of bookkeeping, and recursively checking for cancellation, you can avoid $$O(n!)$$",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I did end up setting up a dictionary for storing the solutions of the sub-problems which probably reduced the time complexity to some extent. What do you mean by checking for cancellation though?",
  "id": "596b8959c101bc4e3a8e256f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-16T15:42:17.454Z",
  "text": "I did end up setting up a dictionary for storing the solutions of the sub-problems which probably reduced the time complexity to some extent. What do you mean by checking for cancellation though?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-07-16T15:46:03.501Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Like if your generator words are <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi><msup><mi>y</mi><mrow><mo>\u2212</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">xy^{-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.8141079999999999em;\"></span><span class=\"strut bottom\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">x</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord\">\u2212</span><span class=\"mord mathrm\">1</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>y</mi><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">yz</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathit\" style=\"margin-right:0.04398em;\">z</span></span></span></span> you can get  <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi><mi>z</mi><mo>=</mo><mi>x</mi><msup><mi>y</mi><mrow><mo>\u2212</mo><mn>1</mn></mrow></msup><mo>\u22c5</mo><mi>y</mi><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">xz = xy^{-1}\\cdot yz</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.8141079999999999em;\"></span><span class=\"strut bottom\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">x</span><span class=\"mord mathit\" style=\"margin-right:0.04398em;\">z</span><span class=\"mrel\">=</span><span class=\"mord mathit\">x</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord\">\u2212</span><span class=\"mord mathrm\">1</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mbin\">\u22c5</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathit\" style=\"margin-right:0.04398em;\">z</span></span></span></span>",
  "id": "596b89d097cedeb04826706b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-16T15:44:16.021Z",
  "text": "Like if your generator words are $$xy^{-1}$$ and $$yz$$ you can get  $$xz = xy^{-1}\\cdot yz$$",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2017-07-16T15:46:08.114Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "And it can happen recursively, like <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi><mi>y</mi><mi>z</mi><mo>\u22c5</mo><msup><mi>z</mi><mrow><mo>\u2212</mo><mn>1</mn></mrow></msup><msup><mi>y</mi><mrow><mo>\u2212</mo><mn>1</mn></mrow></msup><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">xyz\\cdot z^{-1}y^{-1}t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.8141079999999999em;\"></span><span class=\"strut bottom\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">x</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathit\" style=\"margin-right:0.04398em;\">z</span><span class=\"mbin\">\u22c5</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.04398em;\">z</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord\">\u2212</span><span class=\"mord mathrm\">1</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord\">\u2212</span><span class=\"mord mathrm\">1</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mord mathit\">t</span></span></span></span>",
  "id": "596b89f851915d962af65dde",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-16T15:44:56.445Z",
  "text": "And it can happen recursively, like $$xyz\\cdot z^{-1}y^{-1}t$$",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I see. The cancellation happens automatically, so the latter is immediately reduced to <code>x*t</code>. I did the thing where I check if the last element of a word is equal to the inverse of the first element of some other word (and vice versa) and if so, add their product to the subwords list. Should probably be enough.",
  "id": "596b8e1e3230e14f3a648810",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-16T16:02:38.368Z",
  "text": "I see. The cancellation happens automatically, so the latter is immediately reduced to `x*t`. I did the thing where I check if the last element of a word is equal to the inverse of the first element of some other word (and vice versa) and if so, add their product to the subwords list. Should probably be enough.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I mean it complicates things in terms of the algorithm",
  "id": "596b95a90cef4fed2eb7a876",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-16T16:34:49.255Z",
  "text": "I mean it complicates things in terms of the algorithm",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I guess your thing works, so long as you do it recursively ",
  "id": "596b95b742d2f61025878ef9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-16T16:35:03.881Z",
  "text": "I guess your thing works, so long as you do it recursively ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "The one-step version of the presentation algorithm is essentially finished and it can be used to compute the presentation for any permutation group (the multi-step version is only for efficiency and I could add it later, once the homomorphism PR is merged and I try it out). So I could send the presentation PR tomorrow so that it can start being reviewed. (Also, I will probably need the rewriting PR stuff later this week if I work on the other homomorphism cases).",
  "id": "596bfa0a1c8697534a2eacfa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-16T23:43:06.706Z",
  "text": "The one-step version of the presentation algorithm is essentially finished and it can be used to compute the presentation for any permutation group (the multi-step version is only for efficiency and I could add it later, once the homomorphism PR is merged and I try it out). So I could send the presentation PR tomorrow so that it can start being reviewed. (Also, I will probably need the rewriting PR stuff later this week if I work on the other homomorphism cases).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think that the homomorphism PR is (almost) ready. I had doubts about what would happen when the list has to be reallocated before appending, but after looking at Python&#39;s code I believe that there is no problem even if the <code>gens</code> list is extended in the loop. The iterator object has a pointer to the list object and an index independent of whatever is done with the list. The list object has a pointer to the actual C list and it apparently can change the pointer after reallocation with no harm to the iterator. (There might be problems when items are removed from the list.)",
  "id": "596ca995f5b3458e30552d17",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-17T12:12:05.637Z",
  "text": "I think that the homomorphism PR is (almost) ready. I had doubts about what would happen when the list has to be reallocated before appending, but after looking at Python's code I believe that there is no problem even if the `gens` list is extended in the loop. The iterator object has a pointer to the list object and an index independent of whatever is done with the list. The list object has a pointer to the actual C list and it apparently can change the pointer after reallocation with no harm to the iterator. (There might be problems when items are removed from the list.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I removed the <code>is_subgroup</code> method from the <code>FreeGroup</code> class in the presentation PR. In practice, it would only return <code>True</code> for the group itself, not any proper subgroup. I think I might have added it in the subgroup PR in May (because I was thinking of changing the way free groups were implemented), in which case it probably doesn&#39;t need deprecating. If not, I could leave it as it is or just add a deprecation - but there isn&#39;t much point in it as it is.",
  "id": "596d1dc6bc46472974fc0fe6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-17T20:27:50.521Z",
  "text": "I removed the `is_subgroup` method from the `FreeGroup` class in the presentation PR. In practice, it would only return `True` for the group itself, not any proper subgroup. I think I might have added it in the subgroup PR in May (because I was thinking of changing the way free groups were implemented), in which case it probably doesn't need deprecating. If not, I could leave it as it is or just add a deprecation - but there isn't much point in it as it is.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "it&#39;s probably in the 1.1 release. Maybe it should be removed in the 1.1.1 bugfix release, so it doesn&#39;t stay in a released version for very long ",
  "id": "596d1ff419147ac3231411ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-17T20:37:08.869Z",
  "text": "it's probably in the 1.1 release. Maybe it should be removed in the 1.1.1 bugfix release, so it doesn't stay in a released version for very long ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The rewrite system looks good, but I wonder if something should be done to prevent the Knuth-Bendix procedure from running indefinitely.",
  "id": "596dfee42723db8d5e216e60",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-18T12:28:20.257Z",
  "text": "The rewrite system looks good, but I wonder if something should be done to prevent the Knuth-Bendix procedure from running indefinitely.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "The maximum number of rules is limited so I don&#39;t think it can.",
  "id": "596e434076a757f808224640",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-18T17:20:00.512Z",
  "text": "The maximum number of rules is limited so I don't think it can.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Ok. That will probably suffice.",
  "id": "596e43691c8697534a384199",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-18T17:20:41.073Z",
  "text": "Ok. That will probably suffice.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "ValueError is raised now if the maximum is exceeded. Maybe that could be caught at some point and a flag set to record the failure so the process would not be repeated. Of course it would be still possible to raise a secondary error to alert the user if so desired.",
  "id": "596e47e70de4d2545e3db580",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-18T17:39:51.186Z",
  "text": "ValueError is raised now if the maximum is exceeded. Maybe that could be caught at some point and a flag set to record the failure so the process would not be repeated. Of course it would be still possible to raise a secondary error to alert the user if so desired.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "well, theoretically the user might want to try it with a larger <code>maxeqns</code> value. Then we should probably store the failure flag along with the value of <code>maxeqns</code> for which the failure occurred and allow trying again if the current value is larger?",
  "id": "596e4a7a3230e14f3a6f9e58",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-18T17:50:50.681Z",
  "text": "well, theoretically the user might want to try it with a larger `maxeqns` value. Then we should probably store the failure flag along with the value of `maxeqns` for which the failure occurred and allow trying again if the current value is larger?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Maybe there could be a method for setting <code>maxeqns</code>, perhaps in <code>FpGroup</code>. That method could also reset the flag.",
  "id": "596e4cf989aea4761daf2e75",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-18T18:01:29.716Z",
  "text": "Maybe there could be a method for setting `maxeqns`, perhaps in `FpGroup`. That method could also reset the flag.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "That sounds reasonable, I&#39;ll add it in a bit.",
  "id": "596e4ed0329651f46e9d40f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-18T18:09:20.071Z",
  "text": "That sounds reasonable, I'll add it in a bit.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-07-19T12:02:48.402Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems that <code>__new__</code> was used in <code>FpGroup</code> to make it return a <code>FreeGroup</code> when there are no relators. That is one possibility but, In principle, we could also return an fp-group with no relators. I&#39;m not sure which choice would be best.",
  "id": "596f49684bcd78af56c5b763",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-19T11:58:32.569Z",
  "text": "It seems that `__new__` was used in `FpGroup` to make it return a `FreeGroup` when there are no relators. That is one possibility but, In principle, we could also return an fp-group with no relators. I'm not sure which choice would be best.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Oh I see. I think I changed it to <code>__init__</code> when I was thinking of subclassing something from it and it was easier. Hmm. I&#39;m not sure either. I don&#39;t think there is any particular advantage to returning a <code>FreeGroup</code> over an <code>FpGroup</code> with no relators. <code>FpGroup</code> has more methods, e.g. <code>coset_enumeration</code>, but they will work properly. Maybe, it would be better since if the user wanted to create an instance of <code>FreeGroup</code> they would use <code>free_group</code>. Doing <code>G = FpGroup(F, [])</code> and then getting an error of &quot;no method found&quot; for <code>G.coset_enumeration(G.generators)</code> when the <code>FpGroup</code> class clearly has the method can be weird. On the other hand, I suppose it was done to save space as <code>FpGroup(F, [])</code> would be essentially just <code>F</code>.",
  "id": "596f87c52723db8d5e285680",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-19T16:24:37.157Z",
  "text": "Oh I see. I think I changed it to `__init__` when I was thinking of subclassing something from it and it was easier. Hmm. I'm not sure either. I don't think there is any particular advantage to returning a `FreeGroup` over an `FpGroup` with no relators. `FpGroup` has more methods, e.g. `coset_enumeration`, but they will work properly. Maybe, it would be better since if the user wanted to create an instance of `FreeGroup` they would use `free_group`. Doing `G = FpGroup(F, [])` and then getting an error of \"no method found\" for `G.coset_enumeration(G.generators)` when the `FpGroup` class clearly has the method can be weird. On the other hand, I suppose it was done to save space as `FpGroup(F, [])` would be essentially just `F`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-07-19T17:09:39.300Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I&#39;m inclined to think that we could have fp-groups with no relators. They would then have all the methods of <code>FpGroup</code> and there would be no need to copy those to <code>FreeGroup</code>. (And obviously it would not make sense to make <code>FreeGroup</code> a subclass of <code>FpGroup</code>.)",
  "id": "596f923c0de4d2545e432606",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-19T17:09:16.070Z",
  "text": "I'm inclined to think that we could have fp-groups with no relators. They would then have all the methods of `FpGroup` and there would be no need to copy those to `FreeGroup`. (And obviously it would not make sense to make `FreeGroup` a subclass of `FpGroup`.)",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Actually I noticed that I had the<code>__init__</code> method return a <code>FreeGroup</code> in this case when it shouldn&#39;t return anything at all. I think it got merged with the homomorphism PR - I added the fix into the rewriting one.",
  "id": "596f9c5b3230e14f3a7537ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-19T17:52:27.396Z",
  "text": "Actually I noticed that I had the`__init__` method return a `FreeGroup` in this case when it shouldn't return anything at all. I think it got merged with the homomorphism PR - I added the fix into the rewriting one.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-07-20T16:22:53.192Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "There are a number of travis timouts in test_homomorphisms. The whole file runs in a fraction of a second on my system. I cannot understand why it would occasionally stall on travis. Maybe the test has to be reduced or removed until some explanation is found.",
  "id": "5970d880c101bc4e3aa4664f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-20T16:21:20.154Z",
  "text": "There are a number of travis timouts in test_homomorphisms. The whole file runs in a fraction of a second on my system. I cannot understand why it would occasionally stall on travis. Maybe the test has to be reduced or removed until some explanation is found.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "are there randomized algorithms? You could try to reproduce the same Python version/random seed (<code>./bin/test --seed</code>)/PYTHONHASHSEED.",
  "id": "5970fb1c19147ac32314416b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-20T18:49:00.664Z",
  "text": "are there randomized algorithms? You could try to reproduce the same Python version/random seed (`./bin/test --seed`)/PYTHONHASHSEED.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "The kernel computation is randomized (the rest isn&#39;t).",
  "id": "59710d5d4bcd78af56cd631a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-20T20:06:53.323Z",
  "text": "The kernel computation is randomized (the rest isn't).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "This is where test_homomorphism was running:<pre><code>sympy/combinatorics/tests/test_homomorphisms.py[<span class=\"number\">1</span>] ^<span class=\"constant\">C</span> interrupted by user\n\n_______________________________<span class=\"number\">_</span> slowest tests ________________________________<span class=\"number\">_</span>\ntest_low_index_subgroups - <span class=\"constant\">Took</span> <span class=\"number\">11.013</span> seconds\ntest_order - <span class=\"constant\">Took</span> <span class=\"number\">23.042</span> seconds\ntest_look_ahead - <span class=\"constant\">Took</span> <span class=\"number\">27.144</span> seconds\ntest_coset_enumeration - <span class=\"constant\">Took</span> <span class=\"number\">247.731</span> seconds\n================ tests <span class=\"symbol\">finished:</span> <span class=\"number\">35</span> passed, <span class=\"keyword\">in</span> <span class=\"number\">1966.25</span> seconds =================\n<span class=\"constant\">Traceback</span> (most recent call last)<span class=\"symbol\">:</span>\n  <span class=\"constant\">File</span> <span class=\"string\">\"bin/test\"</span>, line <span class=\"number\">112</span>, <span class=\"keyword\">in</span> &lt;<span class=\"class\"><span class=\"keyword\">module</span>&gt;</span>\n    split=options.split, rerun=options.rerun)\n  <span class=\"constant\">File</span> <span class=\"string\">\"/home/jks/test/sympy/sympy/utilities/runtests.py\"</span>, line <span class=\"number\">484</span>, <span class=\"keyword\">in</span> test\n    val = <span class=\"keyword\">not</span> bool(_test(*paths, **kwargs))\n  <span class=\"constant\">File</span> <span class=\"string\">\"/home/jks/test/sympy/sympy/utilities/runtests.py\"</span>, line <span class=\"number\">567</span>, <span class=\"keyword\">in</span> _test\n    slow=slow, enhance_asserts=enhance_asserts))\n  <span class=\"constant\">File</span> <span class=\"string\">\"/home/jks/test/sympy/sympy/utilities/runtests.py\"</span>, line <span class=\"number\">1078</span>, <span class=\"keyword\">in</span> test\n    <span class=\"keyword\">self</span>.test_file(f, sort, timeout, slow, enhance_asserts)\n  <span class=\"constant\">File</span> <span class=\"string\">\"/home/jks/test/sympy/sympy/utilities/runtests.py\"</span>, line <span class=\"number\">1213</span>, <span class=\"keyword\">in</span> test_file\n    f()\n  <span class=\"constant\">File</span> <span class=\"string\">\"/home/jks/test/sympy/sympy/combinatorics/tests/test_homomorphisms.py\"</span>, line <span class=\"number\">22</span>, <span class=\"keyword\">in</span> test_homomorphism\n    assert <span class=\"constant\">T</span>.kernel().order() == <span class=\"constant\">G</span>.order()\n  <span class=\"constant\">File</span> <span class=\"string\">\"/home/jks/test/sympy/sympy/combinatorics/homomorphisms.py\"</span>, line <span class=\"number\">76</span>, <span class=\"keyword\">in</span> kernel\n    <span class=\"keyword\">self</span>._kernel = <span class=\"keyword\">self</span>._compute_kernel()\n  <span class=\"constant\">File</span> <span class=\"string\">\"/home/jks/test/sympy/sympy/combinatorics/homomorphisms.py\"</span>, line <span class=\"number\">92</span>, <span class=\"keyword\">in</span> _compute_kernel\n    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> k <span class=\"keyword\">in</span> <span class=\"constant\">K</span><span class=\"symbol\">:</span>\n  <span class=\"constant\">File</span> <span class=\"string\">\"/home/jks/test/sympy/sympy/combinatorics/fp_groups.py\"</span>, line <span class=\"number\">317</span>, <span class=\"keyword\">in</span> __contains_<span class=\"number\">_</span>\n    <span class=\"keyword\">if</span> w2[<span class=\"number\">0</span>]**-<span class=\"number\">1</span> == w1[len(w1)-<span class=\"number\">1</span>] <span class=\"keyword\">and</span> w1*w2 <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> <span class=\"symbol\">gens:</span>\n  <span class=\"constant\">File</span> <span class=\"string\">\"/home/jks/test/sympy/sympy/combinatorics/free_groups.py\"</span>, line <span class=\"number\">437</span>, <span class=\"keyword\">in</span> __getitem_<span class=\"number\">_</span>\n    r = <span class=\"keyword\">self</span>.letter_form[i]\n  <span class=\"constant\">File</span> <span class=\"string\">\"/home/jks/test/sympy/sympy/combinatorics/free_groups.py\"</span>, line <span class=\"number\">433</span>, <span class=\"keyword\">in</span> letter_form\n    <span class=\"keyword\">for</span> i, j <span class=\"keyword\">in</span> <span class=\"keyword\">self</span>.array_form]))\n  <span class=\"constant\">File</span> <span class=\"string\">\"/home/jks/test/sympy/sympy/combinatorics/free_groups.py\"</span>, line <span class=\"number\">433</span>, <span class=\"keyword\">in</span> &lt;listcomp&gt;\n    <span class=\"keyword\">for</span> i, j <span class=\"keyword\">in</span> <span class=\"keyword\">self</span>.array_form]))\n<span class=\"constant\">KeyboardInterrupt</span></code></pre>",
  "id": "5971d0cf614889d475d7325b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-21T10:00:47.873Z",
  "text": "This is where test_homomorphism was running:\n```\nsympy/combinatorics/tests/test_homomorphisms.py[1] ^C interrupted by user\n\n________________________________ slowest tests _________________________________\ntest_low_index_subgroups - Took 11.013 seconds\ntest_order - Took 23.042 seconds\ntest_look_ahead - Took 27.144 seconds\ntest_coset_enumeration - Took 247.731 seconds\n================ tests finished: 35 passed, in 1966.25 seconds =================\nTraceback (most recent call last):\n  File \"bin/test\", line 112, in <module>\n    split=options.split, rerun=options.rerun)\n  File \"/home/jks/test/sympy/sympy/utilities/runtests.py\", line 484, in test\n    val = not bool(_test(*paths, **kwargs))\n  File \"/home/jks/test/sympy/sympy/utilities/runtests.py\", line 567, in _test\n    slow=slow, enhance_asserts=enhance_asserts))\n  File \"/home/jks/test/sympy/sympy/utilities/runtests.py\", line 1078, in test\n    self.test_file(f, sort, timeout, slow, enhance_asserts)\n  File \"/home/jks/test/sympy/sympy/utilities/runtests.py\", line 1213, in test_file\n    f()\n  File \"/home/jks/test/sympy/sympy/combinatorics/tests/test_homomorphisms.py\", line 22, in test_homomorphism\n    assert T.kernel().order() == G.order()\n  File \"/home/jks/test/sympy/sympy/combinatorics/homomorphisms.py\", line 76, in kernel\n    self._kernel = self._compute_kernel()\n  File \"/home/jks/test/sympy/sympy/combinatorics/homomorphisms.py\", line 92, in _compute_kernel\n    if not k in K:\n  File \"/home/jks/test/sympy/sympy/combinatorics/fp_groups.py\", line 317, in __contains__\n    if w2[0]**-1 == w1[len(w1)-1] and w1*w2 not in gens:\n  File \"/home/jks/test/sympy/sympy/combinatorics/free_groups.py\", line 437, in __getitem__\n    r = self.letter_form[i]\n  File \"/home/jks/test/sympy/sympy/combinatorics/free_groups.py\", line 433, in letter_form\n    for i, j in self.array_form]))\n  File \"/home/jks/test/sympy/sympy/combinatorics/free_groups.py\", line 433, in <listcomp>\n    for i, j in self.array_form]))\nKeyboardInterrupt\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "These were the settings:<pre><code>(python3.5) sympy master$ PYTHONHASHSEED=<span class=\"number\">1110995535</span> bin<span class=\"regexp\">/test --seed=22653433 --split=2/</span><span class=\"number\">4</span> -t python\n============================= test process starts ==============================\n<span class=\"string\">executable:</span>         <span class=\"regexp\">/home/</span>jks<span class=\"regexp\">/miniconda3/</span>envs<span class=\"regexp\">/python3.5/</span>bin/python  (<span class=\"number\">3.5</span>.3-<span class=\"keyword\">final</span>-<span class=\"number\">0</span>) [CPython]\n<span class=\"string\">architecture:</span>       <span class=\"number\">64</span>-bit\n<span class=\"string\">cache:</span>              yes\nground <span class=\"string\">types:</span>       python \nrandom <span class=\"string\">seed:</span>        <span class=\"number\">22653433</span>\nhash <span class=\"string\">randomization:</span> on (PYTHONHASHSEED=<span class=\"number\">1110995535</span>)\n<span class=\"string\">split:</span>              <span class=\"number\">2</span>/<span class=\"number\">4</span></code></pre>",
  "id": "5971d29dbc464729740f921b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-21T10:08:29.407Z",
  "text": "These were the settings:\n```\n(python3.5) sympy master$ PYTHONHASHSEED=1110995535 bin/test --seed=22653433 --split=2/4 -t python\n============================= test process starts ==============================\nexecutable:         /home/jks/miniconda3/envs/python3.5/bin/python  (3.5.3-final-0) [CPython]\narchitecture:       64-bit\ncache:              yes\nground types:       python \nrandom seed:        22653433\nhash randomization: on (PYTHONHASHSEED=1110995535)\nsplit:              2/4\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Yes, I&#39;ve just reproduced it with this random seed and python3 (but not python2). I&#39;ll try to sort it out and will send a pr with the fix if I figure it out",
  "id": "59720b45bc46472974109e74",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-21T14:10:13.061Z",
  "text": "Yes, I've just reproduced it with this random seed and python3 (but not python2). I'll try to sort it out and will send a pr with the fix if I figure it out",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "It looks like I&#39;ll have to rewrite the <code>contains</code> method for <code>FpSubgroup</code>. The problem is with a subgroup of free group on <code>a, b</code> generated by something like <code>a**-1*b*a</code> - the current algorithm gets into an infinite loop because it tries to check for subwords of the form <code>a**-1*b**n*a</code>. Not sure how to get around that. If this &quot;conjugate&quot; form was the only problematic case, I could deal with it separately, but there could be others. ",
  "id": "597226c6614889d475d8dd36",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2017-07-21T16:07:34.256Z",
  "text": "It looks like I'll have to rewrite the `contains` method for `FpSubgroup`. The problem is with a subgroup of free group on `a, b` generated by something like `a**-1*b*a` - the current algorithm gets into an infinite loop because it tries to check for subwords of the form `a**-1*b**n*a`. Not sure how to get around that. If this \"conjugate\" form was the only problematic case, I could deal with it separately, but there could be others. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I feel that non-cyclically-reduced words are the only problematic ones. I changed the method to handle them separately and sent a separate PR with it.",
  "id": "5973dbc2f5b3458e307228e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-22T23:12:02.264Z",
  "text": "I feel that non-cyclically-reduced words are the only problematic ones. I changed the method to handle them separately and sent a separate PR with it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think that the algorithm of <code>contains</code> could be simplified in case of normal subgroups such as kernels. Such subgroups could have a <code>normal</code> flag set. Then the algorithm would know that all conjugates are automatically included, and only cyclically reduced words would be saved in <code>_min_words</code>.",
  "id": "59744ab3614889d475dfe64a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-23T07:05:23.125Z",
  "text": "I think that the algorithm of `contains` could be simplified in case of normal subgroups such as kernels. Such subgroups could have a `normal` flag set. Then the algorithm would know that all conjugates are automatically included, and only cyclically reduced words would be saved in `_min_words`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "If it&#39;s a free group on <code>a, b</code> and the subgroup is generated by <code>a**-1*b*a, b</code>, then the word <code>a**-1*b*a*b</code> will be in the group but it wouldn&#39;t be detected if <code>a**-1*b*a</code> isn&#39;t saved in  <code>_min_words</code>. Similarly, we&#39;ll need the rest of the family it generates, i.e. everything of the form <code>a**-1*b**n*a</code>.",
  "id": "5974b5b3614889d475e13c89",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-23T14:41:55.409Z",
  "text": "If it's a free group on `a, b` and the subgroup is generated by `a**-1*b*a, b`, then the word `a**-1*b*a*b` will be in the group but it wouldn't be detected if `a**-1*b*a` isn't saved in  `_min_words`. Similarly, we'll need the rest of the family it generates, i.e. everything of the form `a**-1*b**n*a`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Something is still timing out in the PR but I&#39;m not sure it&#39;s homomorphisms.",
  "id": "5974b6644bcd78af56da2bc6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-23T14:44:52.148Z",
  "text": "Something is still timing out in the PR but I'm not sure it's homomorphisms.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Actually, a group of <code>a, b, c</code> with subgroup generators <code>a**-1*b*a, c</code> would be a better example (<code>a**-1*b*a*b</code> could be fine, but for <code>a**-1*b*a*c</code> we would have to store <code>a**-1*b*a</code>)",
  "id": "5974b7be1c8697534a510139",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-23T14:50:38.409Z",
  "text": "Actually, a group of `a, b, c` with subgroup generators `a**-1*b*a, c` would be a better example (`a**-1*b*a*b` could be fine, but for `a**-1*b*a*c` we would have to store `a**-1*b*a`)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Is is not assumed that the words in <code>_min_words</code> should be in the subgroup?",
  "id": "5974ba252723db8d5e3bdb60",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-23T15:00:53.786Z",
  "text": "Is is not assumed that the words in `_min_words` should be in the subgroup?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Yes, they are in the subgroup. But they are words such that everything else in the subgroup is a concatenation of them. If <code>a**-1*b*a</code> is not in this list, then in the above example, <code>_min_words</code> will only contain <code>c, c**-1</code> so <code>a**-1*b*a*c</code> wouldn&#39;t pass.",
  "id": "597503ff1c8697534a521e78",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-23T20:15:59.769Z",
  "text": "Yes, they are in the subgroup. But they are words such that everything else in the subgroup is a concatenation of them. If `a**-1*b*a` is not in this list, then in the above example, `_min_words` will only contain `c, c**-1` so `a**-1*b*a*c` wouldn't pass.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "In an infinite group the number of conjugates is infinite, in general. We cannot have them all in <code>_min_words</code>. It should be enough to have one representative of each conjugacy class. And the cyclically reduced word is the natural representative. The others could then be derived. So, for example, if <code>b</code> is in <code>_min_words</code>, then we would know that also <code>a**-1*b*a</code> is in the subgroup even if it is not explicitly in <code>_min_words</code>.",
  "id": "59757cc9714ea96f78177202",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-24T04:51:21.484Z",
  "text": "In an infinite group the number of conjugates is infinite, in general. We cannot have them all in `_min_words`. It should be enough to have one representative of each conjugacy class. And the cyclically reduced word is the natural representative. The others could then be derived. So, for example, if `b` is in `_min_words`, then we would know that also `a**-1*b*a ` is in the subgroup even if it is not explicitly in `_min_words`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Oh, I see what you mean. It works because if the group is normal, a word&#39;s cyclic reduction is in the subgroup as well. K, I&#39;ll do push the change in a bit.",
  "id": "5975fc3845fc670746c073be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-24T13:55:04.263Z",
  "text": "Oh, I see what you mean. It works because if the group is normal, a word's cyclic reduction is in the subgroup as well. K, I'll do push the change in a bit.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems that <code>FpSubgroup</code> should have <code>__str__</code> method defined. The default (from <code>DefaultPrinting</code>) enters into an infinite loop.",
  "id": "59779830f5b3458e308041d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-25T19:12:48.096Z",
  "text": "It seems that `FpSubgroup` should have `__str__` method defined. The default (from `DefaultPrinting`) enters into an infinite loop.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Ah, I&#39;ll add this shortly (it would make sense to make it similar to <code>FpGroup</code>&#39;s I suppose)",
  "id": "59779cb7714ea96f78207e88",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-25T19:32:07.711Z",
  "text": "Ah, I'll add this shortly (it would make sense to make it similar to `FpGroup`'s I suppose)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think so. It could be added independently of other parts.",
  "id": "59779d1d714ea96f78207fd3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-25T19:33:49.658Z",
  "text": "I think so. It could be added independently of other parts.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "<code>FpGroup</code> is a subclass of <code>DefaultPrinting</code> but I&#39;m not sure if that makes sense when <code>__str__</code> is defined. (Only the <code>__repr__  =  __str__</code> line could be inherited.)",
  "id": "59779dd6614889d475ed0dda",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-25T19:36:54.790Z",
  "text": "`FpGroup` is a subclass of `DefaultPrinting` but I'm not sure if that makes sense when `__str__` is defined. (Only the `__repr__  =  __str__` line could be inherited.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-07-25T19:39:34.893Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It is the <code>sstr</code> of <code>DefaultPrinting</code> that seems to start the infinite looping.",
  "id": "59779e16714ea96f782084f6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-25T19:37:58.387Z",
  "text": "It is the `sstr` of `DefaultPrinting` that seems to start the infinite looping.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "When you say it can be added independently, do you mean in a separate PR?",
  "id": "5977a057c101bc4e3abd9036",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-25T19:47:35.144Z",
  "text": "When you say it can be added independently, do you mean in a separate PR?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I pushed it in the same one as the <code>contains</code> method stuff but can split them if that would be better",
  "id": "5977ab54bc464729742566af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2017-07-25T20:34:28.507Z",
  "text": "I pushed it in the same one as the `contains` method stuff but can split them if that would be better",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It could have been a separate PR but I can test it also within the contains PR.",
  "id": "59781e5a45fc670746c9316c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-26T04:45:14.947Z",
  "text": "It could have been a separate PR but I can test it also within the contains PR.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Did you see my <a href=\"https://github.com/sympy/sympy/pull/12893/files#r128198117\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">comment</a> on <code>add_rule</code>? That should be settled before the rewrite PR is merged.",
  "id": "5979808e89aea4761dda4b7d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-27T05:56:30.404Z",
  "text": "Did you see my [comment](https://github.com/sympy/sympy/pull/12893/files#r128198117) on `add_rule`? That should be settled before the rewrite PR is merged.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/12893/files#r128198117"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I seem to have misinterpreted it the first time I read it. It actually made a difference to one of the tests. I&#39;ll push it shortly.",
  "id": "5979e6f7614889d475f600a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-27T13:13:27.083Z",
  "text": "I seem to have misinterpreted it the first time I read it. It actually made a difference to one of the tests. I'll push it shortly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Found two major bugs in the rewriting PR, just fixed them (hopefully) now. I explained in the commit message. Another potential issue that I only noticed today is that the time the rewriting test takes varies quite a lot. Sometimes it&#39;s 3 seconds and other times it&#39;s 50 or even 90. Has to do with the fact that <code>make_confluent</code> adds some elements from a set to the list over which it iterates and the order make a difference.",
  "id": "597aa39a76a757f808527b39",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-28T02:38:18.131Z",
  "text": "Found two major bugs in the rewriting PR, just fixed them (hopefully) now. I explained in the commit message. Another potential issue that I only noticed today is that the time the rewriting test takes varies quite a lot. Sometimes it's 3 seconds and other times it's 50 or even 90. Has to do with the fact that `make_confluent` adds some elements from a set to the list over which it iterates and the order make a difference.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Okay, now I&#39;m sure I&#39;ve sorted it out. The tests pass and there is just no way that issue could keep arising.",
  "id": "597ccbaf614889d475ffa1e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-29T17:53:51.322Z",
  "text": "Okay, now I'm sure I've sorted it out. The tests pass and there is just no way that issue could keep arising.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Good. I&#39;ll continue testing  tomorrow.",
  "id": "597ccda32723db8d5e5990cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-29T18:02:11.971Z",
  "text": "Good. I'll continue testing  tomorrow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The rewriting system seems to be working quite well now. A minor question did turn up. It is probably possible to merge soon.",
  "id": "597e155c210ac269203be46b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-30T17:20:28.585Z",
  "text": "The rewriting system seems to be working quite well now. A minor question did turn up. It is probably possible to merge soon.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I think there is a bug in <code>minimal_block</code> for permutation groups. The blocks in a blocks system should be the same size. So:<br>```<br>[0, 1, 0, 3, 0, 5]<br>[0, 3, 0, 3, 0, 3]",
  "id": "597e7cbb76a757f8085e4575",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-31T00:41:31.218Z",
  "text": "I think there is a bug in `minimal_block` for permutation groups. The blocks in a blocks system should be the same size. So:\n```\n[0, 1, 0, 3, 0, 5]\n[0, 3, 0, 3, 0, 3]\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>Sorry. Continuing:</p><pre><code>&gt;&gt;&gt; P = <span class=\"function\"><span class=\"title\">PermutationGroup</span><span class=\"params\">(Permutation(<span class=\"number\">1</span>,<span class=\"number\">5</span>)</span><span class=\"params\">(<span class=\"number\">2</span>,<span class=\"number\">4</span>)</span></span>,<span class=\"function\"><span class=\"title\">Permutation</span><span class=\"params\">(<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>)</span></span>)\n&gt;&gt;&gt; P.<span class=\"function\"><span class=\"title\">minimal_block</span><span class=\"params\">([<span class=\"number\">0</span>,<span class=\"number\">2</span>])</span></span>)\n[<span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"number\">0</span>, <span class=\"number\">3</span>]</code></pre><p>So this has two blocks of size 3 (with representative 0 and 3). However, if you do the same but swap the order of the generators:</p><pre><code>&gt;&gt;&gt; P = <span class=\"function\"><span class=\"title\">PermutationGroup</span><span class=\"params\">(Permutation(<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>)</span></span>,<span class=\"function\"><span class=\"title\">Permutation</span><span class=\"params\">(<span class=\"number\">1</span>,<span class=\"number\">5</span>)</span><span class=\"params\">(<span class=\"number\">2</span>,<span class=\"number\">4</span>)</span></span>)\n&gt;&gt;&gt; P.<span class=\"function\"><span class=\"title\">minimal_block</span><span class=\"params\">([<span class=\"number\">0</span>,<span class=\"number\">2</span>])</span></span>\n[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"number\">0</span>, <span class=\"number\">5</span>]</code></pre><p>This looks like there are 4 blocks, 1 one size 3 (with representative 0) and 3 of size 1 (with representatives 1, 3 and 5). That&#39;s not right... I&#39;ve checked the algorithm against the implementation given in the handbook and it is nearly identical, so either something was missing in the book&#39;s implementation or there is something more subtle going on.</p>",
  "id": "597e7dadf5b3458e30977023",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-31T00:45:33.808Z",
  "text": "Sorry. Continuing:\n```\n>>> P = PermutationGroup(Permutation(1,5)(2,4),Permutation(0,1,2,3,4,5))\n>>> P.minimal_block([0,2]))\n[0, 3, 0, 3, 0, 3]\n```\nSo this has two blocks of size 3 (with representative 0 and 3). However, if you do the same but swap the order of the generators:\n```\n>>> P = PermutationGroup(Permutation(0,1,2,3,4,5),Permutation(1,5)(2,4))\n>>> P.minimal_block([0,2])\n[0, 1, 0, 3, 0, 5]\n```\nThis looks like there are 4 blocks, 1 one size 3 (with representative 0) and 3 of size 1 (with representatives 1, 3 and 5). That's not right... I've checked the algorithm against the implementation given in the handbook and it is nearly identical, so either something was missing in the book's implementation or there is something more subtle going on.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "(I came across it while implementing the computation of sylow subgroups and if it is a bug, I&#39;ll need to sort it out before I can finish the implementation)",
  "id": "597e7e5af5b3458e30977142",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-31T00:48:26.620Z",
  "text": "(I came across it while implementing the computation of sylow subgroups and if it is a bug, I'll need to sort it out before I can finish the implementation)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It looks like there is a bug in <code>minimal_block</code>. It uses <code>temp</code> instead of <code>gamma</code> and <code>temp</code> is modified in the loop by <code>_union_find_merge</code> while <code>gamma</code>should be stable.",
  "id": "597ee213210ac269203e3635",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-31T07:53:55.685Z",
  "text": "It looks like there is a bug in `minimal_block`. It uses `temp` instead of `gamma` and `temp` is modified in the loop by `_union_find_merge` while `gamma`should be stable.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Yes, I see, I&#39;ll send a fix for it.",
  "id": "597f32faa7b406262d471043",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-31T13:39:06.872Z",
  "text": "Yes, I see, I'll send a fix for it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Maybe there should be two tests, both for original and  for swapped generators.",
  "id": "597f5b512723db8d5e614084",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-31T16:31:13.823Z",
  "text": "Maybe there should be two tests, both for original and  for swapped generators.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Have just added it",
  "id": "597f5c9a45fc670746e17fd4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-31T16:36:42.161Z",
  "text": "Have just added it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "is there something wrong with travis?",
  "id": "597f5f96bc464729743f403e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-31T16:49:26.500Z",
  "text": "is there something wrong with travis?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-07-31T17:16:23.263Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It looks like github has issues. I tried first to add a comment there but to no avail.",
  "id": "597f642b76a757f808618b41",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-31T17:08:59.093Z",
  "text": "It looks like github has issues. I tried first to add a comment there but to no avail.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2017-07-31T17:19:04.007Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "This is the message from travis: Is GitHub down? Please contact <a href=\"mailto:support@travis-ci.com\" rel=\"nofollow\">support@travis-ci.com</a> if the error persists.",
  "id": "597f6484329651f46edaf197",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-31T17:10:28.940Z",
  "text": "This is the message from travis: Is GitHub down? Please contact support@travis-ci.com if the error persists.",
  "unread": false,
  "urls": [
   {
    "url": "mailto:support@travis-ci.com"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "So, github may be down.",
  "id": "597f64c9c101bc4e3ad7acd6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-31T17:11:37.080Z",
  "text": "So, github may be down.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-07-31T17:21:33.945Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "<a href=\"https://status.github.com/messages\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://status.github.com/messages</a>",
  "id": "597f66e5614889d47507b2c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-31T17:20:37.526Z",
  "text": "https://status.github.com/messages",
  "unread": false,
  "urls": [
   {
    "url": "https://status.github.com/messages"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It still doesn&#39;t restart. I&#39;ll try closing and reopening.",
  "id": "597f72f4f5b3458e309af372",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-07-31T18:12:04.230Z",
  "text": "It still doesn't restart. I'll try closing and reopening.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Now most of the jobs have succeeded but the matplotlib tests fail with the following message: The command &quot;if [[ &quot;${TEST_GMPY}&quot; == &quot;true&quot; ]]; then conda install gmpy2 -c conda-forge; fi&quot; failed and exited with 1 during .",
  "id": "5980274f4bcd78af56028a30",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-01T07:01:35.176Z",
  "text": "Now most of the jobs have succeeded but the matplotlib tests fail with the following message: The command \"if [[ \"${TEST_GMPY}\" == \"true\" ]]; then conda install gmpy2 -c conda-forge; fi\" failed and exited with 1 during .\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "But why would this happen? It doesn&#39;t sound like something caused by the little change in the PR",
  "id": "59808d95210ac26920448de2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-01T14:17:57.276Z",
  "text": "But why would this happen? It doesn't sound like something caused by the little change in the PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-01T15:16:47.088Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It is not caused by the PR. The same error occurs in all travis builds since yesterday. We&#39;ll have to wait until a fix is found.",
  "id": "59809b37a7b406262d4c7c9f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-01T15:16:07.614Z",
  "text": "It is not caused by the PR. The same error occurs in all travis builds since yesterday. We'll have to wait until a fix is found.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<code>self.array_form</code> is defined as <code>tuple(self)</code>. I could probably make it return <code>[(self.group.dtype(s), p) for s, p in tuple(self)]</code>. Or I could just make a new attribute for that though not sure what to call it. Maybe, something like <code>gen_array_form</code>?",
  "id": "5982086545fc670746ebf501",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-02T17:14:13.421Z",
  "text": "`self.array_form` is defined as `tuple(self)`. I could probably make it return `[(self.group.dtype(s), p) for s, p in tuple(self)]`. Or I could just make a new attribute for that though not sure what to call it. Maybe, something like `gen_array_form`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I guess something like that could be done. But it will suffice to do that later.",
  "id": "59821388210ac269204a7419",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-02T18:01:44.882Z",
  "text": "I guess something like that could be done. But it will suffice to do that later.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Okay, I could just push the changes I made based on your comments. Should I do it now or are you going to review more of it?",
  "id": "59821cd3c101bc4e3ae207f5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2017-08-02T18:41:23.345Z",
  "text": "Okay, I could just push the changes I made based on your comments. Should I do it now or are you going to review more of it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I didn&#39;t quite finish the review. Maybe you could push the changes tomorrow.",
  "id": "59821f61f5b3458e30a5571a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-02T18:52:17.959Z",
  "text": "I didn't quite finish the review. Maybe you could push the changes tomorrow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Sure",
  "id": "59822227329651f46ee54097",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-02T19:04:07.945Z",
  "text": "Sure",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I changed a few things in the rewriting stuff (some of which was correcting actual problems, the rest just tidying up the code). Also, there was a bug in the comparison method for free group elements. I explained the main changes in the commit message (I seem to have forgotten to add the free group elements fix in the first commit, so there are two commits instead of one).",
  "id": "5983db76bc46472974505752",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-04T02:27:02.488Z",
  "text": "I changed a few things in the rewriting stuff (some of which was correcting actual problems, the rest just tidying up the code). Also, there was a bug in the comparison method for free group elements. I explained the main changes in the commit message (I seem to have forgotten to add the free group elements fix in the first commit, so there are two commits instead of one).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The loops in <code>add_rule</code> could probably be extended in case the two words are (or have become) of the same length. Currently the first or last generator of <code>s1</code> or <code>w1</code> is inverted and added to <code>s2</code> resp. <code>w2</code>. When the lengths are equal it would be possible to do the same with the roles of words exchanged.         ",
  "id": "59871d9abc464729745aa3bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-06T13:46:02.515Z",
  "text": "The loops in `add_rule` could probably be extended in case the two words are (or have become) of the same length. Currently the first or last generator of `s1` or `w1` is inverted and added to `s2` resp. `w2`. When the lengths are equal it would be possible to do the same with the roles of words exchanged.         ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I suppose that could produce new rules at a more early stage in some cases, I&#39;ll give it a go.",
  "id": "5987344c76a757f8087cece4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-06T15:22:52.835Z",
  "text": "I suppose that could produce new rules at a more early stage in some cases, I'll give it a go.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I added a fifo cache for <code>add_rule</code> because it speeds things up a bit; set the size to 50 which is fairly arbitrary: in the rewriting tests, it fills up to just about 20 and I more than doubled it for groups with large rewriting systems.",
  "id": "598752d1329651f46ef65bdc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-06T17:33:05.016Z",
  "text": "I added a fifo cache for `add_rule` because it speeds things up a bit; set the size to 50 which is fairly arbitrary: in the rewriting tests, it fills up to just about 20 and I more than doubled it for groups with large rewriting systems.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The rewriting system seems to be working quite well now in the free abelian group case. I think that the PR can be merged. If something else should turn up, that can be handled later.",
  "id": "5989a3ad45fc67074605a418",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-08T11:42:37.061Z",
  "text": "The rewriting system seems to be working quite well now in the free abelian group case. I think that the PR can be merged. If something else should turn up, that can be handled later.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I have forgotten to review the permutation group presentation PR. I had the impression that it was incomplete because my iPad (which I have been using for convenience as my main machine has too small display) did not show all of the changes. I only recently realized that there are deficiencies in the old Safari. Now I have started also with the presentation PR in addition the the Sylow group PR. Which one would you prefer to have handled first?",
  "id": "598c89ada7b406262d7768ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-10T16:28:29.757Z",
  "text": "I have forgotten to review the permutation group presentation PR. I had the impression that it was incomplete because my iPad (which I have been using for convenience as my main machine has too small display) did not show all of the changes. I only recently realized that there are deficiencies in the old Safari. Now I have started also with the presentation PR in addition the the Sylow group PR. Which one would you prefer to have handled first?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Probably the presentation one. I was thinking of making use of coset enumeration with incomplete tables in <code>_finite_index_subgroup</code> (instead of recalculating the tables after the maximum number of entries is increased), while the Sylow subgroups PR is independent of everything else (there is a bug fix contained in there but it&#39;s not a major bug and only comes up in a specific situation).",
  "id": "598ca3624bcd78af56300999",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-10T18:18:10.392Z",
  "text": "Probably the presentation one. I was thinking of making use of coset enumeration with incomplete tables in `_finite_index_subgroup` (instead of recalculating the tables after the maximum number of entries is increased), while the Sylow subgroups PR is independent of everything else (there is a bug fix contained in there but it's not a major bug and only comes up in a specific situation).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think that the presentation PR looks good. The number of relators seems to grow fairly big. Is it possible that some of them would be redundant? (I don&#39;t know if there is any algorithm for reducing the relator set. Maybe some application of automata theory.) The docstring of <code>presentation</code> should contain some reference to the book.",
  "id": "598da94476a757f8089540cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-11T12:55:32.925Z",
  "text": "I think that the presentation PR looks good. The number of relators seems to grow fairly big. Is it possible that some of them would be redundant? (I don't know if there is any algorithm for reducing the relator set. Maybe some application of automata theory.) The docstring of `presentation` should contain some reference to the book.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Actually, I was also thinking of making the presentation simplification techniques work for any <code>FpGroup</code>, not just during <code>reidemeister_presentation</code>. And that could be used to simplify the presentation of permutation groups in some cases - it can remove redundant generators and simplify/remove as redundant some of the relators.",
  "id": "598dcc77ee5c9a4c5fafa996",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-11T15:25:43.707Z",
  "text": "Actually, I was also thinking of making the presentation simplification techniques work for any `FpGroup`, not just during `reidemeister_presentation`. And that could be used to simplify the presentation of permutation groups in some cases - it can remove redundant generators and simplify/remove as redundant some of the relators.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "When I try to get some of the permutation group methods to work for <code>FpGroup</code>, I end up adding each method name separately and writing a very similar code for them (switch to permutation presentation, apply the function, go back). I don&#39;t suppose there is a better way? Inheriting from <code>PermutationGroup</code> doesn&#39;t seem right, and the methods are different anyway so would still have to be rewritten. I was thinking, it would be good if we could catch the error whenever a non-existent method of <code>FpGroup</code> is called and check if this method exists for permutation groups, then apply the switching to permutation presentation and going back. But I don&#39;t think that&#39;s possible.",
  "id": "598e07254bcd78af56355c4f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-11T19:36:05.193Z",
  "text": "When I try to get some of the permutation group methods to work for `FpGroup`, I end up adding each method name separately and writing a very similar code for them (switch to permutation presentation, apply the function, go back). I don't suppose there is a better way? Inheriting from `PermutationGroup` doesn't seem right, and the methods are different anyway so would still have to be rewritten. I was thinking, it would be good if we could catch the error whenever a non-existent method of `FpGroup` is called and check if this method exists for permutation groups, then apply the switching to permutation presentation and going back. But I don't think that's possible.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It seems to me that the methods of permutation groups are essentially different from those of fp-groups even if they have the same name and purpose. I would probably develop them separately until it becomes clear which methods could be unified. It is an interesting idea that some kind of automatic switch from one representation to the other could be applied but it may be too early to implement that now.",
  "id": "598ec8aea7b406262d7f425c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-12T09:21:50.347Z",
  "text": "It seems to me that the methods of permutation groups are essentially different from those of fp-groups even if they have the same name and purpose. I would probably develop them separately until it becomes clear which methods could be unified. It is an interesting idea that some kind of automatic switch from one representation to the other could be applied but it may be too early to implement that now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> I&#39;ve also noticed issues on my iPad, which is stuck on iOS 9. I guess GitHub no longer supports the older version of Safari. But I just tested and the Chrome browser from the App Store seems to work better. ",
  "id": "598f73950cef4fed2eb90a77",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-12T21:31:01.725Z",
  "text": "@jksuom I've also noticed issues on my iPad, which is stuck on iOS 9. I guess GitHub no longer supports the older version of Safari. But I just tested and the Chrome browser from the App Store seems to work better. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The presentation PR looks good but there should be some references to the Handbook in the docstring of <code>presentation</code>.",
  "id": "598ffb8c80d90ca024f387ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-13T07:11:08.855Z",
  "text": "The presentation PR looks good but there should be some references to the Handbook in the docstring of `presentation`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> My case is even worse. I&#39;m stuck on iOS 5.1.1 and there does not seem to exist a Chrome browser for that.",
  "id": "599052c64bcd78af563c200f",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-13T13:23:18.075Z",
  "text": "@asmeurer My case is even worse. I'm stuck on iOS 5.1.1 and there does not seem to exist a Chrome browser for that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The sylow subgroup method follows the book quite closely except that the symmetric and alternating groups are not treated specially. Did you consider those?",
  "id": "599062b9a7b406262d841b9d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-13T14:31:21.181Z",
  "text": "The sylow subgroup method follows the book quite closely except that the symmetric and alternating groups are not treated specially. Did you consider those?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Ah yes, I was going to mention it. I decided to push the method as it was because I had already spent almost 2 weeks on it, there was a lot to review there and it did work for symmetric and alternating groups. I would like to treat these groups separately eventually, but I haven&#39;t yet worked out the details. This can be added either in a separate PR after the current one is merged, or I could push it into this one if I implement it before that. It probably won&#39;t take long",
  "id": "59906a4a614889d47543ea29",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-13T15:03:38.815Z",
  "text": "Ah yes, I was going to mention it. I decided to push the method as it was because I had already spent almost 2 weeks on it, there was a lot to review there and it did work for symmetric and alternating groups. I would like to treat these groups separately eventually, but I haven't yet worked out the details. This can be added either in a separate PR after the current one is merged, or I could push it into this one if I implement it before that. It probably won't take long",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Those cases can be added later. I think that they could save some time. I&#39;ve been trying to find suitable representations for these Sylow subgroups.",
  "id": "59907efa614889d475442efc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-13T16:31:54.558Z",
  "text": "Those cases can be added later. I think that they could save some time. I've been trying to find suitable representations for these Sylow subgroups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "There is some guidance in one of the exercises at the end of the section, I was going to have a look at that.",
  "id": "599085931c8697534ab3ffcf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-13T17:00:03.320Z",
  "text": "There is some guidance in one of the exercises at the end of the section, I was going to have a look at that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Ex. 4 looks exactly like what I had been thinking. That takes automatically care of the alternating group for odd primes. For p = 2 (ex. 5) it is harder to find nice generators.",
  "id": "59908b4a76a757f8089e64f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-13T17:24:26.325Z",
  "text": "Ex. 4 looks exactly like what I had been thinking. That takes automatically care of the alternating group for odd primes. For p = 2 (ex. 5) it is harder to find nice generators.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-14T09:08:15.657Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It looks like 2-Sylow subgroups could be generated as follows. For Sym(n), it is generated by (0 1) if n = 2 (or 3), For n = 4 = 2^2 two more generators are needed: (2 3) and (0 2)(1 3). For n = 6 one more: (4 5) and for n = 8 = 2^3 three additional generators: (6 7), (4 6)(5 7) and (0 4)(1 5)(2 6)(3 7). The same pattern is repeated for n = 9, ..., 16 with the new generators taken from [8, ..., 15] by adding 8 to those previously defined. Then for n = 16 one extra generator (0 8)(1 9)(2 10)(3 11)(4 12)(5 13)(6 14)(7 15) swapping the intervals [0, ..., 7] and [8, ..., 15]  is added.",
  "id": "5991670b4bcd78af563f9b9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-14T09:02:03.641Z",
  "text": "It looks like 2-Sylow subgroups could be generated as follows. For Sym(n), it is generated by (0 1) if n = 2 (or 3), For n = 4 = 2^2 two more generators are needed: (2 3) and (0 2)(1 3). For n = 6 one more: (4 5) and for n = 8 = 2^3 three additional generators: (6 7), (4 6)(5 7) and (0 4)(1 5)(2 6)(3 7). The same pattern is repeated for n = 9, ..., 16 with the new generators taken from [8, ..., 15] by adding 8 to those previously defined. Then for n = 16 one extra generator (0 8)(1 9)(2 10)(3 11)(4 12)(5 13)(6 14)(7 15) swapping the intervals [0, ..., 7] and [8, ..., 15]  is added.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The generators of Alt(n) can then be obtained by combining all simple transpositions different from (0 1) with (0 1). For n = 4 we get the generators (0 1)(2 3) and (0 2)(1 3) of the 4-group. For n = 6 (0 1)(4 5) is added, etc.. I have not really proved this but I&#39;m fairly confident that it should be correct. ",
  "id": "599168baee5c9a4c5fbb05d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-14T09:09:14.948Z",
  "text": "The generators of Alt(n) can then be obtained by combining all simple transpositions different from (0 1) with (0 1). For n = 4 we get the generators (0 1)(2 3) and (0 2)(1 3) of the 4-group. For n = 6 (0 1)(4 5) is added, etc.. I have not really proved this but I'm fairly confident that it should be correct. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>For Sym(4), (0 1) and (0 2)(1 3) suffice, in fact (2, 3) = (0 2)(1 3)<em>(0 1)</em>(0 2)(1 3). Similarly for n=8 we don&#39;t need to add 3 generators, we can just add (0 4)(1 5)(2 6)(3 7) to (0 1) and (0 2)(1 3). I got SymPy to check and the size of this permutation group is 127=2**7 as required.</p><p>The way I see it is like this (I feel that you are probably thinking of it the same or a similar way). Consider n=p^i. Partition the (integer) interval [1..n] into p equal parts, each of length p^(i-1), e.g. [1..p^(i-1)], [p^(i-1)..2<em>p^(i-1)] ... [(p-1)</em>p^(i-1)..p^i]. We can work with Sym(p^(i-1)) on the first part as a subgroup of Sym(n) first. We find its Sylow subgroup P_1 and this has the same size as the number of factors of p contributed by the interval [1..p^(i-1)] to n!. In fact, each of the parts (except the last one) contributes the same number of factors of p. So do the same for the other parts, obtaining subgroups P_2 ... P_p. Because these subgroups act on disjoint intervals, the group generated by the union of their generators is just the direct product P_1xP_2x...xP_p. This has size equal to the product of the factors of p contributed by each part which is all factors of p in n! except the last one (that comes from p^i at the end of the last part). So we have an &quot;almost&quot; p-Sylow subgroup. Now we observe that we can get the generators of P_2 ... P_p from those of P_1 by multiplying (several times if necessary) by the permutation that shifts the first part by p^(i-1) - call it g. But g is not in P_1xP_2x...xP_p and ord(g)=p. So, we can just take generators of P_1 and adjoin g to them. This will generate a subgroup of Sym(n) that contains P_1xP_2x...xP_p and also the cyclic subgroup generated by g. Actually I&#39;m pretty sure we get P_1xP_2x...xP_pxZ_p - haven&#39;t formalised it by it seems intuitively clear. Anyway, this subgroup has the right size so it&#39;s a p-Sylow subgroup of Sym(n).</p><p>And for n not equal to a power of p, we partition [1..n] in accordance with how n would be written in base p. E.g. for p=2, 11 = 2^3 + 2^2 + 1 so the partition is [1..8],[9..10],{11}. To generate a p-Sylow subgroup, we take the union of the generators for each of the parts - this will give a direct product and it&#39;s already the right size because there are no additional factors of p like in the previous case. So, for the above example, we take {(1 2), (1 3)(2 4), (1 5),(2 6)(3 8)} from the first part, {(9 10)} from the second part and nothing from the third. This gives 4 generators in total.</p><p>So this gives some proof to the algorithm, not sure if I explained it clearly.</p><p>I&#39;ll give Alt(n) a little more thought.</p>",
  "id": "599181e3ee5c9a4c5fbb6c52",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-14T10:56:35.912Z",
  "text": "For Sym(4), (0 1) and (0 2)(1 3) suffice, in fact (2, 3) = (0 2)(1 3)*(0 1)*(0 2)(1 3). Similarly for n=8 we don't need to add 3 generators, we can just add (0 4)(1 5)(2 6)(3 7) to (0 1) and (0 2)(1 3). I got SymPy to check and the size of this permutation group is 127=2**7 as required.\n\nThe way I see it is like this (I feel that you are probably thinking of it the same or a similar way). Consider n=p^i. Partition the (integer) interval [1..n] into p equal parts, each of length p^(i-1), e.g. [1..p^(i-1)], [p^(i-1)..2*p^(i-1)] ... [(p-1)*p^(i-1)..p^i]. We can work with Sym(p^(i-1)) on the first part as a subgroup of Sym(n) first. We find its Sylow subgroup P_1 and this has the same size as the number of factors of p contributed by the interval [1..p^(i-1)] to n!. In fact, each of the parts (except the last one) contributes the same number of factors of p. So do the same for the other parts, obtaining subgroups P_2 ... P_p. Because these subgroups act on disjoint intervals, the group generated by the union of their generators is just the direct product P_1xP_2x...xP_p. This has size equal to the product of the factors of p contributed by each part which is all factors of p in n! except the last one (that comes from p^i at the end of the last part). So we have an \"almost\" p-Sylow subgroup. Now we observe that we can get the generators of P_2 ... P_p from those of P_1 by multiplying (several times if necessary) by the permutation that shifts the first part by p^(i-1) - call it g. But g is not in P_1xP_2x...xP_p and ord(g)=p. So, we can just take generators of P_1 and adjoin g to them. This will generate a subgroup of Sym(n) that contains P_1xP_2x...xP_p and also the cyclic subgroup generated by g. Actually I'm pretty sure we get P_1xP_2x...xP_pxZ_p - haven't formalised it by it seems intuitively clear. Anyway, this subgroup has the right size so it's a p-Sylow subgroup of Sym(n).\n\nAnd for n not equal to a power of p, we partition [1..n] in accordance with how n would be written in base p. E.g. for p=2, 11 = 2^3 + 2^2 + 1 so the partition is [1..8],[9..10],{11}. To generate a p-Sylow subgroup, we take the union of the generators for each of the parts - this will give a direct product and it's already the right size because there are no additional factors of p like in the previous case. So, for the above example, we take {(1 2), (1 3)(2 4), (1 5),(2 6)(3 8)} from the first part, {(9 10)} from the second part and nothing from the third. This gives 4 generators in total.\n\nSo this gives some proof to the algorithm, not sure if I explained it clearly.\n\nI'll give Alt(n) a little more thought.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Btw, I think I&#39;ve seen people use latex-like formulae on gitter. How does one do that?",
  "id": "5991826c76a757f808a18e57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-14T10:58:52.786Z",
  "text": "Btw, I think I've seen people use latex-like formulae on gitter. How does one do that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I did also notice that (2 3) is a conjugate of (0 1) by (0 2)(1 3) and similarly later on. But I took all the conjugates into account while searching generators for Alt(n).",
  "id": "59918402bc464729747fc56a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-14T11:05:38.771Z",
  "text": "I did also notice that (2 3) is a conjugate of (0 1) by (0 2)(1 3) and similarly later on. But I took all the conjugates into account while searching generators for Alt(n).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-14T11:09:39.624Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "gitter has a version LaTeX implemented. It is like standard LaTeX except that all mathematical formulas are inlined and indicated by double $. So, for example, 2^3 between those will become <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mn>2</mn><mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">2^3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.8141079999999999em;\"></span><span class=\"strut bottom\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord mathrm\">3</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span>.",
  "id": "599184ea76a757f808a19884",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-14T11:09:30.967Z",
  "text": "gitter has a version LaTeX implemented. It is like standard LaTeX except that all mathematical formulas are inlined and indicated by double $. So, for example, 2^3 between those will become $$2^3$$.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mn>2</mn><mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">2^3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.8141079999999999em;\"></span><span class=\"strut bottom\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord mathrm\">3</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span>",
  "id": "59918578ee5c9a4c5fbb7b58",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-14T11:11:52.707Z",
  "text": "$$2^3$$",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I see, thanks!",
  "id": "5991857d614889d4754793a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-14T11:11:57.469Z",
  "text": "I see, thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-14T11:25:36.256Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "<blockquote>\n<p>we get P_1xP_2x...xP_pxZ_p </p></blockquote>\n<p>I think you are following the same line of thought that I (and probably most mathematicians) would follow. The group that we get is not exactly the direct product but a &#39;wreath&#39; product indicated by <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>\u2240</mo></mrow><annotation encoding=\"application/x-tex\">\\wr</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.69444em;\"></span><span class=\"strut bottom\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\">\u2240</span></span></span></span> (\\wr) instead of &#39;x&#39;. It means that Z_p acts (non-trivially) on the first part of the product.</p>",
  "id": "59918839bc464729747fd590",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-14T11:23:37.347Z",
  "text": "> we get P_1xP_2x...xP_pxZ_p \n\nI think you are following the same line of thought that I (and probably most mathematicians) would follow. The group that we get is not exactly the direct product but a 'wreath' product indicated by $$\\wr$$ (\\wr) instead of 'x'. It means that Z_p acts (non-trivially) on the first part of the product.",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<blockquote>\n<p>Actually I&#39;m pretty sure we get P_1xP_2x...xP_pxZ_p - haven&#39;t formalised it by it seems intuitively clear.</p></blockquote>\n<p>No, it isn&#39;t. It&#39;s probably a wreath product. But the size is still correct.</p><p>And now I&#39;ve seen your message correcting this too. Intuition can be silly. :P</p>",
  "id": "599188c04bcd78af56402679",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-14T11:25:52.238Z",
  "text": "> Actually I'm pretty sure we get P_1xP_2x...xP_pxZ_p - haven't formalised it by it seems intuitively clear.\n\nNo, it isn't. It's probably a wreath product. But the size is still correct.\n\nAnd now I've seen your message correcting this too. Intuition can be silly. :P",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think that the presentation PR can be merged. Apparently there are other methods based strong generators as in 6.2 of the book. Those may be more efficient in some cases but this basic one should also be usable for groups of reasonable size.",
  "id": "59918b4c76a757f808a1b186",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-14T11:36:44.067Z",
  "text": "I think that the presentation PR can be merged. Apparently there are other methods based strong generators as in 6.2 of the book. Those may be more efficient in some cases but this basic one should also be usable for groups of reasonable size.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "BTW, when investigating the Sylow subgroups of Sym(n) and Alt(n) you could also look at their central series. I&#39;d expect that its length should grow along with the exponent of p in n. Those could also be included in some examples. (For actual unit tests, the order would probably suffice.) In fact, there could be more examples in the docstrings in addition to references (and See Also).",
  "id": "59918ec6210ac269207fe190",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-14T11:51:34.905Z",
  "text": "BTW, when investigating the Sylow subgroups of Sym(n) and Alt(n) you could also look at their central series. I'd expect that its length should grow along with the exponent of p in n. Those could also be included in some examples. (For actual unit tests, the order would probably suffice.) In fact, there could be more examples in the docstrings in addition to references (and See Also).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>I can implement the strong generator one as well at some point. Maybe after I sort out the symmetric/alternating group thing. And I&#39;ll see about examples for <code>sylow_subgroup</code>. What do you think could be put in <code>See Also</code>?</p><p>I agree with you about Alt(n), what you suggested does sound like the right thing but I haven&#39;t been able to give a satisfactory justification for it. I feel like it&#39;s to do with wreath products again, but I don&#39;t have much experience with them yet so not sure. I&#39;ll go ahead and implement it and work out the details later.</p>",
  "id": "5991a39e210ac26920804a3b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-14T13:20:30.971Z",
  "text": "I can implement the strong generator one as well at some point. Maybe after I sort out the symmetric/alternating group thing. And I'll see about examples for `sylow_subgroup`. What do you think could be put in `See Also`?\n\nI agree with you about Alt(n), what you suggested does sound like the right thing but I haven't been able to give a satisfactory justification for it. I feel like it's to do with wreath products again, but I don't have much experience with them yet so not sure. I'll go ahead and implement it and work out the details later.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Should there be new unit tests for the new signature of <code>coset_table</code> or is it sufficiently covered by the old tests?",
  "id": "5995979fa7b406262d9aab26",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-17T13:18:23.033Z",
  "text": "Should there be new unit tests for the new signature of `coset_table` or is it sufficiently covered by the old tests?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I would think it is covered. The keywords are for coset enumeration, they are spelt correctly (I tried running them) and everything else is the same. Do you think there might be issues?",
  "id": "5995a56b614889d4755a83f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-17T14:17:15.744Z",
  "text": "I would think it is covered. The keywords are for coset enumeration, they are spelt correctly (I tried running them) and everything else is the same. Do you think there might be issues?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It also seemed to me that those changes are covered. I think they can be merged soon.",
  "id": "5995b9e880d90ca0240be5ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-17T15:44:40.213Z",
  "text": "It also seemed to me that those changes are covered. I think they can be merged soon.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Would you rather I pushed the alternating/symmetric sylow subgroup method into the main sylow PR or waited till it&#39;s merged?",
  "id": "5995c5e6a7b406262d9ba68a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-17T16:35:50.147Z",
  "text": "Would you rather I pushed the alternating/symmetric sylow subgroup method into the main sylow PR or waited till it's merged?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think that those can be added later. I was only waiting to see if you could find some examples/tests involving the lower central series of the Sylow subgroups (which are nilpotent). The length of the series should be easy to test.",
  "id": "5995ca64a7b406262d9bbde5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-17T16:54:59.998Z",
  "text": "I think that those can be added later. I was only waiting to see if you could find some examples/tests involving the lower central series of the Sylow subgroups (which are nilpotent). The length of the series should be easy to test.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Ah yes, of course. I&#39;ll add some in a bit.",
  "id": "5995d6ce9acddb24079efdbb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-17T17:47:58.816Z",
  "text": "Ah yes, of course. I'll add some in a bit.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Added some. Is that the sort of test you had in mind?",
  "id": "5995eb1b80d90ca0240cdc51",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-17T19:14:35.698Z",
  "text": "Added some. Is that the sort of test you had in mind?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The tests can take many different forms. I think those are good. One reason for adding tests and examples is to make it easier for people to get acquainted  with the code.",
  "id": "5995ef1d2723db8d5eb5140e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-17T19:31:41.355Z",
  "text": "The tests can take many different forms. I think those are good. One reason for adding tests and examples is to make it easier for people to get acquainted  with the code.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I understand, I found examples useful myself on occasion. I should probably do more of them.",
  "id": "5995efb2614889d4755bf5b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-17T19:34:10.988Z",
  "text": "I understand, I found examples useful myself on occasion. I should probably do more of them.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I mean, in general",
  "id": "5995efc2162adb6d2e07a9f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-17T19:34:26.596Z",
  "text": "I mean, in general",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Finding a finite presentation using basic stabilizers is strange. In some cases it&#39;s slower than the general method and in others much faster. Haven&#39;t worked out what the pattern is yet. It&#39;s not the size of the group and doesn&#39;t always have to do with how many strong generators there are. Will keep investigating tomorrow",
  "id": "599885b8210ac269209e9a04",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-19T18:38:47.999Z",
  "text": "Finding a finite presentation using basic stabilizers is strange. In some cases it's slower than the general method and in others much faster. Haven't worked out what the pattern is yet. It's not the size of the group and doesn't always have to do with how many strong generators there are. Will keep investigating tomorrow",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "How do people usually present their projects for the final evaluation? The email said we need to show all of the changes we made. So, would a blog post with links to all submitted PRs be acceptable?",
  "id": "5999b24d578b44a046ccf129",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-20T16:01:17.836Z",
  "text": "How do people usually present their projects for the final evaluation? The email said we need to show all of the changes we made. So, would a blog post with links to all submitted PRs be acceptable?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That seems a good idea to me. I think that the results only should be recorded one way or another.",
  "id": "5999c5c52723db8d5ec4b801",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-20T17:24:21.744Z",
  "text": "That seems a good idea to me. I think that the results only should be recorded one way or another.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The PR on permutation group methods for fp-groups looks good.  So does the one on Sylow groups of Alt/Sym but I&#39;ll have to spend a little more time on the 2-Sylow case.",
  "id": "599c57db76a757f808d07597",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-22T16:12:11.314Z",
  "text": "The PR on permutation group methods for fp-groups looks good.  So does the one on Sylow groups of Alt/Sym but I'll have to spend a little more time on the 2-Sylow case.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>I have a vague idea involving homomorphisms though nothing rigorous yet. Assuming <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>n</mi><mo>=</mo><msup><mn>2</mn><mi>N</mi></msup></mrow><annotation encoding=\"application/x-tex\">n=2^N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.8413309999999999em;\"></span><span class=\"strut bottom\" style=\"height:0.8413309999999999em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">n</span><span class=\"mrel\">=</span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span>, let <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>H</mi><mrow><mi>s</mi><mi>y</mi><mi>m</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">H_{sym}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.08125em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">s</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathit\">m</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> be the 2-Sylow subgroup of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>S</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.05764em;\">S</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.05764em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\">n</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> as would be returned by the algorithm, i.e. with generators (0 1), (0 2)(1 3), (0 4)(1 5)(2 6)(3 7) and so on, and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>H</mi><mrow><mi>a</mi><mi>l</mi><mi>t</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">H_{alt}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.08125em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">a</span><span class=\"mord mathit\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathit\">t</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> -  the subgroup of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>A</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">A_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\">A</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\">n</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> on the same generators, excluding (0 1) and adding (0 1)(2 3), (0 1)(4 5), (0 1)(8 9) and so on, i.e. like the the 2-Sylow subgroup of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>A</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">A_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\">A</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\">n</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> in the algorithm. We want to show that <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"normal\">\u2223</mi><msub><mi>H</mi><mrow><mi>a</mi><mi>l</mi><mi>t</mi></mrow></msub><mi mathvariant=\"normal\">\u2223</mi><mo>=</mo><mi mathvariant=\"normal\">\u2223</mi><msub><mi>H</mi><mrow><mi>s</mi><mi>y</mi><mi>m</mi></mrow></msub><mi mathvariant=\"normal\">\u2223</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">\\vert H_{alt} \\vert = \\vert H_{sym} \\vert / 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathrm\">\u2223</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.08125em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">a</span><span class=\"mord mathit\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathit\">t</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mord mathrm\">\u2223</span><span class=\"mrel\">=</span><span class=\"mord mathrm\">\u2223</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.08125em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">s</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathit\">m</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mord mathrm\">\u2223</span><span class=\"mord mathrm\">/</span><span class=\"mord mathrm\">2</span></span></span></span>.</p><p>Define a map from <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>H</mi><mrow><mi>s</mi><mi>y</mi><mi>m</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">H_{sym}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.08125em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">s</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathit\">m</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>S</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.05764em;\">S</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.05764em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\">n</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> by sending (0 1) to the identity element and the other generators to themselves. If this is a homomorphism and we can show it (which I haven&#39;t tried yet), then <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>H</mi><mrow><mi>s</mi><mi>y</mi><mi>m</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">H_{sym}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.08125em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">s</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathit\">m</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> is isomorphic to <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>Q</mi><mi mathvariant=\"normal\">/</mi><mo>\u27e8</mo><mo>\u27e8</mo><mo>(</mo><mn>0</mn><mtext>\u00a0</mtext><mn>1</mn><mo>)</mo><mo>\u27e9</mo><mo>\u27e9</mo></mrow><annotation encoding=\"application/x-tex\">Q/\\langle \\langle (0\\ 1) \\rangle \\rangle</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">Q</span><span class=\"mord mathrm\">/</span><span class=\"mopen\">\u27e8</span><span class=\"mopen\">\u27e8</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">0</span><span class=\"mord mspace\">\u00a0</span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span><span class=\"mclose\">\u27e9</span><span class=\"mclose\">\u27e9</span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">Q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">Q</span></span></span></span> is the image and the double angle brackets denote the normal closure. By conjugating (0 1) with the other generators and noting that they are just &quot;shifts&quot;, <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>\u27e8</mo><mo>\u27e8</mo><mo>(</mo><mn>0</mn><mtext>\u00a0</mtext><mn>1</mn><mo>)</mo><mo>\u27e9</mo><mo>\u27e9</mo><mo>=</mo><mo>\u27e8</mo><mi>e</mi><mo separator=\"true\">,</mo><mo>(</mo><mn>0</mn><mtext>\u00a0</mtext><mn>1</mn><mo>)</mo><mo separator=\"true\">,</mo><mo>(</mo><mn>2</mn><mtext>\u00a0</mtext><mn>3</mn><mo>)</mo><mo separator=\"true\">,</mo><mo>(</mo><mn>4</mn><mtext>\u00a0</mtext><mn>5</mn><mo>)</mo><mo separator=\"true\">,</mo><mo>(</mo><mn>8</mn><mtext>\u00a0</mtext><mn>9</mn><mo>)</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo>\u27e9</mo></mrow><annotation encoding=\"application/x-tex\">\\langle \\langle (0\\ 1) \\rangle \\rangle = \\langle e, (0\\ 1), (2\\ 3), (4\\ 5), (8\\ 9) ... \\rangle</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mopen\">\u27e8</span><span class=\"mopen\">\u27e8</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">0</span><span class=\"mord mspace\">\u00a0</span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span><span class=\"mclose\">\u27e9</span><span class=\"mclose\">\u27e9</span><span class=\"mrel\">=</span><span class=\"mopen\">\u27e8</span><span class=\"mord mathit\">e</span><span class=\"mpunct\">,</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">0</span><span class=\"mord mspace\">\u00a0</span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">2</span><span class=\"mord mspace\">\u00a0</span><span class=\"mord mathrm\">3</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">4</span><span class=\"mord mspace\">\u00a0</span><span class=\"mord mathrm\">5</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">8</span><span class=\"mord mspace\">\u00a0</span><span class=\"mord mathrm\">9</span><span class=\"mclose\">)</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mclose\">\u27e9</span></span></span></span> - N transpositions in total. They are disjoint so they generate a direct product of N cyclic group of order 2 so the the size of the kernel is <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mn>2</mn><mi>N</mi></msup></mrow><annotation encoding=\"application/x-tex\">2^N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.8413309999999999em;\"></span><span class=\"strut bottom\" style=\"height:0.8413309999999999em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span>.</p><p>Now we can also define a map from <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>H</mi><mrow><mi>a</mi><mi>l</mi><mi>t</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">H_{alt}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.08125em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">a</span><span class=\"mord mathit\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathit\">t</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">Q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">Q</span></span></span></span> by sending (0 1)(2 3), (0 1)(4 5), (0 1)(8 9) and so on to the identity and the other generators (which are shared with <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>H</mi><mrow><mi>s</mi><mi>y</mi><mi>m</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">H_{sym}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.08125em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">s</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathit\">m</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span>) again to themselves. If this is a homomorphism, then <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">Q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">Q</span></span></span></span> is isomorphic to <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>H</mi><mrow><mi>a</mi><mi>l</mi><mi>t</mi></mrow></msub><mi mathvariant=\"normal\">/</mi><mo>\u27e8</mo><mo>\u27e8</mo><mo>(</mo><mn>0</mn><mtext>\u00a0</mtext><mn>1</mn><mo>)</mo><mo>(</mo><mn>2</mn><mtext>\u00a0</mtext><mn>3</mn><mo>)</mo><mo separator=\"true\">,</mo><mo>(</mo><mn>0</mn><mtext>\u00a0</mtext><mn>1</mn><mo>)</mo><mo>(</mo><mn>4</mn><mtext>\u00a0</mtext><mn>5</mn><mo>)</mo><mo separator=\"true\">,</mo><mo>(</mo><mn>0</mn><mtext>\u00a0</mtext><mn>1</mn><mo>)</mo><mo>(</mo><mn>8</mn><mtext>\u00a0</mtext><mn>9</mn><mo>)</mo><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo>\u27e9</mo><mo>\u27e9</mo></mrow><annotation encoding=\"application/x-tex\">H_{alt} / \\langle \\langle (0\\ 1)(2\\ 3), (0\\ 1)(4\\ 5), (0\\ 1)(8\\ 9), ... \\rangle \\rangle</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.08125em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">a</span><span class=\"mord mathit\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathit\">t</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mord mathrm\">/</span><span class=\"mopen\">\u27e8</span><span class=\"mopen\">\u27e8</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">0</span><span class=\"mord mspace\">\u00a0</span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">2</span><span class=\"mord mspace\">\u00a0</span><span class=\"mord mathrm\">3</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">0</span><span class=\"mord mspace\">\u00a0</span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">4</span><span class=\"mord mspace\">\u00a0</span><span class=\"mord mathrm\">5</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">0</span><span class=\"mord mspace\">\u00a0</span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">8</span><span class=\"mord mspace\">\u00a0</span><span class=\"mord mathrm\">9</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mclose\">\u27e9</span><span class=\"mclose\">\u27e9</span></span></span></span>. Conjugating these permutations with each of the other generators (&quot;shifts&quot;) leaves them invariant, so their normal closure is the same as the subgroup generated by them. This subgroup has size <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mn>2</mn><mrow><mi>N</mi><mo>\u2212</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">2^{N-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.8413309999999999em;\"></span><span class=\"strut bottom\" style=\"height:0.8413309999999999em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin\">\u2212</span><span class=\"mord mathrm\">1</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> (by the same argument as before but there are only <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>N</mi><mo>\u2212</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">N-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin\">\u2212</span><span class=\"mord mathrm\">1</span></span></span></span> generators this time).</p><p>Then <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"normal\">\u2223</mi><msub><mi>H</mi><mrow><mi>a</mi><mi>l</mi><mi>t</mi></mrow></msub><mi mathvariant=\"normal\">\u2223</mi><mo>=</mo><mi mathvariant=\"normal\">\u2223</mi><mi>Q</mi><mi mathvariant=\"normal\">\u2223</mi><mo>\u2217</mo><msup><mn>2</mn><mrow><mi>N</mi><mo>\u2212</mo><mn>1</mn></mrow></msup><mo>=</mo><mo>(</mo><mi mathvariant=\"normal\">\u2223</mi><msub><mi>H</mi><mrow><mi>s</mi><mi>y</mi><mi>m</mi></mrow></msub><mi mathvariant=\"normal\">\u2223</mi><mi mathvariant=\"normal\">/</mi><msup><mn>2</mn><mi>N</mi></msup><mo>)</mo><mo>\u2217</mo><msup><mn>2</mn><mrow><mi>N</mi><mo>\u2212</mo><mn>1</mn></mrow></msup><mo>=</mo><mi mathvariant=\"normal\">\u2223</mi><msub><mi>H</mi><mrow><mi>s</mi><mi>y</mi><mi>m</mi></mrow></msub><mi mathvariant=\"normal\">\u2223</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">\\vert H_{alt} \\vert = \\vert Q \\vert * 2^{N-1} = (\\vert H_{sym} \\vert / 2^N) * 2^{N-1} = \\vert H_{sym} \\vert / 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.8413309999999999em;\"></span><span class=\"strut bottom\" style=\"height:1.1274389999999999em;vertical-align:-0.286108em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathrm\">\u2223</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.08125em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">a</span><span class=\"mord mathit\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathit\">t</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mord mathrm\">\u2223</span><span class=\"mrel\">=</span><span class=\"mord mathrm\">\u2223</span><span class=\"mord mathit\">Q</span><span class=\"mord mathrm\">\u2223</span><span class=\"mbin\">\u2217</span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin\">\u2212</span><span class=\"mord mathrm\">1</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mrel\">=</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">\u2223</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.08125em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">s</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathit\">m</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mord mathrm\">\u2223</span><span class=\"mord mathrm\">/</span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mclose\">)</span><span class=\"mbin\">\u2217</span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin\">\u2212</span><span class=\"mord mathrm\">1</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mrel\">=</span><span class=\"mord mathrm\">\u2223</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.08125em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">s</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathit\">m</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mord mathrm\">\u2223</span><span class=\"mord mathrm\">/</span><span class=\"mord mathrm\">2</span></span></span></span> which proves that <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>H</mi><mrow><mi>a</mi><mi>l</mi><mi>t</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">H_{alt}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.08125em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">a</span><span class=\"mord mathit\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathit\">t</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> is a 2-Sylow subgroup of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>A</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">A_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\">A</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\">n</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span>.</p><p>So if these maps really are homomorphisms and I didn&#39;t mess up with the kernels, then this would work for <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>n</mi><mo>=</mo><msup><mn>2</mn><mi>N</mi></msup></mrow><annotation encoding=\"application/x-tex\">n=2^N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.8413309999999999em;\"></span><span class=\"strut bottom\" style=\"height:0.8413309999999999em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">n</span><span class=\"mrel\">=</span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> and could probably be extended to the other cases. Even if this doesn&#39;t work, maybe you could come up with some similar homomorphism argument that does? I&#39;ll think about this more tomorrow.</p>",
  "id": "599c8a1dbc46472974afdd67",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-22T19:46:37.307Z",
  "text": "I have a vague idea involving homomorphisms though nothing rigorous yet. Assuming $$n=2^N$$, let $$H_{sym}$$ be the 2-Sylow subgroup of $$S_n$$ as would be returned by the algorithm, i.e. with generators (0 1), (0 2)(1 3), (0 4)(1 5)(2 6)(3 7) and so on, and $$H_{alt}$$ -  the subgroup of $$A_n$$ on the same generators, excluding (0 1) and adding (0 1)(2 3), (0 1)(4 5), (0 1)(8 9) and so on, i.e. like the the 2-Sylow subgroup of $$A_n$$ in the algorithm. We want to show that $$\\vert H_{alt} \\vert = \\vert H_{sym} \\vert / 2$$.\n\nDefine a map from $$H_{sym}$$ to $$S_n$$ by sending (0 1) to the identity element and the other generators to themselves. If this is a homomorphism and we can show it (which I haven't tried yet), then $$H_{sym}$$ is isomorphic to $$Q/\\langle \\langle (0\\ 1) \\rangle \\rangle$$ where $$Q$$ is the image and the double angle brackets denote the normal closure. By conjugating (0 1) with the other generators and noting that they are just \"shifts\", $$\\langle \\langle (0\\ 1) \\rangle \\rangle = \\langle e, (0\\ 1), (2\\ 3), (4\\ 5), (8\\ 9) ... \\rangle$$ - N transpositions in total. They are disjoint so they generate a direct product of N cyclic group of order 2 so the the size of the kernel is $$2^N$$.\n\nNow we can also define a map from $$H_{alt}$$ to $$Q$$ by sending (0 1)(2 3), (0 1)(4 5), (0 1)(8 9) and so on to the identity and the other generators (which are shared with $$H_{sym}$$) again to themselves. If this is a homomorphism, then $$Q$$ is isomorphic to $$H_{alt} / \\langle \\langle (0\\ 1)(2\\ 3), (0\\ 1)(4\\ 5), (0\\ 1)(8\\ 9), ... \\rangle \\rangle$$. Conjugating these permutations with each of the other generators (\"shifts\") leaves them invariant, so their normal closure is the same as the subgroup generated by them. This subgroup has size $$2^{N-1}$$ (by the same argument as before but there are only $$N-1$$ generators this time).\n\nThen $$\\vert H_{alt} \\vert = \\vert Q \\vert * 2^{N-1} = (\\vert H_{sym} \\vert / 2^N) * 2^{N-1} = \\vert H_{sym} \\vert / 2$$ which proves that $$H_{alt}$$ is a 2-Sylow subgroup of $$A_n$$.\n\nSo if these maps really are homomorphisms and I didn't mess up with the kernels, then this would work for $$n=2^N$$ and could probably be extended to the other cases. Even if this doesn't work, maybe you could come up with some similar homomorphism argument that does? I'll think about this more tomorrow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-23T08:22:03.024Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "For the proof that <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>H</mi><mrow><mi>a</mi><mi>l</mi><mi>t</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">H_{alt}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.08125em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">a</span><span class=\"mord mathit\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathit\">t</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> is a 2-Sylow subgroup of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>A</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">A_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\">A</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\">n</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> it will suffice to show that its index in <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>H</mi><mrow><mi>s</mi><mi>y</mi><mi>m</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">H_{sym}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.08125em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">s</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathit\">m</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> is 2. Each element of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>H</mi><mrow><mi>s</mi><mi>y</mi><mi>m</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">H_{sym}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.08125em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">s</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathit\">m</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> can be written as a product of the generators <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>\u220f</mo><mo>(</mo><mi>i</mi><mspace width=\"0.277778em\"></mspace><mi>q</mi><mo>+</mo><mi>i</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">\\prod (i\\; q+i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1.00001em;vertical-align:-0.25001em;\"></span><span class=\"base textstyle uncramped\"><span class=\"op-symbol small-op mop\" style=\"top:-0.0000050000000000050004em;\">\u220f</span><span class=\"mopen\">(</span><span class=\"mord mathit\">i</span><span class=\"mord mspace thickspace\"></span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">q</span><span class=\"mbin\">+</span><span class=\"mord mathit\">i</span><span class=\"mclose\">)</span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">q</span></span></span></span> is a power of 2. If <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">s</span></span></span></span> is one of those (with <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>q</mi><mo>&gt;</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">q&gt;1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.64444em;\"></span><span class=\"strut bottom\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">q</span><span class=\"mrel\">&gt;</span><span class=\"mord mathrm\">1</span></span></span></span>), then <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi><mo>(</mo><mn>0</mn><mspace width=\"0.16667em\"></mspace><mn>1</mn><mo>)</mo><mo>=</mo><mo>(</mo><mi>q</mi><mspace width=\"0.277778em\"></mspace><mi>q</mi><mo>+</mo><mn>1</mn><mo>)</mo><mi>s</mi><mo>=</mo><mo>(</mo><mn>0</mn><mspace width=\"0.16667em\"></mspace><mn>1</mn><mo>)</mo><mo>(</mo><mn>0</mn><mspace width=\"0.16667em\"></mspace><mn>1</mn><mo>)</mo><mo>(</mo><mi>q</mi><mspace width=\"0.277778em\"></mspace><mi>q</mi><mo>+</mo><mn>1</mn><mo>)</mo><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s(0\\, 1) = (q \\;q+1)s = (0\\, 1)(0\\, 1)(q\\; q+1)s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">s</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">0</span><span class=\"mord mspace thinspace\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span><span class=\"mrel\">=</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">q</span><span class=\"mord mspace thickspace\"></span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">q</span><span class=\"mbin\">+</span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span><span class=\"mord mathit\">s</span><span class=\"mrel\">=</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">0</span><span class=\"mord mspace thinspace\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">0</span><span class=\"mord mspace thinspace\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">q</span><span class=\"mord mspace thickspace\"></span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">q</span><span class=\"mbin\">+</span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span><span class=\"mord mathit\">s</span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mn>0</mn><mspace width=\"0.16667em\"></mspace><mn>1</mn><mo>)</mo><mo>(</mo><mi>q</mi><mspace width=\"0.277778em\"></mspace><mi>q</mi><mo>+</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">(0\\, 1)(q\\; q+1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mopen\">(</span><span class=\"mord mathrm\">0</span><span class=\"mord mspace thinspace\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">q</span><span class=\"mord mspace thickspace\"></span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">q</span><span class=\"mbin\">+</span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span> is a generator of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>H</mi><mrow><mi>a</mi><mi>l</mi><mi>t</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">H_{alt}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.08125em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">a</span><span class=\"mord mathit\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathit\">t</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span>. This way we can move all transpositions <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mn>0</mn><mspace width=\"0.16667em\"></mspace><mn>1</mn><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">(0 \\,1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mopen\">(</span><span class=\"mord mathrm\">0</span><span class=\"mord mspace thinspace\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span> left adding suitable new generators of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>H</mi><mrow><mi>a</mi><mi>l</mi><mi>t</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">H_{alt}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.08125em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">a</span><span class=\"mord mathit\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathit\">t</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span>. Finally, we have at most one <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mn>0</mn><mspace width=\"0.16667em\"></mspace><mn>1</mn><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">(0\\, 1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mopen\">(</span><span class=\"mord mathrm\">0</span><span class=\"mord mspace thinspace\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span> in the beginning multiplied by an element of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>H</mi><mrow><mi>a</mi><mi>l</mi><mi>t</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">H_{alt}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.08125em;\">H</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.08125em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">a</span><span class=\"mord mathit\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathit\">t</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span>. Hence the index is 2.",
  "id": "599d3a94ba0f0f6e38d3d90c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-23T08:19:32.519Z",
  "text": "For the proof that $$H_{alt}$$ is a 2-Sylow subgroup of $$A_n$$ it will suffice to show that its index in $$H_{sym}$$ is 2. Each element of $$H_{sym}$$ can be written as a product of the generators $$\\prod (i\\; q+i)$$ where $$q$$ is a power of 2. If $$s$$ is one of those (with $$q>1$$), then $$s(0\\, 1) = (q \\;q+1)s = (0\\, 1)(0\\, 1)(q\\; q+1)s$$ where $$(0\\, 1)(q\\; q+1)$$ is a generator of $$H_{alt}$$. This way we can move all transpositions $$(0 \\,1)$$ left adding suitable new generators of $$H_{alt}$$. Finally, we have at most one $$(0\\, 1)$$ in the beginning multiplied by an element of $$H_{alt}$$. Hence the index is 2.",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "That&#39;s much nicer, thank you.",
  "id": "599d41f6578b44a046dc281d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-23T08:51:02.778Z",
  "text": "That's much nicer, thank you.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It looks like the 2-Sylow subgroups of alternating groups are correct but the generator list does not seem to be what was expected. After removing the doubles the list of Alt(12) becomes [(11)(0 2)(1 3), (11)(0 4)(1 5)(2 6)(3 7), (11)(0 1)(2 3), (11)(0 1)(4 5), (8 10)(9 11), (4 8)(5 9)(6 10)(7 11)]. The last element looks odd. I would have expected (11)(0  1)(8 9).",
  "id": "599ebc1c614889d47580913b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-24T11:44:28.593Z",
  "text": "It looks like the 2-Sylow subgroups of alternating groups are correct but the generator list does not seem to be what was expected. After removing the doubles the list of Alt(12) becomes [(11)(0 2)(1 3), (11)(0 4)(1 5)(2 6)(3 7), (11)(0 1)(2 3), (11)(0 1)(4 5), (8 10)(9 11), (4 8)(5 9)(6 10)(7 11)]. The last element looks odd. I would have expected (11)(0  1)(8 9).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "It is a bit strange. I&#39;ll have a look at it.",
  "id": "599ec398a7b406262dc109e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-24T12:16:24.307Z",
  "text": "It is a bit strange. I'll have a look at it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I organised the code for alternating groups a bit differently now, hopefully it&#39;s clear. Also, checking if (0 1) is in the group takes too long for large degrees (I tried Alt(100)) so I replaced it by checking the order of the group.",
  "id": "599edeaac101bc4e3a50b00b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-24T14:11:54.020Z",
  "text": "I organised the code for alternating groups a bit differently now, hopefully it's clear. Also, checking if (0 1) is in the group takes too long for large degrees (I tried Alt(100)) so I replaced it by checking the order of the group.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It would probably be quite easy to check if all generators are even.",
  "id": "599f08299acddb2407c57960",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-24T17:08:57.494Z",
  "text": "It would probably be quite easy to check if all generators are even.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "True. That would probably be faster.",
  "id": "599f1f4576a757f808dcb740",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-24T18:47:33.720Z",
  "text": "True. That would probably be faster.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-25T13:47:21.993Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I believe that <code>gens</code>should be ordered differently in the <code>alt</code> case. Instead of having first the &#39;main&#39; generators <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>\u220f</mo><mo>(</mo><mi>i</mi><mspace width=\"0.277778em\"></mspace><mi>q</mi><mo>+</mo><mi>i</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">\\prod (i\\; q+i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1.00001em;vertical-align:-0.25001em;\"></span><span class=\"base textstyle uncramped\"><span class=\"op-symbol small-op mop\" style=\"top:-0.0000050000000000050004em;\">\u220f</span><span class=\"mopen\">(</span><span class=\"mord mathit\">i</span><span class=\"mord mspace thickspace\"></span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">q</span><span class=\"mbin\">+</span><span class=\"mord mathit\">i</span><span class=\"mclose\">)</span></span></span></span> and then the &#39;auxiliary&#39; generators (0 1)(q q+1) the latter should be interspersed in the list so that the first  2i-2 elements would generate the  group on [0...2**i - 1].",
  "id": "59a02a18614889d47586dafb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-08-25T13:46:00.679Z",
  "text": "I believe that `gens`should be ordered differently in the `alt` case. Instead of having first the 'main' generators $$\\prod (i\\; q+i)$$ and then the 'auxiliary' generators (0 1)(q q+1) the latter should be interspersed in the list so that the first  2i-2 elements would generate the  group on [0...2**i - 1].",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Yes, I thought that too because that would be nicer. I actually started implementing it that way but that involved more code and &quot;if&quot; statements to handle everything properly so I finally decided to do it the way I committed, even though the order wasn&#39;t that great.",
  "id": "59a02c4aba0f0f6e38e0cb5d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-08-25T13:55:22.765Z",
  "text": "Yes, I thought that too because that would be nicer. I actually started implementing it that way but that involved more code and \"if\" statements to handle everything properly so I finally decided to do it the way I committed, even though the order wasn't that great.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Now that I think about it, the amount of code doesn&#39;t really matter that much so I should probably do it that way after all.",
  "id": "59a02c92ba0f0f6e38e0cd76",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-08-25T13:56:34.859Z",
  "text": "Now that I think about it, the amount of code doesn't really matter that much so I should probably do it that way after all.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>Is this a good order or should Permutation(11)(0, 1)(8, 9) come after Permutation(8, 10)(9, 11):</p><p>[Permutation(11)(0, 2)(1, 3), Permutation(11)(0, 1)(2, 3), Permutation(11)(0, 4)(1, 5)(2, 6)(3, 7), Permutation(11)(0, 1)(4, 5), Permutation(11)(0, 1)(8, 9), Permutation(8, 10)(9, 11)]</p>",
  "id": "59a03006614889d47586f7f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-08-25T14:11:18.176Z",
  "text": "Is this a good order or should Permutation(11)(0, 1)(8, 9) come after Permutation(8, 10)(9, 11):\n\n[Permutation(11)(0, 2)(1, 3), Permutation(11)(0, 1)(2, 3), Permutation(11)(0, 4)(1, 5)(2, 6)(3, 7), Permutation(11)(0, 1)(4, 5), Permutation(11)(0, 1)(8, 9), Permutation(8, 10)(9, 11)]",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-25T14:53:53.572Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think the order does not matter when the two generators on the same level come together. Then <code>j</code> could be <code>2*power</code> (+/- a suitable constant) in the <code>alt</code> case. The order you show will probably do fine.",
  "id": "59a039799acddb2407ca9442",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-08-25T14:51:37.210Z",
  "text": "I think the order does not matter when the two generators on the same level come together. Then `j` could be `2*power` (+/- a suitable constant) in the `alt` case. The order you show will probably do fine.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>I wrote a &quot;final report&quot; post to use for the final evaluation. Do you think it will be suitable? <a href=\"https://valglad.github.io/2017/08/25/report/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://valglad.github.io/2017/08/25/report/</a></p><p>Also, it appears that Planet SymPy hasn&#39;t been updated since 14 August. Is that  normal?</p>",
  "id": "59a0404a210ac26920bef670",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-08-25T15:20:42.111Z",
  "text": "I wrote a \"final report\" post to use for the final evaluation. Do you think it will be suitable? https://valglad.github.io/2017/08/25/report/\n\nAlso, it appears that Planet SymPy hasn't been updated since 14 August. Is that  normal?",
  "unread": false,
  "urls": [
   {
    "url": "https://valglad.github.io/2017/08/25/report/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "There have been some issues with the updates of Planet Sympy. This is not the first time. I&#39;ll return to your report later after having read it. ",
  "id": "59a0429bba0f0f6e38e1410f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-08-25T15:30:35.892Z",
  "text": "There have been some issues with the updates of Planet Sympy. This is not the first time. I'll return to your report later after having read it. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think your report is excellent, thank you. Google would probably  be satisfied with a fairly condensed list of links, but it is good to have more detailed comments available for the future.",
  "id": "59a14599578b44a046ed58f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-08-26T09:55:37.133Z",
  "text": "I think your report is excellent, thank you. Google would probably  be satisfied with a fairly condensed list of links, but it is good to have more detailed comments available for the future.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Thanks :) I&#39;ll complete the evaluation today then",
  "id": "59a14cb8614889d4758b5829",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-08-26T10:26:00.498Z",
  "text": "Thanks :) I'll complete the evaluation today then",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"valglad\" class=\"mention\">@valglad</span> can you copy this report to the sympy wiki (see the reports from previous years)",
  "id": "59a1e35342d2f610258997c3",
  "issues": [],
  "mentions": [
   {
    "screenName": "valglad",
    "userId": "5895bedcd73408ce4f480c49",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2017-08-26T21:08:35.219Z",
  "text": "@valglad can you copy this report to the sympy wiki (see the reports from previous years)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "And also please update the group theory section 2018 ideas page for future students ",
  "id": "59a1e37319147ac32315fbe0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-08-26T21:09:07.905Z",
  "text": "And also please update the group theory section 2018 ideas page for future students ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Sure",
  "id": "59a28faf8f4427b462a2ebcd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-08-27T09:23:59.689Z",
  "text": "Sure",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The generators of 2-Sylow subgroups of alternating groups now look like what was expected. I think it is ready to be merged.",
  "id": "59a29597ee5c9a4c5f040936",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-08-27T09:49:11.223Z",
  "text": "The generators of 2-Sylow subgroups of alternating groups now look like what was expected. I think it is ready to be merged.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I copied the link to the report to the &quot;GSoC 2017 Report&quot; page. Would this suffice or would it be better to have the text of the report in a separate wiki page?",
  "id": "59a295f38f4427b462a303a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-08-27T09:50:43.187Z",
  "text": "I copied the link to the report to the \"GSoC 2017 Report\" page. Would this suffice or would it be better to have the text of the report in a separate wiki page?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think it should appear in the same way as the applications in a separate github wiki page.",
  "id": "59a2aa37210ac26920c7ad07",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-08-27T11:17:11.077Z",
  "text": "I think it should appear in the same way as the applications in a separate github wiki page.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "One of the tests in the homomorphism check PR timed out but I can&#39;t see any details when I click on it. Don&#39;t know if it&#39;s just my browser.",
  "id": "59a57db8578b44a046fe662f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-08-29T14:44:08.065Z",
  "text": "One of the tests in the homomorphism check PR timed out but I can't see any details when I click on it. Don't know if it's just my browser.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It looks like the job never properly started. I&#39;ve restarted it now. There should be no reason why it wouldn&#39;t pass.",
  "id": "59a589baba0f0f6e38f651eb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-08-29T15:35:22.085Z",
  "text": "It looks like the job never properly started. I've restarted it now. There should be no reason why it wouldn't pass.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It did pass. I think it can be merged now.",
  "id": "59a58d9b614889d4759c727b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-08-29T15:51:55.056Z",
  "text": "It did pass. I think it can be merged now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I&#39;ve just created a pull request with another method of computing a finite presentation for a permutation group. Was going to do that back in September but then other things came up. It will probably take a while to review but it&#39;s not an urgently needed function anyway I suppose.",
  "id": "5a299ab43a80a84b5bccce1f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-12-07T19:47:00.558Z",
  "text": "I've just created a pull request with another method of computing a finite presentation for a permutation group. Was going to do that back in September but then other things came up. It will probably take a while to review but it's not an urgently needed function anyway I suppose.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I&#39;ll take a look at that. It may take some time though as I have had other things in my mind.",
  "id": "5a29a1f03ae2aa6b3f9c449d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-12-07T20:17:52.470Z",
  "text": "I'll take a look at that. It may take some time though as I have had other things in my mind.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Thanks :)",
  "id": "5a29a2d43ae2aa6b3f9c4b41",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-12-07T20:21:40.935Z",
  "text": "Thanks :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The pull request seems very good but I&#39;ll need some more time in order to understand how the code works :smile: .",
  "id": "5a351c615355812e57e1c08e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-12-16T13:15:13.873Z",
  "text": "The pull request seems very good but I'll need some more time in order to understand how the code works :smile: .",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Yeah, there&#39;s quite a bit of code there and it also took me a while to understand the algorithm and get stuff right. I did run lots of random tests (with groups of degree &lt;=6) so at least I&#39;m fairly confident that it does what it&#39;s supposed to. Though it&#39;s very possible that some bits could be done in a more efficient way.",
  "id": "5a37c55fa2be466828b6f3df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-12-18T13:40:47.115Z",
  "text": "Yeah, there's quite a bit of code there and it also took me a while to understand the algorithm and get stuff right. I did run lots of random tests (with groups of degree <=6) so at least I'm fairly confident that it does what it's supposed to. Though it's very possible that some bits could be done in a more efficient way.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Valeriia, can you update <a href=\"https://github.com/sympy/sympy/wiki/Release-Notes-for-1.2\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">release notes</a> with your results. It is good to have that done well before the release date.",
  "id": "5a62f3f5e0141226506abe51",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-20T07:47:01.980Z",
  "text": "Valeriia, can you update [release notes](https://github.com/sympy/sympy/wiki/Release-Notes-for-1.2) with your results. It is good to have that done well before the release date.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/wiki/Release-Notes-for-1.2"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Ah, I will. Sorry, I haven&#39;t been around for a while",
  "id": "5a80278c86ef1bb141964074",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-11T11:22:52.164Z",
  "text": "Ah, I will. Sorry, I haven't been around for a while",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "No problem. There should be time enough.",
  "id": "5a8028ecf283b8e54648e6b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-11T11:28:44.492Z",
  "text": "No problem. There should be time enough.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Is there any alternative reference resource for &quot;The Handbook of Computational Group Theory&quot; ?",
  "id": "5aa0253b6f8b4b9946fdba83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-07T17:45:31.701Z",
  "text": "Is there any alternative reference resource for \"The Handbook of Computational Group Theory\" ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "At the end of the handbook, there is a long list of resources.",
  "id": "5aa029d935dd17022e31c86d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-07T18:05:13.445Z",
  "text": "At the end of the handbook, there is a long list of resources.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Well, I currently don&#39;t have the handbook and there are no pdfs available online too. ",
  "id": "5aa02b1a6fba1a703adcfe17",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-07T18:10:34.555Z",
  "text": "Well, I currently don't have the handbook and there are no pdfs available online too. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "This was the primary reason why I was looking for an alternative resource.",
  "id": "5aa02b916fba1a703add004e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-07T18:12:33.564Z",
  "text": "This was the primary reason why I was looking for an alternative resource.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The handbook has been available online. Google gives for example this <a href=\"https://wpdfence.ml/publications/free-ebook-handbook-of-computational-group-theory-by-derek-f-holt-bettina-eick-eamonn-a-obrien-pdf.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://wpdfence.ml/publications/free-ebook-handbook-of-computational-group-theory-by-derek-f-holt-bettina-eick-eamonn-a-obrien-pdf.html</a> though I have not tried it.",
  "id": "5aa030af888332ee3a0e9b01",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-03-07T18:34:23.873Z",
  "text": "The handbook has been available online. Google gives for example this https://wpdfence.ml/publications/free-ebook-handbook-of-computational-group-theory-by-derek-f-holt-bettina-eick-eamonn-a-obrien-pdf.html though I have not tried it.",
  "unread": false,
  "urls": [
   {
    "url": "https://wpdfence.ml/publications/free-ebook-handbook-of-computational-group-theory-by-derek-f-holt-bettina-eick-eamonn-a-obrien-pdf.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I&#39;ve tried these links, the search results that I found, but none of them were legit.",
  "id": "5aa0352ff3f6d24c684b080a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-03-07T18:53:35.316Z",
  "text": "I've tried these links, the search results that I found, but none of them were legit.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I think the pdf that used to be available got removed. I remember having it bookmarked at one point and then discovering that the page returned an error. The only other resources I can think of would be random papers (I think most of the references from the handbook are papers) and GAP&#39;s documentation and source code.",
  "id": "5aa0445b53c1dbb743b67f50",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-03-07T19:58:19.252Z",
  "text": "I think the pdf that used to be available got removed. I remember having it bookmarked at one point and then discovering that the page returned an error. The only other resources I can think of would be random papers (I think most of the references from the handbook are papers) and GAP's documentation and source code.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-07T20:02:04.284Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<a href=\"https://books.google.ru/books?id=rnTLBQAAQBAJ&amp;pg=PA376&amp;lpg=PA376&amp;dq=computational+group+theory+nice+monomorphism+algorithm&amp;source=bl&amp;ots=SBpgz7NM8-&amp;sig=En3YROm3yLqc4Vjw1i2K4UGbOTU&amp;hl=en&amp;sa=X&amp;ved=0ahUKEwj5wdvUydHSAhUFjSwKHfU8BtYQ6AEIRjAG#v=onepage&amp;q&amp;f=false\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">This google book</a> lets you see a few bits of the book but unfortunately not all of it",
  "id": "5aa044e2e4d1c63604d38be3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-03-07T20:00:34.474Z",
  "text": "[This google book](https://books.google.ru/books?id=rnTLBQAAQBAJ&pg=PA376&lpg=PA376&dq=computational+group+theory+nice+monomorphism+algorithm&source=bl&ots=SBpgz7NM8-&sig=En3YROm3yLqc4Vjw1i2K4UGbOTU&hl=en&sa=X&ved=0ahUKEwj5wdvUydHSAhUFjSwKHfU8BtYQ6AEIRjAG#v=onepage&q&f=false) lets you see a few bits of the book but unfortunately not all of it",
  "unread": false,
  "urls": [
   {
    "url": "https://books.google.ru/books?id=rnTLBQAAQBAJ&amp;pg=PA376&amp;lpg=PA376&amp;dq=computational+group+theory+nice+monomorphism+algorithm&amp;source=bl&amp;ots=SBpgz7NM8-&amp;sig=En3YROm3yLqc4Vjw1i2K4UGbOTU&amp;hl=en&amp;sa=X&amp;ved=0ahUKEwj5wdvUydHSAhUFjSwKHfU8BtYQ6AEIRjAG#v=onepage&amp;q&amp;f=false"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Great! I&#39;ll take a look at it. Thank you!",
  "id": "5aa0b0356fba1a703adf87bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-03-08T03:38:29.574Z",
  "text": "Great! I'll take a look at it. Thank you!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Do we need a modified Todd-Coxeter algorithm implementation for the presentation of sub-groups?",
  "id": "5aafe2aee4ff28713a4ddd8f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-19T16:17:50.803Z",
  "text": "Do we need a modified Todd-Coxeter algorithm implementation for the presentation of sub-groups?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I see that Reidemeister-Schreier is already implemented, but modified Todd-Coxeter was mentioned in the ideas page",
  "id": "5aafe2efe4d1c63604196675",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-19T16:18:55.009Z",
  "text": "I see that Reidemeister-Schreier is already implemented, but modified Todd-Coxeter was mentioned in the ideas page",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "That would probably be good. There was a PR on it a couple of years ago but it looks abandoned. See here: <span data-link-type=\"issue\" data-issue=\"11361\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#11361</span>",
  "id": "5ab030cee4d1c636041b25d4",
  "issues": [
   {
    "number": "11361",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-03-19T21:51:10.695Z",
  "text": "That would probably be good. There was a PR on it a couple of years ago but it looks abandoned. See here: https://github.com/sympy/sympy/pull/11361",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I&#39;ve seen that GAP implements a method called <code>IsomorphismGroups</code>which computes the isomorphism between the given groups if at all there exists an isomorphism between them, else returns <code>False</code>.  ",
  "id": "5ab27be86f8b4b9946518a17",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-03-21T15:36:08.826Z",
  "text": "I've seen that GAP implements a method called `IsomorphismGroups`which computes the isomorphism between the given groups if at all there exists an isomorphism between them, else returns `False`.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I  think that this can be implemented in Sympy instead of just checking if there exists an isomorphism between two groups.",
  "id": "5ab27c19bb1018b37a0d3460",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-03-21T15:36:57.586Z",
  "text": "I  think that this can be implemented in Sympy instead of just checking if there exists an isomorphism between two groups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Or would it be better if both the methods are implemented?",
  "id": "5ab27c8bfa066c532556b795",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-03-21T15:38:51.189Z",
  "text": "Or would it be better if both the methods are implemented?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-21T20:20:20.186Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Computing an isomorphism would definitely be useful, in any case. But sometimes we might just like to know whether one exists in principle, in which case there could be ways to do it quicker - maybe you know the size of the group is prime in which case you already know it&#39;s isomorphic to <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>C</mi><mi>p</mi></msub></mrow><annotation encoding=\"application/x-tex\">C_p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.07153em;\">C</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.07153em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\">p</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span> - that sort of thing. This could be more efficient in some special cases, though I suspect that in general, you will have to resort to looking for an explicit isomorphism anyway. So, to answer your question, we do probably want both methods, but one one of them will likely end up calling the other.",
  "id": "5ab2bdf8c3c5f8b90d9bc907",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-03-21T20:18:00.682Z",
  "text": "Computing an isomorphism would definitely be useful, in any case. But sometimes we might just like to know whether one exists in principle, in which case there could be ways to do it quicker - maybe you know the size of the group is prime in which case you already know it's isomorphic to $$C_p$$ - that sort of thing. This could be more efficient in some special cases, though I suspect that in general, you will have to resort to looking for an explicit isomorphism anyway. So, to answer your question, we do probably want both methods, but one one of them will likely end up calling the other.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "And in general, i meant apart from the optimisation for special cases, which test do we use for checking the isomorphism?",
  "id": "5ab2f7fdfa066c53255931e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-03-22T00:25:33.736Z",
  "text": "And in general, i meant apart from the optimisation for special cases, which test do we use for checking the isomorphism?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Random isomorphism test?",
  "id": "5ab2f808458cbde557609bf2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-03-22T00:25:44.429Z",
  "text": "Random isomorphism test?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-22T13:30:46.406Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Sure, though there should probably be a deterministic version as well, maybe a keyword argument to switch between the two. GAP also has a library of small groups and a function that matches a group to one in the library ( <code>IdGroup</code>: <a href=\"https://groupprops.subwiki.org/wiki/GAP:IdGroup\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://groupprops.subwiki.org/wiki/GAP:IdGroup</a> ) so theoretically, that&#39;s another thing we could use for checking if two small groups are isomorphic (if we acquire a suitable library that is; I&#39;m not sure if there is a way to use GAP&#39;s library or if we&#39;d have to compile one essentially by hand).",
  "id": "5ab3afe2458cbde55763b689",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-03-22T13:30:10.385Z",
  "text": "Sure, though there should probably be a deterministic version as well, maybe a keyword argument to switch between the two. GAP also has a library of small groups and a function that matches a group to one in the library ( `IdGroup`: https://groupprops.subwiki.org/wiki/GAP:IdGroup ) so theoretically, that's another thing we could use for checking if two small groups are isomorphic (if we acquire a suitable library that is; I'm not sure if there is a way to use GAP's library or if we'd have to compile one essentially by hand).",
  "unread": false,
  "urls": [
   {
    "url": "https://groupprops.subwiki.org/wiki/GAP:IdGroup"
   }
  ],
  "v": 2
 },
 {
  "editedAt": "2018-03-22T14:35:13.686Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Random isomorphism test isn&#39;t that efficient in case of checking isomorphism for small groups, it&#39;s mentioned in the GAP manual as well. So, I was thinking we implement 3 methods, the first one is to compute the isomorphism between two groups. And then, we implement 2 methods for checking the isomorphism depending upon the size of the group. We implement the <code>IdGroup</code> method for small group else we use the random isomorphism test.",
  "id": "5ab3be70e3d0b1ff2c56e7fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-03-22T14:32:16.891Z",
  "text": "Random isomorphism test isn't that efficient in case of checking isomorphism for small groups, it's mentioned in the GAP manual as well. So, I was thinking we implement 3 methods, the first one is to compute the isomorphism between two groups. And then, we implement 2 methods for checking the isomorphism depending upon the size of the group. We implement the `IdGroup` method for small group else we use the random isomorphism test.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Sounds reasonable. I think it would also be good to have a method that tries everything. E.g. do <code>IdGroup</code>, then consider the size and if this all fails continue to either random isomorphism or the deterministic isomorphism search.",
  "id": "5ab40b99e4ff28713a626225",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-03-22T20:01:29.587Z",
  "text": "Sounds reasonable. I think it would also be good to have a method that tries everything. E.g. do `IdGroup`, then consider the size and if this all fails continue to either random isomorphism or the deterministic isomorphism search.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-22T20:22:42.483Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Yeah, that can be done too. It&#39;s essentially the same, you first check the size and then you decide which algorithm is to be used to test the isomorphism.",
  "id": "5ab41084e4ff28713a62794f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-03-22T20:22:28.916Z",
  "text": "Yeah, that can be done too. It's essentially the same, you first check the size and then you decide which algorithm is to be used to test the isomorphism.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Any suggested or specific algorithms that you want me to implement in the Polycyclic presentation of Groups? ",
  "id": "5ab5380f2b9dfdbc3a155b18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-03-23T17:23:27.919Z",
  "text": "Any suggested or specific algorithms that you want me to implement in the Polycyclic presentation of Groups? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "And also as pcp-Groups involve polycyclic groups, is it necessary to implement a seperate class for polycyclic groups?   ",
  "id": "5ab54b7535dd17022e92b451",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-03-23T18:46:13.837Z",
  "text": "And also as pcp-Groups involve polycyclic groups, is it necessary to implement a seperate class for polycyclic groups?   ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-23T18:49:35.881Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Well, what I was thinking is that we just treat it as an instance of a group  and just check if a particular group is polycyclic before the required computation is done.",
  "id": "5ab54c2bf3f6d24c68ab5b03",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-03-23T18:49:15.318Z",
  "text": "Well, what I was thinking is that we just treat it as an instance of a group  and just check if a particular group is polycyclic before the required computation is done.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "There isn&#39;t a class for a general group, only <code>PermutationGroup</code> and <code>FpGroup</code>. I suppose you could in theory give <code>FpGroup</code> an attribute <code>is_polycyclic</code> and implement the polycyclic stuff as special cases of its methods. But you&#39;d probably want to switch to the <a href=\"https://www.gap-system.org/Manuals/pkg/polycyclic-2.10.1/doc/chap2.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">power-conjugate presentation</a> once you discover a group is polycyclic, probably use that presentation for term rewriting. I think it may be worth having groups in polycyclic presentation as a subclass of <code>FpGroup</code>, if not in a class of their own, or something like that.",
  "id": "5ab56dae458cbde5576c1e09",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-03-23T21:12:14.524Z",
  "text": "There isn't a class for a general group, only `PermutationGroup` and `FpGroup`. I suppose you could in theory give `FpGroup` an attribute `is_polycyclic` and implement the polycyclic stuff as special cases of its methods. But you'd probably want to switch to the [power-conjugate presentation](https://www.gap-system.org/Manuals/pkg/polycyclic-2.10.1/doc/chap2.html) once you discover a group is polycyclic, probably use that presentation for term rewriting. I think it may be worth having groups in polycyclic presentation as a subclass of `FpGroup`, if not in a class of their own, or something like that.",
  "unread": false,
  "urls": [
   {
    "url": "https://www.gap-system.org/Manuals/pkg/polycyclic-2.10.1/doc/chap2.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "The should probably share a common Group superclass, if just to ensure that they have the same API (where possible)",
  "id": "5ab594387685a046389cf696",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-03-23T23:56:40.077Z",
  "text": "The should probably share a common Group superclass, if just to ensure that they have the same API (where possible)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I have added my proposal to the Sympy wiki, can someone please review it?",
  "id": "5ab8dfb235dd17022e9f8a65",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-03-26T11:55:30.038Z",
  "text": "I have added my proposal to the Sympy wiki, can someone please review it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Here&#39;s the link: <a href=\"https://github.com/sympy/sympy/wiki/GSoC-2018-Application-Ravicharan:-Group-Theory\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/wiki/GSoC-2018-Application-Ravicharan:-Group-Theory</a>",
  "id": "5ab8dfc45f188ccc15f9aff4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-03-26T11:55:48.822Z",
  "text": "Here's the link: https://github.com/sympy/sympy/wiki/GSoC-2018-Application-Ravicharan:-Group-Theory",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/wiki/GSoC-2018-Application-Ravicharan:-Group-Theory"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Hello! Thanks you <span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> <span data-link-type=\"mention\" data-screen-name=\"valglad\" class=\"mention\">@valglad</span> <span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span>  for selecting my  proposal. So, <span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> and <span data-link-type=\"mention\" data-screen-name=\"valglad\" class=\"mention\">@valglad</span> suggested that we could use this channel for the discussions on Group Theory.<br>I&#39;ve set up my personal blog running. I will be using this for weekly blog updates. Here&#39;s the link to the blog <a href=\"https://ravicharann.github.io/blog/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ravicharann.github.io/blog/</a><br>As mentioned earlier my timezone is IST(UTC + 5:30), but as I stay up late so I&#39;m flexible to adjust to your local time zone. My semester exams will end by 8th of May and  be assuming a buffer of 2 days, I&#39;ll be free by 10th May, after which I can start working on the project ",
  "id": "5adf739315c9b031142fa4e7",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   },
   {
    "screenName": "valglad",
    "userId": "5895bedcd73408ce4f480c49",
    "userIds": []
   },
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   },
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   },
   {
    "screenName": "valglad",
    "userId": "5895bedcd73408ce4f480c49",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-24T18:12:35.212Z",
  "text": "Hello! Thanks you @jksuom @valglad @asmeurer  for selecting my  proposal. So, @asmeurer and @valglad suggested that we could use this channel for the discussions on Group Theory. \nI've set up my personal blog running. I will be using this for weekly blog updates. Here's the link to the blog https://ravicharann.github.io/blog/ \nAs mentioned earlier my timezone is IST(UTC + 5:30), but as I stay up late so I'm flexible to adjust to your local time zone. My semester exams will end by 8th of May and  be assuming a buffer of 2 days, I'll be free by 10th May, after which I can start working on the project ",
  "unread": false,
  "urls": [
   {
    "url": "https://ravicharann.github.io/blog/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Also, what am I expected to do right now after deploying the blog? ",
  "id": "5adf73bb109bb04332f837a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-24T18:13:15.407Z",
  "text": "Also, what am I expected to do right now after deploying the blog? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "make sure the blog rss is added to planet sympy ",
  "id": "5adf8b3426a769820b2c00c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-24T19:53:24.408Z",
  "text": "make sure the blog rss is added to planet sympy ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "The bonding period is meant to give you some time to get to know your org and the community better so you could work on some issues, not necessarily group theory, or help review PRs, or just hang out on the gitter channel and answer an occasional question, or you could start thinking about how exactly you are going to implement the things you planned and read up on algorithms you might need reading up on - it&#39;s up to you. Kind of depends on how much time you have in the run-up to your exams.",
  "id": "5adf8e1a5f188ccc159d2e86",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-24T20:05:46.383Z",
  "text": "The bonding period is meant to give you some time to get to know your org and the community better so you could work on some issues, not necessarily group theory, or help review PRs, or just hang out on the gitter channel and answer an occasional question, or you could start thinking about how exactly you are going to implement the things you planned and read up on algorithms you might need reading up on - it's up to you. Kind of depends on how much time you have in the run-up to your exams.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Okay sure, thank you. I&#39;ll look into it.",
  "id": "5adf9d9b15c9b031143080f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-04-24T21:11:55.254Z",
  "text": "Okay sure, thank you. I'll look into it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "So, I&#39;m done with my exams and now ready to get started. I&#39;ve sent a PR to planet Sympy adding my blog&#39;s RSS ",
  "id": "5af5ac73d245fe2eb7a21d16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-11T14:45:07.020Z",
  "text": "So, I'm done with my exams and now ready to get started. I've sent a PR to planet Sympy adding my blog's RSS ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "So can I get to know when do I need to update you regarding my status? And also, will the PRs be reviewed on a weekly basis? What time would the mentors be available for communication?",
  "id": "5af5acd7e0b50c2d05b50883",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-11T14:46:47.044Z",
  "text": "So can I get to know when do I need to update you regarding my status? And also, will the PRs be reviewed on a weekly basis? What time would the mentors be available for communication?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>The PR reviewing will depend partly on when you submit them - some parts of your project make take longer than a week to code up a PR-worth chunk. I&#39;m planning to start reviewing within a day or two of you submitting a PR and it how long it would take very much depends on what the PR is and how many potential issues there are.</p><p>I think it could be good to have an update at the start of the week about what you are planning to be doing and if you are expecting to submit a PR at the end of the week (or whenever). I&#39;ll also have the channel open on my laptop from approximately 10 to about 16 UTC most days and sometimes also later in the evening (I&#39;m in UTC+1), so would be able to answer questions then. Other than that, I&#39;m not sure we&#39;ll need any scheduled meeting on here. We can see how it goes and organise it later if necessary</p>",
  "id": "5af740e55a1d895fae35480c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-12T19:30:45.778Z",
  "text": "The PR reviewing will depend partly on when you submit them - some parts of your project make take longer than a week to code up a PR-worth chunk. I'm planning to start reviewing within a day or two of you submitting a PR and it how long it would take very much depends on what the PR is and how many potential issues there are.\n\nI think it could be good to have an update at the start of the week about what you are planning to be doing and if you are expecting to submit a PR at the end of the week (or whenever). I'll also have the channel open on my laptop from approximately 10 to about 16 UTC most days and sometimes also later in the evening (I'm in UTC+1), so would be able to answer questions then. Other than that, I'm not sure we'll need any scheduled meeting on here. We can see how it goes and organise it later if necessary",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Great, Thank you! ",
  "id": "5af74d262df44c2d0621d65f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-12T20:23:02.912Z",
  "text": "Great, Thank you! ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-15T17:43:36.634Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I will be working on &quot;Implementation of Automaton for word reduction in<br>rewriting systems&quot; this week. Usage of the automation for word reduction is mentioned in the sections 13.1.3 and 13.1.4 of the handbook. <span data-link-type=\"mention\" data-screen-name=\"valglad\" class=\"mention\">@valglad</span> shared <a href=\"https://www.sciencedirect.com/science/article/pii/S0747717108800934\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">this</a> article in which the construction of the automaton is mentioned. Although, I need to understand it a bit more before I proceed to the implementation. But this is only specific to automatic groups.<br>Should I continue with this, or are there any other alternative sources of references?  ",
  "id": "5afb1c38d245fe2eb7b1e7dc",
  "issues": [],
  "mentions": [
   {
    "screenName": "valglad",
    "userId": "5895bedcd73408ce4f480c49",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-15T17:43:20.968Z",
  "text": "I will be working on \"Implementation of Automaton for word reduction in\nrewriting systems\" this week. Usage of the automation for word reduction is mentioned in the sections 13.1.3 and 13.1.4 of the handbook. @valglad shared [this](https://www.sciencedirect.com/science/article/pii/S0747717108800934) article in which the construction of the automaton is mentioned. Although, I need to understand it a bit more before I proceed to the implementation. But this is only specific to automatic groups. \nShould I continue with this, or are there any other alternative sources of references?  ",
  "unread": false,
  "urls": [
   {
    "url": "https://www.sciencedirect.com/science/article/pii/S0747717108800934"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "You could try searching around, there are probably more articles on it out there, maybe even source code for something that implemented a similar thing",
  "id": "5afb1fd9d245fe2eb7b1f4a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-15T17:58:49.433Z",
  "text": "You could try searching around, there are probably more articles on it out there, maybe even source code for something that implemented a similar thing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-15T18:02:50.609Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Okay, sure I&#39;ll take a look. And what about the automatic groups?",
  "id": "5afb2092bd10f34a6804a5f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-15T18:01:54.558Z",
  "text": "Okay, sure I'll take a look. And what about the automatic groups?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Should there be another class implemented for them?",
  "id": "5afb20a3f04ce53632dcda18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-15T18:02:11.968Z",
  "text": "Should there be another class implemented for them?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I don&#39;t think so, they are just <code>FpGroup</code> with a specific property. If you find that it&#39;ll be particularly useful for what you are doing, then I suppose you could implement them as a subclass, but you could probably do without.",
  "id": "5afb24961cfca775e10f2e0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-15T18:19:02.832Z",
  "text": "I don't think so, they are just `FpGroup` with a specific property. If you find that it'll be particularly useful for what you are doing, then I suppose you could implement them as a subclass, but you could probably do without.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Yeah, another class for automatic groups won&#39;t be needed I guess. &#39;Coz looks like the previous implementation of the word reduction using Knuth-Bendix methods is also specific to automatic groups. ",
  "id": "5afb29d15666c42eb612f373",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-15T18:41:21.098Z",
  "text": "Yeah, another class for automatic groups won't be needed I guess. 'Coz looks like the previous implementation of the word reduction using Knuth-Bendix methods is also specific to automatic groups. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-20T10:49:12.777Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Is it okay to make use of this external library, <a href=\"https://github.com/pytransitions/transitions\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">pytransitions</a> ,for the implementation of fsm?  I can code it from scratch as well if you want me to, that won&#39;t be a problem. ",
  "id": "5b01527fd245fe2eb7c542f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-20T10:48:31.135Z",
  "text": "Is it okay to make use of this external library, [pytransitions](https://github.com/pytransitions/transitions) ,for the implementation of fsm?  I can code it from scratch as well if you want me to, that won't be a problem. ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pytransitions/transitions"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I would prefer not making use of external libraries.",
  "id": "5b0158b35a1d895fae547771",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-20T11:14:59.594Z",
  "text": "I would prefer not making use of external libraries.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-20T11:29:17.571Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Okay sure :)",
  "id": "5b015ae75666c42eb6268704",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-20T11:24:23.571Z",
  "text": "Okay sure :)",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Also, For the cases that involve exponents in the word, I think that the automaton could take up a large amount of time. For example consider the system with the set of rules <code>{b**-1*a**-1: a**-1*b**-1, b**-1*a: a*b**-1, b*a: a*b, b*a**-1: a**-1*b}</code> and the word that needs to be reduced is of the form <code>b**2*a**2*b**-2*a**2</code>, as the states that we take in the automaton are the prefixes (with the proper prefixes being the accept states and the complete left hand rules to be dead states) the states of the automata would be <code>[start, b**-1, b, b**-1*a, b*a, b**-1*a**-1, b*a**-1]</code> and the alphabets are <code>[a, b, a**-1, b**-1 ]</code>. Since the word contains exponents, it should be treated as <code>b*b*a*a*b**-1*b**-1*a*a</code>as for every input we need to make the state transition. The problem with this is that, if the exponents are of higher order, something like  <code>b**n*a**n</code> this should be transformed to <code>a**n*b**n</code> but since in the automata we cannot consider this as <code>(b*a)**n</code> this could really take a large amount of time (remain in the same state <code>b</code> until you see an <code>a</code>which id n times and this has to be repeated for all the combinations of b and a we encounter even after every transformation)<br>What do we do for such cases? ",
  "id": "5b015babbd10f34a68184628",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-20T11:27:39.888Z",
  "text": "Also, For the cases that involve exponents in the word, I think that the automaton could take up a large amount of time. For example consider the system with the set of rules `{b**-1*a**-1: a**-1*b**-1, b**-1*a: a*b**-1, b*a: a*b, b*a**-1: a**-1*b}` and the word that needs to be reduced is of the form `b**2*a**2*b**-2*a**2`, as the states that we take in the automaton are the prefixes (with the proper prefixes being the accept states and the complete left hand rules to be dead states) the states of the automata would be `[start, b**-1, b, b**-1*a, b*a, b**-1*a**-1, b*a**-1]` and the alphabets are `[a, b, a**-1, b**-1 ]`. Since the word contains exponents, it should be treated as `b*b*a*a*b**-1*b**-1*a*a`as for every input we need to make the state transition. The problem with this is that, if the exponents are of higher order, something like  `b**n*a**n` this should be transformed to `a**n*b**n` but since in the automata we cannot consider this as `(b*a)**n` this could really take a large amount of time (remain in the same state `b` until you see an `a`which id n times and this has to be repeated for all the combinations of b and a we encounter even after every transformation) \nWhat do we do for such cases? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I think deducing the rule  <code>b**n*a**m: a**m*b**n from b*a: a*b</code> will be a problem because that would require an additional <code>n+m-1</code> states(all proper prefixes of the rule ) in the automaton. Mentioned in section 13.1.3 of the Handbook. ",
  "id": "5b015d9152194a4a67fcb4ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-20T11:35:45.530Z",
  "text": "I think deducing the rule  `b**n*a**m: a**m*b**n from b*a: a*b` will be a problem because that would require an additional `n+m-1` states(all proper prefixes of the rule ) in the automaton. Mentioned in section 13.1.3 of the Handbook. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>So, as I replied when you first asked me:</p><p>You can&#39;t do much here really unless you could check if a pair of elements commute in the rules. In this case, <code>b*a: a*b</code> is a rule, so obviously a and b commute. Then you could keep track of commutative elements and whenever two exponents of commuting elements appear next to each other, put them in order (so effectively deduce the rule <code>b**n*a**m: a**m*b**n</code> from <code>b*a: a*b</code>). But I&#39;m not sure we can always see if two elements commute this way. Is it the case that whenever a and b commute in the rewriting system and <code>b &gt; a</code>, then the rules dictionary contains <code>b*a: a*b</code></p><p>And just to clarify, I&#39;m not suggesting you actually add the rule <code>b**n*a**m: a**m*b**n</code> but rather that you could write something that&#39;s like an automaton but can make a bit more intelligent decisions about things. Like, if it has a dictionary of elements that commute with each other (that it extracts from the rules you have) and an ability to look ahead, it could check if you have something of the form <code>b**n*a**m</code> going on and automatically replace it with <code>a**m*b**n</code>, change state appropriately and then proceeding with whatever it would do for the rest of the word.</p>",
  "id": "5b016abeb84be71db91faee9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-20T12:31:58.061Z",
  "text": "So, as I replied when you first asked me:\n\nYou can't do much here really unless you could check if a pair of elements commute in the rules. In this case, `b*a: a*b` is a rule, so obviously a and b commute. Then you could keep track of commutative elements and whenever two exponents of commuting elements appear next to each other, put them in order (so effectively deduce the rule `b**n*a**m: a**m*b**n` from `b*a: a*b`). But I'm not sure we can always see if two elements commute this way. Is it the case that whenever a and b commute in the rewriting system and `b > a`, then the rules dictionary contains `b*a: a*b`\n\nAnd just to clarify, I'm not suggesting you actually add the rule `b**n*a**m: a**m*b**n` but rather that you could write something that's like an automaton but can make a bit more intelligent decisions about things. Like, if it has a dictionary of elements that commute with each other (that it extracts from the rules you have) and an ability to look ahead, it could check if you have something of the form `b**n*a**m` going on and automatically replace it with `a**m*b**n`, change state appropriately and then proceeding with whatever it would do for the rest of the word.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-20T13:17:29.290Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Great! Thank you :) . I&#39;ll think on it and try to add that. ",
  "id": "5b01754f5a1d895fae54ce83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-20T13:17:03.133Z",
  "text": "Great! Thank you :) . I'll think on it and try to add that. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-05-23T06:25:09.364Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I&#39;ve submitted a PR for the implementation of automaton for word reduction. <span data-link-type=\"issue\" data-issue=\"14735\" class=\"issue\">#14735</span><br>Currently this is implemented/called as the method of the <code>RewritingSystem</code> class. ",
  "id": "5b05093fd88b24150d2a21b3",
  "issues": [
   {
    "number": "14735"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-23T06:25:03.168Z",
  "text": "I've submitted a PR for the implementation of automaton for word reduction. #14735\nCurrently this is implemented/called as the method of the `RewritingSystem` class. \n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<pre><code>&gt;&gt;&gt; from sympy<span class=\"class\">.combinatorics</span><span class=\"class\">.fp_groups</span> import FpGroup\n&gt;&gt;&gt; from sympy<span class=\"class\">.combinatorics</span><span class=\"class\">.free_groups</span> import free_group\n&gt;&gt;&gt; F, <span class=\"tag\">a</span>, <span class=\"tag\">b</span> = <span class=\"function\"><span class=\"title\">free_group</span><span class=\"params\">(<span class=\"string\">\"a, b\"</span>)</span></span>\n&gt;&gt;&gt; G = <span class=\"function\"><span class=\"title\">FpGroup</span><span class=\"params\">(F, [a*b*a**-<span class=\"number\">1</span>*b**-<span class=\"number\">1</span>])</span></span>\n&gt;&gt;&gt; <span class=\"tag\">a</span>, <span class=\"tag\">b</span> = G<span class=\"class\">.generators</span>\n&gt;&gt;&gt; R = G._rewriting_system\n&gt;&gt;&gt; R.<span class=\"function\"><span class=\"title\">reduce_using_automaton</span><span class=\"params\">(b**<span class=\"number\">2</span>*a*b**<span class=\"number\">3</span>)</span></span>\na*b**<span class=\"number\">5</span></code></pre>",
  "id": "5b05095760209a1187d81eec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-23T06:25:27.566Z",
  "text": "```\n>>> from sympy.combinatorics.fp_groups import FpGroup\n>>> from sympy.combinatorics.free_groups import free_group\n>>> F, a, b = free_group(\"a, b\")\n>>> G = FpGroup(F, [a*b*a**-1*b**-1])\n>>> a, b = G.generators\n>>> R = G._rewriting_system\n>>> R.reduce_using_automaton(b**2*a*b**3)\na*b**5\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I think it still needs a little documentation. But I guess it can be reviewed. ",
  "id": "5b050993d96cfd743eb3695b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-23T06:26:27.303Z",
  "text": "I think it still needs a little documentation. But I guess it can be reviewed. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-23T06:27:15.618Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Can you please review it suggest the changes that are to be made?",
  "id": "5b0509aa752aff593109a70c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-23T06:26:50.121Z",
  "text": "Can you please review it suggest the changes that are to be made?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-05-26T07:19:28.484Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Currently, the finite state machine is constructed when the <code>reduce_using_automaton</code> is called.  Instead of that <code>fsm</code> can be made an attribute of the rewriting system class.<br>Whenever the new rule is added, the previous instance of the StateMachine object can be dumped an new one can be created. ",
  "id": "5b090a09352b9e1a4b33eb61",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-26T07:17:29.815Z",
  "text": "Currently, the finite state machine is constructed when the `reduce_using_automaton` is called.  Instead of that `fsm` can be made an attribute of the rewriting system class. \nWhenever the new rule is added, the previous instance of the StateMachine object can be dumped an new one can be created. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-05-26T07:19:47.438Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "So, is it fine  to call the <code>construct_automaton</code> just at the end of the <code>add_rule</code>, <code>make_confluent</code> and <code>remove_redundancies</code> methods?  ",
  "id": "5b090a5cba1a351a68c5da6f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-26T07:18:52.032Z",
  "text": "So, is it fine  to call the `construct_automaton` just at the end of the `add_rule`, `make_confluent` and `remove_redundancies` methods?  ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Or are there any other case that need to be taken care of?",
  "id": "5b090a6ea7abc8692ee639f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-26T07:19:10.758Z",
  "text": "Or are there any other case that need to be taken care of?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "For this piece of code",
  "id": "5b0942b1ba1a351a68c66a27",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-26T11:19:13.465Z",
  "text": "For this piece of code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<pre><code>&gt;&gt;&gt; G = <span class=\"function\"><span class=\"title\">FpGroup</span><span class=\"params\">(F, [a**<span class=\"number\">2</span>, b**<span class=\"number\">3</span>, (a*b)</span></span>**<span class=\"number\">4</span>])\n&gt;&gt;&gt; <span class=\"tag\">a</span>, <span class=\"tag\">b</span> = G<span class=\"class\">.generators</span>\n&gt;&gt;&gt; R = G._rewriting_system\n&gt;&gt;&gt;R.rules</code></pre>",
  "id": "5b0942cfa7abc8692ee6bf85",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-26T11:19:43.263Z",
  "text": "```\n>>> G = FpGroup(F, [a**2, b**3, (a*b)**4])\n>>> a, b = G.generators\n>>> R = G._rewriting_system\n>>>R.rules\n```\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-26T11:20:19.773Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "The output when python3 is used is ",
  "id": "5b0942eea7abc8692ee6bfc4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-26T11:20:14.697Z",
  "text": "The output when python3 is used is ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<pre><code>{a: a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1, a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-2: <span class=\"variable\">&lt;identity&gt;</span>, b<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-2: b, b<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1: a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>b, a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1: b<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1, b<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>b: a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1, b<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1: a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1}</code></pre>",
  "id": "5b09430c52e35117cde26ccd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-26T11:20:44.750Z",
  "text": "```\n{a: a**-1, a**-2: <identity>, b**-2: b, b**-1*a**-1*b**-1*a**-1: a**-1*b*a**-1*b, a**-1*b*a**-1*b*a**-1: b**-1*a**-1*b**-1, b*a**-1*b*a**-1*b: a**-1*b**-1*a**-1, b*a**-1*b*a**-1: a**-1*b**-1*a**-1*b**-1}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "whereas using python2 produces <pre><code>{b<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1: a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>b, a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-2: <span class=\"variable\">&lt;identity&gt;</span>, a: a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1, b<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1: a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>a<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>b<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1, b<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2: b<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1}</code></pre>",
  "id": "5b09433416f6496124e11b3b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-26T11:21:24.731Z",
  "text": "whereas using python2 produces \n```\n{b**-1*a**-1*b**-1*a**-1: a**-1*b*a**-1*b, a**-2: <identity>, a: a**-1, b*a**-1*b*a**-1: a**-1*b**-1*a**-1*b**-1, b**2: b**-1}\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "There is no rule <code>b**-2:b</code> when python2 is used.",
  "id": "5b094384b6eece791db4e957",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-26T11:22:44.888Z",
  "text": "There is no rule `b**-2:b` when python2 is used.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-26T11:28:09.706Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Since, the states of the automaton depend on the rules of the system, the word reduction produces different results , when  Python3 is used, for this particular group.",
  "id": "5b09446d361a950a6618a8a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-26T11:26:37.622Z",
  "text": "Since, the states of the automaton depend on the rules of the system, the word reduction produces different results , when  Python3 is used, for this particular group.",
  "unread": false,
  "urls": [],
  "v": 6
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<blockquote>\n<p>So, is it fine  to call the <code>construct_automaton</code> just at the end of the <code>add_rule</code>, <code>make_confluent</code> and <code>remove_redundancies</code> methods?  </p></blockquote>\n<p>If you add a call  to it at the end of <code>add_rule</code>, then you are reconstructing it for every single rule that is found so there is no need to do it again at the end of <code>make_confluent</code>. Actually, following up on what you said in the PR discussion, even though you have to go through every state and check for new transitions if you were to add a new state to an already existing machine, I&#39;m pretty sure that&#39;s still less work than reconstructing it completely. Say, if you were adding the redex <code>a*b**2</code> to the machine, you&#39;d have to add states <code>a</code>, <code>a*b</code> and <code>a*b**2</code>; then for each of the other states, you&#39;ll only need to check transitions for letters <code>a</code> and <code>b</code> (nothing new will come up for <code>a**-1</code> and <code>b**-1</code> because none of the new states add in it and cases like <code>a*b**3*b**-1 == a*b**2</code> are irrelevant because inverses are cancelled automatically for group words so you&#39;ll never end up in a state <code>a*b**3</code> and have <code>b**-1</code> next) and only for states that end in <code>a</code> or <code>a*b</code> so you can immediately ignore things like <code>a*b**-1</code> or <code>c*b</code> or whatever. Feels like that sort of thing would be better to do then recompute all transitions for all of the states.</p>",
  "id": "5b096eb052e35117cde2e4f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-26T14:26:56.289Z",
  "text": "> So, is it fine  to call the `construct_automaton` just at the end of the `add_rule`, `make_confluent` and `remove_redundancies` methods?  \n\n\nIf you add a call  to it at the end of `add_rule`, then you are reconstructing it for every single rule that is found so there is no need to do it again at the end of `make_confluent`. Actually, following up on what you said in the PR discussion, even though you have to go through every state and check for new transitions if you were to add a new state to an already existing machine, I'm pretty sure that's still less work than reconstructing it completely. Say, if you were adding the redex `a*b**2` to the machine, you'd have to add states `a`, `a*b` and `a*b**2`; then for each of the other states, you'll only need to check transitions for letters `a` and `b` (nothing new will come up for `a**-1` and `b**-1` because none of the new states add in it and cases like `a*b**3*b**-1 == a*b**2` are irrelevant because inverses are cancelled automatically for group words so you'll never end up in a state `a*b**3` and have `b**-1` next) and only for states that end in `a` or `a*b` so you can immediately ignore things like `a*b**-1` or `c*b` or whatever. Feels like that sort of thing would be better to do then recompute all transitions for all of the states.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Also, while <code>make_confluent</code> and <code>remove_redundancies</code> are running, they reduce words using the rules found so far. At the moment, this is done by the <code>reduce</code> method (or whatever is called - the non-automaton one). But if you are going to modify the automaton with each new rule anyway, you can just replace it with <code>reduce_using _automaton</code> there (especially if it&#39;s faster at reducing things - have you checked if it is?).",
  "id": "5b096f4aba1a351a68c6e2ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-26T14:29:30.416Z",
  "text": "Also, while `make_confluent` and `remove_redundancies` are running, they reduce words using the rules found so far. At the moment, this is done by the `reduce` method (or whatever is called - the non-automaton one). But if you are going to modify the automaton with each new rule anyway, you can just replace it with `reduce_using _automaton` there (especially if it's faster at reducing things - have you checked if it is?).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-26T15:40:19.864Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>At the moment, this is done by the <code>reduce</code> method (or whatever is called - the non-automaton one). But if you are going to modify the automaton with each new rule anyway, you can just replace it with <code>reduce_using _automaton</code> there (especially if it&#39;s faster at reducing things - have you checked if it is?).</p></blockquote>\n<p>Yes, I&#39;ve timed it for a few examples and reduction using automaton costs less time. Initially, even I thought of replacing <code>reduce</code> with the <code>reduce_using_automaton</code> method but I think it would be better not to replace it until completely tested. This is &#39;coz the tests for Python3 failed today when I tried to return add a few unit tests(for a particular group, Python2 and Python3 gave different results). Then saw that the rules the correspond to the system are different for Python2 and Python3, for that case.  So, this was well be a problem for the automaton reduction because the the states are constructed based on the previous rules. </p>",
  "id": "5b097fd293dc78791c897dd0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-26T15:40:02.481Z",
  "text": "\n> At the moment, this is done by the `reduce` method (or whatever is called - the non-automaton one). But if you are going to modify the automaton with each new rule anyway, you can just replace it with `reduce_using _automaton` there (especially if it's faster at reducing things - have you checked if it is?).\n\nYes, I've timed it for a few examples and reduction using automaton costs less time. Initially, even I thought of replacing `reduce` with the `reduce_using_automaton` method but I think it would be better not to replace it until completely tested. This is 'coz the tests for Python3 failed today when I tried to return add a few unit tests(for a particular group, Python2 and Python3 gave different results). Then saw that the rules the correspond to the system are different for Python2 and Python3, for that case.  So, this was well be a problem for the automaton reduction because the the states are constructed based on the previous rules. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-05-26T15:45:52.959Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>I&#39;m pretty sure that&#39;s still less work than reconstructing it completely.</p></blockquote>\n<p>This would as well include the removal of previous states  that correspond to the redundant rules. Again, this might as well effect the transitions made to these redundant states. So I thought it would be safer just to create a new instance. </p>",
  "id": "5b09811f54ce231361583fb0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-26T15:45:35.388Z",
  "text": "> I'm pretty sure that's still less work than reconstructing it completely.\n\nThis would as well include the removal of previous states  that correspond to the redundant rules. Again, this might as well effect the transitions made to these redundant states. So I thought it would be safer just to create a new instance. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "If you are only removing redundant rules in <code>remove_redundancies</code>, then you could reconstruct it there - it&#39;s called much more rarely than new rules are added (it runs once for every 100 rules or just at the end of <code>make_confluent</code>), but reconstructing for every single new rule seems a bit too much.",
  "id": "5b09b439c5750d377c15a23c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-26T19:23:37.437Z",
  "text": "If you are only removing redundant rules in `remove_redundancies`, then you could reconstruct it there - it's called much more rarely than new rules are added (it runs once for every 100 rules or just at the end of `make_confluent`), but reconstructing for every single new rule seems a bit too much.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Also, if we wanted to keep <code>StateMachine</code> immutable, we could just have a method for copying the states and transitions of the existing instance (instead of recomputing them), adding the new stuff and returning a fresh instance with the updated states and transitions.",
  "id": "5b09b56f361a950a6619ea08",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-26T19:28:47.962Z",
  "text": "Also, if we wanted to keep `StateMachine` immutable, we could just have a method for copying the states and transitions of the existing instance (instead of recomputing them), adding the new stuff and returning a fresh instance with the updated states and transitions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<blockquote>\n<p>There is no rule <code>b**-2:b</code> when python2 is used.</p></blockquote>\n<p>But there is <code>b**2:b**-1</code> and I think the way <code>reduce</code> works, you end up with <code>reduce(b**-2) == b</code>.</p>",
  "id": "5b09b6714eaffb692d5a3e8a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-26T19:33:05.051Z",
  "text": "> There is no rule `b**-2:b` when python2 is used.\n\nBut there is `b**2:b**-1` and I think the way `reduce` works, you end up with `reduce(b**-2) == b`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "It&#39;s because <code>reduce</code> uses <code>eliminate_word</code> from <code>combinatorics.free_groups</code> and that eliminates inverses as well unless you explicitly tell it not to. ",
  "id": "5b09b7eb52e35117cde3c138",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-26T19:39:23.948Z",
  "text": "It's because `reduce` uses `eliminate_word` from `combinatorics.free_groups` and that eliminates inverses as well unless you explicitly tell it not to. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "The python 2/3 differences might be due to different ordering when iterating through a dictionary ",
  "id": "5b09f6ee66f13a46c4a0ea4c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-27T00:08:14.381Z",
  "text": "The python 2/3 differences might be due to different ordering when iterating through a dictionary ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-27T03:19:10.525Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>If you are only removing redundant rules in remove_redundancies, then you could reconstruct it there.</p></blockquote>\n<p>Seems fair. I can try that</p>",
  "id": "5b0a239d361a950a661ada1a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-27T03:18:53.395Z",
  "text": "> If you are only removing redundant rules in remove_redundancies, then you could reconstruct it there.\n\nSeems fair. I can try that",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-05-27T03:22:22.559Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>But there is <code>b**2:b**-1</code> and I think the way reduce works, you end up with <code>reduce(b**-2) == b</code> </p></blockquote>\n<p>But, this results in addition of a few states to the state machine.    And that is causing a difference between the reduction in  Python2/3 for a few groups. </p>",
  "id": "5b0a245416f6496124e34183",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-27T03:21:56.214Z",
  "text": "> But there is `b**2:b**-1` and I think the way reduce works, you end up with `reduce(b**-2) == b` \n\nBut, this results in addition of a few states to the state machine.    And that is causing a difference between the reduction in  Python2/3 for a few groups. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>It&#39;s because <code>reduce</code> uses <code>eliminate_word</code> from <code>combinatorics.free_groups</code> and that eliminates inverses as well unless you explicitly tell it not to. </p></blockquote>\n<p>Any way we could integrate this into the automaton? </p>",
  "id": "5b0a255b4eaffb692d5b329d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-27T03:26:19.331Z",
  "text": "> It's because `reduce` uses `eliminate_word` from `combinatorics.free_groups` and that eliminates inverses as well unless you explicitly tell it not to. \n\nAny way we could integrate this into the automaton? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-27T03:29:13.765Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>The python 2/3 differences might be due to different ordering when iterating through a dictionary </p></blockquote>\n<p>I could try sorting the lists and dictionaries before computation. I&#39;ll see if it works that way. </p>",
  "id": "5b0a25fc93dc78791c8b0656",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-27T03:29:00.216Z",
  "text": "> The python 2/3 differences might be due to different ordering when iterating through a dictionary \n\nI could try sorting the lists and dictionaries before computation. I'll see if it works that way. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<blockquote>\n<p>Any way we could integrate this into the automaton? </p></blockquote>\n<p><code>eliminate_word(w, red, by=sub)</code> substitutes <code>sub</code> (or identity if you don&#39;t specify <code>by</code>) for all occurrences of <code>red</code> in a word <code>w</code>. This includes substituting <code>sub**-1</code> for <code>red**-1</code> - if you don&#39;t want this to happen, set <code>inverse=False</code>. If you want to remove all occurrences recursively (because you might get new ones after the first reduction), set <code>_all = True</code>. I&#39;m not sure it would work with the automaton though, because its point is to read the word letter by letter and only replace one particular occurrence at a time. Still, it&#39;s a method you might find useful in the future</p>",
  "id": "5b0a8c20c712f56125373113",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T10:44:48.774Z",
  "text": "> Any way we could integrate this into the automaton? \n\n`eliminate_word(w, red, by=sub)` substitutes `sub` (or identity if you don't specify `by`) for all occurrences of `red` in a word `w`. This includes substituting `sub**-1` for `red**-1` - if you don't want this to happen, set `inverse=False`. If you want to remove all occurrences recursively (because you might get new ones after the first reduction), set `_all = True`. I'm not sure it would work with the automaton though, because its point is to read the word letter by letter and only replace one particular occurrence at a time. Still, it's a method you might find useful in the future",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<blockquote>\n<p>But, this results in addition of a few states to the state machine. And that is causing a difference between the reduction in Python2/3 for a few groups. </p></blockquote>\n<p>Could you explain why having <code>b**-2: b</code> results in fewer states than <code>b**2: b**-1</code>? It feels like they should be equivalent</p>",
  "id": "5b0a8c83edd06f7d15e8e2df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T10:46:27.946Z",
  "text": "> But, this results in addition of a few states to the state machine. And that is causing a difference between the reduction in Python2/3 for a few groups. \n\nCould you explain why having `b**-2: b` results in fewer states than `b**2: b**-1`? It feels like they should be equivalent",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>Could you explain why having <code>b**-2: b</code> results in fewer states than <code>b**2: b**-1</code>? It feels like they should be equivalent </p></blockquote>\n<p>Well, I meant, since the rules produced using Python 2/3 are different(also in number), using Python3 might produce fewer/more states than using Python2. This, might lead to the difference in results produced in Python2/3 for a few groups. </p>",
  "id": "5b0ac322a45f930a65dbb570",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T14:39:30.535Z",
  "text": "\n> Could you explain why having `b**-2: b` results in fewer states than `b**2: b**-1`? It feels like they should be equivalent \n\nWell, I meant, since the rules produced using Python 2/3 are different(also in number), using Python3 might produce fewer/more states than using Python2. This, might lead to the difference in results produced in Python2/3 for a few groups. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Dictionaries are generally unordered, I wouldn&#39;t be surprised if you could get different rule sets within the same python version on different runs (but I guess you don&#39;t?). I&#39;m not sure sorting the dictionary keys is a good idea though. Firstly, sorting takes time, secondly, I think it&#39;s possible that it&#39;ll make the iteration over the dictionary less efficient because you won&#39;t be using the order that a dictionary structure would normally use (which is meant to be good for quick searching) and I don&#39;t know how you would sort the keys to produce a shorter set of rules - I suspect there is no general way, so by sorting them in some fixed way, you will end up with more rules than without the sorting in some cases. Besides, I doubt there will be many cases where the difference in the number of rules is significant enough to cause a serious performance difference.",
  "id": "5b0aebfe016ae21a4ceaa04f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T17:33:50.739Z",
  "text": "Dictionaries are generally unordered, I wouldn't be surprised if you could get different rule sets within the same python version on different runs (but I guess you don't?). I'm not sure sorting the dictionary keys is a good idea though. Firstly, sorting takes time, secondly, I think it's possible that it'll make the iteration over the dictionary less efficient because you won't be using the order that a dictionary structure would normally use (which is meant to be good for quick searching) and I don't know how you would sort the keys to produce a shorter set of rules - I suspect there is no general way, so by sorting them in some fixed way, you will end up with more rules than without the sorting in some cases. Besides, I doubt there will be many cases where the difference in the number of rules is significant enough to cause a serious performance difference.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Does the ordering affect the the end result or only intermediate results? ",
  "id": "5b0b3a503759c406277a1baa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T23:08:00.960Z",
  "text": "Does the ordering affect the the end result or only intermediate results? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "In python 3.6 dictionary ordering is fixed (it&#39;s the same as the insertion order). In older versions, it&#39;s based on the hash random seed, assuming your hash incorporates the string name somehow. ",
  "id": "5b0b3a7d3759c406277a1bac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-27T23:08:45.873Z",
  "text": "In python 3.6 dictionary ordering is fixed (it's the same as the insertion order). In older versions, it's based on the hash random seed, assuming your hash incorporates the string name somehow. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>Does the ordering affect the the end result or only intermediate results? </p></blockquote>\n<p>The end results of the reduced word </p>",
  "id": "5b0b7873b6eece791dba6097",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T03:33:07.106Z",
  "text": "> Does the ordering affect the the end result or only intermediate results? \n\nThe end results of the reduced word ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "This piece of code: <pre><code>&gt;&gt;&gt; F, <span class=\"tag\">a</span>, <span class=\"tag\">b</span> = <span class=\"function\"><span class=\"title\">free_group</span><span class=\"params\">(<span class=\"string\">\"a, b\"</span>)</span></span>\n&gt;&gt;&gt; G = <span class=\"function\"><span class=\"title\">FpGroup</span><span class=\"params\">(F, [a**<span class=\"number\">2</span>, b**<span class=\"number\">3</span>, (a*b)</span></span>**<span class=\"number\">4</span>])\n&gt;&gt;&gt; <span class=\"tag\">a</span>, <span class=\"tag\">b</span> = G<span class=\"class\">.generators</span>\n&gt;&gt;&gt; R = G._rewriting_system\n&gt;&gt;&gt; R.<span class=\"function\"><span class=\"title\">reduce_using_automaton</span><span class=\"params\">(a**<span class=\"number\">2</span>*b**-<span class=\"number\">2</span>*a**<span class=\"number\">2</span>*b)</span></span></code></pre>",
  "id": "5b0b792e93dc78791c8e2ab9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T03:36:14.856Z",
  "text": "This piece of code: \n```\n>>> F, a, b = free_group(\"a, b\")\n>>> G = FpGroup(F, [a**2, b**3, (a*b)**4])\n>>> a, b = G.generators\n>>> R = G._rewriting_system\n>>> R.reduce_using_automaton(a**2*b**-2*a**2*b)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Produces <code>b**2</code> as the output using Python3 and <code>b**-1</code> using Python ",
  "id": "5b0b7951352b9e1a4b39d155",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T03:36:49.486Z",
  "text": "Produces `b**2` as the output using Python3 and `b**-1` using Python ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Both of them are correct with respect to their reduction rules  produced in Python2 and 3",
  "id": "5b0b798d4eaffb692d5e6b93",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T03:37:49.650Z",
  "text": "Both of them are correct with respect to their reduction rules  produced in Python2 and 3",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "How does <code>reduce</code> work though? I think it should give the same result in both versions",
  "id": "5b0bd11993dc78791c8f41bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T09:51:21.655Z",
  "text": "How does `reduce` work though? I think it should give the same result in both versions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Yes, <code>reduce</code> gives the same result in both cases",
  "id": "5b0bd20cba1a351a68ccfa74",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T09:55:24.022Z",
  "text": "Yes, `reduce` gives the same result in both cases",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>Essentially, the reason for this is that <code>reduce</code> deduces the rule <code>a**-1 : b**-1</code> from the rule <code>a: b</code> (where appropriate) so there is no need to actually keep it in the rules dictionary. Considering how automaton reduction works, I think your best option is to implicitly add this rule when you construct the fsm.</p><p>To clarify the &quot;where appropriate&quot; remark: obviously, for the rule <code>a**-1: a</code>, you don&#39;t want to add <code>a: a**-1</code>, and for the rule <code>a*b: b*a</code>you actually want to add <code>b**-1*a**-1: a**-1*b**-1</code>, not <code>a**-1*b**-1: b**-1*a**-1</code>.</p><p>In general, the inverse version of the rule <code>A: B</code> is <code>A**-1: B**-1</code> if <code>B**-1 &lt; A**-1</code> and <code>B**-1: A**-1</code> otherwise (which could be the same as <code>A: B</code>, e.g. when <code>A = a</code> and <code>B = a**-1</code>).</p>",
  "id": "5b0bd66bc712f561253ab0a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T10:14:03.012Z",
  "text": "Essentially, the reason for this is that `reduce` deduces the rule `a**-1 : b**-1` from the rule `a: b` (where appropriate) so there is no need to actually keep it in the rules dictionary. Considering how automaton reduction works, I think your best option is to implicitly add this rule when you construct the fsm.\n\nTo clarify the \"where appropriate\" remark: obviously, for the rule `a**-1: a`, you don't want to add `a: a**-1`, and for the rule `a*b: b*a`you actually want to add `b**-1*a**-1: a**-1*b**-1`, not `a**-1*b**-1: b**-1*a**-1`.\n\nIn general, the inverse version of the rule `A: B` is `A**-1: B**-1` if `B**-1 < A**-1` and `B**-1: A**-1` otherwise (which could be the same as `A: B`, e.g. when `A = a` and `B = a**-1`).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "But, the result produced using Python2 (automatonMethod) and <code>G.reduce</code>are similar. So, adding additional rules might cause the difference between the results produced using the <code>reduce</code> and the <code>reduce_using_automaton</code> methods. ",
  "id": "5b0bec8fb6eece791dbbdc76",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T11:48:31.611Z",
  "text": "But, the result produced using Python2 (automatonMethod) and `G.reduce`are similar. So, adding additional rules might cause the difference between the results produced using the `reduce` and the `reduce_using_automaton` methods. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "It won&#39;t. The additional rules will not affect the output of the method in Python2 because they won&#39;t be applicable there",
  "id": "5b0bff0ba7abc8692eede834",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T13:07:23.239Z",
  "text": "It won't. The additional rules will not affect the output of the method in Python2 because they won't be applicable there",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "The only reason that these additional rules aren&#39;t in the dictionary of rules is because <code>reduce</code> would deduce them so they were redundant. But a finite state machine can&#39;t deduce them while reducing so it has to actually incorporate them at construction",
  "id": "5b0bff69352b9e1a4b3b8af3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T13:08:57.817Z",
  "text": "The only reason that these additional rules aren't in the dictionary of rules is because `reduce` would deduce them so they were redundant. But a finite state machine can't deduce them while reducing so it has to actually incorporate them at construction",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Adding the rule <code>b**2:b**-1</code> returns an empty set.",
  "id": "5b0bff6aedd06f7d15ecf0c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T13:08:58.180Z",
  "text": "Adding the rule `b**2:b**-1` returns an empty set.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "No changes to the given set of rules. ",
  "id": "5b0bff93ba1a351a68cdabe3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T13:09:39.851Z",
  "text": "No changes to the given set of rules. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "In that case, I&#39;d guess your method is doing something wrong. Are you sure it&#39;s correct?",
  "id": "5b0bff9bb6eece791dbc2c4b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T13:09:47.579Z",
  "text": "In that case, I'd guess your method is doing something wrong. Are you sure it's correct?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-28T13:11:23.514Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I&#39;ve checked it with many examples, worked fine. ",
  "id": "5b0bffba352b9e1a4b3b8bd8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T13:10:18.155Z",
  "text": "I've checked it with many examples, worked fine. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I&#39;ll dry run it with this.",
  "id": "5b0bffc2c712f561253b4e16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T13:10:26.593Z",
  "text": "I'll dry run it with this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I&#39;ll see where it&#39;s going wrong",
  "id": "5b0bffd416f6496124e82f6b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T13:10:44.296Z",
  "text": "I'll see where it's going wrong",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "So, just to check, you are saying that adding the rule <code>b**2: b**-1</code> to the your state machine, makes <code>R.reduce_using_automaton(a**2*b**-2*a**2*b) == {}</code>?",
  "id": "5b0c000616f6496124e83025",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T13:11:34.678Z",
  "text": "So, just to check, you are saying that adding the rule `b**2: b**-1` to the your state machine, makes `R.reduce_using_automaton(a**2*b**-2*a**2*b) == {}`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "No, it still produces <code>b**2</code> as the answer",
  "id": "5b0c002b160c567d16e33b27",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T13:12:11.466Z",
  "text": "No, it still produces `b**2` as the answer",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-28T13:13:40.865Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I meant to say, the <code>add_rule</code> method returns an empty set.",
  "id": "5b0c004993dc78791c8feb38",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T13:12:41.250Z",
  "text": "I meant to say, the `add_rule` method returns an empty set.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Oh, that&#39;s because it&#39;s a redundant rule, it wouldn&#39;t be added to the dictionary because <code>b**-2: b</code> is already there. I was suggesting you introduce &quot;inverse rules&quot; while constructing the automaton, without trying to add them to the actual <code>rules</code> dictionary",
  "id": "5b0c064552e35117cde9b64d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T13:38:13.048Z",
  "text": "Oh, that's because it's a redundant rule, it wouldn't be added to the dictionary because `b**-2: b` is already there. I was suggesting you introduce \"inverse rules\" while constructing the automaton, without trying to add them to the actual `rules` dictionary",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-28T13:50:00.421Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Yeah, I was thinking the same. I tried it using <code>_add_rule</code> method and it did work. They produced the same output.<br>So, does it work this way? For a given rule <code>A : B</code> we add the rule <code>A**-1 : B**-1</code> if <code>A**-1 != B</code> and <code>B**-1 !=  A</code> ( the <code>a:a**-1</code> case)",
  "id": "5b0c07c7a45f930a65df5c15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T13:44:39.117Z",
  "text": "Yeah, I was thinking the same. I tried it using `_add_rule` method and it did work. They produced the same output. \nSo, does it work this way? For a given rule `A : B` we add the rule `A**-1 : B**-1` if `A**-1 != B` and `B**-1 !=  A` ( the `a:a**-1` case)",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>Not quite, there are other cases to consider. For example,<code>b*a : a*b</code>should imply the rule <code>b**-1*a**-1: a**-1*b**-1</code>, not <code>a**-1*b**-1: b**-1*a**-1</code>. So you do need the conditions I gave above:</p><blockquote>\n<p>In general, the inverse version of the rule <code>A: B</code> is<code>A**-1: B**-1</code> if <code>B**-1 &lt; A**-1</code> and <code>B**-1: A**-1</code> otherwise.</p></blockquote>\n",
  "id": "5b0c0b6aedd06f7d15ed234a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T14:00:10.549Z",
  "text": "Not quite, there are other cases to consider. For example,`b*a : a*b`should imply the rule `b**-1*a**-1: a**-1*b**-1`, not `a**-1*b**-1: b**-1*a**-1`. So you do need the conditions I gave above:\n\n> In general, the inverse version of the rule `A: B` is` A**-1: B**-1` if `B**-1 < A**-1` and `B**-1: A**-1` otherwise.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Also, I wouldn&#39;t use <code>_add_rule</code> and change the <code>rules</code> dictionary - there is probably no need to make it larger when you only need it for automaton construction. I&#39;d just process these in <code>construct_automaton</code>",
  "id": "5b0c0c56a45f930a65df6ee4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T14:04:06.865Z",
  "text": "Also, I wouldn't use `_add_rule` and change the `rules` dictionary - there is probably no need to make it larger when you only need it for automaton construction. I'd just process these in `construct_automaton`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\nI&#39;d just process these in construct_automaton</blockquote>\n",
  "id": "5b0c0c9c54ce2313615f0048",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T14:05:16.907Z",
  "text": "> I'd just process these in construct_automaton",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Okay, sure",
  "id": "5b0c0ca752e35117cde9cf75",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T14:05:27.515Z",
  "text": "Okay, sure",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Could you explain where <code>B**-1 : A**-1</code> is obtained? ",
  "id": "5b0c0d2ea45f930a65df7531",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T14:07:42.723Z",
  "text": "Could you explain where `B**-1 : A**-1` is obtained? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "The inverse is taken for the individual symbols and then multiplied, right? For example, <code>a*b*c : b*a</code> becomes <code>a**-1*b**-1*c**-1 : b**-1*a**-1</code>",
  "id": "5b0c0d7db6eece791dbc67cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T14:09:01.663Z",
  "text": "The inverse is taken for the individual symbols and then multiplied, right? For example, `a*b*c : b*a` becomes `a**-1*b**-1*c**-1 : b**-1*a**-1`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>The inverse is taken for the individual symbols and then multiplied </p></blockquote>\n<p>I  meant, multiply the inverse of every element in the <code>letter_form</code> array</p>",
  "id": "5b0c170f99fa7f4c062620d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T14:49:51.513Z",
  "text": "> The inverse is taken for the individual symbols and then multiplied \n\nI  meant, multiply the inverse of every element in the `letter_form` array",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "For both the sides of a given rule. ",
  "id": "5b0c172a93dc78791c90465c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T14:50:18.436Z",
  "text": "For both the sides of a given rule. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "In general for multiplication that is not necessarily commutative, <code>(a*b)**-1 == b**-1*a**-1</code> so <code>(a*b*c)**-1 = c**-1*b**-1*a**-1</code>. So it&#39;s multiplying the inverses in the reverse order. But you don&#39;t need to worry about it - if you have a word <code>A</code>, <code>A**-1</code> return exactly what you want.",
  "id": "5b0c1795160c567d16e39b2b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T14:52:05.343Z",
  "text": "In general for multiplication that is not necessarily commutative, `(a*b)**-1 == b**-1*a**-1` so `(a*b*c)**-1 = c**-1*b**-1*a**-1`. So it's multiplying the inverses in the reverse order. But you don't need to worry about it - if you have a word `A`, `A**-1` return exactly what you want.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-28T20:21:17.875Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Works fine after integrating the inverse rules into the automaton. Thank you :)",
  "id": "5b0c6494016ae21a4cef1b84",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-28T20:20:36.362Z",
  "text": "Works fine after integrating the inverse rules into the automaton. Thank you :)",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "The reduction part is stable now. I&#39;ll add the modification of the automaton on rule addition by tonight. Then, if there&#39;s no issue with rewriting systems, I&#39;ll move to the isomorphism between two groups.",
  "id": "5b0d0aa4016ae21a4cf0f0fd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-29T08:09:08.933Z",
  "text": "The reduction part is stable now. I'll add the modification of the automaton on rule addition by tonight. Then, if there's no issue with rewriting systems, I'll move to the isomorphism between two groups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I can review it in the next couple of days, but you can start working on isomorphisms in any case until I or someone else reviews it.",
  "id": "5b0d3bed52e35117cded8fce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-29T11:39:25.426Z",
  "text": "I can review it in the next couple of days, but you can start working on isomorphisms in any case until I or someone else reviews it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-30T09:52:41.082Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "The transition addition method is done. The state machine modified every time a new rule is added to the system. I have a doubt on when exactly do we call this method, add a rule to the automaton.<br>When exactly is the <code>add_rule</code> method called(not by the user)? Because if we call <code>add_transitions_to_automaton</code> in the <code>add_rule</code> method, it gets executed every time <code>add_rule</code> is called (even if it is not called by the user). We don&#39;t want this as the efficiency will get reduced. Same is problem with reconstruction instead of modifying. ",
  "id": "5b0e744ee26c847ac8a1bd90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-30T09:52:14.195Z",
  "text": "The transition addition method is done. The state machine modified every time a new rule is added to the system. I have a doubt on when exactly do we call this method, add a rule to the automaton.\nWhen exactly is the `add_rule` method called(not by the user)? Because if we call `add_transitions_to_automaton` in the `add_rule` method, it gets executed every time `add_rule` is called (even if it is not called by the user). We don't want this as the efficiency will get reduced. Same is problem with reconstruction instead of modifying. ",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "It&#39;s used in <code>init_rules</code> and in <code>make_confluent</code>, whenever new rules are discovered. Theoretically, you could wait till you&#39;ve accumulated a certain number of rules before adding then but in practice, if we use automaton reduction while computing new rules, then you do actually need to update it whenever any rule at all is added. This is pretty much unavoidable, but I do think modifying instead of reconstructing is at least a bit faster.",
  "id": "5b0f1251e26c847ac8a437b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-30T21:06:25.205Z",
  "text": "It's used in `init_rules` and in `make_confluent`, whenever new rules are discovered. Theoretically, you could wait till you've accumulated a certain number of rules before adding then but in practice, if we use automaton reduction while computing new rules, then you do actually need to update it whenever any rule at all is added. This is pretty much unavoidable, but I do think modifying instead of reconstructing is at least a bit faster.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I used a flag which is initially assigned to <code>0</code> and after the rules are computed using the <code>_init_rules</code> method the automaton is constructed and the flag is set to <code>1</code>.<br>And the states of the automaton are modified only when <code>flag == 1</code>, i.e, only when all the rules are computed and the automaton is already constructed. ",
  "id": "5b0f5f1d93dc78791c9ba393",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-31T02:34:05.579Z",
  "text": "I used a flag which is initially assigned to `0` and after the rules are computed using the `_init_rules` method the automaton is constructed and the flag is set to `1`. \nAnd the states of the automaton are modified only when `flag == 1`, i.e, only when all the rules are computed and the automaton is already constructed. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Well, I thought this should do the trick but it didn&#39;t. Is there any other way that the <code>make_confluent</code> method is called? ",
  "id": "5b0f5f92160c567d16ef023e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-31T02:36:02.688Z",
  "text": "Well, I thought this should do the trick but it didn't. Is there any other way that the `make_confluent` method is called? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "What are you trying to achieve?",
  "id": "5b0ffaecedd06f7d15fae4c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-31T13:38:52.976Z",
  "text": "What are you trying to achieve?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Avoid the modification of the automaton before all the rules are initially computed. ",
  "id": "5b100aae4eaffb692d6e76cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-31T14:46:06.763Z",
  "text": "Avoid the modification of the automaton before all the rules are initially computed. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Just to make it more efficient",
  "id": "5b100d5ee26c847ac8a7790f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-31T14:57:34.184Z",
  "text": "Just to make it more efficient",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "You could just set <code>self. reduction_automaton = None</code> initially, then use <code>construct_automaton</code> in <code>_init_rules</code> after the rules are computed for the first time and check that <code>self. reduction_automaton != None</code> before adding new transitions",
  "id": "5b1021e5016ae21a4cfc2217",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-31T16:25:09.500Z",
  "text": "You could just set `self. reduction_automaton = None` initially, then use `construct_automaton` in `_init_rules` after the rules are computed for the first time and check that `self. reduction_automaton != None` before adding new transitions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "That said, if we are going to use reduction by automaton instead of the current <code>reduce</code> method, then you&#39;ll want to define the automaton before <code>_remove_redundancies()</code> is called in <code>_init_rules</code>.",
  "id": "5b10224b352b9e1a4b4a457d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-05-31T16:26:51.766Z",
  "text": "That said, if we are going to use reduction by automaton instead of the current `reduce` method, then you'll want to define the automaton before `_remove_redundancies()` is called in `_init_rules`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "The <code>group_isomorphism</code> method for the computation of isomorphism groups mainly depends the methods of the <code>GroupHomomorphism</code> class(As per the GAP source code). ",
  "id": "5b157e2922a05f5e71fe1d36",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-04T18:00:09.904Z",
  "text": "The `group_isomorphism` method for the computation of isomorphism groups mainly depends the methods of the `GroupHomomorphism` class(As per the GAP source code). ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<code>GroupIsomorphism</code> is the method in GAP which computes the isomorphism between 2 groups. ",
  "id": "5b157e60ba1a351a68ec8b5b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-04T18:01:04.546Z",
  "text": "`GroupIsomorphism` is the method in GAP which computes the isomorphism between 2 groups. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Okay.<code>GroupHomomorphism</code> is a class that exists in SymPy too.",
  "id": "5b15803b93dc78791caeb2b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-04T18:08:59.759Z",
  "text": "Okay.`GroupHomomorphism` is a class that exists in SymPy too.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Yeah, I meant sympy",
  "id": "5b15805593dc78791caeb2ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-04T18:09:25.730Z",
  "text": "Yeah, I meant sympy",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "The similar implementation as that of the Sympy&#39;s <code>GroupHomomorphism</code> class.",
  "id": "5b158071e26c847ac8b83f9b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-04T18:09:53.985Z",
  "text": "The similar implementation as that of the Sympy's `GroupHomomorphism` class.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "And additionally the GAP method uses the a pre-defined catalog for computing isomorphism for <code>SmallGroups</code>. But, as mentioned in the proposal integrating a catalog as a database might take a lot of time. ",
  "id": "5b1580bb016ae21a4c0c96cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-04T18:11:07.635Z",
  "text": "And additionally the GAP method uses the a pre-defined catalog for computing isomorphism for `SmallGroups`. But, as mentioned in the proposal integrating a catalog as a database might take a lot of time. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-04T18:13:47.098Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Their catalog is divided into 11 layers. I&#39;m not sure if there is a way to use that. I&#39;m looking into it right now. ",
  "id": "5b15811a93dc78791caeb564",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-04T18:12:42.423Z",
  "text": "Their catalog is divided into 11 layers. I'm not sure if there is a way to use that. I'm looking into it right now. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I will be sending a PR for the isomorphism methods soon. Along with that I&#39;ll push the remaining minor changes in the rewriting system.<br>I&#39;ve pushed the <code>add_states_to_automaton</code> method 2 days ago. That still needs to be reviewed. Can you please review that and suggest the changes, so that I can push it along with the other changes? ",
  "id": "5b16a5a24eaffb692d832b66",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T15:00:50.672Z",
  "text": "I will be sending a PR for the isomorphism methods soon. Along with that I'll push the remaining minor changes in the rewriting system. \nI've pushed the `add_states_to_automaton` method 2 days ago. That still needs to be reviewed. Can you please review that and suggest the changes, so that I can push it along with the other changes? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I will. Also, I have a general comment about commits. There are at the moment a lot of minor commits in the automaton PR, not sure how many of them were pushed at the same time but here&#39;s something to consider. Locally, it makes sense to commit your changes at the end of the day (or more frequently) just in case, but before you actually push the changes, it&#39;s a good practice to squash the smaller commits into one larger commit. Have a look at <a href=\"https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">this article</a> for a little tutorial on how to do that sort of thing in git.",
  "id": "5b16b6eb35e25f39974f3e40",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T16:14:35.737Z",
  "text": "I will. Also, I have a general comment about commits. There are at the moment a lot of minor commits in the automaton PR, not sure how many of them were pushed at the same time but here's something to consider. Locally, it makes sense to commit your changes at the end of the day (or more frequently) just in case, but before you actually push the changes, it's a good practice to squash the smaller commits into one larger commit. Have a look at [this article](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History) for a little tutorial on how to do that sort of thing in git.",
  "unread": false,
  "urls": [
   {
    "url": "https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Yeah sure I will squash the commits from the next time I push. ",
  "id": "5b16b72a52e35117cd0d24dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T16:15:38.258Z",
  "text": "Yeah sure I will squash the commits from the next time I push. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-05T16:16:34.747Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Or I can do it now as well. Should I squash all the commits into one and push it again to that branch?",
  "id": "5b16b75199fa7f4c0648fb6f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T16:16:17.409Z",
  "text": "Or I can do it now as well. Should I squash all the commits into one and push it again to that branch?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "That I am unsure of. Changing the history after pushing things, especially this drastically, isn&#39;t a good thing. And in this case it probably wouldn&#39;t cause any problems because nobody has been building on your work, but I&#39;d be inclined to leave it as it is. Once it&#39;s merged into master, it&#39;ll be a single big commit there anyway.",
  "id": "5b16b80a4eaffb692d837b85",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T16:19:22.716Z",
  "text": "That I am unsure of. Changing the history after pushing things, especially this drastically, isn't a good thing. And in this case it probably wouldn't cause any problems because nobody has been building on your work, but I'd be inclined to leave it as it is. Once it's merged into master, it'll be a single big commit there anyway.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Okay :+1: ",
  "id": "5b16b98a22a05f5e71028f69",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T16:25:46.743Z",
  "text": "Okay :+1: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I&#39;ve made some comments but haven&#39;t yet looked at <code>add_to_automaton</code> so will do that later.",
  "id": "5b16bddb52e35117cd0d3afe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T16:44:11.799Z",
  "text": "I've made some comments but haven't yet looked at `add_to_automaton` so will do that later.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Okay sure. I&#39;ll  make the changes.",
  "id": "5b16ce0352e35117cd0d86b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-05T17:53:07.288Z",
  "text": "Okay sure. I'll  make the changes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Is there a method to find all the subgroups of a particular order for an <code>FpGroup</code>? ",
  "id": "5b199a48ced26d24bca4a8b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-07T20:49:12.589Z",
  "text": "Is there a method to find all the subgroups of a particular order for an `FpGroup`? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I came across a method, Tarjan&#39;s algorithm,  for the computation of isomorphism between two groups but that would require iterating through subgroups of a particular order. I think it is possible to use <code>itertools.permutations</code>for permutation groups but this won&#39;t be applicable for <code>FpGroups</code>",
  "id": "5b19a432a09ae108e60992ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-07T21:31:30.600Z",
  "text": "I came across a method, Tarjan's algorithm,  for the computation of isomorphism between two groups but that would require iterating through subgroups of a particular order. I think it is possible to use `itertools.permutations`for permutation groups but this won't be applicable for `FpGroups`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "The <code>SmallGroup</code> implementation that GAP uses can be found <a href=\"https://github.com/gap-packages/smallgrp\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a>. It&#39;s a really huge code base (1M+ lines) and possibly cannot be integrated.<br>So,  one to compute the isomorphism is that we compute the all the bijective functions and then check for homomorphism, this runs in with <code>O(n**2*n!)</code> complexity ",
  "id": "5b1a2f826077c67d3ed91576",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-08T07:25:54.333Z",
  "text": "The `SmallGroup` implementation that GAP uses can be found [here](https://github.com/gap-packages/smallgrp). It's a really huge code base (1M+ lines) and possibly cannot be integrated. \nSo,  one to compute the isomorphism is that we compute the all the bijective functions and then check for homomorphism, this runs in with `O(n**2*n!)` complexity ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/gap-packages/smallgrp"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "The other method is the Trajan&#39;s algorithm which is comparatively efficient and runs in <code>n**logn</code> time.  ",
  "id": "5b1a2fdaddd61d08e53c30ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-08T07:27:22.921Z",
  "text": "The other method is the Trajan's algorithm which is comparatively efficient and runs in `n**logn` time.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "This method requires the computation of subgroups of a particular order (length of the generating set). ",
  "id": "5b1a303f659aad4a325d3b93",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-08T07:29:03.206Z",
  "text": "This method requires the computation of subgroups of a particular order (length of the generating set). ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<blockquote>\n<p>This method requires the computation of subgroups of a particular order (length of the generating set). </p></blockquote>\n<p>&quot;Order of the group&quot; is usually the number of elements in it, but you say &quot;length of the generating set&quot; in the brackets? If it&#39;s the length of the generating set that you are after, then you could use the <code>subgroup</code> method on some subset of the group elements. But unless you know your group is finite, this could never terminate, and it&#39;s generally quite slow so calling it for each possible generating subset would take a really really long time.</p><p>I don&#39;t think there are general methods of finding subgroups of a particular order though (i.e. number of elements), except again trying every possible generating subset and computing the order for each one.</p>",
  "id": "5b1a4e9b4b2d9417e1d29a95",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-08T09:38:35.837Z",
  "text": "> This method requires the computation of subgroups of a particular order (length of the generating set). \n\n\"Order of the group\" is usually the number of elements in it, but you say \"length of the generating set\" in the brackets? If it's the length of the generating set that you are after, then you could use the `subgroup` method on some subset of the group elements. But unless you know your group is finite, this could never terminate, and it's generally quite slow so calling it for each possible generating subset would take a really really long time.\n\nI don't think there are general methods of finding subgroups of a particular order though (i.e. number of elements), except again trying every possible generating subset and computing the order for each one.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>This method requires the computation of subgroups of a particular order (length of the generating set).</p></blockquote>\n<p>This is what I meant, suppose we need to check the isomorphism for 2 groups, <code>G</code> and <code>H</code>. Let, <code>G_gen</code> be the generating set. Now I need to find all the subgroups of <code>H</code> which are of the order <code>len(G_gen)</code>.</p>",
  "id": "5b1a52aee36e0e7d3f5c0ab2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-08T09:55:58.260Z",
  "text": "> This method requires the computation of subgroups of a particular order (length of the generating set).\n\nThis is what I meant, suppose we need to check the isomorphism for 2 groups, `G` and `H`. Let, `G_gen` be the generating set. Now I need to find all the subgroups of `H` which are of the order `len(G_gen)`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>but you say &quot;length of the generating set&quot; in the brackets? </p></blockquote>\n<p>So, that means the length of generating set of group <code>G</code>. </p>",
  "id": "5b1a52fe9ca98417e2533d06",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-06-08T09:57:18.460Z",
  "text": "> but you say \"length of the generating set\" in the brackets? \n\nSo, that means the length of generating set of group `G`. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>This seems strange. I don&#39;t know how the algorithm works but there are often several possible generating sets of various lengths. E.g.</p><pre><code>&gt;&gt;&gt; F, <span class=\"tag\">a</span>, <span class=\"tag\">b</span>, c = <span class=\"function\"><span class=\"title\">free_group</span><span class=\"params\">(<span class=\"string\">\"a b c\"</span>)</span></span>\n&gt;&gt;&gt; G = <span class=\"function\"><span class=\"title\">FpGroup</span><span class=\"params\">(F, [a*c])</span></span>\n&gt;&gt;&gt; H = <span class=\"function\"><span class=\"title\">free_group</span><span class=\"params\">(<span class=\"string\">\"a b\"</span>)</span></span></code></pre><p><code>H</code> and <code>G</code> are isomorphic - they are both free groups on 2 generators but technically the generating set of <code>G</code> is <code>{a, b, c}</code> (with <code>c</code> redundant). And actually neither <code>G</code> nor <code>H</code> have any subgroups of order 2 or 3 at all. But then <code>K = FpGroup(H, [a])</code> has two generators and no subgroups of order 2 or 3 but it&#39;s not isomorphic to <code>H</code> and <code>G</code>.</p><p>Also, many groups are generated my just 2 generators so you&#39;d be looking for subgroups of order 2 (which is the same as looking for elements of order 2) each time. </p><p>So I guess I just wouldn&#39;t expect that knowing subgroups of order equal to the <code>len(G.generators)</code> would help with isomorphism determination. What is this method? Is there a paper describing it?</p>",
  "id": "5b1a863814d4bc146e74f30e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-08T13:35:52.881Z",
  "text": "This seems strange. I don't know how the algorithm works but there are often several possible generating sets of various lengths. E.g.\n```\n>>> F, a, b, c = free_group(\"a b c\")\n>>> G = FpGroup(F, [a*c])\n>>> H = free_group(\"a b\")\n```\n`H` and `G` are isomorphic - they are both free groups on 2 generators but technically the generating set of `G` is `{a, b, c}` (with `c` redundant). And actually neither `G` nor `H` have any subgroups of order 2 or 3 at all. But then `K = FpGroup(H, [a])` has two generators and no subgroups of order 2 or 3 but it's not isomorphic to `H` and `G`.\n\nAlso, many groups are generated my just 2 generators so you'd be looking for subgroups of order 2 (which is the same as looking for elements of order 2) each time. \n\nSo I guess I just wouldn't expect that knowing subgroups of order equal to the `len(G.generators)` would help with isomorphism determination. What is this method? Is there a paper describing it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "The description of the algorithm goes like, we first find the set of generators of <code>G</code>, attempt to match  those generators with the elements of <code>H</code> and see if the mapping induces an isomorphism.",
  "id": "5b1a995cffd8896fe91334f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-08T14:57:32.175Z",
  "text": "The description of the algorithm goes like, we first find the set of generators of `G`, attempt to match  those generators with the elements of `H` and see if the mapping induces an isomorphism.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I tried to look for thr pseudo code in a paper but ended up with this python <a href=\"https://github.com/naftaliharris/Abstract-Algebra/blob/master/absalg/Group.py#L329-L376\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">implementation</a> of the algo in a repository.",
  "id": "5b1a99d96077c67d3edac0a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-08T14:59:37.205Z",
  "text": "I tried to look for thr pseudo code in a paper but ended up with this python [implementation](https://github.com/naftaliharris/Abstract-Algebra/blob/master/absalg/Group.py#L329-L376) of the algo in a repository.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/naftaliharris/Abstract-Algebra/blob/master/absalg/Group.py#L329-L376"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<blockquote>\n<p>The description of the algorithm goes like, we first find the set of generators of <code>G</code>, attempt to match  those generators with the elements of <code>H</code> and see if the mapping induces an isomorphism.</p></blockquote>\n<p>Yes, that makes sense. But I&#39;m pretty sure that computing subgroups of order equal to the number of generators isn&#39;t going to help with that. I&#39;ll have a look at the implementation</p>",
  "id": "5b1ab192dd54362753f890f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-08T16:40:50.814Z",
  "text": "> The description of the algorithm goes like, we first find the set of generators of `G`, attempt to match  those generators with the elements of `H` and see if the mapping induces an isomorphism.\n\nYes, that makes sense. But I'm pretty sure that computing subgroups of order equal to the number of generators isn't going to help with that. I'll have a look at the implementation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>It seems that what it&#39;s doing is picking a subset of one group that has size equal to the number of the generators of the other, and tries to see if mapping the former to the latter induces an isomorphism (and either rejects it or tries to extend it if it doesn&#39;t). That&#39;s not quite the same as looking for subgroups of this order.</p><p>Checking that a mapping induces a homomorphism can be done by the <code>homomorphism</code> function in <code>combinatorics.group_homomorphism</code>. That it&#39;s an isomorphism can technically be done by standard homomorphism machinery as well, but it won&#39;t work for infinite groups and will try to compute the order of the group which is probably less efficient than looking for a counterexample as this implementation does. If an <code>FpGroup</code> is finite, you can work with the permutation group isomorphic to it (it&#39;s somewhere in the main <code>fp_group</code> file) so just implementing it for permutation groups will do the trick. Infinite groups would need special treatment eventually.</p>",
  "id": "5b1ab593106f3c24bde640e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-08T16:57:55.508Z",
  "text": "It seems that what it's doing is picking a subset of one group that has size equal to the number of the generators of the other, and tries to see if mapping the former to the latter induces an isomorphism (and either rejects it or tries to extend it if it doesn't). That's not quite the same as looking for subgroups of this order.\n\nChecking that a mapping induces a homomorphism can be done by the `homomorphism` function in `combinatorics.group_homomorphism`. That it's an isomorphism can technically be done by standard homomorphism machinery as well, but it won't work for infinite groups and will try to compute the order of the group which is probably less efficient than looking for a counterexample as this implementation does. If an `FpGroup` is finite, you can work with the permutation group isomorphic to it (it's somewhere in the main `fp_group` file) so just implementing it for permutation groups will do the trick. Infinite groups would need special treatment eventually.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I&#39;ve sent a PR <span data-link-type=\"issue\" data-issue=\"14785\" class=\"issue\">#14785</span> on isomorphism computation yesterday. I guess it can be reviewed now. Also, I&#39;ll push the changes in rewriting systems by today evening.",
  "id": "5b1cdd244b2d9417e1d9db66",
  "issues": [
   {
    "number": "14785"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-10T08:11:16.608Z",
  "text": "I've sent a PR #14785 on isomorphism computation yesterday. I guess it can be reviewed now. Also, I'll push the changes in rewriting systems by today evening.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I&#39;ve made the changes in word reduction as well.",
  "id": "5b1d66a3e36e0e7d3f649457",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-10T17:57:55.082Z",
  "text": "I've made the changes in word reduction as well.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<p>Regarding this suggestion, </p><blockquote>\n<p>Could you just call add_to_automaton(self.rules) there instead of having all of this code repeated?</p></blockquote>\n<p>The code looks pretty much the same as that of <code>construct_automaton</code> but this method checks for the modifications in the transitions of the existing states. </p>",
  "id": "5b1e4f5e9ca98417e25e4cae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-11T10:30:54.540Z",
  "text": "Regarding this suggestion, \n> Could you just call add_to_automaton(self.rules) there instead of having all of this code repeated?\n\nThe code looks pretty much the same as that of `construct_automaton` but this method checks for the modifications in the transitions of the existing states. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "replacing that with <code>add_to_automaton(self.rules)</code> would result in an infinite recursive loop, right?<br>Or did I understand it the wrong way?",
  "id": "5b1e50176023754a3183ff40",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-11T10:33:59.544Z",
  "text": "replacing that with `add_to_automaton(self.rules)` would result in an infinite recursive loop, right? \nOr did I understand it the wrong way?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I&#39;ll keep updating  the two PRs making the suggested changes. Are there any major changes that need to be done in the implementation of isomorphism computation or word reduction? I could move to the modified Todd-Coxeter implementation if there are no issues.",
  "id": "5b1f89a886343c3a32fd5676",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-12T08:51:52.333Z",
  "text": "I'll keep updating  the two PRs making the suggested changes. Are there any major changes that need to be done in the implementation of isomorphism computation or word reduction? I could move to the modified Todd-Coxeter implementation if there are no issues.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "As a general rule, I&#39;d say if I haven&#39;t yet given any suggestions, feel free to move onto the next thing, it saves time. I&#39;ve been quite busy with other things the past several days but from tomorrow should be able to review things more promptly. I&#39;ll look at both again then in more detail.",
  "id": "5b1f9cc270d89b3a318f948e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-12T10:13:22.765Z",
  "text": "As a general rule, I'd say if I haven't yet given any suggestions, feel free to move onto the next thing, it saves time. I've been quite busy with other things the past several days but from tomorrow should be able to review things more promptly. I'll look at both again then in more detail.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<blockquote>\n<p>The code looks pretty much the same as that of <code>construct_automaton</code> but this method checks for the modifications in the transitions of the existing states.<br>replacing that with <code>add_to_automaton(self.rules)</code> would result in an infinite recursive loop, right? </p></blockquote>\n<p>I don&#39;t see why it should. If you run in <code>construct_automaton</code>, then there won&#39;t be any existing states yet so the whole loop of checking for transitions from existing states will be skipped, and you&#39;ll move directly onto adding all the states corresponding to new rules (which is all of the rules) and transitions between them</p>",
  "id": "5b1f9d3bfd5b835b2d549234",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-12T10:15:23.583Z",
  "text": "> The code looks pretty much the same as that of `construct_automaton` but this method checks for the modifications in the transitions of the existing states. \nreplacing that with `add_to_automaton(self.rules)` would result in an infinite recursive loop, right? \n\n\nI don't see why it should. If you run in `construct_automaton`, then there won't be any existing states yet so the whole loop of checking for transitions from existing states will be skipped, and you'll move directly onto adding all the states corresponding to new rules (which is all of the rules) and transitions between them\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Okay, I get it now. Understood it the wrong way initially.<br>Sure I&#39;ll update it :+1: ",
  "id": "5b1fb5d24fbf4449eb0f8f4c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-12T12:00:18.319Z",
  "text": "Okay, I get it now. Understood it the wrong way initially. \nSure I'll update it :+1: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-14T05:03:31.486Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<p>The two issues in the tests cases were because of the <code>GroupHomomorphism</code> object returned and not checking the size of the <code>Permutation</code> before mapping. I will update them today.  And mostly I&#39;ll get started with the modified Todd-Coxeter implementation by tonight, once the current issues are resolved. </p><p>Just a few doubts in the isomorphism computation,  I think that returning a <code>GroupHomomorphism</code> object could be avoided because that would be, basically, computing the homomorphism again, right? Can&#39;t we just return the map, the dictionary, that we compute in the <code>group_isomorphism</code> method? </p>",
  "id": "5b21f7008864a936cc86bef2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-14T05:02:56.359Z",
  "text": "The two issues in the tests cases were because of the `GroupHomomorphism` object returned and not checking the size of the `Permutation` before mapping. I will update them today.  And mostly I'll get started with the modified Todd-Coxeter implementation by tonight, once the current issues are resolved. \n\nJust a few doubts in the isomorphism computation,  I think that returning a `GroupHomomorphism` object could be avoided because that would be, basically, computing the homomorphism again, right? Can't we just return the map, the dictionary, that we compute in the `group_isomorphism` method? ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "In the word reduction, as said, I&#39;m computing the <code>new_rules</code> and modifying the automaton as the rules are added to the system, i.e, at the end of <code>add_rule</code> method. But, the test cases run a lot slower than the they did initially(when the automaton is constructed in the <code>reduce_using_automaton</code> method).",
  "id": "5b2313dba0161836cb1c8242",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-15T01:18:19.652Z",
  "text": "In the word reduction, as said, I'm computing the `new_rules` and modifying the automaton as the rules are added to the system, i.e, at the end of `add_rule` method. But, the test cases run a lot slower than the they did initially(when the automaton is constructed in the `reduce_using_automaton` method).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-15T11:37:36.405Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<blockquote>\n<p>returning a <code>GroupHomomorphism</code> object could be avoided because that would be, basically, computing the homomorphism again, right?</p></blockquote>\n<p>You can say <code>check=False</code> when you call <code>homomorphism</code> so that it doesn&#39;t check that it&#39;s well-defined again.  But a method returning an isomorphism should be returning <code>GroupHomomorphism</code> because that&#39;s how homomorphisms are represented in SymPy, and with <code>check=False</code>, I don&#39;t think it would cause any inefficiencies.</p>",
  "id": "5b23a4eeebf21755ca3410b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-15T11:37:18.709Z",
  "text": "> returning a `GroupHomomorphism` object could be avoided because that would be, basically, computing the homomorphism again, right?\n\nYou can say `check=False` when you call `homomorphism` so that it doesn't check that it's well-defined again.  But a method returning an isomorphism should be returning `GroupHomomorphism` because that's how homomorphisms are represented in SymPy, and with `check=False`, I don't think it would cause any inefficiencies.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<blockquote>\n<p>test cases run a lot slower than the they did initially(when the automaton is constructed in the <code>reduce_using_automaton</code> method).</p></blockquote>\n<p>Hmm, that&#39;s possibly to do with the fact that if you do it in the <code>reduce_using_automaton</code>, there could be fewer rules by that point if <code>_remove_redundancies</code> was called before... If it causes a noticeable slow-down, perhaps it would be worth just having a <code>new_rules</code> dictionary as a class variable and some sort of an <code>update_automaton</code> method that could be called in <code>reduce_using_automaton</code>. </p>",
  "id": "5b23a65c8864a936cc8a9547",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-15T11:43:24.523Z",
  "text": "> test cases run a lot slower than the they did initially(when the automaton is constructed in the `reduce_using_automaton` method).\n\nHmm, that's possibly to do with the fact that if you do it in the `reduce_using_automaton`, there could be fewer rules by that point if `_remove_redundancies` was called before... If it causes a noticeable slow-down, perhaps it would be worth just having a `new_rules` dictionary as a class variable and some sort of an `update_automaton` method that could be called in `reduce_using_automaton`. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"RavicharanN\" class=\"mention\">@RavicharanN</span> Have you sent a Todd-Coxeter PR yet? A search by title only gives the old PR from two years ago.",
  "id": "5b2e2d815862c35f47c18fce",
  "issues": [],
  "mentions": [
   {
    "screenName": "RavicharanN",
    "userId": "5862b83dd73408ce4f3f9ce3",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-23T11:22:41.678Z",
  "text": "@RavicharanN Have you sent a Todd-Coxeter PR yet? A search by title only gives the old PR from two years ago.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Actually, not yet ",
  "id": "5b2e454b7d3bca737a03a0dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-23T13:04:11.473Z",
  "text": "Actually, not yet ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I&#39;ve started polycyclic in parallel 3 days ago. All the modified methods are not implemented. I can send it by tonight",
  "id": "5b2e462fad21887018d7ee89",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-23T13:07:59.425Z",
  "text": "I've started polycyclic in parallel 3 days ago. All the modified methods are not implemented. I can send it by tonight",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I&#39;ve sent the PR but docstrings and tests are yet to be added. But I guess the implementation can be reviewed as it is similar to that of the methods mentioned in the section 5.3.2 of the Handbook.",
  "id": "5b2f490172b31d3691eea8e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-24T07:32:17.223Z",
  "text": "I've sent the PR but docstrings and tests are yet to be added. But I guess the implementation can be reviewed as it is similar to that of the methods mentioned in the section 5.3.2 of the Handbook.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "How would it be better to implement the polycyclic group methods? Do we need another <code>PcGroup</code> class which inherits <code>FpGroup</code> or can we just implement them as the methods of <code>FpGroup</code>?",
  "id": "5b307692ad21887018db6d6a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-25T04:58:58.282Z",
  "text": "How would it be better to implement the polycyclic group methods? Do we need another `PcGroup` class which inherits `FpGroup` or can we just implement them as the methods of `FpGroup`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I think I would prefer it as a subclass with additional attributes <code>pc_series</code> or <code>pc_generators</code> and whatever else might be useful, and some of its methods overriding those in <code>FpGroup</code>. Though if you are writing a method like <code>is_polycyclic</code> (this could probably be implemented for finite groups at least), that should be in the main <code>FpGroup</code> method. In any case, if we later decide that it makes more sense to just use <code>FpGroup</code> after you send the PR, then we can change it.",
  "id": "5b30ab167da8cd7c8c6b3e3d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-25T08:43:02.126Z",
  "text": "I think I would prefer it as a subclass with additional attributes `pc_series` or `pc_generators` and whatever else might be useful, and some of its methods overriding those in `FpGroup`. Though if you are writing a method like `is_polycyclic` (this could probably be implemented for finite groups at least), that should be in the main `FpGroup` method. In any case, if we later decide that it makes more sense to just use `FpGroup` after you send the PR, then we can change it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Okay :+1: ",
  "id": "5b30bd29d2abe4668887fed3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-25T10:00:09.616Z",
  "text": "Okay :+1: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "And, is there any method implemented to check if the given group is cyclic? ",
  "id": "5b30bd3f59799e70173f8fa9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-25T10:00:31.604Z",
  "text": "And, is there any method implemented to check if the given group is cyclic? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-25T10:04:01.187Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<code>git grep</code> returns cyclic groups mentioned in <code>doc/cheatsheet/combinatoric_cheatsheet.tex</code>. What is the <code>combinatoric_cheatsheet.tex</code> file for? ",
  "id": "5b30bdedce3b0f268d40eb56",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-25T10:03:25.076Z",
  "text": "`git grep` returns cyclic groups mentioned in `doc/cheatsheet/combinatoric_cheatsheet.tex`. What is the `combinatoric_cheatsheet.tex` file for? ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The author says:<pre><code>commit c0523e6bee73e13ad0f9f958cca52963836de0f8\n<span class=\"string\">Author:</span> Mba7eth &lt;Mba7eth<span class=\"annotation\">@gmail</span>.com&gt;\n<span class=\"string\">Date:</span>   Wed May <span class=\"number\">8</span> <span class=\"number\">21</span>:<span class=\"number\">13</span>:<span class=\"number\">23</span> <span class=\"number\">2013</span> -<span class=\"number\">0700</span>\n\n    Combinatoric Cheatsheet\n\n    A combinatoric cheatsheet. It include methods names and a <span class=\"typename\">short</span>\n    description.</code></pre>",
  "id": "5b30c430479ca266897d4b0e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-25T10:30:08.216Z",
  "text": "The author says:\n```\ncommit c0523e6bee73e13ad0f9f958cca52963836de0f8\nAuthor: Mba7eth <Mba7eth@gmail.com>\nDate:   Wed May 8 21:13:23 2013 -0700\n\n    Combinatoric Cheatsheet\n    \n    A combinatoric cheatsheet. It include methods names and a short\n    description.\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-25T10:46:14.894Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Alright. Thank you :+1:<br>But looks like there are no methods to check if the given group is cyclic. Can we check it by computing the order of the group and checking if it is isomorphic to a cyclic group of that order?",
  "id": "5b30c7e97d3bca737a07db04",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-25T10:46:01.562Z",
  "text": "Alright. Thank you :+1: \nBut looks like there are no methods to check if the given group is cyclic. Can we check it by computing the order of the group and checking if it is isomorphic to a cyclic group of that order?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think that one should first check that the group is abelian. Then it is at least a product of cyclic groups.",
  "id": "5b30d81ad2abe46688885b2e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-25T11:55:06.399Z",
  "text": "I think that one should first check that the group is abelian. Then it is at least a product of cyclic groups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-25T12:46:00.332Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "So we first check if it is abelian and then we check that the group is isomorphic to a cyclic group of same order, right? ",
  "id": "5b30e3fcad21887018dc8d69",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-25T12:45:48.711Z",
  "text": "So we first check if it is abelian and then we check that the group is isomorphic to a cyclic group of same order, right? ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I can&#39;t really think of a better way. If the order of the group is prime, then you know it&#39;s cyclic immediately (should add this as a special case to <code>is_isomorphic</code> btw). You should also check if it&#39;s obvious from the presentation, if it&#39;s an <code>FpGroup</code>. It may be worth trying <code>simplify_presentation</code> in some cases e.g., for infinite groups. You could also try searching for a generator directly but this will likely take longer than finding an isomorphism.",
  "id": "5b30eba3ad21887018dca406",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-25T13:18:27.760Z",
  "text": "I can't really think of a better way. If the order of the group is prime, then you know it's cyclic immediately (should add this as a special case to `is_isomorphic` btw). You should also check if it's obvious from the presentation, if it's an `FpGroup`. It may be worth trying `simplify_presentation` in some cases e.g., for infinite groups. You could also try searching for a generator directly but this will likely take longer than finding an isomorphism.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "An abelian group is also cyclic if its order is a product of different primes. If the order is divisible by a square of a prime, then the group may or may not be cyclic.",
  "id": "5b31047b479ca266897e1fcd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-25T15:04:27.097Z",
  "text": "An abelian group is also cyclic if its order is a product of different primes. If the order is divisible by a square of a prime, then the group may or may not be cyclic.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Oh yes, that&#39;s true - and should be added to <code>is_isomorphic</code> as well.",
  "id": "5b3124db5862c35f47c71814",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-25T17:22:35.472Z",
  "text": "Oh yes, that's true - and should be added to `is_isomorphic` as well.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-25T17:46:06.638Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It is probably not very important to find criteria for a group being cyclic or not when trying to find polycyclic presentations for, say, a finite solvable group. The quotients of the derived series are abelian and it would suffice to represent them by a sequence of cyclic groups.",
  "id": "5b312a1aad21887018dd644c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-25T17:44:58.228Z",
  "text": "It is probably not very important to find criteria for a group being cyclic or not when trying to find polycyclic presentations for, say, a finite solvable group. The quotients of the derived series are abelian and it would suffice to represent them by a sequence of cyclic groups.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "I&#39;m currently working on the release notes for 1.2. It looks like there is already a lot of group theory stuff on the release notes, so I&#39;m assuming everything that needs to be added there is already there. If something is missing, please add it. ",
  "id": "5b3144056c7cdb4945adfb76",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-25T19:35:33.000Z",
  "text": "I'm currently working on the release notes for 1.2. It looks like there is already a lot of group theory stuff on the release notes, so I'm assuming everything that needs to be added there is already there. If something is missing, please add it. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Is there any method to find the normal subgroups of a given group? I might need it for the subnormal series computation.",
  "id": "5b31d38459799e701742304d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T05:47:48.555Z",
  "text": "Is there any method to find the normal subgroups of a given group? I might need it for the subnormal series computation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I don&#39;t know of any efficient method for finding all normal subgroups. For the subgroups appearing in the derived series and the central series there are standard constructions.",
  "id": "5b31e42f6ceffe4eba3393aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T06:58:55.775Z",
  "text": "I don't know of any efficient method for finding all normal subgroups. For the subgroups appearing in the derived series and the central series there are standard constructions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-26T07:47:16.204Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The quotients of the derived series are abelian. All of their subgroups are normal and can be lifted to normal subgroups of the &quot;numerator&quot; of the quotient.",
  "id": "5b31ee5d960fcd4eb923e331",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T07:42:21.985Z",
  "text": "The quotients of the derived series are abelian. All of their subgroups are normal and can be lifted to normal subgroups of the \"numerator\" of the quotient.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-06-26T07:57:15.172Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Well, I need that to compute the subnormal series,  <code>G=G1\u2265G2\u2265...\u2265Gn=1</code>, in the <code>is_polycylic</code> method. Here, <code>G_i+1</code> is the normal subgroup of <code>G_i</code>. Is there an alternative to this? ",
  "id": "5b31f1d1d2abe466888ac6fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T07:57:05.245Z",
  "text": "Well, I need that to compute the subnormal series,  `G=G1\u2265G2\u2265...\u2265Gn=1`, in the `is_polycylic` method. Here, `G_i+1` is the normal subgroup of `G_i`. Is there an alternative to this? ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-06-26T09:06:01.494Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "That subnormal series can be computed as I described above. First find the derived series whose quotients are abelian. Then find a subnormal series whose quotients are cyclic for each one these abelian quotients. That is easy as all subgroups are normal. Finally lift these subgroups to the original group. This way you get a subnormal series with cyclic quotients.",
  "id": "5b3201be6ceffe4eba33dd61",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T09:05:02.389Z",
  "text": "That subnormal series can be computed as I described above. First find the derived series whose quotients are abelian. Then find a subnormal series whose quotients are cyclic for each one these abelian quotients. That is easy as all subgroups are normal. Finally lift these subgroups to the original group. This way you get a subnormal series with cyclic quotients.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "For <code>is_polycyclic</code> it is not always necessary to actually construct a subnormal series. Some groups can be seen to be polycyclic with less trouble, e.g., finite solvable groups and finitely generated nilpotent groups.",
  "id": "5b32030fce3b0f268d43f642",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T09:10:39.139Z",
  "text": "For `is_polycyclic` it is not always necessary to actually construct a subnormal series. Some groups can be seen to be polycyclic with less trouble, e.g., finite solvable groups and finitely generated nilpotent groups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I would start with abelian groups. All series of subgroups are then automatically normal.",
  "id": "5b3205b1be98b1422409ae93",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T09:21:53.564Z",
  "text": "I would start with abelian groups. All series of subgroups are then automatically normal.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Quotient groups are mentioned in the later part of the timeline.  Should the timeline be changed?",
  "id": "5b323be5be98b142240a3644",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T13:13:09.299Z",
  "text": "Quotient groups are mentioned in the later part of the timeline.  Should the timeline be changed?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Quotient groups have been effectively handled already. Most finitely presented groups are such.",
  "id": "5b3254e0aeb8fa0c0743d61f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T14:59:44.417Z",
  "text": "Quotient groups have been effectively handled already. Most finitely presented groups are such.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "So just to be sure, we first compute the derived series and check for the series with abelian and cyclic quotients, right? This will be the subnormal series. ",
  "id": "5b32a0cabe98b142240b56a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T20:23:38.504Z",
  "text": "So just to be sure, we first compute the derived series and check for the series with abelian and cyclic quotients, right? This will be the subnormal series. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-26T20:29:24.522Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "To compute the derived series we first start with <code>G</code> and then the commutator group of  <code>G</code>will be it&#39;s successor in the derived series. We do this till we reach the identity.<br>There is a method to generate the subgroup using the given generators. Commutator group is generated from the commutators of the predecessor group. Is there a way or a method already implemented to compute the commutators of a given group? ",
  "id": "5b32a1a5d2abe466888cab5b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T20:27:17.350Z",
  "text": "To compute the derived series we first start with `G` and then the commutator group of  `G`will be it's successor in the derived series. We do this till we reach the identity. \nThere is a method to generate the subgroup using the given generators. Commutator group is generated from the commutators of the predecessor group. Is there a way or a method already implemented to compute the commutators of a given group? ",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "For finite solvable groups you can find the derived series via permutation groups, see <code>derived_series</code> in the <code>fp_groups</code> file",
  "id": "5b32a537d2abe466888cb102",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T20:42:31.194Z",
  "text": "For finite solvable groups you can find the derived series via permutation groups, see `derived_series` in the `fp_groups` file",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "So, this basically returns the generators of the subgroups, right? For example, if the derived series is <code>G=G1\u2265G2\u2265...\u2265Gn=1</code>, this method returns the <code>gens</code> of <code>G1, G2..., Gn</code>. ",
  "id": "5b32a5c7d2abe466888cb2b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T20:44:55.564Z",
  "text": "So, this basically returns the generators of the subgroups, right? For example, if the derived series is `G=G1\u2265G2\u2265...\u2265Gn=1`, this method returns the `gens` of `G1, G2..., Gn`. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "And now we need to check if the groups <code>Gi/Gi+1</code> where <code>i</code> belongs to <code>[1, n-1]</code> are cyclic and abelian, right? ",
  "id": "5b32a617ad21887018e0cdee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T20:46:15.280Z",
  "text": "And now we need to check if the groups `Gi/Gi+1` where `i` belongs to `[1, n-1]` are cyclic and abelian, right? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<blockquote>\n<p>We first compute the derived series and check for the series with abelian and cyclic quotients, right?</p></blockquote>\n<p>In the derived series, <code>G_(i+1)/G_i</code> is abelian - this doesn&#39;t need to be checked. What Kalevi is saying is that you can find a subnormal series, say <code>H_n &gt;= H_(n-1) &gt;= ...</code>, for this quotient where <code>H_(i+1)/H_i</code> is cyclic. Then the preimages <code>H*_j</code> of <code>H_j</code> under the quotient map are all subgroups of <code>G_(i+1)</code> and if you insert them between <code>G_(i+1)</code> and <code>G_i</code> jn the derived series, you&#39;ll get the right subnormal series for your original group because <code>H*_(j+1)/H*_j ~ H_(j+1)/H_j</code>, i.e. cyclic (and this again won&#39;t need to be checked).</p>",
  "id": "5b32ab2c72b31d3691f6215f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T21:07:56.435Z",
  "text": "> We first compute the derived series and check for the series with abelian and cyclic quotients, right?\n\nIn the derived series, `G_(i+1)/G_i` is abelian - this doesn't need to be checked. What Kalevi is saying is that you can find a subnormal series, say `H_n >= H_(n-1) >= ...`, for this quotient where `H_(i+1)/H_i` is cyclic. Then the preimages `H*_j` of `H_j` under the quotient map are all subgroups of `G_(i+1)` and if you insert them between `G_(i+1)` and `G_i` jn the derived series, you'll get the right subnormal series for your original group because `H*_(j+1)/H*_j ~ H_(j+1)/H_j`, i.e. cyclic (and this again won't need to be checked).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "You could find an explicit presentation of <code>G_(i+1)/G_i</code> by finding a presentation of <code>G_(i+1)</code> and adding the appropriately mapped generators of <code>G_i</code> into the relators for this presentation. But finding a subgroup presentation usually takes a while...",
  "id": "5b32abc5ce3b0f268d45c070",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T21:10:29.592Z",
  "text": "You could find an explicit presentation of `G_(i+1)/G_i` by finding a presentation of `G_(i+1)` and adding the appropriately mapped generators of `G_i` into the relators for this presentation. But finding a subgroup presentation usually takes a while...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>you can find a subnormal series, say H<em>n &gt;= H</em>(n-1) &gt;= ..., for this quotient  </p></blockquote>\n<p>I still have a doubt on how this is can be done, computing a subnormal series for a particular quotient. </p>",
  "id": "5b32b3e8b9c2fb25570df469",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T21:45:12.469Z",
  "text": "> you can find a subnormal series, say H_n >= H_(n-1) >= ..., for this quotient  \n\nI still have a doubt on how this is can be done, computing a subnormal series for a particular quotient. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Also the computation of the quotient map. ",
  "id": "5b32b41272b31d3691f6368d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T21:45:54.607Z",
  "text": "Also the computation of the quotient map. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Suppose <code>G_(i+1)</code> has presentation <code>&lt;a_1 ... a_n | r_1, r_2 ... r_m&gt;</code> and <code>G_i</code> is generated by <code>&lt;w_1 ... w_k&gt;</code> in <code>G_(i+1)</code>. Then the presentation of the quotient is just <code>&lt;a_1 ... a_n | r_1, r_2 ... r_m, w_1, ... w_k &gt;</code>, and the quotiet map from <code>G_(i+1)</code> to <code>G_(i+1)/G_i</code> is defined by sending <code>a_i</code> to itself (well, technically the quotient version of itself, but with how fp groups are implemented in SymPy, it&#39;s going to be the element of the same free group). You can just define it by using <code>homomorphism</code>",
  "id": "5b32b57272b31d3691f639af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T21:51:46.669Z",
  "text": "Suppose `G_(i+1)` has presentation `<a_1 ... a_n | r_1, r_2 ... r_m>` and `G_i` is generated by `<w_1 ... w_k>` in `G_(i+1)`. Then the presentation of the quotient is just `<a_1 ... a_n | r_1, r_2 ... r_m, w_1, ... w_k >`, and the quotiet map from `G_(i+1)` to `G_(i+1)/G_i` is defined by sending `a_i` to itself (well, technically the quotient version of itself, but with how fp groups are implemented in SymPy, it's going to be the element of the same free group). You can just define it by using `homomorphism`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Yes, Thank you. It makes sense now :+1:",
  "id": "5b32b6407d3bca737a0caccb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T21:55:12.679Z",
  "text": "Yes, Thank you. It makes sense now :+1:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "What about finding the subnormal series for a quotient? ",
  "id": "5b32b6660168e70c08f14327",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T21:55:50.744Z",
  "text": "What about finding the subnormal series for a quotient? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "As for the subnormal series, I&#39;ve been thinking about how to do it more or less efficiently myself. If we had a composition series function, that would be really useful right now but we don&#39;t (though we should probably add one at some point). Any subgroup of an abelian group is normal, so that&#39;s good at least. Theoretically, you could just try them all in turn and see if you get a cyclic quotient but that&#39;s ridiculously inefficient. Using the isomorphic permutation group could be useful, maybe doing it recursively: pick any element at random (except the identity), quotient by the group generated by this element (clearly cyclic), find a cyclic subnormal series for this quotient (it&#39;s of smaller size so recursion will terminate once you get to something of square-free order), lift it as before - done. I think that works, but also it&#39;s really late where I am so I&#39;d rather continue this tomorrow",
  "id": "5b32b9f8be98b142240b989c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T22:11:04.948Z",
  "text": "As for the subnormal series, I've been thinking about how to do it more or less efficiently myself. If we had a composition series function, that would be really useful right now but we don't (though we should probably add one at some point). Any subgroup of an abelian group is normal, so that's good at least. Theoretically, you could just try them all in turn and see if you get a cyclic quotient but that's ridiculously inefficient. Using the isomorphic permutation group could be useful, maybe doing it recursively: pick any element at random (except the identity), quotient by the group generated by this element (clearly cyclic), find a cyclic subnormal series for this quotient (it's of smaller size so recursion will terminate once you get to something of square-free order), lift it as before - done. I think that works, but also it's really late where I am so I'd rather continue this tomorrow",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> can probably correct me/suggest a better approach if I don&#39;t do it first",
  "id": "5b32ba68be98b142240b9905",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T22:12:56.415Z",
  "text": "@jksuom can probably correct me/suggest a better approach if I don't do it first",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Alright I&#39;ll think on it as well.<br>On a side note, I think there is a way to integrate GAP&#39;s methods and catalog into Sympy(SageMath does this for it&#39;s groups library). Not saying that this can be done now but it can be continued sometime later, probably after the GSoC period. This requires GAP to be installed locally not sure how can that be tested on Travis. Can we integrate GAP into Travis for running the tests? ",
  "id": "5b32bd627da8cd7c8c706bd0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-26T22:25:38.267Z",
  "text": "Alright I'll think on it as well. \nOn a side note, I think there is a way to integrate GAP's methods and catalog into Sympy(SageMath does this for it's groups library). Not saying that this can be done now but it can be continued sometime later, probably after the GSoC period. This requires GAP to be installed locally not sure how can that be tested on Travis. Can we integrate GAP into Travis for running the tests? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "It&#39;s possible but I think the fewer external dependencies we have, the better.",
  "id": "5b335cf10168e70c08f2a0f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-27T09:46:25.501Z",
  "text": "It's possible but I think the fewer external dependencies we have, the better.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-27T10:19:53.921Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "That looks like the only way to integrate a large catalog (1M+ entries), speaking about <code>SmallGroups</code>. SageMath does this for a few methods as well. ",
  "id": "5b3364ae0168e70c08f2b491",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-27T10:19:26.082Z",
  "text": "That looks like the only way to integrate a large catalog (1M+ entries), speaking about `SmallGroups`. SageMath does this for a few methods as well. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Is it okay to write the unit tests for modified methods separately in another file? &#39;Coz the tests for the coset_Table methods take a lot of time.",
  "id": "5b34497b6ceffe4eba396d4f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-28T02:35:39.566Z",
  "text": "Is it okay to write the unit tests for modified methods separately in another file? 'Coz the tests for the coset_Table methods take a lot of time.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think that could be done, at least during the development phase.",
  "id": "5b34702fbe98b142240f79be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-28T05:20:47.176Z",
  "text": "I think that could be done, at least during the development phase.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"RavicharanN\" class=\"mention\">@RavicharanN</span> Since I made some comments in the modified Todd-Coxeter PR, you&#39;ve pushed two relatively minor commits, both unrelated to what we discussed. I&#39;d say, generally, leave minor commits unpushed locally and squash them all into one when you are about to push something more major; certainly it would be more helpful if that major commit incorporated the changes we discussed - if there is some issue in making the changes, ask for advice.",
  "id": "5b360d1bd2abe466889461b7",
  "issues": [],
  "mentions": [
   {
    "screenName": "RavicharanN",
    "userId": "5862b83dd73408ce4f3f9ce3",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-29T10:42:35.337Z",
  "text": "@RavicharanN Since I made some comments in the modified Todd-Coxeter PR, you've pushed two relatively minor commits, both unrelated to what we discussed. I'd say, generally, leave minor commits unpushed locally and squash them all into one when you are about to push something more major; certainly it would be more helpful if that major commit incorporated the changes we discussed - if there is some issue in making the changes, ask for advice.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Sure, I&#39;ll squash the commits from next time on. ",
  "id": "5b3620daa288503b3de9af94",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-29T12:06:50.219Z",
  "text": "Sure, I'll squash the commits from next time on. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "The units tests for coset enumeration in Python2 weirdly take a lot of time. Tests in Python3 run for 25s and Python2 takes more than 3mins to run them. ",
  "id": "5b3646367da8cd7c8c78a482",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-29T14:46:14.940Z",
  "text": "The units tests for coset enumeration in Python2 weirdly take a lot of time. Tests in Python3 run for 25s and Python2 takes more than 3mins to run them. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-29T15:06:20.978Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Can you find out which tests take the longest time on Python 2? This should certainly be investigated.",
  "id": "5b364a5c6ceffe4eba3e14cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-29T15:03:56.094Z",
  "text": "Can you find out which tests take the longest time on Python 2? This should certainly be investigated.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-06-29T15:56:17.741Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "There isn&#39;t any significant difference in the unit tests in the test files. But, that could be seen in the code examples of the docstrings. ",
  "id": "5b3655ab5862c35f47d34483",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-29T15:52:11.895Z",
  "text": "There isn't any significant difference in the unit tests in the test files. But, that could be seen in the code examples of the docstrings. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Can you do a test merge of your branch against the <code>1.2</code> branch and see if the Python 2 tests are still as slow there? ",
  "id": "5b3672558430e553073b6e21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-29T17:54:29.091Z",
  "text": "Can you do a test merge of your branch against the `1.2` branch and see if the Python 2 tests are still as slow there? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "You can &quot;detach&quot; the branch in git using <code>git checkout $(git rev-parse HEAD)</code> so that the merge doesn&#39;t actually update your branch. ",
  "id": "5b367279c74dab091fa32c23",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-29T17:55:05.084Z",
  "text": "You can \"detach\" the branch in git using `git checkout $(git rev-parse HEAD)` so that the merge doesn't actually update your branch. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "The reason is I&#39;m wondering if this is related to <span data-link-type=\"issue\" data-issue=\"14685\" data-issue-repo=\"sympy/sympy\" class=\"issue\">sympy/sympy#14685</span>",
  "id": "5b3672a97ee4da66b1d9fd4a",
  "issues": [
   {
    "number": "14685",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-29T17:55:53.380Z",
  "text": "The reason is I'm wondering if this is related to https://github.com/sympy/sympy/pull/14685",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "But I also don&#39;t know how much the module uses Basic. If it doesn&#39;t use Basic, then this is likely not the issue ",
  "id": "5b3672eb30be1e04c3297a62",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-29T17:56:59.493Z",
  "text": "But I also don't know how much the module uses Basic. If it doesn't use Basic, then this is likely not the issue ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Yes sure I&#39;ll do that.",
  "id": "5b367d007da8cd7c8c793d0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-29T18:40:00.159Z",
  "text": "Yes sure I'll do that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Not much significant difference in the 1.2 branch. ",
  "id": "5b369a303d8f71623d4fd02f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-29T20:44:32.777Z",
  "text": "Not much significant difference in the 1.2 branch. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Ok. So it is likely something else ",
  "id": "5b369a4303235c461fa3b747",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-29T20:44:51.497Z",
  "text": "Ok. So it is likely something else ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Actually, the doctests run fine now in the working branch as well. That must have been a machine specific issue. ",
  "id": "5b369b80f1664406610ccbee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-29T20:50:08.761Z",
  "text": "Actually, the doctests run fine now in the working branch as well. That must have been a machine specific issue. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Are there randomized parts of the algorithm? It could just be that it&#39;s slower sometimes, and it happened to be slower in python 2",
  "id": "5b369bcae2d42269e37f9741",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-29T20:51:22.310Z",
  "text": "Are there randomized parts of the algorithm? It could just be that it's slower sometimes, and it happened to be slower in python 2",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Will similar implementation cause problems. I mean can&#39;t we add it to the references section of the method. ",
  "id": "5b378e1533b0282df4f4c67f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-30T14:05:09.224Z",
  "text": "Will similar implementation cause problems. I mean can't we add it to the references section of the method. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "It has GNU General Public License v3.0",
  "id": "5b378ea581816669a424db34",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-30T14:07:33.472Z",
  "text": "It has GNU General Public License v3.0",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "There was a comment on the isomorphism thread about the implementation which I previously posted on the channel.",
  "id": "5b379b08f1664406610e6dc3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-30T15:00:24.751Z",
  "text": "There was a comment on the isomorphism thread about the implementation which I previously posted on the channel.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I don&#39;t know much about licensing and how that works so somebody else would have to comment.",
  "id": "5b37acf2d99c896d64db2be9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-30T16:16:50.915Z",
  "text": "I don't know much about licensing and how that works so somebody else would have to comment.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Is there some copied code or does the implementation only look similar. (In some cases that could be unavoidable.)",
  "id": "5b37b6b27b811a6d63c49cde",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-30T16:58:26.956Z",
  "text": "Is there some copied code or does the implementation only look similar. (In some cases that could be unavoidable.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-30T17:15:58.741Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Well, the algorithm, the core part which I posted for reference, the implementation is more or less the same. Basically, the part with defining the maps from the generators of <code>G</code> to a subset in <code>H</code>.",
  "id": "5b37ba8bd99c896d64db471f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-30T17:14:51.879Z",
  "text": "Well, the algorithm, the core part which I posted for reference, the implementation is more or less the same. Basically, the part with defining the maps from the generators of `G` to a subset in `H`.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-06-30T17:31:09.864Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I just wanted to be sure, I&#39;ve read in an SO that if a certain part of the work is derived from elsewhere, it&#39;s fine if we attribute it in the references or somewhere else. ",
  "id": "5b37be509b82c6701b97b5b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-30T17:30:56.222Z",
  "text": "I just wanted to be sure, I've read in an SO that if a certain part of the work is derived from elsewhere, it's fine if we attribute it in the references or somewhere else. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "You can&#39;t transcribe the code if it&#39;s GPL, but you can use it for reference ",
  "id": "5b37be8303235c461fa3b846",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-30T17:31:47.557Z",
  "text": "You can't transcribe the code if it's GPL, but you can use it for reference ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "So what should be done? As far as I can see, the code in the PR looks almost the same as that in the original with the layout and even variable names",
  "id": "5b37d2913c5abf52b631463a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-30T18:57:21.708Z",
  "text": "So what should be done? As far as I can see, the code in the PR looks almost the same as that in the original with the layout and even variable names",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 29
  },
  "html": "Can you link the PR and the original code? ",
  "id": "5b37d4219dc6a669739689a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-30T19:04:01.803Z",
  "text": "Can you link the PR and the original code? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-30T19:22:20.853Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "The original code is in the comments",
  "id": "5b37d864bd92d8078288b8a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-30T19:22:12.256Z",
  "text": "The original code is in the comments",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "What is to be done now? Should I refactor it?",
  "id": "5b37d8a93c5abf52b63150d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-30T19:23:21.410Z",
  "text": "What is to be done now? Should I refactor it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<a href=\"https://github.com/sympy/sympy/pull/14785/files\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">The PR changes</a><br><a href=\"https://github.com/naftaliharris/Abstract-Algebra/blob/06b3bce8bf1e04daa964d95c69666735d0e35b29/absalg/Group.py#L329\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">The original code</a>",
  "id": "5b37d9d460c387078352bfe9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-30T19:28:20.781Z",
  "text": "[The PR changes](https://github.com/sympy/sympy/pull/14785/files)\n[The original code](https://github.com/naftaliharris/Abstract-Algebra/blob/06b3bce8bf1e04daa964d95c69666735d0e35b29/absalg/Group.py#L329)",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/14785/files"
   },
   {
    "url": "https://github.com/naftaliharris/Abstract-Algebra/blob/06b3bce8bf1e04daa964d95c69666735d0e35b29/absalg/Group.py#L329"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Should I close the PR and send another rewriting the algo from scratch? ",
  "id": "5b37e890f1664406610ef68e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-06-30T20:31:12.629Z",
  "text": "Should I close the PR and send another rewriting the algo from scratch? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I&#39;ve closed the PR for now. I will write a new one scratch and send it again.",
  "id": "5b3837d5f1664406610f5fbb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-01T02:09:25.688Z",
  "text": "I've closed the PR for now. I will write a new one scratch and send it again.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-01T06:50:41.113Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "To check if a group is polycyclic, is it sufficient to check if it is a finitely generated solvable group?  ",
  "id": "5b3877c9216ee2623e9217cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-01T06:42:17.966Z",
  "text": "To check if a group is polycyclic, is it sufficient to check if it is a finitely generated solvable group?  ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "A finitely generated solvable group is polycyclic but not all polycyclic groups are solvable.",
  "id": "5b387d329b82c6701b98a876",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-01T07:05:22.158Z",
  "text": "A finitely generated solvable group is polycyclic but not all polycyclic groups are solvable.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "So, the only generalised way to check this is to check if there exists a polycyclic series? ",
  "id": "5b38811481816669a4263389",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-01T07:21:56.794Z",
  "text": "So, the only generalised way to check this is to check if there exists a polycyclic series? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "I think so, if you want a complete answer. But I also think that we could check the easy cases first and otherwise return <code>None</code> for now.",
  "id": "5b38a140f1664406610fe2b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-01T09:39:12.092Z",
  "text": "I think so, if you want a complete answer. But I also think that we could check the easy cases first and otherwise return `None` for now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I&#39;ve made the suggested changes in the automaton PR but they are too minor to push. I could push them all together if it is reviewed once again. I think the major part is done and it is stable now. ",
  "id": "5b38deb89b82c6701b993b5e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-01T14:01:28.357Z",
  "text": "I've made the suggested changes in the automaton PR but they are too minor to push. I could push them all together if it is reviewed once again. I think the major part is done and it is stable now. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "If you&#39;ve made all the changes we&#39;ve talked about last time, which wasn&#39;t much, then it should be good to merge after you push them, there is nothing more to review really",
  "id": "5b38e1d7216ee2623e92b5d0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-01T14:14:47.687Z",
  "text": "If you've made all the changes we've talked about last time, which wasn't much, then it should be good to merge after you push them, there is nothing more to review really",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-01T22:57:24.190Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<p>So, before I start implementing this, just checking if this is the right way to compute the polycyclic series. </p><p>First we compute the derived series <code>G = G1, G2, ..., Gn = &lt;identity&gt;</code>. Every quotient <code>Q_i = G_i/G_i+1</code> is abelian so every subgroup of the quotient group is a normal subgroup. To compute the subnormal series, we randomly pick and element <code>e</code> from <code>Q_i</code> and quotient the group <code>Q_i</code> with the group generated by this element <code>e</code>. This will be repeated recursively to obtain the cyclic subnormal series, <code>H1, H2, ..., Hn</code>. Now, the pre-images of <code>H_k</code> in the quotient map from <code>G_i</code> -&gt; <code>G_i+1</code> will be the subgroups of <code>G_i</code>. Now, we lift it to the original group. So, the final cyclic subnormal series(polycyclic series) will be <code>G1 &gt; ... &gt; G_i &gt; H1 &gt;... Hn &gt; G_i+1 &gt; ... &gt; &lt;identity&gt;</code>. </p><p>Please correct me if I&#39;m wrong. </p><p>Also, will the quotient <code>Hn/ G_i+1</code> be cyclic here?</p>",
  "id": "5b395ad1d99c896d64ddb0cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-01T22:50:57.609Z",
  "text": "So, before I start implementing this, just checking if this is the right way to compute the polycyclic series. \n\nFirst we compute the derived series `G = G1, G2, ..., Gn = <identity>`. Every quotient `Q_i = G_i/G_i+1` is abelian so every subgroup of the quotient group is a normal subgroup. To compute the subnormal series, we randomly pick and element `e` from `Q_i` and quotient the group `Q_i` with the group generated by this element `e`. This will be repeated recursively to obtain the cyclic subnormal series, `H1, H2, ..., Hn`. Now, the pre-images of `H_k` in the quotient map from `G_i` -> `G_i+1` will be the subgroups of `G_i`. Now, we lift it to the original group. So, the final cyclic subnormal series(polycyclic series) will be `G1 > ... > G_i > H1 >... Hn > G_i+1 > ... > <identity>`. \n\nPlease correct me if I'm wrong. \n\nAlso, will the quotient `Hn/ G_i+1` be cyclic here?\n",
  "unread": false,
  "urls": [],
  "v": 8
 },
 {
  "editedAt": "2018-07-01T22:59:21.732Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>This will be repeated recursively to obtain the cyclic subnormal series, <code>H1, H2, ..., Hn</code>. </p></blockquote>\n<p>Wouldn&#39;t it be better to do it iteratively, &#39;coz we are just computing one quotient at a time? </p>",
  "id": "5b395bc881816669a427b7ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-01T22:55:04.191Z",
  "text": "> This will be repeated recursively to obtain the cyclic subnormal series, `H1, H2, ..., Hn`. \n\nWouldn't it be better to do it iteratively, 'coz we are just computing one quotient at a time? ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "<blockquote>\nwill the quotient Hn/ G_i+1 be cyclic here?</blockquote>\n",
  "id": "5b39b948e534eb69a5c002d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-02T05:34:00.941Z",
  "text": "> will the quotient Hn/ G_i+1 be cyclic here?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-02T05:37:01.590Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Note that <code>Hn</code> is a (cyclic) subgroup of <code>G_i/G_i+1</code>. If <code>H&#39;n</code> is its preimage in <code>G_i</code>, then <code>H&#39;n/G_i+1</code> is isomorphic to <code>Hn</code> (and therefore cyclic).",
  "id": "5b39b9d970efc60660a52f12",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-02T05:36:25.327Z",
  "text": "Note that `Hn` is a (cyclic) subgroup of `G_i/G_i+1`. If `H'n` is its preimage in `G_i`, then `H'n/G_i+1` is isomorphic to `Hn` (and therefore cyclic).",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "There are several ways of finding the series of <code>Hi</code>. Picking up random generators will probably be the most simple way but will produce longer series, in general. (Something like the Smith normal form could lead to the shortest series if that would be desired.)",
  "id": "5b39bb8533b0282df4f8422f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-02T05:43:33.551Z",
  "text": "There are several ways of finding the series of `Hi`. Picking up random generators will probably be the most simple way but will produce longer series, in general. (Something like the Smith normal form could lead to the shortest series if that would be desired.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-02T05:54:16.325Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>(Something like the Smith normal form could lead to the shortest series if that would be desired.)</p></blockquote>\n<p>Sure I&#39;ll check that. Thank you :+1:</p>",
  "id": "5b39bdfc63042f2df34e4df2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-02T05:54:04.813Z",
  "text": "> (Something like the Smith normal form could lead to the shortest series if that would be desired.)\n\nSure I'll check that. Thank you :+1:",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Instead of checking for counter-example while extending the map from <code>gens</code> to <code>subset</code>, can we just compute the homomorphism from <code>G</code> to <code>H</code> with <code>gens=gens</code> and <code>images=subset</code> and check if the returned map is bijective?",
  "id": "5b3a5a7c63042f2df34ff462",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-02T17:01:48.204Z",
  "text": "Instead of checking for counter-example while extending the map from `gens` to `subset`, can we just compute the homomorphism from `G` to `H` with `gens=gens` and `images=subset` and check if the returned map is bijective?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "This could probably be more efficient as well, I think, because in the other method we compute the homomorphism even after the <code>func_map</code> is computed. ",
  "id": "5b3a6054a99e1e52b70fe312",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-02T17:26:44.365Z",
  "text": "This could probably be more efficient as well, I think, because in the other method we compute the homomorphism even after the `func_map` is computed. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I&#39;ve sent the new isomorphism PR <span data-link-type=\"issue\" data-issue=\"14861\" class=\"issue\">#14861</span> which uses the homomorphism methods instead of searching for counter examples. ",
  "id": "5b3a8ad381816669a42a7cd0",
  "issues": [
   {
    "number": "14861"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-02T20:28:03.993Z",
  "text": "I've sent the new isomorphism PR #14861 which uses the homomorphism methods instead of searching for counter examples. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>This could work but I&#39;d check the running times, particularly when the first group is a permutation group - though I suspect it&#39;ll be faster when it&#39;s an <code>FpGroup</code>.</p><p>Ah, right, I was a bit too late with that reply. It would still be good to compare the running times.</p>",
  "id": "5b3a8b153c5abf52b6364be8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-02T20:29:09.830Z",
  "text": "This could work but I'd check the running times, particularly when the first group is a permutation group - though I suspect it'll be faster when it's an `FpGroup`.\n\nAh, right, I was a bit too late with that reply. It would still be good to compare the running times.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I&#39;ve not timed them but the test files almost take the same time. ",
  "id": "5b3a8b4d33b0282df4fa68b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-02T20:30:05.825Z",
  "text": "I've not timed them but the test files almost take the same time. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I will time them now and check which implementation is faster. ",
  "id": "5b3a8b673572e970c17013b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-02T20:30:31.268Z",
  "text": "I will time them now and check which implementation is faster. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Actually, an <code>FpGroup</code> would be faster on checking that it&#39;s a well-defined homomorphism but not necessarily for injectivity - you could try other examples as well, besides the ones in the tests",
  "id": "5b3a8ba93d8f71623d56d38b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-02T20:31:37.379Z",
  "text": "Actually, an `FpGroup` would be faster on checking that it's a well-defined homomorphism but not necessarily for injectivity - you could try other examples as well, besides the ones in the tests",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>you could try other examples as well </p></blockquote>\n<p>Other examples with <code>FpGroups</code>?</p>",
  "id": "5b3a8be033b0282df4fa69c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-02T20:32:32.265Z",
  "text": "> you could try other examples as well \n\nOther examples with `FpGroups`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Well, it seems that in the PR you always convert to permutation groups before you check if you have an isomorphism. I wonder if it would be faster to leave <code>FpGroup</code>s unconverted - if you were to try that, then yes, it&#39;d be interesting how it compares.",
  "id": "5b3a8c8ba99e1e52b710530d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-02T20:35:23.171Z",
  "text": "Well, it seems that in the PR you always convert to permutation groups before you check if you have an isomorphism. I wonder if it would be faster to leave `FpGroup`s unconverted - if you were to try that, then yes, it'd be interesting how it compares.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-02T20:38:06.732Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>would be faster to leave FpGroups unconverted </p></blockquote>\n<p>I&#39;m not sure if we could do that because it&#39;s converted into <code>PermutationGroup</code> in the first place to find the subsets of <code>H</code> which are of the same length as the <code>gens</code> of  <code>G</code>.</p>",
  "id": "5b3a8d20f16644066113d790",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-02T20:37:52.781Z",
  "text": "> would be faster to leave FpGroups unconverted \n\nI'm not sure if we could do that because it's converted into `PermutationGroup` in the first place to find the subsets of `H` which are of the same length as the `gens` of  `G`.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Is there an alternative to this? ",
  "id": "5b3a8d3860c387078357ce47",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-02T20:38:16.683Z",
  "text": "Is there an alternative to this? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-02T20:39:08.258Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Sure, you could convert <code>H</code>, but you know the length of <code>gens</code> of <code>G</code> from the <code>FpGroup</code> presentation so there is no need to turn it into a <code>PermutationGroup</code>",
  "id": "5b3a8d6170efc60660a75a2f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-02T20:38:57.519Z",
  "text": "Sure, you could convert `H`, but you know the length of `gens` of `G` from the `FpGroup` presentation so there is no need to turn it into a `PermutationGroup`",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "So, should I just leave <code>G</code> as it is and convert <code>H</code> to <code>PermutationGroup</code> whenever necessary? ",
  "id": "5b3a8de83c5abf52b636543b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-02T20:41:12.525Z",
  "text": "So, should I just leave `G` as it is and convert `H` to `PermutationGroup` whenever necessary? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "It does make sense to leave <code>G</code> unconverted. ",
  "id": "5b3a8e3870efc60660a75b3f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-02T20:42:32.269Z",
  "text": "It does make sense to leave `G` unconverted. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Try it. I don&#39;t know whether it would be more or less efficient",
  "id": "5b3a8e4f81816669a42a849d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-02T20:42:55.058Z",
  "text": "Try it. I don't know whether it would be more or less efficient",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-02T21:36:01.653Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "When <code>G</code> isn&#39;t converted, it throws a <code>ValueError</code> &quot;The number of images must be equal to the number of generators&quot; for <code>FpGroup</code> to <code>FpGroup</code> cases. ",
  "id": "5b3a9ab489db5e701c9c3c6c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-02T21:35:48.205Z",
  "text": "When `G` isn't converted, it throws a `ValueError` \"The number of images must be equal to the number of generators\" for `FpGroup` to `FpGroup` cases. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Are you definitely picking a set of images that is the same length as the set of generators of <code>G</code>?",
  "id": "5b3b6a513c5abf52b6381577",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-03T12:21:37.171Z",
  "text": "Are you definitely picking a set of images that is the same length as the set of generators of `G`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Also, it does make sense to turn <code>H</code> into a permutation group first in which case the <code>FpGroup</code> to <code>FpGroup</code> case won&#39;t be a thing.",
  "id": "5b3b6a857b811a6d63cb91ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-03T12:22:29.415Z",
  "text": "Also, it does make sense to turn `H` into a permutation group first in which case the `FpGroup` to `FpGroup` case won't be a thing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-03T15:59:02.591Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "It&#39;s working fine now. Leaving <code>G</code> unconverted works fine and the runtime is faster than the case where we convert <code>G</code> to the isomorphic <code>PermutationGroup</code>. ",
  "id": "5b3b9d3c3c5abf52b638afd4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-03T15:58:52.255Z",
  "text": "It's working fine now. Leaving `G` unconverted works fine and the runtime is faster than the case where we convert `G` to the isomorphic `PermutationGroup`. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "We just convert <code>H</code> to the equivalent <code>PermutationGroup</code> to choose a subset and check for homomorphism, if it is an <code>FpGroup</code>, and use the inverse of the subset while returning the <code>GroupHomomorphism</code> object.",
  "id": "5b3b9dc63c5abf52b638b0c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-03T16:01:10.108Z",
  "text": "We just convert `H` to the equivalent `PermutationGroup` to choose a subset and check for homomorphism, if it is an `FpGroup`, and use the inverse of the subset while returning the `GroupHomomorphism` object.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "This runs faster than converting both <code>G</code> and <code>H</code> to <code>PermutationGroup</code>s.",
  "id": "5b3b9e037b811a6d63cc3424",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-03T16:02:11.514Z",
  "text": "This runs faster than converting both `G` and `H` to `PermutationGroup`s.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Are there any methods defined to compute the pre-images of a subgroup in <code>H</code> in a homomorphism from <code>G</code> to <code>H</code>, when given that subgroup is not defined as a list? ",
  "id": "5b3bc5b53c5abf52b63912bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-03T18:51:33.932Z",
  "text": "Are there any methods defined to compute the pre-images of a subgroup in `H` in a homomorphism from `G` to `H`, when given that subgroup is not defined as a list? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-03T18:53:34.161Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "If not, what could be the generalised method for this, convert them to the equivalent <code>PermutationGroup</code> and find the inverse for each element and then convert the pre-image set of the <code>PermutationGroup</code> to <code>FpGroup</code>?",
  "id": "5b3bc6183c5abf52b639138c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-03T18:53:12.088Z",
  "text": "If not, what could be the generalised method for this, convert them to the equivalent `PermutationGroup` and find the inverse for each element and then convert the pre-image set of the `PermutationGroup` to `FpGroup`?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Or, is there any other alternative? &#39;Coz this might take a lot of time. ",
  "id": "5b3bc64f3d8f71623d59a29b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-03T18:54:07.604Z",
  "text": "Or, is there any other alternative? 'Coz this might take a lot of time. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Sorry, I haven&#39;t checked properly, there is a method <code>invert_subgroup</code> already defined.",
  "id": "5b3bc7f460c38707835ab713",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-03T19:01:08.929Z",
  "text": "Sorry, I haven't checked properly, there is a method `invert_subgroup` already defined.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-04T06:00:13.654Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Considering the <code>subnormal_series</code> is currently implemented only for abelian groups, is it worth moving this to the <code>PermutationGroup</code>, similar to <code>derived_series</code>, or should I just leave it as an auxiliary method in the <code>FpGroup</code> class.",
  "id": "5b3c6256a99e1e52b7145ebe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-04T05:59:50.837Z",
  "text": "Considering the `subnormal_series` is currently implemented only for abelian groups, is it worth moving this to the `PermutationGroup`, similar to `derived_series`, or should I just leave it as an auxiliary method in the `FpGroup` class.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "If the implementation is essentially for <code>PermutationGroup</code>s, then it seems reasonable to add it to the <code>PermutationGroup</code> class.",
  "id": "5b3c878aa99e1e52b714bf97",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-04T08:38:34.311Z",
  "text": "If the implementation is essentially for `PermutationGroup`s, then it seems reasonable to add it to the `PermutationGroup` class.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Does the <code>random</code> method pick a random element from the <code>FpGroup</code>?",
  "id": "5b3c951033b0282df4fef740",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-04T09:36:16.629Z",
  "text": "Does the `random` method pick a random element from the `FpGroup`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I was thinking maybe this could be used in subnormal series computation instead of converting it to <code>PermutationGroup</code>",
  "id": "5b3c954133b0282df4fef774",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-04T09:37:05.293Z",
  "text": "I was thinking maybe this could be used in subnormal series computation instead of converting it to `PermutationGroup`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Also where does this computing the <code>H_i</code> series terminate?",
  "id": "5b3c9d6860c38707835c82ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-04T10:11:52.953Z",
  "text": "Also where does this computing the `H_i` series terminate?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "The groups are computed in increasing order starting from 0 (in an abelian group) and ending with the whole group.",
  "id": "5b3c9ebf3572e970c174ca9d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-04T10:17:35.416Z",
  "text": "The groups are computed in increasing order starting from 0 (in an abelian group) and ending with the whole group.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<code>random</code> picks a random element of length at most 3 - so it&#39;s actually not <em>very</em> random. But you could modify it to allow greater lengths if necessary.",
  "id": "5b3ca6f2a99e1e52b71509cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-04T10:52:34.792Z",
  "text": "`random` picks a random element of length at most 3 - so it's actually not _very_ random. But you could modify it to allow greater lengths if necessary.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>random picks a random element of length at most 3 </p></blockquote>\n<p>Since we want a smaller series and we can choose any random element, woudn&#39;t it be better to restrict the size? </p>",
  "id": "5b3cade63572e970c174f4d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-04T11:22:14.721Z",
  "text": "> random picks a random element of length at most 3 \n\nSince we want a smaller series and we can choose any random element, woudn't it be better to restrict the size? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>The groups are computed in increasing order starting from 0 (in an abelian group) and ending with the whole group. </p></blockquote>\n<p>If we start with the abelian group <code>Q_i</code> and find the quotient of this group with a group  generated by <code>e</code>(which is an element of <code>Q_k</code>), is it necessary to terminate it at the identity? &#39;Coz <span data-link-type=\"mention\" data-screen-name=\"valglad\" class=\"mention\">@valglad</span> mentioned that it could be terminated once a group of square free order is obtained.</p>",
  "id": "5b3cb08b7e23133ecb30beb3",
  "issues": [],
  "mentions": [
   {
    "screenName": "valglad",
    "userId": "5895bedcd73408ce4f480c49",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-04T11:33:31.493Z",
  "text": "> The groups are computed in increasing order starting from 0 (in an abelian group) and ending with the whole group. \n\nIf we start with the abelian group `Q_i` and find the quotient of this group with a group  generated by `e`(which is an element of `Q_k`), is it necessary to terminate it at the identity? 'Coz @valglad mentioned that it could be terminated once a group of square free order is obtained.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<blockquote>\n<p>&#39;Coz <span data-link-type=\"mention\" data-screen-name=\"valglad\" class=\"mention\">@valglad</span> mentioned that it could be terminated once a group of square free order is obtained.</p></blockquote>\n<p>The square-free condition on order doesn&#39;t actually give a cyclic group, you should use the condition with Euler&#39;s totient.</p><p>I think <span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> meant that the submormal series should start at the trivial group and finish at the whole group (or the other way around, depending on how you look at it), and you are asking something different. For what you are asking, yes, once you get to a group whose order is a cyclic number, you know it&#39;s cyclic so can stop.</p>",
  "id": "5b3cb33981816669a42f7730",
  "issues": [],
  "mentions": [
   {
    "screenName": "valglad",
    "userId": "5895bedcd73408ce4f480c49",
    "userIds": []
   },
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-04T11:44:57.492Z",
  "text": "> 'Coz @valglad mentioned that it could be terminated once a group of square free order is obtained.\n\nThe square-free condition on order doesn't actually give a cyclic group, you should use the condition with Euler's totient.\n\nI think @jksuom meant that the submormal series should start at the trivial group and finish at the whole group (or the other way around, depending on how you look at it), and you are asking something different. For what you are asking, yes, once you get to a group whose order is a cyclic number, you know it's cyclic so can stop.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<blockquote>\n<p>Since we want a smaller series and we can choose any random element, woudn&#39;t it be better to restrict the size? </p></blockquote>\n<p>I don&#39;t think there is much of a relation between element lengths and the length of a series</p>",
  "id": "5b3cb3ef9b82c6701ba18a72",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-04T11:47:59.027Z",
  "text": "> Since we want a smaller series and we can choose any random element, woudn't it be better to restrict the size? \n\nI don't think there is much of a relation between element lengths and the length of a series",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>For what you are asking, yes, once you get to a group whose order is a cyclic number, you know it&#39;s cyclic so can stop.</p></blockquote>\n<p>So, if the group <code>G_i/G_i+1</code> has an order which is a cyclic number, we don&#39;t need to compute the subnormal series, right? </p>",
  "id": "5b3cb4403c5abf52b63b1007",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-04T11:49:20.162Z",
  "text": "> For what you are asking, yes, once you get to a group whose order is a cyclic number, you know it's cyclic so can stop.\n\nSo, if the group `G_i/G_i+1` has an order which is a cyclic number, we don't need to compute the subnormal series, right? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Well yes, you are trying to find a subnormal series for <code>G</code> in which <code>G_i/G_(i+1)</code> is cyclic so if it already is, then nothing needs to be done.",
  "id": "5b3cb5137b811a6d63ceb4d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-04T11:52:51.174Z",
  "text": "Well yes, you are trying to find a subnormal series for `G` in which `G_i/G_(i+1)` is cyclic so if it already is, then nothing needs to be done.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Alright, thanks :+1:",
  "id": "5b3cb5417e23133ecb30cd6c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-04T11:53:37.612Z",
  "text": "Alright, thanks :+1:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Also, I could use the <code>random</code> method, right? I think that would be better than converting it to a <code>PermutationGroup</code>.",
  "id": "5b3cb73733b0282df4ff50d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-04T12:01:59.175Z",
  "text": "Also, I could use the `random` method, right? I think that would be better than converting it to a `PermutationGroup`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "It should work, you can always change it if it doesn&#39;t",
  "id": "5b3cbd5370efc60660ac6942",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-04T12:28:03.075Z",
  "text": "It should work, you can always change it if it doesn't",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "It is probably also possible to use the generators instead of arbitrary random elements.",
  "id": "5b3cc4bc33b0282df4ff74c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-04T12:59:40.403Z",
  "text": "It is probably also possible to use the generators instead of arbitrary random elements.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Oh yeah, that should work",
  "id": "5b3ccb657e23133ecb310eb7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-04T13:28:05.829Z",
  "text": "Oh yeah, that should work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"RavicharanN\" class=\"mention\">@RavicharanN</span> If I&#39;m not mistaken, you haven&#39;t written any new blog posts since the one about the automaton a month ago? The expectation is that GSoC students post something about their project every week. Could you try and write one weekly from now on? It&#39;ll probably be easiest to pick a particular day of the week and do it then but it&#39;s up to you. You could talk about what you are working on, how you&#39;re implementing it, what it could be used for, something new you learned while working on it - anything project-related and again, entirely up to you.",
  "id": "5b3d06de89db5e701ca1d27d",
  "issues": [],
  "mentions": [
   {
    "screenName": "RavicharanN",
    "userId": "5862b83dd73408ce4f3f9ce3",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-04T17:41:50.792Z",
  "text": "@RavicharanN If I'm not mistaken, you haven't written any new blog posts since the one about the automaton a month ago? The expectation is that GSoC students post something about their project every week. Could you try and write one weekly from now on? It'll probably be easiest to pick a particular day of the week and do it then but it's up to you. You could talk about what you are working on, how you're implementing it, what it could be used for, something new you learned while working on it - anything project-related and again, entirely up to you.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-04T18:56:11.480Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Yes, even I was thinking about updating the blog posts. I could write the blogs for all the PR I&#39;ve made till now and yes I can post one every Sunday from now on. ",
  "id": "5b3d18393572e970c17628da",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-04T18:55:53.463Z",
  "text": "Yes, even I was thinking about updating the blog posts. I could write the blogs for all the PR I've made till now and yes I can post one every Sunday from now on. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "And also, the planet sympy PR linking my blog&#39;s RSS hasn&#39;t been merged yet. Is it possible to take a look at it?",
  "id": "5b3d1ca481816669a43097fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-04T19:14:44.656Z",
  "text": "And also, the planet sympy PR linking my blog's RSS hasn't been merged yet. Is it possible to take a look at it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>I think somebody will be looking into that shortly, but I&#39;ll bring it up again if it doesn&#39;t start working soon.</p><p>A blog post for the PRs you&#39;ve submitted so far sounds like a good idea :+1: </p>",
  "id": "5b3d20d370efc60660ad655c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-04T19:32:35.102Z",
  "text": "I think somebody will be looking into that shortly, but I'll bring it up again if it doesn't start working soon.\n\nA blog post for the PRs you've submitted so far sounds like a good idea :+1: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Is it possible to compute the subgroup presentations under the same free group as that of the parent group?",
  "id": "5b3e0004f1664406611b8bdf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-05T11:24:52.753Z",
  "text": "Is it possible to compute the subgroup presentations under the same free group as that of the parent group?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "If the subgroup <code>H</code> is on k generators and the parent group <code>G</code> on n with <code>k&lt;=n</code>, you could define a presentation of <code>H</code> to have whatever relators <code>reidemeister_presentation</code> returns, but rewritten in terms of the first <code>k</code> generators of <code>G</code> plus all the remaining generators (essentially saying that they are identity and we ignore them)",
  "id": "5b3e05547b811a6d63d1bf5d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-05T11:47:32.884Z",
  "text": "If the subgroup `H` is on k generators and the parent group `G` on n with `k<=n`, you could define a presentation of `H` to have whatever relators `reidemeister_presentation` returns, but rewritten in terms of the first `k` generators of `G` plus all the remaining generators (essentially saying that they are identity and we ignore them)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "If you were more after a presentation where sending generators of <code>H</code> to the generators of <code>G</code> would actually give you an injective homomorphism, then that&#39;s harder. Theoretically, you could keep track of what elements of the original group the generators of <code>reidemeister_presentation(G, H)</code> correspond to - this will let you define an injective homomorphism from the presentation of <code>H</code> to the presentation of <code>G</code>. It doesn&#39;t give you a presentation of <code>H</code> on the same free group, but could work for what you need. What is it for?",
  "id": "5b3e06677b811a6d63d1c277",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-05T11:52:07.039Z",
  "text": "If you were more after a presentation where sending generators of `H` to the generators of `G` would actually give you an injective homomorphism, then that's harder. Theoretically, you could keep track of what elements of the original group the generators of `reidemeister_presentation(G, H)` correspond to - this will let you define an injective homomorphism from the presentation of `H` to the presentation of `G`. It doesn't give you a presentation of `H` on the same free group, but could work for what you need. What is it for?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p> What is it for?</p></blockquote>\n<p>So, derived series basically returns a subgroup as a list of <code>FreeGroupElements</code>. If this could be converted  an <code>FpGroup</code> with the free group as that of the parent group, everything would be simpler. Basically I need the quotient group to be defined on the same <code>FreeGroup</code>. </p>",
  "id": "5b3e0869a99e1e52b718439c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-05T12:00:41.082Z",
  "text": ">  What is it for?\n\nSo, derived series basically returns a subgroup as a list of `FreeGroupElements`. If this could be converted  an `FpGroup` with the free group as that of the parent group, everything would be simpler. Basically I need the quotient group to be defined on the same `FreeGroup`. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Everything else would be simpler if the derived_series is converted to a list of <code>FpGroups</code> objects. This could be useful in computing the presentation and the polycyclic generating sequence too.",
  "id": "5b3e08c363042f2df358686f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-05T12:02:11.084Z",
  "text": "Everything else would be simpler if the derived_series is converted to a list of `FpGroups` objects. This could be useful in computing the presentation and the polycyclic generating sequence too.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<blockquote>\n<p>Basically I need the quotient group to be defined on the same FreeGroup. </p></blockquote>\n<p>Just knowing the generators of <code>H</code> is enough to define <code>G/H</code> - you just add the generators to the list of relators of <code>G</code> and that&#39;s your quotient group</p>",
  "id": "5b3e18a63c5abf52b63e2c22",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-05T13:09:58.277Z",
  "text": "> Basically I need the quotient group to be defined on the same FreeGroup. \n\nJust knowing the generators of `H` is enough to define `G/H` - you just add the generators to the list of relators of `G` and that's your quotient group",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-05T13:10:46.727Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Do you know what&#39;s causing the test failure in the automaton PR?",
  "id": "5b3e18c981816669a432c57b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-05T13:10:33.445Z",
  "text": "Do you know what's causing the test failure in the automaton PR?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I&#39;m looking into it. It&#39;s weird that initially the tests pass locally and then they fail when I run it for the second time. It showed up after the latest commit.",
  "id": "5b3e2b56f1664406611c0b6a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-05T14:29:42.099Z",
  "text": "I'm looking into it. It's weird that initially the tests pass locally and then they fail when I run it for the second time. It showed up after the latest commit.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\nJust knowing the generators of H is enough to define G/H - you just add the generators to the list of relators of G and that&#39;s your quotient Group.</blockquote>\n",
  "id": "5b3e2bd8f1664406611c0ce3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-05T14:31:52.734Z",
  "text": "> Just knowing the generators of H is enough to define G/H - you just add the generators to the list of relators of G and that's your quotient Group.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Yes, but it would be a problem when both <code>G</code> and <code>H</code> are lists",
  "id": "5b3e2c009b82c6701ba4f84d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-05T14:32:32.856Z",
  "text": "Yes, but it would be a problem when both `G` and `H` are lists",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I see, okay... I don&#39;t immediately see a better solution than running <code>reidemeister_presentation</code> on given subgroup generators, keeping track of the correspondence between the new presentation and the original group, then using that to define the quotient.",
  "id": "5b3e3f2e7e23133ecb346668",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-05T15:54:22.869Z",
  "text": "I see, okay... I don't immediately see a better solution than running `reidemeister_presentation` on given subgroup generators, keeping track of the correspondence between the new presentation and the original group, then using that to define the quotient.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I&#39;ll try doing that :+1:",
  "id": "5b3e43cf81816669a4335016",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-05T16:14:07.867Z",
  "text": "I'll try doing that :+1:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>Do you know what&#39;s causing the test failure in the automaton PR? </p></blockquote>\n<p>Tests do not fail all the time locally, does this mean that it is getting converted into some other equivalent forms? They are consistent for Python3 the problem is with Python2</p>",
  "id": "5b3e60ff70efc60660b03c28",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-05T18:18:39.799Z",
  "text": "> Do you know what's causing the test failure in the automaton PR? \n\nTests do not fail all the time locally, does this mean that it is getting converted into some other equivalent forms? They are consistent for Python3 the problem is with Python2",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Adding the accept states after all the dead states are added seemed to do the trick. There might have been an overlap in that case with the assertion error. I guess it&#39;s fixed now. ",
  "id": "5b3e71e23d8f71623d5fbe33",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-05T19:30:42.839Z",
  "text": "Adding the accept states after all the dead states are added seemed to do the trick. There might have been an overlap in that case with the assertion error. I guess it's fixed now. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-06T10:28:40.101Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p> I don&#39;t immediately see a better solution than running reidemeister_presentation on given subgroup generators. </p></blockquote>\n<p>Could we define a homomorphism and find the images of the generators and the relators in the parent group  and then construct an <code>FpGroup</code> based on those images of generators and relators? Is it the right way to do it?</p>",
  "id": "5b3f443c9b82c6701ba7538c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-06T10:28:12.666Z",
  "text": ">  I don't immediately see a better solution than running reidemeister_presentation on given subgroup generators. \n\nCould we define a homomorphism and find the images of the generators and the relators in the parent group  and then construct an `FpGroup` based on those images of generators and relators? Is it the right way to do it?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<blockquote>\n<p>Adding the accept states after all the dead states are added seemed to do the trick. There might have been an overlap in that case with the assertion error. I guess it&#39;s fixed now.</p></blockquote>\n<p>This doesn&#39;t sound very convincing. If we don&#39;t know for a fact why the error occurred, it might still be there - it could just manisfest itself in a different form some time later.</p>",
  "id": "5b4095423d8f71623d63f6bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-07T10:26:10.289Z",
  "text": "> Adding the accept states after all the dead states are added seemed to do the trick. There might have been an overlap in that case with the assertion error. I guess it's fixed now.\n\nThis doesn't sound very convincing. If we don't know for a fact why the error occurred, it might still be there - it could just manisfest itself in a different form some time later.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<blockquote>\n<p>Could we define a homomorphism and find the images of the generators and the relators in the parent group and then construct an FpGroup based on those images of generators and relators? Is it the right way to do it?</p></blockquote>\n<p>You&#39;ll probably need to define a homomorphism from the subgroup presentation into the parent group anyway (this would be done by keeping track of what the generators returned by <code>reidemeister_presentation</code> correspond to - I think being able to get hold of an injection to the parent group will generally be a useful feature). But in general, the images of your generators will be words of length more than one, and you can&#39;t use them as generators. And if you used the generators of the parent group, then I&#39;m not sure what the relators should be - just throwing in the images of the subgroup relators isn&#39;t enough. But even if we worked the relators, you&#39;d need to run <code>reidemeister_presentation</code> either way so you wouldn&#39;t gain much efficiency.</p>",
  "id": "5b40985263042f2df35dd9a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-07T10:39:14.870Z",
  "text": "> Could we define a homomorphism and find the images of the generators and the relators in the parent group and then construct an FpGroup based on those images of generators and relators? Is it the right way to do it?\n\nYou'll probably need to define a homomorphism from the subgroup presentation into the parent group anyway (this would be done by keeping track of what the generators returned by `reidemeister_presentation` correspond to - I think being able to get hold of an injection to the parent group will generally be a useful feature). But in general, the images of your generators will be words of length more than one, and you can't use them as generators. And if you used the generators of the parent group, then I'm not sure what the relators should be - just throwing in the images of the subgroup relators isn't enough. But even if we worked the relators, you'd need to run `reidemeister_presentation` either way so you wouldn't gain much efficiency.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-07T11:13:01.307Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>But in general, the images of your generators will be words of length more than one, and you can&#39;t use them as generators. </p></blockquote>\n<p>Is there an alternative to compute the quotients in the case  when both the elements (<code>G_i</code> and <code>G_i+1</code>) are lists?</p>",
  "id": "5b409fdd60c3870783655428",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-07T11:11:25.062Z",
  "text": "> But in general, the images of your generators will be words of length more than one, and you can't use them as generators. \n\nIs there an alternative to compute the quotients in the case  when both the elements (`G_i` and `G_i+1`) are lists?",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Because computation of generating sequence and the relative orders depend mainly on the polycycylic series. So,  that should be computed ",
  "id": "5b40a0267b811a6d63d75718",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-07T11:12:38.660Z",
  "text": "Because computation of generating sequence and the relative orders depend mainly on the polycycylic series. So,  that should be computed ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-07T11:13:41.722Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "An altenative to using homomoprhisms and <code>reidemeister_presentation</code>? As I&#39;ve said, I don&#39;t immediately see another way. Whatever approach you take, you&#39;ll have to use both one way or another",
  "id": "5b40a0533572e970c17d8eed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-07T11:13:23.417Z",
  "text": "An altenative to using homomoprhisms and `reidemeister_presentation`? As I've said, I don't immediately see another way. Whatever approach you take, you'll have to use both one way or another",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>An altenative to using homomoprhisms and reidemeister_presentation? </p></blockquote>\n<p>Alternative to compute the quotients. </p>",
  "id": "5b40a07d89db5e701ca94c2d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-07T11:14:05.571Z",
  "text": "> An altenative to using homomoprhisms and reidemeister_presentation? \n\nAlternative to compute the quotients. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "You could in some cases compute the orders <code>n_i</code> and <code>n_(i+1)</code> of <code>G_i</code> and <code>G_(i+1)</code> and check if <code>n_i/n_(i+1)</code> is a cyclic number - if it is, you don&#39;t need to compute the quotient but for all other cases I don&#39;t think you can avoid it",
  "id": "5b40a10481816669a4380b2a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-07T11:16:20.672Z",
  "text": "You could in some cases compute the orders `n_i` and `n_(i+1)` of `G_i` and `G_(i+1)` and check if `n_i/n_(i+1)` is a cyclic number - if it is, you don't need to compute the quotient but for all other cases I don't think you can avoid it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-07T11:20:15.234Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I think there may be a miscommunication going on. I&#39;ve been interpreting your question as &#39;is there an alternative to computing the quotients&#39; which means &#39;can we do something not involving computing the quotients&#39;; but are you actually asking &#39;is there an alternative way to compute the quotients&#39; meaning &#39;is there a different way&#39;?",
  "id": "5b40a1cfbd92d807829b65c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-07T11:19:43.591Z",
  "text": "I think there may be a miscommunication going on. I've been interpreting your question as 'is there an alternative to computing the quotients' which means 'can we do something not involving computing the quotients'; but are you actually asking 'is there an alternative way to compute the quotients' meaning 'is there a different way'?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Yeah, is there a different way to compute the quotients when both are <code>G</code> and <code>H</code> are lists? ",
  "id": "5b40a3367b811a6d63d75c2e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-07T11:25:42.302Z",
  "text": "Yeah, is there a different way to compute the quotients when both are `G` and `H` are lists? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I don&#39;t think so. You have to at least find the presentation of <code>G</code> using <code>reidemeister_presentation</code> and you just use the homomorphism you defined to translate the generators of <code>H</code> (given to you in the list) into elements of the presentation of <code>G</code> and add those to the relators to get the quotient",
  "id": "5b40a3ba33b0282df407c9a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-07T11:27:54.019Z",
  "text": "I don't think so. You have to at least find the presentation of `G` using `reidemeister_presentation` and you just use the homomorphism you defined to translate the generators of `H` (given to you in the list) into elements of the presentation of `G` and add those to the relators to get the quotient",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-07T11:32:29.846Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "But as you said, if we get images of generators of word length greater than 1, we cannot use them as the gens of <code>FpGroup</code>. So, how would this be useful? ",
  "id": "5b40a46f7e23133ecb393977",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-07T11:30:55.064Z",
  "text": "But as you said, if we get images of generators of word length greater than 1, we cannot use them as the gens of `FpGroup`. So, how would this be useful? ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-07-07T11:35:43.921Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "But you wouldn&#39;t be defining a new <code>FpGroup</code> using those images. <code>reidemeister_presentation</code> will give you an <code>FpGroup</code>, let&#39;s call it <code>_G</code>, on different generators from the parent group - you&#39;ll need to get hold of a homomorphism from this to the parent group, use it to translate the generators of <code>H</code> - which are elements of the parent group, of any length, - to elements of <code>_G</code>. And if you add these images to the relators of <code>_G</code> - and relators can be of any length so that&#39;s fine , - then you&#39;ll get a presentation of <code>G/H</code>",
  "id": "5b40a5839b82c6701baa156c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-07T11:35:31.200Z",
  "text": "But you wouldn't be defining a new `FpGroup` using those images. `reidemeister_presentation` will give you an `FpGroup`, let's call it `_G`, on different generators from the parent group - you'll need to get hold of a homomorphism from this to the parent group, use it to translate the generators of `H` - which are elements of the parent group, of any length, - to elements of `_G`. And if you add these images to the relators of `_G` - and relators can be of any length so that's fine , - then you'll get a presentation of `G/H`",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Alright makes senes :+1: ",
  "id": "5b40a7d763042f2df35df2c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-07T11:45:27.048Z",
  "text": "Alright makes senes :+1: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I&#39;ve pushed a PR <span data-link-type=\"issue\" data-issue=\"14879\" class=\"issue\">#14879</span> with the elementary methods for polycyclic series computation, it hasn&#39;t been finished yet. I&#39;ll push the changes once this is done.",
  "id": "5b40aa6b7b811a6d63d76861",
  "issues": [
   {
    "number": "14879"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-07T11:56:27.195Z",
  "text": "I've pushed a PR #14879 with the elementary methods for polycyclic series computation, it hasn't been finished yet. I'll push the changes once this is done.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Thank you, I&#39;ll have a look at some point",
  "id": "5b40aa9481816669a4381fa5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-07T11:57:08.265Z",
  "text": "Thank you, I'll have a look at some point",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-07T14:47:46.742Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "When all the generators of the <code>FreeGroup</code> are added as the relators to the corresponding <code>FpGroup</code>(defined on the same free_group), the order computation returns an error &quot;Index out of range&quot;, shouldn&#39;t that be 1?",
  "id": "5b40d27c81816669a43860ff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-07T14:47:24.508Z",
  "text": "When all the generators of the `FreeGroup` are added as the relators to the corresponding `FpGroup`(defined on the same free_group), the order computation returns an error \"Index out of range\", shouldn't that be 1?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Sounds like a bug but I suspect it shouldn&#39;t be hard to fix.",
  "id": "5b40d4133d8f71623d64644f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-07T14:54:11.698Z",
  "text": "Sounds like a bug but I suspect it shouldn't be hard to fix.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>When all the generators of the <code>FreeGroup</code> are added as the relators to the corresponding <code>FpGroup</code>(defined on the same free_group), the order computation returns an error &quot;Index out of range&quot;, shouldn&#39;t that be 1? </p></blockquote>\n<p>Is it worth adding this as a special case, as a few other are also defined in the <code>order</code> method to avoid computation. Return 1 when the relators contain all the generators of the <code>FreeGroup</code> on which <code>FpGroup</code> is defined.</p>",
  "id": "5b41159989db5e701caa2367",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-07T19:33:45.636Z",
  "text": "> When all the generators of the `FreeGroup` are added as the relators to the corresponding `FpGroup`(defined on the same free_group), the order computation returns an error \"Index out of range\", shouldn't that be 1? \n\nIs it worth adding this as a special case, as a few other are also defined in the `order` method to avoid computation. Return 1 when the relators contain all the generators of the `FreeGroup` on which `FpGroup` is defined.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "It&#39;s a pretty minor fix so is it fine if I just push it with along with the polycyclic series? ",
  "id": "5b41a17e7b811a6d63d8d559",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-08T05:30:38.451Z",
  "text": "It's a pretty minor fix so is it fine if I just push it with along with the polycyclic series? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Also, I&#39;ve updated the blog, one post for each PR so far, I would be updating it every week from now on. ",
  "id": "5b41a1ba3572e970c17f1d3e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-08T05:31:38.360Z",
  "text": "Also, I've updated the blog, one post for each PR so far, I would be updating it every week from now on. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<blockquote>\n<p> Is it worth adding this as a special case, as a few other are also defined in the order method to avoid computation. Return 1 when the relators contain all the generators of the FreeGroup on which FpGroup is defined.</p></blockquote>\n<p>Possibly, but the issue could still arise with groups like <code>FpGroup(free_group(&quot;a b&quot;)[0], [a*b**2, b**2, a*b])</code>. I think the problem is probably with what <code>reidemeister_presentation</code> does when it eliminates all generators because they are redundant. And if that&#39;s the case, it would be a more general solution to fix it at the end of that function by checking if the generator list is empty.</p>",
  "id": "5b41db41bd92d807829d45cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-08T09:37:05.557Z",
  "text": ">  Is it worth adding this as a special case, as a few other are also defined in the order method to avoid computation. Return 1 when the relators contain all the generators of the FreeGroup on which FpGroup is defined.\n\nPossibly, but the issue could still arise with groups like `FpGroup(free_group(\"a b\")[0], [a*b**2, b**2, a*b])`. I think the problem is probably with what `reidemeister_presentation` does when it eliminates all generators because they are redundant. And if that's the case, it would be a more general solution to fix it at the end of that function by checking if the generator list is empty.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Yeah, I&#39;ve done. The traceback shows that the error pops up in the <code>simplify_presenation</code> method, when an empty generator list is passed to it from <code>reidemeister_presentation</code>. That is fixed now. ",
  "id": "5b41e27ba99e1e52b71fa505",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-08T10:07:55.828Z",
  "text": "Yeah, I've done. The traceback shows that the error pops up in the `simplify_presenation` method, when an empty generator list is passed to it from `reidemeister_presentation`. That is fixed now. \n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-08T10:09:39.354Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "What I meant was, can we add this as a special case too? Like the conditions with <code>len(rel) == 0</code> or <code>len(gen) == 1</code>. Just to avoid computation.",
  "id": "5b41e2cc33b0282df4099769",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-08T10:09:16.862Z",
  "text": "What I meant was, can we add this as a special case too? Like the conditions with `len(rel) == 0` or `len(gen) == 1`. Just to avoid computation.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Possibly. I guess checking if generators are in the relator list is much faster than simplifying the presentation so that would make sense",
  "id": "5b41f7c3a99e1e52b71fc72e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-08T11:38:43.677Z",
  "text": "Possibly. I guess checking if generators are in the relator list is much faster than simplifying the presentation so that would make sense",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>(this would be done by keeping track of what the generators returned by reidemeister_presentation correspond to - I think being able to get hold of an injection to the parent group will generally be a useful feature) </p></blockquote>\n<p>Could you please, elaborate on this part? Getting hold of an injective map from the subgroup to a group.</p>",
  "id": "5b421aeff1664406612353ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-08T14:08:47.243Z",
  "text": "> (this would be done by keeping track of what the generators returned by reidemeister_presentation correspond to - I think being able to get hold of an injection to the parent group will generally be a useful feature) \n\nCould you please, elaborate on this part? Getting hold of an injective map from the subgroup to a group.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Also, since no bug is reported on the <code>order</code> method error. Is it fine if I just include the changes in this polycyclic PR?",
  "id": "5b421b3270efc60660b6bb1c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-08T14:09:54.993Z",
  "text": "Also, since no bug is reported on the `order` method error. Is it fine if I just include the changes in this polycyclic PR?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I think it would be fine to do it in the PR",
  "id": "5b4220187b811a6d63d9a5e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-08T14:30:48.305Z",
  "text": "I think it would be fine to do it in the PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "As for the injective map, you&#39;ll really have to go into functions <code>reidemeister_presentation</code> calls and see how the generators (schreier generators - there should be information on them in the Handbook) it defines relate to the generators that were specified in the list representation.",
  "id": "5b4220983572e970c17fec5b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-08T14:32:56.904Z",
  "text": "As for the injective map, you'll really have to go into functions `reidemeister_presentation` calls and see how the generators (schreier generators - there should be information on them in the Handbook) it defines relate to the generators that were specified in the list representation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Modified coset enumeration can be used to get a presentation in which the generators of the free group sent to the original generator list already give the right homomorphism, but you&#39;ll need to write a function to do that first, once modified coset enumeration is merged. (This should be done at some point after the merge because it&#39;s a nice feature, but not necessarily as part of your project.)",
  "id": "5b422173f166440661235e3d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-08T14:36:35.782Z",
  "text": "Modified coset enumeration can be used to get a presentation in which the generators of the free group sent to the original generator list already give the right homomorphism, but you'll need to write a function to do that first, once modified coset enumeration is merged. (This should be done at some point after the merge because it's a nice feature, but not necessarily as part of your project.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-10T06:11:17.366Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<code>dervied_series</code> returns the generators of the subgroup. So,  we can directly call <code>subgroup</code> on the list of gens and we get a presentation with gens, lets say,  <code>x1,x2</code>. Can&#39;t we just directly define a homomorphism since we know what the new generators correspond to? ",
  "id": "5b444df470efc60660bb4703",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-10T06:11:00.643Z",
  "text": "`dervied_series` returns the generators of the subgroup. So,  we can directly call `subgroup` on the list of gens and we get a presentation with gens, lets say,  `x1,x2`. Can't we just directly define a homomorphism since we know what the new generators correspond to? ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Do we know what the generators are? They are not the same as those returned by <code>derived_series</code> in general - they would be if we were finding presentation with modified coset enumeration but that&#39;s not implemented yet",
  "id": "5b44748c7e23133ecb4083dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-10T08:55:40.980Z",
  "text": "Do we know what the generators are? They are not the same as those returned by `derived_series` in general - they would be if we were finding presentation with modified coset enumeration but that's not implemented yet",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>They are not the same as those returned</p></blockquote>\n<p>I&#39;m kinda stuck here with fining the elements that these generators are mapped  to. I&#39;ve written the methods for <code>relativae_orders</code> and few elementary methods but they can&#39;t be tested as they depend on the polycyclic series.</p>",
  "id": "5b44816d9b82c6701bb14c4c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-10T09:50:37.710Z",
  "text": "> They are not the same as those returned\n\nI'm kinda stuck here with fining the elements that these generators are mapped  to. I've written the methods for `relativae_orders` and few elementary methods but they can't be tested as they depend on the polycyclic series.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-10T12:10:05.442Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Have you tried looking at how Schreier generators are defined in <code>reidemeister_presentation</code> in the Handbook? (I don&#39;t have it nearby at the moment so can&#39;t look myself). You&#39;ll have to find these elements from inside <code>reimeister_presentation</code> and its related methods and pass it on from there - there is no way to do it from the outside (at least before we have a function that computes a presentation on the given generators).",
  "id": "5b44a1e93d8f71623d6bafaf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-10T12:09:13.746Z",
  "text": "Have you tried looking at how Schreier generators are defined in `reidemeister_presentation` in the Handbook? (I don't have it nearby at the moment so can't look myself). You'll have to find these elements from inside `reimeister_presentation` and its related methods and pass it on from there - there is no way to do it from the outside (at least before we have a function that computes a presentation on the given generators).",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Computing the homomorphism takes a lot of time. Can we just replace the relators? ",
  "id": "5b45e19c33b0282df412cc2b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T10:53:16.449Z",
  "text": "Computing the homomorphism takes a lot of time. Can we just replace the relators? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I mean if <code>x1 = x**3</code> and <code>y2 = y**2</code>  are the generators of the subgroup, and the relators are <code>[x1**2*y1, y1**2]</code>. Can we just replace the <code>x1, y1</code> in the relators with <code>x**3, y**2</code>.",
  "id": "5b45e23c81816669a4430449",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T10:55:56.927Z",
  "text": "I mean if `x1 = x**3` and `y2 = y**2`  are the generators of the subgroup, and the relators are `[x1**2*y1, y1**2]`. Can we just replace the `x1, y1` in the relators with `x**3, y**2`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Oh yeah, you don&#39;t need to actually compute the homomorphism is if takes ages, we only care about where the generators are sent (though I don&#39;t see why it would take a lot of time if you had <code>check=False</code>...)",
  "id": "5b45e7f53d8f71623d6f239d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T11:20:21.597Z",
  "text": "Oh yeah, you don't need to actually compute the homomorphism is if takes ages, we only care about where the generators are sent (though I don't see why it would take a lot of time if you had `check=False`...)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "And the coset representative doesn&#39;t return the actual word? ",
  "id": "5b45e8623c5abf52b64e69fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T11:22:10.968Z",
  "text": "And the coset representative doesn't return the actual word? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "What do you mean?",
  "id": "5b45e88f70efc60660bf737a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T11:22:55.086Z",
  "text": "What do you mean?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-11T11:28:47.732Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "The coset representative for <code>alpha in  omega</code> returns an element in <code>omega</code>. But the in the handbook, the coset representative of <code>alpha</code>( <code>tau(alpha)</code>),  is taken as an instance of a <code>FreeGroupElement</code>",
  "id": "5b45e96170efc60660bf75d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T11:26:25.038Z",
  "text": "The coset representative for `alpha in  omega` returns an element in `omega`. But the in the handbook, the coset representative of `alpha`( `tau(alpha)`),  is taken as an instance of a `FreeGroupElement`",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "editedAt": "2018-07-11T11:28:14.762Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "",
  "id": "5b45e9940a17e01fccd76ba9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T11:27:16.955Z",
  "text": "",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I don&#39;t think it make sense to return an element of <code>omega</code> for something that claims to be a coset representative. Are you sure you are looking at the right thing?",
  "id": "5b45ebc10a17e01fccd77530",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T11:36:33.575Z",
  "text": "I don't think it make sense to return an element of `omega` for something that claims to be a coset representative. Are you sure you are looking at the right thing?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<pre><code>&gt;&gt;&gt; F, x, y = free_group(<span class=\"string\">\"x, y\"</span>)\n&gt;&gt;&gt; f = FpGroup(F, [x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>3, y<span class=\"keyword\">*</span><span class=\"keyword\">*</span>5, (x<span class=\"keyword\">*</span>y)<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2])\n&gt;&gt;&gt; H = [x<span class=\"keyword\">*</span>y, x<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>y<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x<span class=\"keyword\">*</span>y<span class=\"keyword\">*</span>x]\n&gt;&gt;&gt; C = coset_enumeration_r(f, H)\n&gt;&gt;&gt; print(C.rep(4))\n3</code></pre>",
  "id": "5b45edc99b82c6701bb512b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T11:45:13.935Z",
  "text": "```\n>>> F, x, y = free_group(\"x, y\")\n>>> f = FpGroup(F, [x**3, y**5, (x*y)**2])\n>>> H = [x*y, x**-1*y**-1*x*y*x]\n>>> C = coset_enumeration_r(f, H)\n>>> print(C.rep(4))\n3\n```\n\n\n\n\n\n\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<code>rep</code> isn&#39;t a coset representative. During the computation, some defined cosets are actually the same and <code>rep</code> returns a representative of this class of repeated cosets, which is of course, another coset - the Handbook explains this in 5.1.1",
  "id": "5b45efd670efc60660bf8b52",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T11:53:58.659Z",
  "text": "`rep` isn't a coset representative. During the computation, some defined cosets are actually the same and `rep` returns a representative of this class of repeated cosets, which is of course, another coset - the Handbook explains this in 5.1.1",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Yes, I&#39;ve just seen that ",
  "id": "5b45efef3572e970c188b5ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T11:54:23.885Z",
  "text": "Yes, I've just seen that ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Are there methods defined to compute coset representatives? ",
  "id": "5b45efff3c5abf52b64e7fc4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T11:54:39.084Z",
  "text": "Are there methods defined to compute coset representatives? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-11T12:10:28.494Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Not as far as I know, but you should be able to work it out from the coset table. Essentially, you need to find a path from the row 1 to row <code>alpha</code> via the generators. E.g. if your two generators are <code>a, b</code> and <code>C[1][a] = 2</code>, <code>C[2][b**-1] = 4</code>, <code>C[4][a] = alpha</code>, then a coset representative of <code>alpha</code> is <code>a*b**-1*a</code>.",
  "id": "5b45f3800a17e01fccd78c13",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T12:09:36.776Z",
  "text": "Not as far as I know, but you should be able to work it out from the coset table. Essentially, you need to find a path from the row 1 to row `alpha` via the generators. E.g. if your two generators are `a, b` and `C[1][a] = 2`, `C[2][b**-1] = 4`, `C[4][a] = alpha`, then a coset representative of `alpha` is `a*b**-1*a`.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Alright. Thank you :+1: ",
  "id": "5b45f4eff1664406612c468d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T12:15:43.314Z",
  "text": "Alright. Thank you :+1: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Also, getting the modified coset enumeration PR finished would be good",
  "id": "5b45f53381816669a4434253",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T12:16:51.426Z",
  "text": "Also, getting the modified coset enumeration PR finished would be good",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Yeah sure, I&#39;ll think push the changes suggested by tonight.",
  "id": "5b45f55c63042f2df3695752",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-11T12:17:32.268Z",
  "text": "Yeah sure, I'll think push the changes suggested by tonight.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>Not as far as I know, but you should be able to work it out from the coset table. Essentially, you need to find a path from the row 1 to row <code>alpha</code> via the generators. E.g. if your two generators are <code>a, b</code> and <code>C[1][a] = 2</code>, <code>C[2][b**-1] = 4</code>, <code>C[4][a] = alpha</code>, then a coset representative of <code>alpha</code> is <code>a*b**-1*a</code>. </p></blockquote>\n<p>Is there any additional condition to this?</p>",
  "id": "5b4b222d582aaa63076c45a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-15T10:30:05.564Z",
  "text": "> Not as far as I know, but you should be able to work it out from the coset table. Essentially, you need to find a path from the row 1 to row `alpha` via the generators. E.g. if your two generators are `a, b` and `C[1][a] = 2`, `C[2][b**-1] = 4`, `C[4][a] = alpha`, then a coset representative of `alpha` is `a*b**-1*a`. \n\nIs there any additional condition to this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "what if multiple paths of same length exist?",
  "id": "5b4b223d1c0f906b14556b9b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-15T10:30:21.267Z",
  "text": "what if multiple paths of same length exist?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Then you have multiple representatives of the same length - I would expect this to happen in general. But if any representative will do, then any path will do. I would go with starting in row <code>alpha</code> and backtracing using some rule. For example, every row contains a coset number smaller than itself, so you could go to the first smaller number and so on until you arrive at 1. This might not be the shortest path, but it does give you a representative.",
  "id": "5b4b3bb0866e0c6b15aab368",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-15T12:18:56.551Z",
  "text": "Then you have multiple representatives of the same length - I would expect this to happen in general. But if any representative will do, then any path will do. I would go with starting in row `alpha` and backtracing using some rule. For example, every row contains a coset number smaller than itself, so you could go to the first smaller number and so on until you arrive at 1. This might not be the shortest path, but it does give you a representative.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-15T12:20:35.440Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Can we take any random representative ?",
  "id": "5b4b3c061c0f906b1455dfb4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-15T12:20:22.269Z",
  "text": "Can we take any random representative ?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Depends. I don&#39;t know what you need them for.",
  "id": "5b4b3c1a6534bc5d2e5d8b24",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-15T12:20:42.662Z",
  "text": "Depends. I don't know what you need them for.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>Can we take any random representative ?</p></blockquote>\n<p>&#39;Coz the generators are defined as <code>c_rep(alpha)*x = gen*c_rep(alpha**x)</code></p>",
  "id": "5b4b3c64866e0c6b15aab5fd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-15T12:21:56.535Z",
  "text": "> Can we take any random representative ?\n\n'Coz the generators are defined as `c_rep(alpha)*x = gen*c_rep(alpha**x)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "I see. No, in that case you have to use the specific representatives that are used in the definition, but there should be a way of working them out from the algorithm. I could have a look at some point if you are really stuck on this but do try to figure it out yourself first",
  "id": "5b4b3d5e1c0f906b1455e64a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-15T12:26:06.312Z",
  "text": "I see. No, in that case you have to use the specific representatives that are used in the definition, but there should be a way of working them out from the algorithm. I could have a look at some point if you are really stuck on this but do try to figure it out yourself first",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-15T12:32:47.505Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I can design a backtracking algorithm once the definition is clear. It isn&#39;t metntioned anywhere, but in an example in the Handbook the representatives are computed in such a way that the traversal is always done in the increasing order of the cosets. For example if <code>tau(5)</code> can be written as <code>tau(2)*x</code> and <code>tau(3)*x</code>, then <code>tau(2)*x</code> is given the preference. ",
  "id": "5b4b3e8995e03e3d7b4d93b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-15T12:31:05.403Z",
  "text": "I can design a backtracking algorithm once the definition is clear. It isn't metntioned anywhere, but in an example in the Handbook the representatives are computed in such a way that the traversal is always done in the increasing order of the cosets. For example if `tau(5)` can be written as `tau(2)*x` and `tau(3)*x`, then `tau(2)*x` is given the preference. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Just wanted to be sure if this was the right way to do it",
  "id": "5b4b3ea895e03e3d7b4d94d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-15T12:31:36.069Z",
  "text": "Just wanted to be sure if this was the right way to do it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "That seems sensible. I would assume that&#39;s how SymPy&#39;s implementation works as well (I&#39;m not very familiar with it), but you&#39;ll also need a rule for what to do if <code>tau(5)</code> can be written as <code>tau(2)*x</code> and <code>tau(2)*y</code> and more generally <code>tau(2)*x</code> and <code>tau(3)*y</code>. You could just pick one rule to follow, but you&#39;ll need to make sure that the resultant transversal is the same as what&#39;s used for schreier generators in SymPy.",
  "id": "5b4b531b1c0f906b14564ae7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-15T13:58:51.992Z",
  "text": "That seems sensible. I would assume that's how SymPy's implementation works as well (I'm not very familiar with it), but you'll also need a rule for what to do if `tau(5)` can be written as `tau(2)*x` and `tau(2)*y` and more generally `tau(2)*x` and `tau(3)*y`. You could just pick one rule to follow, but you'll need to make sure that the resultant transversal is the same as what's used for schreier generators in SymPy.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-18T05:29:38.522Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Since the <code>__init__</code> method only takes polycyclic series as an argument, is it possible to check if the presentation is consistent? Or should the power exponents be specified by the user?  If user specifies the power exponents, we can simply say that the presentation is consistent if power exponents is equal to the relative orders. ",
  "id": "5b4ed02e03a5fa639e62ac11",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-18T05:29:18.562Z",
  "text": "Since the `__init__` method only takes polycyclic series as an argument, is it possible to check if the presentation is consistent? Or should the power exponents be specified by the user?  If user specifies the power exponents, we can simply say that the presentation is consistent if power exponents is equal to the relative orders. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<p>I think that letting the user specify power exponents to define a polycyclic presentation would be a nice feature - it&#39;d be quicker than building one from an <code>FpGroup</code> so preferable to someone who already knows what the presentation should be.</p><p>As for when you do start with an <code>FpGroup</code> and your only argument is a polycyclic series, you should be able to write down the presentation from that choosing the exponents to be the same as relative orders - then it will be consistent by definition</p>",
  "id": "5b4f12bb4b583a74a7256869",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-18T10:13:15.726Z",
  "text": "I think that letting the user specify power exponents to define a polycyclic presentation would be a nice feature - it'd be quicker than building one from an `FpGroup` so preferable to someone who already knows what the presentation should be.\n\nAs for when you do start with an `FpGroup` and your only argument is a polycyclic series, you should be able to write down the presentation from that choosing the exponents to be the same as relative orders - then it will be consistent by definition",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Alright :+1: ",
  "id": "5b4f25cfcad358639d62606b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-18T11:34:39.823Z",
  "text": "Alright :+1: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Also, while computing the presentation I have a doubt on the notation mentioned in the GAP manual. ",
  "id": "5b4f262c623cc3040b2c0827",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-18T11:36:12.333Z",
  "text": "Also, while computing the presentation I have a doubt on the notation mentioned in the GAP manual. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "What interger would e(i,j,i+1), f(i,j,i+1) and l(i,i+1)specified <a href=\"https://www.gap-system.org/Manuals/pkg/polycyclic-2.10.1/doc/chap2.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a>",
  "id": "5b4f28f903a5fa639e63a718",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-18T11:48:09.139Z",
  "text": "What interger would e(i,j,i+1), f(i,j,i+1) and l(i,i+1)specified [here](https://www.gap-system.org/Manuals/pkg/polycyclic-2.10.1/doc/chap2.html)",
  "unread": false,
  "urls": [
   {
    "url": "https://www.gap-system.org/Manuals/pkg/polycyclic-2.10.1/doc/chap2.html"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2018-07-18T12:16:13.738Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "They are related to the statement <code>Each element of G can be written uniquely as g_1^e_1\u22ef g_n^e_n</code>, so all of them are simply these exponents <code>e_i</code>, the different notation being used to differentiate between the ones for different words",
  "id": "5b4f2f8203a5fa639e63bf61",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-18T12:16:02.760Z",
  "text": "They are related to the statement `Each element of G can be written uniquely as g_1^e_1\u22ef g_n^e_n`, so all of them are simply these exponents `e_i`, the different notation being used to differentiate between the ones for different words",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-07-18T12:17:51.178Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 20
  },
  "html": "Those are the exponents that appear in the unique representations of the form <code>g_1^e_1\u22ef g_n^e_n</code>. For example, if <code>i &lt; j</code>,  then <code>g_j</code> is in <code>C_{i+1}</code> which is normal in <code>C_i</code>. Then the conjugate <code>g_j^{g_i}</code> is also in <code>C_{i+1}</code>.",
  "id": "5b4f2fce64990f3c000e4abd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-18T12:17:18.500Z",
  "text": "Those are the exponents that appear in the unique representations of the form `g_1^e_1\u22ef g_n^e_n`. For example, if `i < j`,  then `g_j` is in `C_{i+1}` which is normal in `C_i`. Then the conjugate `g_j^{g_i}` is also in `C_{i+1}`.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-07-18T14:57:26.405Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Yeah,  it&#39;s clear now. Thank you :+1:",
  "id": "5b4f553f8578203ee73d60e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-18T14:57:03.539Z",
  "text": "Yeah,  it's clear now. Thank you :+1:",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"RavicharanN\" class=\"mention\">@RavicharanN</span> Are you still working on modified coset enumeration? It would be good to get that merged soon. With the <code>itr</code> thing, I think if you made it a flag at least, rather than something that&#39;s incremented every time you are in a loop, then that might work slightly better.",
  "id": "5b530a5e63cf1636bde15472",
  "issues": [],
  "mentions": [
   {
    "screenName": "RavicharanN",
    "userId": "5862b83dd73408ce4f3f9ce3",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-21T10:26:38.828Z",
  "text": "@RavicharanN Are you still working on modified coset enumeration? It would be good to get that merged soon. With the `itr` thing, I think if you made it a flag at least, rather than something that's incremented every time you are in a loop, then that might work slightly better.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Ah, never mind, have just seen you latest commit",
  "id": "5b530abb26bfd636be3bfd56",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-21T10:28:11.463Z",
  "text": "Ah, never mind, have just seen you latest commit",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "The docstring issue is now resolved, I pushed a few changes this morning. There is a slight problem with the modified methods and I&#39;m looking into it now. Once,  that&#39;s fixed the modified Todd-Coxter work should be done, I guess.  ",
  "id": "5b547990f477e4664ab491b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-22T12:33:20.364Z",
  "text": "The docstring issue is now resolved, I pushed a few changes this morning. There is a slight problem with the modified methods and I'm looking into it now. Once,  that's fixed the modified Todd-Coxter work should be done, I guess.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "What issue is there?",
  "id": "5b5479f263cf1636bde41e99",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-22T12:34:58.085Z",
  "text": "What issue is there?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": " If you mean the error in the Travis build that was there in the morning, that was not due to an HTTP error, and it completed successfully after I restarted it",
  "id": "5b547a359ddf5f4aadfedfde",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-22T12:36:05.506Z",
  "text": " If you mean the error in the Travis build that was there in the morning, that was not due to an HTTP error, and it completed successfully after I restarted it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Issue is with the implentation part. Mostly in the <code>modified_coincidence</code> method.",
  "id": "5b54a5479ddf5f4aadff576b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-22T15:39:51.608Z",
  "text": "Issue is with the implentation part. Mostly in the `modified_coincidence` method.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "It looked all right last time I checked. Are you getting wrong results for something?",
  "id": "5b54a84fee530e4aac8db5fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-22T15:52:47.099Z",
  "text": "It looked all right last time I checked. Are you getting wrong results for something?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-22T16:00:18.628Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Yeah the <code>modified_coset_enumeration</code> method run into an infinite loop. Tracking it shows that the table doesn&#39;t get updated when <code>modified_coincidence</code> is called through <code>scan_and_fill</code>. ",
  "id": "5b54a999f9ffc4664bf547e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-22T15:58:17.334Z",
  "text": "Yeah the `modified_coset_enumeration` method run into an infinite loop. Tracking it shows that the table doesn't get updated when `modified_coincidence` is called through `scan_and_fill`. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "So, this issue is probably with <code>modified_coincidence</code> or the methods that are called by <code>modified_coincidence</code>(<code>modified_rep</code>/<code>modified_merge</code>). ",
  "id": "5b54a9e8f10ffa0b48a4c5c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-22T15:59:36.010Z",
  "text": "So, this issue is probably with `modified_coincidence` or the methods that are called by `modified_coincidence`(`modified_rep`/`modified_merge`). ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I&#39;m looking into the implementation again.",
  "id": "5b54a9f8ee530e4aac8dba5b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-22T15:59:52.907Z",
  "text": "I'm looking into the implementation again.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I pushed the changes. I guess it&#39;s stable now ",
  "id": "5b54fa8df02a0977a3f22e70",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-22T21:43:41.596Z",
  "text": "I pushed the changes. I guess it's stable now ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Can I add the <code>maximal_abelian_subgroup</code> and the <code>epimorphism</code> methods in the polycyclic PR itself?  ",
  "id": "5b5742a49ddf5f4aad0648ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-24T15:15:48.409Z",
  "text": "Can I add the `maximal_abelian_subgroup` and the `epimorphism` methods in the polycyclic PR itself?  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "&#39;Coz a few methods implemented like computing the homomorphism between the subgroup on new set of generators and the parent group  might be useful.",
  "id": "5b5743699ddf5f4aad064bd7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-24T15:19:05.325Z",
  "text": "'Coz a few methods implemented like computing the homomorphism between the subgroup on new set of generators and the parent group  might be useful.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-24T15:19:42.805Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "Or would it make more sense to add those methods as a part of the quotient methods PR?",
  "id": "5b574382c331e0355214c84a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-24T15:19:30.047Z",
  "text": "Or would it make more sense to add those methods as a part of the quotient methods PR?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-07-24T15:22:33.844Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "What exactly does <code>epimorphism</code> do?",
  "id": "5b5743c2f02a0977a3f859d2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-24T15:20:34.191Z",
  "text": "What exactly does `epimorphism` do?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Also, are these methods that you would need for polycyclic groups? If not, then it doesn&#39;t really make sense for them to go in that PR",
  "id": "5b574508b2411177a26a712d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-24T15:26:00.027Z",
  "text": "Also, are these methods that you would need for polycyclic groups? If not, then it doesn't really make sense for them to go in that PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "If you&#39;d like to use use some of the methods you&#39;ve already implemented in the polycyclic PR, it would probably be best to send a separate PR with just those methods. E.g. computing an injection of a subgroup into the parent group would be a good PR on its own - it&#39;s independent of polycyclic groups and it shouldn&#39;t take long to review and merge.",
  "id": "5b5745f132fa1b7408626d10",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-24T15:29:53.324Z",
  "text": "If you'd like to use use some of the methods you've already implemented in the polycyclic PR, it would probably be best to send a separate PR with just those methods. E.g. computing an injection of a subgroup into the parent group would be a good PR on its own - it's independent of polycyclic groups and it shouldn't take long to review and merge.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>What exactly does <code>epimorphism</code> do? </p></blockquote>\n<p>Computes all epimorphisms upto a conjugacy class. </p>",
  "id": "5b574ceeb2411177a26a8fce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-24T15:59:42.425Z",
  "text": "> What exactly does `epimorphism` do? \n\nComputes all epimorphisms upto a conjugacy class. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>Also, are these methods that you would need for polycyclic groups? If not, then it doesn&#39;t really make sense for them to go in that PR </p></blockquote>\n<p>I was thinking the same, everything that involves quotient methods and computing the injection could be a separate PR.</p>",
  "id": "5b574d42ee530e4aac94db74",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-24T16:01:06.947Z",
  "text": "> Also, are these methods that you would need for polycyclic groups? If not, then it doesn't really make sense for them to go in that PR \n\nI was thinking the same, everything that involves quotient methods and computing the injection could be a separate PR.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "<blockquote>\n<p>Can I add the <code>maximal_abelian_subgroup</code> and the <code>epimorphism</code> methods in the polycyclic PR itself?   </p></blockquote>\n<p>Mistake, this should&#39;ve been <code>maximal_abelian_quotient</code>.</p>",
  "id": "5b574d84f477e4664abc42c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-24T16:02:12.958Z",
  "text": "> Can I add the `maximal_abelian_subgroup` and the `epimorphism` methods in the polycyclic PR itself?   \n\nMistake, this should've been `maximal_abelian_quotient`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I&#39;ve sent a PR <span data-link-type=\"issue\" data-issue=\"14968\" class=\"issue\">#14968</span> on computing the injection with the previously suggested changes.  ",
  "id": "5b5764fbc331e0355215430d",
  "issues": [
   {
    "number": "14968"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-24T17:42:19.821Z",
  "text": "I've sent a PR #14968 on computing the injection with the previously suggested changes.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-25T15:16:41.984Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I&#39;ve been travelling today. And i&#39;m settling at the university right now. I shall be completely free from tonight or tomorrow morning as the classes won&#39;t start for the next 10 days. I&#39;ll make the changes and I shall speed things up a bit from tomorrow on. ",
  "id": "5b58942c32d98c2ed2b4318c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-25T15:15:56.694Z",
  "text": "I've been travelling today. And i'm settling at the university right now. I shall be completely free from tonight or tomorrow morning as the classes won't start for the next 10 days. I'll make the changes and I shall speed things up a bit from tomorrow on. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Cool, thanks for letting us know",
  "id": "5b58e1ce07be4357bded5370",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-25T20:47:10.624Z",
  "text": "Cool, thanks for letting us know",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "I&#39;ve sent a PR <span data-link-type=\"issue\" data-issue=\"14981\" class=\"issue\">#14981</span> on quotient methods. Still need to add the <code>epimorphism_quotient</code> method. But the existing methods could possibly be tested only after the merge of injective homimorphism PR, I guess. I&#39;ve pushed the changes yesterday. I guess it&#39;s final now.",
  "id": "5b5ae7ab46235249cd56b258",
  "issues": [
   {
    "number": "14981"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-27T09:36:43.644Z",
  "text": "I've sent a PR #14981 on quotient methods. Still need to add the `epimorphism_quotient` method. But the existing methods could possibly be tested only after the merge of injective homimorphism PR, I guess. I've pushed the changes yesterday. I guess it's final now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 47
  },
  "html": "It&#39;s mentioned in the Handbook that computing all epimorphism from a group <code>F</code> to a group <code>G</code> would serve as a tool for computing the quotients. How could that be done exactly? Also, the if I&#39;d like to extend the use of homomorphism to compute all the epimorphism (similar to the implementation as we&#39;ve done for the isomorphism) could this be done upto a conjugacy class? ",
  "id": "5b5b3bc507be4357bdf4f2ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-07-27T15:35:33.610Z",
  "text": "It's mentioned in the Handbook that computing all epimorphism from a group `F` to a group `G` would serve as a tool for computing the quotients. How could that be done exactly? Also, the if I'd like to extend the use of homomorphism to compute all the epimorphism (similar to the implementation as we've done for the isomorphism) could this be done upto a conjugacy class? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "Valeriia Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 8
  },
  "html": "Well, an epimorphism <code>theta:F -&gt; G</code> gives that <code>G</code> is isomorphic to <code>F/kernel(theta)</code> by the first isomorphism theorem. I assume this is relevant but whatever the epimorphism, all these quotients would be isomorphic to <code>G</code> so I don&#39;t see what we would gain by computing all of them. What did the Handbook say exactly?",
  "id": "5b5b49f146235249cd59062f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-07-27T16:36:01.561Z",
  "text": "Well, an epimorphism `theta:F -> G` gives that `G` is isomorphic to `F/kernel(theta)` by the first isomorphism theorem. I assume this is relevant but whatever the epimorphism, all these quotients would be isomorphic to `G` so I don't see what we would gain by computing all of them. What did the Handbook say exactly?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "Well, as far as I know the GAP implementation of the <code>epimorphism_quotient</code> method returns a unique epimorphism (or a quotient F/Kernel) up to a conjugation by some class <code>A</code>. ",
  "id": "5b5c0a6012f1be71375f8629",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-28T06:17:04.117Z",
  "text": "Well, as far as I know the GAP implementation of the `epimorphism_quotient` method returns a unique epimorphism (or a quotient F/Kernel) up to a conjugation by some class `A`. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "Could this be done by computing all the epimorphisms (<code>theta:F -&gt; G</code>) and checking if any of the <code>F/Kernel</code> is isomorphic <code>A</code>. ",
  "id": "5b5c0ad7c83d1230b12f9504",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-28T06:19:03.878Z",
  "text": "Could this be done by computing all the epimorphisms (`theta:F -> G `) and checking if any of the `F/Kernel` is isomorphic `A`. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "Here,  <code>G</code> is a normal subgroup of <code>A</code>.",
  "id": "5b5c0b5c17c942036b7adf37",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-28T06:21:16.223Z",
  "text": "Here,  `G` is a normal subgroup of `A`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "V Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 10
  },
  "html": "All <code>F/kernel(theta)</code> will be isomorphic to <code>G</code> if <code>theta</code> is an epimorphism - so there is nothing to check. It&#39;ll be true if and only if <code>G==A</code>",
  "id": "5b5c378d20d248394f5f95e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-28T09:29:49.219Z",
  "text": "All `F/kernel(theta)` will be isomorphic to `G` if `theta` is an epimorphism - so there is nothing to check. It'll be true if and only if `G==A`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "V Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 10
  },
  "html": "I&#39;m not sure what you are trying to achieve with epimorphisms. We have a way to compute a quotient of <code>G</code> by its subgroup <code>H</code> - do we need a different way?",
  "id": "5b5c38a2cb4d5b036ca0a7d2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-28T09:34:26.253Z",
  "text": "I'm not sure what you are trying to achieve with epimorphisms. We have a way to compute a quotient of `G` by its subgroup `H` - do we need a different way?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "<blockquote>\n<p>We have a way to compute a quotient of G by its subgroup H - do we need a different way? </p></blockquote>\n<p>Yeah apart from that I was thinking maybe we could have a method similar to the <code>EpimorphismPGroup</code> one in GAP.</p>",
  "id": "5b5c3a4e854add6cee02c1d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-28T09:41:34.115Z",
  "text": "> We have a way to compute a quotient of G by its subgroup H - do we need a different way? \n\nYeah apart from that I was thinking maybe we could have a method similar to the `EpimorphismPGroup ` one in GAP.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "V Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 10
  },
  "html": "Okay, I see now. Computing all epimorphisms <code>F-&gt;G</code> would give us all the different quotients that are isomorphic to <code>G</code> (if any) and, by extension, all normal subgroups of index <code>G.order()</code>. And for <code>G==F</code> these are elements of the automorphism group which is useful",
  "id": "5b5c419d3cc39566072aa978",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-28T10:12:45.471Z",
  "text": "Okay, I see now. Computing all epimorphisms `F->G` would give us all the different quotients that are isomorphic to `G` (if any) and, by extension, all normal subgroups of index `G.order()`. And for `G==F` these are elements of the automorphism group which is useful",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "V Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 10
  },
  "html": "So, this won&#39;t help in computing any specific quotient, but it would give you the number of possible quotients isomorphic to <code>G</code>, for example",
  "id": "5b5c421144812258443ba1bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-28T10:14:41.893Z",
  "text": "So, this won't help in computing any specific quotient, but it would give you the number of possible quotients isomorphic to `G`, for example",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "Would it be better to compute the all the quotients isomorphism to <code>G</code> of leave the epimorphisms as they are? ",
  "id": "5b5da9dc44812258443e821b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-29T11:49:48.955Z",
  "text": "Would it be better to compute the all the quotients isomorphism to `G` of leave the epimorphisms as they are? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "<blockquote>\n<p>by extension, all normal subgroups of index G.order() </p></blockquote>\n<p>Also, for this, we just check all the <code>F/kernel(theta)</code> of the order equal to <code>G.order()</code>, right?</p>",
  "id": "5b5daaca44812258443e831b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-29T11:53:46.198Z",
  "text": "> by extension, all normal subgroups of index G.order() \n\nAlso, for this, we just check all the `F/kernel(theta)` of the order equal to `G.order()`, right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "V Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 10
  },
  "html": "If <code>theta</code> is an epimorphism, then <code>F/kernel(theta)</code> is isomorphic to <code>G</code> so their orders are trivially equal",
  "id": "5b5dd108331546584578b08f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-29T14:36:56.423Z",
  "text": "If `theta` is an epimorphism, then `F/kernel(theta)` is isomorphic to `G` so their orders are trivially equal",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "V Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 10
  },
  "html": "<blockquote>\n<p>Would it be better to compute the all the quotients isomorphism to <code>G</code> of leave the epimorphisms as they are? </p></blockquote>\n<p>Well, I don&#39;t think a method called <code>epimorphism(s)</code> should compute the quotient presentations - just epimorphisms seems more appropriate</p>",
  "id": "5b5dd914bf754466066ce668",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-29T15:11:16.377Z",
  "text": "> Would it be better to compute the all the quotients isomorphism to `G` of leave the epimorphisms as they are? \n\nWell, I don't think a method called `epimorphism(s)` should compute the quotient presentations - just epimorphisms seems more appropriate",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-31T15:26:37.363Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "How will the <code>pc_gens</code> be defined if the presentation is computed based on the power exponents? Do we define them on a new Freegroup?",
  "id": "5b607e83966e803950326b3f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-31T15:21:39.911Z",
  "text": "How will the `pc_gens` be defined if the presentation is computed based on the power exponents? Do we define them on a new Freegroup?",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "V Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 10
  },
  "html": "Yes, but you&#39;ll need to have a new free group for the presentation in any case",
  "id": "5b6086d095988830b08f227f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-31T15:57:04.910Z",
  "text": "Yes, but you'll need to have a new free group for the presentation in any case",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "New free group would be used for the implementation of the collection algortihm (as I commented on the PR), other than that is there anything I&#39;m missing?",
  "id": "5b60895edefc9823f52baf61",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-31T16:07:58.542Z",
  "text": "New free group would be used for the implementation of the collection algortihm (as I commented on the PR), other than that is there anything I'm missing?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-31T18:00:18.786Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "V Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 10
  },
  "html": "Well, a new polycyclic group would need a new presentation, won&#39;t it? And a new presentation means a new free group",
  "id": "5b60a3a6d4527523f6457656",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-07-31T18:00:06.054Z",
  "text": "Well, a new polycyclic group would need a new presentation, won't it? And a new presentation means a new free group",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "There should be an argument which takes in the FpGroup well, right (or atleast when the presentation is computed on the bassis of power_exponents)? Or is there an alternative to computing the presentation?",
  "id": "5b6172d520d248394f6e5eec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-01T08:44:05.915Z",
  "text": "There should be an argument which takes in the FpGroup well, right (or atleast when the presentation is computed on the bassis of power_exponents)? Or is there an alternative to computing the presentation?\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "I meant, how do we compute the relation <code>R_i,i</code>, <code>R_i,j</code>, <code>R_j,i</code>? ",
  "id": "5b61732b966e803950352478",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-01T08:45:31.641Z",
  "text": "I meant, how do we compute the relation `R_i,i`, `R_i,j`, `R_j,i`? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-01T10:31:36.057Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "V Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 10
  },
  "html": "I suppose, you&#39;d need to take <code>a_i,j</code>, <code>b_i,j,n</code> and <code>c_i,j,n</code> as arguments too (the exponents that appear in the relators). But then you just construct a polycyclic presentation and it&#39;s a theorem that it defines a polycyclic group. Taking some <code>FpGroup</code> wouldn&#39;t help you in calculating these relators",
  "id": "5b618bac17c942036b8a932a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-01T10:30:04.483Z",
  "text": "I suppose, you'd need to take `a_i,j`, `b_i,j,n` and `c_i,j,n` as arguments too (the exponents that appear in the relators). But then you just construct a polycyclic presentation and it's a theorem that it defines a polycyclic group. Taking some `FpGroup` wouldn't help you in calculating these relators",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-08-01T13:20:45.100Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "We need to write <code>R_i,i</code> of the form <code>g_i+1**e_i+1*...*g_n**e_n</code>. So, if the <code>FpGroup</code> group is defined and we know that <code>e_i &lt; r_i</code>, it would be possible to determine the exponents such that this <code>R_i,i</code> belongs to the <code>FpGroup</code>.  ",
  "id": "5b61b38895988830b092ebb3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-01T13:20:08.987Z",
  "text": "We need to write `R_i,i` of the form `g_i+1**e_i+1*...*g_n**e_n`. So, if the `FpGroup` group is defined and we know that `e_i < r_i`, it would be possible to determine the exponents such that this `R_i,i` belongs to the `FpGroup`.  ",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "V Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 10
  },
  "html": "If all of <code>g_j</code> belong to the <code>FpGroup</code>, then <code>R_i,i</code> would as well, independent of the exponents - and if one of <code>g_j</code> wasn&#39;t in the group, then neither would be <code>R_i,i</code> unless <code>e_j</code> is 0",
  "id": "5b61baff12f1be7137700dd3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-01T13:51:59.300Z",
  "text": "If all of `g_j` belong to the `FpGroup`, then `R_i,i` would as well, independent of the exponents - and if one of `g_j` wasn't in the group, then neither would be `R_i,i` unless `e_j` is 0",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-01T15:10:59.097Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "So, basically do we need to define the presentation as well, in the case of power specifying only exponents? ",
  "id": "5b61cd76331546584585ec18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-01T15:10:46.072Z",
  "text": "So, basically do we need to define the presentation as well, in the case of power specifying only exponents? ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-08-01T15:46:32.858Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "V Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 10
  },
  "html": "<p>I&#39;m not entirely sure what you are asking but I guess what I&#39;m saying is, given 4 lists (which could be packed in a single tuple) specifying power exponents and the various exponents required for relators, you can write down a presentation of a polycyclic group. And it seems that you do need all 4. We could have a convention where if you only specify the power exponents, the rest are assumed to be 1, but I&#39;m not sure how useful that would be so maybe it would be best to require all of them for now.</p><p>And when you build a polycyclic group from a polycyclic series of a group with a different presentation, you&#39;ll need to compute these 4 lists from the series an use them to obtain a polycyclic presentation</p>",
  "id": "5b61d5c720d248394f708d53",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-01T15:46:15.823Z",
  "text": "I'm not entirely sure what you are asking but I guess what I'm saying is, given 4 lists (which could be packed in a single tuple) specifying power exponents and the various exponents required for relators, you can write down a presentation of a polycyclic group. And it seems that you do need all 4. We could have a convention where if you only specify the power exponents, the rest are assumed to be 1, but I'm not sure how useful that would be so maybe it would be best to require all of them for now.\n\nAnd when you build a polycyclic group from a polycyclic series of a group with a different presentation, you'll need to compute these 4 lists from the series an use them to obtain a polycyclic presentation",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "V Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 10
  },
  "html": "If we picked the various exponents randomly, we could even have a method for a random polycyclic group - most likely biased but still.",
  "id": "5b61d65f3315465845862718",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-01T15:48:47.115Z",
  "text": "If we picked the various exponents randomly, we could even have a method for a random polycyclic group - most likely biased but still.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-01T16:18:47.173Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "<blockquote>\n<p>We could have a convention where if you only specify the power exponents, the rest are assumed to be 1,  </p></blockquote>\n<p>So, does this mean that when power exponents are specified, the presentation is of the form <code>{x_i**s_i = x_1+1*...*x_n,</code>x_j<em>*-1</em>x_i*x_j<code>}</code>?</p>",
  "id": "5b61dd613e264c71385902cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-01T16:18:41.970Z",
  "text": "> We could have a convention where if you only specify the power exponents, the rest are assumed to be 1,  \n\nSo, does this mean that when power exponents are specified, the presentation is of the form `{x_i**s_i = x_1+1*...*x_n, `x_j**-1*x_i*x_j`}`?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "<blockquote>\n<p>you&#39;ll need to compute these 4 lists from the series an use them to obtain a polycyclic presentation </p></blockquote>\n<p>Also, this. As suggested before we could use the relative orders as the power exponents in this case. But, I&#39;m not sure about how we do go on finiding the <code>a_i,j</code>, <code>b_i,j,n</code> and <code>c_i,j,n</code>.</p>",
  "id": "5b6210dd3e264c713859b5e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-01T19:58:21.488Z",
  "text": "> you'll need to compute these 4 lists from the series an use them to obtain a polycyclic presentation \n\nAlso, this. As suggested before we could use the relative orders as the power exponents in this case. But, I'm not sure about how we do go on finiding the `a_i,j`, `b_i,j,n` and `c_i,j,n`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "V Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 10
  },
  "html": "<blockquote>\n<p>So, does this mean that when power exponents are specified, the presentation is of the form {x_i<em>*s_i = x_1+1</em>...<em>x_n,x_j</em>-1x_i*x_j}?</p></blockquote>\n<p>Something like that, but as I&#39;ve said, I don&#39;t see any reason to do this - let&#39;s just require to specify the other exponents</p>",
  "id": "5b62145d17c942036b8d3a42",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-01T20:13:17.540Z",
  "text": "> So, does this mean that when power exponents are specified, the presentation is of the form {x_i**s_i = x_1+1*...*x_n,x_j*-1x_i*x_j}?\n\nSomething like that, but as I've said, I don't see any reason to do this - let's just require to specify the other exponents",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-01T20:28:03.620Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "V Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 10
  },
  "html": "<blockquote>\n<p>I&#39;m not sure about how we do go on finding the a_i,j, b_i,j,n and c_i,j,n.</p></blockquote>\n<p>It&#39;s to do with the fact that any element  <code>w</code> of G can be written uniquely as <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mrow><msubsup><mi>g</mi><mn>1</mn><mrow><msub><mi>e</mi><mn>1</mn></msub></mrow></msubsup><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msubsup><mi>g</mi><mi>n</mi><mrow><msub><mi>e</mi><mi>n</mi></msub></mrow></msubsup></mrow></mrow><annotation encoding=\"application/x-tex\">{g_1^{e_1}... g_n^{e_n}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.751192em;\"></span><span class=\"strut bottom\" style=\"height:1.0175em;vertical-align:-0.266308em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">g</span><span class=\"vlist\"><span style=\"top:0.266308em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">1</span></span></span><span style=\"top:-0.4498em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\">e</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.07142857142857144em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-scriptstyle scriptscriptstyle cramped\"><span class=\"mord mathrm\">1</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">g</span><span class=\"vlist\"><span style=\"top:0.247em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\">n</span></span></span><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\">e</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.07142857142857144em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-scriptstyle scriptscriptstyle cramped\"><span class=\"mord mathit\">n</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span></span></span></span></span>. Do you see why that is, considering the fact that <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>&lt;</mo><msub><mi>g</mi><mi>j</mi></msub><mo separator=\"true\">,</mo><msub><mi>g</mi><mn>2</mn></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>g</mi><mi>n</mi></msub><mo>&gt;</mo></mrow><annotation encoding=\"application/x-tex\">&lt;g_j, g_2 ... g_n&gt;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.5391em;\"></span><span class=\"strut bottom\" style=\"height:0.8252079999999999em;vertical-align:-0.286108em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mrel\">&lt;</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">g</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.03588em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\" style=\"margin-right:0.05724em;\">j</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mpunct\">,</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">g</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.03588em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathrm\">2</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">g</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.03588em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\">n</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">\u200b</span></span>\u200b</span></span></span><span class=\"mrel\">&gt;</span></span></span></span> forms the polycyclic series as <code>j</code> runs from 1 to n? For example, the first factor group (that is <code>G_1/G_2</code> where <code>G_1=G</code> and <code>G_2</code> is next in the series) is a cyclic group generated by <code>g_1</code>. So to get <code>e_1</code>, you just need to see what <code>w</code> maps to as you quotient by <code>G_2</code>.</p>",
  "id": "5b6217863315465845871442",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-01T20:26:46.650Z",
  "text": "> I'm not sure about how we do go on finding the a_i,j, b_i,j,n and c_i,j,n.\n\nIt's to do with the fact that any element  `w` of G can be written uniquely as $${g_1^{e_1}... g_n^{e_n}}$$. Do you see why that is, considering the fact that $$<g_j, g_2 ... g_n>$$ forms the polycyclic series as `j` runs from 1 to n? For example, the first factor group (that is `G_1/G_2` where `G_1=G` and `G_2` is next in the series) is a cyclic group generated by `g_1`. So to get `e_1`, you just need to see what `w` maps to as you quotient by `G_2`.",
  "unread": false,
  "urls": [],
  "v": 5
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "Alright I guess it makes sense now. :+1: ",
  "id": "5b6219fdac380e3f3a158e8e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-01T20:37:17.363Z",
  "text": "Alright I guess it makes sense now. :+1: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "As I&#39;ve commented on the quotient-methods PR, wouldn&#39;t that be a problem if the computed quotients don&#39;t belong to the same FreeGroup as that of the FpGroup?",
  "id": "5b6492fa3bca002dcbba46e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-03T17:38:02.845Z",
  "text": "As I've commented on the quotient-methods PR, wouldn't that be a problem if the computed quotients don't belong to the same FreeGroup as that of the FpGroup?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "As its suggested in the PR that instead of using the <code>free_group</code> of the parent group, we compute  q_group on the free group of the presentation of <code>G</code>. Where <code>G</code> is the subgroup.",
  "id": "5b6493843bca002dcbba4ac8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-03T17:40:20.768Z",
  "text": "As its suggested in the PR that instead of using the `free_group` of the parent group, we compute  q_group on the free group of the presentation of `G`. Where `G` is the subgroup.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "V Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 10
  },
  "html": "<blockquote>\n<p>I&#39;ve commented on the quotient-methods PR, wouldn&#39;t that be a problem if the computed quotients don&#39;t belong to the same FreeGroup as that of the FpGroup?</p></blockquote>\n<p>Why would it be a problem? If necessary, you could use homomorphisms to get between the two</p>",
  "id": "5b64b9bce8698a2dca03c226",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-03T20:23:24.342Z",
  "text": "> I've commented on the quotient-methods PR, wouldn't that be a problem if the computed quotients don't belong to the same FreeGroup as that of the FpGroup?\n\nWhy would it be a problem? If necessary, you could use homomorphisms to get between the two",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-03T21:49:23.233Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "We could use a homomorphism but I thought it would take a lot of computation when we compute the presentation in polycyclic series, since,  the quotient<code>G1/G2</code> won&#39;t be defined on the same free group as that of the parent group. But, I guess we could compute the homomorphism before-hand and store them. That should work, i guess",
  "id": "5b64cdda5d1362758b2bc0a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-03T21:49:14.208Z",
  "text": "We could use a homomorphism but I thought it would take a lot of computation when we compute the presentation in polycyclic series, since,  the quotient`G1/G2` won't be defined on the same free group as that of the parent group. But, I guess we could compute the homomorphism before-hand and store them. That should work, i guess",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "V Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 10
  },
  "html": "Yes, when you know you might need homomorphisms, it does make sense to compute them when you are getting the quotient.",
  "id": "5b65725c85278d705e8282d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-04T09:31:08.934Z",
  "text": "Yes, when you know you might need homomorphisms, it does make sense to compute them when you are getting the quotient.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "I was thinking maybe, during the computation of a presentation, instead of computing the factor groups, having an implementation similar to <a href=\"https://www.geeksforgeeks.org/dynamic-programming-set-7-coin-change/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">this problem</a> could be more efficient. We basically need to find the set of exponents of <code>g1</code>, <code>g2</code>... that form the word <code>w</code>.",
  "id": "5b6b59e967eb9f60feb37ea4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-08T21:00:25.052Z",
  "text": "I was thinking maybe, during the computation of a presentation, instead of computing the factor groups, having an implementation similar to [this problem](https://www.geeksforgeeks.org/dynamic-programming-set-7-coin-change/) could be more efficient. We basically need to find the set of exponents of `g1`, `g2`... that form the word `w`.",
  "unread": false,
  "urls": [
   {
    "url": "https://www.geeksforgeeks.org/dynamic-programming-set-7-coin-change/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "V Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 10
  },
  "html": "You could do something like that, considering your exponents are bounded, but that would rely on having a confluent rewriting system (which you can&#39;t really guarantee) and repeated word reductions, which could also be time-costly. Besides, you compute the factor groups for polycyclic series and relative orders anyway, and you should store them - so then it&#39;s just a matter of reusing them",
  "id": "5b6c0e4049932d4fe4b9d85c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-09T09:49:52.614Z",
  "text": "You could do something like that, considering your exponents are bounded, but that would rely on having a confluent rewriting system (which you can't really guarantee) and repeated word reductions, which could also be time-costly. Besides, you compute the factor groups for polycyclic series and relative orders anyway, and you should store them - so then it's just a matter of reusing them",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "I&#39;ve pushed changes to the quotient-methods PR. Could that be reviewed now?  I&#39;ll push the changes in the polycyclic PR as well. But, I guess the polycyclic PR cannot be merged before the deadline.",
  "id": "5b725c6f49932d4fe4db8390",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-14T04:37:03.864Z",
  "text": "I've pushed changes to the quotient-methods PR. Could that be reviewed now?  I'll push the changes in the polycyclic PR as well. But, I guess the polycyclic PR cannot be merged before the deadline.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "Now that we return 2 homomorphisms, which one do we use to compute the presentation of the pc groups, As the currently defined homomorphism from <code>G</code> to <code>parent_group</code> can&#39;t be used there.",
  "id": "5b7a71d8e026575f0f9a493d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-20T07:46:32.339Z",
  "text": "Now that we return 2 homomorphisms, which one do we use to compute the presentation of the pc groups, As the currently defined homomorphism from `G` to `parent_group` can't be used there.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-20T11:37:46.207Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "<blockquote>\n<p>but that would rely on having a confluent rewriting system (which you can&#39;t really guarantee) and repeated word reductions, which could also be time-costly </p></blockquote>\n<p>I guess that could be avoided by using the dictionary with the keys (<code>g_1, g_2... g_n</code>) defined on a new <code>FreeGroup</code>(<code>pc_gens</code> redefined on a new <code>FreeGroup</code>) and the values as the <code>pc_gens</code> which were computed from the <code>pc_series</code>. </p><p>Now if we are given a word <code>w</code> defined on the same <code>FreeGroup</code> as that of the <code>FpGroup</code>, we could define this on a new presentation by using an algortihm similar to that Coin change problem mentioned above.</p><p> As for avoiding the word reductions we could just sort the <code>array_form</code> list and reconstruct the word by multiplying the elements of that sorted list, this shouldn&#39;t be a problem as we are dealing with abelian groups only.</p><p> For example,  we have the dictionary as <code>{g_1 : x**2*y, g_2  : x**-1**y, g_3 : y**-1*x }</code> and the given word <code>w = x*y**2</code> we could find <code>e_1</code>, <code>e_2</code>, <code>e_3</code> using that algorithms] such that the sorted <code>array_form</code> of <code>w_k = dict[g_1]**e_1*dict[g_2]**e_2*dict[g_3]**e_3</code> is same that of <code>w</code>. Here, when <code>e_1 = 1, e_2 = 2, e_3 = 1</code>, we have <code>w_k</code> as <code>x**2*y*x**-2*y**2*y**-1*x</code> and the sorted <code>array_form</code> for <code>w_k</code> would be <code>[x, x, x, x**-1, x**-1, y, y, y, y**-1]</code>. Now, multipying all the elements in the list would give <code>x*y**2</code>. </p>",
  "id": "5b7aa7bb087c4c20b50abee3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-20T11:36:27.518Z",
  "text": "> but that would rely on having a confluent rewriting system (which you can't really guarantee) and repeated word reductions, which could also be time-costly \n\nI guess that could be avoided by using the dictionary with the keys (`g_1, g_2... g_n`) defined on a new `FreeGroup`(`pc_gens` redefined on a new `FreeGroup`) and the values as the `pc_gens` which were computed from the `pc_series`. \n\nNow if we are given a word `w` defined on the same `FreeGroup` as that of the `FpGroup`, we could define this on a new presentation by using an algortihm similar to that Coin change problem mentioned above.\n\n As for avoiding the word reductions we could just sort the `array_form` list and reconstruct the word by multiplying the elements of that sorted list, this shouldn't be a problem as we are dealing with abelian groups only.\n\n For example,  we have the dictionary as `{g_1 : x**2*y, g_2  : x**-1**y, g_3 : y**-1*x }` and the given word `w = x*y**2` we could find `e_1`, `e_2`, `e_3` using that algorithms] such that the sorted `array_form` of `w_k = dict[g_1]**e_1*dict[g_2]**e_2*dict[g_3]**e_3` is same that of `w`. Here, when `e_1 = 1, e_2 = 2, e_3 = 1`, we have `w_k` as `x**2*y*x**-2*y**2*y**-1*x` and the sorted `array_form` for `w_k` would be `[x, x, x, x**-1, x**-1, y, y, y, y**-1]`. Now, multipying all the elements in the list would give `x*y**2`. ",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "V Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 10
  },
  "html": "You&#39;d have to use both homomorphisms if you want a correspondence between elements of <code>parent_group</code> and the quotient - that&#39;s why I suggested we return two instead of one",
  "id": "5b7aa804d7901b2c60636ef2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-08-20T11:37:40.515Z",
  "text": "You'd have to use both homomorphisms if you want a correspondence between elements of `parent_group` and the quotient - that's why I suggested we return two instead of one",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "V Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 10
  },
  "html": "<blockquote>\n<p>we are dealing with abelian groups only.</p></blockquote>\n<p>Aren&#39;t we dealing with any finite solvable groups? They don&#39;t have to be abelian</p>",
  "id": "5b7aa9addd0b74601e329784",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-20T11:44:45.266Z",
  "text": "> we are dealing with abelian groups only.\n\nAren't we dealing with any finite solvable groups? They don't have to be abelian",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "V Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 10
  },
  "html": "My concern is not with how we deal with the word after we&#39;ve computed the exponents - that shouldn&#39;t be a problem. It is computing the exponents that I think could be tricky and require a confluent rewriting system and multiple word  reductions. But maybe I misunderstand what you are planning to do. Could you describe how you are planning to compute the exponents?",
  "id": "5b7aabe1dd0b74601e32a42f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-20T11:54:09.789Z",
  "text": "My concern is not with how we deal with the word after we've computed the exponents - that shouldn't be a problem. It is computing the exponents that I think could be tricky and require a confluent rewriting system and multiple word  reductions. But maybe I misunderstand what you are planning to do. Could you describe how you are planning to compute the exponents?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "Well, since the upper limit of a given <code>e_i</code> is <code>r_i</code>(where <code>r_i</code> is a relative order), can&#39;t we just check if  <code>g_1**e_1*g_2**e_2*g_3**e_3</code>is equal to <code>w</code> for all the combinations of <code>e1, e2, e3</code>? ",
  "id": "5b7ab1d4087c4c20b50afee5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-20T12:19:32.864Z",
  "text": "Well, since the upper limit of a given `e_i` is `r_i`(where `r_i` is a relative order), can't we just check if  `g_1**e_1*g_2**e_2*g_3**e_3`is equal to `w` for all the combinations of `e1, e2, e3`? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "V Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 10
  },
  "html": "To guarantee that this checking is successful, you&#39;d need a confluent rewriting system, and each check would require you to reduce <code>g_1**e_1*...*g_3**e_3</code> to its normal form, to compare with the normal form of <code>w</code> - and that&#39;s where multiple word reductions would happen. Equality of group elements isn&#39;t as easy as equality of numbers",
  "id": "5b7ab664070fa234ee8b8554",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-20T12:39:00.770Z",
  "text": "To guarantee that this checking is successful, you'd need a confluent rewriting system, and each check would require you to reduce `g_1**e_1*...*g_3**e_3` to its normal form, to compare with the normal form of `w` - and that's where multiple word reductions would happen. Equality of group elements isn't as easy as equality of numbers",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "Alright :+1: ",
  "id": "5b7ae283e026575f0f9cf9ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-20T15:47:15.794Z",
  "text": "Alright :+1: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "Could you brief me a little on using both the homomorphisms to get the correspondance between the elements of the two groups?",
  "id": "5b7ae2bccda86f5fb280784b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-20T15:48:12.388Z",
  "text": "Could you brief me a little on using both the homomorphisms to get the correspondance between the elements of the two groups?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "V Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 10
  },
  "html": "Well, you have an injection <code>i:G-&gt;parent_group</code> and a surjection <code>s:G -&gt; quotient</code>. Can you see how given an element of the parent_group, you can get the corresponding element of the quotient (you can, of course, use inverses)?",
  "id": "5b7ae37dcda86f5fb2807dea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-20T15:51:25.769Z",
  "text": "Well, you have an injection `i:G->parent_group` and a surjection `s:G -> quotient`. Can you see how given an element of the parent_group, you can get the corresponding element of the quotient (you can, of course, use inverses)?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-20T15:53:57.766Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "Was looking at it the wrong way. My bad. Makes sense now, thanks :+1: ",
  "id": "5b7ae3fd796f7b601d6b66a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-20T15:53:33.658Z",
  "text": "Was looking at it the wrong way. My bad. Makes sense now, thanks :+1: ",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "editedAt": "2018-08-21T05:28:16.293Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 89
  },
  "html": "<blockquote>\n<p>To guarantee that this checking is successful, you&#39;d need a confluent rewriting system, and each check would require you to reduce g_1<strong>e_1<em>...</em>g_3</strong>e_3 to its normal form, to compare with the normal form of w - and that&#39;s where multiple word reductions would happen. </p></blockquote>\n<p>But if the group is abelian, can we just convert <code>g_1**e_1*...*g_3**e_3</code> and <code>g_1**e_1*...*g_3**e_3</code> to array forms. Sort the array form list and then multiply each eleemnt in the sorted array_form list to construct the reduced word and then check if the words are equal?</p>",
  "id": "5b7ba2e694f8164c1779b5fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-21T05:28:06.937Z",
  "text": "> To guarantee that this checking is successful, you'd need a confluent rewriting system, and each check would require you to reduce g_1**e_1*...*g_3**e_3 to its normal form, to compare with the normal form of w - and that's where multiple word reductions would happen. \n\nBut if the group is abelian, can we just convert `g_1**e_1*...*g_3**e_3` and `g_1**e_1*...*g_3**e_3` to array forms. Sort the array form list and then multiply each eleemnt in the sorted array_form list to construct the reduced word and then check if the words are equal?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/valglad",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20492235?v=4&s=60",
   "displayName": "V Gladkova",
   "gv": "4",
   "id": "5895bedcd73408ce4f480c49",
   "url": "/valglad",
   "username": "valglad",
   "v": 10
  },
  "html": "You could, but there would still be the problem of checking if the words are equal - if the group has any other relators beside <code>a*b*a**-1*b**-1</code>, you might have to do more reductions to get them both into normal forms",
  "id": "5b7c014aac25fd11b57310f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-21T12:10:50.657Z",
  "text": "You could, but there would still be the problem of checking if the words are equal - if the group has any other relators beside `a*b*a**-1*b**-1`, you might have to do more reductions to get them both into normal forms",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Vinayak-Shukla",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/43382124?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/43382124?v=4&s=60",
   "displayName": "Vinayak-Shukla",
   "gv": "4",
   "id": "5c83b7e2d73408ce4fba1d5c",
   "url": "/Vinayak-Shukla",
   "username": "Vinayak-Shukla",
   "v": 3
  },
  "html": "Hey there guys, I&#39;m Vinayak, a sophomore at BITS Pilani Goa and am currently trying to write a proposal for working under SymPy&#39;s group theory module for GSoC 2019. I was wondering if the suggestions in the 2019 list are up to date or not, considering some of those have been merged already under GSoC 2018 by <span data-link-type=\"mention\" data-screen-name=\"RavicharanN\" class=\"mention\">@RavicharanN</span>. Are there any other alogrithms that are to be prioritised to be implemented which may not be listed in the 2019 list? If yes, please let me know! Thanks.",
  "id": "5c83f7711fae6423ca5a5a7e",
  "issues": [],
  "mentions": [
   {
    "screenName": "RavicharanN",
    "userId": "5862b83dd73408ce4f3f9ce3",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2019-03-09T17:27:13.607Z",
  "text": "Hey there guys, I'm Vinayak, a sophomore at BITS Pilani Goa and am currently trying to write a proposal for working under SymPy's group theory module for GSoC 2019. I was wondering if the suggestions in the 2019 list are up to date or not, considering some of those have been merged already under GSoC 2018 by @RavicharanN. Are there any other alogrithms that are to be prioritised to be implemented which may not be listed in the 2019 list? If yes, please let me know! Thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Vinayak-Shukla",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/43382124?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/43382124?v=4&s=60",
   "displayName": "Vinayak-Shukla",
   "gv": "4",
   "id": "5c83b7e2d73408ce4fba1d5c",
   "url": "/Vinayak-Shukla",
   "username": "Vinayak-Shukla",
   "v": 3
  },
  "html": "Looking forward to contribute to SymPy",
  "id": "5c83f77c0a6b91516300ae8c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-03-09T17:27:24.808Z",
  "text": "Looking forward to contribute to SymPy",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/RavicharanN",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22046387?v=4&s=60",
   "displayName": "Ravi charan",
   "gv": "4",
   "id": "5862b83dd73408ce4f3f9ce3",
   "url": "/RavicharanN",
   "username": "RavicharanN",
   "v": 101
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Vinayak-Shukla\" class=\"mention\">@Vinayak-Shukla</span>  I&#39;ve updated the Wiki you can go through it now. ",
  "id": "5c9495b08aa66959b64faeae",
  "issues": [],
  "mentions": [
   {
    "screenName": "Vinayak-Shukla",
    "userId": "5c83b7e2d73408ce4fba1d5c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2019-03-22T07:58:40.056Z",
  "text": "@Vinayak-Shukla  I've updated the Wiki you can go through it now. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-03-25T17:47:09.923Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 7
  },
  "html": "<p>Addition of a method to compute the <code>Normal Subgroups</code> of a given <code>Group</code> which can be further extended to compute the <code>Maximal Normal Subgroup</code>. As a reference <code>gap</code> computes it using the <code>Conjugacy Classes</code> below is an example:</p><pre><code>gap&gt; g:=SymmetricGroup(<span class=\"number\">5</span>);\nSym( [ <span class=\"number\">1</span> .. <span class=\"number\">5</span> ] )\ngap&gt; ConjugacyClasses(g);\n[ ()^G, (<span class=\"number\">1</span>,<span class=\"number\">2</span>)^G, (<span class=\"number\">1</span>,<span class=\"number\">2</span>)(<span class=\"number\">3</span>,<span class=\"number\">4</span>)^G, (<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>)^G, (<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>)(<span class=\"number\">4</span>,<span class=\"number\">5</span>)^G, (<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>)^G, \n  (<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>)^G ]\ngap&gt; NormalSubgroups(g);\n[ Sym( [ <span class=\"number\">1</span> .. <span class=\"number\">5</span> ] ), Alt( [ <span class=\"number\">1</span> .. <span class=\"number\">5</span> ] ), Group(()) ]\ngap&gt; MaximalNormalSubgroups(g);\n[ Alt( [ <span class=\"number\">1</span> .. <span class=\"number\">5</span> ] ) ]</code></pre><p> <span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> I think it will be good to have these functionalities in SymPy.</p>",
  "id": "5c9913da8126720abc40ba45",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2019-03-25T17:46:02.051Z",
  "text": "Addition of a method to compute the `Normal Subgroups` of a given `Group` which can be further extended to compute the `Maximal Normal Subgroup`. As a reference `gap` computes it using the `Conjugacy Classes` below is an example:\n```\ngap> g:=SymmetricGroup(5);\nSym( [ 1 .. 5 ] )\ngap> ConjugacyClasses(g);\n[ ()^G, (1,2)^G, (1,2)(3,4)^G, (1,2,3)^G, (1,2,3)(4,5)^G, (1,2,3,4)^G, \n  (1,2,3,4,5)^G ]\ngap> NormalSubgroups(g);\n[ Sym( [ 1 .. 5 ] ), Alt( [ 1 .. 5 ] ), Group(()) ]\ngap> MaximalNormalSubgroups(g);\n[ Alt( [ 1 .. 5 ] ) ]\n```\n @jksuom I think it will be good to have these functionalities in SymPy.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 36
  },
  "html": "It would probably be good, assuming that efficient algorithms can be found.",
  "id": "5c991a9f2fb6800d807d1c25",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-03-25T18:14:55.834Z",
  "text": "It would probably be good, assuming that efficient algorithms can be found.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 7
  },
  "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> I&#39;ll include this in my 2019 GSoC proposal.",
  "id": "5c991c47fcaf7b5f731315a4",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2019-03-25T18:21:59.864Z",
  "text": "Thanks @jksuom I'll include this in my 2019 GSoC proposal.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 7
  },
  "html": "Every <code>Abelian</code> group is <code>nilpotent</code>. Function  <a href=\"https://github.com/sympy/sympy/blob/d13eb25999fb8af72c87fded526f995f5c79cb3d/sympy/combinatorics/perm_groups.py#L1805\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">is_nilpotent</a> can be enhanced to directly return <code>True</code> if given group is <code>Abelian</code> but  method <code>is_abelian</code> uses 2 loops on the <code>generators</code> of the group and if not <code>is_nilpotent</code> will call <code>lower_central_series</code> so will it worth to explicitly handle <code>is_abelian</code> case?? ",
  "id": "5c9cd22de4561321d051343d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-03-28T13:54:53.367Z",
  "text": "Every `Abelian` group is `nilpotent`. Function  [is_nilpotent](https://github.com/sympy/sympy/blob/d13eb25999fb8af72c87fded526f995f5c79cb3d/sympy/combinatorics/perm_groups.py#L1805) can be enhanced to directly return `True` if given group is `Abelian` but  method `is_abelian` uses 2 loops on the `generators` of the group and if not `is_nilpotent` will call `lower_central_series` so will it worth to explicitly handle `is_abelian` case?? ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/blob/d13eb25999fb8af72c87fded526f995f5c79cb3d/sympy/combinatorics/perm_groups.py#L1805"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> please have a look.",
  "id": "5c9cd23eb7e27d2f05990d08",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2019-03-28T13:55:10.310Z",
  "text": "@jksuom please have a look.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 36
  },
  "html": "It would be possible to quickly check <code>_is_abelian</code> but maybe not <code>is_abelian</code>.",
  "id": "5c9cd770e422d1519929615e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-03-28T14:17:20.168Z",
  "text": "It would be possible to quickly check `_is_abelian` but maybe not `is_abelian`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 7
  },
  "html": "yes, so should I add the condition for <code>_is_abelian</code>?",
  "id": "5c9cd7f57160b422852bbd59",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-03-28T14:19:33.386Z",
  "text": "yes, so should I add the condition for `_is_abelian`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 7
  },
  "html": "It will be <code>None</code> for many cases but, it may help in some of the cases.",
  "id": "5c9cd8447160b422852bc299",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-03-28T14:20:52.836Z",
  "text": "It will be `None` for many cases but, it may help in some of the cases.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 36
  },
  "html": "That could be added, perhaps in a PR with some major additions.",
  "id": "5c9cdb418df8b02f0474ead6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-03-28T14:33:37.321Z",
  "text": "That could be added, perhaps in a PR with some major additions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 7
  },
  "html": "okay!",
  "id": "5c9cdb8e7160b422852bda5f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-03-28T14:34:54.794Z",
  "text": "okay!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 7
  },
  "html": "I think if <code>H</code> is a <code>subgroup</code> of <code>G</code> then the <code>identity</code> of H and G must be equal but for current master:<pre><code>&gt;&gt;&gt; S3 = <span class=\"function\"><span class=\"title\">SymmetricGroup</span><span class=\"params\">(<span class=\"number\">3</span>)</span></span>\n&gt;&gt;&gt; S5 = <span class=\"function\"><span class=\"title\">SymmetricGroup</span><span class=\"params\">(<span class=\"number\">5</span>)</span></span>\n&gt;&gt;&gt; S3.<span class=\"function\"><span class=\"title\">is_subgroup</span><span class=\"params\">(S5, strict=False)</span></span>\nTrue\n&gt;&gt;&gt; \n&gt;&gt;&gt; S3.<span class=\"function\"><span class=\"title\">identity</span><span class=\"params\">()</span></span>\n<span class=\"function\"><span class=\"title\">Permutation</span><span class=\"params\">(<span class=\"number\">2</span>)</span></span>\n&gt;&gt;&gt; \n&gt;&gt;&gt; S5.<span class=\"function\"><span class=\"title\">identity</span><span class=\"params\">()</span></span>\n<span class=\"function\"><span class=\"title\">Permutation</span><span class=\"params\">(<span class=\"number\">4</span>)</span></span>\n&gt;&gt;&gt;</code></pre>",
  "id": "5c9db856e2245b5109ce8f4d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-03-29T06:16:54.652Z",
  "text": "I think if `H` is a `subgroup` of `G` then the `identity` of H and G must be equal but for current master:\n```\n>>> S3 = SymmetricGroup(3)\n>>> S5 = SymmetricGroup(5)\n>>> S3.is_subgroup(S5, strict=False)\nTrue\n>>> \n>>> S3.identity()\nPermutation(2)\n>>> \n>>> S5.identity()\nPermutation(4)\n>>> \n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> please have a look!",
  "id": "5c9db86a51353e5a4db2995f",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2019-03-29T06:17:14.935Z",
  "text": "@jksuom please have a look!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 7
  },
  "html": "The above example is mentioned in the docstring of the function <code>is_subgroup</code>.",
  "id": "5c9db89ae422d151992f8242",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-03-29T06:18:02.814Z",
  "text": "The above example is mentioned in the docstring of the function `is_subgroup`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 7
  },
  "html": "<a href=\"https://math.stackexchange.com/questions/291374/show-identity-of-subgroup-is-same-as-identity-of-group\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Identity of subgroup is same as identity of group</a>",
  "id": "5c9db942aee5b449f3b0a5fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-03-29T06:20:50.201Z",
  "text": "[Identity of subgroup is same as identity of group](https://math.stackexchange.com/questions/291374/show-identity-of-subgroup-is-same-as-identity-of-group)",
  "unread": false,
  "urls": [
   {
    "url": "https://math.stackexchange.com/questions/291374/show-identity-of-subgroup-is-same-as-identity-of-group"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 36
  },
  "html": "Permutation groups of different degree have no common elements. However, there is a canonical way of embedding the group of smaller degree to the group of greater degree: permutations are simply extended with identity mapping. I think that this is how the groups should be compared (and that seems to be how it is customarily done). So, it is possible to say that a permutation group H is a subgroup of G even if it is lower degree that G.",
  "id": "5c9dc0871f98a87112bb85bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-03-29T06:51:51.468Z",
  "text": "Permutation groups of different degree have no common elements. However, there is a canonical way of embedding the group of smaller degree to the group of greater degree: permutations are simply extended with identity mapping. I think that this is how the groups should be compared (and that seems to be how it is customarily done). So, it is possible to say that a permutation group H is a subgroup of G even if it is lower degree that G.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 7
  },
  "html": "Thanks, I got it.",
  "id": "5c9dcedbe2245b5109cf2e27",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-03-29T07:52:59.413Z",
  "text": "Thanks, I got it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> please review this <a target=\"_blank\" data-link-type=\"pr\" data-issue=\"16522\" href=\"https://github.com/sympy/sympy/pull/16522\" data-provider=\"github\" data-issue-repo=\"sympy/sympy\" class=\"pr\">sympy/sympy#16522</a>.",
  "id": "5ca1db130aad6350190c3803",
  "issues": [
   {
    "number": "16522"
   },
   {
    "number": "16522",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2019-04-01T09:34:11.233Z",
  "text": "@jksuom please review this [PR #16522](https://github.com/sympy/sympy/pull/16522).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> <span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> I have added my 2019 GSoC Group Theory application please have a look and let me know if I have missed anything.<br><a href=\"https://github.com/sympy/sympy/wiki/GSoC-2019-Application-Divyanshu:-Group-Theory\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">GSoC 2019 Application Divyanshu: Group Theory</a> ",
  "id": "5ca725e4c55bd14d359154ef",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   },
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2019-04-05T09:54:44.042Z",
  "text": "@jksuom @asmeurer I have added my 2019 GSoC Group Theory application please have a look and let me know if I have missed anything.\n[GSoC 2019 Application Divyanshu: Group Theory](https://github.com/sympy/sympy/wiki/GSoC-2019-Application-Divyanshu:-Group-Theory) ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/wiki/GSoC-2019-Application-Divyanshu:-Group-Theory"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2019-04-17T11:15:07.343Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> please have a look at this PR <a target=\"_blank\" data-link-type=\"pr\" data-issue=\"16670\" href=\"https://github.com/sympy/sympy/pull/16670\" data-provider=\"github\" data-issue-repo=\"sympy/sympy\" class=\"pr\">sympy/sympy#16670</a>",
  "id": "5cb70a7f97dcb371d8c8fce1",
  "issues": [
   {
    "number": "16670"
   },
   {
    "number": "16670",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2019-04-17T11:14:07.954Z",
  "text": "@jksuom please have a look at this PR [#16670](https://github.com/sympy/sympy/pull/16670)",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 36
  },
  "html": "I think that &quot;abelian invariants&quot; should be defined. In particular, as the groups need not be abelian.",
  "id": "5cb70d912e2caa1aa671e7af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-04-17T11:27:13.654Z",
  "text": "I think that \"abelian invariants\" should be defined. In particular, as the groups need not be abelian.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 7
  },
  "html": "Should it be defined in docstrings? because the example test cases already covers that.",
  "id": "5cb70fd63d78aa6c034a3319",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-04-17T11:36:54.739Z",
  "text": "Should it be defined in docstrings? because the example test cases already covers that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 36
  },
  "html": "There could be references in docstrings.",
  "id": "5cb712fbb4700e023d884883",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-04-17T11:50:19.160Z",
  "text": "There could be references in docstrings.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 7
  },
  "html": "Okay, I&#39;ll include that.",
  "id": "5cb713358446a6023e2de6eb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-04-17T11:51:17.454Z",
  "text": "Okay, I'll include that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 7
  },
  "html": "I think these 2 references would be sufficient:<br><a href=\"https://webusers.imj-prg.fr/~jean.michel/gap3/htm/chap007.htm#SECT046\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Gap</a><br><a href=\"https://www.maplesoft.com/support/help/Maple/view.aspx?path=GroupTheory%2fAbelianInvariants\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Maple</a>",
  "id": "5cb719075b3f941aa5472b9a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-04-17T12:16:07.319Z",
  "text": "I think these 2 references would be sufficient: \n[Gap](https://webusers.imj-prg.fr/~jean.michel/gap3/htm/chap007.htm#SECT046)\n[Maple](https://www.maplesoft.com/support/help/Maple/view.aspx?path=GroupTheory%2fAbelianInvariants)",
  "unread": false,
  "urls": [
   {
    "url": "https://webusers.imj-prg.fr/~jean.michel/gap3/htm/chap007.htm#SECT046"
   },
   {
    "url": "https://www.maplesoft.com/support/help/Maple/view.aspx?path=GroupTheory%2fAbelianInvariants"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 36
  },
  "html": "It seems to me that the two definitions are different. Gap returns prime powers while Maple returns a list satisfying <code>d[i] | d[i+1]</code>.",
  "id": "5cb72279e416b84519942e76",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-04-17T12:56:25.772Z",
  "text": "It seems to me that the two definitions are different. Gap returns prime powers while Maple returns a list satisfying `d[i] | d[i+1]`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-04-17T13:30:58.364Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 7
  },
  "html": "Yes, thats right and for our implementation we have used Gap only. So, should we include Gap only? I thought it will be good to provide both for good theoretical overview. ",
  "id": "5cb72a606a84d76ed8ab35d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-04-17T13:30:08.699Z",
  "text": "Yes, thats right and for our implementation we have used Gap only. So, should we include Gap only? I thought it will be good to provide both for good theoretical overview. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 36
  },
  "html": "Perhaps the docstring could explain the meaning of the invariants. It could also point out that there is another possibility.",
  "id": "5cb7399b97dcb371d8ca5205",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-04-17T14:35:07.532Z",
  "text": "Perhaps the docstring could explain the meaning of the invariants. It could also point out that there is another possibility.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 7
  },
  "html": "Okay.",
  "id": "5cb739ee990feb4518b9382e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-04-17T14:36:30.660Z",
  "text": "Okay.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Is there any way to compute the <code>stabilizer</code> of a group on the basis of a given list?",
  "id": "5cd7b3175d48a24fd0b32bdb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-12T05:45:59.627Z",
  "text": "Is there any way to compute the `stabilizer` of a group on the basis of a given list?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Are you thinking of a group that is acting on a set like a permutation group?",
  "id": "5cd7b6ec5d48a24fd0b34187",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-12T06:02:20.890Z",
  "text": "Are you thinking of a group that is acting on a set like a permutation group?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Yes!",
  "id": "5cd7b75af52a23751619cfe8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-12T06:04:10.294Z",
  "text": "Yes!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": " Actually I&#39;m trying to compute the intersection of groups for that I have the difference between the 2-sets and I want to compute the stabilizer for a parent group using the set difference betwenn those 2 sets.<br>something like below:<br><code>G.stabilizer(set1.difference(set2));</code>",
  "id": "5cd7b8228fcdb05d47bfc829",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-12T06:07:30.387Z",
  "text": " Actually I'm trying to compute the intersection of groups for that I have the difference between the 2-sets and I want to compute the stabilizer for a parent group using the set difference betwenn those 2 sets.\nsomething like below:\n`G.stabilizer(set1.difference(set2));`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "There are two ways to define the stabilizer of a set depending on whether each element of the set has to be fixed or only the set is fixed with its element allowed to be permuted. Which definition do you mean?",
  "id": "5cd7c4b28fcdb05d47c01989",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-12T07:01:06.324Z",
  "text": "There are two ways to define the stabilizer of a set depending on whether each element of the set has to be fixed or only the set is fixed with its element allowed to be permuted. Which definition do you mean?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I think the fixed set will work!",
  "id": "5cd7c52356271260f949ba4e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-12T07:02:59.525Z",
  "text": "I think the fixed set will work!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-05-12T07:06:43.187Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "May be the link below will help in understanding the need:<br><a href=\"https://www.gap-system.org/Manuals/doc/ref/chap41.html#X86FB962786397E02\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">stabilizer</a>",
  "id": "5cd7c5ec0824230a771ec38f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-12T07:06:20.391Z",
  "text": "May be the link below will help in understanding the need:\n[stabilizer](https://www.gap-system.org/Manuals/doc/ref/chap41.html#X86FB962786397E02)",
  "unread": false,
  "urls": [
   {
    "url": "https://www.gap-system.org/Manuals/doc/ref/chap41.html#X86FB962786397E02"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "<blockquote>\nThe stabilizer of a set or tuple of points can be computed by specifying an action of sets or tuples of points.</blockquote>\n",
  "id": "5cd7c702f251e60ffa69eb9f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-12T07:10:58.478Z",
  "text": "> The stabilizer of a set or tuple of points can be computed by specifying an action of sets or tuples of points.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Maybe this is needed.",
  "id": "5cd7c70d8fcdb05d47c027e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-12T07:11:09.854Z",
  "text": "Maybe this is needed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Perhaps you should study the GAP implementation.",
  "id": "5cd7c7740824230a771ece7e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-12T07:12:52.019Z",
  "text": "Perhaps you should study the GAP implementation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "That&#39;s where I&#39;m facing the problem I&#39;m not able to find the implementation of actual function that is called!",
  "id": "5cd7c7d6252dbb751541debe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-12T07:14:30.764Z",
  "text": "That's where I'm facing the problem I'm not able to find the implementation of actual function that is called!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Here is the link to the <a href=\"https://github.com/gap-system/gap/blob/0479b40c661446d839b803b4b26a6f4e22061367/lib/oprt.gi#L2872\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">stabilizer</a> function but I&#39;m not able to find the implementation of <code>CallFuncList</code> that is called there!",
  "id": "5cd7c8fbf251e60ffa69f81e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-12T07:19:23.925Z",
  "text": "Here is the link to the [stabilizer](https://github.com/gap-system/gap/blob/0479b40c661446d839b803b4b26a6f4e22061367/lib/oprt.gi#L2872) function but I'm not able to find the implementation of `CallFuncList` that is called there!",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/gap-system/gap/blob/0479b40c661446d839b803b4b26a6f4e22061367/lib/oprt.gi#L2872"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Is it possible that it may have called from another library??",
  "id": "5cd7ca06f251e60ffa69fd27",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-12T07:23:50.192Z",
  "text": "Is it possible that it may have called from another library??",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "<blockquote>\nsrc/calls.c:**  &#39;FuncCALL_FUNC_LIST&#39; implements the internal function &#39;CallFuncList&#39;.</blockquote>\n",
  "id": "5cd7ca4a0824230a771edbb4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-12T07:24:58.989Z",
  "text": "> src/calls.c:**  'FuncCALL_FUNC_LIST' implements the internal function 'CallFuncList'.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Found it, thanks let me check if it helps!",
  "id": "5cd7cb0e56271260f949e153",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-12T07:28:14.701Z",
  "text": "Found it, thanks let me check if it helps!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> does it make any sense dividing an integer with the permutation<br>e.g:    1/(1,2,3)(4,5) = 3. I don&#39;t know how it will be 3!",
  "id": "5cde4baad522695bba58bd49",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-17T05:50:34.968Z",
  "text": "@jksuom does it make any sense dividing an integer with the permutation\ne.g:    1/(1,2,3)(4,5) = 3. I don't know how it will be 3!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Is that from SymPy? I think it could mean the application of inverse permutation.",
  "id": "5cde5ed775d9a575a6f6c1b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-17T07:12:23.039Z",
  "text": "Is that from SymPy? I think it could mean the application of inverse permutation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-05-17T07:27:24.128Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "No not from SymPy, It is there in Gap. The numerator can be any positive integer I think.<br><code>gap&gt; 4/(1,2,3)(4,5);</code><br><code>5</code>",
  "id": "5cde6240ef853135c8d48b2c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-17T07:26:56.329Z",
  "text": "No not from SymPy, It is there in Gap. The numerator can be any positive integer I think.\n`gap> 4/(1,2,3)(4,5);`\n`5`\n",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "That also looks like applying the inverse.",
  "id": "5cde7dceecdf942b4cf9c8f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-17T09:24:30.037Z",
  "text": "That also looks like applying the inverse.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<p>these are the results from SymPy and Gap:<br><code>4^(Permutation(1,2,3)(4,5)).inversions() = 7</code></p><p><code>4^(((1,2,3)(4,5))^(-1)); = 5</code></p>",
  "id": "5cde7f600ec37966a183d431",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-17T09:31:12.943Z",
  "text": "these are the results from SymPy and Gap:\n` 4^(Permutation(1,2,3)(4,5)).inversions() = 7`\n\n`4^(((1,2,3)(4,5))^(-1)); = 5`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Sorry, for the wrong interpretation I found the correct answer!",
  "id": "5ce052b46366992a94df270b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-18T18:45:08.251Z",
  "text": "Sorry, for the wrong interpretation I found the correct answer!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "The Quotient group of <code>G/H</code> can be directly defined by adding the  list of relators of group G to the generators of group H?? And, list of relators can be easily computed for an Fp group should I try adding it in Fp group?",
  "id": "5ce63afbad024978c61320b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-23T06:17:31.199Z",
  "text": "The Quotient group of `G/H` can be directly defined by adding the  list of relators of group G to the generators of group H?? And, list of relators can be easily computed for an Fp group should I try adding it in Fp group?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Adding the generators of the subgroup to the list of relators looks like a very natural way of constructing the subgroup. By &#39;adding it in Fp group&#39;, do you mean adding the construction?",
  "id": "5ce63ddc63dea422b4cd8b30",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-23T06:29:48.426Z",
  "text": "Adding the generators of the subgroup to the list of relators looks like a very natural way of constructing the subgroup. By 'adding it in Fp group', do you mean adding the construction?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I mean adding the functionality of computing the Quotient groups if the above deduction of Quotient group definition looks fine!",
  "id": "5ce63f4f63dea422b4cd9439",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-23T06:35:59.697Z",
  "text": "I mean adding the functionality of computing the Quotient groups if the above deduction of Quotient group definition looks fine!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that you could add that. I cannot remember what has been done already in that direction. I&#39;ll have to check.",
  "id": "5ce6417cad024978c61350bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-23T06:45:16.012Z",
  "text": "I think that you could add that. I cannot remember what has been done already in that direction. I'll have to check.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay, how can we compute the relators for a perm group do we need some more information about the group??",
  "id": "5ce6425075d9a575a62c7fd0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-23T06:48:48.931Z",
  "text": "Okay, how can we compute the relators for a perm group do we need some more information about the group??",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that there is a method for computing the kernel of a homomorphism. If you define a homomorphism from a free group to the permutation group (mapping free generators to permutation group generators), then the kernel should give the relators.",
  "id": "5ce6498363dea422b4cdddce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-23T07:19:31.853Z",
  "text": "I think that there is a method for computing the kernel of a homomorphism. If you define a homomorphism from a free group to the permutation group (mapping free generators to permutation group generators), then the kernel should give the relators.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I&#39;ve created a pr to compute composition series which I think will also be very helpful in defining polycyclic groups but I&#39;m facing some issues which I&#39;ve mentioned in the pr please have a look!<br><a target=\"_blank\" data-link-type=\"pr\" data-issue=\"16881\" href=\"https://github.com/sympy/sympy/pull/16881\" data-provider=\"github\" data-issue-repo=\"sympy/sympy\" class=\"pr\">sympy/sympy#16881</a>",
  "id": "5ce70edf0ac9852a952c299a",
  "issues": [
   {
    "number": "16881",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-05-23T21:21:35.709Z",
  "text": "I've created a pr to compute composition series which I think will also be very helpful in defining polycyclic groups but I'm facing some issues which I've mentioned in the pr please have a look! \nhttps://github.com/sympy/sympy/pull/16881",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-05-25T05:41:09.070Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I have tested the method with some cyclic groups. It seems to produce series with only two groups even if the group is not simple (i.e., of prime order).  For example, the composition series of  C4 should have a third nontrivial subgroup C2.",
  "id": "5ce8d4b7879f4478c7da750a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-25T05:37:59.984Z",
  "text": "I have tested the method with some cyclic groups. It seems to produce series with only two groups even if the group is not simple (i.e., of prime order).  For example, the composition series of  C4 should have a third nontrivial subgroup C2.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I realized that too but, I think it is working fine for other type of groups except cyclic groups have you checked for other groups?? may be we can handle cyclic groups separately or do you have any suggestions to improve the current implementation?? ",
  "id": "5ce8f3bab313d7231425a418",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-25T07:50:18.595Z",
  "text": "I realized that too but, I think it is working fine for other type of groups except cyclic groups have you checked for other groups?? may be we can handle cyclic groups separately or do you have any suggestions to improve the current implementation?? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I don&#39;t think it is a good idea to treat cyclic groups in separation. Cyclic groups of prime power order may appear as subquotients of any group and they should be handled properly. It looks like there is something in the implementation that should be changed.",
  "id": "5ce8f68bef853135c81d0756",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-25T08:02:19.955Z",
  "text": "I don't think it is a good idea to treat cyclic groups in separation. Cyclic groups of prime power order may appear as subquotients of any group and they should be handled properly. It looks like there is something in the implementation that should be changed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I think the derived_series for any cyclic group produces only 2-generators, please check it for once!",
  "id": "5ce94e7b75d9a575a6419c2c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-25T14:17:31.225Z",
  "text": "I think the derived_series for any cyclic group produces only 2-generators, please check it for once!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "In that case the outer-loop will iterate only for once.",
  "id": "5ce95170ecdf942b4c436733",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-25T14:30:08.994Z",
  "text": "In that case the outer-loop will iterate only for once.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "That single run of the loop has to create the whole series.",
  "id": "5ce97d81d22ba766a2fb1558",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-25T17:38:09.075Z",
  "text": "That single run of the loop has to create the whole series.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I would consider first a group with a single generator g (cyclic group). If its order is a prime power <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>p</mi><mi>e</mi></msup></mrow><annotation encoding=\"application/x-tex\">p^e</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.858832em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">e</span></span></span></span></span></span></span></span></span></span></span>, then there is a unique composition  series whose generators are <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>g</mi><mo separator=\"true\">,</mo><msup><mi>g</mi><mi>p</mi></msup><mo separator=\"true\">,</mo><msup><mi>g</mi><msup><mi>p</mi><mn>2</mn></msup></msup><mo separator=\"true\">,</mo><mo>\u2026</mo><mo separator=\"true\">,</mo><msup><mi>g</mi><msup><mi>p</mi><mi>e</mi></msup></msup><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">g, g^p, g^{p^2}, \\ldots, g^{p^e}=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.18136em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">p</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9869199999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913142857142857em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">\u2026</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.87998em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7385428571428572em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\">e</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>.",
  "id": "5cea230c879f4478c7e2c072",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T05:24:28.931Z",
  "text": "I would consider first a group with a single generator g (cyclic group). If its order is a prime power $$p^e$$, then there is a unique composition  series whose generators are $$g, g^p, g^{p^2}, \\ldots, g^{p^e}=1$$.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The innermost loop should create those generators by successively substituting <code>g = g**p</code>. I would build the code by starting from that loop.",
  "id": "5cea23bab313d723142d623c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T05:27:22.522Z",
  "text": "The innermost loop should create those generators by successively substituting `g = g**p`. I would build the code by starting from that loop.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay, I&#39;ll try it!!",
  "id": "5cea3b43d22ba766a2ff8d49",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T07:07:47.779Z",
  "text": "Okay, I'll try it!!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "In case of a general cyclic group that loop has to be repeated for each prime divisor of the order. So the next level loop could start with <code>for p, e in factorint(order).items()</code> and the innermost loop would iterate <code>e</code> times <code>g = g**p</code>.",
  "id": "5cea5b4a8f019114aebb3d45",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T09:24:26.313Z",
  "text": "In case of a general cyclic group that loop has to be repeated for each prime divisor of the order. So the next level loop could start with `for p, e in factorint(order).items()` and the innermost loop would iterate `e` times `g = g**p`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\nI would consider first a group with a single generator g (cyclic group). If its order is a prime power </blockquote>\n",
  "id": "5ceaa3deecdf942b4c4bd572",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T14:34:06.036Z",
  "text": "> I would consider first a group with a single generator g (cyclic group). If its order is a prime power \n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "So, this should be checked in the beginning for all groups with single  generators?",
  "id": "5ceaa3e0ecdf942b4c4bd575",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T14:34:08.461Z",
  "text": "So, this should be checked in the beginning for all groups with single  generators?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "No. That is the way I would start to create the code. First a simple case and then gradually enlarging the scope.",
  "id": "5ceaa5fc6366992a94254eac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T14:43:08.829Z",
  "text": "No. That is the way I would start to create the code. First a simple case and then gradually enlarging the scope.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "There are going to be several loops. I have described the two innermost loops above.",
  "id": "5ceaa62aecdf942b4c4be391",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T14:43:54.245Z",
  "text": "There are going to be several loops. I have described the two innermost loops above.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The next step would be the &quot;relative case&quot;: There is a normal subgroup  H and one generator g not in H. Then the generators of H should be added to the powers of g to get the composition sequence.",
  "id": "5ceaa6d163dea422b4eb7b39",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T14:46:41.806Z",
  "text": "The next step would be the \"relative case\": There is a normal subgroup  H and one generator g not in H. Then the generators of H should be added to the powers of g to get the composition sequence.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Am I right with this: for every elements in der[i].generators we calculate prime and its exponent and the first loop starts with every prime and then next loop will iterate for the range of exponents to the corresponding prime and inside this loop each time the element should be updated to element**p now finally the next group is lacking this updated element so add it with its previous generators?",
  "id": "5ceaa9c4ad024978c6311591",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T14:59:16.189Z",
  "text": "Am I right with this: for every elements in der[i].generators we calculate prime and its exponent and the first loop starts with every prime and then next loop will iterate for the range of exponents to the corresponding prime and inside this loop each time the element should be updated to element**p now finally the next group is lacking this updated element so add it with its previous generators?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The order of a generator is not a prime power, in general. So, for a given generator, we must loop over <code>p, e in factorint(order).items()</code>. The inner loop then has a fixed prime p.",
  "id": "5ceaad7bad024978c6312e23",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T15:15:07.706Z",
  "text": "The order of a generator is not a prime power, in general. So, for a given generator, we must loop over `p, e in factorint(order).items()`. The inner loop then has a fixed prime p.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The next higher level loop then runs over <code>g in der[i].generators</code>.",
  "id": "5ceaae0a7c363c75a748548c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T15:17:30.018Z",
  "text": "The next higher level loop then runs over `g in der[i].generators`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<pre><code><span class=\"keyword\">for</span> g <span class=\"keyword\">in</span> der[i]<span class=\"class\">.generators</span>:\n    <span class=\"keyword\">for</span> elm <span class=\"keyword\">in</span> g:\n        <span class=\"attribute\">order</span> = elm.<span class=\"function\"><span class=\"title\">order</span><span class=\"params\">()</span></span>\n        pows = []\n        <span class=\"keyword\">for</span> <span class=\"tag\">p</span>, e <span class=\"keyword\">in</span> <span class=\"function\"><span class=\"title\">factorint</span><span class=\"params\">(order)</span></span>.<span class=\"function\"><span class=\"title\">items</span><span class=\"params\">()</span></span>:\n            <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"function\"><span class=\"title\">range</span><span class=\"params\">(e)</span></span>:\n                <span class=\"keyword\">if</span> not elm <span class=\"keyword\">in</span> low:\n                    pows.<span class=\"function\"><span class=\"title\">append</span><span class=\"params\">(elm)</span></span>\n                elm = elm**<span class=\"tag\">p</span>\n        low = <span class=\"function\"><span class=\"title\">PermutationGroup</span><span class=\"params\">(gns + pows)</span></span> <span class=\"keyword\">if</span> pows <span class=\"keyword\">else</span> low</code></pre>",
  "id": "5ceab0156366992a9425981a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T15:26:13.434Z",
  "text": "```\nfor g in der[i].generators:\n\tfor elm in g:\n\t\torder = elm.order()\n\t\tpows = []\n        for p, e in factorint(order).items():\n            for j in range(e):\n            \tif not elm in low:\n                    pows.append(elm)\n                elm = elm**p\n        low = PermutationGroup(gns + pows) if pows else low\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "low is der[i+1], Is it okay!",
  "id": "5ceab08e0ac9852a95446ddd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T15:28:14.375Z",
  "text": "low is der[i+1], Is it okay!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that a generator g is a permutation. What do you mean by <code>elm in g</code>?",
  "id": "5ceab1586366992a9425a0a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T15:31:36.823Z",
  "text": "I think that a generator g is a permutation. What do you mean by `elm in g`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "ohh!, thats right so that loop should be erased ",
  "id": "5ceab1acad024978c6314bf4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T15:33:00.582Z",
  "text": "ohh!, thats right so that loop should be erased ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "everything else looks fine to you?",
  "id": "5ceab1c563dea422b4ebc94b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T15:33:25.917Z",
  "text": "everything else looks fine to you?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "We could have g instead of elm.",
  "id": "5ceab1dd879f4478c7e64d92",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T15:33:49.520Z",
  "text": "We could have g instead of elm.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "yes, that I&#39;ll do",
  "id": "5ceab2267c363c75a748714b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T15:35:02.158Z",
  "text": "yes, that I'll do\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Instead of <code>pows</code> we should append a group to a list that will be prepended to the final composition series.",
  "id": "5ceab249ad024978c6315039",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T15:35:37.943Z",
  "text": "Instead of `pows` we should append a group to a list that will be prepended to the final composition series.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay, so every <code>g</code> or <code>g**p</code> will be included in the composition series",
  "id": "5ceab2c313e9854e336e4619",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T15:37:39.942Z",
  "text": "Okay, so every `g` or `g**p` will be included in the composition series",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "There is no need to collect pows. The constructed power (denoted by g) is used to generate a permutation group together with the generators of H (that will start der[i] but will grow in the process as new generators g a handled).",
  "id": "5ceab2e46366992a9425ae50",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T15:38:12.641Z",
  "text": "There is no need to collect pows. The constructed power (denoted by g) is used to generate a permutation group together with the generators of H (that will start der[i] but will grow in the process as new generators g a handled).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It is the group generated by g together with the generators of H that is included in the composition series.",
  "id": "5ceab33eecdf942b4c4c3f55",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T15:39:42.920Z",
  "text": "It is the group generated by g together with the generators of H that is included in the composition series.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "But it may be best to have trivial H at first and test with cyclic groups.",
  "id": "5ceab388ad024978c631593f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T15:40:56.398Z",
  "text": "But it may be best to have trivial H at first and test with cyclic groups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-05-26T15:47:41.760Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "If we are not gonna create any list like pows so will we update the series with the permutation group of generators of H and <code>g**p</code> inside the loop",
  "id": "5ceab44d8f019114aebd9227",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T15:44:13.583Z",
  "text": "If we are not gonna create any list like pows so will we update the series with the permutation group of generators of H and `g**p` inside the loop",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "H and its generators are updated in an outer loop. They are constant in the two innermost loops.",
  "id": "5ceab526ef853135c8287460",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T15:47:50.083Z",
  "text": "H and its generators are updated in an outer loop. They are constant in the two innermost loops.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I mean if we are not gonna collect pows then for the group with fixed gens of H and changing <code>g**p</code> we have to update the final series in the loop itself .",
  "id": "5ceab5fe0ac9852a9544945a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T15:51:26.030Z",
  "text": "I mean if we are not gonna collect pows then for the group with fixed gens of H and changing `g**p` we have to update the final series in the loop itself .",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "<p>The last loop should be something like</p><pre><code>    <span class=\"keyword\">for</span> <span class=\"tag\">i</span> <span class=\"keyword\">in</span> <span class=\"function\"><span class=\"title\">range</span><span class=\"params\">(e)</span></span>:\n        series_segment.<span class=\"function\"><span class=\"title\">append</span><span class=\"params\">(PermutationGroup({g] + Hgens)</span></span>)\n        g = g**p</code></pre><p>There should be no need to save the powers of g. It is only the groups that we want.</p>",
  "id": "5ceab62b8f019114aebda0ff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T15:52:11.389Z",
  "text": "The last loop should be something like\n```\n    for i in range(e):\n        series_segment.append(PermutationGroup({g] + Hgens))\n        g = g**p\n```\nThere should be no need to save the powers of g. It is only the groups that we want.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-05-26T15:55:37.592Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "That segment is then prepended to the series to be returned  and cleared for the next g.",
  "id": "5ceab6bdef853135c8288280",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T15:54:37.807Z",
  "text": "That segment is then prepended to the series to be returned  and cleared for the next g.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay, I think I got it now!",
  "id": "5ceab70f13e9854e336e6496",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T15:55:59.683Z",
  "text": "Okay, I think I got it now!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Create first the code that can handle a cyclic group (with no Hgens).",
  "id": "5ceab74cd22ba766a202d023",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T15:57:00.628Z",
  "text": "Create first the code that can handle a cyclic group (with no Hgens).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay.",
  "id": "5ceab76d83ae782aeed497c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T15:57:33.458Z",
  "text": "Okay.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Then test it with cyclic groups.",
  "id": "5ceab77475d9a575a64aa531",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T15:57:40.547Z",
  "text": "Then test it with cyclic groups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "The length of the series seems correct, I&#39;ve tried with C4 but the series don&#39;t have C2. ",
  "id": "5ceabd457c363c75a748c69c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T16:22:29.198Z",
  "text": "The length of the series seems correct, I've tried with C4 but the series don't have C2. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It is not expected to have exactly C2 but an isomorphic group. (A group of order 2.)",
  "id": "5ceabd9b63dea422b4ec1e3d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T16:23:55.236Z",
  "text": "It is not expected to have exactly C2 but an isomorphic group. (A group of order 2.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "If C4 is generated by (0 1 2 3) then its square is (0 2)(1 3) and that generated a subgroup of order 2.",
  "id": "5ceabdfe7c363c75a748cec5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T16:25:34.327Z",
  "text": "If C4 is generated by (0 1 2 3) then its square is (0 2)(1 3) and that generated a subgroup of order 2.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay, then it&#39;s correct",
  "id": "5ceabe2a9d64e537bc157a27",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T16:26:18.865Z",
  "text": "Okay, then it's correct",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I&#39;ve tried with C12 as well and it has isomorphism groups of order 3,6,12. So, I think its working fine now.",
  "id": "5ceabeeab313d72314316368",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-26T16:29:30.046Z",
  "text": "I've tried with C12 as well and it has isomorphism groups of order 3,6,12. So, I think its working fine now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The new code looks like a good start but some changes are needed for general cases. The order of the next generator <code>g</code> should be the relative order, that is, the least integer <code>e</code> such that <code>g**e</code> is in H. They are the same when H is trivial but not in general. The relative order can be computed as <code>K.order//H.order()</code> where <code>K</code> is the group generated by <code>g</code> and <code>H</code>. (In other words, it is the order of the cyclic factor group <code>K/H</code>.)",
  "id": "5ceb8e0e9d64e537bc1ad81d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T07:13:18.691Z",
  "text": "The new code looks like a good start but some changes are needed for general cases. The order of the next generator `g` should be the relative order, that is, the least integer `e` such that `g**e` is in H. They are the same when H is trivial but not in general. The relative order can be computed as `K.order//H.order()` where `K` is the group generated by `g` and `H`. (In other words, it is the order of the cyclic factor group `K/H`.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Another matter is that, although the segments are most naturally built top-down by iterating <code>g = g**p</code>, the construction of the whole composition series if bottom-up. That means that each new segment of several groups must be added on top of the partial series, i.e, that should be <em>prepended</em> to the series under construction, not appended.",
  "id": "5ceb8ef37c363c75a74e3557",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T07:17:07.114Z",
  "text": "Another matter is that, although the segments are most naturally built top-down by iterating `g = g**p`, the construction of the whole composition series if bottom-up. That means that each new segment of several groups must be added on top of the partial series, i.e, that should be *prepended* to the series under construction, not appended.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay!",
  "id": "5ceb8f6675d9a575a65022f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T07:19:02.239Z",
  "text": "Okay!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Then, may be the identity group should also be inserted in the beginning.",
  "id": "5ceb8fef7c363c75a74e3bea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T07:21:19.378Z",
  "text": "Then, may be the identity group should also be inserted in the beginning.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think so. That would be the bottom of the series.",
  "id": "5ceb921bd22ba766a2087808",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T07:30:35.985Z",
  "text": "I think so. That would be the bottom of the series.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Once a new segment has been created and prepended to the series, <code>H</code> will be updated: <code>H = K</code>, the next generator <code>g</code> is taken, and new <code>K</code> will be computed (<code>g</code> is a generator of der[i] and <code>H</code> contains der[i+1]).",
  "id": "5ceb939e879f4478c7ec2caf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T07:37:02.056Z",
  "text": "Once a new segment has been created and prepended to the series, `H` will be updated: `H = K`, the next generator `g` is taken, and new `K` will be computed (`g` is a generator of der[i] and `H` contains der[i+1]).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "To calculate the order for <code>factorint</code> K will be updated for each <code>g**p</code> right!",
  "id": "5ceb944f9d64e537bc1b0410",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T07:39:59.859Z",
  "text": "To calculate the order for `factorint` K will be updated for each `g**p` right!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I&#39;ve pushed the above changes please have a look!",
  "id": "5ceb9794b313d7231436bb27",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T07:53:56.074Z",
  "text": "I've pushed the above changes please have a look!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that K should be updated only for each new generator g. Then all powers of <code>g</code> can be computed in the loop <code>p, e in factorint(order)</code> (where order is the relative order).",
  "id": "5ceb9912ad024978c6373f7a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T08:00:18.053Z",
  "text": "I think that K should be updated only for each new generator g. Then all powers of `g` can be computed in the loop `p, e in factorint(order)` (where order is the relative order).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "And, <code>H = K</code> then order will be 1 always?",
  "id": "5ceb9a6083ae782aeeda645c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T08:05:52.308Z",
  "text": "And, `H = K` then order will be 1 always?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Because <code>order = K.order//H.order()</code> so after the first generator it will always be 1 in that case",
  "id": "5ceb9af1879f4478c7ec5ec9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T08:08:17.317Z",
  "text": "Because `order = K.order//H.order()` so after the first generator it will always be 1 in that case",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The order will have to be computed before H is updated to K.",
  "id": "5ceb9db19d64e537bc1b41ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T08:20:01.564Z",
  "text": "The order will have to be computed before H is updated to K.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "It seems that the length of the final series atleast for SymmetricGroups gets reduced by 1.",
  "id": "5ceb9f16b313d7231436edd1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T08:25:58.298Z",
  "text": "It seems that the length of the final series atleast for SymmetricGroups gets reduced by 1.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I think only for SymmetricGroup(4)",
  "id": "5ceb9fa2b313d7231436f1c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T08:28:18.986Z",
  "text": "I think only for SymmetricGroup(4)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The order of S4 is <code>24 = 2**3*3</code> so the series should have 3 + 1 = 4 quotients and therefore 5 groups altogether.",
  "id": "5ceba0f575d9a575a6509f60",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T08:33:57.618Z",
  "text": "The order of S4 is `24 = 2**3*3` so the series should have 3 + 1 = 4 quotients and therefore 5 groups altogether.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-05-27T08:39:20.957Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "But, after using partial order it seems 4 only.",
  "id": "5ceba2327c363c75a74ebad2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T08:39:14.255Z",
  "text": "But, after using partial order it seems 4 only.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The trivial subgroup should be included.",
  "id": "5ceba2896366992a942bfb2e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T08:40:41.237Z",
  "text": "The trivial subgroup should be included.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Note that the code is not complete yet.",
  "id": "5ceba2c1879f4478c7ec92a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T08:41:37.881Z",
  "text": "Note that the code is not complete yet.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Yaa, I&#39;ve included the trivial group",
  "id": "5ceba2e17c363c75a74ec110",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T08:42:09.782Z",
  "text": "Yaa, I've included the trivial group\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>Note that the code is not complete yet.</p></blockquote>\n<p>that may be the reason</p>",
  "id": "5ceba329d22ba766a208f70c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T08:43:21.874Z",
  "text": "> Note that the code is not complete yet.\n\nthat may be the reason",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<pre><code><span class=\"keyword\">for</span> g <span class=\"keyword\">in</span> der[i]<span class=\"class\">.generators</span>:\n    K = <span class=\"function\"><span class=\"title\">PermutationGroup</span><span class=\"params\">([g] + Hgens)</span></span>\n    <span class=\"attribute\">order</span> = K.<span class=\"function\"><span class=\"title\">order</span><span class=\"params\">()</span></span> <span class=\"comment\">// H.order()</span>\n    series_segment = []\n    <span class=\"keyword\">for</span> <span class=\"tag\">p</span>, e <span class=\"keyword\">in</span> <span class=\"function\"><span class=\"title\">factorint</span><span class=\"params\">(order)</span></span>.<span class=\"function\"><span class=\"title\">items</span><span class=\"params\">()</span></span>:\n        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"function\"><span class=\"title\">range</span><span class=\"params\">(e)</span></span>:\n            series_segment.<span class=\"function\"><span class=\"title\">append</span><span class=\"params\">(PermutationGroup([g] + Hgens)</span></span>)\n            g = g**<span class=\"tag\">p</span>\n    H = K</code></pre>",
  "id": "5ceba3466366992a942bff1b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T08:43:50.042Z",
  "text": "```\nfor g in der[i].generators:\n    K = PermutationGroup([g] + Hgens)\n    order = K.order() // H.order()\n    series_segment = []\n    for p, e in factorint(order).items():\n        for j in range(e):\n            series_segment.append(PermutationGroup([g] + Hgens))\n            g = g**p\n    H = K\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Below is the current result for S4:<pre><code><span class=\"list\">[<span class=\"keyword\">PermutationGroup</span><span class=\"list\">(<span class=\"list\">[\n    <span class=\"list\">(<span class=\"keyword\">3</span>)</span>]), PermutationGroup<span class=\"list\">(<span class=\"list\">[\n    <span class=\"list\">(<span class=\"keyword\">0</span> <span class=\"number\">3</span>)</span><span class=\"list\">(<span class=\"keyword\">1</span> <span class=\"number\">2</span>)</span>]), PermutationGroup<span class=\"list\">(<span class=\"list\">[\n    <span class=\"list\">(<span class=\"keyword\">3</span>)</span><span class=\"list\">(<span class=\"keyword\">0</span> <span class=\"number\">2</span> <span class=\"number\">1</span>)</span>,\n    <span class=\"list\">(<span class=\"keyword\">0</span> <span class=\"number\">3</span>)</span><span class=\"list\">(<span class=\"keyword\">1</span> <span class=\"number\">2</span>)</span>,\n    <span class=\"list\">(<span class=\"keyword\">0</span> <span class=\"number\">2</span>)</span><span class=\"list\">(<span class=\"keyword\">1</span> <span class=\"number\">3</span>)</span>]), PermutationGroup<span class=\"list\">(<span class=\"list\">[\n    <span class=\"list\">(<span class=\"keyword\">0</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>)</span>,\n    <span class=\"list\">(<span class=\"keyword\">3</span>)</span><span class=\"list\">(<span class=\"keyword\">0</span> <span class=\"number\">1</span>)</span>])]</span></span></span></span></span></span></span></span></span></code></pre>",
  "id": "5ceba3a0b313d72314370db7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T08:45:20.430Z",
  "text": "Below is the current result for S4:\n```\n[PermutationGroup([\n    (3)]), PermutationGroup([\n    (0 3)(1 2)]), PermutationGroup([\n    (3)(0 2 1),\n    (0 3)(1 2),\n    (0 2)(1 3)]), PermutationGroup([\n    (0 1 2 3),\n    (3)(0 1)])]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "That  snippet looks good to me. Perhaps the long descriptive name <code>series_segment</code> that I gave above could be simply <code>seg</code> now that we know what it should mean.",
  "id": "5ceba3d0b313d72314370fbb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T08:46:08.660Z",
  "text": "That  snippet looks good to me. Perhaps the long descriptive name `series_segment` that I gave above could be simply `seg` now that we know what it should mean.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The groups should be decreasing order, trivial group last.",
  "id": "5ceba427879f4478c7ec9a55",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T08:47:35.888Z",
  "text": "The groups should be decreasing order, trivial group last.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "currently, the order is 1, 2, 12, 24 should it be reversed? or only the trivial group should acquire last posiiton",
  "id": "5ceba4c77c363c75a74ed04f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T08:50:15.509Z",
  "text": "currently, the order is 1, 2, 12, 24 should it be reversed? or only the trivial group should acquire last posiiton",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-05-27T08:51:10.308Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that the group generated by (0 3)(1 2) and (0 2)(1 3) is missing. That should be the derived group.",
  "id": "5ceba4dc6366992a942c0c13",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T08:50:36.858Z",
  "text": "I think that the group generated by (0 3)(1 2) and (0 2)(1 3) is missing. That should be the derived group.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The segment could be prepended by <code>series = seg + series</code>.",
  "id": "5ceba6b875d9a575a650ccb2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T08:58:32.945Z",
  "text": "The segment could be prepended by `series = seg + series`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "that&#39;s right, then the final order will be 1, 2, 12, 24.",
  "id": "5ceba7189d64e537bc1b8b3e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T09:00:08.349Z",
  "text": "that's right, then the final order will be 1, 2, 12, 24.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "der[1] is missing.",
  "id": "5ceba7cd0ac9852a954af510",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T09:03:09.470Z",
  "text": "der[1] is missing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Yes, I think that&#39;s right.",
  "id": "5ceba8a075d9a575a650da2a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T09:06:40.439Z",
  "text": "Yes, I think that's right.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The segment should not be cleared in the g loop. All generators should accumulate before the segment is prepended to series.",
  "id": "5cebac37ef853135c82ee47b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-27T09:21:59.269Z",
  "text": "The segment should not be cleared in the g loop. All generators should accumulate before the segment is prepended to series.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "If we&#39;ll prepend the seg then the groups in the series will be in increasing order but what <code>derived_series</code> follows is decreasing order of groups.",
  "id": "5cecb0a0879f4478c7f3e4a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-28T03:53:04.727Z",
  "text": "If we'll prepend the seg then the groups in the series will be in increasing order but what `derived_series` follows is decreasing order of groups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Good morning! I think finally <code>H</code> should have all those permutations that were missing so, <code>K</code> should be updated for every <code>g**p</code> and that will also suffice for S4 as well.",
  "id": "5cecb4389d64e537bc22e630",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-28T04:08:24.305Z",
  "text": "Good morning! I think finally `H` should have all those permutations that were missing so, `K` should be updated for every `g**p` and that will also suffice for S4 as well.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I  would describe the algorithm as follows. We start with the derived series. It is a normal series where each factor group is abelian but not simple, in general. The algorithm works by adding groups to the gap between <code>G = der[i]</code> and H = der[i + 1]`. This can be done independently for each i so the loop over I can be either ascending or descending.",
  "id": "5ced0607ad024978c6412098",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-28T09:57:27.423Z",
  "text": "I  would describe the algorithm as follows. We start with the derived series. It is a normal series where each factor group is abelian but not simple, in general. The algorithm works by adding groups to the gap between `G = der[i]` and H = der[i + 1]`. This can be done independently for each i so the loop over I can be either ascending or descending.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The task is easy because all subgroups of G that contain H are automatically normal (as all subgroups of the abelian group G/H are normal). The first step is to take the generators g of G and add them to generators of H one by one. That way we get an ascending series of subgroups containing H and ending at G.",
  "id": "5ced0718d22ba766a212b313",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-28T10:02:00.751Z",
  "text": "The task is easy because all subgroups of G that contain H are automatically normal (as all subgroups of the abelian group G/H are normal). The first step is to take the generators g of G and add them to generators of H one by one. That way we get an ascending series of subgroups containing H and ending at G.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-05-28T10:11:25.166Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The factor groups of that extended series iare not simple in general. Each group is obtained from the previous one by adding one generator g. If the previous group is denoted by H (which is the starting point) then the next group K is generated by g and H. The factor group K/H is cyclic, generated by the class of g. Its order is <code>K.order() // H.order()</code>. The series is then extended between K and H by groups generated by powers of g and H. This segment will be naturally generated in descending order unlike the groups obtained by adding generators of G one by one.",
  "id": "5ced08f0ecdf942b4c5c32e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-28T10:09:52.044Z",
  "text": "The factor groups of that extended series iare not simple in general. Each group is obtained from the previous one by adding one generator g. If the previous group is denoted by H (which is the starting point) then the next group K is generated by g and H. The factor group K/H is cyclic, generated by the class of g. Its order is `K.order() // H.order()`. The series is then extended between K and H by groups generated by powers of g and H. This segment will be naturally generated in descending order unlike the groups obtained by adding generators of G one by one.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Have a look at the last commit if it looks good to you.",
  "id": "5cee0b225de053468bd789b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-29T04:31:30.630Z",
  "text": "Have a look at the last commit if it looks good to you.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "That looks pretty close to what I had been expecting. I&#39;ll take some time to test it.",
  "id": "5cee271482c2dc79a5156aff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-29T06:30:44.053Z",
  "text": "That looks pretty close to what I had been expecting. I'll take some time to test it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay!",
  "id": "5cee276e82c2dc79a5156c68",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-29T06:32:14.338Z",
  "text": "Okay!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Meanwhile, you could think of adding a description of the construction to the docstring.",
  "id": "5cee3f695de053468bd8dbfe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-29T08:14:33.350Z",
  "text": "Meanwhile, you could think of adding a description of the construction to the docstring.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Yaa, I&#39;m on it!",
  "id": "5cee4e30f3a60a79a41b877f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-29T09:17:36.550Z",
  "text": "Yaa, I'm on it!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> I&#39;ve pushed a new dummy-implementation which I think should work for all the cases you please test it. Let&#39;s focus on correctness for now then we will go through the implementation!",
  "id": "5cef861d6f530d3b6107de1e",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-30T07:28:29.803Z",
  "text": "@jksuom I've pushed a new dummy-implementation which I think should work for all the cases you please test it. Let's focus on correctness for now then we will go through the implementation!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that you create the powers of g very inefficiently starting from the highest power. Can you change that?",
  "id": "5cef8d64faac6439340e24a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-30T07:59:32.074Z",
  "text": "I think that you create the powers of g very inefficiently starting from the highest power. Can you change that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I tried starting it with the lowest power but then it seems that for a Cyclicgroup it will always give only 2-groups in the final series the same problem which we&#39;ve encountered in the beginning.",
  "id": "5cef90b3faac6439340e3685",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-30T08:13:39.977Z",
  "text": "I tried starting it with the lowest power but then it seems that for a Cyclicgroup it will always give only 2-groups in the final series the same problem which we've encountered in the beginning.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-05-30T08:29:02.131Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that two types of segments are needed. When g is raised to power p, we&#39;ll get a subgroup. So we are going down appending to a <code>down_seg</code>. When new generators g are added, we&#39;ll get a supergroup. So we are going up prepending <code>down_seg</code> to a <code>up_seg</code>.",
  "id": "5cef943e6f530d3b610837ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-30T08:28:46.678Z",
  "text": "I think that two types of segments are needed. When g is raised to power p, we'll get a subgroup. So we are going down appending to a `down_seg`. When new generators g are added, we'll get a supergroup. So we are going up prepending `down_seg` to a `up_seg`.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It would probably help with the implementation if you would write a description of the algorithm in the docstring.",
  "id": "5cef9535bf4cbd167cfec4a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-05-30T08:32:53.908Z",
  "text": "It would probably help with the implementation if you would write a description of the algorithm in the docstring.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<p>Have a look at it!</p><pre><code><span class=\"keyword\">for</span> <span class=\"tag\">i</span> <span class=\"keyword\">in</span> <span class=\"function\"><span class=\"title\">range</span><span class=\"params\">(len(der)</span></span>-<span class=\"number\">1</span>):\n    seg = []\n    H = der[i+<span class=\"number\">1</span>]\n    <span class=\"keyword\">for</span> g <span class=\"keyword\">in</span> der[i]<span class=\"class\">.generators</span>:\n        <span class=\"keyword\">if</span> not g <span class=\"keyword\">in</span> H:\n            <span class=\"keyword\">for</span> pelm <span class=\"keyword\">in</span> <span class=\"function\"><span class=\"title\">prime_gens</span><span class=\"params\">(g)</span></span>:\n                <span class=\"attribute\">order</span> = pelm.<span class=\"function\"><span class=\"title\">order</span><span class=\"params\">()</span></span>\n                <span class=\"tag\">p</span> = <span class=\"function\"><span class=\"title\">list</span><span class=\"params\">(factorint(order)</span></span>.<span class=\"function\"><span class=\"title\">keys</span><span class=\"params\">()</span></span>)[<span class=\"number\">0</span>]\n                e = <span class=\"function\"><span class=\"title\">multiplicity</span><span class=\"params\">(p, order)</span></span>\n                <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"function\"><span class=\"title\">range</span><span class=\"params\">(e-<span class=\"number\">1</span>, -<span class=\"number\">1</span>, -<span class=\"number\">1</span>)</span></span>:\n                    qelm = pelm**(p**j)\n                    seg.<span class=\"function\"><span class=\"title\">append</span><span class=\"params\">(H)</span></span>\n                    H = <span class=\"function\"><span class=\"title\">PermutationGroup</span><span class=\"params\">([qelm] + H.generators)</span></span></code></pre><p>where, prime_gens is a function which returns only the prime power permutations for a given permutation, below is its definition:</p><pre><code>def <span class=\"function\"><span class=\"title\">prime_gens</span><span class=\"params\">(g)</span></span>:\n    <span class=\"attribute\">order</span> = g.<span class=\"function\"><span class=\"title\">order</span><span class=\"params\">()</span></span>\n    <span class=\"keyword\">if</span> <span class=\"attribute\">order</span> == <span class=\"number\">1</span>:\n        return []\n    f = []\n    <span class=\"keyword\">for</span> <span class=\"tag\">p</span>, e <span class=\"keyword\">in</span> <span class=\"function\"><span class=\"title\">factorint</span><span class=\"params\">(order)</span></span>.<span class=\"function\"><span class=\"title\">items</span><span class=\"params\">()</span></span>:\n        <span class=\"keyword\">for</span> <span class=\"tag\">i</span> <span class=\"keyword\">in</span> <span class=\"function\"><span class=\"title\">range</span><span class=\"params\">(e)</span></span>:\n            f.<span class=\"function\"><span class=\"title\">append</span><span class=\"params\">(p)</span></span>\n    <span class=\"keyword\">if</span> <span class=\"function\"><span class=\"title\">len</span><span class=\"params\">(list(set(f)</span></span>)) == <span class=\"number\">1</span>:\n        return [g]\n    <span class=\"keyword\">else</span>:\n        <span class=\"tag\">p</span> = f[<span class=\"number\">0</span>]\n        e = p*<span class=\"function\"><span class=\"title\">multiplicity</span><span class=\"params\">(p, order)</span></span>\n        r = <span class=\"attribute\">order</span><span class=\"comment\">//e</span>\n        gcd, cfa, cfb = <span class=\"function\"><span class=\"title\">Integer</span><span class=\"params\">(e)</span></span>.<span class=\"function\"><span class=\"title\">cofactors</span><span class=\"params\">(Integer(r)</span></span>)\n        pgens = <span class=\"function\"><span class=\"title\">prime_gens</span><span class=\"params\">(g**cfa)</span></span>\n        pgens.<span class=\"function\"><span class=\"title\">append</span><span class=\"params\">(g**cfb)</span></span>\n        return pgens</code></pre>",
  "id": "5cf230c1cea8295279d2fe0c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-06-01T08:01:05.587Z",
  "text": "Have a look at it!\n```\nfor i in range(len(der)-1):\n    seg = []\n    H = der[i+1]\n    for g in der[i].generators:\n        if not g in H:\n            for pelm in prime_gens(g):\n                order = pelm.order()\n                p = list(factorint(order).keys())[0]\n                e = multiplicity(p, order)\n                for j in range(e-1, -1, -1):\n                    qelm = pelm**(p**j)\n                    seg.append(H)\n                    H = PermutationGroup([qelm] + H.generators)\n```\n\nwhere, prime_gens is a function which returns only the prime power permutations for a given permutation, below is its definition:\n\n```\ndef prime_gens(g):\n    order = g.order()\n    if order == 1:\n        return []\n    f = []\n    for p, e in factorint(order).items():\n        for i in range(e):\n            f.append(p)\n    if len(list(set(f))) == 1:\n        return [g]\n    else:\n        p = f[0]\n        e = p*multiplicity(p, order)\n        r = order//e\n        gcd, cfa, cfb = Integer(e).cofactors(Integer(r))\n        pgens = prime_gens(g**cfa)\n        pgens.append(g**cfb)\n        return pgens\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "This is similar to the gap implementation.",
  "id": "5cf230e8f3a60a79a434e6a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-06-01T08:01:44.186Z",
  "text": "This is similar to the gap implementation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "This looks quite complicated. I am not sure that the gap implementation would be optimal for SymPy as its language is different. I think that it would help a lot if you would first describe the implementation (pseudocode, for example). ",
  "id": "5cf2481ef3a60a79a43578d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-06-01T09:40:46.806Z",
  "text": "This looks quite complicated. I am not sure that the gap implementation would be optimal for SymPy as its language is different. I think that it would help a lot if you would first describe the implementation (pseudocode, for example). ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that something like this should suffice:<pre><code>series = []\n<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(der)):\n    G, H = der[i], der[i+<span class=\"number\">1</span>]:\n    G_H_seg = []\n    <span class=\"keyword\">for</span> each generator g <span class=\"keyword\">of</span> <span class=\"attribute\">G</span>:\n        K = group generated <span class=\"keyword\">by</span> g <span class=\"keyword\">and</span> H\n        order = K.order() <span class=\"regexp\">//</span> H.order()\n        K_H_seg = []\n        <span class=\"keyword\">for</span> p, e <span class=\"keyword\">in</span> factorint(order):\n            <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> range(e):\n                K_H_seg.append(group generated <span class=\"keyword\">by</span> g <span class=\"keyword\">and</span> H)\n                g = g**p\n        G_H_seg = K_H_seg + G_H_seg  <span class=\"comment\"># prepended</span>\n        H = K   \n    G_H_seg[<span class=\"number\">0</span>] = G  <span class=\"comment\"># strip extra generators coming from H</span>\n    series.extend(G_H_seg)\n<span class=\"keyword\">return</span> series</code></pre>",
  "id": "5cf25505b76eac527a8493f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-06-01T10:35:49.115Z",
  "text": "I think that something like this should suffice:\n```\nseries = []\nfor i in range(len(der)):\n    G, H = der[i], der[i+1]:\n    G_H_seg = []\n    for each generator g of G:\n        K = group generated by g and H\n        order = K.order() // H.order()\n        K_H_seg = []\n        for p, e in factorint(order):\n            for k in range(e):\n                K_H_seg.append(group generated by g and H)\n                g = g**p\n        G_H_seg = K_H_seg + G_H_seg  # prepended\n        H = K   \n    G_H_seg[0] = G  # strip extra generators coming from H\n    series.extend(G_H_seg)\nreturn series\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Yes, that&#39;s looks fine!",
  "id": "5cf258c67c1dab468c81387c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-06-01T10:51:50.216Z",
  "text": "Yes, that's looks fine!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Good morning, Have you looked into the last commit?",
  "id": "5cf4aa6e6fc5846bab522cef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-06-03T05:04:46.341Z",
  "text": "Good morning, Have you looked into the last commit?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Regarding the implementation of Polycyclic group, since it is a subnormal series with cyclic factors and now we have the composition series so I think the <code>pc_series</code> can be represented as same as the composition series and about the <code>pcgroup</code> it can be presented in the form of how PermutationGroups are represented i.e. <code>PcGroup()</code> with the generators as the generators of first element in the composition series.<br>One more thing should the <code>class PcGroup</code> go into the existing perm_groups file or should we make a new file for this class?",
  "id": "5cf4abe59b50f63935725184",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-06-03T05:11:01.976Z",
  "text": "Regarding the implementation of Polycyclic group, since it is a subnormal series with cyclic factors and now we have the composition series so I think the `pc_series` can be represented as same as the composition series and about the `pcgroup` it can be presented in the form of how PermutationGroups are represented i.e. `PcGroup()` with the generators as the generators of first element in the composition series.\nOne more thing should the `class PcGroup` go into the existing perm_groups file or should we make a new file for this class?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Good morning. This version looks quite good. I&#39;ll need some more time to test it. I also have some suggestions for minor changes but those can wait until the main logic has been verified. As to perm_groups file, that is too big already (may have to be split some time) so a new file for pc groups is needed.",
  "id": "5cf4bc5b7c1dab468c90d439",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-06-03T06:21:15.968Z",
  "text": "Good morning. This version looks quite good. I'll need some more time to test it. I also have some suggestions for minor changes but those can wait until the main logic has been verified. As to perm_groups file, that is too big already (may have to be split some time) so a new file for pc groups is needed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay.",
  "id": "5cf4c24e5de053468b039ee7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-06-03T06:46:38.372Z",
  "text": "Okay.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "In the blog should I include the algorithm? even though it is there in the PR itself and I&#39;m providing the link to the PR as well.",
  "id": "5cf643e66fc5846bab5d1f18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-06-04T10:11:50.898Z",
  "text": "In the blog should I include the algorithm? even though it is there in the PR itself and I'm providing the link to the PR as well.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I don&#39;t think it would be necessary unless you feel like commenting on the implementation.",
  "id": "5cf647937c1dab468c9b381b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-06-04T10:27:31.137Z",
  "text": "I don't think it would be necessary unless you feel like commenting on the implementation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "So, I think a basic detail about composition series will work.",
  "id": "5cf647cd6fc5846bab5d38e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-06-04T10:28:29.935Z",
  "text": "So, I think a basic detail about composition series will work.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-06-07T05:58:50.988Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<p>This is the basic structure that I&#39;m thinking for polycyclic groups.</p><pre><code><span class=\"constant\">g</span> = CyclicGroup()\n<span class=\"constant\">pcg</span> = g.pc_group()\n<span class=\"constant\">pcg</span> = PcGroup(g.generators)  # if g is solvable\npcg.pc_series = g.composition_series()  <span class=\"comment\"># the subnormal series</span>\n`</code></pre><p>and some other methods for now like <code>relative_orders</code>, <code>is_prime_order</code>.<br>Ref: <a href=\"https://www.gap-system.org/Manuals/doc/ref/chap45.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.gap-system.org/Manuals/doc/ref/chap45.html</a></p><p>I also thought of doing it as subcategory of fp groups as it was done last year but, GAP says &quot;In theory pc groups are finitely presented groups. In practice the arithmetic in pc groups is different from the arithmetic in fp groups. Thus for technical reasons the pc groups do not form a subcategory of the fp groups and hence the methods for fp groups cannot be applied to pc groups in general.&quot; </p>",
  "id": "5cf9fb7c481ef4167be38e35",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-06-07T05:51:56.897Z",
  "text": "This is the basic structure that I'm thinking for polycyclic groups.\n```\ng = CyclicGroup()\npcg = g.pc_group()\npcg = PcGroup(g.generators)  # if g is solvable\npcg.pc_series = g.composition_series()  # the subnormal series\n````\nand some other methods for now like `relative_orders`, `is_prime_order`.\nRef: https://www.gap-system.org/Manuals/doc/ref/chap45.html\n\nI also thought of doing it as subcategory of fp groups as it was done last year but, GAP says \"In theory pc groups are finitely presented groups. In practice the arithmetic in pc groups is different from the arithmetic in fp groups. Thus for technical reasons the pc groups do not form a subcategory of the fp groups and hence the methods for fp groups cannot be applied to pc groups in general.\" ",
  "unread": false,
  "urls": [
   {
    "url": "https://www.gap-system.org/Manuals/doc/ref/chap45.html"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> please let me know what you think about this!",
  "id": "5cf9fb96faac64393453579e",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2019-06-07T05:52:22.399Z",
  "text": "@jksuom please let me know what you think about this!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It is clear that the structural elements of pc groups and fp groups are different. Therefore the methods are also different. I think that the situation can be compared with that of permutation groups. They are finite, hence finitely presented, but their methods are different. I think that the attributes and methods of pc groups could be developed independently of those of fp groups. If there is something in common, that can be handled afterwards.",
  "id": "5cfa19814dfb424004936890",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-06-07T08:00:01.842Z",
  "text": "It is clear that the structural elements of pc groups and fp groups are different. Therefore the methods are also different. I think that the situation can be compared with that of permutation groups. They are finite, hence finitely presented, but their methods are different. I think that the attributes and methods of pc groups could be developed independently of those of fp groups. If there is something in common, that can be handled afterwards.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "fine!",
  "id": "5cfa2008f3a60a79a46ab6d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-06-07T08:27:52.512Z",
  "text": "fine!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> I&#39;ve created a PR for polycyclic groups <a target=\"_blank\" data-link-type=\"pr\" data-issue=\"16991\" href=\"https://github.com/sympy/sympy/pull/16991\" data-provider=\"github\" data-issue-repo=\"sympy/sympy\" class=\"pr\">sympy/sympy#16991</a><br>There is a method named <code>pc_element_exponent</code> I&#39;m not sure about it&#39;s  correctness specifically, have a look!",
  "id": "5cfba6059b50f63935a216fc",
  "issues": [
   {
    "number": "16991",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2019-06-08T12:11:49.033Z",
  "text": "@jksuom I've created a PR for polycyclic groups https://github.com/sympy/sympy/pull/16991\nThere is a method named `pc_element_exponent` I'm not sure about it's  correctness specifically, have a look!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that you should create a new method for computing a polycyclic series. Composition series is not a good choice as its length is maximal. For example, the length of the composition series of a cyclic group is the number of prime divisors (counted with multiplicity) of the order while no subgroups are needed for an optimal polycyclic series.",
  "id": "5cfbdeef3dcdab4003102af2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-06-08T16:14:39.186Z",
  "text": "I think that you should create a new method for computing a polycyclic series. Composition series is not a good choice as its length is maximal. For example, the length of the composition series of a cyclic group is the number of prime divisors (counted with multiplicity) of the order while no subgroups are needed for an optimal polycyclic series.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Such a series can be constructed by simplifying the construction a composition series. That has three steps: derived series, addition of generators one by one and taking powers of those generators. For a polycyclic series the last step can be omitted. The subgroups generated by single generators are cyclic and there is no need to split them into smaller pieces. Keeping the number of generators small will simplify the computations.",
  "id": "5cfc992b6fc5846bab889bc6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-09T05:29:15.296Z",
  "text": "Such a series can be constructed by simplifying the construction a composition series. That has three steps: derived series, addition of generators one by one and taking powers of those generators. For a polycyclic series the last step can be omitted. The subgroups generated by single generators are cyclic and there is no need to split them into smaller pieces. Keeping the number of generators small will simplify the computations.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "So, we do not need to take powers of the generators?",
  "id": "5cfc9992bf4cbd167c55af31",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-09T05:30:58.522Z",
  "text": "So, we do not need to take powers of the generators?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "No. For example, if the group is cyclic, its sole generator will form a polycyclic presentation for the group. There is no need for new generators like <code>g1 = g**p</code> for which new relators <code>g**p = g1</code> will have to be added.",
  "id": "5cfc9a3ff3a60a79a47b5cc3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-09T05:33:51.657Z",
  "text": "No. For example, if the group is cyclic, its sole generator will form a polycyclic presentation for the group. There is no need for new generators like `g1 = g**p` for which new relators `g**p = g1` will have to be added.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay, got it!",
  "id": "5cfc9a72481ef4167bf54e23",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-09T05:34:42.832Z",
  "text": "Okay, got it!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "You could start by  writing a function for the construction of a polycyclic presentation, <code>def polycyclic_presentation(grp)</code>, for example.",
  "id": "5cfc9abfe41fe15e7538a157",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-09T05:35:59.747Z",
  "text": "You could start by  writing a function for the construction of a polycyclic presentation, `def polycyclic_presentation(grp)`, for example.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Which will represent the above polycyclic series?",
  "id": "5cfc9b0aff3f016baaccd114",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-09T05:37:14.379Z",
  "text": "Which will represent the above polycyclic series?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Polycyclic presentation could be defined as in the handbook: generators and relators. That does not mean that fp groups should be considered. In fact, I think that you could continue with permutation groups (though in the polycyclic module).",
  "id": "5cfc9bf0ff3f016baaccd6b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-09T05:41:04.147Z",
  "text": "Polycyclic presentation could be defined as in the handbook: generators and relators. That does not mean that fp groups should be considered. In fact, I think that you could continue with permutation groups (though in the polycyclic module).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay, I&#39;ll look into it!",
  "id": "5cfc9c426f530d3b61603853",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-09T05:42:26.948Z",
  "text": "Okay, I'll look into it!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "There could be a function, <code>polycyclic_presentation(grp)</code>. Its output could be used to construct PolycyclicGroup instances.",
  "id": "5cfc9c7f6fc5846bab88b267",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-09T05:43:27.952Z",
  "text": "There could be a function, `polycyclic_presentation(grp)`. Its output could be used to construct PolycyclicGroup instances.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay!",
  "id": "5cfc9d21faac6439346555b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-09T05:46:09.244Z",
  "text": "Okay!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Good morning. I think the <code>polycyclic_presentation</code> function in the handbook is similar to what we have <code>pcgs</code> which is computed via <code>_compute_pcgs</code> function in the current implementation.",
  "id": "5cfdbf853dcdab40031c264c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T02:25:09.954Z",
  "text": "Good morning. I think the `polycyclic_presentation` function in the handbook is similar to what we have `pcgs` which is computed via `_compute_pcgs` function in the current implementation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "And, in the computation of polycyclic series if we gonna directly add the missing generators that may lead to the situation where the first group in the series will not be equal to the group itself, that is <code>G = G1&gt;G2...= 1</code> will be violated. Should we manually append the first group as <code>G</code> in the series. ",
  "id": "5cfdc0b5faac6439346cc702",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T02:30:13.545Z",
  "text": "And, in the computation of polycyclic series if we gonna directly add the missing generators that may lead to the situation where the first group in the series will not be equal to the group itself, that is `G = G1>G2...= 1` will be violated. Should we manually append the first group as `G` in the series. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Can you give an example where the first group in a series would not be the whole group (when all generators have been included)?",
  "id": "5cfdec806f530d3b6168cdc1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T05:37:04.623Z",
  "text": "Can you give an example where the first group in a series would not be the whole group (when all generators have been included)?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<pre><code>&gt;&gt;&gt; g = PermutationGroup([Permutation(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>), Permutation(<span class=\"number\">1</span>,<span class=\"number\">3</span>)])\n&gt;&gt;&gt; g.series()\n[PermutationGroup([\n    (<span class=\"number\">4</span>)(<span class=\"number\">1</span> <span class=\"number\">3</span>),\n    (<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">4</span>),\n    (<span class=\"number\">1</span> <span class=\"number\">3</span>)(<span class=\"number\">2</span> <span class=\"number\">4</span>)]), PermutationGroup([\n    (<span class=\"number\">1</span> <span class=\"number\">3</span>)(<span class=\"number\">2</span> <span class=\"number\">4</span>)]), PermutationGroup([\n    (<span class=\"number\">4</span>)])]</code></pre>",
  "id": "5cfdf105e41fe15e75413efa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T05:56:21.804Z",
  "text": "```\n>>> g = PermutationGroup([Permutation(1,2,3,4), Permutation(1,3)])\n>>> g.series()\n[PermutationGroup([\n    (4)(1 3),\n    (1 2 3 4),\n    (1 3)(2 4)]), PermutationGroup([\n    (1 3)(2 4)]), PermutationGroup([\n    (4)])]\n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Starting with der[i+1], that&#39;s why I think (1,3)(2,4) also got included in the first  group.",
  "id": "5cfdf17084c08f541408854c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T05:58:08.038Z",
  "text": "Starting with der[i+1], that's why I think (1,3)(2,4) also got included in the first  group.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Where is that <code>series</code> method defined?",
  "id": "5cfdf3cb84c08f54140892f5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T06:08:11.832Z",
  "text": "Where is that `series` method defined?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<pre><code>def <span class=\"function\"><span class=\"title\">series</span><span class=\"params\">(self)</span></span>:\n    pc_series = []\n    der = self.<span class=\"function\"><span class=\"title\">derived_series</span><span class=\"params\">()</span></span>\n    <span class=\"keyword\">for</span> <span class=\"tag\">i</span> <span class=\"keyword\">in</span> <span class=\"function\"><span class=\"title\">range</span><span class=\"params\">(len(der)</span></span>-<span class=\"number\">1</span>):\n        H = der[i+<span class=\"number\">1</span>]\n        <span class=\"keyword\">for</span> g <span class=\"keyword\">in</span> der[i]<span class=\"class\">.generators</span>:\n            <span class=\"keyword\">if</span> not g <span class=\"keyword\">in</span> H:\n                H = <span class=\"function\"><span class=\"title\">PermutationGroup</span><span class=\"params\">([g] + H.generators)</span></span>\n        pc_series.<span class=\"function\"><span class=\"title\">append</span><span class=\"params\">(H)</span></span>\n    pc_series.<span class=\"function\"><span class=\"title\">append</span><span class=\"params\">(der[-<span class=\"number\">1</span>])</span></span>\n    return pc_series</code></pre>",
  "id": "5cfdf4be481ef4167bfde447",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T06:12:14.894Z",
  "text": "```\ndef series(self):\n\tpc_series = []\n\tder = self.derived_series()\n\tfor i in range(len(der)-1):\n\t\tH = der[i+1]\n\t\tfor g in der[i].generators:\n\t\t\tif not g in H:\n\t\t\t\tH = PermutationGroup([g] + H.generators)\n\t\tpc_series.append(H)\n\tpc_series.append(der[-1])\n\treturn pc_series\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that <code>pc_series.append(H)</code> should be in the g loop.",
  "id": "5cfdfca94dfb424004ad1297",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T06:46:01.095Z",
  "text": "I think that `pc_series.append(H)` should be in the g loop.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "That will eventually increase the number of groups in the series and I&#39;m confused how it can be better then the composition series for computation!",
  "id": "5cfdfe39d4e3840c695f44b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T06:52:41.743Z",
  "text": "That will eventually increase the number of groups in the series and I'm confused how it can be better then the composition series for computation!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It should also be prepended.",
  "id": "5cfdfe49bf4cbd167c5ea01e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T06:52:57.624Z",
  "text": "It should also be prepended.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The factors of the series should be cyclic.",
  "id": "5cfdfe72faac6439346e3c82",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T06:53:38.963Z",
  "text": "The factors of the series should be cyclic.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "A group with several generators is not cyclic in general. The generators must be added one by one.",
  "id": "5cfdfeb6d4e3840c695f488a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T06:54:46.625Z",
  "text": "A group with several generators is not cyclic in general. The generators must be added one by one.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>Good morning. I think the <code>polycyclic_presentation</code> function in the handbook is similar to what we have <code>pcgs</code> which is computed via <code>_compute_pcgs</code> function in the current implementation.</p></blockquote>\n<p>Have you looked into it?</p>",
  "id": "5cfdff8c84c08f541408dccc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T06:58:20.738Z",
  "text": "> Good morning. I think the `polycyclic_presentation` function in the handbook is similar to what we have `pcgs` which is computed via `_compute_pcgs` function in the current implementation.\n\nHave you looked into it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "No, not yet. But I think that <code>_compute_pcgs</code> has the same purpose.",
  "id": "5cfe010f65392c3b60edbecf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T07:04:47.414Z",
  "text": "No, not yet. But I think that `_compute_pcgs` has the same purpose.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay!",
  "id": "5cfe013965392c3b60edbfa0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T07:05:29.042Z",
  "text": "Okay!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Where did you find that <code>_compute_pcgs</code>?",
  "id": "5cfe01ed6fc5846bab91a277",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T07:08:29.844Z",
  "text": "Where did you find that `_compute_pcgs`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Actually GAP computes pcgs and pc_series and just looking at the pattern in the output of few of the groups that I tested I thought this is what it is actually computing.",
  "id": "5cfe052d65392c3b60edde8b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T07:22:21.773Z",
  "text": "Actually GAP computes pcgs and pc_series and just looking at the pattern in the output of few of the groups that I tested I thought this is what it is actually computing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Initially I also thought of using this to make instances but then I thought I would be a big list to represent that&#39;s why I asked you here few times that, Is representing  the PcGroup is fine with just the generators of the group.",
  "id": "5cfe05baf3a60a79a4847ec5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T07:24:42.001Z",
  "text": "Initially I also thought of using this to make instances but then I thought I would be a big list to represent that's why I asked you here few times that, Is representing  the PcGroup is fine with just the generators of the group.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that it is important to have the relators as well.",
  "id": "5cfe06f34dfb424004ad4fd7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T07:29:55.420Z",
  "text": "I think that it is important to have the relators as well.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "In polycyclic series?",
  "id": "5cfe07974dfb424004ad52dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T07:32:39.183Z",
  "text": "In polycyclic series?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "In representing a pc group.",
  "id": "5cfe08573dcdab40031dfdfe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T07:35:51.602Z",
  "text": "In representing a pc group.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Yes, but I think the list will be big enough to represent!",
  "id": "5cfe08a6e41fe15e7541daf6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T07:37:10.870Z",
  "text": "Yes, but I think the list will be big enough to represent!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It probably cannot be avoided.",
  "id": "5cfe08cdd4e3840c695f86d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T07:37:49.735Z",
  "text": "It probably cannot be avoided.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay, let&#39;s try!",
  "id": "5cfe093a702b7e5e765d332e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T07:39:38.439Z",
  "text": "Okay, let's try!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The series can be derived from the generators. So it is not necessary to spell out each subgroup explicitly. Did you mean that?",
  "id": "5cfe0970ff3f016baad60f6d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T07:40:32.886Z",
  "text": "The series can be derived from the generators. So it is not necessary to spell out each subgroup explicitly. Did you mean that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Yes, I thought of this.",
  "id": "5cfe09bdbf4cbd167c5ee3d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T07:41:49.913Z",
  "text": "Yes, I thought of this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The series will consist of groups generated by tail segments of the generator sequence.",
  "id": "5cfe09c465392c3b60edfdad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T07:41:56.486Z",
  "text": "The series will consist of groups generated by tail segments of the generator sequence.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The groups will appear in the construction of the series (der, etc...) but it looks like only the generator sequence need be preserved.",
  "id": "5cfe0a096fc5846bab91dd4f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T07:43:05.115Z",
  "text": "The groups will appear in the construction of the series (der, etc...) but it looks like only the generator sequence need be preserved.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "And, I think it actually does not matter much because finally we can convert the PcGroup(.....) into the permutationgroup then I though we can have composition series and we can compute everything like <code>pcgs</code>, <code>pc_series</code> etc.",
  "id": "5cfe0a4a3dcdab40031e0ce4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T07:44:10.746Z",
  "text": "And, I think it actually does not matter much because finally we can convert the PcGroup(.....) into the permutationgroup then I though we can have composition series and we can compute everything like `pcgs`, `pc_series` etc.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "But as I pointed out before, composition series is too big, in general.",
  "id": "5cfe0a904dfb424004ad66a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T07:45:20.121Z",
  "text": "But as I pointed out before, composition series is too big, in general.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "hmm.... It seems a problem!",
  "id": "5cfe0ab1e41fe15e7541e917",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T07:45:53.180Z",
  "text": "hmm.... It seems a problem!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I don&#39;t think so. There is no need to take the whole composition series. The <code>series</code> you had above should suffice.",
  "id": "5cfe0af2faac6439346e91ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T07:46:58.738Z",
  "text": "I don't think so. There is no need to take the whole composition series. The `series` you had above should suffice.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that the hardest part is finding the relators.",
  "id": "5cfe0b1584c08f54140925a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T07:47:33.080Z",
  "text": "I think that the hardest part is finding the relators.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "You could start by looking at a cyclic (permutation) group with generator g. If h is another element of the group, then it is a power of g. Its exponent should be found.",
  "id": "5cfe0b896fc5846bab91e651",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T07:49:29.470Z",
  "text": "You could start by looking at a cyclic (permutation) group with generator g. If h is another element of the group, then it is a power of g. Its exponent should be found.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-06-10T08:03:53.631Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "If we have a pc group G with 2 generators, g and h (in that order), then h generates a normal cyclic subgroup H and a <code>g**e</code> is in H for some e. Then it is equal to <code>h**f</code> for some f. The task is to find f.",
  "id": "5cfe0ed54dfb424004ad84be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T08:03:33.810Z",
  "text": "If we have a pc group G with 2 generators, g and h (in that order), then h generates a normal cyclic subgroup H and a `g**e` is in H for some e. Then it is equal to `h**f` for some f. The task is to find f.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay, I&#39;ll try and let you know!!",
  "id": "5cfe0fe3ff3f016baad63da4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T08:08:03.280Z",
  "text": "Okay, I'll try and let you know!!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It looks like we would need something like PcGroupWithPcgs in GAP. That is using a function called SingleCollector (that has something to do with rewriting, I think).",
  "id": "5cfe347984c08f54140a4b12",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T10:44:09.348Z",
  "text": "It looks like we would need something like PcGroupWithPcgs in GAP. That is using a function called SingleCollector (that has something to do with rewriting, I think).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I think it&#39;s something like free group presentation kind of thing.",
  "id": "5cfe42363dcdab40031f8fc2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T11:42:46.934Z",
  "text": "I think it's something like free group presentation kind of thing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "and the rewriting code looks scary. ",
  "id": "5cfe467584c08f54140acb1d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T12:00:53.821Z",
  "text": "and the rewriting code looks scary. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "GAP code is not easy to understand. SymPy&#39;s rewritingsystem is not so hard.",
  "id": "5cfe47cef3a60a79a4868992",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T12:06:38.378Z",
  "text": "GAP code is not easy to understand. SymPy's rewritingsystem is not so hard.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that the collection algorithm of the handbook (8.1.3) could be used for building a polycyclic presentation from the bottom up.",
  "id": "5cfe4d8b82c2dc79a5818766",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T12:31:07.486Z",
  "text": "I think that the collection algorithm of the handbook (8.1.3) could be used for building a polycyclic presentation from the bottom up.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It seems that a polycyclic presentation has to exist. So it cannot be used to create one. Perhaps we could start with any presentation and use rewriting to convert it to a polycyclic presentation.",
  "id": "5cfe511b702b7e5e765f4bda",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T12:46:19.899Z",
  "text": "It seems that a polycyclic presentation has to exist. So it cannot be used to create one. Perhaps we could start with any presentation and use rewriting to convert it to a polycyclic presentation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Yes, I think for now we should use the current pcgs implemented and we&#39;ll improve it later on!",
  "id": "5cfe564384c08f54140b416d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T13:08:19.608Z",
  "text": "Yes, I think for now we should use the current pcgs implemented and we'll improve it later on!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Once we compute the presentation via above algorithm mentioned.",
  "id": "5cfe569af3a60a79a48708eb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T13:09:46.616Z",
  "text": "Once we compute the presentation via above algorithm mentioned.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Seems like we have to implement 2 functions <code>collected word</code> and <code>minimal uncollected subword</code>.",
  "id": "5cfe5963bf4cbd167c613720",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-10T13:21:39.049Z",
  "text": "Seems like we have to implement 2 functions `collected word` and `minimal uncollected subword`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Can you please help me to understand the collection algorithm:<br>What does it say like given a Pc_Presentation(list) suppose something like<br><code>Pc = [(1, 2, 3, 4), (1, 3)]</code> and the relative order vector like <code>Re = [0, 2]</code> now, the generator of the group <code>g</code> can be computed by taking summation of <code>Pc[i]**Re[i]</code> over the length.",
  "id": "5cff845b4dfb424004b7b523",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-11T10:37:15.661Z",
  "text": "Can you please help me to understand the collection algorithm:\nWhat does it say like given a Pc_Presentation(list) suppose something like \n`Pc = [(1, 2, 3, 4), (1, 3)]` and the relative order vector like `Re = [0, 2]` now, the generator of the group `g` can be computed by taking summation of `Pc[i]**Re[i]` over the length.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Is that from GAP?",
  "id": "5cff904b3dcdab400328832a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-11T11:28:11.020Z",
  "text": "Is that from GAP?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "No, I&#39;m generally asking about it!",
  "id": "5cff906fd4e3840c696a3572",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-11T11:28:47.687Z",
  "text": "No, I'm generally asking about it!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "But what do the names mean? <code>Pc[i]</code> is a permutation? Where does that come from?",
  "id": "5cff90cbfb90a50459f0f6e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-11T11:30:19.060Z",
  "text": "But what do the names mean? `Pc[i]` is a permutation? Where does that come from?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<code>Pc</code> is the <code>pcgs</code> about which we have talked above.",
  "id": "5cff9132faac64393478fb4d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-11T11:32:02.280Z",
  "text": "`Pc` is the `pcgs` about which we have talked above.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "OK, I thought so.",
  "id": "5cff9143fb90a50459f0fb4a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-11T11:32:19.245Z",
  "text": "OK, I thought so.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "If you have any element of the group generated by <code>Pc</code>, then you start by finding an exponent <code>Re[0]</code> such that <code>Pc[0]**-Re[0]*g</code> is in the subgroup generated by <code>Pc[1]</code>.",
  "id": "5cff91cd65392c3b60f8e568",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-11T11:34:37.759Z",
  "text": "If you have any element of the group generated by `Pc`, then you start by finding an exponent `Re[0]` such that `Pc[0]**-Re[0]*g` is in the subgroup generated by `Pc[1]`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Actually, I&#39;m talking about the <code>LEMMA 8.12</code> from the handbook.",
  "id": "5cff95e86f530d3b6174696e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-11T11:52:08.334Z",
  "text": "Actually, I'm talking about the `LEMMA 8.12` from the handbook.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "they are using fp group presentation and a word is also given on the basis of which generators are calculated I think.",
  "id": "5cff967f481ef4167b093170",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-11T11:54:39.168Z",
  "text": "they are using fp group presentation and a word is also given on the basis of which generators are calculated I think.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I mean to apply the collection algorithm we should have the presentation and also the relative order which can only be computed via presentation and then it can only be used to solve the word problem or may be to represent the presentation in word format.",
  "id": "5cff988a702b7e5e76683ac6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-11T12:03:22.827Z",
  "text": "I mean to apply the collection algorithm we should have the presentation and also the relative order which can only be computed via presentation and then it can only be used to solve the word problem or may be to represent the presentation in word format.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "We should be able to create pc presentations for testing these algorithms. I&#39;ll try to see what lemma 8.12 is expecting.",
  "id": "5cff9e6160d8500457076aa2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-11T12:28:17.206Z",
  "text": "We should be able to create pc presentations for testing these algorithms. I'll try to see what lemma 8.12 is expecting.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that the proof of lemma 8.3 shows how the representation is obtained step by step.",
  "id": "5cffc17c6fc5846bab9dda8d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-11T14:58:04.320Z",
  "text": "I think that the proof of lemma 8.3 shows how the representation is obtained step by step.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-06-11T17:00:29.099Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "BTW, don&#39;t forget to write in your weekly blog what you have been doing. (It does not have to be about PR&#39;s only.)",
  "id": "5cffdde5ff3f016baae2e09d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-11T16:59:17.754Z",
  "text": "BTW, don't forget to write in your weekly blog what you have been doing. (It does not have to be about PR's only.)",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Yes, today I&#39;ve updated with this week status!",
  "id": "5cffe290051da7532d7fbfe8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-11T17:19:12.072Z",
  "text": "Yes, today I've updated with this week status!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>I think that the proof of lemma 8.3 shows how the representation is obtained step by step.</p></blockquote>\n<p>It&#39;s mentioned in the lemma 8.1 but what I understood is lemma 8.3 is more about generating an induced polycyclic sequence for a subgroup of a given polycyclic group for which the polycyclic sequence should be known.</p>",
  "id": "5d006e9841e4df532e0ad9ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-12T03:16:40.312Z",
  "text": "> I think that the proof of lemma 8.3 shows how the representation is obtained step by step.\n\nIt's mentioned in the lemma 8.1 but what I understood is lemma 8.3 is more about generating an induced polycyclic sequence for a subgroup of a given polycyclic group for which the polycyclic sequence should be known.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<p>Till now, my understanding of collection algorithm is outlined below:</p><pre><code>Input:\nA pc presentation <span class=\"keyword\">with</span> generators {g1, g2, ...., gn};\n<span class=\"keyword\">and</span>, A <span class=\"property\">word</span> W <span class=\"keyword\">in</span> {g1, g2, ...., gn};\nOutput:\nA normal <span class=\"property\">word</span> W equivalent <span class=\"keyword\">to</span> <span class=\"keyword\">the</span> input <span class=\"property\">word</span>;</code></pre><p>Now, my question is how it is related to the computation of the presentation at all when it is entirely based on the given pc presentation?? </p>",
  "id": "5d00708c1e3322612ab5c7ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-12T03:25:00.371Z",
  "text": "Till now, my understanding of collection algorithm is outlined below:\n```\nInput:\nA pc presentation with generators {g1, g2, ...., gn};\nand, A word W in {g1, g2, ...., gn};\nOutput:\nA normal word W equivalent to the input word;\n```\nNow, my question is how it is related to the computation of the presentation at all when it is entirely based on the given pc presentation?? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Collection algorithm is not an algorithm for constructing a pc presentation. It is assumed that a pc presentation is given and then the collection algorithm will transform any representation of an element of the group (as a word in generators) into a normal form representation <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msubsup><mi>x</mi><mn>1</mn><msub><mi>e</mi><mn>1</mn></msub></msubsup><mo>\u22ef</mo><msubsup><mi>x</mi><mi>n</mi><msub><mi>e</mi><mi>n</mi></msub></msubsup></mrow><annotation encoding=\"application/x-tex\">x_1^{e_1}\\cdots x_n^{e_n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0126em;vertical-align:-0.266308em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.746292em;\"><span style=\"top:-2.433692em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span><span style=\"top:-3.1449000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">\u200b</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">\u200b</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.266308em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">\u22ef</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16454285714285719em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">\u200b</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">\u200b</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span></span></span>. Other methods have to be used for <em>finding</em> pc presentations, methods that are based on rewriting, it seems.",
  "id": "5d0093691edaa30adf08840b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-12T05:53:45.256Z",
  "text": "Collection algorithm is not an algorithm for constructing a pc presentation. It is assumed that a pc presentation is given and then the collection algorithm will transform any representation of an element of the group (as a word in generators) into a normal form representation $$x_1^{e_1}\\cdots x_n^{e_n}$$. Other methods have to be used for *finding* pc presentations, methods that are based on rewriting, it seems.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "So, for now should we focus on collection algo implementation with some random fp group??",
  "id": "5d00988741e4df532e0be33a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-12T06:15:35.926Z",
  "text": "So, for now should we focus on collection algo implementation with some random fp group??",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I was hoping that you would actually construct pc presentations but if that looks hard maybe GAP could provide examples that could be used for testing an implementation of the collection algorithm. (I thought that the algorithm could also be used for the construction of pc presentations but it looks like I was mistaken.) So there seem to be two ways to proceed. 1) Implement an algorithm for finding pc presentations for a given pcgs, or 2) Construct some example presentations by hand (GAP, for example) and use them for testing the collection algorithm.",
  "id": "5d009d5f23ebdc57c3dcb5a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-12T06:36:15.889Z",
  "text": "I was hoping that you would actually construct pc presentations but if that looks hard maybe GAP could provide examples that could be used for testing an implementation of the collection algorithm. (I thought that the algorithm could also be used for the construction of pc presentations but it looks like I was mistaken.) So there seem to be two ways to proceed. 1) Implement an algorithm for finding pc presentations for a given pcgs, or 2) Construct some example presentations by hand (GAP, for example) and use them for testing the collection algorithm.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Note that the collection algorithm only works with a pc presentation, now with a random fp group.",
  "id": "5d00a2ab2d3f89045fa672b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-12T06:58:51.681Z",
  "text": "Note that the collection algorithm only works with a pc presentation, now with a random fp group.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Then, may be we have to take some examples from the gap and work accordingly!",
  "id": "5d00a439c7a8fc263a0bbb3c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-12T07:05:29.693Z",
  "text": "Then, may be we have to take some examples from the gap and work accordingly!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<pre><code>&gt;&gt;&gt; F, x1, x2 = free_group(\"x1, x2\")\n&gt;&gt;&gt; w = x2<span class=\"strong\">**2*x1**</span>7\n&gt;&gt;&gt; type(list(w.array_form)[<span class=\"link_label\">0</span>][<span class=\"link_reference\">0</span>]) == type(x1)\nFalse</code></pre>How to get the same type of both i.e <code>FreeGroupElement</code>?",
  "id": "5d01fa0e8655842639ef9fa0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-13T07:23:58.551Z",
  "text": "```\n>>> F, x1, x2 = free_group(\"x1, x2\")\n>>> w = x2**2*x1**7\n>>> type(list(w.array_form)[0][0]) == type(x1)\nFalse\n\n```\nHow to get the same type of both i.e `FreeGroupElement`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that they have been planned to have different types. The object in the array form is a Symbol. That is used when a symbol is needed, e.g., for printing. The symbol <code>s = w.array_form[0][0]</code> can be transformed to the corresponding group element of F by <code>F.dtype(((s, 1),))</code>.",
  "id": "5d0201e472e5732607927381",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-13T07:57:24.658Z",
  "text": "I think that they have been planned to have different types. The object in the array form is a Symbol. That is used when a symbol is needed, e.g., for printing. The symbol `s = w.array_form[0][0]` can be transformed to the corresponding group element of F by `F.dtype(((s, 1),))`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "thanks!",
  "id": "5d020383c12fd52664fc1e60",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-13T08:04:19.891Z",
  "text": "thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Can&#39;t we do same for the complete word?",
  "id": "5d0318d244ed26263dd3d867",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-14T03:47:30.249Z",
  "text": "Can't we do same for the complete word?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that it should be possible like this <code>F.dtype(((a, 2), (b, -1), (c, 1)))</code>.",
  "id": "5d032dc1d100e447fc0f2789",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-14T05:16:49.273Z",
  "text": "I think that it should be possible like this `F.dtype(((a, 2), (b, -1), (c, 1)))`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "The collection algorithm has been implemented and I&#39;ve provided an example for every function (from Handbook) so that it will be easy to understand the purpose of every function. But, still I&#39;m facing the problem of type conversion as I asked above.",
  "id": "5d04ce2e4e8f972d3722acc3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-15T10:53:34.696Z",
  "text": "The collection algorithm has been implemented and I've provided an example for every function (from Handbook) so that it will be easy to understand the purpose of every function. But, still I'm facing the problem of type conversion as I asked above.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "May be by today I&#39;ll push it so that you can have a look on the issue!",
  "id": "5d04ce7f950f1062a973f238",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-15T10:54:55.971Z",
  "text": "May be by today I'll push it so that you can have a look on the issue!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Can&#39;t we define a class with <code>Basic</code> without <code>__new__</code> because I don&#39;t want its instance to be created from here.",
  "id": "5d04d61fbc56c731f8c1ec90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-15T11:27:27.836Z",
  "text": "Can't we define a class with `Basic` without `__new__` because I don't want its instance to be created from here.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Are you sure that type conversion should be necessary? Is it not possible to work with elements of free groups as products of generators and their inverses?",
  "id": "5d04e4d44e8f972d372342be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-15T12:30:12.371Z",
  "text": "Are you sure that type conversion should be necessary? Is it not possible to work with elements of free groups as products of generators and their inverses?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that <code>Basic.__new__</code> will create instance with given arguments. If other attributes are needed, those can probably also be added in <code>__init__</code> (if you want to avoid <strong>new</strong>).",
  "id": "5d04e5c3e527d95addda607c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-15T12:34:11.873Z",
  "text": "I think that `Basic.__new__` will create instance with given arguments. If other attributes are needed, those can probably also be added in `__init__` (if you want to avoid __new__).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Actually at first the minimal uncollected subwords is calculated and then we need to process each and every uncollected subwords whose type has been changed now!",
  "id": "5d050d8726477710bbb5da9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-15T15:23:51.867Z",
  "text": "Actually at first the minimal uncollected subwords is calculated and then we need to process each and every uncollected subwords whose type has been changed now!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-06-15T15:32:45.902Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I&#39;m using <code>__init__</code> only <a href=\"https://travis-ci.org/sympy/sympy/jobs/543119452\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a> I am also trying to add <code>args_test</code> in <code>core/test_args.py</code> but still I&#39;m getting the same error.",
  "id": "5d050f40f5cf1f10bc7905f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-15T15:31:12.364Z",
  "text": "I'm using `__init__` only [here](https://travis-ci.org/sympy/sympy/jobs/543119452) I am also trying to add `args_test` in `core/test_args.py` but still I'm getting the same error.",
  "unread": false,
  "urls": [
   {
    "url": "https://travis-ci.org/sympy/sympy/jobs/543119452"
   }
  ],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Why do you write the argument <code>_pcgs</code> of <code>__init__</code> with a prepended underscore? Polycyclic groups should probably not derive from Basic. (They are not expected to appear as components of expressions.) ",
  "id": "5d052ff3bc56c731f8c464fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-15T17:50:43.383Z",
  "text": "Why do you write the argument `_pcgs` of `__init__` with a prepended underscore? Polycyclic groups should probably not derive from Basic. (They are not expected to appear as components of expressions.) ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Since I&#39;m using <code>self.pcgs</code> so I just thought of different names that&#39;s why <code>_pcgs</code>. If not <code>Basic</code> what else should be used?",
  "id": "5d05308f950f1062a976ad26",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-15T17:53:19.590Z",
  "text": "Since I'm using `self.pcgs` so I just thought of different names that's why `_pcgs`. If not `Basic` what else should be used?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I&#39;ve also pushed the changes please have a look!",
  "id": "5d0531546f0ec85ade12d2d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-15T17:56:36.468Z",
  "text": "I've also pushed the changes please have a look!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "<code>FpGroup</code> seems to use <code>DefaultPrinting</code>. (That is not much different from <code>object</code>.)",
  "id": "5d053182faf70031f91cd92b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-15T17:57:22.429Z",
  "text": "`FpGroup` seems to use `DefaultPrinting`. (That is not much different from `object`.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay, I&#39;ll try.",
  "id": "5d0531d1e527d95adddc86bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-15T17:58:41.648Z",
  "text": "Okay, I'll try.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "You might also consider the name <code>PolycyclicGroup</code>. There is <code>FpGroup</code> but <code>FinitelyPresentedGroup</code> is much longer. It would also be possible to define <code>PcGroup = PolycyclicGroup</code> as an abbreviation that is more convenient to use.",
  "id": "5d05324b950f1062a976bb18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-15T18:00:43.879Z",
  "text": "You might also consider the name `PolycyclicGroup`. There is `FpGroup` but `FinitelyPresentedGroup` is much longer. It would also be possible to define `PcGroup = PolycyclicGroup` as an abbreviation that is more convenient to use.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay!",
  "id": "5d05326ba8d9871b3292777c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-15T18:01:15.510Z",
  "text": "Okay!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "If you need a name different from <code>pcgs</code> you could append an underscore: <code>pcgs_</code>. That will not be confused as a private parameter.",
  "id": "5d0532c9f5cf1f10bc7a08fb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-15T18:02:49.263Z",
  "text": "If you need a name different from `pcgs` you could append an underscore: `pcgs_`. That will not be confused as a private parameter.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "ooh.. yes! ",
  "id": "5d0532fabb789747fb0ddae1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-15T18:03:38.846Z",
  "text": "ooh.. yes! ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "How are you planning to define <code>relative_order</code> that is an argument in some functions?",
  "id": "5d07321da8d9871b32a00149",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-17T06:24:29.118Z",
  "text": "How are you planning to define `relative_order` that is an argument in some functions?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "It can be defined by the ratio of the order of consecutive groups in the polycyclic series.",
  "id": "5d0734038e050f62aa3111c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-17T06:32:35.097Z",
  "text": "It can be defined by the ratio of the order of consecutive groups in the polycyclic series.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It is my understanding that the &#39;words&#39; to be collected are elements of a free group whose generators correspond to elements of a given polycyclic generator sequence. (So they are not elements of the polycyclic group.)",
  "id": "5d0738eafbcc305cc48577ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-17T06:53:30.306Z",
  "text": "It is my understanding that the 'words' to be collected are elements of a free group whose generators correspond to elements of a given polycyclic generator sequence. (So they are not elements of the polycyclic group.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The generators of a free group are in a fixed order. Should that be the <code>relative_order</code>?",
  "id": "5d073932bb789747fb1b54c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-17T06:54:42.162Z",
  "text": "The generators of a free group are in a fixed order. Should that be the `relative_order`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The comparisons (in <code>relative_order</code>) could probably be simplified if free group elements were converted to a form where the generator symbols are replaced by their indices in <code>group.symbols</code>. (Perhaps <code>index_form</code>.) Such forms could be transformed back to group elements by replacing each index by the corresponding symbol and calling <code>dtype</code>.",
  "id": "5d073cb5a8d9871b32a04e8c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-17T07:09:41.638Z",
  "text": "The comparisons (in `relative_order`) could probably be simplified if free group elements were converted to a form where the generator symbols are replaced by their indices in `group.symbols`. (Perhaps `index_form`.) Such forms could be transformed back to group elements by replacing each index by the corresponding symbol and calling `dtype`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "The order of the elements in the polycyclic generator sequence can be termed as the <code>relative_order</code>.",
  "id": "5d073cf3bc56c731f8d24e5a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-17T07:10:43.854Z",
  "text": "The order of the elements in the polycyclic generator sequence can be termed as the `relative_order`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>The generators of a free group are in a fixed order. Should that be the <code>relative_order</code>?</p></blockquote>\n<p>The relative order should not be decided on the basis of order of generators it should be decided on the basis of polycyclic generating sequence.</p>",
  "id": "5d073ebbe527d95addea32f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-17T07:18:19.003Z",
  "text": "> The generators of a free group are in a fixed order. Should that be the `relative_order`?\n\nThe relative order should not be decided on the basis of order of generators it should be decided on the basis of polycyclic generating sequence.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "<p>There are several sets of generators. What kind of generators do you mean here?</p><blockquote>\n<p>The relative order should not be decided on the basis of order of generators </p></blockquote>\n<p> Note that I was referring to the generators of the free group that is used represent the words (not the  generators of the original permutation group).</p>",
  "id": "5d07477e950f1062a984eef8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-17T07:55:42.103Z",
  "text": "There are several sets of generators. What kind of generators do you mean here?\n> The relative order should not be decided on the basis of order of generators \n\n Note that I was referring to the generators of the free group that is used represent the words (not the  generators of the original permutation group).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I think the generators of free group will be equivalent to the polycyclic generating sequence and in that case the order can be taken as the relative_order.",
  "id": "5d07493b950f1062a984f954",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-17T08:03:07.958Z",
  "text": "I think the generators of free group will be equivalent to the polycyclic generating sequence and in that case the order can be taken as the relative_order.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "But, in that case how the order will be decided? Will it be on the basis of index i.e (x, y) -&gt; (1, 2).",
  "id": "5d0749c0d100e447fc2c4c34",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-17T08:05:20.432Z",
  "text": "But, in that case how the order will be decided? Will it be on the basis of index i.e (x, y) -> (1, 2).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\nif free group elements were converted to a form where the generator symbols are replaced by their indices in <code>group.symbols</code>. (Perhaps <code>index_form</code>.) .</blockquote>\n",
  "id": "5d074b44faf70031f92b1818",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-17T08:11:48.817Z",
  "text": "> if free group elements were converted to a form where the generator symbols are replaced by their indices in `group.symbols`. (Perhaps `index_form`.) .\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Is this about type conversion",
  "id": "5d074b53fbcc305cc485ff40",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-17T08:12:03.455Z",
  "text": "Is this about type conversion",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I have been wondering how <code>relative_order</code> should be implemented. What kind of object it should be? I thought that replacing each symbol with its index (in the same order) would simplify matters as the indices could be compared directly.",
  "id": "5d074cca4e8f972d3733f8e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-17T08:18:18.566Z",
  "text": "I have been wondering how `relative_order` should be implemented. What kind of object it should be? I thought that replacing each symbol with its index (in the same order) would simplify matters as the indices could be compared directly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that we have the same idea of what the ordering should be. But I&#39;m not sure of what kind of implementation you have in mind.",
  "id": "5d0779f6bb789747fb1d1577",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-17T11:31:02.563Z",
  "text": "I think that we have the same idea of what the ordering should be. But I'm not sure of what kind of implementation you have in mind.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "yes, I think for free elements it should be just the order of elements.",
  "id": "5d077a58a8d9871b32a2008f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-17T11:32:40.914Z",
  "text": "yes, I think for free elements it should be just the order of elements.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-06-17T11:44:23.042Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Now, the question is from where do we get these orders because I think we can&#39;t compute it from the given word using <code>group.symbols</code>.",
  "id": "5d077b1ca8d9871b32a2079c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-17T11:35:56.794Z",
  "text": "Now, the question is from where do we get these orders because I think we can't compute it from the given word using `group.symbols`.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "No, I think it&#39;s fine we can compute it!",
  "id": "5d077e224e8f972d37355e43",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-17T11:48:50.085Z",
  "text": "No, I think it's fine we can compute it!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>But I&#39;m not sure of what kind of implementation you have in mind.</p></blockquote>\n<p>Initially, I was thinking in terms of polycyclic generating sequence and pc series so I was thinking of computing them separately but it seems that in case of free groups it can be computed easily.<br>So, now I think we don&#39;t need to pass the relative order as a parameter it can be computed inside the function itself.</p>",
  "id": "5d077fbfbc56c731f8d43b7e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-17T11:55:43.964Z",
  "text": "> But I'm not sure of what kind of implementation you have in mind.\n\nInitially, I was thinking in terms of polycyclic generating sequence and pc series so I was thinking of computing them separately but it seems that in case of free groups it can be computed easily.\nSo, now I think we don't need to pass the relative order as a parameter it can be computed inside the function itself.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I would consider defining a class, say, <code>Collector</code>,  that would contain the data needed for the collection algorithm. The global functions <code>minimal_uncollected_subwords</code>, <code>_index</code>, etc. could probably be its methods that would have all common data available.",
  "id": "5d079a66ecc6a91b31ff35ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-17T13:49:26.312Z",
  "text": "I would consider defining a class, say, `Collector`,  that would contain the data needed for the collection algorithm. The global functions `minimal_uncollected_subwords`, `_index`, etc. could probably be its methods that would have all common data available.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay!",
  "id": "5d079be0bb789747fb1e1c2c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-17T13:55:44.609Z",
  "text": "Okay!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Do you have any idea about the type conversion issue?",
  "id": "5d086959325b465cc34d1e83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T04:32:25.693Z",
  "text": "Do you have any idea about the type conversion issue?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Do you mean the conversion from e.g. array form to a free group element?",
  "id": "5d0877efe527d95addf67e57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T05:34:39.786Z",
  "text": "Do you mean the conversion from e.g. array form to a free group element?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Yes!",
  "id": "5d0878136f0ec85ade2d1e58",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T05:35:15.232Z",
  "text": "Yes!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that should be done with <code>group.dtype</code>. The group has to be available, of course.",
  "id": "5d087c78f5cf1f10bc9462c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T05:54:00.478Z",
  "text": "I think that should be done with `group.dtype`. The group has to be available, of course.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "After the computations on the group elements, I don&#39;t think it will work.",
  "id": "5d087d38950f1062a9918954",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T05:57:12.040Z",
  "text": "After the computations on the group elements, I don't think it will work.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I was also thinking of the possibility of using a variant of array form where each symbol component is replaced by its index. That would make the order tests trivial.",
  "id": "5d087d4c950f1062a9918bba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T05:57:32.504Z",
  "text": "I was also thinking of the possibility of using a variant of array form where each symbol component is replaced by its index. That would make the order tests trivial.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "What do you mean by &quot;After the computations on the group elements&quot;?",
  "id": "5d087d76bb789747fb2863ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T05:58:14.804Z",
  "text": "What do you mean by \"After the computations on the group elements\"?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I&#39;ll give you an example!",
  "id": "5d087dabe527d95addf6ef3c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T05:59:07.423Z",
  "text": "I'll give you an example!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<pre><code><span class=\"prompt\">&gt;&gt;</span>&gt; from sympy.combinatorics.free_groups import free_group\n<span class=\"prompt\">&gt;&gt;</span>&gt; <span class=\"constant\">F</span>, x1, x2 = free_group(<span class=\"string\">\"x1, x2\"</span>)\n<span class=\"prompt\">&gt;&gt;</span>&gt; word = x2**<span class=\"number\">2</span>*x1**<span class=\"number\">7</span>\n<span class=\"prompt\">&gt;&gt;</span>&gt; group = word.group\n<span class=\"prompt\">&gt;&gt;</span>&gt; array = word.array_form\n<span class=\"prompt\">&gt;&gt;</span>&gt; array\n((x2, <span class=\"number\">2</span>), (x1, <span class=\"number\">7</span>))\n<span class=\"prompt\">&gt;&gt;</span>&gt; w = array[<span class=\"number\">0</span>][<span class=\"number\">0</span>]**array[<span class=\"number\">1</span>][<span class=\"number\">1</span>]*array[<span class=\"number\">1</span>][<span class=\"number\">0</span>]**array[<span class=\"number\">0</span>][<span class=\"number\">1</span>]\n<span class=\"prompt\">&gt;&gt;</span>&gt; w\nx1**<span class=\"number\">2</span>*x2**<span class=\"number\">7</span>\n<span class=\"prompt\">&gt;&gt;</span>&gt; type(w)\n&lt;<span class=\"class\"><span class=\"keyword\">class</span> '<span class=\"title\">sympy</span>.<span class=\"title\">core</span>.<span class=\"title\">mul</span>.<span class=\"title\">Mul</span>'&gt;</span>\n<span class=\"prompt\">&gt;&gt;</span>&gt; \n&gt;&gt;&gt; w = group.dtype(w)\n<span class=\"constant\">Traceback</span> (most recent call last)<span class=\"symbol\">:</span>\n  <span class=\"constant\">File</span> <span class=\"string\">\"&lt;stdin&gt;\"</span>, line <span class=\"number\">1</span>, <span class=\"keyword\">in</span> &lt;<span class=\"class\"><span class=\"keyword\">module</span>&gt;</span>\n<span class=\"constant\">TypeError</span><span class=\"symbol\">:</span> <span class=\"string\">'Mul'</span> object is <span class=\"keyword\">not</span> iterable\n<span class=\"prompt\">&gt;&gt;</span>&gt; w = group.dtype(((w, <span class=\"number\">1</span>), ))\n<span class=\"prompt\">&gt;&gt;</span>&gt; w\nx1**<span class=\"number\">2</span>*x2**<span class=\"number\">7</span>\n<span class=\"prompt\">&gt;&gt;</span>&gt; w.array_form\n((x1**<span class=\"number\">2</span>*x2**<span class=\"number\">7</span>, <span class=\"number\">1</span>),)\n<span class=\"prompt\">&gt;&gt;</span>&gt;</code></pre>",
  "id": "5d087e48ecc6a91b31097386",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T06:01:44.770Z",
  "text": "```\n>>> from sympy.combinatorics.free_groups import free_group\n>>> F, x1, x2 = free_group(\"x1, x2\")\n>>> word = x2**2*x1**7\n>>> group = word.group\n>>> array = word.array_form\n>>> array\n((x2, 2), (x1, 7))\n>>> w = array[0][0]**array[1][1]*array[1][0]**array[0][1]\n>>> w\nx1**2*x2**7\n>>> type(w)\n<class 'sympy.core.mul.Mul'>\n>>> \n>>> w = group.dtype(w)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: 'Mul' object is not iterable\n>>> w = group.dtype(((w, 1), ))\n>>> w\nx1**2*x2**7\n>>> w.array_form\n((x1**2*x2**7, 1),)\n>>> \n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "After computation implies computing <code>w</code>.",
  "id": "5d087f268e050f62aa3e4f82",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T06:05:26.356Z",
  "text": "After computation implies computing `w`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "<code>w = array[0][0]**array[1][1]*array[1][0]**array[0][1]</code> This is wrong. <code>array[0][0]</code> is a Symbol and <code>array[0][0]**array[1][1]</code> is a Pow. Such expressions cannot be used in this connection.",
  "id": "5d087f362313502d38655494",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T06:05:42.949Z",
  "text": "`w = array[0][0]**array[1][1]*array[1][0]**array[0][1]` This is wrong. `array[0][0]` is a Symbol and `array[0][0]**array[1][1]` is a Pow. Such expressions cannot be used in this connection.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Then, How we form a different word from a given word?",
  "id": "5d087f9126477710bbd1e68a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T06:07:13.472Z",
  "text": "Then, How we form a different word from a given word?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Instead of <code>array[0]0]</code> etc. you should use the proper free group elements denoted by those symbols.",
  "id": "5d087f96325b465cc34ee188",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T06:07:18.702Z",
  "text": "Instead of `array[0]0]` etc. you should use the proper free group elements denoted by those symbols.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "A word is a tuple of pairs. New tuples can be constructed.",
  "id": "5d087fcfe527d95addf713ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T06:08:15.589Z",
  "text": "A word is a tuple of pairs. New tuples can be constructed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "So, how we compute something like <code>w</code> above from the given word.",
  "id": "5d0880826f0ec85ade2dc5ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T06:11:14.700Z",
  "text": "So, how we compute something like `w` above from the given word.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "In the example above, <code>array[0][0]</code> is <code>x2</code> and <code>array[1][1]</code> is 7 so <code>array[0][0]**array[1][1]</code> is represented by the tuple <code>(x2, 7)</code> (where <code>x2</code> denotes the <em>symbol</em> of  the generator <code>x2</code>.",
  "id": "5d0880acd100e447fc38e66a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T06:11:56.221Z",
  "text": "In the example above, `array[0][0]` is `x2` and `array[1][1]` is 7 so `array[0][0]**array[1][1]` is represented by the tuple `(x2, 7)` (where `x2` denotes the *symbol* of  the generator `x2`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "As a free group element, it should be <code>x2**7</code> (where `x2`` now denotes the generator which is a free group element and the power is computed in the group).",
  "id": "5d0881274e8f972d37409289",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T06:13:59.985Z",
  "text": "As a free group element, it should be `x2**7` (where `x2`` now denotes the generator which is a free group element and the power is computed in the group).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Then how to constitute this <code>x2**7</code>?",
  "id": "5d088165bb789747fb28b457",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T06:15:01.823Z",
  "text": "Then how to constitute this `x2**7`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Just write <code>x2**7</code>. There is a method for its creation.",
  "id": "5d0881a64e8f972d37409b32",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T06:16:06.196Z",
  "text": "Just write `x2**7`. There is a method for its creation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It is confusing that <code>x2</code> has two meanings, a free group element and a symbol.",
  "id": "5d0881e8bb789747fb28bdd1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T06:17:12.503Z",
  "text": "It is confusing that `x2` has two meanings, a free group element and a symbol.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "This definition <code>F, x1, x2 = free_group(&quot;x1, x2&quot;)</code> will make it a free group element.",
  "id": "5d0882134e8f972d3740a5d2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T06:17:55.992Z",
  "text": "This definition `F, x1, x2 = free_group(\"x1, x2\")` will make it a free group element.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The method is <code>FreeGroupElement.__pow__</code>.",
  "id": "5d08826cbb789747fb28c5c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T06:19:24.272Z",
  "text": "The method is `FreeGroupElement.__pow__`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay, I&#39;ll try with this!",
  "id": "5d08828ae527d95addf750b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T06:19:54.708Z",
  "text": "Okay, I'll try with this!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Did you mean something like this:<pre><code>&gt;&gt;&gt; word = x2<span class=\"strong\">**2*x1**</span>7\n&gt;&gt;&gt; group = word.group\n&gt;&gt;&gt; array = word.array_form\n&gt;&gt;&gt; array\n((x2, 2), (x1, 7))\n&gt;&gt;&gt; w1 = (group.dtype(((array[<span class=\"link_label\">0</span>][<span class=\"link_reference\">0</span>], 1), ))).<span class=\"strong\">__pow__</span>(array[<span class=\"link_label\">1</span>][<span class=\"link_reference\">1</span>])\n&gt;&gt;&gt; w1\nx2**7\n&gt;&gt;&gt; type(w1)\n<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"title\">class</span> '<span class=\"attribute\">sympy.combinatorics.free_groups.FreeGroupElement</span>'&gt;</span></span>\n&gt;&gt;&gt; w2 = (group.dtype(((array[<span class=\"link_label\">1</span>][<span class=\"link_reference\">0</span>], 1), ))).<span class=\"strong\">__pow__</span>(array[<span class=\"link_label\">0</span>][<span class=\"link_reference\">1</span>])\n&gt;&gt;&gt; w2\nx1**2\n&gt;&gt;&gt; w = w1*w2\n&gt;&gt;&gt; type(w)\n<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"title\">class</span> '<span class=\"attribute\">sympy.combinatorics.free_groups.FreeGroupElement</span>'&gt;</span></span></code></pre>",
  "id": "5d088718faf70031f93832c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T06:39:20.687Z",
  "text": "Did you mean something like this:\n```\n>>> word = x2**2*x1**7\n>>> group = word.group\n>>> array = word.array_form\n>>> array\n((x2, 2), (x1, 7))\n>>> w1 = (group.dtype(((array[0][0], 1), ))).__pow__(array[1][1])\n>>> w1\nx2**7\n>>> type(w1)\n<class 'sympy.combinatorics.free_groups.FreeGroupElement'>\n>>> w2 = (group.dtype(((array[1][0], 1), ))).__pow__(array[0][1])\n>>> w2\nx1**2\n>>> w = w1*w2\n>>> type(w)\n<class 'sympy.combinatorics.free_groups.FreeGroupElement'>\n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "That is, every time we have to change the type of symbols, before computing the exponent.",
  "id": "5d08877b4e8f972d37410960",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T06:40:59.823Z",
  "text": "That is, every time we have to change the type of symbols, before computing the exponent.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "That is one possibility though <code>w1</code> could be <code>group.dtype(((array[0][0], array[1][1]),))</code> avoiding <code>**</code>.",
  "id": "5d088e412313502d38668a88",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T07:09:53.653Z",
  "text": "That is one possibility though `w1` could be `group.dtype(((array[0][0], array[1][1]),))` avoiding `**`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "And <code>w</code> could also be created by a single call of dtype on an argument containing two tuples, one for <code>w1</code> and another for <code>w2</code>.",
  "id": "5d088eb0faf70031f938cee8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T07:11:44.792Z",
  "text": "And `w` could also be created by a single call of dtype on an argument containing two tuples, one for `w1` and another for `w2`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay, then I think we can use this to solve the type issue with the <code>minimal_uncollected_subwords</code>.",
  "id": "5d088f06ecc6a91b310acb36",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T07:13:10.104Z",
  "text": "Okay, then I think we can use this to solve the type issue with the `minimal_uncollected_subwords`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It is probably not necessary that <code>minimal_uncollected_subwords</code> (and other methods) should return free group elements, the array form that consists of the argument tuple of tuples would suffice. (Those tuples can be concatenated directly instead of multiplying group elements. They can be converted to group elements only at a final stage.)",
  "id": "5d0891844e8f972d3741d9b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T07:23:48.347Z",
  "text": "It is probably not necessary that `minimal_uncollected_subwords` (and other methods) should return free group elements, the array form that consists of the argument tuple of tuples would suffice. (Those tuples can be concatenated directly instead of multiplying group elements. They can be converted to group elements only at a final stage.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>the array form that consists of the argument tuple of tuples would suffice. (Those tuples can be concatenated directly instead of multiplying group elements. They can be converted to group elements only at a final stage.)</p></blockquote>\n<p>If we don&#39;t convert their type then the output of <code>minimal_uncollected_subwords</code> will be words of type <code>core.mul</code> and we will not be able to work on the further steps that is, <code>word_reduce</code> needed for the collection of word!</p>",
  "id": "5d089f0c2313502d3867e1f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T08:21:32.134Z",
  "text": "> the array form that consists of the argument tuple of tuples would suffice. (Those tuples can be concatenated directly instead of multiplying group elements. They can be converted to group elements only at a final stage.)\n\nIf we don't convert their type then the output of `minimal_uncollected_subwords` will be words of type `core.mul` and we will not be able to work on the further steps that is, `word_reduce` needed for the collection of word!\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-06-18T09:04:14.017Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It is not necessary to convert them all the way to free group elements. Instead of <code>group.dtype(((array[0][0], array[1][1]),))</code>, it would suffice to return the tuple <code>((array[0][0], array[1][1]),)</code> (which is not of type <code>core.mul</code>). In fact, it is essentially the same as the free group element. Those <em>are</em> tuples, and the only thing that <code>dtype</code> adds is the attribute <code>group</code>. It is not necessary to include that attribute in every tuple when we are dealing with a single, well known group.",
  "id": "5d08a8a44e8f972d3743ce3d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T09:02:28.667Z",
  "text": "It is not necessary to convert them all the way to free group elements. Instead of `group.dtype(((array[0][0], array[1][1]),))`, it would suffice to return the tuple `((array[0][0], array[1][1]),)` (which is not of type `core.mul`). In fact, it is essentially the same as the free group element. Those *are* tuples, and the only thing that `dtype` adds is the attribute `group`. It is not necessary to include that attribute in every tuple when we are dealing with a single, well known group.",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>it would suffice to return the tuple <code>((array[0][0], array[1][1]),)</code> (which is not of type <code>core.mul</code>). </p></blockquote>\n<p>Finally the complete word is returned and the above is about just extracting a single element from the group or if we wanna apply <code>((array[0][0], array[1][1]),)</code> then we have to apply this to every element before performing computation as we discussed in the example above.</p>",
  "id": "5d08fe524e8f972d374ab60e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T15:08:02.876Z",
  "text": ">it would suffice to return the tuple `((array[0][0], array[1][1]),)` (which is not of type `core.mul`). \n\nFinally the complete word is returned and the above is about just extracting a single element from the group or if we wanna apply `((array[0][0], array[1][1]),)` then we have to apply this to every element before performing computation as we discussed in the example above.\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "So, if we don&#39;t want to convert it in the function itself, in that case the list of subwords will be returned in the form of <code>core.mul</code>and we have to convert the type of the whole subword! ",
  "id": "5d08ff47e527d95add017f44",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T15:12:07.244Z",
  "text": "So, if we don't want to convert it in the function itself, in that case the list of subwords will be returned in the form of `core.mul`and we have to convert the type of the whole subword! ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-06-18T16:00:34.686Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I don&#39;t understand how the <code>core.mul</code> form could appear. We have <code>w1 = ((x2, 7),)</code>, <code>w2 = ((x1, 2),)</code> and their product is the concatenated form <code>((x2, 7), (x1, 2))</code>.",
  "id": "5d090a54bc56c731f8eaa969",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T15:59:16.574Z",
  "text": "I don't understand how the `core.mul` form could appear. We have `w1 = ((x2, 7),)`, `w2 = ((x1, 2),)` and their product is the concatenated form `((x2, 7), (x1, 2))`.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Oh that&#39;s right I was still thinking in terms of <code>array[0][0]**array[0][1]</code>!",
  "id": "5d090af56f0ec85ade390b30",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-18T16:01:57.305Z",
  "text": "Oh that's right I was still thinking in terms of `array[0][0]**array[0][1]`!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The GSoC evaluations will be next week. I am hoping that you could give some report of your progress.",
  "id": "5d0a33c46f0ec85ade44887b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-19T13:08:20.223Z",
  "text": "The GSoC evaluations will be next week. I am hoping that you could give some report of your progress.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Will summarizing the whole progress of a month in the next weekly blog is fine?",
  "id": "5d0a488cd100e447fc503287",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-19T14:37:00.730Z",
  "text": "Will summarizing the whole progress of a month in the next weekly blog is fine?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Yes, that should be OK.",
  "id": "5d0a4b7ef5cf1f10bcac37d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-19T14:49:34.240Z",
  "text": "Yes, that should be OK.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay!",
  "id": "5d0a4b992313502d387cd702",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-19T14:50:01.469Z",
  "text": "Okay!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I&#39;ve pushed the changes resolving all the issues please have a look!",
  "id": "5d0aed792313502d3882278c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-20T02:20:41.320Z",
  "text": "I've pushed the changes resolving all the issues please have a look!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "As per your comment on PR should we make a single <code>PolycyclicGroup class</code> and the methods of <code>collection</code> will be part of this class. In that case should we try implementing PolycyclicGoup class with the help of Fp presentation. ",
  "id": "5d0ba8b74b0b7b477b2998ff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-20T15:39:35.238Z",
  "text": "As per your comment on PR should we make a single `PolycyclicGroup class` and the methods of `collection` will be part of this class. In that case should we try implementing PolycyclicGoup class with the help of Fp presentation. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-06-20T15:47:34.798Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I recall that  GAP manual said that the methods of polycyclic groups are different from those of a general fp group. I think that the implementation should also be different.",
  "id": "5d0baa69fd4aa914b50df2e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-20T15:46:49.785Z",
  "text": "I recall that  GAP manual said that the methods of polycyclic groups are different from those of a general fp group. I think that the implementation should also be different.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The handbook does not indicate how the power-conjugate representations of polycyclic groups are constructed.",
  "id": "5d0baaf3fd4aa914b50df5e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-20T15:49:07.958Z",
  "text": "The handbook does not indicate how the power-conjugate representations of polycyclic groups are constructed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that quite a lot of work will be needed for the construction. It will probably be a recursive process. That is why I suggested that a separate <code>Collector</code> class be created. A ready-made collector will then be attached to a polycyclic group.",
  "id": "5d0bab917456db0bb81fddbc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-20T15:51:45.666Z",
  "text": "I think that quite a lot of work will be needed for the construction. It will probably be a recursive process. That is why I suggested that a separate `Collector` class be created. A ready-made collector will then be attached to a polycyclic group.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "So, the separate <code>Collector</code> class is fine?",
  "id": "5d0babeabc834f76a4aceacf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-20T15:53:14.088Z",
  "text": "So, the separate `Collector` class is fine?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that it would be useful.",
  "id": "5d0bace2bc834f76a4acf541",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-20T15:57:22.669Z",
  "text": "I think that it would be useful.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Its principal contents are the power-conjugate relators, stored in a suitable form to make their use simple.",
  "id": "5d0bad717456db0bb81fee10",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-20T15:59:45.237Z",
  "text": "Its principal contents are the power-conjugate relators, stored in a suitable form to make their use simple.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I&#39;m not able to understand this <a href=\"https://github.com/sympy/sympy/pull/16991#discussion_r295725805\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">comment</a> this means the object of <code>Collector</code> should be formed from <code>PolycyclicGroup</code> class then I think first of all we should have the proper presentation of <code>PolycyclicGroup</code> then only the <code>pc_ relators</code> can be used for <code>Collector</code> class.",
  "id": "5d0bae63cedb297a81850b89",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-20T16:03:47.296Z",
  "text": "I'm not able to understand this [comment](https://github.com/sympy/sympy/pull/16991#discussion_r295725805) this means the object of `Collector` should be formed from `PolycyclicGroup` class then I think first of all we should have the proper presentation of `PolycyclicGroup` then only the `pc_ relators` can be used for `Collector` class.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/pull/16991#discussion_r295725805"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I mean that a <code>Collector</code> would be an attribute of a <code>PolycyclicGroup</code>.",
  "id": "5d0bb74ed35d4162a869a3ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-20T16:41:50.418Z",
  "text": "I mean that a `Collector` would be an attribute of a `PolycyclicGroup`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It should contain the relators.",
  "id": "5d0bb78a5bc3210bb7664c2a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-20T16:42:50.181Z",
  "text": "It should contain the relators.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that it would be the class that contains everything needed for the collection process.",
  "id": "5d0bb8311e35ef14b6864736",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-20T16:45:37.667Z",
  "text": "I think that it would be the class that contains everything needed for the collection process.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": " I was thinking should we restrict the current PR to only <code>Collector</code> class and may open another PR with <code>PolycyclicGroup</code> class otherwise the PR will be quite big and it may be difficult to review it.",
  "id": "5d0c824ae7267a62a91331cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-21T07:07:54.835Z",
  "text": " I was thinking should we restrict the current PR to only `Collector` class and may open another PR with `PolycyclicGroup` class otherwise the PR will be quite big and it may be difficult to review it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It is better to proceed with small steps. The <code>PolycyclicGroup</code> class can wait.",
  "id": "5d0c8dde41654c559ed014a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-21T07:57:18.796Z",
  "text": "It is better to proceed with small steps. The `PolycyclicGroup` class can wait.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Should we move on to <code>pc_presentation</code>?",
  "id": "5d0c956cd1aaa16964de5d87",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-21T08:29:32.163Z",
  "text": "Should we move on to `pc_presentation`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "What did you think it should contain? Should the collector part be ready first?",
  "id": "5d0ca846bc834f76a4b4f44a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-21T09:49:58.585Z",
  "text": "What did you think it should contain? Should the collector part be ready first?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I think it should have a <code>pc_sequence</code>(the generating set to be computed from the <code>subnormal series</code>) and in addition we&#39;ll need the <code>power_relators</code> and <code>conjugate_relators</code>. The powers of the elements in the power_relators will be equal to the <code>relative_order</code> of the <code>pc_sequence</code>.<br>I&#39;m not sure if we need <code>Collector</code> for the presentation. I think collector will be helpful mostly to solve word problems with the polycyclic presentation.",
  "id": "5d0cb799d4535e477a7373e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-21T10:55:21.040Z",
  "text": "I think it should have a `pc_sequence`(the generating set to be computed from the `subnormal series`) and in addition we'll need the `power_relators` and `conjugate_relators`. The powers of the elements in the power_relators will be equal to the `relative_order` of the `pc_sequence`. \nI'm not sure if we need `Collector` for the presentation. I think collector will be helpful mostly to solve word problems with the polycyclic presentation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "How did you plan to represent the elements of a polycyclic group?",
  "id": "5d0cc0f45bc3210bb76ec7fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-21T11:35:16.471Z",
  "text": "How did you plan to represent the elements of a polycyclic group?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I haven&#39;t thought much about it but I think we can keep it same as the PermutationGroup.",
  "id": "5d0ce862d1aaa16964e1793e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-21T14:23:30.369Z",
  "text": "I haven't thought much about it but I think we can keep it same as the PermutationGroup.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that elements of a polycyclic group should be in collected form. Permutation group methods are only used to find the polycyclic presentation.",
  "id": "5d0d12b2207f6e6963d8eea1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-21T17:24:02.483Z",
  "text": "I think that elements of a polycyclic group should be in collected form. Permutation group methods are only used to find the polycyclic presentation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "<blockquote>\nif we need Collector for the presentation</blockquote>\n",
  "id": "5d0db391fd4aa914b51f74df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-22T04:50:25.491Z",
  "text": "> if we need Collector for the presentation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It is probably not necessary to make final decisions yet. I think that the methods can be coded so that they do not depend on the exact class of <code>self</code> as long as certain attributes are present.",
  "id": "5d0db406d16b28559f65efd9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-22T04:52:22.122Z",
  "text": "It is probably not necessary to make final decisions yet. I think that the methods can be coded so that they do not depend on the exact class of `self` as long as certain attributes are present.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<code>Section 8.1.2</code> gives a bit of information about the <code>pc_presentation</code> but I&#39;m not able to understand the rhs computed in those equations more specifically some random symbols <code>a, b, c</code> are used for the exponents of elements whose meaning is not explained!",
  "id": "5d0dbd73d4535e477a7c392a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-22T05:32:35.456Z",
  "text": "`Section 8.1.2` gives a bit of information about the `pc_presentation` but I'm not able to understand the rhs computed in those equations more specifically some random symbols `a, b, c` are used for the exponents of elements whose meaning is not explained!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-06-22T06:02:02.769Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "They are the exponents of the normal form presentation of the elements in question (powers and conjugates). The collection method can be used to compute such forms.",
  "id": "5d0dc4401e35ef14b6978aba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-22T06:01:36.540Z",
  "text": "They are the exponents of the normal form presentation of the elements in question (powers and conjugates). The collection method can be used to compute such forms.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I was thinking of that but then how will we do that because to compute <code>collection</code> we need <code>presentation</code> and vice versa!",
  "id": "5d0dc4d14b0b7b477b3b594e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-22T06:04:01.559Z",
  "text": "I was thinking of that but then how will we do that because to compute `collection` we need `presentation` and vice versa!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Yes, that is the problem. I think that the presentation has to be computed by iterating from the bottom up. Something like that is done in GAP but I find its code hard to follow. I thought that a collector class could be used for the iterative construction. For testing the collection algorithm, suitable normal form exponents could be found with GAP.",
  "id": "5d0dc68b41654c559edacc77",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-22T06:11:23.803Z",
  "text": "Yes, that is the problem. I think that the presentation has to be computed by iterating from the bottom up. Something like that is done in GAP but I find its code hard to follow. I thought that a collector class could be used for the iterative construction. For testing the collection algorithm, suitable normal form exponents could be found with GAP.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-06-22T06:37:52.371Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "A very simple example is S(3) with polycyclic generating sequence <code>x0 = (0 1)</code> and <code>x1 = (0 1 2)</code>. Then the power relation is <code>x0**2 = () = x1**0</code> and the conjugate relation is <code>x0**-1*x1*x0 = (0 2 1) = x1**2</code>. So the exponents are <code>a01 = 0</code> and <code>b101 = 2</code>.  You could repeat the same with S(4).",
  "id": "5d0dcab1bc834f76a4bec27e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-22T06:29:05.519Z",
  "text": "A very simple example is S(3) with polycyclic generating sequence `x0 = (0 1)` and `x1 = (0 1 2)`. Then the power relation is `x0**2 = () = x1**0` and the conjugate relation is `x0**-1*x1*x0 = (0 2 1) = x1**2`. So the exponents are `a01 = 0` and `b101 = 2`.  You could repeat the same with S(4).",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay!",
  "id": "5d0dcd651e35ef14b697cfba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-22T06:40:37.522Z",
  "text": "Okay!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "How are you doing with S(4)? Found the relations for four generators?",
  "id": "5d0f2521d4535e477a87a404",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T07:07:13.627Z",
  "text": "How are you doing with S(4)? Found the relations for four generators?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<pre><code>x0 = (<span class=\"number\">0</span> <span class=\"number\">1</span>)\nx1 = (<span class=\"number\">2</span> <span class=\"number\">3</span>)\nx2 = (<span class=\"number\">1</span> <span class=\"number\">3</span> <span class=\"number\">2</span>)\nx3 = (<span class=\"number\">0</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>)\n\npower-relations:\nx0**<span class=\"number\">2</span> = () = x1**<span class=\"number\">2</span> = x2**<span class=\"number\">3</span> = x3**<span class=\"number\">4</span>\n\nconjugate-relations:\nx0**-<span class=\"number\">1</span>*x1*x0 = (<span class=\"number\">2</span> <span class=\"number\">3</span>) = x1\nx1**-<span class=\"number\">1</span>*x2*x1 = (<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>) = x2**<span class=\"number\">2</span>\nx2**-<span class=\"number\">1</span>*x3*x2 = (<span class=\"number\">0</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span>) = \nx1**-<span class=\"number\">1</span>*x3*x1 = (<span class=\"number\">0</span> <span class=\"number\">1</span> <span class=\"number\">3</span> <span class=\"number\">2</span>)</code></pre>",
  "id": "5d0f2d647456db0bb83d6426",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T07:42:28.332Z",
  "text": "```\nx0 = (0 1)\nx1 = (2 3)\nx2 = (1 3 2)\nx3 = (0 1 2 3)\n\npower-relations:\nx0**2 = () = x1**2 = x2**3 = x3**4\n\nconjugate-relations:\nx0**-1*x1*x0 = (2 3) = x1\nx1**-1*x2*x1 = (1 2 3) = x2**2\nx2**-1*x3*x2 = (0 3 1 2) = \nx1**-1*x3*x1 = (0 1 3 2)\n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "You should start with a normal series with cyclic quotients, a composition series, for example.",
  "id": "5d0f325ad35d4162a8868458",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T08:03:38.118Z",
  "text": "You should start with a normal series with cyclic quotients, a composition series, for example.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "<pre><code>\u23a1PermutationGroup([, PermutationGroup([, PermutationGroup([, PermutationGroup(\n\u23a2      (<span class=\"number\">0</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>),         (<span class=\"number\">3</span>)(<span class=\"number\">0</span> <span class=\"number\">2</span> <span class=\"number\">1</span>),         (<span class=\"number\">0</span> <span class=\"number\">1</span>)(<span class=\"number\">2</span> <span class=\"number\">3</span>),         (<span class=\"number\">0</span> <span class=\"number\">1</span>)(<span class=\"number\">2</span> <span class=\"number\">3</span>)])\n\u23a2      (<span class=\"number\">3</span>)(<span class=\"number\">0</span> <span class=\"number\">1</span>)])         (<span class=\"number\">3</span>)(<span class=\"number\">0</span> <span class=\"number\">1</span> <span class=\"number\">2</span>),         (<span class=\"number\">0</span> <span class=\"number\">2</span>)(<span class=\"number\">1</span> <span class=\"number\">3</span>)])                    \n\u23a3                          (<span class=\"number\">0</span> <span class=\"number\">1</span> <span class=\"number\">3</span>)])                                          \n\n[, PermutationGroup([\u23a4\n           (<span class=\"number\">3</span>)])     \u23a5\n                     \u23a5\n                     \u23a6</code></pre>",
  "id": "5d0f32a21e35ef14b6a38d08",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T08:04:50.888Z",
  "text": "```\n\u23a1PermutationGroup([, PermutationGroup([, PermutationGroup([, PermutationGroup(\n\u23a2      (0 1 2 3),         (3)(0 2 1),         (0 1)(2 3),         (0 1)(2 3)])\n\u23a2      (3)(0 1)])         (3)(0 1 2),         (0 2)(1 3)])                    \n\u23a3                          (0 1 3)])                                          \n\n[, PermutationGroup([\u23a4\n           (3)])     \u23a5\n                     \u23a5\n                     \u23a6\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The next to last group is generated by <code>x3 = (0 1)(2 3)</code>.",
  "id": "5d0f32df7456db0bb83d8bae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T08:05:51.660Z",
  "text": "The next to last group is generated by `x3 = (0 1)(2 3)`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Then one generator, <code>x2 = (0 2)(1 3)</code> need be added to get the next group.",
  "id": "5d0f33134291ad76a5b2e75e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T08:06:43.493Z",
  "text": "Then one generator, `x2 = (0 2)(1 3)` need be added to get the next group.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-06-23T08:09:21.578Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The group generated by <code>x2</code> and <code>x3</code> is the Klein 4-group, say H.",
  "id": "5d0f334dd4535e477a8819f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T08:07:41.533Z",
  "text": "The group generated by `x2` and `x3` is the Klein 4-group, say H.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Should <code>x2</code> and <code>x3</code> be replaced?",
  "id": "5d0f340a4291ad76a5b2ed67",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T08:10:50.831Z",
  "text": "Should `x2` and `x3` be replaced?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The next larger group is the alternative group A4. As the quotient A 4/H is cyclic (of order 3) it will suffice to take any one of its generators, say, <code>x1 = (0 1 2)</code>.",
  "id": "5d0f340b5bc3210bb783974b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T08:10:51.454Z",
  "text": "The next larger group is the alternative group A4. As the quotient A 4/H is cyclic (of order 3) it will suffice to take any one of its generators, say, `x1 = (0 1 2)`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Note that <code>x2</code> and <code>x3</code> should generate the Klein 4-group.",
  "id": "5d0f343e4b0b7b477b4772cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T08:11:42.352Z",
  "text": "Note that `x2` and `x3` should generate the Klein 4-group.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Finally, S4 is generated by <code>x0 = (0 1)</code> and A4. ( <code>(0 1 2 3)</code> is already in A4.)",
  "id": "5d0f34e2bc834f76a4ca92d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T08:14:26.664Z",
  "text": "Finally, S4 is generated by `x0 = (0 1)` and A4. ( `(0 1 2 3)` is already in A4.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The relations can be computed by means of <code>generator_product</code>.",
  "id": "5d0f365ae7267a62a92a19a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T08:20:41.999Z",
  "text": "The relations can be computed by means of `generator_product`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "<pre><code>In [<span class=\"number\">10</span>]: H.generator_product(x1**-<span class=\"number\">1</span>*x3*x1, original=True)\nOut[<span class=\"number\">10</span>]: [(<span class=\"number\">0</span> <span class=\"number\">1</span>)(<span class=\"number\">2</span> <span class=\"number\">3</span>), (<span class=\"number\">0</span> <span class=\"number\">2</span>)(<span class=\"number\">1</span> <span class=\"number\">3</span>)]</code></pre>",
  "id": "5d0f368ed1aaa16964f4b44c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T08:21:34.929Z",
  "text": "```\nIn [10]: H.generator_product(x1**-1*x3*x1, original=True)\nOut[10]: [(0 1)(2 3), (0 2)(1 3)]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It says that <code>x1**-1*x3*x1</code> is <code>x3*x2</code> (which should be collected by a collector of H to get <code>x2*x3</code> in proper order).",
  "id": "5d0f37154291ad76a5b30af7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T08:23:49.855Z",
  "text": "It says that `x1**-1*x3*x1` is `x3*x2` (which should be collected by a collector of H to get `x2*x3` in proper order).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Edit: Actually it seems to give the correct result <code>x2*x3</code>with no need for rearrangement. I forgot to look at the docstring:<pre><code>        Return <span class=\"keyword\">a</span> <span class=\"keyword\">list</span> of strong generators `[s1, ..., <span class=\"keyword\">sn</span>]`\n        <span class=\"keyword\">s</span>.<span class=\"keyword\">t</span> `<span class=\"keyword\">g</span> = <span class=\"keyword\">sn</span>*...*s1`. If `original=True`, <span class=\"keyword\">make</span> the <span class=\"keyword\">list</span>\n        contain <span class=\"keyword\">only</span> the original group generators</code></pre>",
  "id": "5d0f384141654c559ee6bf2a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T08:28:49.753Z",
  "text": "Edit: Actually it seems to give the correct result `x2*x3`with no need for rearrangement. I forgot to look at the docstring:\n```\n        Return a list of strong generators `[s1, ..., sn]`\n        s.t `g = sn*...*s1`. If `original=True`, make the list\n        contain only the original group generators\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "So the order of the list is reversed in the product.",
  "id": "5d0f387bd35d4162a886b671",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T08:29:47.695Z",
  "text": "So the order of the list is reversed in the product.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "So, now we can get the relations by providing the missing generators.",
  "id": "5d0f38cb4291ad76a5b31569",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T08:31:07.451Z",
  "text": "So, now we can get the relations by providing the missing generators.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Those 4 generators suffice for the pc presentation. No new ones need be provided.",
  "id": "5d0f3adc4291ad76a5b327b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T08:39:56.387Z",
  "text": "Those 4 generators suffice for the pc presentation. No new ones need be provided.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "In the case of A4 where we took only one generator, so we can choose it randomly?",
  "id": "5d0f3b637456db0bb83dc95a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T08:42:11.182Z",
  "text": "In the case of A4 where we took only one generator, so we can choose it randomly?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Any element that will generate the quotient group A3/H. As it is cyclic of order 3, its two nontrivial elements are generators. Hence it will suffice to take any element of A3 that is not in H.",
  "id": "5d0f3c7ee7267a62a92a4a09",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T08:46:54.580Z",
  "text": "Any element that will generate the quotient group A3/H. As it is cyclic of order 3, its two nontrivial elements are generators. Hence it will suffice to take any element of A3 that is not in H.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "What does the <code>strong generating set</code>represents from the <code>schreier_sims_incremental</code>algorithm. I read somewhere in the handbook that it can also be used as the polycyclic generating sequence!",
  "id": "5d0f3f1b4b0b7b477b47c6a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T08:58:03.545Z",
  "text": "What does the `strong generating set`represents from the `schreier_sims_incremental`algorithm. I read somewhere in the handbook that it can also be used as the polycyclic generating sequence!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\nFinally, S4 is generated by <code>x0 = (0 1)</code> and A4. ( <code>(0 1 2 3)</code> is already in A4.)</blockquote>\n<pre><code>&gt;&gt;&gt; <span class=\"function\"><span class=\"title\">Permutation</span><span class=\"params\">(<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>)</span></span> <span class=\"keyword\">in</span> <span class=\"function\"><span class=\"title\">AlternatingGroup</span><span class=\"params\">(<span class=\"number\">4</span>)</span></span>\nFalse</code></pre>",
  "id": "5d0f4535d35d4162a8871ee2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T09:24:05.840Z",
  "text": "> Finally, S4 is generated by `x0 = (0 1)` and A4. ( `(0 1 2 3)` is already in A4.)\n\n```\n>>> Permutation(0,1,2,3) in AlternatingGroup(4)\nFalse\n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Oh, my mistake. It is odd as well. It could be taken in the sequence instead of <code>(0, 1)</code>. ",
  "id": "5d0f4887d35d4162a88738e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T09:38:15.457Z",
  "text": "Oh, my mistake. It is odd as well. It could be taken in the sequence instead of `(0, 1)`. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "A strong generating set is an extended generating set that will also contain generators for all stabilizer groups appearing in the Screier-Sims algorithm.",
  "id": "5d0f4921bc834f76a4cb37d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T09:40:49.078Z",
  "text": "A strong generating set is an extended generating set that will also contain generators for all stabilizer groups appearing in the Screier-Sims algorithm.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>I read somewhere in the handbook that it can also be used as the polycyclic generating sequence!</p></blockquote>\n<p>Pg. no. 99 1st paragraph!</p>",
  "id": "5d0f4fb4d16b28559f7326e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T10:08:52.250Z",
  "text": "> I read somewhere in the handbook that it can also be used as the polycyclic generating sequence!\n\nPg. no. 99 1st paragraph!\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Section 4.4.6",
  "id": "5d0f500e4291ad76a5b3d5af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T10:10:22.418Z",
  "text": "Section 4.4.6",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>It could be taken in the sequence instead of <code>(0, 1)</code>. </p></blockquote>\n<p>Shouldn&#39;t we have to take both <code>(0 1 2 3)</code> and <code>(0, 1)</code>?</p>",
  "id": "5d0f506f7456db0bb83e7b33",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T10:11:59.689Z",
  "text": "> It could be taken in the sequence instead of `(0, 1)`. \n\nShouldn't we have to take both `(0 1 2 3)` and `(0, 1)`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Those are both odd. Only one is needed to generate S4 over A4.",
  "id": "5d0f556afd4aa914b52d1b2d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T10:33:14.583Z",
  "text": "Those are both odd. Only one is needed to generate S4 over A4.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-06-23T11:21:01.872Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "If G0 &gt; G1 &gt; ... is a polycyclic series and x0, x1, ... is its generating polycyclic sequence, then G1 is generated by x1, .... If G0 = S4 then G1 = A4 (it must be a normal subgroup). Hence x1, ... are in A4 and only x0 is not. So both (0 1 2 3) and (0 1) cannot be in a polycyclic sequence.",
  "id": "5d0f608e1e35ef14b6a4fc1d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T11:20:46.043Z",
  "text": "If G0 > G1 > ... is a polycyclic series and x0, x1, ... is its generating polycyclic sequence, then G1 is generated by x1, .... If G0 = S4 then G1 = A4 (it must be a normal subgroup). Hence x1, ... are in A4 and only x0 is not. So both (0 1 2 3) and (0 1) cannot be in a polycyclic sequence.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "So, we can take any one of them?",
  "id": "5d0f6d43d16b28559f741edf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T12:14:59.699Z",
  "text": "So, we can take any one of them?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-06-23T12:30:48.652Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Of those two? Yes.",
  "id": "5d0f70cabc834f76a4cc8299",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T12:30:02.461Z",
  "text": "Of those two? Yes.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The relations will be different, of course.",
  "id": "5d0f71221e35ef14b6a58978",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T12:31:30.084Z",
  "text": "The relations will be different, of course.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I usually try make the simplest choices in examples.",
  "id": "5d0f71504291ad76a5b4dce4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T12:32:16.816Z",
  "text": "I usually try make the simplest choices in examples.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay!",
  "id": "5d0f7593207f6e6963ecdefc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-23T12:50:27.132Z",
  "text": "Okay!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<pre><code>x0 = (<span class=\"number\">0</span> <span class=\"number\">1</span>)\nx1 = (<span class=\"number\">0</span> <span class=\"number\">1</span> <span class=\"number\">2</span>)\nx2 = (<span class=\"number\">0</span> <span class=\"number\">2</span>)(<span class=\"number\">1</span> <span class=\"number\">3</span>)\nx3 = (<span class=\"number\">0</span> <span class=\"number\">1</span>)(<span class=\"number\">2</span> <span class=\"number\">3</span>)\n\npower-relations:\nx0**<span class=\"number\">2</span> = () = x1**<span class=\"number\">3</span> = x2**<span class=\"number\">2</span> = x3**<span class=\"number\">2</span>\n\nconjugate-relations:\nx0**-<span class=\"number\">1</span>*x1*x0 = (<span class=\"number\">0</span> <span class=\"number\">2</span> <span class=\"number\">1</span>) = x1**<span class=\"number\">2</span>\nx1**-<span class=\"number\">1</span>*x2*x1 = (<span class=\"number\">0</span> <span class=\"number\">1</span>)(<span class=\"number\">2</span> <span class=\"number\">3</span>) = x3\nx2**-<span class=\"number\">1</span>*x3*x2 = (<span class=\"number\">0</span> <span class=\"number\">1</span>)(<span class=\"number\">2</span> <span class=\"number\">3</span>) = x3\nx1**-<span class=\"number\">1</span>*x3*x1 = (<span class=\"number\">0</span> <span class=\"number\">3</span>)(<span class=\"number\">1</span> <span class=\"number\">2</span>) = x2*x3</code></pre>",
  "id": "5d103a10cedb297a81ab916c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T02:48:48.556Z",
  "text": "```\nx0 = (0 1)\nx1 = (0 1 2)\nx2 = (0 2)(1 3)\nx3 = (0 1)(2 3)\n\npower-relations:\nx0**2 = () = x1**3 = x2**2 = x3**2\n\nconjugate-relations:\nx0**-1*x1*x0 = (0 2 1) = x1**2\nx1**-1*x2*x1 = (0 1)(2 3) = x3\nx2**-1*x3*x2 = (0 1)(2 3) = x3\nx1**-1*x3*x1 = (0 3)(1 2) = x2*x3\n\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Hence, to find the polycyclic sequence we can do something like starting from the beginning of the composition series take the missing generators between <code>G(i)/G(i+1)</code> and insert a generator with minimum order in the polycyclic sequence. In ths way we&#39;ll have the number of elements in sequence will be euqal to the number of groups in the composition series.",
  "id": "5d103adc1e35ef14b6ac49e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T02:52:12.634Z",
  "text": "Hence, to find the polycyclic sequence we can do something like starting from the beginning of the composition series take the missing generators between `G(i)/G(i+1)` and insert a generator with minimum order in the polycyclic sequence. In ths way we'll have the number of elements in sequence will be euqal to the number of groups in the composition series.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-06-24T04:29:31.327Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The relations look good except that the conjugates of x2 and x3 by x0 are still missing. Next, you should put these into a suitable data structure, <code>dict</code>, I think. In conjugate relations, the keys could be pairs of generators or the values could be dicts with keys either the conjugating  generator or the one to be conjugated. Some experimentation will probably be needed. These could then be used to test the collection code that should be finished as the next step. The creation of general polycyclic sequences and presentations can be postponed until the collection code is working.",
  "id": "5d1051145bc3210bb78d1c90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T04:27:00.013Z",
  "text": "The relations look good except that the conjugates of x2 and x3 by x0 are still missing. Next, you should put these into a suitable data structure, `dict`, I think. In conjugate relations, the keys could be pairs of generators or the values could be dicts with keys either the conjugating  generator or the one to be conjugated. Some experimentation will probably be needed. These could then be used to test the collection code that should be finished as the next step. The creation of general polycyclic sequences and presentations can be postponed until the collection code is working.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Ok!",
  "id": "5d1054607456db0bb8471ee5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T04:41:04.669Z",
  "text": "Ok!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I&#39;ve updated the blog with Phase-I progress please have a look!<br><a href=\"https://divyanshu132.github.io/gsoc-week-4\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://divyanshu132.github.io/gsoc-week-4</a>",
  "id": "5d106d49d16b28559f7ccbf0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T06:27:21.610Z",
  "text": "I've updated the blog with Phase-I progress please have a look!\nhttps://divyanshu132.github.io/gsoc-week-4",
  "unread": false,
  "urls": [
   {
    "url": "https://divyanshu132.github.io/gsoc-week-4"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I think, If the relation is <code>x0**-1*x3*x0</code> then mapping the complete conjugate relation with the conjugated generator will be fine!<br><code>{x3 : x0**-1*x3*x0}</code>.",
  "id": "5d10a17c1c1f606239ebb609",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T10:10:04.053Z",
  "text": "I think, If the relation is `x0**-1*x3*x0` then mapping the complete conjugate relation with the conjugated generator will be fine!\n`{x3 : x0**-1*x3*x0}`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-06-24T11:07:21.772Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The conjugate relations have two parameters, the generator <code>xi</code> to be conjugated and the generator <code>xj</code> (j &lt; i) which acts by conjugation. There are several ways to arrange the data in <code>dict</code>. The simplest one  is <code>{(xi, xj): xj**-1*xi*xj}</code> (where the value is in collected form). Other possibilities are iterated <code>dict</code>s <code>{xi: {xj: ...}}</code> and <code>{xj: {xi: ...}}</code> but I am not sure if either of those would be better than the first construction where keys are pairs <code>(xi, xj)</code>. So maybe you could use that form, at least for now.",
  "id": "5d10ae8d154d273638d044d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T11:05:49.930Z",
  "text": "The conjugate relations have two parameters, the generator `xi` to be conjugated and the generator `xj` (j < i) which acts by conjugation. There are several ways to arrange the data in `dict`. The simplest one  is `{(xi, xj): xj**-1*xi*xj}` (where the value is in collected form). Other possibilities are iterated `dict`s `{xi: {xj: ...}}` and `{xj: {xi: ...}}` but I am not sure if either of those would be better than the first construction where keys are pairs `(xi, xj)`. So maybe you could use that form, at least for now.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "editedAt": "2019-06-24T12:02:04.799Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I&#39;ve tried this:<br>Directly took the relators that we have computed above and a <code>word = x3*x2*x1*x0</code> then I think the final collected word should be <code>x0*x1**2*x2**2*x3**3</code>.",
  "id": "5d10bb77d010383639c44101",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:00:55.345Z",
  "text": "I've tried this:\nDirectly took the relators that we have computed above and a `word = x3*x2*x1*x0` then I think the final collected word should be `x0*x1**2*x2**2*x3**3`.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<a href=\"https://files.gitter.im/sympy/GroupTheory/VFwk/collect.jpg\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/sympy/GroupTheory/VFwk/thumb/collect.jpg\" alt=\"collect.jpg\" rel=\"nofollow\"></a>",
  "id": "5d10bb8854a9d54980fb16d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:01:12.961Z",
  "text": "[![collect.jpg](https://files.gitter.im/sympy/GroupTheory/VFwk/thumb/collect.jpg)](https://files.gitter.im/sympy/GroupTheory/VFwk/collect.jpg)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/sympy/GroupTheory/VFwk/thumb/collect.jpg"
   },
   {
    "url": "https://files.gitter.im/sympy/GroupTheory/VFwk/collect.jpg"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "You can test the equality by turning the words to permutations.",
  "id": "5d10bbfe18e32562382d3bb7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:03:10.404Z",
  "text": "You can test the equality by turning the words to permutations.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "At each instant after all the uncollected words are processed if the final word is not collected then again we&#39;ll compute the uncollected words!",
  "id": "5d10bc29260d3b498152286e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:03:53.910Z",
  "text": "At each instant after all the uncollected words are processed if the final word is not collected then again we'll compute the uncollected words!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>You can test the equality by turning the words to permutations.</p></blockquote>\n<p>they will be equal?</p>",
  "id": "5d10bca25e67ff0bcbdbecbe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:05:54.512Z",
  "text": "> You can test the equality by turning the words to permutations.\n\nthey will be equal?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "They should be equal if the collected form is correct.",
  "id": "5d10bcce492f010bcaae896d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:06:38.512Z",
  "text": "They should be equal if the collected form is correct.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I don&#39;t understand how <code>x2*x3*x0*x1**2</code> is transformed.",
  "id": "5d10bd1880f91e2d3e815dc3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:07:52.872Z",
  "text": "I don't understand how `x2*x3*x0*x1**2` is transformed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "At <code>x2*x3*x0*x1**2</code> <code>x3*x0</code> will be an uncollected word so according to algorithm if we have case like <code>x[j+1]*x[j]</code> then it should be transformed to <code>x[j]*Relation(x[j+1], x[j])</code>.",
  "id": "5d10be1f54a9d54980fb3323",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:12:15.301Z",
  "text": "At `x2*x3*x0*x1**2` `x3*x0` will be an uncollected word so according to algorithm if we have case like `x[j+1]*x[j]` then it should be transformed to `x[j]*Relation(x[j+1], x[j])`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Yes, but what is the relation?",
  "id": "5d10be3cf5b00456dfd175e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:12:44.718Z",
  "text": "Yes, but what is the relation?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It does not seem that <code>x0</code> and <code>x3</code> would commute. Or do they?",
  "id": "5d10be73f5b00456dfd17841",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:13:39.315Z",
  "text": "It does not seem that `x0` and `x3` would commute. Or do they?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I&#39;ve used this <code>x0**-1*x3*x0 = x3</code> conjugate relation!",
  "id": "5d10be881c1f606239eccb88",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:14:00.253Z",
  "text": "I've used this `x0**-1*x3*x0 = x3` conjugate relation!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Oh. If they <em>do</em> commute, then it is OK.",
  "id": "5d10beb7ae76db56e03924d2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:14:47.767Z",
  "text": "Oh. If they *do* commute, then it is OK.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Yes, they do commute.<pre><code>&gt;&gt;&gt; x0*x3\n<span class=\"function\"><span class=\"title\">Permutation</span><span class=\"params\">(<span class=\"number\">2</span>, <span class=\"number\">3</span>)</span></span>\n&gt;&gt;&gt; x3*x0\n<span class=\"function\"><span class=\"title\">Permutation</span><span class=\"params\">(<span class=\"number\">2</span>, <span class=\"number\">3</span>)</span></span></code></pre>",
  "id": "5d10bee5d010383639c46535",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:15:33.061Z",
  "text": "Yes, they do commute.\n```\n>>> x0*x3\nPermutation(2, 3)\n>>> x3*x0\nPermutation(2, 3)\n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Then there is <code>x3*x3</code>. The power relation could be used.",
  "id": "5d10bf30154d273638d0e2e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:16:48.934Z",
  "text": "Then there is `x3*x3`. The power relation could be used.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-06-24T12:17:51.957Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Yes, I missed that!",
  "id": "5d10bf6530cc05479fb6c8ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:17:41.738Z",
  "text": "Yes, I missed that!",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I have done it only in terms of conjugate relation.",
  "id": "5d10bfa479a193262877d65a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:18:44.326Z",
  "text": "I have done it only in terms of conjugate relation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The power relations should be used if the exponents grow. They should be less than the relative orders.",
  "id": "5d10c00cd010383639c47103",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:20:28.689Z",
  "text": "The power relations should be used if the exponents grow. They should be less than the relative orders.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Yes so should we take <code>1</code> in the equality of power relations.",
  "id": "5d10c04caafbc326297668ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:21:32.111Z",
  "text": "Yes so should we take `1` in the equality of power relations.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Is that the identity permutation? I forget its name.",
  "id": "5d10c08918e32562382d66d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:22:33.554Z",
  "text": "Is that the identity permutation? I forget its name.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Yes, the output of all the power relations will be Identity!",
  "id": "5d10c0aaf5b00456dfd18946",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:23:06.355Z",
  "text": "Yes, the output of all the power relations will be Identity!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Yes, in this case, but not in general.",
  "id": "5d10c0c095efec2d3dfb4959",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:23:28.856Z",
  "text": "Yes, in this case, but not in general.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-06-24T12:24:43.022Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I think it will always be identity because the relative order will be equal to the order of those power relations.",
  "id": "5d10c0f75e67ff0bcbdc1747",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:24:23.795Z",
  "text": "I think it will always be identity because the relative order will be equal to the order of those power relations.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that the collection methods should handle words, which are actually tuples. So the identity would be the empty tuple.",
  "id": "5d10c12530cc05479fb6d8c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:25:09.410Z",
  "text": "I think that the collection methods should handle words, which are actually tuples. So the identity would be the empty tuple.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay!",
  "id": "5d10c14e80f91e2d3e8188f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:25:50.094Z",
  "text": "Okay!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "If you take the cyclic group C(4) generated by <code>x0 = (0 1 2 3)</code>, then <code>(x0, x1)</code> where <code>x1 = x0**2</code>, is a polycyclic sequence where the power relation of <code>x0</code> is not the identity.",
  "id": "5d10c214154d273638d0fac6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:29:08.025Z",
  "text": "If you take the cyclic group C(4) generated by `x0 = (0 1 2 3)`, then `(x0, x1)` where `x1 = x0**2`, is a polycyclic sequence where the power relation of `x0` is not the identity.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-06-24T12:34:05.399Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Or it will be <code>x0**4 = x1**2</code>.",
  "id": "5d10c329ae76db56e0394e54",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:33:45.728Z",
  "text": "Or it will be `x0**4 = x1**2`.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "No. The relative order of <code>x0</code> over the subgroup generated by <code>x1</code> is 2.",
  "id": "5d10c39280f91e2d3e819dc3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:35:30.409Z",
  "text": "No. The relative order of `x0` over the subgroup generated by `x1` is 2.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Both generators have relative order 2 and the relations are <code>x0**2 = x1</code> and <code>x1**2 = id</code>.",
  "id": "5d10c3fc154d273638d10d98",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:37:16.245Z",
  "text": "Both generators have relative order 2 and the relations are `x0**2 = x1` and `x1**2 = id`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Got it!",
  "id": "5d10c51fae76db56e03962c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T12:42:07.654Z",
  "text": "Got it!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "2-questions:<br>Will all the power relations for S(4) will be equal to identity?<br>Should we take the relative order as <code>(x0, x1, x2, x3) -&gt; (1, 2, 3, 4)</code>?",
  "id": "5d110bc7aafbc32629794f3b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T17:43:35.195Z",
  "text": "2-questions:\nWill all the power relations for S(4) will be equal to identity?\nShould we take the relative order as `(x0, x1, x2, x3) -> (1, 2, 3, 4)`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Yes, they will be for the <code>xi</code> as above defined (and probably for many other choices). That is the natural order coming from the order of the subgroups. (The order of x2 and x3 can be changed as they commute.)",
  "id": "5d1110aa260d3b4981553ca0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T18:04:26.622Z",
  "text": "Yes, they will be for the `xi` as above defined (and probably for many other choices). That is the natural order coming from the order of the subgroups. (The order of x2 and x3 can be changed as they commute.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Then, in case of <code>x3**2</code> it will not be treated as uncollected because <code>2 belongs to {1, ..., 4-1}</code>.",
  "id": "5d11120dae76db56e03c46aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T18:10:21.857Z",
  "text": "Then, in case of `x3**2` it will not be treated as uncollected because `2 belongs to {1, ..., 4-1}`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Hmm, it seems that we have different idea of relative order.",
  "id": "5d1112ff95efec2d3dfe4cd4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T18:14:23.985Z",
  "text": "Hmm, it seems that we have different idea of relative order.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I thought that 1, 2, 3, 4 should be the order where the generators appear.",
  "id": "5d11132b1c1f606239efe7e3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T18:15:07.750Z",
  "text": "I thought that 1, 2, 3, 4 should be the order where the generators appear.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "But the real <em>relative orders</em> are 2, 3, 2, 2.",
  "id": "5d11134d260d3b4981555357",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T18:15:41.954Z",
  "text": "But the real *relative orders* are 2, 3, 2, 2.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "So only x1 can appear squared.",
  "id": "5d111371ae76db56e03c54e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T18:16:17.169Z",
  "text": "So only x1 can appear squared.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>But the real <em>relative orders</em> are 2, 3, 2, 2.</p></blockquote>\n<p>Yes, thats right!</p>",
  "id": "5d111498f5b00456dfd4a892",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-24T18:21:12.331Z",
  "text": "> But the real *relative orders* are 2, 3, 2, 2.\n\nYes, thats right!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Good morning. We have the power relation <code>x2**2 = ()</code> and an uncollected word <code>x2**2</code> now, according to algorithm <code>2 = 1*2 + 0</code> so it should be replaced by <code>x2**0*Relation(x2, x2)**1</code> now I think if we take the result as an Identity or <code>()</code> then we may not get the required collected word but if the above result is equal to <code>x2</code>then correct word will be collected!",
  "id": "5d119b1895efec2d3d02daf9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T03:55:04.395Z",
  "text": "Good morning. We have the power relation `x2**2 = ()` and an uncollected word `x2**2` now, according to algorithm `2 = 1*2 + 0` so it should be replaced by `x2**0*Relation(x2, x2)**1` now I think if we take the result as an Identity or `()` then we may not get the required collected word but if the above result is equal to `x2`then correct word will be collected!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "What is the word you are trying to collect?",
  "id": "5d11a7af1c1f606239f4d9d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T04:48:47.119Z",
  "text": "What is the word you are trying to collect?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "The same that we&#39;ve tried above.",
  "id": "5d11a7de18e3256238357b52",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T04:49:34.508Z",
  "text": "The same that we've tried above.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "We&#39;ll have <code>x0*x1**2*x3*x2**2*x3**2</code>.",
  "id": "5d11a81654a9d54980034e5e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T04:50:30.351Z",
  "text": "We'll have `x0*x1**2*x3*x2**2*x3**2`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Both <code>x2**2</code> and <code>x3**2</code> are equal to identity. They can be omitted (or replaced by <code>x2**0</code> and <code>x3**0</code> if we want to show all exponents).",
  "id": "5d11a884f5b00456dfd9ac85",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T04:52:20.768Z",
  "text": "Both `x2**2` and `x3**2` are equal to identity. They can be omitted (or replaced by `x2**0` and `x3**0` if we want to show all exponents).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "So we have <code>x0*x1**2*x3</code>.",
  "id": "5d11a8bad010383639cc7be3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T04:53:14.138Z",
  "text": "So we have `x0*x1**2*x3`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "But then something is wrong because this will not be equal to <code>x3*x2*x1*x0</code>.",
  "id": "5d11aa2030cc05479fbefd14",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T04:59:12.481Z",
  "text": "But then something is wrong because this will not be equal to `x3*x2*x1*x0`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Can you repeat the steps here?",
  "id": "5d11ab551c1f606239f4f6b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:04:21.649Z",
  "text": "Can you repeat the steps here?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Should I send the image of steps!",
  "id": "5d11ab8554a9d54980036b0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:05:09.074Z",
  "text": "Should I send the image of steps!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Just write the expressions here one by one.",
  "id": "5d11abbc95efec2d3d03700e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:06:04.991Z",
  "text": "Just write the expressions here one by one.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<pre><code>x3<span class=\"keyword\">*</span>x2<span class=\"keyword\">*</span>x1<span class=\"keyword\">*</span>x0\nx2<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x1<span class=\"keyword\">*</span>x0\nx2<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x0<span class=\"keyword\">*</span>x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2\nx2<span class=\"keyword\">*</span>x0<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2\nx0<span class=\"keyword\">*</span>x2<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2\nx0<span class=\"keyword\">*</span>x2<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2<span class=\"keyword\">*</span>x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2\nx0<span class=\"keyword\">*</span>x2<span class=\"keyword\">*</span>x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2<span class=\"keyword\">*</span>x2<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2\nx0<span class=\"keyword\">*</span>x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x2<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2</code></pre>",
  "id": "5d11acbe1c1f606239f504bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:10:22.130Z",
  "text": "```\nx3*x2*x1*x0\nx2*x3*x1*x0\nx2*x3*x0*x1**2\nx2*x0*x3*x1**2\nx0*x2*x3*x3*x1**2\nx0*x2*x3**2*x1**2\nx0*x2*x1**2*x2**2*x3**2\nx0*x1**2*x3*x2**2*x3**2\n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "You can compute each product explicitly. I would also omit <code>x3*x3</code>.",
  "id": "5d11ae8380f91e2d3e89f5ad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:17:55.050Z",
  "text": "You can compute each product explicitly. I would also omit `x3*x3`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Till the second last step it seems correct!",
  "id": "5d11af3530cc05479fbf2f34",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:20:53.503Z",
  "text": "Till the second last step it seems correct!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "All are equal to (0, 3).",
  "id": "5d11af4c79a1932628801d00",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:21:16.155Z",
  "text": "All are equal to (0, 3).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "So only the last one is wrong.",
  "id": "5d11af6c30cc05479fbf3059",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:21:48.074Z",
  "text": "So only the last one is wrong.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Yes!",
  "id": "5d11af725e67ff0bcbe45425",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:21:54.655Z",
  "text": "Yes!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "<code>x0*x2*x1**2*x2**2*x3**2 = x0*x2*x1**2</code> How do you derive the last form?",
  "id": "5d11b0bf67887347a0833dd5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:27:27.316Z",
  "text": "`x0*x2*x1**2*x2**2*x3**2 = x0*x2*x1**2` How do you derive the last form?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Since <code>x2*x1</code>is uncollected we&#39;ll use the relation <code>x1**-1*x2*x1 = x3</code> then it will be <code>x0*x1**2*x3*.....</code> ",
  "id": "5d11b16995efec2d3d03a3a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:30:17.671Z",
  "text": "Since `x2*x1`is uncollected we'll use the relation `x1**-1*x2*x1 = x3` then it will be `x0*x1**2*x3*.....` ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I&#39;m applying this <code>x[j+1]*x[j]**a = x[j]**a*R(x[j+1], x[j])</code>. I&#39;m not sure if <code>x[j]**a</code> is right?",
  "id": "5d11b1d9492f010bcab72171",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:32:09.889Z",
  "text": "I'm applying this `x[j+1]*x[j]**a = x[j]**a*R(x[j+1], x[j])`. I'm not sure if `x[j]**a` is right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "that is we can take <code>x[j]</code> with the exponent!",
  "id": "5d11b20267887347a0834ae4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:32:50.206Z",
  "text": "that is we can take `x[j]` with the exponent!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "That is not right. You should write <code>x0*x2*x1*x1</code> and then conjugate twice, once for each <code>x1</code> separately.  The conjugate relation is different for powers.",
  "id": "5d11b325aafbc326297f0aa8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:37:41.120Z",
  "text": "That is not right. You should write `x0*x2*x1*x1` and then conjugate twice, once for each `x1` separately.  The conjugate relation is different for powers.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Then we have to do this in case of <code>x3*x3</code> as well?",
  "id": "5d11b3a8492f010bcab73019",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:39:52.477Z",
  "text": "Then we have to do this in case of `x3*x3` as well?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "No. We first use the power relation.",
  "id": "5d11b3d467887347a0835862",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:40:36.325Z",
  "text": "No. We first use the power relation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "We can&#39;t use powe relation there because it is <code>x3**3 = ()</code>.",
  "id": "5d11b41c260d3b49815aa84f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:41:48.882Z",
  "text": "We can't use powe relation there because it is `x3**3 = ()`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "ohh no that is <code>x3**2 = ()</code>.",
  "id": "5d11b44530cc05479fbf56a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:42:29.064Z",
  "text": "ohh no that is `x3**2 = ()`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Still I don&#39;t think we can use power relation there because at step <code>x2*x0*x3*x1**2</code> the uncollected words are all conjugate words <code>{x2*x0, x3*x1}</code> and if we are not done with the complete list of uncollected words (which are all conjugate) we&#39;ll not be able to compute uncollected words or manipulate the word.",
  "id": "5d11b56895efec2d3d03ce93",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:47:20.901Z",
  "text": "Still I don't think we can use power relation there because at step `x2*x0*x3*x1**2` the uncollected words are all conjugate words `{x2*x0, x3*x1}` and if we are not done with the complete list of uncollected words (which are all conjugate) we'll not be able to compute uncollected words or manipulate the word.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Because I think power relation can be used only if we want to replace an uncollected word in the form of power relation only!",
  "id": "5d11b5c354a9d5498003bdd8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:48:51.207Z",
  "text": "Because I think power relation can be used only if we want to replace an uncollected word in the form of power relation only!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "But <code>x3**2</code> is also uncollected.",
  "id": "5d11b5ff260d3b49815ab87c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:49:51.257Z",
  "text": "But `x3**2` is also uncollected.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Uncollected words may overlap.",
  "id": "5d11b61c80f91e2d3e8a3a37",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:50:20.700Z",
  "text": "Uncollected words may overlap.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that we should take one of them. Then something may change.",
  "id": "5d11b65d5e67ff0bcbe49097",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:51:25.838Z",
  "text": "I think that we should take one of them. Then something may change.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Initially we had <code>x2*x0*x3*x1**2</code> where we computed the uncollected words which is <code>{x2*x0, x3*x1}</code> and now I&#39;m saying is till all the uncollected words in the list are processed we can&#39;t calculate the uncollected_words!",
  "id": "5d11b67730cc05479fbf69c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:51:51.724Z",
  "text": "Initially we had `x2*x0*x3*x1**2` where we computed the uncollected words which is `{x2*x0, x3*x1}` and now I'm saying is till all the uncollected words in the list are processed we can't calculate the uncollected_words!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "So, I think till <code>x0*x2*x1**2*x2**2*x3**2</code> the uncollected word <code>x3*x3</code> will not come in picture!",
  "id": "5d11b6b7492f010bcab747de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:52:55.101Z",
  "text": "So, I think till `x0*x2*x1**2*x2**2*x3**2` the uncollected word `x3*x3` will not come in picture!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I will first appear here <code>x0*x2*x3*x3*x1**2</code>.",
  "id": "5d11b6e230cc05479fbf6d72",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:53:38.597Z",
  "text": "I will first appear here `x0*x2*x3*x3*x1**2`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "So, do we have to compute uncollected words after each manipulation of the word. ",
  "id": "5d11b731d010383639ccf42b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:54:57.322Z",
  "text": "So, do we have to compute uncollected words after each manipulation of the word. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that we should apply the power relations whenever that is possible as that will lower the exponents.",
  "id": "5d11b73b492f010bcab74af8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:55:07.618Z",
  "text": "I think that we should apply the power relations whenever that is possible as that will lower the exponents.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Note the previous uncollected words are still not finished.",
  "id": "5d11b74380f91e2d3e8a4599",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:55:15.866Z",
  "text": "Note the previous uncollected words are still not finished.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "We obviously cannot collect them all at once.",
  "id": "5d11b761492f010bcab74cfc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:55:45.910Z",
  "text": "We obviously cannot collect them all at once.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The algorithm works by taking one step at a time.",
  "id": "5d11b788aafbc326297f2fb0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:56:24.491Z",
  "text": "The algorithm works by taking one step at a time.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>We obviously cannot collect them all at once.</p></blockquote>\n<p>I&#39;m saying if we are finished with all the previous uncollected words then only we&#39;ll go to compute it again!</p>",
  "id": "5d11b7b254a9d5498003cd73",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:57:06.252Z",
  "text": "> We obviously cannot collect them all at once.\n\nI'm saying if we are finished with all the previous uncollected words then only we'll go to compute it again!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>I think that we should apply the power relations whenever that is possible as that will lower the exponents.</p></blockquote>\n<p>This may be a possibility!</p>",
  "id": "5d11b7bff5b00456dfda3284",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:57:19.375Z",
  "text": "> I think that we should apply the power relations whenever that is possible as that will lower the exponents.\n\nThis may be a possibility!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-06-25T05:59:22.282Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "<blockquote>\n  finished with all the previous uncollected words </blockquote>\n",
  "id": "5d11b82767887347a0837e44",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T05:59:03.746Z",
  "text": ">   finished with all the previous uncollected words ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2019-06-25T06:00:18.188Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that if there are several, only one can be handled in general. ",
  "id": "5d11b86430cc05479fbf7e79",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T06:00:04.956Z",
  "text": "I think that if there are several, only one can be handled in general. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<a href=\"https://files.gitter.im/sympy/GroupTheory/Kh9L/collect1.jpg\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/sympy/GroupTheory/Kh9L/thumb/collect1.jpg\" alt=\"collect1.jpg\" rel=\"nofollow\"></a>",
  "id": "5d11b8baae76db56e0420843",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T06:01:30.872Z",
  "text": "[![collect1.jpg](https://files.gitter.im/sympy/GroupTheory/Kh9L/thumb/collect1.jpg)](https://files.gitter.im/sympy/GroupTheory/Kh9L/collect1.jpg)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/sympy/GroupTheory/Kh9L/thumb/collect1.jpg"
   },
   {
    "url": "https://files.gitter.im/sympy/GroupTheory/Kh9L/collect1.jpg"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2019-06-25T06:02:48.417Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "There are two uncollected subwords in <code>x2*x1*x0</code>. If we collect one of them, the other one will not remain.",
  "id": "5d11b8bfaafbc326297f3ba6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T06:01:35.071Z",
  "text": "There are two uncollected subwords in `x2*x1*x0`. If we collect one of them, the other one will not remain.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "At step-4 we have <code>{x2*x0, x3*x1}</code> and now till this list is operated completely we are not gonna compute the uncollected words! ",
  "id": "5d11b8fd154d273638d9a108",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T06:02:37.461Z",
  "text": "At step-4 we have `{x2*x0, x3*x1}` and now till this list is operated completely we are not gonna compute the uncollected words! ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "That is at step 7.",
  "id": "5d11b912492f010bcab75a2e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T06:02:58.862Z",
  "text": "That is at step 7.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-06-25T06:04:16.610Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "This is what I&#39;m thinking!",
  "id": "5d11b9381c1f606239f56b0a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T06:03:36.728Z",
  "text": "This is what I'm thinking!",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>I think that we should apply the power relations whenever that is possible as that will lower the exponents.</p></blockquote>\n<p>This seems fine to me!</p>",
  "id": "5d11b9c618e3256238360d70",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T06:05:58.189Z",
  "text": "> I think that we should apply the power relations whenever that is possible as that will lower the exponents.\n\nThis seems fine to me!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "What does the coupling <code>x3**2*x1**2</code> mean on line 6?",
  "id": "5d11b9fc95efec2d3d03f484",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T06:06:52.971Z",
  "text": "What does the coupling `x3**2*x1**2` mean on line 6?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I just thought that if we&#39;ll implement this then ultimately <code>x0*x2*x3*x3*x1**2</code> will be converted to <code>x0*x2*x3**2*x1**2</code>",
  "id": "5d11ba61492f010bcab76564",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T06:08:33.229Z",
  "text": "I just thought that if we'll implement this then ultimately `x0*x2*x3*x3*x1**2` will be converted to `x0*x2*x3**2*x1**2`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<pre><code>&gt;&gt;&gt; F, x0, x1, x2, x3 = free_group(<span class=\"string\">\"x0, x1, x2, x3\"</span>)\n&gt;&gt;&gt; x0<span class=\"keyword\">*</span>x2<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2\nx0<span class=\"keyword\">*</span>x2<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2<span class=\"keyword\">*</span>x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2\n&gt;&gt;&gt;</code></pre>",
  "id": "5d11bab6154d273638d9b21a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T06:09:58.886Z",
  "text": "```\n>>> F, x0, x1, x2, x3 = free_group(\"x0, x1, x2, x3\")\n>>> x0*x2*x3*x3*x1**2\nx0*x2*x3**2*x1**2\n>>> \n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "But that is not collected.",
  "id": "5d11baec80f91e2d3e8a63fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T06:10:52.318Z",
  "text": "But that is not collected.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "There are no relations in the free group.",
  "id": "5d11bb2095efec2d3d03fd37",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T06:11:44.112Z",
  "text": "There are no relations in the free group.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Tht&#39;s why we&#39;ll proceed further to compute uncollected words again!",
  "id": "5d11bb84154d273638d9b85c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T06:13:24.532Z",
  "text": "Tht's why we'll proceed further to compute uncollected words again!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I think while writing the steps it is only in the final step that power relation can be used if all the uncollected words are conjugate and before that <code>x3*x3</code> or anything in this form can&#39;t be replaced by <code>x3**2</code>! And then we&#39;ll also get the correct collected word, though the number of steps will be increased from 9 to 16!",
  "id": "5d12494be9a49c3dabf5f130",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T16:18:19.473Z",
  "text": "I think while writing the steps it is only in the final step that power relation can be used if all the uncollected words are conjugate and before that `x3*x3` or anything in this form can't be replaced by `x3**2`! And then we'll also get the correct collected word, though the number of steps will be increased from 9 to 16!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-06-25T16:23:46.509Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "In that case step-3 should be <code>x2*x3*x0*x1*x1</code> instead of <code>x2*x3*x0*x1**2</code>as well.",
  "id": "5d124a07b03bdb29310405fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-25T16:21:27.450Z",
  "text": "In that case step-3 should be `x2*x3*x0*x1*x1` instead of `x2*x3*x0*x1**2`as well.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<pre><code><span class=\"prompt\">&gt;&gt;</span>&gt; <span class=\"constant\">F</span>, x = free_group(<span class=\"string\">\"x\"</span>)\n<span class=\"prompt\">&gt;&gt;</span>&gt; w = x**<span class=\"number\">2</span>\n<span class=\"prompt\">&gt;&gt;</span>&gt; type(w)\n&lt;<span class=\"class\"><span class=\"keyword\">class</span> '<span class=\"title\">sympy</span>.<span class=\"title\">combinatorics</span>.<span class=\"title\">free_groups</span>.<span class=\"title\">FreeGroupElement</span>'&gt;</span>\n<span class=\"prompt\">&gt;&gt;</span>&gt; group = w.group\n<span class=\"prompt\">&gt;&gt;</span>&gt; \n&gt;&gt;&gt; w1 = ((x, <span class=\"number\">2</span>), )\n<span class=\"prompt\">&gt;&gt;</span>&gt; w1\nx**<span class=\"number\">2</span>\n<span class=\"prompt\">&gt;&gt;</span>&gt; w1 = group.dtype(w1)\n<span class=\"prompt\">&gt;&gt;</span>&gt; type(w) == type(w1)\n<span class=\"constant\">True</span>\n<span class=\"prompt\">&gt;&gt;</span>&gt; w == w1\n<span class=\"constant\">False</span></code></pre>How to make them equal?",
  "id": "5d13acf74e13324f8b935247",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-26T17:35:51.816Z",
  "text": "```\n>>> F, x = free_group(\"x\")\n>>> w = x**2\n>>> type(w)\n<class 'sympy.combinatorics.free_groups.FreeGroupElement'>\n>>> group = w.group\n>>> \n>>> w1 = ((x, 2), )\n>>> w1\nx**2\n>>> w1 = group.dtype(w1)\n>>> type(w) == type(w1)\nTrue\n>>> w == w1\nFalse\n\n```\nHow to make them equal?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "<code>x</code> in <code>w1 = ((x, 2), )</code> should be the symbol, not the free group element that looks like it in print.",
  "id": "5d13c1fad65dae046f94387b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-26T19:05:30.703Z",
  "text": "`x` in `w1 = ((x, 2), )` should be the symbol, not the free group element that looks like it in print.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I&#39;ve pushed the changes and S(4) test has been added to <code>test_pc_groups.py</code> please have a look!<br><a target=\"_blank\" data-link-type=\"pr\" data-issue=\"16991\" href=\"https://github.com/sympy/sympy/pull/16991\" data-provider=\"github\" data-issue-repo=\"sympy/sympy\" class=\"pr\">sympy/sympy#16991</a>",
  "id": "5d144302ddc34e0f13f0dc0c",
  "issues": [
   {
    "number": "16991",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-27T04:16:02.036Z",
  "text": "I've pushed the changes and S(4) test has been added to `test_pc_groups.py` please have a look! \nhttps://github.com/sympy/sympy/pull/16991",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-06-27T06:31:58.719Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Fine. I&#39;ll need some time to look into the code. One thing that I think should be changed is that <code>word</code> should not be an attribute of <code>Collector</code>. It is inefficient to create a new collector for each word that is considered. A collector should be a &quot;machine&quot; associated with a pc presentation of a group, an attribute of <code>PolycyclicGroup</code>. A single collector would collect all words representing elements of the group. So, for example, the signature of <code>minimal_collected_subwords</code> should be <code>(self, word)</code>.  Also I think that <code>collected_word</code> should be a method of <code>Collector</code>.",
  "id": "5d14612a11ba925f6a326f0a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-27T06:24:42.344Z",
  "text": "Fine. I'll need some time to look into the code. One thing that I think should be changed is that `word` should not be an attribute of `Collector`. It is inefficient to create a new collector for each word that is considered. A collector should be a \"machine\" associated with a pc presentation of a group, an attribute of `PolycyclicGroup`. A single collector would collect all words representing elements of the group. So, for example, the signature of `minimal_collected_subwords` should be `(self, word)`.  Also I think that `collected_word` should be a method of `Collector`.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay!",
  "id": "5d146bfb501ea60f1253ec34",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-06-27T07:10:51.398Z",
  "text": "Okay!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I think now we should move on to the presentation and pc sequence and if there will be any issues with collector we can handle that in parallel.",
  "id": "5d1984a03d12712ce4beeb91",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T03:57:20.752Z",
  "text": "I think now we should move on to the presentation and pc sequence and if there will be any issues with collector we can handle that in parallel.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Can you describe in more detail what you mean by presentation and pc sequence?",
  "id": "5d19a82bffd4b84a8fe4c262",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T06:28:59.406Z",
  "text": "Can you describe in more detail what you mean by presentation and pc sequence?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I&#39;m talking about representing polycyclic groups i.e polycyclic presentations  and the generating set for polycyclic groups as we did for S(4).",
  "id": "5d19aa09676ff14d275ef006",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T06:36:57.102Z",
  "text": "I'm talking about representing polycyclic groups i.e polycyclic presentations  and the generating set for polycyclic groups as we did for S(4).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "How are you planning to find the power and conjugate relations?",
  "id": "5d19b2eeddd2c007c73d4c32",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T07:14:54.947Z",
  "text": "How are you planning to find the power and conjugate relations?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "If we&#39;ll have the generating set then we can directly map it to the free group elements and then for every pair of generators(total <code>n*(n-1)/2</code>) we can compute the conjugate relations as we did in collector <code>function map_relation</code>.<br>Now, the point is getting the generating set. Do you still think that we can&#39;t use composition series as polycyclic series?",
  "id": "5d19b55fa611a04ff1b2f075",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T07:25:19.636Z",
  "text": "If we'll have the generating set then we can directly map it to the free group elements and then for every pair of generators(total `n*(n-1)/2`) we can compute the conjugate relations as we did in collector `function map_relation`.\nNow, the point is getting the generating set. Do you still think that we can't use composition series as polycyclic series?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "We can use it, but it leads often to a complicated presentation. For example, the composition series of the cyclic group C(8) has 4 groups C(8) &gt; C(4) &gt; C(2) &gt; 1 and the corresponding presentation has  3 generators. However, there is a simple polycyclic presentation with one generator and no conjugate relations.",
  "id": "5d19b7838dff05627ba3a70c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T07:34:27.651Z",
  "text": "We can use it, but it leads often to a complicated presentation. For example, the composition series of the cyclic group C(8) has 4 groups C(8) > C(4) > C(2) > 1 and the corresponding presentation has  3 generators. However, there is a simple polycyclic presentation with one generator and no conjugate relations.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "However, I think that we can use the composition series as a starting point for the moment.",
  "id": "5d19b7c7ffd4b84a8fe551c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T07:35:35.750Z",
  "text": "However, I think that we can use the composition series as a starting point for the moment.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "So, should we start doing it with composition series!",
  "id": "5d19b814a611a04ff1b30873",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T07:36:52.678Z",
  "text": "So, should we start doing it with composition series!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-01T07:41:47.257Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that there are several steps. 1) polycyclic generator sequence, 2) power and conjugate relations for the sequence. These steps are independent of each other. We can use a composition sequence for step 1), at least for the present. Step 2) does not care how the sequence was obtained.",
  "id": "5d19b91c3d12712ce4c0c6e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T07:41:16.199Z",
  "text": "I think that there are several steps. 1) polycyclic generator sequence, 2) power and conjugate relations for the sequence. These steps are independent of each other. We can use a composition sequence for step 1), at least for the present. Step 2) does not care how the sequence was obtained.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The hardest part is step 2. So it does not matter how step 1 was done.",
  "id": "5d19b97f79f6d94a8e08eb33",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T07:42:55.415Z",
  "text": "The hardest part is step 2. So it does not matter how step 1 was done.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-01T07:46:36.911Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It would help if you could describe the algorithms for these steps. I would expect that the collector code will have to be modified to make it convenient for that purpose.",
  "id": "5d19ba3a189e7b4ff0463d30",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T07:46:02.350Z",
  "text": "It would help if you could describe the algorithms for these steps. I would expect that the collector code will have to be modified to make it convenient for that purpose.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Here is how I&#39;m thinking of doing step-1:<br>Starting with composition series, for every consecutive groups in the series check which generators are missing and select only a single generator of minimum order from all the missing generators which implies we&#39;ll have a single polycyclic generating element from every consecutive groups.",
  "id": "5d19ca424db9b92ce382b0d2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T08:54:26.283Z",
  "text": "Here is how I'm thinking of doing step-1:\nStarting with composition series, for every consecutive groups in the series check which generators are missing and select only a single generator of minimum order from all the missing generators which implies we'll have a single polycyclic generating element from every consecutive groups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Power-relations:<br>We&#39;ll have the number of elements in the polycyclic sequence which will be equal to the number of power-relations.<br>So, taking those many free elements and raising the powers to their relative order respectively, will give us the the power-relations.",
  "id": "5d19cb3e8dff05627ba45fdc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T08:58:38.475Z",
  "text": "Power-relations:\nWe'll have the number of elements in the polycyclic sequence which will be equal to the number of power-relations.\nSo, taking those many free elements and raising the powers to their relative order respectively, will give us the the power-relations.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Conjugate-relations:<br>Suppose <code>n = number of power-relations</code> given <code>relative_order[i] !=infinity</code>, then we&#39;ll have <code>n(n-1)/2</code> conjugate relations of the form <code>x[i]**-1*x[i+1]*x[i] = RHS</code> and equal amount of  <code>x[i]*x[i+1]**x[i]**-1 = RHS</code> as well. The second one can be ignored in the presentation.",
  "id": "5d19cd23ddd2c007c73e4770",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T09:06:43.916Z",
  "text": "Conjugate-relations:\nSuppose `n = number of power-relations` given `relative_order[i] !=infinity`, then we'll have `n(n-1)/2` conjugate relations of the form `x[i]**-1*x[i+1]*x[i] = RHS` and equal amount of  `x[i]*x[i+1]**x[i]**-1 = RHS` as well. The second one can be ignored in the presentation.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "About the dependency of step-1 and step-2:",
  "id": "5d19cd3da611a04ff1b3b851",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T09:07:09.805Z",
  "text": "About the dependency of step-1 and step-2:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "To compute the RHS mentioned above we&#39;ll need the generating sequence on which we can apply the LHS relation and equate them.",
  "id": "5d19cd8d8dff05627ba473d2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T09:08:29.998Z",
  "text": "To compute the RHS mentioned above we'll need the generating sequence on which we can apply the LHS relation and equate them.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Each RHS should be a collected word. How did you plan to get those?",
  "id": "5d19d89fa611a04ff1b41ec9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T09:55:43.176Z",
  "text": "Each RHS should be a collected word. How did you plan to get those?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Yes, I am not sure about this!",
  "id": "5d19dcd92be6a2404dfee2d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T10:13:45.819Z",
  "text": "Yes, I am not sure about this!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-01T11:29:38.338Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I am not sure, either, but I think that a collector should be used to build the relations from the bottom up. There should be methods for building the collector step by step. If we have a polycyclic series G = G0 &gt; G1 &gt; ... &gt; Gn &gt; 1, then each group is polycyclic. In particular, the last one, Gn, is cyclic and it is trivial to construct a collector for it. Next a collector could be constructed for G{n-1} that has two generators x{n-1} and xn. It is not  efficient to construct a completely new collector for each group. Instead, I think that there should methods by which we could &quot;grow&quot; a single collector for G from the bottom up.",
  "id": "5d19edc53d12712ce4c2b959",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T11:25:57.559Z",
  "text": "I am not sure, either, but I think that a collector should be used to build the relations from the bottom up. There should be methods for building the collector step by step. If we have a polycyclic series G = G0 > G1 > ... > Gn > 1, then each group is polycyclic. In particular, the last one, Gn, is cyclic and it is trivial to construct a collector for it. Next a collector could be constructed for G{n-1} that has two generators x{n-1} and xn. It is not  efficient to construct a completely new collector for each group. Instead, I think that there should methods by which we could \"grow\" a single collector for G from the bottom up.",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>Next a collector could be constructed for G{n-1} that has two generators x{n-1} and xn.</p></blockquote>\n<p>Even in this case we&#39;ll have a conjugate relation whose RHS is to be determined. </p>",
  "id": "5d1a2e94ffd4b84a8fe9c32f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T16:02:28.793Z",
  "text": ">Next a collector could be constructed for G{n-1} that has two generators x{n-1} and xn.\n\nEven in this case we'll have a conjugate relation whose RHS is to be determined. \n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Yes, and it seems that the collector for Gn has to be used for finding the relation.",
  "id": "5d1a3227aa095d404cf60b9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T16:17:43.544Z",
  "text": "Yes, and it seems that the collector for Gn has to be used for finding the relation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "But, collector itself needs the relation!",
  "id": "5d1a328503d62b4d28c45d9f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T16:19:17.390Z",
  "text": "But, collector itself needs the relation!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The cyclic group Gn only has the trivial relation <code>xn**rn = 1</code>where <code>rn</code> is the order of Gn.",
  "id": "5d1a33068dff05627ba8462a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T16:21:26.228Z",
  "text": "The cyclic group Gn only has the trivial relation `xn**rn = 1`where `rn` is the order of Gn.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Yes, sure!",
  "id": "5d1a338fffd4b84a8fe9f0af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T16:23:43.958Z",
  "text": "Yes, sure!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "How can we use G(n) alone to get the relations for G?",
  "id": "5d1a33de4db9b92ce386ba48",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T16:25:02.347Z",
  "text": "How can we use G(n) alone to get the relations for G?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Why should we use that alone when all the other groups and generators of the polycyclic series are available? ",
  "id": "5d1a341daa095d404cf61f1f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T16:26:05.949Z",
  "text": "Why should we use that alone when all the other groups and generators of the polycyclic series are available? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Isn&#39;t we know about only G(n) relators!",
  "id": "5d1a347ada128007c6aa32ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T16:27:38.077Z",
  "text": "Isn't we know about only G(n) relators!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "And we use that to find relators for G{n-1} etc.",
  "id": "5d1a349b9cbde24b2f56268c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T16:28:11.286Z",
  "text": "And we use that to find relators for G{n-1} etc.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-01T16:34:40.878Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "If we&#39;ll try with any word for a cyclic group then I think the final collected word will be just an &lt;identity&gt; now I am not able to understand what kind of relation we&#39;ll get from here that can be used for G{n-1}!",
  "id": "5d1a3619490abf627a583d82",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T16:34:33.242Z",
  "text": "If we'll try with any word for a cyclic group then I think the final collected word will be just an <identity> now I am not able to understand what kind of relation we'll get from here that can be used for G{n-1}!",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2019-07-01T16:49:24.248Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "We know that <code>x{n-1}**r{n-1}</code> and <code>x{n-1}**-1*xn*x{n-1}</code> are elements of Gn. We only have to use the collector for Gn to find their collected forms.",
  "id": "5d1a395a2be6a2404d026481",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T16:48:26.494Z",
  "text": "We know that `x{n-1}**r{n-1}` and `x{n-1}**-1*xn*x{n-1}` are elements of Gn. We only have to use the collector for Gn to find their collected forms.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2019-07-01T16:53:25.446Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p><code>x{n-1}**-1*xn*x{n-1}</code> are elements of Gn.</p></blockquote>\n<p>G(n) is cyclic it will only have one generator so, we&#39;ll not have any conjugate relation I think!</p>",
  "id": "5d1a3a5803d62b4d28c4b042",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T16:52:40.718Z",
  "text": ">`x{n-1}**-1*xn*x{n-1}` are elements of Gn.\n\nG(n) is cyclic it will only have one generator so, we'll not have any conjugate relation I think!\n\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "An Http error has occurred for one of the tests in the PR can you please restart it!",
  "id": "5d1a3d43aa095d404cf67cf6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-01T17:05:07.506Z",
  "text": "An Http error has occurred for one of the tests in the PR can you please restart it!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> G{n} will have only single power-relator now what we wanna do with it to get the polycyclic presentation?",
  "id": "5d1c35c46658420b1ce4e499",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T04:57:40.018Z",
  "text": "@jksuom G{n} will have only single power-relator now what we wanna do with it to get the polycyclic presentation?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "What should the polycyclic presentation contain?",
  "id": "5d1c44386658420b1ce55d67",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T05:59:20.628Z",
  "text": "What should the polycyclic presentation contain?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "It should have the list of all the generators and power and conjugate relators.",
  "id": "5d1c44816658420b1ce55fc5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:00:33.665Z",
  "text": "It should have the list of all the generators and power and conjugate relators.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Which one is missing?",
  "id": "5d1c45bddd5b167204e4818f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:05:49.502Z",
  "text": "Which one is missing?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "The conjugate relations are in the form of <code>x[i]**-1*x[i+1]*x[i] = RHS</code>, we are missing the RHS part!",
  "id": "5d1c46016658420b1ce56c3c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:06:57.127Z",
  "text": "The conjugate relations are in the form of `x[i]**-1*x[i+1]*x[i] = RHS`, we are missing the RHS part!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "There is one generator, one power relation and no conjugate relations for the last group Gn.",
  "id": "5d1c461b5ce02535b012c5d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:07:23.787Z",
  "text": "There is one generator, one power relation and no conjugate relations for the last group Gn.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Yes!",
  "id": "5d1c46312e3f43176362d495",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:07:45.289Z",
  "text": "Yes!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "As I said above, the collector could be constructed stepwise. First a collector for the last group Gn. Then a collector for G{n-1} is constructed making use of the existing collector for Gn to get the RHS for the power and conjugate relations in collected form.",
  "id": "5d1c470799847a1a59e4dfd7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:11:19.391Z",
  "text": "As I said above, the collector could be constructed stepwise. First a collector for the last group Gn. Then a collector for G{n-1} is constructed making use of the existing collector for Gn to get the RHS for the power and conjugate relations in collected form.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The collector could be a single mutable object whose relation attributes are extended step by step.",
  "id": "5d1c475b84cbda1764bcf9f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:12:43.794Z",
  "text": "The collector could be a single mutable object whose relation attributes are extended step by step.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "So instead of giving all relations in <code>__init__</code> there should be methods for extending the relations.",
  "id": "5d1c47e4e0cad96750983e59",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:15:00.097Z",
  "text": "So instead of giving all relations in `__init__` there should be methods for extending the relations.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Collector is all about &quot;given a word and using the relators it converts it into the collected form&quot; so if we gonna collect for Gn first then what will be the word?",
  "id": "5d1c484284cbda1764bd01c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:16:34.363Z",
  "text": "Collector is all about \"given a word and using the relators it converts it into the collected form\" so if we gonna collect for Gn first then what will be the word?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It will be a power of the single generator. The collector only has to check that it is collected. If not, then it has to change the exponent.",
  "id": "5d1c4901cd7934667dcb286b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:19:45.626Z",
  "text": "It will be a power of the single generator. The collector only has to check that it is collected. If not, then it has to change the exponent.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay, so now we have the result of collector for G{n} now should this be equated with the relators of G{n-1}?",
  "id": "5d1c4952be7a4666445cc246",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:21:06.639Z",
  "text": "Okay, so now we have the result of collector for G{n} now should this be equated with the relators of G{n-1}?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The RHS words in the power and conjugate relations of G{n-1} are powers of xn. The collector of Gn will change them to collected form.",
  "id": "5d1c49c45ce02535b012e723",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:23:00.522Z",
  "text": "The RHS words in the power and conjugate relations of G{n-1} are powers of xn. The collector of Gn will change them to collected form.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think all that was done in the S(4) example.",
  "id": "5d1c49fedd5b167204e4a6f6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:23:58.471Z",
  "text": "I think all that was done in the S(4) example.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>It will be a power of the single generator. </p></blockquote>\n<p>Here you are talking about the word that we&#39;ll feed?</p>",
  "id": "5d1c4a53dd5b167204e4aa28",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:25:23.813Z",
  "text": "> It will be a power of the single generator. \n\nHere you are talking about the word that we'll feed?\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The collector will work with words.",
  "id": "5d1c4a85b1b66b7203c74f0c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:26:13.175Z",
  "text": "The collector will work with words.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-03T06:27:43.346Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "So, Do we have to choose that word randomly with some exponent to the x{n}?",
  "id": "5d1c4ac0b1b66b7203c750f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:27:12.273Z",
  "text": "So, Do we have to choose that word randomly with some exponent to the x{n}?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Of course not. It has to be computed from the group structure of G as was done in S(4).",
  "id": "5d1c4b0884cbda1764bd1948",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:28:24.479Z",
  "text": "Of course not. It has to be computed from the group structure of G as was done in S(4).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-03T06:30:17.336Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "The word that we chose for the collection in the case of S(4) was <code>x3*x2*x1*x0</code>!",
  "id": "5d1c4b4bbe7a4666445cd3d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:29:31.025Z",
  "text": "The word that we chose for the collection in the case of S(4) was `x3*x2*x1*x0`!",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "That was an example for testing the collector. The collector had already been created.",
  "id": "5d1c4b9db1b66b7203c755dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:30:53.797Z",
  "text": "That was an example for testing the collector. The collector had already been created.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "In case of permutation groups that we are considering now, a representation can be found by using the method <code>generator_product</code>. The results are words that need to be collected, in general.",
  "id": "5d1c4c0cb8926b674fd29605",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:32:44.302Z",
  "text": "In case of permutation groups that we are considering now, a representation can be found by using the method `generator_product`. The results are words that need to be collected, in general.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "We must first construct the collector. Then we can test it with randomly chosen example words.",
  "id": "5d1c4c65f0f22f6645063de0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:34:13.173Z",
  "text": "We must first construct the collector. Then we can test it with randomly chosen example words.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Still I&#39;m confused Let&#39;s take the example of S(4). We will use G(n) which is say x{3} and its power relator is x{3}**2 = () now given this only if we gonna collect  then what we&#39;ll get such that it can be equated with the power and conjugate relators of G{n-1}?",
  "id": "5d1c4c86dd5b167204e4ba06",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:34:46.186Z",
  "text": "Still I'm confused Let's take the example of S(4). We will use G(n) which is say x{3} and its power relator is x{3}**2 = () now given this only if we gonna collect  then what we'll get such that it can be equated with the power and conjugate relators of G{n-1}?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "We started by computing <code>x2**2</code> and <code>x2**-1*x3*x2</code> in S(4).",
  "id": "5d1c4d4d2e3f4317636316a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:38:05.217Z",
  "text": "We started by computing `x2**2` and `x2**-1*x3*x2` in S(4).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-03T06:40:11.615Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Similarly we have to compute <code>x{n-1}**r{n-1}</code> and <code>x{n-1}**-1*xn*x{n-1}</code> in G.",
  "id": "5d1c4d9384cbda1764bd2de5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:39:15.468Z",
  "text": "Similarly we have to compute `x{n-1}**r{n-1}` and `x{n-1}**-1*xn*x{n-1}` in G.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "With the help of <code>generator_product</code>?",
  "id": "5d1c4e29be7a4666445cf015",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:41:45.965Z",
  "text": "With the help of `generator_product`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think so.",
  "id": "5d1c4e56dd5b167204e4caae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:42:30.965Z",
  "text": "I think so.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The products above are permutations. <code>generator_product</code> can be used to represent them as words.",
  "id": "5d1c4eac6658420b1ce5b39c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:43:56.341Z",
  "text": "The products above are permutations. `generator_product` can be used to represent them as words.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<pre><code>&gt;&gt;&gt; x0 = <span class=\"function\"><span class=\"title\">Permutation</span><span class=\"params\">(<span class=\"number\">0</span>, <span class=\"number\">1</span>)</span></span>\n&gt;&gt;&gt; x1 = <span class=\"function\"><span class=\"title\">Permutation</span><span class=\"params\">(<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>)</span></span>\n&gt;&gt;&gt; gn = <span class=\"function\"><span class=\"title\">PermutationGroup</span><span class=\"params\">([x0, x1])</span></span>\n&gt;&gt;&gt; gn.<span class=\"function\"><span class=\"title\">generator_product</span><span class=\"params\">(x0**-<span class=\"number\">1</span>*x1*x0, original = True)</span></span>\n[<span class=\"function\"><span class=\"title\">Permutation</span><span class=\"params\">(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>)</span></span>]</code></pre>Now, how to convert that output in the form of <code>x1**2</code>?",
  "id": "5d1c50b9be7a4666445d07d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:52:41.598Z",
  "text": "```\n>>> x0 = Permutation(0, 1)\n>>> x1 = Permutation(0, 1, 2)\n>>> gn = PermutationGroup([x0, x1])\n>>> gn.generator_product(x0**-1*x1*x0, original = True)\n[Permutation(0, 2, 1)]\n\n```\nNow, how to convert that output in the form of `x1**2`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The keyword <code>original</code> should do that. Is there something wrong?",
  "id": "5d1c51995ce02535b013268d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:56:25.103Z",
  "text": "The keyword `original` should do that. Is there something wrong?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "You should probably look into that in more detail.",
  "id": "5d1c51c7dd5b167204e4ea93",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:57:11.998Z",
  "text": "You should probably look into that in more detail.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "This is exactly what I&#39;ve copied from my terminal!",
  "id": "5d1c51e1b8926b674fd2c56f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:57:37.119Z",
  "text": "This is exactly what I've copied from my terminal!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>You should probably look into that in more detail.</p></blockquote>\n<p>Okay!</p>",
  "id": "5d1c51f72e3f431763634129",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:57:59.049Z",
  "text": "> You should probably look into that in more detail.\n\nOkay!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "But the output should contain only original generators.",
  "id": "5d1c520e5ce02535b0132a70",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:58:22.320Z",
  "text": "But the output should contain only original generators.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "The result seems same in both the cases!<pre><code>&gt;&gt;&gt; gn.<span class=\"function\"><span class=\"title\">generator_product</span><span class=\"params\">(x0**-<span class=\"number\">1</span>*x1*x0, original = False)</span></span>\n[<span class=\"function\"><span class=\"title\">Permutation</span><span class=\"params\">(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>)</span></span>]</code></pre>",
  "id": "5d1c5245b1b66b7203c78e69",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T06:59:17.058Z",
  "text": "The result seems same in both the cases!\n```\n>>> gn.generator_product(x0**-1*x1*x0, original = False)\n[Permutation(0, 2, 1)]\n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It looks like the output of <code>generator_product</code> also contains inverted elements. So here we have <code>x1**-1</code>.",
  "id": "5d1c540db1b66b7203c79d6c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T07:06:53.854Z",
  "text": "It looks like the output of `generator_product` also contains inverted elements. So here we have `x1**-1`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "So we should prepare a list of inverted permutations and find them as well in the output.",
  "id": "5d1c54a5cd7934667dcb88c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T07:09:25.679Z",
  "text": "So we should prepare a list of inverted permutations and find them as well in the output.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay!",
  "id": "5d1c54d084e3391a5ac7a1bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T07:10:08.615Z",
  "text": "Okay!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "BTW, we know that the conjugate is in the subgroup generated by <code>x1</code>. So the group Gn should be <code>PermutationGroup([x1])</code>.",
  "id": "5d1c5503dd5b167204e503c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T07:10:59.451Z",
  "text": "BTW, we know that the conjugate is in the subgroup generated by `x1`. So the group Gn should be `PermutationGroup([x1])`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The result will be the same but the computation with a minimal number of generators is more efficient.",
  "id": "5d1c553984cbda1764bd7221",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T07:11:53.154Z",
  "text": "The result will be the same but the computation with a minimal number of generators is more efficient.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Yes, right!",
  "id": "5d1c55560ee3c30b1d77d5ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T07:12:22.070Z",
  "text": "Yes, right!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Perhaps you should work out one more example by hand. For example <code>G = SymmetricGroup(9).sylow_subgroup(3)</code>.",
  "id": "5d1c5724b8926b674fd2f0d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T07:20:04.415Z",
  "text": "Perhaps you should work out one more example by hand. For example `G = SymmetricGroup(9).sylow_subgroup(3)`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Using the steps that will be needed in the algorithm.",
  "id": "5d1c57500ee3c30b1d77e79f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T07:20:48.273Z",
  "text": "Using the steps that will be needed in the algorithm.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "For the presentation!",
  "id": "5d1c5787f0f22f6645069ff8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T07:21:43.803Z",
  "text": "For the presentation!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Algorithm for the collector.",
  "id": "5d1c57ab0ee3c30b1d77eae5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T07:22:19.605Z",
  "text": "Algorithm for the collector.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay, I&#39;ll try!",
  "id": "5d1c57c22e3f431763637653",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T07:22:42.280Z",
  "text": "Okay, I'll try!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I think using <code>generator_product</code> the RHS will always have a single generator.",
  "id": "5d1c59bfe0cad9675098d42e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T07:31:11.953Z",
  "text": "I think using `generator_product` the RHS will always have a single generator.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Only in the last group Gn.",
  "id": "5d1c5dae5ce02535b013916d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T07:47:58.646Z",
  "text": "Only in the last group Gn.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "For G{n-1} there are two generators.",
  "id": "5d1c5dcc26206b667c7c7e15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T07:48:28.190Z",
  "text": "For G{n-1} there are two generators.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<pre><code>&gt;&gt;&gt; x0 = <span class=\"function\"><span class=\"title\">Permutation</span><span class=\"params\">(<span class=\"number\">0</span>, <span class=\"number\">1</span>)</span></span>\n&gt;&gt;&gt; x1 = <span class=\"function\"><span class=\"title\">Permutation</span><span class=\"params\">(<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>)</span></span>\n&gt;&gt;&gt; x2 = <span class=\"function\"><span class=\"title\">Permutation</span><span class=\"params\">(<span class=\"number\">0</span>, <span class=\"number\">2</span>)</span><span class=\"params\">(<span class=\"number\">1</span>, <span class=\"number\">3</span>)</span></span>\n&gt;&gt;&gt; x3 = <span class=\"function\"><span class=\"title\">Permutation</span><span class=\"params\">(<span class=\"number\">0</span>, <span class=\"number\">1</span>)</span><span class=\"params\">(<span class=\"number\">2</span>, <span class=\"number\">3</span>)</span></span>\n&gt;&gt;&gt; G = <span class=\"function\"><span class=\"title\">PermutationGroup</span><span class=\"params\">([x0, x1])</span></span>\n&gt;&gt;&gt; G.<span class=\"function\"><span class=\"title\">generator_product</span><span class=\"params\">(x0**-<span class=\"number\">1</span>*x1*x0, original = True)</span></span>\n[<span class=\"function\"><span class=\"title\">Permutation</span><span class=\"params\">(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>)</span></span>]\n&gt;&gt;&gt; G = <span class=\"function\"><span class=\"title\">PermutationGroup</span><span class=\"params\">([x0, x2])</span></span>\n&gt;&gt;&gt; G.<span class=\"function\"><span class=\"title\">generator_product</span><span class=\"params\">(x0**-<span class=\"number\">1</span>*x2*x0, original = True)</span></span>\n[<span class=\"function\"><span class=\"title\">Permutation</span><span class=\"params\">(<span class=\"number\">0</span>, <span class=\"number\">2</span>)</span><span class=\"params\">(<span class=\"number\">1</span>, <span class=\"number\">3</span>)</span></span>, <span class=\"function\"><span class=\"title\">Permutation</span><span class=\"params\">(<span class=\"number\">3</span>)</span><span class=\"params\">(<span class=\"number\">0</span>, <span class=\"number\">1</span>)</span></span>, <span class=\"function\"><span class=\"title\">Permutation</span><span class=\"params\">(<span class=\"number\">0</span>, <span class=\"number\">2</span>)</span><span class=\"params\">(<span class=\"number\">1</span>, <span class=\"number\">3</span>)</span></span>, <span class=\"function\"><span class=\"title\">Permutation</span><span class=\"params\">(<span class=\"number\">3</span>)</span><span class=\"params\">(<span class=\"number\">0</span>, <span class=\"number\">1</span>)</span></span>, <span class=\"function\"><span class=\"title\">Permutation</span><span class=\"params\">(<span class=\"number\">0</span>, <span class=\"number\">2</span>)</span><span class=\"params\">(<span class=\"number\">1</span>, <span class=\"number\">3</span>)</span></span>]</code></pre>",
  "id": "5d1c5fea84cbda1764bdced9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T07:57:30.285Z",
  "text": "```\n>>> x0 = Permutation(0, 1)\n>>> x1 = Permutation(0, 1, 2)\n>>> x2 = Permutation(0, 2)(1, 3)\n>>> x3 = Permutation(0, 1)(2, 3)\n>>> G = PermutationGroup([x0, x1])\n>>> G.generator_product(x0**-1*x1*x0, original = True)\n[Permutation(0, 2, 1)]\n>>> G = PermutationGroup([x0, x2])\n>>> G.generator_product(x0**-1*x2*x0, original = True)\n[Permutation(0, 2)(1, 3), Permutation(3)(0, 1), Permutation(0, 2)(1, 3), Permutation(3)(0, 1), Permutation(0, 2)(1, 3)]\n\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-03T07:59:23.877Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "In the second case we have 2 generators, how are we going to constitute a word from this?",
  "id": "5d1c6023e0cad9675099093f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T07:58:27.442Z",
  "text": "In the second case we have 2 generators, how are we going to constitute a word from this?",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Do we need to just map them to proper free group and concatenate all the generators.",
  "id": "5d1c60acb1b66b7203c8075f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T08:00:44.221Z",
  "text": "Do we need to just map them to proper free group and concatenate all the generators.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "And then finally collect them.",
  "id": "5d1c6318be7a4666445db062",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T08:11:04.949Z",
  "text": "And then finally collect them.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The groups have to be constructed from the bottom up. G3 is generated by x3, G2 is generated by x2 and x3, G1 is generated by x1, x2 and x3.",
  "id": "5d1c6faa5ce02535b0142b53",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T09:04:42.229Z",
  "text": "The groups have to be constructed from the bottom up. G3 is generated by x3, G2 is generated by x2 and x3, G1 is generated by x1, x2 and x3.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay!!",
  "id": "5d1c7415b8926b674fd3f1e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T09:23:33.436Z",
  "text": "Okay!!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Here is the test for <code>SymmetricGroup(8).sylow_subgroup(3)</code>.<pre><code>x0 = (<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>)\nx1 = (<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>)\npower-relations:\nx0**<span class=\"number\">3</span> = () = x1**<span class=\"number\">3</span>\nconjugate-relations:\nx0**-<span class=\"number\">1</span>*x1*x0 = x1</code></pre>",
  "id": "5d1ca13326206b667c7ee638",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T12:36:03.130Z",
  "text": "Here is the test for `SymmetricGroup(8).sylow_subgroup(3)`.\n```\nx0 = (3, 4, 5)\nx1 = (0, 1, 2)\npower-relations:\nx0**3 = () = x1**3\nconjugate-relations:\nx0**-1*x1*x0 = x1\n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "What is the order of the group?",
  "id": "5d1ca5d15ce02535b0163c80",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T12:55:45.969Z",
  "text": "What is the order of the group?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "That looks right but I  was thinking of <code>SymmetricGroup(9)</code>. Its Sylow subgroup should be bigger.",
  "id": "5d1ca6386658420b1ce8e913",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T12:57:28.282Z",
  "text": "That looks right but I  was thinking of `SymmetricGroup(9)`. Its Sylow subgroup should be bigger.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>What is the order of the group?</p></blockquote>\n<p>It&#39;s order is 9.</p>",
  "id": "5d1cad0f0ee3c30b1d7af90f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T13:26:39.193Z",
  "text": "> What is the order of the group?\n\nIt's order is 9.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>I  was thinking of <code>SymmetricGroup(9)</code>. Its Sylow subgroup should be bigger.</p></blockquote>\n<p>Okay, it&#39;s order is 81 and it has 4 generators in polycyclic sequence.</p>",
  "id": "5d1cadca0ee3c30b1d7b00e3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-03T13:29:46.331Z",
  "text": "> I  was thinking of `SymmetricGroup(9)`. Its Sylow subgroup should be bigger.\n\nOkay, it's order is 81 and it has 4 generators in polycyclic sequence.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-03T13:58:31.905Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "That is what I was thinking. The other case is too trivial, just the product of two cyclic groups of order 3.",
  "id": "5d1cb45207bf5635af1def0d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-03T13:57:38.678Z",
  "text": "That is what I was thinking. The other case is too trivial, just the product of two cyclic groups of order 3.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2019-07-03T14:27:43.618Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Here is the example test for <code>g = SymmetricGroup(9).sylow_subgroup(3)</code><pre><code>x0 = (0, 3, 6)(1, 4, 7)(2, 5, 8)\nx1 = (0, 1, 2)\nx2 = (3, 4, 5)(6, 8, 7)\nx3 = (0, 2, 1)(3, 4, 5)\npower-relations:\nx0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>3 = () = x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>3 = x2<span class=\"keyword\">*</span><span class=\"keyword\">*</span>3 = x3<span class=\"keyword\">*</span><span class=\"keyword\">*</span>3\n\nconjugate-relations:\nx0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x1<span class=\"keyword\">*</span>x0 = \nx0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x2<span class=\"keyword\">*</span>x0 = x2<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2<span class=\"keyword\">*</span>x3\nx0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x0 = x2<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1 = x2<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2\nx1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x2<span class=\"keyword\">*</span>x1 = x2\nx1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x1 = x3\nx2<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x2 = x3</code></pre>",
  "id": "5d1cbb4ef0f22f66450a5c02",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-03T14:27:26.807Z",
  "text": "Here is the example test for `g = SymmetricGroup(9).sylow_subgroup(3)`\n```\nx0 = (0, 3, 6)(1, 4, 7)(2, 5, 8)\nx1 = (0, 1, 2)\nx2 = (3, 4, 5)(6, 8, 7)\nx3 = (0, 2, 1)(3, 4, 5)\npower-relations:\nx0**3 = () = x1**3 = x2**3 = x3**3\n\nconjugate-relations:\nx0**-1*x1*x0 = \nx0**-1*x2*x0 = x2**2*x3\nx0**-1*x3*x0 = x2**-1 = x2**2\nx1**-1*x2*x1 = x2\nx1**-1*x3*x1 = x3\nx2**-1*x3*x2 = x3\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Where the 1st conjugate relator with the <code>generator_product</code> seems quite big.<pre><code>&gt;&gt;&gt; G = PermutationGroup([x3, x2, x1, x0])\n&gt;&gt;&gt; G.generator_product(x0**-<span class=\"number\">1</span>*x1*x0, original = True)\n[Permutation(<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>)(<span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>), Permutation(<span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span>)(<span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>), Permutation(<span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span>)(<span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>), Permutation(<span class=\"number\">8</span>)(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>), Permutation(<span class=\"number\">8</span>)(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>)(<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>), Permutation(<span class=\"number\">8</span>)(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>)(<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>), Permutation(<span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span>)(<span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>), Permutation(<span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span>)(<span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>), Permutation(<span class=\"number\">8</span>)(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>), Permutation(<span class=\"number\">8</span>)(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>)(<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>), Permutation(<span class=\"number\">8</span>)(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>)(<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>)]\n&gt;&gt;&gt;</code></pre>",
  "id": "5d1cbbcadd5b167204e8efca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-03T14:29:30.258Z",
  "text": "Where the 1st conjugate relator with the `generator_product` seems quite big.\n```\n>>> G = PermutationGroup([x3, x2, x1, x0])\n>>> G.generator_product(x0**-1*x1*x0, original = True)\n[Permutation(3, 4, 5)(6, 8, 7), Permutation(3, 5, 4)(6, 7, 8), Permutation(3, 5, 4)(6, 7, 8), Permutation(8)(0, 2, 1), Permutation(8)(0, 2, 1)(3, 4, 5), Permutation(8)(0, 2, 1)(3, 4, 5), Permutation(3, 5, 4)(6, 7, 8), Permutation(3, 5, 4)(6, 7, 8), Permutation(8)(0, 2, 1), Permutation(8)(0, 2, 1)(3, 4, 5), Permutation(8)(0, 2, 1)(3, 4, 5)]\n>>> \n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "If we try to solve it directly:<br><code>x0**-1*x1*x0 = Permutation(8)(3, 4, 5)</code> and <code>x1*x3 = Permutation(3, 4, 5)</code>.",
  "id": "5d1cbc646658420b1ce9cfc9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-03T14:32:04.123Z",
  "text": "If we try to solve it directly:\n`x0**-1*x1*x0 = Permutation(8)(3, 4, 5)` and `x1*x3 = Permutation(3, 4, 5)`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "And, if we try to concatenate the result of <code>generator_product</code> then the final result is <code>x2**2*x1**2*x3**2*x2*x1**2*x3**2 = Permutation(8)(3, 4, 5)</code>.",
  "id": "5d1cbcf607bf5635af1e49b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-03T14:34:30.209Z",
  "text": "And, if we try to concatenate the result of `generator_product` then the final result is `x2**2*x1**2*x3**2*x2*x1**2*x3**2 = Permutation(8)(3, 4, 5)`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>And, if we try to concatenate the result of <code>generator_product</code> then the final result is <code>x2**2*x1**2*x3**2*x2*x1**2*x3**2 = Permutation(8)(3, 4, 5)</code>.</p></blockquote>\n<p>Which can be collected to <code>x1*x3</code>.</p>",
  "id": "5d1cbebf0ee3c30b1d7bb05d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-03T14:42:07.089Z",
  "text": "> And, if we try to concatenate the result of `generator_product` then the final result is `x2**2*x1**2*x3**2*x2*x1**2*x3**2 = Permutation(8)(3, 4, 5)`.\n\nWhich can be collected to `x1*x3`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The big product is uncollected. It looks like the first two permutations will cancel each other: <code>x2*x2**-1</code>. The collector for G1 has to be used to collect the product. BTW, I think that <code>generator_product</code> yields the generators in inverted order.",
  "id": "5d1cc58626206b667c80554b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-03T15:11:02.077Z",
  "text": "The big product is uncollected. It looks like the first two permutations will cancel each other: `x2*x2**-1`. The collector for G1 has to be used to collect the product. BTW, I think that `generator_product` yields the generators in inverted order.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Now you should try to make an algorithm that would do the same.",
  "id": "5d1cc5c1e0cad967509cdd22",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-03T15:12:01.263Z",
  "text": "Now you should try to make an algorithm that would do the same.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-03T15:24:50.938Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "The big product is collected to <code>x1*x3</code> from our collector!",
  "id": "5d1cc7e5f0f22f66450ade76",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-03T15:21:09.481Z",
  "text": "The big product is collected to `x1*x3` from our collector!",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>I think that <code>generator_product</code> yields the generators in inverted order.</p></blockquote>\n<p>That will be equal to the square <code>x**-1 == x**2</code> I&#39;ve used the same to get the above word.</p>",
  "id": "5d1cc99e84e3391a5acbfa1a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-03T15:28:30.293Z",
  "text": "> I think that `generator_product` yields the generators in inverted order.\n\nThat will be equal to the square `x**-1 == x**2` I've used the same to get the above word.\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>Now you should try to make an algorithm that would do the same.</p></blockquote>\n<p>Sure!</p>",
  "id": "5d1cc9dd99847a1a59e9b285",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-03T15:29:33.387Z",
  "text": "> Now you should try to make an algorithm that would do the same.\n\nSure!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>Here is how I&#39;m thinking of doing step-1:<br>Starting with composition series, for every consecutive groups in the series check which generators are missing and select only a single generator of minimum order from all the missing generators which implies we&#39;ll have a single polycyclic generating element from every consecutive groups.</p></blockquote>\n<p>Do you think this is the right way to generate polycyclic generating sequence?</p>",
  "id": "5d1ef7365821f065d4458b7f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-05T07:07:34.202Z",
  "text": "> Here is how I'm thinking of doing step-1:\n> Starting with composition series, for every consecutive groups in the series check which generators are missing and select only a single generator of minimum order from all the missing generators which implies we'll have a single polycyclic generating element from every consecutive groups.\n\nDo you think this is the right way to generate polycyclic generating sequence?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that a generator sequence could be constructed more directly starting from the derived series. I suspect that checking missing generators and which generators are included in which subgroup may be inefficient.",
  "id": "5d1f05b5923dae65d5233533",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-05T08:09:25.884Z",
  "text": "I think that a generator sequence could be constructed more directly starting from the derived series. I suspect that checking missing generators and which generators are included in which subgroup may be inefficient.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Because I observed that the pc_sequence from the above method keeps on changing for each execution(atleast 1 generator) that&#39;s why I haven&#39;t included the pc_presentation tests!",
  "id": "5d1f07b8b682244d4985d993",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-05T08:18:00.986Z",
  "text": "Because I observed that the pc_sequence from the above method keeps on changing for each execution(atleast 1 generator) that's why I haven't included the pc_presentation tests!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-05T17:25:04.332Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The last nontrivial group in the derived sequence is abelian. A polycyclic generator sequence for that group would be a good starting point for the whole group. Can you think of an algorithm for that sequence?",
  "id": "5d1f8751b5d39c1bfef9eb36",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-05T17:22:25.257Z",
  "text": "The last nontrivial group in the derived sequence is abelian. A polycyclic generator sequence for that group would be a good starting point for the whole group. Can you think of an algorithm for that sequence?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Do you mean just taking the generators from the last group in the derived series instead of whole derived series?",
  "id": "5d1f8e3a076ffa65b0544670",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-05T17:51:54.612Z",
  "text": "Do you mean just taking the generators from the last group in the derived series instead of whole derived series?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "That is a simple starting point as all subgroups of an abelian group are normal.",
  "id": "5d1f902e3a1e451bfda7491a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-05T18:00:14.132Z",
  "text": "That is a simple starting point as all subgroups of an abelian group are normal.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Of course that will only be the tail of the whole sequence.",
  "id": "5d1f905ddd0b530e40a3a171",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-05T18:01:01.192Z",
  "text": "Of course that will only be the tail of the whole sequence.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay, so should we focus on sequence and we&#39;ll look into the polycyclic series later.",
  "id": "5d1f909accfbb80e4144f24d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-05T18:02:02.608Z",
  "text": "Okay, so should we focus on sequence and we'll look into the polycyclic series later.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "What about relative order?",
  "id": "5d1f90cd5821f065d44b27b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-05T18:02:53.482Z",
  "text": "What about relative order?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Should we go with the order of available generators in the sequence only!",
  "id": "5d1f91025821f065d44b29f6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-05T18:03:46.422Z",
  "text": "Should we go with the order of available generators in the sequence only!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Look into the <em>rest</em> of the polycyclic sequence later. Relative orders can be found together with the generators.",
  "id": "5d1f98d607d71829adbb2e26",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-05T18:37:10.256Z",
  "text": "Look into the *rest* of the polycyclic sequence later. Relative orders can be found together with the generators.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Assume that you are given an abelian group. The task is to find a polycyclic sequence for it.",
  "id": "5d1f9989c5f3c329aeefb654",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-05T18:40:09.662Z",
  "text": "Assume that you are given an abelian group. The task is to find a polycyclic sequence for it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>Should we go with the order of available generators in the sequence only!</p></blockquote>\n<p>I took this as the relative order for now.</p>",
  "id": "5d1f9f1f3a1e451bfda7a929",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-05T19:03:59.422Z",
  "text": "> Should we go with the order of available generators in the sequence only!\n\nI took this as the relative order for now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "And, pushed the changes.",
  "id": "5d1f9f2b07d71829adbb605b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-05T19:04:11.066Z",
  "text": "And, pushed the changes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I don&#39;t understand why the polycyclic sequence gets reversed I&#39;ve mentioned this in one of the tests added in the <code>test_pc_presentation</code>.",
  "id": "5d1f9f73ce3d0458f2b7232c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-05T19:05:23.181Z",
  "text": "I don't understand why the polycyclic sequence gets reversed I've mentioned this in one of the tests added in the `test_pc_presentation`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>why the polycyclic sequence gets reversed</p></blockquote>\n<p>I got it I&#39;ve reversed the pc_sequence during the processing and I guess same is reflected in it&#39;s object so that&#39;s why its behaving like that have a look at the last commit.</p>",
  "id": "5d1fa117923dae65d5289c52",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-05T19:12:23.968Z",
  "text": "> why the polycyclic sequence gets reversed\n\nI got it I've reversed the pc_sequence during the processing and I guess same is reflected in it's object so that's why its behaving like that have a look at the last commit.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\nRelative orders can be found together with the generators.</blockquote>\n",
  "id": "5d202f4e923dae65d52c441f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-06T05:19:10.704Z",
  "text": "> Relative orders can be found together with the generators.\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "?",
  "id": "5d202f50b682244d498ed766",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-06T05:19:12.861Z",
  "text": "?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Consider first an abelian group G with a set of generators. Choose a generator gn and the subgroup Gn it generates. Then take another generator g{n-1} and the subgroup G{n-1} generated by it <em>together with</em> gn. Then Gn is a normal subgroup of G{n-1} and  G{n-1}/Gn is a cyclic group, generated by the class of g{n-1}. Its order is the relative order of g{n-1}. It can be smaller than the order of g{n-1} in G. It has to be checked because if it is 1, then g{n-1} must not be added to the polycyclic sequence and the next generator (if any) will be considered instead.",
  "id": "5d203be1c5f3c329aef40bc5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-06T06:12:49.029Z",
  "text": "Consider first an abelian group G with a set of generators. Choose a generator gn and the subgroup Gn it generates. Then take another generator g{n-1} and the subgroup G{n-1} generated by it *together with* gn. Then Gn is a normal subgroup of G{n-1} and  G{n-1}/Gn is a cyclic group, generated by the class of g{n-1}. Its order is the relative order of g{n-1}. It can be smaller than the order of g{n-1} in G. It has to be checked because if it is 1, then g{n-1} must not be added to the polycyclic sequence and the next generator (if any) will be considered instead.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Is this looks good?<pre><code>def <span class=\"function\"><span class=\"title\">pc_series</span><span class=\"params\">(self)</span></span>:\n        pc_series = []\n        sequence = self<span class=\"class\">.pcgs</span>\n        sequence.<span class=\"function\"><span class=\"title\">reverse</span><span class=\"params\">()</span></span>\n\n        G = <span class=\"function\"><span class=\"title\">PermutationGroup</span><span class=\"params\">([sequence[<span class=\"number\">0</span>]])</span></span>\n        pc_series.<span class=\"function\"><span class=\"title\">append</span><span class=\"params\">(G)</span></span>\n        <span class=\"keyword\">for</span> <span class=\"tag\">i</span> <span class=\"keyword\">in</span> <span class=\"function\"><span class=\"title\">range</span><span class=\"params\">(<span class=\"number\">1</span>, len(sequence)</span></span>):\n            G = <span class=\"function\"><span class=\"title\">PermutationGroup</span><span class=\"params\">(G.generators + [sequence[i]])</span></span>\n            pc_series.<span class=\"function\"><span class=\"title\">insert</span><span class=\"params\">(<span class=\"number\">0</span>, G)</span></span>\n        return pc_series</code></pre>",
  "id": "5d20c9eb32132d6c1bb3439b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-06T16:18:51.512Z",
  "text": "Is this looks good?\n```\ndef pc_series(self):\n        pc_series = []\n        sequence = self.pcgs\n        sequence.reverse()\n\n        G = PermutationGroup([sequence[0]])\n        pc_series.append(G)\n        for i in range(1, len(sequence)):\n            G = PermutationGroup(G.generators + [sequence[i]])\n            pc_series.insert(0, G)\n        return pc_series\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It would be more efficient to store the groups in the pc series while creating the pcgs. They have to be computed anyway in the same process. So both pcgs and pc_series are created in parallel from the bottom up.",
  "id": "5d20dc95ae10eb58bd731cb3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-06T17:38:29.215Z",
  "text": "It would be more efficient to store the groups in the pc series while creating the pcgs. They have to be computed anyway in the same process. So both pcgs and pc_series are created in parallel from the bottom up.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay, but in this way we&#39;ll have <code>n-1</code> relative orders!",
  "id": "5d20e1389a8a5d3cf4a9d35e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-06T17:58:16.093Z",
  "text": "Okay, but in this way we'll have `n-1` relative orders!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Via <code>G{i-1}/G{i}</code>.",
  "id": "5d20e1d08193ce270f348180",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-06T18:00:48.726Z",
  "text": "Via `G{i-1}/G{i}`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "There is also G{n+1} = 1 at the end.",
  "id": "5d20efcc8193ce270f34dcef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-06T19:00:28.447Z",
  "text": "There is also G{n+1} = 1 at the end.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "ohh, yes!",
  "id": "5d20f029ae10eb58bd73aef1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-06T19:02:01.423Z",
  "text": "ohh, yes!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-06T19:38:15.980Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<p>In case of S(3), The pc_series is:</p><pre><code><span class=\"collection\">[PermutationGroup<span class=\"list\">(<span class=\"collection\">[\n    <span class=\"list\">(<span class=\"number\">0</span> <span class=\"number\">2</span> <span class=\"number\">1</span>)</span>,\n    <span class=\"list\">(<span class=\"number\">0</span> <span class=\"number\">1</span> <span class=\"number\">2</span>)</span>]</span>)</span>, PermutationGroup<span class=\"list\">(<span class=\"collection\">[\n    <span class=\"list\">(<span class=\"number\">0</span> <span class=\"number\">2</span> <span class=\"number\">1</span>)</span>]</span>)</span>, PermutationGroup<span class=\"list\">(<span class=\"collection\">[\n    <span class=\"list\">(<span class=\"number\">2</span>)</span>]</span>)</span>]</span></code></pre><p>Hence relative order vector will be <code>[1, 3]</code>, I think which is wrong because relative order should be prime only. </p>",
  "id": "5d20f88683f2a2270ec4891a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-06T19:37:42.367Z",
  "text": "In case of S(3), The pc_series is:\n```\n[PermutationGroup([\n    (0 2 1),\n    (0 1 2)]), PermutationGroup([\n    (0 2 1)]), PermutationGroup([\n    (2)])]\n\n```\nHence relative order vector will be `[1, 3]`, I think which is wrong because relative order should be prime only. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The first group should be S(3).",
  "id": "5d20fd9cff78641c1ca2625f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-06T19:59:24.133Z",
  "text": "The first group should be S(3).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "hmm.. but then also the second ratio will be <code>1</code>.",
  "id": "5d20fec8b2a6596c1a219c24",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-06T20:04:24.145Z",
  "text": "hmm.. but then also the second ratio will be `1`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>It has to be checked because if it is 1, then g{n-1} must not be added to the polycyclic sequence and the next generator (if any) will be considered instead.</p></blockquote>\n<p>I guess, I missed this!</p>",
  "id": "5d2100798193ce270f354805",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-06T20:11:37.551Z",
  "text": "> It has to be checked because if it is 1, then g{n-1} must not be added to the polycyclic sequence and the next generator (if any) will be considered instead.\n\nI guess, I missed this!\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<pre><code>&gt;&gt;&gt; g = SymmetricGroup(<span class=\"number\">4</span>)\n&gt;&gt;&gt; p = g.polycyclic_group()\n&gt;&gt;&gt; p.pcgs\n[Permutation(<span class=\"number\">3</span>)(<span class=\"number\">0</span>, <span class=\"number\">1</span>), Permutation(<span class=\"number\">0</span>, <span class=\"number\">3</span>)(<span class=\"number\">1</span>, <span class=\"number\">2</span>), Permutation(<span class=\"number\">0</span>, <span class=\"number\">2</span>)(<span class=\"number\">1</span>, <span class=\"number\">3</span>)]\n&gt;&gt;&gt; \n&gt;&gt;&gt; [h.order() <span class=\"keyword\">for</span> h in p.pc_series]\n[<span class=\"number\">24</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>]\n&gt;&gt;&gt; \n&gt;&gt;&gt; p.pc_series\n[PermutationGroup([\n    (<span class=\"number\">0</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>),\n    (<span class=\"number\">3</span>)(<span class=\"number\">0</span> <span class=\"number\">1</span>)]), PermutationGroup([\n    (<span class=\"number\">0</span> <span class=\"number\">2</span>)(<span class=\"number\">1</span> <span class=\"number\">3</span>),\n    (<span class=\"number\">0</span> <span class=\"number\">3</span>)(<span class=\"number\">1</span> <span class=\"number\">2</span>)]), PermutationGroup([\n    (<span class=\"number\">0</span> <span class=\"number\">2</span>)(<span class=\"number\">1</span> <span class=\"number\">3</span>)]), PermutationGroup([\n    (<span class=\"number\">3</span>)])]\n&gt;&gt;&gt; \n&gt;&gt;&gt; p.relative_order()\n[<span class=\"number\">6</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>]\n&gt;&gt;&gt;</code></pre>I took the first element of <code>p.pcgs</code> directly as the last generator of the first group in the derived series.",
  "id": "5d217fdc32132d6c1bb7ee99",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-07T05:15:08.909Z",
  "text": "```\n>>> g = SymmetricGroup(4)\n>>> p = g.polycyclic_group()\n>>> p.pcgs\n[Permutation(3)(0, 1), Permutation(0, 3)(1, 2), Permutation(0, 2)(1, 3)]\n>>> \n>>> [h.order() for h in p.pc_series]\n[24, 4, 2, 1]\n>>> \n>>> p.pc_series\n[PermutationGroup([\n    (0 1 2 3),\n    (3)(0 1)]), PermutationGroup([\n    (0 2)(1 3),\n    (0 3)(1 2)]), PermutationGroup([\n    (0 2)(1 3)]), PermutationGroup([\n    (3)])]\n>>> \n>>> p.relative_order()\n[6, 2, 2]\n>>> \n\n```\nI took the first element of `p.pcgs` directly as the last generator of the first group in the derived series.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "In <code>[24, 4, 2, 1]</code>,  the subgroup A(4) of order 12 is missing.",
  "id": "5d21970998a9ec58b6cd16dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-07T06:54:01.556Z",
  "text": "In `[24, 4, 2, 1]`,  the subgroup A(4) of order 12 is missing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Yes, it&#39;s because the last group in derived series of S(4) has only 2 generators. How we should plan to get that?",
  "id": "5d2197df9bb34a3cf3258bac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-07T06:57:35.719Z",
  "text": "Yes, it's because the last group in derived series of S(4) has only 2 generators. How we should plan to get that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It should be already in the derived series. Its quotients are abelian but not necessarily cyclic (though in S(4) case the first two are). Polycyclic series can be obtained from the derived series by adding new subgroups that make the quotients cyclic. (Compare with the construction of the composition series.)",
  "id": "5d2197ee9a8a5d3cf4ae81d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-07T06:57:50.279Z",
  "text": "It should be already in the derived series. Its quotients are abelian but not necessarily cyclic (though in S(4) case the first two are). Polycyclic series can be obtained from the derived series by adding new subgroups that make the quotients cyclic. (Compare with the construction of the composition series.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I described above the simple case of an abelian group.",
  "id": "5d219851b0887b1c1b53bab0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-07T06:59:29.656Z",
  "text": "I described above the simple case of an abelian group.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "<blockquote>\nConsider first an abelian group G with a set of generators. </blockquote>\n",
  "id": "5d219858b0887b1c1b53bb29",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-07T06:59:36.046Z",
  "text": "> Consider first an abelian group G with a set of generators. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "But in the general case of a nonabelian group with longer derived series the quotients are abelian and they have to be handled in the same way by adding one generator at a time and finding its relative order.",
  "id": "5d2198c083f2a2270ec87357",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-07T07:01:20.332Z",
  "text": "But in the general case of a nonabelian group with longer derived series the quotients are abelian and they have to be handled in the same way by adding one generator at a time and finding its relative order.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I&#39;ve tried something like this but the series seems quite bigger.<pre><code>der = G.<span class=\"function\"><span class=\"title\">derived_series</span><span class=\"params\">()</span></span>\nseries = []\n<span class=\"keyword\">for</span> <span class=\"tag\">i</span> <span class=\"keyword\">in</span> <span class=\"function\"><span class=\"title\">range</span><span class=\"params\">(len(der)</span></span>-<span class=\"number\">1</span>):\n    H = der[i+<span class=\"number\">1</span>]\n    <span class=\"keyword\">for</span> g <span class=\"keyword\">in</span> der[i]<span class=\"class\">.generators</span>:\n        <span class=\"keyword\">if</span> g not <span class=\"keyword\">in</span> H:\n            H = <span class=\"function\"><span class=\"title\">PermutationGroup</span><span class=\"params\">([g] + H.generators)</span></span>\n            series.<span class=\"function\"><span class=\"title\">append</span><span class=\"params\">(H)</span></span>\nseries.<span class=\"function\"><span class=\"title\">append</span><span class=\"params\">(der[-<span class=\"number\">1</span>])</span></span></code></pre>",
  "id": "5d219a5032132d6c1bb8a184",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-07T07:08:00.640Z",
  "text": "I've tried something like this but the series seems quite bigger.\n```\nder = G.derived_series()\nseries = []\nfor i in range(len(der)-1):\n\tH = der[i+1]\n\tfor g in der[i].generators:\n\t\tif g not in H:\n\t\t\tH = PermutationGroup([g] + H.generators)\n\t\t\tseries.append(H)\nseries.append(der[-1])\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "This is the result for S(4)<pre><code>[<span class=\"number\">24</span>, <span class=\"number\">12</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">1</span>]\n[PermutationGroup([\n    (<span class=\"number\">0</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>),\n    (<span class=\"number\">3</span>)(<span class=\"number\">0</span> <span class=\"number\">2</span> <span class=\"number\">1</span>),\n    (<span class=\"number\">3</span>)(<span class=\"number\">0</span> <span class=\"number\">1</span> <span class=\"number\">2</span>),\n    (<span class=\"number\">1</span> <span class=\"number\">3</span> <span class=\"number\">2</span>)]), PermutationGroup([\n    (<span class=\"number\">3</span>)(<span class=\"number\">0</span> <span class=\"number\">2</span> <span class=\"number\">1</span>),\n    (<span class=\"number\">0</span> <span class=\"number\">3</span>)(<span class=\"number\">1</span> <span class=\"number\">2</span>),\n    (<span class=\"number\">0</span> <span class=\"number\">2</span>)(<span class=\"number\">1</span> <span class=\"number\">3</span>)]), PermutationGroup([\n    (<span class=\"number\">0</span> <span class=\"number\">3</span>)(<span class=\"number\">1</span> <span class=\"number\">2</span>)]), PermutationGroup([\n    (<span class=\"number\">0</span> <span class=\"number\">2</span>)(<span class=\"number\">1</span> <span class=\"number\">3</span>),\n    (<span class=\"number\">0</span> <span class=\"number\">3</span>)(<span class=\"number\">1</span> <span class=\"number\">2</span>)]), PermutationGroup([\n    (<span class=\"number\">3</span>)])]</code></pre>",
  "id": "5d219b4451d87058bef7672e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-07T07:12:04.324Z",
  "text": "This is the result for S(4)\n```\n[24, 12, 2, 4, 1]\n[PermutationGroup([\n    (0 1 2 3),\n    (3)(0 2 1),\n    (3)(0 1 2),\n    (1 3 2)]), PermutationGroup([\n    (3)(0 2 1),\n    (0 3)(1 2),\n    (0 2)(1 3)]), PermutationGroup([\n    (0 3)(1 2)]), PermutationGroup([\n    (0 2)(1 3),\n    (0 3)(1 2)]), PermutationGroup([\n    (3)])]\n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The groups look correct but they are in wrong order. 4 should come be fore 2.",
  "id": "5d219e4283f2a2270ec895e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-07T07:24:50.093Z",
  "text": "The groups look correct but they are in wrong order. 4 should come be fore 2.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "hmm...",
  "id": "5d219ea6fadb0544803399c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-07T07:26:30.533Z",
  "text": "hmm...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Compare with the composition series code.",
  "id": "5d219eac9bb34a3cf325b1e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-07T07:26:36.571Z",
  "text": "Compare with the composition series code.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "There are three objects that can be created simultaneously: polycyclic series, polycyclic generator sequence and the relative orders.",
  "id": "5d21c2ee51d87058bef86d57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T10:01:18.051Z",
  "text": "There are three objects that can be created simultaneously: polycyclic series, polycyclic generator sequence and the relative orders.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay!",
  "id": "5d21c59bff78641c1ca76c4c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T10:12:43.462Z",
  "text": "Okay!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-07T14:40:38.804Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<pre><code>&gt; [<span class=\"number\">24</span>, <span class=\"number\">12</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">1</span>]</code></pre>",
  "id": "5d22043c51d87058befa2a92",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T14:39:56.881Z",
  "text": " ```\n> [24, 12, 2, 4, 1]\n ```\n\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I think we may try sorting the result according to order.",
  "id": "5d220458b2a6596c1a28309b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T14:40:24.595Z",
  "text": "I think we may try sorting the result according to order.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Also, to get the polycyclic generating sequence we can&#39;t take all the missing generators(g) in the above implementation.",
  "id": "5d2212c983f2a2270ecba9d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T15:42:01.696Z",
  "text": "Also, to get the polycyclic generating sequence we can't take all the missing generators(g) in the above implementation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Sorting will probably not work with generators or groups. Instead, the lists have to be constructed so that new elements will be either first or last (as in the composition series).",
  "id": "5d221e3bed8ed058b59d35e3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T16:30:51.629Z",
  "text": "Sorting will probably not work with generators or groups. Instead, the lists have to be constructed so that new elements will be either first or last (as in the composition series).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It is also possible to construct the list by joining segments.",
  "id": "5d221e8b9bb34a3cf329173a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T16:32:11.733Z",
  "text": "It is also possible to construct the list by joining segments.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "appending the elements in the list and then pre-pending the list in the series doesn&#39;t seems working! ",
  "id": "5d221f6d83f2a2270ecbfdf1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T16:35:57.651Z",
  "text": "appending the elements in the list and then pre-pending the list in the series doesn't seems working! ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It does work for the composition series.",
  "id": "5d221f869bb34a3cf3291c23",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T16:36:22.697Z",
  "text": "It does work for the composition series.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "There were multiple loops in composition series!",
  "id": "5d221fef9bb34a3cf3291dce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T16:38:07.019Z",
  "text": "There were multiple loops in composition series!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that two loops are needed here.",
  "id": "5d2220a298a9ec58b6d0c48d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T16:41:06.953Z",
  "text": "I think that two loops are needed here.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "We have 2 loops here but there were 3 loops in composition series.",
  "id": "5d22210698a9ec58b6d0c73d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T16:42:46.415Z",
  "text": "We have 2 loops here but there were 3 loops in composition series.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Two loop should suffice. Outer loop runs through the derived series and inner loop through the generators of each derived group.",
  "id": "5d2221b598a9ec58b6d0cb4f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T16:45:41.755Z",
  "text": "Two loop should suffice. Outer loop runs through the derived series and inner loop through the generators of each derived group.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The whole process starts from the bottom. You should be able to simulate the algorithm by hand.",
  "id": "5d2221e2631d3433ba40ceef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T16:46:26.512Z",
  "text": "The whole process starts from the bottom. You should be able to simulate the algorithm by hand.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "The bottom of the derived series?",
  "id": "5d222204ae10eb58bd7b95be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T16:47:00.753Z",
  "text": "The bottom of the derived series?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Yes.",
  "id": "5d222243c74a8b447f8730a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T16:48:03.728Z",
  "text": "Yes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Ahh.. then it&#39;s right!",
  "id": "5d22234bfadb0544803716d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T16:52:27.189Z",
  "text": "Ahh.. then it's right!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-07T17:04:43.698Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>There are three objects that can be created simultaneously: polycyclic series, polycyclic generator sequence and the relative orders.</p></blockquote>\n<p>Do we really need relative order in the object? I think a method will be okay for it!</p>",
  "id": "5d2225bd98a9ec58b6d0eaab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T17:02:53.549Z",
  "text": "> There are three objects that can be created simultaneously: polycyclic series, polycyclic generator sequence and the relative orders.\n\nDo we really need relative order in the object? I think a method will be okay for it!",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Relative order will have to be computed when the pcgs is created. It is more efficient to save it instead of recomputing it later.",
  "id": "5d2226c68193ce270f3ce69b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T17:07:18.599Z",
  "text": "Relative order will have to be computed when the pcgs is created. It is more efficient to save it instead of recomputing it later.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "One more thing why is it that polycyclic sequence changes for each execution",
  "id": "5d222767ed8ed058b59d778b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T17:09:59.417Z",
  "text": "One more thing why is it that polycyclic sequence changes for each execution",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Execution of which?",
  "id": "5d2227a99bb34a3cf32952ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T17:11:05.124Z",
  "text": "Execution of which?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Here is an example for S(4):<pre><code>[Permutation(<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>), Permutation(<span class=\"number\">3</span>)(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>), Permutation(<span class=\"number\">0</span>, <span class=\"number\">2</span>)(<span class=\"number\">1</span>, <span class=\"number\">3</span>), Permutation(<span class=\"number\">0</span>, <span class=\"number\">3</span>)(<span class=\"number\">1</span>, <span class=\"number\">2</span>)]</code></pre><pre><code>[Permutation(<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>), Permutation(<span class=\"number\">3</span>)(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>), Permutation(<span class=\"number\">0</span>, <span class=\"number\">3</span>)(<span class=\"number\">1</span>, <span class=\"number\">2</span>), Permutation(<span class=\"number\">0</span>, <span class=\"number\">1</span>)(<span class=\"number\">2</span>, <span class=\"number\">3</span>)]</code></pre>",
  "id": "5d2227aeae10eb58bd7bb898",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T17:11:10.016Z",
  "text": "Here is an example for S(4):\n```\n[Permutation(0, 1, 2, 3), Permutation(3)(0, 2, 1), Permutation(0, 2)(1, 3), Permutation(0, 3)(1, 2)]\n\n```\n```\n[Permutation(0, 1, 2, 3), Permutation(3)(0, 2, 1), Permutation(0, 3)(1, 2), Permutation(0, 1)(2, 3)]\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-07T17:11:42.569Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "third generator.",
  "id": "5d2227c38193ce270f3cee89",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T17:11:31.428Z",
  "text": "third generator.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The last derived group has two generators. There are two choices.",
  "id": "5d22284a98a9ec58b6d0fcb0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T17:13:46.067Z",
  "text": "The last derived group has two generators. There are two choices.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "So, we may get any of them!",
  "id": "5d22287883f2a2270ecc4126",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T17:14:32.172Z",
  "text": "So, we may get any of them!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The groups in the derived series are unique, and I would have expected that their generators would be the same after each call. You could investigate if those generators are changing.",
  "id": "5d222a4f98a9ec58b6d10bdf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T17:22:23.841Z",
  "text": "The groups in the derived series are unique, and I would have expected that their generators would be the same after each call. You could investigate if those generators are changing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "The last group in the derived series seems changing",
  "id": "5d222d6b83f2a2270ecc5dde",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T17:35:39.640Z",
  "text": "The last group in the derived series seems changing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<pre><code>PermutationGroup([\n    (<span class=\"number\">0</span> <span class=\"number\">1</span>)(<span class=\"number\">2</span> <span class=\"number\">3</span>),\n    (<span class=\"number\">0</span> <span class=\"number\">3</span>)(<span class=\"number\">1</span> <span class=\"number\">2</span>)])</code></pre><pre><code>PermutationGroup([\n    (<span class=\"number\">0</span> <span class=\"number\">1</span>)(<span class=\"number\">2</span> <span class=\"number\">3</span>),\n    (<span class=\"number\">0</span> <span class=\"number\">2</span>)(<span class=\"number\">1</span> <span class=\"number\">3</span>)])</code></pre>",
  "id": "5d222dbcc74a8b447f878a69",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-07T17:37:00.492Z",
  "text": "```\nPermutationGroup([\n    (0 1)(2 3),\n    (0 3)(1 2)])\n```\n```\nPermutationGroup([\n    (0 1)(2 3),\n    (0 2)(1 3)])\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "The last generator is changing, should we try to fix it?",
  "id": "5d22bcf3198ccc7033a97a23",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-08T03:48:03.996Z",
  "text": "The last generator is changing, should we try to fix it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It seems that <code>random_pr</code> is used by <code>normal_closure</code> (that is called by <code>derived_subgroup</code>). Maybe we should fix the initialization of the random generator.",
  "id": "5d22d73b905e046c048a275c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-08T05:40:11.119Z",
  "text": "It seems that `random_pr` is used by `normal_closure` (that is called by `derived_subgroup`). Maybe we should fix the initialization of the random generator.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-08T06:25:51.905Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The tests should probably start by setting <code>random.seed</code> to a chosen value. Permutation groups have a private attribute <code>_random_gens</code> that may change. Starting with a new group (or setting its <code>_random_gens</code> to an empty list) after setting the seed would probably  give repeatable results.",
  "id": "5d22e0331b7f5e70328364ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-08T06:18:27.327Z",
  "text": "The tests should probably start by setting `random.seed` to a chosen value. Permutation groups have a private attribute `_random_gens` that may change. Starting with a new group (or setting its `_random_gens` to an empty list) after setting the seed would probably  give repeatable results.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<p>The collector is producing wrong result for S(4):</p><pre><code>x0 = Permutation(0, 1, 2, 3)\nx1 = Permutation(3)(0, 2, 1)\nx2 = Permutation(0, 3)(1, 2)\nx3 = Permutation(0, 1)(2, 3)\n\npower-relations:\nx3<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2 = x2<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2 = () = x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>3, \nx0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2 = x2<span class=\"keyword\">*</span>x3 \n\nconjugate-relations\nx2<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x2 = x3\nx1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x1 = x2<span class=\"keyword\">*</span>x3\nx1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x2<span class=\"keyword\">*</span>x1 = x3 \nx0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x0 = x2\nx0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x2<span class=\"keyword\">*</span>x0 = x3\n\nword = x3<span class=\"keyword\">*</span>x2<span class=\"keyword\">*</span>x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1\n\nThe steps are:\nx2<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1\nx2<span class=\"keyword\">*</span>x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x2<span class=\"keyword\">*</span>x3\nx1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x2<span class=\"keyword\">*</span>x3\nx1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x2<span class=\"keyword\">*</span>x3\nx1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2<span class=\"keyword\">*</span>x2<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2\nx1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2<span class=\"keyword\">*</span>x2\n\n&gt;&gt;&gt; x2<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1 == x2<span class=\"keyword\">*</span>x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x2<span class=\"keyword\">*</span>x3\nFalse</code></pre><p>I think, this is because we are have modified our implementation to take only  single uncollected word at a time.</p>",
  "id": "5d243d8abea9f3574120e877",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-09T07:08:58.626Z",
  "text": "The collector is producing wrong result for S(4):\n```\nx0 = Permutation(0, 1, 2, 3)\nx1 = Permutation(3)(0, 2, 1)\nx2 = Permutation(0, 3)(1, 2)\nx3 = Permutation(0, 1)(2, 3)\n\npower-relations:\nx3**2 = x2**2 = () = x1**3, \nx0**2 = x2*x3 \n\nconjugate-relations\nx2**-1*x3*x2 = x3\nx1**-1*x3*x1 = x2*x3\nx1**-1*x2*x1 = x3 \nx0**-1*x3*x0 = x2\nx0**-1*x2*x0 = x3\n\nword = x3*x2*x1**-1\n\nThe steps are:\nx2*x3*x1**-1\nx2*x1**-1*x2*x3\nx1**-1*x3*x2*x3\nx1**2*x3*x2*x3\nx1**2*x2*x3**2\nx1**2*x2\n\n>>> x2*x3*x1**-1 == x2*x1**-1*x2*x3\nFalse\n\n```\nI think, this is because we are have modified our implementation to take only  single uncollected word at a time.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I don&#39;t think that is the reason. After one minimal uncollected word has been handled we have to find a new one because the word has been modified. A minimal uncollected subword of the original word need not be present in the modified word. For example, in <code>x2*x1*x0</code> there are two minimal uncollected words <code>x2*x1</code> and <code>x1*x0</code>. After <code>x2*x1</code> has bee rewritten, <code>x1*x0</code> is not there any more. It is only a waste of time to return it together with <code>x2*x1</code>.",
  "id": "5d2442f1270d2b1bfa652da9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-09T07:32:01.532Z",
  "text": "I don't think that is the reason. After one minimal uncollected word has been handled we have to find a new one because the word has been modified. A minimal uncollected subword of the original word need not be present in the modified word. For example, in `x2*x1*x0` there are two minimal uncollected words `x2*x1` and `x1*x0`. After `x2*x1` has bee rewritten, `x1*x0` is not there any more. It is only a waste of time to return it together with `x2*x1`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-09T07:48:17.732Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "One thing to note is that if <code>x2</code> is changed to <code>Permutation(0, 2)(1, 3)</code> then it produces correct result which is another varient of polycyclic generating sequence!",
  "id": "5d2446b20c8daa1686b0de71",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-09T07:48:02.641Z",
  "text": "One thing to note is that if `x2` is changed to `Permutation(0, 2)(1, 3)` then it produces correct result which is another varient of polycyclic generating sequence!",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2019-07-09T09:10:30.447Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Maybe <code>x1**-1</code> should first be written in the form <code>x1**2</code> (using <code>x1**3 = 1</code>). <code>x3*x1**-1</code> does not look like a minimal uncollected word because of the negative exponent.",
  "id": "5d2459f9b0027d2b199d63ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-09T09:10:17.164Z",
  "text": "Maybe `x1**-1` should first be written in the form `x1**2` (using `x1**3 = 1`). `x3*x1**-1` does not look like a minimal uncollected word because of the negative exponent.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2019-07-09T09:19:22.954Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "That is what I meant by taking all the uncollected sub-words at a time in the word <code>x3*x2*x1**-1</code> we&#39;ll have 3 uncollected sub-words namely <code>[x3*x2, x2*x1, x1**-1]</code> where when we solve <code>x3*x2</code> which will be collected to <code>x2*x3</code> then the case <code>x2*x1</code> will be wiped out and <code>x1**-1</code> will be collected to <code>x1**2</code>. The final word after taking all the uncollected sub-words from the first iteration will be <code>x2*x3*x1**2</code>.",
  "id": "5d245be317cc7b05ca99f3ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-09T09:18:27.735Z",
  "text": "That is what I meant by taking all the uncollected sub-words at a time in the word `x3*x2*x1**-1` we'll have 3 uncollected sub-words namely `[x3*x2, x2*x1, x1**-1]` where when we solve `x3*x2` which will be collected to `x2*x3` then the case `x2*x1` will be wiped out and `x1**-1` will be collected to `x1**2`. The final word after taking all the uncollected sub-words from the first iteration will be `x2*x3*x1**2`.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "We only have two uncollected subwords,  <code>x3*x2</code> and <code>x1**-1</code>.   <code>x1**-1</code> has to be collected before there will be <code>x2*x1</code>.",
  "id": "5d245f28eab1bd15a82b36e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-09T09:32:24.749Z",
  "text": "We only have two uncollected subwords,  `x3*x2` and `x1**-1`.   `x1**-1` has to be collected before there will be `x2*x1`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Presentation code is ready to review, tests were added.",
  "id": "5d259e55f5dd1457425b49c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-10T08:14:13.136Z",
  "text": "Presentation code is ready to review, tests were added.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Several methods have parameter <code>group</code>. I&#39;m having some difficulty in tracking where it comes from. Should it be a parameter with changing values given by user? Could it be an attribute of <code>PolycyclicGroup</code>, for example?",
  "id": "5d25ba5ff5dd1457425c2c1c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-10T10:13:51.457Z",
  "text": "Several methods have parameter `group`. I'm having some difficulty in tracking where it comes from. Should it be a parameter with changing values given by user? Could it be an attribute of `PolycyclicGroup`, for example?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "For now it should be given by user but we may try to make it an attribute of polycyclic group because the number of free group elements must be equal to the number of polycyclic generators in pcgs.",
  "id": "5d25bf0acdb70805c96e2e4c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-10T10:33:46.589Z",
  "text": "For now it should be given by user but we may try to make it an attribute of polycyclic group because the number of free group elements must be equal to the number of polycyclic generators in pcgs.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "That is what I was also thinking.",
  "id": "5d25c601acab0914d8e1383c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-10T11:03:29.057Z",
  "text": "That is what I was also thinking.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The <code>polycyclic_group</code> method looks ok. I had been thinking of computing the orders of the subgroups and then getting the relative orders as quotients but that is possible to compute later. You have the test <code>g not in H</code> instead of checking relative order 1. It would be interesting to know which method is more efficient considering that the orders have to be computed in any case.",
  "id": "5d25c727cdb70805c96e6b9b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-07-10T11:08:23.307Z",
  "text": "The `polycyclic_group` method looks ok. I had been thinking of computing the orders of the subgroups and then getting the relative orders as quotients but that is possible to compute later. You have the test `g not in H` instead of checking relative order 1. It would be interesting to know which method is more efficient considering that the orders have to be computed in any case.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It looks like all power relations in the test examples are trivial (that is, rhs is identity). Can you find examples where that is not so?",
  "id": "5d275ab717cc7b05caafb017",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-11T15:50:15.856Z",
  "text": "It looks like all power relations in the test examples are trivial (that is, rhs is identity). Can you find examples where that is not so?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "No, I think for one of the variants of S(4) the rhs of <code>x0</code> will not be trivial.",
  "id": "5d275b170c8c4114d9110f0e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-11T15:51:51.754Z",
  "text": "No, I think for one of the variants of S(4) the rhs of `x0` will not be trivial.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I&#39;ll give you the exact form of pcgs.",
  "id": "5d275b3798934d15a73a2960",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-11T15:52:23.358Z",
  "text": "I'll give you the exact form of pcgs.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Here is an example:<pre><code>[Permutation(0, 1, 2, 3), Permutation(3)(0, 2, 1), Permutation(0, 2)(1, 3), Permutation(0, 1)(2, 3)]\n{x3<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2: (), x2<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2: (), x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>3: (), x0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2: x2, x2<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x2: x3, x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x1: x2, x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x2<span class=\"keyword\">*</span>x1: x2<span class=\"keyword\">*</span>x3, x0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x0: x2<span class=\"keyword\">*</span>x3, x0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x2<span class=\"keyword\">*</span>x0: x2, x0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x1<span class=\"keyword\">*</span>x0: x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2<span class=\"keyword\">*</span>x3}</code></pre>",
  "id": "5d275d250c8daa1686c78625",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-11T16:00:37.157Z",
  "text": "Here is an example:\n```\n[Permutation(0, 1, 2, 3), Permutation(3)(0, 2, 1), Permutation(0, 2)(1, 3), Permutation(0, 1)(2, 3)]\n{x3**2: (), x2**2: (), x1**3: (), x0**2: x2, x2**-1*x3*x2: x3, x1**-1*x3*x1: x2, x1**-1*x2*x1: x2*x3, x0**-1*x3*x0: x2*x3, x0**-1*x2*x0: x2, x0**-1*x1*x0: x1**2*x3}\n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Here is an another varient of S(4):<pre><code>[Permutation(0, 1, 2, 3), Permutation(3)(0, 2, 1), Permutation(0, 3)(1, 2), Permutation(0, 1)(2, 3)]\n{x3<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2: (), x2<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2: (), x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>3: (), x0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2: x2<span class=\"keyword\">*</span>x3, x2<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x2: x3, x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x1: x2<span class=\"keyword\">*</span>x3, x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x2<span class=\"keyword\">*</span>x1: x3, x0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x0: x2, x0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x2<span class=\"keyword\">*</span>x0: x3, x0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x1<span class=\"keyword\">*</span>x0: x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2<span class=\"keyword\">*</span>x3}</code></pre>",
  "id": "5d275e1b98934d15a73a3db4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-11T16:04:43.044Z",
  "text": "Here is an another varient of S(4):\n```\n[Permutation(0, 1, 2, 3), Permutation(3)(0, 2, 1), Permutation(0, 3)(1, 2), Permutation(0, 1)(2, 3)]\n{x3**2: (), x2**2: (), x1**3: (), x0**2: x2*x3, x2**-1*x3*x2: x3, x1**-1*x3*x1: x2*x3, x1**-1*x2*x1: x3, x0**-1*x3*x0: x2, x0**-1*x2*x0: x3, x0**-1*x1*x0: x1**2*x3}\n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-11T16:12:12.508Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The reason why I am asking this is that there are no conjugate relations available when the power relations are collected. I don&#39;t  think that that would work in more complex cases. Power and conjugate relations should be computed together from the bottom up. First for xn (only power relation), then for x{n-1} and xn, then for x{n-2}, x{n-1} and xn, etc. It seems that the current examples are too simple.",
  "id": "5d275fc8acab0914d8ed2daf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-11T16:11:52.730Z",
  "text": "The reason why I am asking this is that there are no conjugate relations available when the power relations are collected. I don't  think that that would work in more complex cases. Power and conjugate relations should be computed together from the bottom up. First for xn (only power relation), then for x{n-1} and xn, then for x{n-2}, x{n-1} and xn, etc. It seems that the current examples are too simple.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay, I think it&#39;ll not be difficult to implement both at the same time just some additional checks on length will work. I&#39;ll try it and let you know!",
  "id": "5d276345b0027d2b19b3a915",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-11T16:26:45.496Z",
  "text": "Okay, I think it'll not be difficult to implement both at the same time just some additional checks on length will work. I'll try it and let you know!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It should preferably be done by creating a single collector and extending its relator set as needed. (There could be collector methods for that purpose.)",
  "id": "5d2767150c8c4114d91176a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-11T16:43:01.959Z",
  "text": "It should preferably be done by creating a single collector and extending its relator set as needed. (There could be collector methods for that purpose.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Ok!",
  "id": "5d27de2ce190903936ccc45e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-12T01:11:08.477Z",
  "text": "Ok!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Say for S(4) if we want to compute <code>x{2}**2</code> we need only <code>x{3}</code> right? ",
  "id": "5d2823093b41924785a4da16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-12T06:04:57.300Z",
  "text": "Say for S(4) if we want to compute `x{2}**2` we need only `x{3}` right? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "not <code>x{2}</code>",
  "id": "5d282320c3740260bb092b27",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-12T06:05:20.790Z",
  "text": "not `x{2}`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-12T07:28:47.223Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Well, we need x2 in order to find <code>x2**2</code>. But we know that it must be in the group G3 generated by x3 so we only need the initial step of the collector that is able to collect words denoting elements of G3.",
  "id": "5d283675096dec3f019ae7dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-12T07:27:49.575Z",
  "text": "Well, we need x2 in order to find `x2**2`. But we know that it must be in the group G3 generated by x3 so we only need the initial step of the collector that is able to collect words denoting elements of G3.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "In this case, <code>x2**2</code> is trivial but that is not necessarily always so. Therefore we must have a (small) collector that only handles powers of x3.",
  "id": "5d28372c7dbfff32429327e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-12T07:30:52.856Z",
  "text": "In this case, `x2**2` is trivial but that is not necessarily always so. Therefore we must have a (small) collector that only handles powers of x3.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that the collector should be constructed step-wise from the bottom up. First we have the relations for Gn (only power relation for xn). Then we compute the power relation for x{n-1} and the conjugate relation for xn conjugated by x{n-1}.",
  "id": "5d283815f4fe943971f3268e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-12T07:34:45.173Z",
  "text": "I think that the collector should be constructed step-wise from the bottom up. First we have the relations for Gn (only power relation for xn). Then we compute the power relation for x{n-1} and the conjugate relation for xn conjugated by x{n-1}.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-12T08:38:12.221Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "For S(4) I think this sequence of execution should work:<pre><code>[x3<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2, x2<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x2, x2<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2, x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x1, \n x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>3, x1<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x2<span class=\"keyword\">*</span>x1, x0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x3<span class=\"keyword\">*</span>x0,  x0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>2\n x0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x2<span class=\"keyword\">*</span>x0, x0<span class=\"keyword\">*</span><span class=\"keyword\">*</span>-1<span class=\"keyword\">*</span>x1<span class=\"keyword\">*</span>x0]</code></pre>",
  "id": "5d28465feab6cd776354d070",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-12T08:35:43.645Z",
  "text": "For S(4) I think this sequence of execution should work:\n```\n[x3**2, x2**-1*x3*x2, x2**2, x1**-1*x3*x1, \n x1**3, x1**-1*x2*x1, x0**-1*x3*x0,  x0**2\n x0**-1*x2*x0, x0**-1*x1*x0]\n\n```",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "editedAt": "2019-07-12T08:41:51.618Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "My understanding is if we have a relation defined between elements then we don&#39;t need the smallest element to form the group for <code>generator_product</code>.<br>For eg: <code>x2**-1*x3*x2</code> will need only <code>x3</code> and <code>x1**-1*x2*x1</code> will need <code>x3 and x2</code>.",
  "id": "5d2847a33be99c4786372e11",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-12T08:41:07.909Z",
  "text": "My understanding is if we have a relation defined between elements then we don't need the smallest element to form the group for `generator_product`.\nFor eg: `x2**-1*x3*x2` will need only `x3` and `x1**-1*x2*x1` will need `x3 and x2`.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "For the first 3 elements in above series we&#39;ll need <code>x3</code> only,  in fourth one we should have <code>x3 and x2</code> and so on..",
  "id": "5d28485f3e2c7e39706f26cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-12T08:44:15.736Z",
  "text": "For the first 3 elements in above series we'll need `x3` only,  in fourth one we should have `x3 and x2` and so on..",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think you have it right but to be sure I try to repeat: We construct the polycyclic sequence from the bottom up: Gn, G{n-1}, ..., G1, G0. At each step, relevant relations are added to the collector to be constructed. After the relations for G{i+1} have been added, the collector can be used for elements of that group. To get the constructor for Gi, we have to add the power relation for xi and all conjugate relations <code>xi**-1*x{i+1}*xi</code>, ... , <code>xi**-1*xn*xi</code>. First <code>G{i+1}.generator_product</code> is used to obtain representations as words in x{i+1}, ..., xn, and then collector (that already can be used for G{i+1}) is applied to get the normal forms of the above power and conjugate relations involving xi. (xi itself will not appear on the right hand side of those relations so the incomplete collector can be used.)",
  "id": "5d284ba1f4fe943971f3b998",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-12T08:58:09.815Z",
  "text": "I think you have it right but to be sure I try to repeat: We construct the polycyclic sequence from the bottom up: Gn, G{n-1}, ..., G1, G0. At each step, relevant relations are added to the collector to be constructed. After the relations for G{i+1} have been added, the collector can be used for elements of that group. To get the constructor for Gi, we have to add the power relation for xi and all conjugate relations `xi**-1*x{i+1}*xi`, ... , `xi**-1*xn*xi`. First `G{i+1}.generator_product` is used to obtain representations as words in x{i+1}, ..., xn, and then collector (that already can be used for G{i+1}) is applied to get the normal forms of the above power and conjugate relations involving xi. (xi itself will not appear on the right hand side of those relations so the incomplete collector can be used.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> you were right we do not need to return a list from uncollected subwords the whole idea that we were missing was that the uncollected power relators should be handled first before handling conjugate relators!<br>I&#39;ve pushed the changes have a look.",
  "id": "5d2979e9e190903936d7e471",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-13T06:27:53.779Z",
  "text": "@jksuom you were right we do not need to return a list from uncollected subwords the whole idea that we were missing was that the uncollected power relators should be handled first before handling conjugate relators!\nI've pushed the changes have a look.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Ok, I&#39;ll look into it.",
  "id": "5d299f6e3be99c478640826f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-13T09:07:58.107Z",
  "text": "Ok, I'll look into it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-14T10:50:49.714Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It should be possible to reorganize <code>pc_presentation</code> so that it would not be necessary to call <code>sorted</code> or <code>contains_generator</code> if we start from the bottom of the polycyclic generator list and proceed in a fixed order. For example, if we have 5 generators, then we construct power relation  for x4, power relation for x3, conjugate relation for x4 by x3, power relation for x2, conjugate relation for x3 by x2, conjugate relation for x4 by x2, power relation for x1, conjugate relation for x2 by x1, etc... ",
  "id": "5d2b08fb570ac36f8d20e953",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-14T10:50:35.942Z",
  "text": "It should be possible to reorganize `pc_presentation` so that it would not be necessary to call `sorted` or `contains_generator` if we start from the bottom of the polycyclic generator list and proceed in a fixed order. For example, if we have 5 generators, then we construct power relation  for x4, power relation for x3, conjugate relation for x4 by x3, power relation for x2, conjugate relation for x3 by x2, conjugate relation for x4 by x2, power relation for x1, conjugate relation for x2 by x1, etc... ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "That way there is no need for the methods <code>power_relations</code> and <code>conjugate_relations</code> that only produce the left hand sides and in unrelated order.",
  "id": "5d2b09a6202bb93f009f413c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-14T10:53:26.158Z",
  "text": "That way there is no need for the methods `power_relations` and `conjugate_relations` that only produce the left hand sides and in unrelated order.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay, I&#39;ll look into it.",
  "id": "5d2b4a8e3596f56f8cd95cd1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-14T15:30:22.647Z",
  "text": "Okay, I'll look into it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "The major concern is forming the group <code>G</code> in <code>G.generator_product()</code> if we are going to handle it at once, using <code>pcgs</code> only!",
  "id": "5d2c3eb6d14e297762d4c152",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-15T08:52:06.993Z",
  "text": "The major concern is forming the group `G` in `G.generator_product()` if we are going to handle it at once, using `pcgs` only!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The polycyclic series of groups is constructed in parallel with the polycyclic sequence of generators. They are both available when the relators and collector are constructed and they have the same length. The groups G are present in the series.",
  "id": "5d2c42cc4d750532414b1ce1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-15T09:09:32.352Z",
  "text": "The polycyclic series of groups is constructed in parallel with the polycyclic sequence of generators. They are both available when the relators and collector are constructed and they have the same length. The groups G are present in the series.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I&#39;ve pushed the changes, tests may fail for other additional methods but <code>presentation</code> works fine, have a look.",
  "id": "5d2d85985fa7895c430d5f8e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-16T08:06:48.214Z",
  "text": "I've pushed the changes, tests may fail for other additional methods but `presentation` works fine, have a look.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The tests look good. Especially those that test the collected words. Perhaps there could be some for a bigger group. Something like <code>S(5**n).sylow_subgroup(5)</code> for a reasonably sized <code>n</code>.",
  "id": "5d2eafb24f7f9e219c0a7f8c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-17T05:18:42.934Z",
  "text": "The tests look good. Especially those that test the collected words. Perhaps there could be some for a bigger group. Something like `S(5**n).sylow_subgroup(5)` for a reasonably sized `n`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay!",
  "id": "5d2eb52e3b41924785d3557b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-17T05:42:06.143Z",
  "text": "Okay!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-17T09:28:27.928Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "for <code>n = 3</code> it doesn&#39;t halt I tried printing it so, I found we&#39;ll have <code>210</code> relators and then it takes forever.",
  "id": "5d2eea204f7f9e219c0c1f94",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-17T09:28:00.147Z",
  "text": "for `n = 3` it doesn't halt I tried printing it so, I found we'll have `210` relators and then it takes forever.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2019-07-17T09:32:32.778Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "It&#39;s order is in 22 figures and there are 31 polycyclic generators should we go till <code>n = 2</code> only.",
  "id": "5d2eeb1a3be99c478666b5c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-17T09:32:10.620Z",
  "text": "It's order is in 22 figures and there are 31 polycyclic generators should we go till `n = 2` only.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "All subgroups in the polycyclic series are also polycyclic. Maybe you could take one of them. It is not necessary to work with the full Sylow subgroup.",
  "id": "5d2ef1b5570ac36f8d3cd09a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-17T10:00:21.639Z",
  "text": "All subgroups in the polycyclic series are also polycyclic. Maybe you could take one of them. It is not necessary to work with the full Sylow subgroup.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "You could take a group from the derived series, for example.",
  "id": "5d2ef1efd14e297762e8be1f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-17T10:01:19.047Z",
  "text": "You could take a group from the derived series, for example.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Ok.",
  "id": "5d2ef219f4fe943971231aef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-17T10:02:01.794Z",
  "text": "Ok.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Have you looked into the <code>Exponent_vector()</code>code. Reference Section 8.1.1, Definition 8.4 from handbook.",
  "id": "5d2fee8a202bb93f00c2eb5a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-18T03:59:06.176Z",
  "text": "Have you looked into the `Exponent_vector()`code. Reference Section 8.1.1, Definition 8.4 from handbook.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I&#39;m not able to figure it out why it&#39;s tests are failing they are working fine on my local system.",
  "id": "5d2feec7b74a8716e272b789",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-18T04:00:07.909Z",
  "text": "I'm not able to figure it out why it's tests are failing they are working fine on my local system.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I&#39;ll try to look into it. In the meantime, you could consider the placement of the free group (currently called <code>group</code> though that may be misleading as there is also the polycyclic group). It is inconvenient that the user should always create it. It could be created automatically if it is not given. It think that it could be an attribute of Collector. Then it would not be necessary to give it as a parameter to Collector methods.",
  "id": "5d30031fd14e297762f06c65",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-18T05:26:55.905Z",
  "text": "I'll try to look into it. In the meantime, you could consider the placement of the free group (currently called `group` though that may be misleading as there is also the polycyclic group). It is inconvenient that the user should always create it. It could be created automatically if it is not given. It think that it could be an attribute of Collector. Then it would not be necessary to give it as a parameter to Collector methods.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "For now free group is an attribute to Collector, Are you saying to make it an attribute of PolycyclicGroup. Replacement of group with free group seems a good idea.",
  "id": "5d3004a5e19090393606b2c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-18T05:33:25.067Z",
  "text": "For now free group is an attribute to Collector, Are you saying to make it an attribute of PolycyclicGroup. Replacement of group with free group seems a good idea.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It seems that I did not look carefully, sorry. I think that <code>group</code> was a parameter of some methods last time I looked. But maybe not any more? ",
  "id": "5d3007f154d3383937297bed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-18T05:47:29.525Z",
  "text": "It seems that I did not look carefully, sorry. I think that `group` was a parameter of some methods last time I looked. But maybe not any more? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay!",
  "id": "5d30086c5fa7895c431fea79",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-18T05:49:32.577Z",
  "text": "Okay!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It seems that <code>exponent_vector</code> should be a Collector method. Then it would not be necessary to create a new collector only for finding the exponents. Also the free group is already an attribute of Collector so it would not be necessary to create a new one and give it as a parameter to <code>exponent_vector</code>.",
  "id": "5d316a568fe53b671d9add6e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-19T06:59:34.358Z",
  "text": "It seems that `exponent_vector` should be a Collector method. Then it would not be necessary to create a new collector only for finding the exponents. Also the free group is already an attribute of Collector so it would not be necessary to create a new one and give it as a parameter to `exponent_vector`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-19T07:05:12.882Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay I&#39;ll include it in Collector.<br>Actually my vacations are over and I&#39;ll be moving back to my college so, I&#39;ll not be active on upcoming sunday and monday.",
  "id": "5d316b87b2db751dab8df2fd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-19T07:04:39.831Z",
  "text": "Okay I'll include it in Collector. \nActually my vacations are over and I'll be moving back to my college so, I'll not be active on upcoming sunday and monday.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The second evaluation is coming. So you will be active again next week?",
  "id": "5d316cd68285d81daa1f9e7a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-19T07:10:14.441Z",
  "text": "The second evaluation is coming. So you will be active again next week?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-19T07:11:25.418Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Yes, from Tuesday I&#39;ll be active.",
  "id": "5d316d138285d81daa1fa075",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-07-19T07:11:15.965Z",
  "text": "Yes, from Tuesday I'll be active.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I&#39;ll try to update the blog with all the work done in phase-II (i.e all the functionalities added to the polycyclic group) by tomorrow evening, will it be fine?",
  "id": "5d316e7bec5abe7bbc0db386",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2019-07-19T07:17:15.000Z",
  "text": "I'll try to update the blog with all the work done in phase-II (i.e all the functionalities added to the polycyclic group) by tomorrow evening, will it be fine?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think so.",
  "id": "5d31702bd1cceb1a8d82c255",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-07-19T07:24:27.773Z",
  "text": "I think so.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Ok!",
  "id": "5d317046d1cceb1a8d82c287",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-07-19T07:24:54.397Z",
  "text": "Ok!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-19T16:42:23.099Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>It seems that <code>exponent_vector</code> should be a Collector method. </p></blockquote>\n<p>Collector don&#39;t have actual group as a parameter.</p>",
  "id": "5d31f2d4ec5abe7bbc11b228",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-07-19T16:41:56.526Z",
  "text": "> It seems that `exponent_vector` should be a Collector method. \n\nCollector don't have actual group as a parameter.\n\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It could be an attribute, given as a parameter, or derived from pcgs if that is a parameter (which is probably preferable to having pc_relators that are the last to be found).",
  "id": "5d32003cd44431099259eb90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-07-19T17:39:08.914Z",
  "text": "It could be an attribute, given as a parameter, or derived from pcgs if that is a parameter (which is probably preferable to having pc_relators that are the last to be found).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I&#39;m not sure if having pcgs as a parameter will be a good choice from the user&#39;s point of view.",
  "id": "5d3207bc9851416687315f73",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-07-19T18:11:08.302Z",
  "text": "I'm not sure if having pcgs as a parameter will be a good choice from the user's point of view.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Why not pass group directly as parameter. Even with pcgs if we want to compute complete relators(via pc_presentation) then PolycyclicGroup will be used. ",
  "id": "5d320859437a3a13481d1d93",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-07-19T18:13:45.668Z",
  "text": "Why not pass group directly as parameter. Even with pcgs if we want to compute complete relators(via pc_presentation) then PolycyclicGroup will be used. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "There should be functions to create polycyclic generator sequences for the convenience of users. It is natural to have pcgs as parameter. I think that the (free) group can be given as parameter but its role is secondary. It may be useful to have it created when the collector is initialized.",
  "id": "5d32147ca0351b1a8c61dc8f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-07-19T19:05:32.390Z",
  "text": "There should be functions to create polycyclic generator sequences for the convenience of users. It is natural to have pcgs as parameter. I think that the (free) group can be given as parameter but its role is secondary. It may be useful to have it created when the collector is initialized.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-20T03:39:57.146Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Is the below structure of <code>Collector</code> and <code>PolycyclicGroup</code> seems good to you?<pre><code>collector = <span class=\"function\"><span class=\"title\">Collector</span><span class=\"params\">(pc_sequence, pc_series, relative_order, free_group)</span></span>\nPcGoup = <span class=\"function\"><span class=\"title\">PolycyclicGroup</span><span class=\"params\">(collector)</span></span></code></pre>",
  "id": "5d328c9cf9af9a44ed594eb7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-07-20T03:38:04.548Z",
  "text": "Is the below structure of `Collector` and `PolycyclicGroup` seems good to you?\n```\ncollector = Collector(pc_sequence, pc_series, relative_order, free_group)\nPcGoup = PolycyclicGroup(collector)\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2019-07-20T06:17:49.969Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I would expect that PolycyclicGroup be initialized with a group parameter (solvable permutation group for now). It could also have (optional) collector parameter but it would probably be possible to create that internally if it is missing. I think that the most important Collector parameter is pc_sequence. The others can optionally be derived from it (like <code>free_group=None</code> can be created with some symbols if it is not given). I think that having such default options would simplify testing as not everything has to be created in advance.",
  "id": "5d32b1548285d81daa28d322",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-07-20T06:14:44.921Z",
  "text": "I would expect that PolycyclicGroup be initialized with a group parameter (solvable permutation group for now). It could also have (optional) collector parameter but it would probably be possible to create that internally if it is missing. I think that the most important Collector parameter is pc_sequence. The others can optionally be derived from it (like `free_group=None` can be created with some symbols if it is not given). I think that having such default options would simplify testing as not everything has to be created in advance.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay, I&#39;ll think about it and let you know but maybe I&#39;ll come up with something next week, today I&#39;ll try to complete the blog first.",
  "id": "5d32b292d4443109925eb798",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-07-20T06:20:02.089Z",
  "text": "Okay, I'll think about it and let you know but maybe I'll come up with something next week, today I'll try to complete the blog first.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-20T06:36:41.383Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "If pcgs is given to Collector, we can first find the class <code>cls</code> of the group of pcgs (currently only PermutationGroup) and then pc_series could be something like <code>G = [cls(pcgs[i:]) for i in range(n)] + [cls([])]</code> where <code>n = len(pcgs)</code>if it is not given. relative_order could be <code>[G[i].order() // G[i+1].order() for i in range(n)]</code> if not given.",
  "id": "5d32b60fe2d1aa6688d8913c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-07-20T06:34:55.372Z",
  "text": "If pcgs is given to Collector, we can first find the class `cls` of the group of pcgs (currently only PermutationGroup) and then pc_series could be something like `G = [cls(pcgs[i:]) for i in range(n)] + [cls([])]` where `n = len(pcgs)`if it is not given. relative_order could be `[G[i].order() // G[i+1].order() for i in range(n)]` if not given.",
  "unread": false,
  "urls": [],
  "v": 5
 },
 {
  "editedAt": "2019-07-20T06:50:45.072Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay, and what about free group if we don&#39;t have any knowledge about pc relators and we have only pcgs which signifies only the number of free group elements needed how will we allocate that much free elements is there any way to do that?",
  "id": "5d32b9add4443109925ee144",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-07-20T06:50:21.242Z",
  "text": "Okay, and what about free group if we don't have any knowledge about pc relators and we have only pcgs which signifies only the number of free group elements needed how will we allocate that much free elements is there any way to do that?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2019-07-20T07:32:17.557Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I would try using something like <code>symbols(&#39;x:{0}&#39;.format(n))</code> where <code>n = len(pcgs)</code>.",
  "id": "5d32c30cc8988013472e2c6b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-07-20T07:30:20.849Z",
  "text": "I would try using something like `symbols('x:{0}'.format(n))` where `n = len(pcgs)`.",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay!",
  "id": "5d32c6e6c8988013472e46f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-07-20T07:46:46.079Z",
  "text": "Okay!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>I think that the most important Collector parameter is pc_sequence. The others can optionally be derived from it </p></blockquote>\n<p>Then we don&#39;t need to form <code>pc_series</code> while computing <code>pc_sequence</code>. pc_series will be computed inside collector.</p>",
  "id": "5d32d6b3f9af9a44ed5b3d94",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-07-20T08:54:11.036Z",
  "text": "> I think that the most important Collector parameter is pc_sequence. The others can optionally be derived from it \n\nThen we don't need to form `pc_series` while computing `pc_sequence`. pc_series will be computed inside collector.\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Is is possible to compute <code>pc_sequence</code> without also computing <code>pc_series</code>? We have to check that no generator is in the subgroup created by the tail of the sequence (so that subgroup has to be created). ",
  "id": "5d32e4c6ec5abe7bbc1802bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-07-20T09:54:14.338Z",
  "text": "Is is possible to compute `pc_sequence` without also computing `pc_series`? We have to check that no generator is in the subgroup created by the tail of the sequence (so that subgroup has to be created). ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "So I would expect that <code>pc_series</code> would be an input parameter in most practical cases even if it can be recomputed.",
  "id": "5d32e566437a3a134822fcb0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-07-20T09:56:54.560Z",
  "text": "So I would expect that `pc_series` would be an input parameter in most practical cases even if it can be recomputed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-20T11:25:20.260Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>Is is possible to compute <code>pc_sequence</code> without also computing <code>pc_series</code>?</p></blockquote>\n<p>Yes, we can compute it even for now we are not using <code>pc_series</code> for <code>pc_sequence</code>.</p>",
  "id": "5d32fa168fe53b671da61d4b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-07-20T11:25:10.154Z",
  "text": "> Is is possible to compute `pc_sequence` without also computing `pc_series`?\n\nYes, we can compute it even for now we are not using `pc_series` for `pc_sequence`.\n\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2019-07-20T11:26:09.561Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>So I would expect that <code>pc_series</code> would be an input paramete</p></blockquote>\n<p>Ok.</p>",
  "id": "5d32fa47f9af9a44ed5c433c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-07-20T11:25:59.745Z",
  "text": "> So I would expect that `pc_series` would be an input paramete\n\nOk.\n\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "<blockquote>\n we are not using pc_series</blockquote>\n",
  "id": "5d32ff34b2db751dab995921",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-07-20T11:47:00.821Z",
  "text": ">  we are not using pc_series",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "But some groups have to be defined even if they have some other name.",
  "id": "5d32ff5e8fe53b671da63c2b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-07-20T11:47:42.813Z",
  "text": "But some groups have to be defined even if they have some other name.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-20T11:54:47.183Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "If we start with a generator, say, xn, then for the next generator x{n-1} we have to find one that is not in the subgroup generated by xn. That group is the next to last group in <code>pc_series</code> and it is not possible to find a suitable x{n-1} if the group has not been created. So the groups have to be created when pc_sequence is generated even if they are not put in pc_series with that name. But it is more efficient to save them instead of recomputing them later.",
  "id": "5d33009ed44431099260c4ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-07-20T11:53:02.146Z",
  "text": "If we start with a generator, say, xn, then for the next generator x{n-1} we have to find one that is not in the subgroup generated by xn. That group is the next to last group in `pc_series` and it is not possible to find a suitable x{n-1} if the group has not been created. So the groups have to be created when pc_sequence is generated even if they are not put in pc_series with that name. But it is more efficient to save them instead of recomputing them later.",
  "unread": false,
  "urls": [],
  "v": 5
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I&#39;ve updated the blog with work  done in phase-II.<br><a href=\"https://planet.sympy.org/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://planet.sympy.org/</a>",
  "id": "5d330b1d8285d81daa2b40f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-07-20T12:37:49.213Z",
  "text": "I've updated the blog with work  done in phase-II.\nhttps://planet.sympy.org/",
  "unread": false,
  "urls": [
   {
    "url": "https://planet.sympy.org/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Thanks, that looks fine.",
  "id": "5d331438ec5abe7bbc194268",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-07-20T13:16:40.704Z",
  "text": "Thanks, that looks fine.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Thanks, for looking into it!",
  "id": "5d331fffec5abe7bbc199be5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-07-20T14:06:55.123Z",
  "text": "Thanks, for looking into it!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Hi, I&#39;ll try to push the changes by today!",
  "id": "5d37e734808425671cd9f954",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-07-24T05:05:56.106Z",
  "text": "Hi, I'll try to push the changes by today!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "OK.",
  "id": "5d380a34a0351b1a8c8af4b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-07-24T07:35:16.821Z",
  "text": "OK.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-24T08:56:39.850Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Pushed the changes and <code>test_collected_word</code> has been removed because I don&#39;t think it makes any sense now to test collected_word separately. Have a look at the class structure.",
  "id": "5d381d045ea6e644ec0d6769",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-07-24T08:55:32.753Z",
  "text": "Pushed the changes and `test_collected_word` has been removed because I don't think it makes any sense now to test collected_word separately. Have a look at the class structure.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Fine, I&#39;ll look into it.",
  "id": "5d3825b9437a3a1348471e4f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-07-24T09:32:41.867Z",
  "text": "Fine, I'll look into it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It seems that I have never pointed that default parameters are written with no spaces around =. That is one PEP 8 convention that is applied in SymPy. (It makes it easier to distinguish parameters visually.)",
  "id": "5d383292437a3a1348478143",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-07-24T10:27:30.879Z",
  "text": "It seems that I have never pointed that default parameters are written with no spaces around =. That is one PEP 8 convention that is applied in SymPy. (It makes it easier to distinguish parameters visually.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Ok.",
  "id": "5d383a91d6188741642b5a0c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-07-24T11:01:37.982Z",
  "text": "Ok.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-26T08:32:41.386Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Is there anything else needs to be improved with polycyclic group pr or is it ready to be merged?",
  "id": "5d3aba8a17279f5506bce898",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-07-26T08:32:10.189Z",
  "text": "Is there anything else needs to be improved with polycyclic group pr or is it ready to be merged?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Yes, I think it could be merged. There are some formal things that can be fixed later. (Spacing issues like <code>original = True</code>.) Documentation has to be added anyway.",
  "id": "5d3afcb46ec2e14223f34ca9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-07-26T13:14:28.668Z",
  "text": "Yes, I think it could be merged. There are some formal things that can be fixed later. (Spacing issues like `original = True`.) Documentation has to be added anyway.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Before the final, finishing touches on the polycyclic module the documentation should be completed. <code>doc/src/modules/combinatorics/fp_groups.rst</code> could probably serve as an example.",
  "id": "5d3eb626d254cf27df9a7c75",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-07-29T09:02:30.600Z",
  "text": "Before the final, finishing touches on the polycyclic module the documentation should be completed. `doc/src/modules/combinatorics/fp_groups.rst` could probably serve as an example.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay!",
  "id": "5d3f0d52071bb025df10bba5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-07-29T15:14:26.597Z",
  "text": "Okay!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> I&#39;m thinking of adding a method to compute the <code>induced polycyclic sequence</code> for the subgroups of polycyclic group, as mentioned in section 8.3.1 in the handbook but I&#39;m not able to understand line number 9 on page number 294, can you please have a look.",
  "id": "5d406aa684bc7a717fed9256",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2019-07-30T16:04:54.378Z",
  "text": "@jksuom I'm thinking of adding a method to compute the `induced polycyclic sequence` for the subgroups of polycyclic group, as mentioned in section 8.3.1 in the handbook but I'm not able to understand line number 9 on page number 294, can you please have a look.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I&#39;ll try to look though I am not sure if I can finish it tonight. The method may not be easy to implement.",
  "id": "5d4073578aab922429eae34e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-07-30T16:41:59.255Z",
  "text": "I'll try to look though I am not sure if I can finish it tonight. The method may not be easy to implement.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p> I am not sure if I can finish it tonight. </p></blockquote>\n<p>Fine!</p>",
  "id": "5d4073a5840e2871807325e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-07-30T16:43:17.903Z",
  "text": ">  I am not sure if I can finish it tonight. \n\nFine!\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "There is the pseudocode available in the handbook let&#39;s try.",
  "id": "5d4073e7ce271b4acd34b9bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-07-30T16:44:23.861Z",
  "text": "There is the pseudocode available in the handbook let's try.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-31T05:57:24.688Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Is it the bracket expression that you do not understand? It seems that <code>[a, b]</code> denotes the commutator <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>a</mi><mrow><mo>\u2212</mo><mn>1</mn></mrow></msup><msup><mi>b</mi><mrow><mo>\u2212</mo><mn>1</mn></mrow></msup><mi>a</mi><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">a^{-1}b^{-1}ab</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">\u2212</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">\u2212</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">b</span></span></span></span>.",
  "id": "5d412db2b0bf183ea371b1f6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-07-31T05:57:06.172Z",
  "text": "Is it the bracket expression that you do not understand? It seems that `[a, b]` denotes the commutator $$a^{-1}b^{-1}ab$$.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>Is it the bracket expression that you do not understand? </p></blockquote>\n<p>Yes.</p>",
  "id": "5d41529f1dc3324670d94e3a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-07-31T08:34:39.100Z",
  "text": "> Is it the bracket expression that you do not understand? \n\nYes.\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Thanks.",
  "id": "5d4152a41dc3324670d94ea2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-07-31T08:34:44.862Z",
  "text": "Thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Here is the PR on induced-pcgs <a target=\"_blank\" data-link-type=\"pr\" data-issue=\"17317\" href=\"https://github.com/sympy/sympy/pull/17317\" data-provider=\"github\" data-issue-repo=\"sympy/sympy\" class=\"pr\">sympy/sympy#17317</a> have a look.",
  "id": "5d43cccc7c87746165f8475c",
  "issues": [
   {
    "number": "17317",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-02T05:40:28.842Z",
  "text": "Here is the PR on induced-pcgs https://github.com/sympy/sympy/pull/17317 have a look.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It seems that induced-pcgs will expect that the relative orders are prime. That is apparently so in all current examples but maybe a test should be added to a suitable place. It would probably be useful to have a method that adds new generators to a pcgs making the orders prime but that can wait. I think that the Sphinx documentation has higher priority.",
  "id": "5d45a8cd7a151629e1187dce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-03T15:31:25.132Z",
  "text": "It seems that induced-pcgs will expect that the relative orders are prime. That is apparently so in all current examples but maybe a test should be added to a suitable place. It would probably be useful to have a method that adds new generators to a pcgs making the orders prime but that can wait. I think that the Sphinx documentation has higher priority.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay.",
  "id": "5d45bb29475c0a0febf27df5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-03T16:49:45.590Z",
  "text": "Okay.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "How are you getting on?",
  "id": "5d4dc14b1db76d0ffea36988",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-09T18:54:03.437Z",
  "text": "How are you getting on?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I&#39;m working on documentation with reference to <code>fp_groups.rst</code>, will open a PR in few days.",
  "id": "5d4e3dd54e17537f5205a4ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-10T03:45:25.847Z",
  "text": "I'm working on documentation with reference to `fp_groups.rst`, will open a PR in few days.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Ok. Fine.",
  "id": "5d4e576d1dadc42a114419e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-10T05:34:37.267Z",
  "text": "Ok. Fine.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-08-13T05:17:23.330Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> I&#39;m thinking to provide some kind of explanation, for the order in which presentation is computed with an example, below is an image have a look if it looks fine.",
  "id": "5d5246fe1db76d0ffec23738",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-13T05:13:34.073Z",
  "text": "@jksuom I'm thinking to provide some kind of explanation, for the order in which presentation is computed with an example, below is an image have a look if it looks fine.\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<a href=\"https://files.gitter.im/sympy/GroupTheory/CCp6/SymPy.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/sympy/GroupTheory/CCp6/thumb/SymPy.png\" alt=\"SymPy.png\" rel=\"nofollow\"></a>",
  "id": "5d52470a1db76d0ffec2374f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-13T05:13:46.338Z",
  "text": "[![SymPy.png](https://files.gitter.im/sympy/GroupTheory/CCp6/thumb/SymPy.png)](https://files.gitter.im/sympy/GroupTheory/CCp6/SymPy.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/sympy/GroupTheory/CCp6/thumb/SymPy.png"
   },
   {
    "url": "https://files.gitter.im/sympy/GroupTheory/CCp6/SymPy.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Here is the PR <a target=\"_blank\" data-link-type=\"pr\" data-issue=\"17399\" href=\"https://github.com/sympy/sympy/pull/17399\" data-provider=\"github\" data-issue-repo=\"sympy/sympy\" class=\"pr\">sympy/sympy#17399</a> have a look.",
  "id": "5d529f0f1db76d0ffec4b40a",
  "issues": [
   {
    "number": "17399",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-13T11:29:19.671Z",
  "text": "Here is the PR https://github.com/sympy/sympy/pull/17399 have a look.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The explanation is good but it seems that <code>pc_series</code> was reversed for computational purposes. Perhaps it would be more logical to use the original order in the documentation: For <code>x3**2</code>, <code>pc_series[4]</code>, which is trivial, <code>pc_series[3]</code> for <code>x2**2</code> and <code>x2**-2*x3*x2</code>, etc.",
  "id": "5d52a1ee1db76d0ffec4c5ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-13T11:41:34.068Z",
  "text": "The explanation is good but it seems that `pc_series` was reversed for computational purposes. Perhaps it would be more logical to use the original order in the documentation: For `x3**2`, `pc_series[4]`, which is trivial, `pc_series[3]` for `x2**2` and `x2**-2*x3*x2`, etc.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Yaa, right.",
  "id": "5d52a25690bba62a126a6f6e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-13T11:43:18.223Z",
  "text": "Yaa, right.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-08-16T17:25:40.959Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The documentation PR looks good. Tests have passed. It can probably be merged soon. As to the other one, I think that it would suffice to add a test for the relative orders being primes.",
  "id": "5d56e6c0029a51607fa6fa58",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-16T17:24:16.905Z",
  "text": "The documentation PR looks good. Tests have passed. It can probably be merged soon. As to the other one, I think that it would suffice to add a test for the relative orders being primes.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>I think that it would suffice to add a test for the relative orders being primes.</p></blockquote>\n<p>That kind of tests are already there, should we add more tests.</p>",
  "id": "5d57717e53490e334d086b8f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-17T03:16:14.672Z",
  "text": "> I think that it would suffice to add a test for the relative orders being primes.\n\nThat kind of tests are already there, should we add more tests.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I don&#39;t understand how <code>Codecov</code> works.",
  "id": "5d5772155178a72476a155b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-17T03:18:45.066Z",
  "text": "I don't understand how `Codecov` works.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It seems that the handbook assumes that the relative orders are prime in the induced pcgs algorithm. I tried to look more carefully where it would be needed but could not find such a place. So it looks like the test is not necessary for the algorithm.",
  "id": "5d57c9e9029a51607fadd801",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-17T09:33:29.020Z",
  "text": "It seems that the handbook assumes that the relative orders are prime in the induced pcgs algorithm. I tried to look more carefully where it would be needed but could not find such a place. So it looks like the test is not necessary for the algorithm.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I don&#39;t understand either how Codecov works but perhaps we should not worry too much.",
  "id": "5d57ca1a9507182477f4b635",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-17T09:34:18.909Z",
  "text": "I don't understand either how Codecov works but perhaps we should not worry too much.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p>So it looks like the test is not necessary for the algorithm.</p></blockquote>\n<p>So, Is it good to go?</p>",
  "id": "5d57cb944e17537f5249ed58",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-17T09:40:36.090Z",
  "text": "> So it looks like the test is not necessary for the algorithm.\n\nSo, Is it good to go?\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think it can be merged now.",
  "id": "5d57cd8853490e334d0b1d61",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-17T09:48:56.847Z",
  "text": "I think it can be merged now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Thanks!",
  "id": "5d57cdffbfd2887f53052d21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-17T09:50:55.293Z",
  "text": "Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The Sphinx documentation now passes the tests. Have you built the html? Does it look ok?",
  "id": "5d57ceb5beba830fffac138b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-17T09:53:57.221Z",
  "text": "The Sphinx documentation now passes the tests. Have you built the html? Does it look ok?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Yes, it looks good to me.",
  "id": "5d57d0aad03a7c63e643b1c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-17T10:02:18.633Z",
  "text": "Yes, it looks good to me.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Should I share some screenshots?",
  "id": "5d57d0f4029a51607fae1ac4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-17T10:03:32.697Z",
  "text": "Should I share some screenshots?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "That would be helpful for me.",
  "id": "5d57d325d03a7c63e643c8f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-17T10:12:53.334Z",
  "text": "That would be helpful for me.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Ok!",
  "id": "5d57d330c87a0963e78964e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-17T10:13:04.462Z",
  "text": "Ok!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<a href=\"https://files.gitter.im/sympy/GroupTheory/rVLE/sympy1.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/sympy/GroupTheory/rVLE/thumb/sympy1.png\" alt=\"sympy1.png\" rel=\"nofollow\"></a>",
  "id": "5d57d5b2bfd2887f53056cd7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-17T10:23:46.695Z",
  "text": "[![sympy1.png](https://files.gitter.im/sympy/GroupTheory/rVLE/thumb/sympy1.png)](https://files.gitter.im/sympy/GroupTheory/rVLE/sympy1.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/sympy/GroupTheory/rVLE/thumb/sympy1.png"
   },
   {
    "url": "https://files.gitter.im/sympy/GroupTheory/rVLE/sympy1.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<a href=\"https://files.gitter.im/sympy/GroupTheory/nyhd/sympy2.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/sympy/GroupTheory/nyhd/thumb/sympy2.png\" alt=\"sympy2.png\" rel=\"nofollow\"></a>",
  "id": "5d57d5c2bfd2887f53056d7d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-17T10:24:02.977Z",
  "text": "[![sympy2.png](https://files.gitter.im/sympy/GroupTheory/nyhd/thumb/sympy2.png)](https://files.gitter.im/sympy/GroupTheory/nyhd/sympy2.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/sympy/GroupTheory/nyhd/thumb/sympy2.png"
   },
   {
    "url": "https://files.gitter.im/sympy/GroupTheory/nyhd/sympy2.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<a href=\"https://files.gitter.im/sympy/GroupTheory/ntx7/sympy3.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/sympy/GroupTheory/ntx7/thumb/sympy3.png\" alt=\"sympy3.png\" rel=\"nofollow\"></a>",
  "id": "5d57d5cd029a51607fae42c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-17T10:24:13.175Z",
  "text": "[![sympy3.png](https://files.gitter.im/sympy/GroupTheory/ntx7/thumb/sympy3.png)](https://files.gitter.im/sympy/GroupTheory/ntx7/sympy3.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/sympy/GroupTheory/ntx7/thumb/sympy3.png"
   },
   {
    "url": "https://files.gitter.im/sympy/GroupTheory/ntx7/sympy3.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<a href=\"https://files.gitter.im/sympy/GroupTheory/jTwO/sympy4.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/sympy/GroupTheory/jTwO/thumb/sympy4.png\" alt=\"sympy4.png\" rel=\"nofollow\"></a>",
  "id": "5d57d5d8beba830fffac5423",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-17T10:24:24.343Z",
  "text": "[![sympy4.png](https://files.gitter.im/sympy/GroupTheory/jTwO/thumb/sympy4.png)](https://files.gitter.im/sympy/GroupTheory/jTwO/sympy4.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/sympy/GroupTheory/jTwO/thumb/sympy4.png"
   },
   {
    "url": "https://files.gitter.im/sympy/GroupTheory/jTwO/sympy4.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<a href=\"https://files.gitter.im/sympy/GroupTheory/FPqx/sympy5.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/sympy/GroupTheory/FPqx/thumb/sympy5.png\" alt=\"sympy5.png\" rel=\"nofollow\"></a>",
  "id": "5d57d5e21db76d0ffeebbdf4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-17T10:24:34.150Z",
  "text": "[![sympy5.png](https://files.gitter.im/sympy/GroupTheory/FPqx/thumb/sympy5.png)](https://files.gitter.im/sympy/GroupTheory/FPqx/sympy5.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/sympy/GroupTheory/FPqx/thumb/sympy5.png"
   },
   {
    "url": "https://files.gitter.im/sympy/GroupTheory/FPqx/sympy5.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Thanks. That looks ok. I left a comment on <code>relative_order</code> that would probably look better as upright text.",
  "id": "5d57dcb29507182477f54cdf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-17T10:53:38.336Z",
  "text": "Thanks. That looks ok. I left a comment on `relative_order` that would probably look better as upright text.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Okay.",
  "id": "5d57debb7d56bc60806dd2f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-17T11:02:19.231Z",
  "text": "Okay.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-08-18T10:57:36.087Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "There is one thing that I forgot to mention. Namely, single backticks generate LaTeX (and mathit) in SymPy&#39;s Sphinx configuration. That makes code like <code>pcgs</code> and <code>pc_series[4]</code> look different from what we would want. We should use double backticks instead.",
  "id": "5d592e96bfd2887f530fe93a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-18T10:55:18.645Z",
  "text": "There is one thing that I forgot to mention. Namely, single backticks generate LaTeX (and mathit) in SymPy's Sphinx configuration. That makes code like `pcgs` and `pc_series[4]` look different from what we would want. We should use double backticks instead.",
  "unread": false,
  "urls": [],
  "v": 5
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Ok, I&#39;ll push the changes by tonight.",
  "id": "5d593c2d1db76d0ffef67b57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-18T11:53:17.198Z",
  "text": "Ok, I'll push the changes by tonight.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It looks like the rst file is ready to be included though I could not make the html. My sphinx version (ubuntu 16.04) may be too old.",
  "id": "5d59797a5178a72476b15ace",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-18T16:14:50.079Z",
  "text": "It looks like the rst file is ready to be included though I could not make the html. My sphinx version (ubuntu 16.04) may be too old.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Do you need few screenshots as per above changes.",
  "id": "5d5983eb7d56bc60807a780c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-18T16:59:23.096Z",
  "text": "Do you need few screenshots as per above changes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Can you send the page on the computation of polycyclic presentation?",
  "id": "5d5989adbb5364334c57ce9b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-18T17:23:57.800Z",
  "text": "Can you send the page on the computation of polycyclic presentation?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<a href=\"https://files.gitter.im/sympy/GroupTheory/b35e/sympy6.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/sympy/GroupTheory/b35e/thumb/sympy6.png\" alt=\"sympy6.png\" rel=\"nofollow\"></a>",
  "id": "5d598b999507182477026a23",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-18T17:32:09.505Z",
  "text": "[![sympy6.png](https://files.gitter.im/sympy/GroupTheory/b35e/thumb/sympy6.png)](https://files.gitter.im/sympy/GroupTheory/b35e/sympy6.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/sympy/GroupTheory/b35e/thumb/sympy6.png"
   },
   {
    "url": "https://files.gitter.im/sympy/GroupTheory/b35e/sympy6.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Have a look!",
  "id": "5d598c24d03a7c63e65138c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-18T17:34:28.479Z",
  "text": "Have a look!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-08-18T17:45:35.378Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Thanks. That looks ok to me.",
  "id": "5d598e945178a72476b21544",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-18T17:44:52.131Z",
  "text": "Thanks. That looks ok to me.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think it can be merged.",
  "id": "5d598ecfbb5364334c57f722",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-18T17:45:51.111Z",
  "text": "I think it can be merged.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Thanks!",
  "id": "5d598f079507182477028a9e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-18T17:46:47.390Z",
  "text": "Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "There is one more thing that you could work with. It would be useful to have more information in the docstrings of classes and their methods. In particular,  &quot;Parameters&quot; could be added. We generally follow the numpy conventions as explained <a href=\"https://numpydoc.readthedocs.io/en/latest/format.html#docstring-standard\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a>.",
  "id": "5d5a3d101db76d0ffefe9285",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-19T06:09:20.459Z",
  "text": "There is one more thing that you could work with. It would be useful to have more information in the docstrings of classes and their methods. In particular,  \"Parameters\" could be added. We generally follow the numpy conventions as explained [here](https://numpydoc.readthedocs.io/en/latest/format.html#docstring-standard).",
  "unread": false,
  "urls": [
   {
    "url": "https://numpydoc.readthedocs.io/en/latest/format.html#docstring-standard"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2019-08-19T06:20:00.224Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "There are some differences. Double backticks instead of single ones for variables, for example, and ===== for underlining (with exactly the same length).",
  "id": "5d5a3e145178a72476b76fda",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-19T06:13:40.999Z",
  "text": "There are some differences. Double backticks instead of single ones for variables, for example, and ===== for underlining (with exactly the same length).",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Ok, I&#39;ll try!",
  "id": "5d5a6c4dd03a7c63e6587e17",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-19T09:30:53.678Z",
  "text": "Ok, I'll try!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> I&#39;ve opened a PR on extending the docstrings of polycyclic groups. Have a look <a target=\"_blank\" data-link-type=\"pr\" data-issue=\"17476\" href=\"https://github.com/sympy/sympy/pull/17476\" data-provider=\"github\" data-issue-repo=\"sympy/sympy\" class=\"pr\">sympy/sympy#17476</a>",
  "id": "5d5d813bc508da44c359cd83",
  "issues": [
   {
    "number": "17476",
    "repo": "sympy/sympy"
   }
  ],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-21T17:36:59.232Z",
  "text": "@jksuom I've opened a PR on extending the docstrings of polycyclic groups. Have a look https://github.com/sympy/sympy/pull/17476",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Ok, thanks.",
  "id": "5d5d841225764a3642d62bb1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-21T17:49:06.075Z",
  "text": "Ok, thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<code>\\{</code> is generating error, can&#39;t we use escape sequence in docstrings?",
  "id": "5d5e59b267969726f9437c40",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-22T09:00:34.375Z",
  "text": "`\\{` is generating error, can't we use escape sequence in docstrings?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-08-22T09:17:33.670Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "It should be possible if the docstring is raw: <code>r&quot;&quot;&quot;  ... &quot;&quot;&quot;</code>.",
  "id": "5d5e5d94b059db27dfbd6f31",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-22T09:17:08.635Z",
  "text": "It should be possible if the docstring is raw: `r\"\"\"  ... \"\"\"`.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "oohh!",
  "id": "5d5e5dd3d45f7c26fa132f5e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-22T09:18:11.142Z",
  "text": "oohh!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> I&#39;ve added the final report, please have a look and let me know if anything needs improvement <a href=\"https://github.com/sympy/sympy/wiki/GSoC-2019-Report\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/wiki/GSoC-2019-Report</a>",
  "id": "5d5ec51525764a3642dec985",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-22T16:38:45.765Z",
  "text": "@jksuom I've added the final report, please have a look and let me know if anything needs improvement https://github.com/sympy/sympy/wiki/GSoC-2019-Report",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/wiki/GSoC-2019-Report"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Ok. I&#39;ll do that tomorrow.",
  "id": "5d5edf41c8a85a44c2477b15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-22T18:30:25.069Z",
  "text": "Ok. I'll do that tomorrow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "Ok!",
  "id": "5d5ee0bf67969726f947339b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-22T18:36:47.508Z",
  "text": "Ok!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "That looks fine to me. (Though I&#39;m not sure of the word &quot;whosoever&quot;.) I think that google would expect a link to the actual report <a href=\"https://github.com/sympy/sympy/wiki/GSoC-2019-Report-Divyanshu-Thakur:-Group-Theory\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/sympy/sympy/wiki/GSoC-2019-Report-Divyanshu-Thakur:-Group-Theory</a>. I&#39;ll have to check the instructions.",
  "id": "5d5f8f2e2cdb146ad621a6f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-23T07:01:02.469Z",
  "text": "That looks fine to me. (Though I'm not sure of the word \"whosoever\".) I think that google would expect a link to the actual report https://github.com/sympy/sympy/wiki/GSoC-2019-Report-Divyanshu-Thakur:-Group-Theory. I'll have to check the instructions.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sympy/sympy/wiki/GSoC-2019-Report-Divyanshu-Thakur:-Group-Theory"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I&#39;ll replace the word &quot;whosoever&quot;.",
  "id": "5d602d89022dba538e4b0ac2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-23T18:16:41.990Z",
  "text": "I'll replace the word \"whosoever\".",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<blockquote>\n<p> I think that google would expect a link to the actual report </p></blockquote>\n<p>Okay!</p>",
  "id": "5d602db99b381b084fe10c1a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-23T18:17:29.559Z",
  "text": ">  I think that google would expect a link to the actual report \n\nOkay!\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> thanks a lot for the help during this project. You taught me a lot of things, you were so nice throughout the journey and answered my all the silly questions. Once again thanks for your time!!",
  "id": "5d63e91ea080d70ab584a367",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-26T14:13:50.993Z",
  "text": "@jksuom thanks a lot for the help during this project. You taught me a lot of things, you were so nice throughout the journey and answered my all the silly questions. Once again thanks for your time!!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Thanks. The subject of polycyclic groups was probably harder than you expected as the handbook does not deal with the creation of polycyclic presentations. It seems that GAP was not helpful either.",
  "id": "5d63f4e7c8228962acca2cec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-26T15:04:07.298Z",
  "text": "Thanks. The subject of polycyclic groups was probably harder than you expected as the handbook does not deal with the creation of polycyclic presentations. It seems that GAP was not helpful either.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "That&#39;s right, Thanks!",
  "id": "5d63f91207d1ff39f888b125",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-26T15:21:54.561Z",
  "text": "That's right, Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2020-02-27T11:55:43.115Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "Hello everyone, My name is Mohit Gupta I will directly come to point I want to work on Group Theory module in GSOC 2020.I have seen the idea page of Group Theory and saw the following things are unImplemented<ul>\n<li>Computation of various subgroups of infinite finitely presented groups</li>\n<li>Computation of Galois groups for a given polynomial</li>\n<li>Finding kernels of homomorphisms with infinite domains</li>\n<li>Extend functionalities of polycyclic groups</li>\n<li>Quotient groups</li>\n<li>Automorphism groups<br>I also have some Ideas that I want to add such as :</li>\n<li>Triple Product Property (<a href=\"https://en.wikipedia.org/wiki/Triple_product_property\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://en.wikipedia.org/wiki/Triple_product_property</a>) we can do it for both groups and sets.</li>\n<li>Normal Groups - While learning about Triple Product Property I also found that currently we do not have Implemented Normal subgroups so maybe this will be a new addition.</li>\n<li>Intersection of subgroups<br>This is not the final ideas I have just briefed I am still researching and going through code base.(will be able to spend more time once my exams get overed.<br>I am working in sympy from Jan 2020.  Any suggestions are welcome. Please tell if any there are any stalled Pr or where I can start the work from .<br><span data-link-type=\"mention\" data-screen-name=\"jksuom\" class=\"mention\">@jksuom</span> <span data-link-type=\"mention\" data-screen-name=\"divyanshu132\" class=\"mention\">@divyanshu132</span> <span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> <span data-link-type=\"mention\" data-screen-name=\"RavicharanN\" class=\"mention\">@RavicharanN</span> </li>\n</ul>\n",
  "id": "5e57ad5a4c3951679d27a78b",
  "issues": [],
  "mentions": [
   {
    "screenName": "jksuom",
    "userId": "53204afa5e986b0712efdf3d",
    "userIds": []
   },
   {
    "screenName": "divyanshu132",
    "userId": "5c35e8cdd73408ce4fb41d72",
    "userIds": []
   },
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   },
   {
    "screenName": "RavicharanN",
    "userId": "5862b83dd73408ce4f3f9ce3",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2020-02-27T11:51:54.574Z",
  "text": "Hello everyone, My name is Mohit Gupta I will directly come to point I want to work on Group Theory module in GSOC 2020.I have seen the idea page of Group Theory and saw the following things are unImplemented\n* Computation of various subgroups of infinite finitely presented groups\n* Computation of Galois groups for a given polynomial\n* Finding kernels of homomorphisms with infinite domains\n* Extend functionalities of polycyclic groups\n* Quotient groups\n* Automorphism groups \nI also have some Ideas that I want to add such as :\n* Triple Product Property (https://en.wikipedia.org/wiki/Triple_product_property) we can do it for both groups and sets.\n* Normal Groups - While learning about Triple Product Property I also found that currently we do not have Implemented Normal subgroups so maybe this will be a new addition.\n* Intersection of subgroups\nThis is not the final ideas I have just briefed I am still researching and going through code base.(will be able to spend more time once my exams get overed.\nI am working in sympy from Jan 2020.  Any suggestions are welcome. Please tell if any there are any stalled Pr or where I can start the work from .\n@jksuom @divyanshu132 @asmeurer @RavicharanN \n \n",
  "unread": false,
  "urls": [
   {
    "url": "https://en.wikipedia.org/wiki/Triple_product_property"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Have you also been thinking about possible implementations? I seems to me that there is time for only a few of those topics in one summer.",
  "id": "5e5819983cd19e69808e760b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2020-02-27T19:33:44.769Z",
  "text": "Have you also been thinking about possible implementations? I seems to me that there is time for only a few of those topics in one summer.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "Actually these were the things that I have seen or noticed while working in sympy.<br>Yeah you are right I think we have to select only few ideas out of them that can be possibly completed in a summer.I am still working to narrow down this list (I will come up with much more descriptive and sensible list asap my universities exam gets over).<br>I was looking for your insight that what do you think about the ideas and what can be improved or removed to make a balanced amount of work for summer.",
  "id": "5e582580d9fb46531ed0ce9e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-02-27T20:24:32.933Z",
  "text": "Actually these were the things that I have seen or noticed while working in sympy. \nYeah you are right I think we have to select only few ideas out of them that can be possibly completed in a summer.I am still working to narrow down this list (I will come up with much more descriptive and sensible list asap my universities exam gets over).\nI was looking for your insight that what do you think about the ideas and what can be improved or removed to make a balanced amount of work for summer.\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "About normal subgroups. Normality is a property. Either a subgroup is normal or it is not so there is no special implementation. What could be implemented is a normality test. I would look into GAP to see what was implemented there.",
  "id": "5e58ba72a157485cb4612653",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2020-02-28T07:00:02.514Z",
  "text": "About normal subgroups. Normality is a property. Either a subgroup is normal or it is not so there is no special implementation. What could be implemented is a normality test. I would look into GAP to see what was implemented there.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "<ul>\n<li><p>Computation of various subgroups of infinite finitely presented groups<br>Can you elaborate on this?</p></li>\n<li><p>Computation of Galois groups for a given polynomial<br>This is a whole new world, theory of algebraic numbers, not much group theory.</p></li>\n<li><p>Finding kernels of homomorphisms with infinite domains<br>Do you have some idea of how?</p></li>\n<li><p>Extend functionalities of polycyclic groups<br>Can you elaborate?</p></li>\n<li><p>Quotient groups<br>Of what kind of groups?</p></li>\n<li><p>Automorphism groups<br>Of what kind of structures?</p></li>\n<li><p>Triple Product Property (<a href=\"https://en.wikipedia.org/wiki/Triple_product_property\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://en.wikipedia.org/wiki/Triple_product_property</a>) we can do it for both groups and set<br>Is there something to implement?</p></li>\n<li><p>Intersection of subgroups<br>This could be useful though I don&#39;t know of algorithms.</p></li>\n</ul>\n",
  "id": "5e58f6a0376d882250be4180",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2020-02-28T11:16:48.782Z",
  "text": "- Computation of various subgroups of infinite finitely presented groups\nCan you elaborate on this?\n\n- Computation of Galois groups for a given polynomial\nThis is a whole new world, theory of algebraic numbers, not much group theory.\n\n- Finding kernels of homomorphisms with infinite domains\nDo you have some idea of how?\n\n- Extend functionalities of polycyclic groups\nCan you elaborate?\n\n- Quotient groups\nOf what kind of groups?\n\n- Automorphism groups\nOf what kind of structures?\n\n- Triple Product Property (https://en.wikipedia.org/wiki/Triple_product_property) we can do it for both groups and set\nIs there something to implement?\n\n- Intersection of subgroups\nThis could be useful though I don't know of algorithms.",
  "unread": false,
  "urls": [
   {
    "url": "https://en.wikipedia.org/wiki/Triple_product_property"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "<blockquote>\n<p>Triple Product Property (<a href=\"https://en.wikipedia.org/wiki/Triple_product_property\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://en.wikipedia.org/wiki/Triple_product_property</a>) we can do it for both groups and set.<br>Is there something to implement?</p></blockquote>\n<p>As Triple Product Property is a property we have to just implement test for this.I have seen the various algorithms for this property here (<a href=\"https://arxiv.org/pdf/1104.5097.pdf\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://arxiv.org/pdf/1104.5097.pdf</a>) to save your time you can directly head over to page no. 6 and 7 and page 8 to see the efficiency of each algorithms.</p><p>I think to implement this it would not take much time except few problems I am having :</p><ul>\n<li>some algorithms are using intersection (groups) to check whether they are trivial or not (obviously we do not need to calculate intersection for this) I have some property but it would only work when group is Normal &quot;Two Normal Subgroups Intersecting Trivially Commute Each Other&quot; (<a href=\"https://yutsumura.com/two-normal-subgroups-intersecting-trivially-commute-each-other/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://yutsumura.com/two-normal-subgroups-intersecting-trivially-commute-each-other/</a>).</li>\n</ul>\n<p>I have thoughts like:</p><ul>\n<li>what should we do when groups are not normal ?</li>\n<li>Does Normal group property really be efficient there?</li>\n</ul>\n",
  "id": "5e5900b03ca0375cb38d6b87",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-02-28T11:59:44.326Z",
  "text": ">Triple Product Property (https://en.wikipedia.org/wiki/Triple_product_property) we can do it for both groups and set.\nIs there something to implement?\n\nAs Triple Product Property is a property we have to just implement test for this.I have seen the various algorithms for this property here (https://arxiv.org/pdf/1104.5097.pdf) to save your time you can directly head over to page no. 6 and 7 and page 8 to see the efficiency of each algorithms.\n\nI think to implement this it would not take much time except few problems I am having :\n* some algorithms are using intersection (groups) to check whether they are trivial or not (obviously we do not need to calculate intersection for this) I have some property but it would only work when group is Normal \"Two Normal Subgroups Intersecting Trivially Commute Each Other\" (https://yutsumura.com/two-normal-subgroups-intersecting-trivially-commute-each-other/).\n\nI have thoughts like:\n* what should we do when groups are not normal ?\n* Does Normal group property really be efficient there?\n",
  "unread": false,
  "urls": [
   {
    "url": "https://en.wikipedia.org/wiki/Triple_product_property"
   },
   {
    "url": "https://arxiv.org/pdf/1104.5097.pdf"
   },
   {
    "url": "https://yutsumura.com/two-normal-subgroups-intersecting-trivially-commute-each-other/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Normality is essential for the commutativity to hold.",
  "id": "5e59021e90a8295824f42ac8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2020-02-28T12:05:50.180Z",
  "text": "Normality is essential for the commutativity to hold.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2020-02-28T12:18:46.415Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "<blockquote>\n<p>Normality is essential for the commutativity to hold.</p></blockquote>\n<p>yes we can say that.(every subgroup of abelian group is normal)</p>",
  "id": "5e5904a7376d882250be67ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-02-28T12:16:39.176Z",
  "text": ">Normality is essential for the commutativity to hold.\n\nyes we can say that.(every subgroup of abelian group is normal)\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "I will elaborate the ideas above soon.(I need little time)",
  "id": "5e5905efca2f5a558d55a28d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-02-28T12:22:07.241Z",
  "text": "I will elaborate the ideas above soon.(I need little time)\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The application of the triple product property seems to be to multiplication of numerical matrices. I think that NumPy implements that kind of algorithms. SymPy&#39;s matrices are typically symbolic which means that the acceleration methods devised for numerical matrices are generally not useful in SymPy. Consider, for example, two nxn matrices with entries <code>a[i, j]</code> and <code>b[i, j]</code>. The entries of their product are sums of n products. That makes n^3 products altogether, and there is no way to reduce the exponent 3.",
  "id": "5e5908293ca0375cb38d884e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2020-02-28T12:31:37.610Z",
  "text": "The application of the triple product property seems to be to multiplication of numerical matrices. I think that NumPy implements that kind of algorithms. SymPy's matrices are typically symbolic which means that the acceleration methods devised for numerical matrices are generally not useful in SymPy. Consider, for example, two nxn matrices with entries `a[i, j]` and `b[i, j]`. The entries of their product are sums of n products. That makes n^3 products altogether, and there is no way to reduce the exponent 3.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "<blockquote>\nNormality is essential for the commutativity to hold.<br>By this you mean that it is essential for Triple Product Property? </blockquote>\n",
  "id": "5e590850cb91b5224ffd8b5d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-02-28T12:32:16.623Z",
  "text": ">Normality is essential for the commutativity to hold.\nBy this you mean that it is essential for Triple Product Property? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "<blockquote>\n<p>The application of the triple product property seems to be to multiplication of numerical matrices. I think that NumPy implements that kind of algorithms. SymPy&#39;s matrices are typically symbolic which means that the acceleration methods devised for numerical matrices are generally not useful in SymPy. Consider, for example, two nxn matrices with entries <code>a[i, j]</code> and <code>b[i, j]</code>. The entries of their product are sums of n products. That makes n^3 products altogether, and there is no way to reduce the exponent 3.</p></blockquote>\n<p>Yes It exactly focus on fast matrix multiplication and you seems right too.</p>",
  "id": "5e5909df3ca0375cb38d8e77",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-02-28T12:38:55.622Z",
  "text": ">The application of the triple product property seems to be to multiplication of numerical matrices. I think that NumPy implements that kind of algorithms. SymPy's matrices are typically symbolic which means that the acceleration methods devised for numerical matrices are generally not useful in SymPy. Consider, for example, two nxn matrices with entries `a[i, j]` and `b[i, j]`. The entries of their product are sums of n products. That makes n^3 products altogether, and there is no way to reduce the exponent 3.\n\nYes It exactly focus on fast matrix multiplication and you seems right too.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "But I wonder this may be usefull in other cases too? I don&#39;t have any examples now(I will look for it)",
  "id": "5e590c0d7fef7f2e898e0729",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-02-28T12:48:13.570Z",
  "text": "But I wonder this may be usefull in other cases too? I don't have any examples now(I will look for it)\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "I think there is an existing method in SymPy to check the normality of permutation groups.",
  "id": "5e5930e13ca0375cb38e1edf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2020-02-28T15:25:21.764Z",
  "text": "I think there is an existing method in SymPy to check the normality of permutation groups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/divyanshu132",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36084189?v=4&s=60",
   "displayName": "Divyanshu Thakur",
   "gv": "4",
   "id": "5c35e8cdd73408ce4fb41d72",
   "url": "/divyanshu132",
   "username": "divyanshu132",
   "v": 12
  },
  "html": "In addition to elaborating as Kalevi has pointed out, I would suggest you to get yourself familiar with the presentation of groups in SymPy may be you can try adding some small missing functionalities in that way you will have an idea of how much research it takes to add a small functionality . Eventually, you&#39;ll be able to figure it out how much of work can be done in a summer.",
  "id": "5e59334b7fef7f2e898e8bdc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2020-02-28T15:35:39.682Z",
  "text": "In addition to elaborating as Kalevi has pointed out, I would suggest you to get yourself familiar with the presentation of groups in SymPy may be you can try adding some small missing functionalities in that way you will have an idea of how much research it takes to add a small functionality . Eventually, you'll be able to figure it out how much of work can be done in a summer.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "okay I will first look for adding small functionalities maybe I will get familiar with the code much faster this way and will be able to estimate the right and sufficient amount of work for one summer. ",
  "id": "5e5942298e04426dd011479d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-02-28T16:39:05.088Z",
  "text": "okay I will first look for adding small functionalities maybe I will get familiar with the code much faster this way and will be able to estimate the right and sufficient amount of work for one summer. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "<blockquote>\n<p>I think there is an existing method in SymPy to check the normality of permutation groups.</p></blockquote>\n<p>Yes It is there as <code>is_normal</code>.</p>",
  "id": "5e5942b8ca2f5a558d567396",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-02-28T16:41:28.545Z",
  "text": "> I think there is an existing method in SymPy to check the normality of permutation groups.\n\nYes It is there as `is_normal`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "<p>Hello Kalevi,<br>Good morning I was thinking about adding a functions to check whether a group is a hall subgroups or not (<a href=\"https://en.wikipedia.org/wiki/Hall_subgroup\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://en.wikipedia.org/wiki/Hall_subgroup</a>.</p><p>Since we have all the required method that we need to implement a test for hall subgroups it will not take much time.<br>this is the possible algorithm I am thinking:</p><pre><code>is_hall_subgroups(H,G):\n    #We want to <span class=\"operator\"><span class=\"keyword\">check</span> <span class=\"keyword\">if</span> H <span class=\"keyword\">is</span> a hall subgroups <span class=\"keyword\">and</span> H <span class=\"keyword\">is</span> the subgroup <span class=\"keyword\">of</span> <span class=\"keyword\">G</span> <span class=\"keyword\">where</span> <span class=\"keyword\">G</span> should be a finite <span class=\"keyword\">group</span>.\n    <span class=\"number\">1.</span>)<span class=\"keyword\">check</span> <span class=\"keyword\">if</span> <span class=\"keyword\">G</span> <span class=\"keyword\">is</span> a finite <span class=\"keyword\">groups</span>\n    <span class=\"number\">2.</span>)find the <span class=\"keyword\">order</span> <span class=\"keyword\">of</span> H.(<span class=\"keyword\">Ord</span>)\n    <span class=\"number\">3.</span>)find the <span class=\"keyword\">index</span> <span class=\"keyword\">for</span> H.(ind)\n    <span class=\"number\">4.</span>)<span class=\"keyword\">If</span> gcd(<span class=\"keyword\">Ord</span>,Ind) <span class=\"keyword\">is</span> <span class=\"number\">1</span> <span class=\"keyword\">then</span> H <span class=\"keyword\">is</span> a hall_subgroup.(gcd = <span class=\"keyword\">Greatest</span> Common Divisor)</span></code></pre>",
  "id": "5e5ca523ec379e558e9d5da2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-02T06:18:11.976Z",
  "text": "Hello Kalevi,\nGood morning I was thinking about adding a functions to check whether a group is a hall subgroups or not (https://en.wikipedia.org/wiki/Hall_subgroup.\n\nSince we have all the required method that we need to implement a test for hall subgroups it will not take much time.\nthis is the possible algorithm I am thinking:\n\n```\nis_hall_subgroups(H,G):\n\t#We want to check if H is a hall subgroups and H is the subgroup of G where G should be a finite group.\n\t1.)check if G is a finite groups\n\t2.)find the order of H.(Ord)\n\t3.)find the index for H.(ind)\n\t4.)If gcd(Ord,Ind) is 1 then H is a hall_subgroup.(gcd = Greatest Common Divisor)\n\n```\n",
  "unread": false,
  "urls": [
   {
    "url": "https://en.wikipedia.org/wiki/Hall_subgroup"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Have you some idea of where it would be useful to know that a subgroup is Hall subgroup?",
  "id": "5e5cd3378e04426dd0193a5b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2020-03-02T09:34:47.171Z",
  "text": "Have you some idea of where it would be useful to know that a subgroup is Hall subgroup?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "<p>Sorry for late reply<br>I suggest this because there was a <code>Computation of Hall Subgroup</code> idea proposed in last year gsoc proposal but due to time constraint it was not implemented So I was looking to implement that but while looking I found this <code>hall subgroup property</code> so i was thinking it may be helpfull to add it but after a thorough research I didnt find it helpfull.</p><p>do we also need <code>Computation of Hall Subgroup</code> ?</p>",
  "id": "5e5e66124eefc06dcf30994a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-03T14:13:38.592Z",
  "text": "Sorry for late reply\nI suggest this because there was a `Computation of Hall Subgroup` idea proposed in last year gsoc proposal but due to time constraint it was not implemented So I was looking to implement that but while looking I found this `hall subgroup property` so i was thinking it may be helpfull to add it but after a thorough research I didnt find it helpfull.\n\ndo we also need `Computation of Hall Subgroup` ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Hall subgroups are subgroups that have a certain property (which is easy to check). There is no specific Hall subgroup that could be computed.",
  "id": "5e5e689cff6f6d2e88815f97",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2020-03-03T14:24:28.812Z",
  "text": "Hall subgroups are subgroups that have a certain property (which is easy to check). There is no specific Hall subgroup that could be computed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "I looked at <code>GAP</code> maybe the  title <code>Computation of Hall Subgroup</code> (given in previous year proposal) disguiding I mean that <code>HallSubgroup( G, P )</code>: computes a P-Hall subgroup for a set P of primes. This is a subgroup the order of which is only divisible by primes in P and whose index is coprime to all primes in P.",
  "id": "5e5e716a53fa513e28681f5f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-03T15:02:02.435Z",
  "text": "I looked at `GAP` maybe the  title `Computation of Hall Subgroup` (given in previous year proposal) disguiding I mean that `HallSubgroup( G, P )`: computes a P-Hall subgroup for a set P of primes. This is a subgroup the order of which is only divisible by primes in P and whose index is coprime to all primes in P.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "here (<a href=\"https://www.gap-system.org/Manuals/doc/ref/chap39.html#X7EDBA19E828CD584\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://www.gap-system.org/Manuals/doc/ref/chap39.html#X7EDBA19E828CD584</a>)  39.13-3",
  "id": "5e5e81fd8e04426dd01d7ab7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-03T16:12:45.336Z",
  "text": "here (https://www.gap-system.org/Manuals/doc/ref/chap39.html#X7EDBA19E828CD584)  39.13-3\n",
  "unread": false,
  "urls": [
   {
    "url": "https://www.gap-system.org/Manuals/doc/ref/chap39.html#X7EDBA19E828CD584"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "That is what sylow_subgroup does if there is exactly one prime in P. So that looks like a generalization.  ",
  "id": "5e5e957790a8295824019046",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2020-03-03T17:35:51.513Z",
  "text": "That is what sylow_subgroup does if there is exactly one prime in P. So that looks like a generalization.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2020-03-03T17:44:04.192Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "just clarifying my doubt sylow_subgroup genrates a subgroup for any particular prime I think ?",
  "id": "5e5e96c82e398f46abd9c01e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-03T17:41:28.085Z",
  "text": "just clarifying my doubt sylow_subgroup genrates a subgroup for any particular prime I think ?\n",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2020-03-03T17:53:26.850Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "<p><code>HallSubgroup( G, P )</code> will generate a subgroup for a list of primes. maybe we can use <code>sylow_subgroup</code> and take intersection(not there now in sympy) for them.</p><p>will  <code>HallSubgroup( G, P )</code>  usefull for sympy?</p>",
  "id": "5e5e9984ec7f8746aaae5b06",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-03T17:53:08.200Z",
  "text": "`HallSubgroup( G, P )` will generate a subgroup for a list of primes. maybe we can use `sylow_subgroup` and take intersection(not there now in sympy) for them.\n\nwill  `HallSubgroup( G, P )`  usefull for sympy?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "One often speaks of Sylow p-subgroups for a particular prime.",
  "id": "5e5e9b317fef7f2e899b3f39",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2020-03-03T18:00:17.174Z",
  "text": "One often speaks of Sylow p-subgroups for a particular prime.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "<blockquote>\nwill HallSubgroup( G, P ) usefull for sympy?</blockquote>\n",
  "id": "5e5e9b56ff6f6d2e8881ebaf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2020-03-03T18:00:54.080Z",
  "text": "> will HallSubgroup( G, P ) usefull for sympy?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I don&#39;t know..",
  "id": "5e5e9b5e53fa513e2868941f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2020-03-03T18:01:02.609Z",
  "text": "I don't know..",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "<blockquote>\n<p>One often speaks of Sylow p-subgroups for a particular prime.</p></blockquote>\n<p>Okay..</p>",
  "id": "5e5e9c2b2e398f46abd9ce03",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-03T18:04:27.736Z",
  "text": "> One often speaks of Sylow p-subgroups for a particular prime.\n\nOkay..",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "Should I leave it for now?",
  "id": "5e5e9c43ff6f6d2e8881ed00",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-03T18:04:51.569Z",
  "text": "Should I leave it for now?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "You could take a look at how Sylow subgroups are found in SymPy and then try to find an algorithm for Hall subgroups.",
  "id": "5e5ea241cb91b5224f0ace39",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2020-03-03T18:30:25.917Z",
  "text": "You could take a look at how Sylow subgroups are found in SymPy and then try to find an algorithm for Hall subgroups.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "Sure I will do it now.",
  "id": "5e5ea3be4eefc06dcf314401",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-03T18:36:46.869Z",
  "text": "Sure I will do it now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "Please see it&#39;s not a fully detailed we can break this down but it need discussion<pre><code>Hall_Subgroup(G,P):\n    1.) <span class=\"operator\"><span class=\"keyword\">Check</span> <span class=\"keyword\">if</span> every <span class=\"keyword\">p</span> <span class=\"keyword\">in</span> <span class=\"keyword\">P</span> <span class=\"keyword\">is</span> prime <span class=\"keyword\">if</span> <span class=\"keyword\">not</span>:\n        valueerror\n    <span class=\"number\">2.</span>) <span class=\"keyword\">Check</span> <span class=\"keyword\">if</span> <span class=\"keyword\">order</span> <span class=\"keyword\">of</span> <span class=\"keyword\">G</span> <span class=\"keyword\">is</span> divisible <span class=\"keyword\">by</span> every prime <span class=\"keyword\">in</span> <span class=\"keyword\">P</span> <span class=\"keyword\">if</span> <span class=\"keyword\">not</span>:\n        <span class=\"keyword\">return</span> trivial subgroup (<span class=\"keyword\">only</span> <span class=\"keyword\">Identity</span> <span class=\"keyword\">Element</span>)\n    <span class=\"number\">3.</span>) <span class=\"keyword\">Compute</span> sylow <span class=\"keyword\">p</span> subgroup <span class=\"keyword\">for</span> every prime <span class=\"keyword\">in</span> <span class=\"keyword\">P</span>.\n    <span class=\"number\">4.</span>) Find the common <span class=\"keyword\">of</span> sylow <span class=\"keyword\">p</span> subgroups computed <span class=\"keyword\">in</span> above step.(since every sylow subgroup <span class=\"keyword\">of</span> a <span class=\"keyword\">group</span> <span class=\"keyword\">is</span> hallsubgroup)</span></code></pre>",
  "id": "5e5f828353fa513e286ad55c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-04T10:27:15.444Z",
  "text": "Please see it's not a fully detailed we can break this down but it need discussion\n```\nHall_Subgroup(G,P):\n\t1.) Check if every p in P is prime if not:\n\t\tvalueerror\n\t2.) Check if order of G is divisible by every prime in P if not:\n\t\treturn trivial subgroup (only Identity Element)\n\t3.) Compute sylow p subgroup for every prime in P.\n\t4.) Find the common of sylow p subgroups computed in above step.(since every sylow subgroup of a group is hallsubgroup)\n\t\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "<blockquote>\nCheck if order of G is divisible by every prime in P</blockquote>\n",
  "id": "5e5f86c8ec7f8746aab0a253",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2020-03-04T10:45:28.791Z",
  "text": "> Check if order of G is divisible by every prime in P",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "This is not necessary. The order of a Hall subgroup does not have to be divisible be p if the order of the group is not.",
  "id": "5e5f8744d045e25825127388",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2020-03-04T10:47:32.244Z",
  "text": "This is not necessary. The order of a Hall subgroup does not have to be divisible be p if the order of the group is not.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "<blockquote>\nFind the common of sylow p subgroups</blockquote>\n",
  "id": "5e5f878c8e04426dd0202352",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2020-03-04T10:48:44.215Z",
  "text": "> Find the common of sylow p subgroups",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "A Hall subgroup must contain a Sylow p-group for each p in P.",
  "id": "5e5f87b290a829582403f88e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2020-03-04T10:49:22.630Z",
  "text": "A Hall subgroup must contain a Sylow p-group for each p in P.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Finding a Hall subgroup for several primes is probably harder than finding a Sylow subgroup.",
  "id": "5e5f8803ff6f6d2e88843663",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2020-03-04T10:50:43.023Z",
  "text": "Finding a Hall subgroup for several primes is probably harder than finding a Sylow subgroup.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "<blockquote>\n<p>This is not necessary. The order of a Hall subgroup does not have to be divisible be p if the order of the group is not.</p></blockquote>\n<p>can you explain please? beacuse to contain a subgroup for any prime the order of the group should be divisible by it sylow p subgroup also uses it.</p>",
  "id": "5e5f8887a157485cb471b03c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-04T10:52:55.024Z",
  "text": ">This is not necessary. The order of a Hall subgroup does not have to be divisible be p if the order of the group is not.\n\ncan you explain please? beacuse to contain a subgroup for any prime the order of the group should be divisible by it sylow p subgroup also uses it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2020-03-04T10:58:43.681Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "suppose <code>P = [2,3]</code> should&#39;nt be hall subgroup be intersection of <code>sylow 2 subgroup</code> and <code>sylow 3 subgroup</code> for any group G.just clarifying .",
  "id": "5e5f8976ec7f8746aab0aaba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-04T10:56:54.025Z",
  "text": "suppose `P = [2,3]` should'nt be hall subgroup be intersection of `sylow 2 subgroup` and `sylow 3 subgroup` for any group G.just clarifying .",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "The intersection of a Sylow 2-group and 3-group is a subgroup of both of them. The order of a subgroup of a 2-group is a power of 2 and that of a 3-group is a power of 3. The only subgroup whose order is both a power of 2 and a power of 3 is the trivial group of order 1.",
  "id": "5e5f8bac90a82958240403c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2020-03-04T11:06:20.379Z",
  "text": "The intersection of a Sylow 2-group and 3-group is a subgroup of both of them. The order of a subgroup of a 2-group is a power of 2 and that of a 3-group is a power of 3. The only subgroup whose order is both a power of 2 and a power of 3 is the trivial group of order 1.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "okay now I understood  ",
  "id": "5e5f8ce253fa513e286af54b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-04T11:11:30.407Z",
  "text": "okay now I understood  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2020-03-04T11:14:52.215Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "I just noticed Probably If H is already a <code>Hall subgroup</code> for a set of primes <code>P</code> then we can say that it is join of <code>sylow p subgroup</code> for p in P but it is not true vice versa.  I have to think more for devising a algo. ",
  "id": "5e5f8d97ec379e558ea4ca45",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-04T11:14:31.221Z",
  "text": "I just noticed Probably If H is already a `Hall subgroup` for a set of primes `P` then we can say that it is join of `sylow p subgroup` for p in P but it is not true vice versa.  I have to think more for devising a algo. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "<blockquote>\n<p>suppose <code>P = [2,3]</code> should&#39;nt be hall subgroup be intersection of <code>sylow 2 subgroup</code> and <code>sylow 3 subgroup</code> for any group G.just clarifying .</p></blockquote>\n<p>I was completely wrong </p>",
  "id": "5e5f8dc5376d882250ce15ff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-04T11:15:17.731Z",
  "text": "> suppose `P = [2,3]` should'nt be hall subgroup be intersection of `sylow 2 subgroup` and `sylow 3 subgroup` for any group G.just clarifying .\n\nI was completely wrong ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "<code>any subgroup of index 2 is normal</code> is the condition which we can used in <code>is_normal</code> method in <code>perm_groups.py</code> which will reduce further unnecessary steps. please see If I am saying anything wrong",
  "id": "5e6004c08e04426dd021c1ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-04T19:42:56.365Z",
  "text": "`any subgroup of index 2 is normal` is the condition which we can used in `is_normal` method in `perm_groups.py` which will reduce further unnecessary steps. please see If I am saying anything wrong",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Computation of the index will also take time. Besides, index 2 is probably rather uncommon.",
  "id": "5e600b8490a829582405b73b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-04T20:11:47.998Z",
  "text": "Computation of the index will also take time. Besides, index 2 is probably rather uncommon.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "computatation of index requires to compute degree maybe it is much efficient than going for computing further steps.",
  "id": "5e600c824eefc06dcf35303e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-04T20:16:02.552Z",
  "text": "computatation of index requires to compute degree maybe it is much efficient than going for computing further steps.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "<blockquote>\nBesides, index 2 is probably rather uncommon.</blockquote>\n",
  "id": "5e600e47a157485cb473586d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-04T20:23:35.962Z",
  "text": "> Besides, index 2 is probably rather uncommon.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "So should I leave it ?",
  "id": "5e600e568e04426dd021da2c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-04T20:23:50.267Z",
  "text": "So should I leave it ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Perhaps you could check how adding that test would affect the average time spent in <code>in_normal</code>.",
  "id": "5e60a8b353fa513e286e0429",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-05T07:22:27.072Z",
  "text": "Perhaps you could check how adding that test would affect the average time spent in `in_normal`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2020-03-06T10:24:48.225Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "I am elobarating few of the ideas that I mentioned previously:<ul>\n<li>Extend functionalities of polycyclic groups<br>There are various things that can be implemented such as:<br>1.)canonical polycyclic sequence for subgroup.<br>The pseudocode or Implementation of this algorithm is given in handbook and this is usefull in checking whether two subgroups of polycyclic presented group G are equal since every subgroup has unique canonical polycyclic sequence.This will be use as a helper method for the below method.<br>2.)check if two subgroups of a polycyclic presented groups are equal or not.<br>3.)polycyclic orbit-stabilizer algorithm:<br>This algorithm is also given in the handbook with detailed implementation.<br>4.)numerator pcgs<br>5.)denominator pcgs</li>\n</ul>\n",
  "id": "5e622483f59a0a73b6661149",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-06T10:22:59.899Z",
  "text": "I am elobarating few of the ideas that I mentioned previously:\n\n* Extend functionalities of polycyclic groups\nThere are various things that can be implemented such as:\n1.)canonical polycyclic sequence for subgroup.\nThe pseudocode or Implementation of this algorithm is given in handbook and this is usefull in checking whether two subgroups of polycyclic presented group G are equal since every subgroup has unique canonical polycyclic sequence.This will be use as a helper method for the below method.\n2.)check if two subgroups of a polycyclic presented groups are equal or not.\n3.)polycyclic orbit-stabilizer algorithm:\nThis algorithm is also given in the handbook with detailed implementation.\n4.)numerator pcgs \n5.)denominator pcgs\n",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "both numerator and denominator pcgs I have taken reference from the gap(<a href=\"https://www.biu.ac.il/os_site/documentation/gap4r1/ref/CHAP040.htm#SECT011\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://www.biu.ac.il/os_site/documentation/gap4r1/ref/CHAP040.htm#SECT011</a>) 40.9",
  "id": "5e6224cdc366b32c9adfe336",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-06T10:24:13.518Z",
  "text": "both numerator and denominator pcgs I have taken reference from the gap(https://www.biu.ac.il/os_site/documentation/gap4r1/ref/CHAP040.htm#SECT011) 40.9\n",
  "unread": false,
  "urls": [
   {
    "url": "https://www.biu.ac.il/os_site/documentation/gap4r1/ref/CHAP040.htm#SECT011"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "<ul>\n<li>Automorphism groups for finite solvable groups<br>I have started reading automorphism part from handbook chapter - 8 and also find the thesis with implentation of some usefull algorithms here (<a href=\"https://openresearch-repository.anu.edu.au/bitstream/1885/133102/4/b19051244_Smith_Michael_J.pdf\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://openresearch-repository.anu.edu.au/bitstream/1885/133102/4/b19051244_Smith_Michael_J.pdf</a>)</li>\n</ul>\n",
  "id": "5e62257b092e167804f50eaf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-06T10:27:07.160Z",
  "text": "* Automorphism groups for finite solvable groups\nI have started reading automorphism part from handbook chapter - 8 and also find the thesis with implentation of some usefull algorithms here (https://openresearch-repository.anu.edu.au/bitstream/1885/133102/4/b19051244_Smith_Michael_J.pdf)",
  "unread": false,
  "urls": [
   {
    "url": "https://openresearch-repository.anu.edu.au/bitstream/1885/133102/4/b19051244_Smith_Michael_J.pdf"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "<ul>\n<li>Quotient groups<br>As you have asked for what kind of groups I think for Finitely presented group (Fp group) In the chapter 9 of the handbook various algorithms are described which can be usefull.<br>some algorithms such as epimorphism can also be used for computing automorphism group.</li>\n</ul>\n",
  "id": "5e622719f59a0a73b6661bb5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-06T10:34:01.741Z",
  "text": "* Quotient groups\nAs you have asked for what kind of groups I think for Finitely presented group (Fp group) In the chapter 9 of the handbook various algorithms are described which can be usefull.\nsome algorithms such as epimorphism can also be used for computing automorphism group.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "I am still working for more descriptive description (As I am still reading the book) And btw I am thinking to start working on canonical polycyclic sequence.",
  "id": "5e62281317e80330db4f8914",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2020-03-06T10:38:11.970Z",
  "text": "I am still working for more descriptive description (As I am still reading the book) And btw I am thinking to start working on canonical polycyclic sequence.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2020-03-08T13:06:29.034Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "Addition of method to compute <code>homomorphism</code> from <code>one polycyclic group G</code> to <code>another polycyclic group H</code> would be usefull?<br>for a reference <code>gap</code> has a method for it where gens is the list of generators of G  and imgs are the list of images of elements of H.<pre><code><span class=\"function\"><span class=\"title\">GroupHomomorphismByImages</span><span class=\"params\">(G, H, gens, imgs)</span></span></code></pre>",
  "id": "5e64ed25cc10be22a0727f25",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2020-03-08T13:03:33.936Z",
  "text": "Addition of method to compute `homomorphism` from `one polycyclic group G` to `another polycyclic group H` would be usefull?\nfor a reference `gap` has a method for it where gens is the list of generators of G  and imgs are the list of images of elements of H.\n\n```\nGroupHomomorphismByImages(G, H, gens, imgs)\n```",
  "unread": true,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "I think that something like that has already been implemented.",
  "id": "5e64f404f046a30bbe4e521e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2020-03-08T13:32:52.140Z",
  "text": "I think that something like that has already been implemented.",
  "unread": true,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "just asking will that work for <code>polycyclic group</code>? beacuse the method we have now is checking whether the group G and H are <code>PermutationGroup, FpGroup, FreeGroup</code><pre><code>    <span class=\"keyword\">if</span> not <span class=\"function\"><span class=\"title\">isinstance</span><span class=\"params\">(domain, (PermutationGroup, FpGroup, FreeGroup)</span></span>):\n        raise <span class=\"function\"><span class=\"title\">TypeError</span><span class=\"params\">(<span class=\"string\">\"The domain must be a group\"</span>)</span></span>\n    <span class=\"keyword\">if</span> not <span class=\"function\"><span class=\"title\">isinstance</span><span class=\"params\">(codomain, (PermutationGroup, FpGroup, FreeGroup)</span></span>):\n        raise <span class=\"function\"><span class=\"title\">TypeError</span><span class=\"params\">(<span class=\"string\">\"The codomain must be a group\"</span>)</span></span></code></pre>",
  "id": "5e64f6c4a2ccef3232dd7a68",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2020-03-08T13:44:36.028Z",
  "text": "just asking will that work for `polycyclic group`? beacuse the method we have now is checking whether the group G and H are `PermutationGroup, FpGroup, FreeGroup`\n```\n    if not isinstance(domain, (PermutationGroup, FpGroup, FreeGroup)):\n        raise TypeError(\"The domain must be a group\")\n    if not isinstance(codomain, (PermutationGroup, FpGroup, FreeGroup)):\n        raise TypeError(\"The codomain must be a group\")\n```",
  "unread": true,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jksuom",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6929119?v=4&s=60",
   "displayName": "Kalevi Suominen",
   "gv": "4",
   "id": "53204afa5e986b0712efdf3d",
   "url": "/jksuom",
   "username": "jksuom",
   "v": 48
  },
  "html": "Polycyclic groups are actually special fp-groups. They are formed from a free group by relators that are called pc_presentation.",
  "id": "5e6501d1a2ccef3232dd9043",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2020-03-08T14:31:45.758Z",
  "text": "Polycyclic groups are actually special fp-groups. They are formed from a free group by relators that are called pc_presentation.",
  "unread": true,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "Okay understood will try to use it with polycyclic group",
  "id": "5e650b6280cc7b7924af6d27",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2020-03-08T15:12:34.477Z",
  "text": "Okay understood will try to use it with polycyclic group\n",
  "unread": true,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mohitacecode",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/39158356?v=4&s=60",
   "displayName": "mohit",
   "gv": "4",
   "id": "5c11f478d73408ce4fb1ca7c",
   "url": "/mohitacecode",
   "username": "mohitacecode",
   "v": 7
  },
  "html": "Can you please tell how should I use this method with polycyclic group?",
  "id": "5e653737f046a30bbe4ef113",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2020-03-08T18:19:35.025Z",
  "text": "Can you please tell how should I use this method with polycyclic group?",
  "unread": true,
  "urls": [],
  "v": 1
 }
]